

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat May 07 15:44:57 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     	;# 
    16  0001                     	;# 
    17  0002                     	;# 
    18  0003                     	;# 
    19  0004                     	;# 
    20  0005                     	;# 
    21  0006                     	;# 
    22  0007                     	;# 
    23  0008                     	;# 
    24  0009                     	;# 
    25  000A                     	;# 
    26  000B                     	;# 
    27  000C                     	;# 
    28  000D                     	;# 
    29  000E                     	;# 
    30  000E                     	;# 
    31  000F                     	;# 
    32  0010                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0013                     	;# 
    36  0014                     	;# 
    37  0015                     	;# 
    38  0015                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001B                     	;# 
    46  001C                     	;# 
    47  001D                     	;# 
    48  001E                     	;# 
    49  001F                     	;# 
    50  0081                     	;# 
    51  0085                     	;# 
    52  0086                     	;# 
    53  0087                     	;# 
    54  0088                     	;# 
    55  0089                     	;# 
    56  008C                     	;# 
    57  008D                     	;# 
    58  008E                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0098                     	;# 
    64  0099                     	;# 
    65  009C                     	;# 
    66  009D                     	;# 
    67  009E                     	;# 
    68  009F                     	;# 
    69  010C                     	;# 
    70  010D                     	;# 
    71  010E                     	;# 
    72  010F                     	;# 
    73  018C                     	;# 
    74  018D                     	;# 
    75                           
    76                           	psect	idataBANK0
    77  067E                     __pidataBANK0:	
    78                           
    79                           ;initializer for main@F1077
    80  067E  3447               	retlw	71
    81  067F  346F               	retlw	111
    82  0680  346F               	retlw	111
    83  0681  3464               	retlw	100
    84  0682  3420               	retlw	32
    85  0683  346D               	retlw	109
    86  0684  346F               	retlw	111
    87  0685  3472               	retlw	114
    88  0686  346E               	retlw	110
    89  0687  3469               	retlw	105
    90  0688  346E               	retlw	110
    91  0689  3467               	retlw	103
    92  068A  3421               	retlw	33
    93  068B  3400               	retlw	0
    94  0006                     _PORTB	set	6
    95  0086                     _TRISB	set	134
    96                           
    97                           	psect	cinit
    98  07F0                     start_initialization:	
    99                           ; #config settings
   100                           
   101  07F0                     __initialization:	
   102                           
   103                           ; Initialize objects allocated to BANK0
   104  07F0  1383               	bcf	3,7	;select IRP bank0
   105  07F1  303D               	movlw	low (__pdataBANK0+14)
   106  07F2  00FD               	movwf	btemp+-1
   107  07F3  3006               	movlw	high __pidataBANK0
   108  07F4  00FE               	movwf	btemp
   109  07F5  307E               	movlw	low __pidataBANK0
   110  07F6  00FF               	movwf	btemp+1
   111  07F7  302F               	movlw	low __pdataBANK0
   112  07F8  0084               	movwf	4
   113  07F9  120A  118A  2690   	fcall	init_ram0
   114  07FC                     end_of_initialization:	
   115                           ;End of C runtime variable initialization code
   116                           
   117  07FC                     __end_of__initialization:	
   118  07FC  0183               	clrf	3
   119  07FD  120A  118A  2F56   	ljmp	_main	;jump to C main() function
   120                           
   121                           	psect	dataBANK0
   122  002F                     __pdataBANK0:	
   123  002F                     main@F1077:	
   124  002F                     	ds	14
   125                           
   126                           	psect	inittext
   127  068C                     init_fetch0:	
   128                           ;	Called with low address in FSR and high address in W
   129                           
   130  068C  087E               	movf	126,w
   131  068D  008A               	movwf	10
   132  068E  087F               	movf	127,w
   133  068F  0082               	movwf	2
   134  0690                     init_ram0:	
   135                           ;Called with:
   136                           ;	high address of idata address in btemp 
   137                           ;	low address of idata address in btemp+1 
   138                           ;	low address of data in FSR
   139                           ;	high address + 1 of data in btemp-1
   140                           
   141  0690  268C  120A  118A   	fcall	init_fetch0
   142  0693  0080               	movwf	0
   143  0694  0A84               	incf	4,f
   144  0695  0804               	movf	4,w
   145  0696  067D               	xorwf	125,w
   146  0697  1903               	btfsc	3,2
   147  0698  3400               	retlw	0
   148  0699  0AFF               	incf	127,f
   149  069A  1903               	btfsc	3,2
   150  069B  0AFE               	incf	126,f
   151  069C  2E90               	goto	init_ram0
   152                           
   153                           	psect	cstackCOMMON
   154  0070                     __pcstackCOMMON:	
   155  0070                     ?_delay:	
   156  0070                     ?_Lcd_CmdWrite:	
   157                           ; 1 bytes @ 0x0
   158                           
   159  0070                     ?_Lcd_DataWrite:	
   160                           ; 1 bytes @ 0x0
   161                           
   162  0070                     ?_main:	
   163                           ; 1 bytes @ 0x0
   164                           
   165  0070                     delay@cnt:	
   166                           ; 2 bytes @ 0x0
   167                           
   168                           
   169                           ; 2 bytes @ 0x0
   170  0070                     	ds	2
   171  0072                     ??_delay:	
   172                           
   173                           ; 1 bytes @ 0x2
   174  0072                     	ds	1
   175  0073                     delay@i:	
   176                           
   177                           ; 2 bytes @ 0x3
   178  0073                     	ds	2
   179  0075                     ??_Lcd_CmdWrite:	
   180  0075                     ??_Lcd_DataWrite:	
   181                           ; 1 bytes @ 0x5
   182                           
   183                           
   184                           ; 1 bytes @ 0x5
   185  0075                     	ds	1
   186  0076                     Lcd_CmdWrite@cmd:	
   187  0076                     Lcd_DataWrite@dat:	
   188                           ; 1 bytes @ 0x6
   189                           
   190                           
   191                           ; 1 bytes @ 0x6
   192  0076                     	ds	1
   193  0077                     ??_main:	
   194                           
   195                           ; 1 bytes @ 0x7
   196  0077                     	ds	4
   197                           
   198                           	psect	cstackBANK0
   199  0020                     __pcstackBANK0:	
   200  0020                     main@a:	
   201                           
   202                           ; 14 bytes @ 0x0
   203  0020                     	ds	14
   204  002E                     main@i:	
   205                           
   206                           ; 1 bytes @ 0xE
   207  002E                     	ds	1
   208                           
   209                           	psect	maintext
   210  0756                     __pmaintext:	
   211 ;;
   212 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   213 ;;
   214 ;; *************** function _main *****************
   215 ;; Defined at:
   216 ;;		line 74 in file "main.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;  a              14    0[BANK0 ] unsigned char [14]
   221 ;;  i               1   14[BANK0 ] unsigned char 
   222 ;; Return value:  Size  Location     Type
   223 ;;                  2   18[None  ] int 
   224 ;; Registers used:
   225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   226 ;; Tracked objects:
   227 ;;		On entry : B00/0
   228 ;;		On exit  : 0/0
   229 ;;		Unchanged: 0/0
   230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   231 ;;      Params:         0       0       0       0       0
   232 ;;      Locals:         0      15       0       0       0
   233 ;;      Temps:          4       0       0       0       0
   234 ;;      Totals:         4      15       0       0       0
   235 ;;Total ram usage:       19 bytes
   236 ;; Hardware stack levels required when called:    2
   237 ;; This function calls:
   238 ;;		_Lcd_CmdWrite
   239 ;;		_Lcd_DataWrite
   240 ;; This function is called by:
   241 ;;		Startup code after reset
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           
   246                           ;psect for function _main
   247  0756                     _main:	
   248                           
   249                           ;main.c: 76: char i,a[]={"Good morning!"};
   250                           
   251                           ;incstack = 0
   252                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   253  0756  3020               	movlw	main@a& (0+255)
   254  0757  0084               	movwf	4
   255  0758  302F               	movlw	low main@F1077
   256  0759  00F7               	movwf	??_main
   257  075A  0804               	movf	4,w
   258  075B  00F8               	movwf	??_main+1
   259  075C  300E               	movlw	14
   260  075D  00F9               	movwf	??_main+2
   261  075E                     u90:	
   262  075E  0877               	movf	??_main,w
   263  075F  0084               	movwf	4
   264  0760  1383               	bcf	3,7	;select IRP bank0
   265  0761  0800               	movf	0,w
   266  0762  00FA               	movwf	??_main+3
   267  0763  0AF7               	incf	??_main,f
   268  0764  0878               	movf	??_main+1,w
   269  0765  0084               	movwf	4
   270  0766  087A               	movf	??_main+3,w
   271  0767  0080               	movwf	0
   272  0768  0AF8               	incf	??_main+1,f
   273  0769  0BF9               	decfsz	??_main+2,f
   274  076A  2F5E               	goto	u90
   275                           
   276                           ;main.c: 78: TRISB = 0x00;
   277  076B  1683               	bsf	3,5	;RP0=1, select bank1
   278  076C  1303               	bcf	3,6	;RP1=0, select bank1
   279  076D  0186               	clrf	6	;volatile
   280                           
   281                           ;main.c: 81: Lcd_CmdWrite(0x02);
   282  076E  3002               	movlw	2
   283  076F  120A  118A  2701  120A  118A  	fcall	_Lcd_CmdWrite
   284                           
   285                           ;main.c: 82: Lcd_CmdWrite(0x28);
   286  0774  3028               	movlw	40
   287  0775  120A  118A  2701  120A  118A  	fcall	_Lcd_CmdWrite
   288                           
   289                           ;main.c: 83: Lcd_CmdWrite(0x0E);
   290  077A  300E               	movlw	14
   291  077B  120A  118A  2701  120A  118A  	fcall	_Lcd_CmdWrite
   292                           
   293                           ;main.c: 84: Lcd_CmdWrite(0x01);
   294  0780  3001               	movlw	1
   295  0781  120A  118A  2701  120A  118A  	fcall	_Lcd_CmdWrite
   296                           
   297                           ;main.c: 85: Lcd_CmdWrite(0x80);
   298  0786  3080               	movlw	128
   299  0787  120A  118A  2701  120A  118A  	fcall	_Lcd_CmdWrite
   300                           
   301                           ;main.c: 88: Lcd_DataWrite('H');
   302  078C  3048               	movlw	72
   303  078D  120A  118A  26B2  120A  118A  	fcall	_Lcd_DataWrite
   304                           
   305                           ;main.c: 89: Lcd_DataWrite('e');
   306  0792  3065               	movlw	101
   307  0793  120A  118A  26B2  120A  118A  	fcall	_Lcd_DataWrite
   308                           
   309                           ;main.c: 90: Lcd_DataWrite('l');
   310  0798  306C               	movlw	108
   311  0799  120A  118A  26B2  120A  118A  	fcall	_Lcd_DataWrite
   312                           
   313                           ;main.c: 91: Lcd_DataWrite('l');
   314  079E  306C               	movlw	108
   315  079F  120A  118A  26B2  120A  118A  	fcall	_Lcd_DataWrite
   316                           
   317                           ;main.c: 92: Lcd_DataWrite('o');
   318  07A4  306F               	movlw	111
   319  07A5  120A  118A  26B2  120A  118A  	fcall	_Lcd_DataWrite
   320                           
   321                           ;main.c: 93: Lcd_DataWrite(' ');
   322  07AA  3020               	movlw	32
   323  07AB  120A  118A  26B2  120A  118A  	fcall	_Lcd_DataWrite
   324                           
   325                           ;main.c: 94: Lcd_DataWrite('w');
   326  07B0  3077               	movlw	119
   327  07B1  120A  118A  26B2  120A  118A  	fcall	_Lcd_DataWrite
   328                           
   329                           ;main.c: 95: Lcd_DataWrite('o');
   330  07B6  306F               	movlw	111
   331  07B7  120A  118A  26B2  120A  118A  	fcall	_Lcd_DataWrite
   332                           
   333                           ;main.c: 96: Lcd_DataWrite('r');
   334  07BC  3072               	movlw	114
   335  07BD  120A  118A  26B2  120A  118A  	fcall	_Lcd_DataWrite
   336                           
   337                           ;main.c: 97: Lcd_DataWrite('l');
   338  07C2  306C               	movlw	108
   339  07C3  120A  118A  26B2  120A  118A  	fcall	_Lcd_DataWrite
   340                           
   341                           ;main.c: 98: Lcd_DataWrite('d');
   342  07C8  3064               	movlw	100
   343  07C9  120A  118A  26B2  120A  118A  	fcall	_Lcd_DataWrite
   344                           
   345                           ;main.c: 100: Lcd_CmdWrite(0xc0);
   346  07CE  30C0               	movlw	192
   347  07CF  120A  118A  2701  120A  118A  	fcall	_Lcd_CmdWrite
   348                           
   349                           ;main.c: 101: for(i=0;a[i]!=0;i++)
   350  07D4  1283               	bcf	3,5	;RP0=0, select bank0
   351  07D5  1303               	bcf	3,6	;RP1=0, select bank0
   352  07D6  01AE               	clrf	main@i
   353  07D7                     l697:	
   354  07D7  082E               	movf	main@i,w
   355  07D8  3E20               	addlw	(low (main@a| 0))& (0+255)
   356  07D9  0084               	movwf	4
   357  07DA  1383               	bcf	3,7	;select IRP bank0
   358  07DB  0800               	movf	0,w
   359  07DC  1903               	btfsc	3,2
   360  07DD  2FEF               	goto	l24
   361                           
   362                           ;main.c: 102: {
   363                           ;main.c: 103: Lcd_DataWrite(a[i]);
   364  07DE  082E               	movf	main@i,w
   365  07DF  3E20               	addlw	(low (main@a| 0))& (0+255)
   366  07E0  0084               	movwf	4
   367  07E1  1383               	bcf	3,7	;select IRP bank0
   368  07E2  0800               	movf	0,w
   369  07E3  120A  118A  26B2  120A  118A  	fcall	_Lcd_DataWrite
   370  07E8  3001               	movlw	1
   371  07E9  00F7               	movwf	??_main
   372  07EA  0877               	movf	??_main,w
   373  07EB  1283               	bcf	3,5	;RP0=0, select bank0
   374  07EC  1303               	bcf	3,6	;RP1=0, select bank0
   375  07ED  07AE               	addwf	main@i,f
   376  07EE  2FD7               	goto	l697
   377  07EF                     l24:	
   378                           ;main.c: 104: }
   379                           ;main.c: 106: while(1);
   380                           
   381  07EF  2FEF               	goto	l24
   382  07F0                     __end_of_main:	
   383                           
   384                           	psect	text1
   385  06B2                     __ptext1:	
   386 ;; *************** function _Lcd_DataWrite *****************
   387 ;; Defined at:
   388 ;;		line 51 in file "main.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;  dat             1    wreg     unsigned char 
   391 ;; Auto vars:     Size  Location     Type
   392 ;;  dat             1    6[COMMON] unsigned char 
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, status,2, status,0, pclath, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   402 ;;      Params:         0       0       0       0       0
   403 ;;      Locals:         1       0       0       0       0
   404 ;;      Temps:          1       0       0       0       0
   405 ;;      Totals:         2       0       0       0       0
   406 ;;Total ram usage:        2 bytes
   407 ;; Hardware stack levels used:    1
   408 ;; Hardware stack levels required when called:    1
   409 ;; This function calls:
   410 ;;		_delay
   411 ;; This function is called by:
   412 ;;		_main
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416                           
   417                           ;psect for function _Lcd_DataWrite
   418  06B2                     _Lcd_DataWrite:	
   419                           
   420                           ;incstack = 0
   421                           ; Regs used in _Lcd_DataWrite: [wreg+status,2+status,0+pclath+cstack]
   422                           ;Lcd_DataWrite@dat stored from wreg
   423  06B2  00F6               	movwf	Lcd_DataWrite@dat
   424                           
   425                           ;main.c: 53: PORTB = (dat & 0xF0);
   426  06B3  0876               	movf	Lcd_DataWrite@dat,w
   427  06B4  39F0               	andlw	240
   428  06B5  1283               	bcf	3,5	;RP0=0, select bank0
   429  06B6  1303               	bcf	3,6	;RP1=0, select bank0
   430  06B7  0086               	movwf	6	;volatile
   431                           
   432                           ;main.c: 54: PORTB |= (1<<0);
   433  06B8  1406               	bsf	6,0	;volatile
   434                           
   435                           ;main.c: 55: PORTB &= ~(1<<1);
   436  06B9  30FD               	movlw	253
   437  06BA  00F5               	movwf	??_Lcd_DataWrite
   438  06BB  0875               	movf	??_Lcd_DataWrite,w
   439  06BC  0586               	andwf	6,f	;volatile
   440                           
   441                           ;main.c: 56: PORTB |= (1<<2);
   442  06BD  1506               	bsf	6,2	;volatile
   443                           
   444                           ;main.c: 57: delay(1000);
   445  06BE  30E8               	movlw	232
   446  06BF  00F0               	movwf	delay@cnt
   447  06C0  3003               	movlw	3
   448  06C1  00F1               	movwf	delay@cnt+1
   449  06C2  120A  118A  269D  120A  118A  	fcall	_delay
   450                           
   451                           ;main.c: 58: PORTB &= ~(1<<2);
   452  06C7  30FB               	movlw	251
   453  06C8  00F5               	movwf	??_Lcd_DataWrite
   454  06C9  0875               	movf	??_Lcd_DataWrite,w
   455  06CA  1283               	bcf	3,5	;RP0=0, select bank0
   456  06CB  1303               	bcf	3,6	;RP1=0, select bank0
   457  06CC  0586               	andwf	6,f	;volatile
   458                           
   459                           ;main.c: 60: delay(10000);
   460  06CD  3010               	movlw	16
   461  06CE  00F0               	movwf	delay@cnt
   462  06CF  3027               	movlw	39
   463  06D0  00F1               	movwf	delay@cnt+1
   464  06D1  120A  118A  269D  120A  118A  	fcall	_delay
   465                           
   466                           ;main.c: 62: PORTB = ((dat<<4) & 0xF0);
   467  06D6  0876               	movf	Lcd_DataWrite@dat,w
   468  06D7  00F5               	movwf	??_Lcd_DataWrite
   469  06D8  3003               	movlw	3
   470  06D9                     u85:	
   471  06D9  1003               	clrc
   472  06DA  0DF5               	rlf	??_Lcd_DataWrite,f
   473  06DB  3EFF               	addlw	-1
   474  06DC  1D03               	skipz
   475  06DD  2ED9               	goto	u85
   476  06DE  1003               	clrc
   477  06DF  0D75               	rlf	??_Lcd_DataWrite,w
   478  06E0  39F0               	andlw	240
   479  06E1  1283               	bcf	3,5	;RP0=0, select bank0
   480  06E2  1303               	bcf	3,6	;RP1=0, select bank0
   481  06E3  0086               	movwf	6	;volatile
   482                           
   483                           ;main.c: 63: PORTB |= (1<<0);
   484  06E4  1406               	bsf	6,0	;volatile
   485                           
   486                           ;main.c: 64: PORTB &= ~(1<<1);
   487  06E5  30FD               	movlw	253
   488  06E6  00F5               	movwf	??_Lcd_DataWrite
   489  06E7  0875               	movf	??_Lcd_DataWrite,w
   490  06E8  0586               	andwf	6,f	;volatile
   491                           
   492                           ;main.c: 65: PORTB |= (1<<2);
   493  06E9  1506               	bsf	6,2	;volatile
   494                           
   495                           ;main.c: 66: delay(1000);
   496  06EA  30E8               	movlw	232
   497  06EB  00F0               	movwf	delay@cnt
   498  06EC  3003               	movlw	3
   499  06ED  00F1               	movwf	delay@cnt+1
   500  06EE  120A  118A  269D  120A  118A  	fcall	_delay
   501                           
   502                           ;main.c: 67: PORTB &= ~(1<<2);
   503  06F3  30FB               	movlw	251
   504  06F4  00F5               	movwf	??_Lcd_DataWrite
   505  06F5  0875               	movf	??_Lcd_DataWrite,w
   506  06F6  1283               	bcf	3,5	;RP0=0, select bank0
   507  06F7  1303               	bcf	3,6	;RP1=0, select bank0
   508  06F8  0586               	andwf	6,f	;volatile
   509                           
   510                           ;main.c: 69: delay(10000);
   511  06F9  3010               	movlw	16
   512  06FA  00F0               	movwf	delay@cnt
   513  06FB  3027               	movlw	39
   514  06FC  00F1               	movwf	delay@cnt+1
   515  06FD  120A  118A  269D   	fcall	_delay
   516  0700  0008               	return
   517  0701                     __end_of_Lcd_DataWrite:	
   518                           
   519                           	psect	text2
   520  0701                     __ptext2:	
   521 ;; *************** function _Lcd_CmdWrite *****************
   522 ;; Defined at:
   523 ;;		line 26 in file "main.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;  cmd             1    wreg     unsigned char 
   526 ;; Auto vars:     Size  Location     Type
   527 ;;  cmd             1    6[COMMON] unsigned char 
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, status,2, status,0, pclath, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   537 ;;      Params:         0       0       0       0       0
   538 ;;      Locals:         1       0       0       0       0
   539 ;;      Temps:          1       0       0       0       0
   540 ;;      Totals:         2       0       0       0       0
   541 ;;Total ram usage:        2 bytes
   542 ;; Hardware stack levels used:    1
   543 ;; Hardware stack levels required when called:    1
   544 ;; This function calls:
   545 ;;		_delay
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           
   552                           ;psect for function _Lcd_CmdWrite
   553  0701                     _Lcd_CmdWrite:	
   554                           
   555                           ;incstack = 0
   556                           ; Regs used in _Lcd_CmdWrite: [wreg+status,2+status,0+pclath+cstack]
   557                           ;Lcd_CmdWrite@cmd stored from wreg
   558  0701  00F6               	movwf	Lcd_CmdWrite@cmd
   559                           
   560                           ;main.c: 28: PORTB = (cmd & 0xF0);
   561  0702  0876               	movf	Lcd_CmdWrite@cmd,w
   562  0703  39F0               	andlw	240
   563  0704  1283               	bcf	3,5	;RP0=0, select bank0
   564  0705  1303               	bcf	3,6	;RP1=0, select bank0
   565  0706  0086               	movwf	6	;volatile
   566                           
   567                           ;main.c: 29: PORTB &= ~(1<<0);
   568  0707  30FE               	movlw	254
   569  0708  00F5               	movwf	??_Lcd_CmdWrite
   570  0709  0875               	movf	??_Lcd_CmdWrite,w
   571  070A  0586               	andwf	6,f	;volatile
   572                           
   573                           ;main.c: 30: PORTB &= ~(1<<1);
   574  070B  30FD               	movlw	253
   575  070C  00F5               	movwf	??_Lcd_CmdWrite
   576  070D  0875               	movf	??_Lcd_CmdWrite,w
   577  070E  0586               	andwf	6,f	;volatile
   578                           
   579                           ;main.c: 31: PORTB |= (1<<2);
   580  070F  1506               	bsf	6,2	;volatile
   581                           
   582                           ;main.c: 32: delay(1000);
   583  0710  30E8               	movlw	232
   584  0711  00F0               	movwf	delay@cnt
   585  0712  3003               	movlw	3
   586  0713  00F1               	movwf	delay@cnt+1
   587  0714  120A  118A  269D  120A  118A  	fcall	_delay
   588                           
   589                           ;main.c: 33: PORTB &= ~(1<<2);
   590  0719  30FB               	movlw	251
   591  071A  00F5               	movwf	??_Lcd_CmdWrite
   592  071B  0875               	movf	??_Lcd_CmdWrite,w
   593  071C  1283               	bcf	3,5	;RP0=0, select bank0
   594  071D  1303               	bcf	3,6	;RP1=0, select bank0
   595  071E  0586               	andwf	6,f	;volatile
   596                           
   597                           ;main.c: 35: delay(10000);
   598  071F  3010               	movlw	16
   599  0720  00F0               	movwf	delay@cnt
   600  0721  3027               	movlw	39
   601  0722  00F1               	movwf	delay@cnt+1
   602  0723  120A  118A  269D  120A  118A  	fcall	_delay
   603                           
   604                           ;main.c: 37: PORTB = ((cmd<<4) & 0xF0);
   605  0728  0876               	movf	Lcd_CmdWrite@cmd,w
   606  0729  00F5               	movwf	??_Lcd_CmdWrite
   607  072A  3003               	movlw	3
   608  072B                     u75:	
   609  072B  1003               	clrc
   610  072C  0DF5               	rlf	??_Lcd_CmdWrite,f
   611  072D  3EFF               	addlw	-1
   612  072E  1D03               	skipz
   613  072F  2F2B               	goto	u75
   614  0730  1003               	clrc
   615  0731  0D75               	rlf	??_Lcd_CmdWrite,w
   616  0732  39F0               	andlw	240
   617  0733  1283               	bcf	3,5	;RP0=0, select bank0
   618  0734  1303               	bcf	3,6	;RP1=0, select bank0
   619  0735  0086               	movwf	6	;volatile
   620                           
   621                           ;main.c: 38: PORTB &= ~(1<<0);
   622  0736  30FE               	movlw	254
   623  0737  00F5               	movwf	??_Lcd_CmdWrite
   624  0738  0875               	movf	??_Lcd_CmdWrite,w
   625  0739  0586               	andwf	6,f	;volatile
   626                           
   627                           ;main.c: 39: PORTB &= ~(1<<1);
   628  073A  30FD               	movlw	253
   629  073B  00F5               	movwf	??_Lcd_CmdWrite
   630  073C  0875               	movf	??_Lcd_CmdWrite,w
   631  073D  0586               	andwf	6,f	;volatile
   632                           
   633                           ;main.c: 40: PORTB |= (1<<2);
   634  073E  1506               	bsf	6,2	;volatile
   635                           
   636                           ;main.c: 41: delay(1000);
   637  073F  30E8               	movlw	232
   638  0740  00F0               	movwf	delay@cnt
   639  0741  3003               	movlw	3
   640  0742  00F1               	movwf	delay@cnt+1
   641  0743  120A  118A  269D  120A  118A  	fcall	_delay
   642                           
   643                           ;main.c: 42: PORTB &= ~(1<<2);
   644  0748  30FB               	movlw	251
   645  0749  00F5               	movwf	??_Lcd_CmdWrite
   646  074A  0875               	movf	??_Lcd_CmdWrite,w
   647  074B  1283               	bcf	3,5	;RP0=0, select bank0
   648  074C  1303               	bcf	3,6	;RP1=0, select bank0
   649  074D  0586               	andwf	6,f	;volatile
   650                           
   651                           ;main.c: 44: delay(10000);
   652  074E  3010               	movlw	16
   653  074F  00F0               	movwf	delay@cnt
   654  0750  3027               	movlw	39
   655  0751  00F1               	movwf	delay@cnt+1
   656  0752  120A  118A  269D   	fcall	_delay
   657  0755  0008               	return
   658  0756                     __end_of_Lcd_CmdWrite:	
   659                           
   660                           	psect	text3
   661  069D                     __ptext3:	
   662 ;; *************** function _delay *****************
   663 ;; Defined at:
   664 ;;		line 16 in file "main.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;  cnt             2    0[COMMON] int 
   667 ;; Auto vars:     Size  Location     Type
   668 ;;  i               2    3[COMMON] int 
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, status,2
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         2       0       0       0       0
   679 ;;      Locals:         2       0       0       0       0
   680 ;;      Temps:          1       0       0       0       0
   681 ;;      Totals:         5       0       0       0       0
   682 ;;Total ram usage:        5 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; This function calls:
   685 ;;		Nothing
   686 ;; This function is called by:
   687 ;;		_Lcd_CmdWrite
   688 ;;		_Lcd_DataWrite
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           
   693                           ;psect for function _delay
   694  069D                     _delay:	
   695                           
   696                           ;main.c: 18: int i;
   697                           ;main.c: 19: for(i=0;i<cnt;i++);
   698                           
   699                           ;incstack = 0
   700                           ; Regs used in _delay: [wreg+status,2]
   701  069D  01F3               	clrf	delay@i
   702  069E  01F4               	clrf	delay@i+1
   703  069F                     l7:	
   704  069F  0874               	movf	delay@i+1,w
   705  06A0  3A80               	xorlw	128
   706  06A1  00F2               	movwf	??_delay
   707  06A2  0871               	movf	delay@cnt+1,w
   708  06A3  3A80               	xorlw	128
   709  06A4  0272               	subwf	??_delay,w
   710  06A5  1D03               	skipz
   711  06A6  2EA9               	goto	u65
   712  06A7  0870               	movf	delay@cnt,w
   713  06A8  0273               	subwf	delay@i,w
   714  06A9                     u65:	
   715  06A9  1803               	btfsc	3,0
   716  06AA  0008               	return
   717  06AB  3001               	movlw	1
   718  06AC  07F3               	addwf	delay@i,f
   719  06AD  1803               	skipnc
   720  06AE  0AF4               	incf	delay@i+1,f
   721  06AF  3000               	movlw	0
   722  06B0  07F4               	addwf	delay@i+1,f
   723  06B1  2E9F               	goto	l7
   724  06B2                     __end_of_delay:	
   725  007E                     btemp	set	126	;btemp
   726  007E                     wtemp	set	126
   727  007E                     wtemp0	set	126
   728  0080                     wtemp1	set	128
   729  0082                     wtemp2	set	130
   730  0084                     wtemp3	set	132
   731  0086                     wtemp4	set	134
   732  0088                     wtemp5	set	136
   733  007F                     wtemp6	set	127
   734  007E                     ttemp	set	126
   735  007E                     ttemp0	set	126
   736  0081                     ttemp1	set	129
   737  0084                     ttemp2	set	132
   738  0087                     ttemp3	set	135
   739  007F                     ttemp4	set	127
   740  007E                     ltemp	set	126
   741  007E                     ltemp0	set	126
   742  0082                     ltemp1	set	130
   743  0086                     ltemp2	set	134
   744  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     15      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Lcd_CmdWrite
    _main->_Lcd_DataWrite
    _Lcd_DataWrite->_delay
    _Lcd_CmdWrite->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0    1121
                                              7 COMMON     4     4      0
                                              0 BANK0     15    15      0
                       _Lcd_CmdWrite
                      _Lcd_DataWrite
 ---------------------------------------------------------------------------------
 (1) _Lcd_DataWrite                                        2     2      0     514
                                              5 COMMON     2     2      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _Lcd_CmdWrite                                         2     2      0     514
                                              5 COMMON     2     2      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     3      2     470
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_CmdWrite
     _delay
   _Lcd_DataWrite
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      1D       5       36.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      28      12        0.0%
ABS                  0      0      28       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat May 07 15:44:57 2016

                      l7 069F                        pc 0002                       l24 07EF  
                     u65 06A9                       u90 075E                       u75 072B  
                     u85 06D9                       fsr 0004                      l697 07D7  
                    fsr0 0004                      indf 0000                     _main 0756  
                   btemp 007E     __end_of_Lcd_CmdWrite 0756                     ltemp 007E  
                   start 0000                     ttemp 007E                     wtemp 007E  
                  ?_main 0070                    _PORTB 0006                    _TRISB 0086  
                  _delay 069D    __end_of_Lcd_DataWrite 0701                    main@a 0020  
                  main@i 002E                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07F0             __end_of_main 07F0  
                 ??_main 0077                   ?_delay 0070                   delay@i 0073  
  __size_of_Lcd_CmdWrite 0055  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 067E            __end_of_delay 06B2             _Lcd_CmdWrite 0701  
                ??_delay 0072               __pmaintext 0756         Lcd_DataWrite@dat 0076  
                __ptext1 06B2                  __ptext2 0701                  __ptext3 069D  
   end_of_initialization 07FC   __size_of_Lcd_DataWrite 004F      start_initialization 07F0  
          _Lcd_DataWrite 06B2               init_fetch0 068C              __pdataBANK0 002F  
              ___latbits 0002            __pcstackBANK0 0020           ?_Lcd_DataWrite 0070  
         __size_of_delay 0015                main@F1077 002F          Lcd_CmdWrite@cmd 0076  
        ??_Lcd_DataWrite 0075            ?_Lcd_CmdWrite 0070            __size_of_main 009A  
               delay@cnt 0070           ??_Lcd_CmdWrite 0075                 init_ram0 0690  
