

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat May 07 11:54:08 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     	;# 
    16  0001                     	;# 
    17  0002                     	;# 
    18  0003                     	;# 
    19  0004                     	;# 
    20  0005                     	;# 
    21  0006                     	;# 
    22  0007                     	;# 
    23  0008                     	;# 
    24  0009                     	;# 
    25  000A                     	;# 
    26  000B                     	;# 
    27  000C                     	;# 
    28  000D                     	;# 
    29  000E                     	;# 
    30  000E                     	;# 
    31  000F                     	;# 
    32  0010                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0013                     	;# 
    36  0014                     	;# 
    37  0015                     	;# 
    38  0015                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001B                     	;# 
    46  001C                     	;# 
    47  001D                     	;# 
    48  001E                     	;# 
    49  001F                     	;# 
    50  0081                     	;# 
    51  0085                     	;# 
    52  0086                     	;# 
    53  0087                     	;# 
    54  0088                     	;# 
    55  0089                     	;# 
    56  008C                     	;# 
    57  008D                     	;# 
    58  008E                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0098                     	;# 
    64  0099                     	;# 
    65  009C                     	;# 
    66  009D                     	;# 
    67  009E                     	;# 
    68  009F                     	;# 
    69  010C                     	;# 
    70  010D                     	;# 
    71  010E                     	;# 
    72  010F                     	;# 
    73  018C                     	;# 
    74  018D                     	;# 
    75                           
    76                           	psect	idataBANK0
    77  06E0                     __pidataBANK0:	
    78                           
    79                           ;initializer for main@F1077
    80  06E0  3447               	retlw	71
    81  06E1  346F               	retlw	111
    82  06E2  346F               	retlw	111
    83  06E3  3464               	retlw	100
    84  06E4  3420               	retlw	32
    85  06E5  346D               	retlw	109
    86  06E6  346F               	retlw	111
    87  06E7  3472               	retlw	114
    88  06E8  346E               	retlw	110
    89  06E9  3469               	retlw	105
    90  06EA  346E               	retlw	110
    91  06EB  3467               	retlw	103
    92  06EC  3421               	retlw	33
    93  06ED  3400               	retlw	0
    94  0006                     _PORTB	set	6
    95  0008                     _PORTD	set	8
    96  0086                     _TRISB	set	134
    97  0088                     _TRISD	set	136
    98                           
    99                           	psect	cinit
   100  07F0                     start_initialization:	
   101                           ; #config settings
   102                           
   103  07F0                     __initialization:	
   104                           
   105                           ; Initialize objects allocated to BANK0
   106  07F0  1383               	bcf	3,7	;select IRP bank0
   107  07F1  303D               	movlw	low (__pdataBANK0+14)
   108  07F2  00FD               	movwf	btemp+-1
   109  07F3  3006               	movlw	high __pidataBANK0
   110  07F4  00FE               	movwf	btemp
   111  07F5  30E0               	movlw	low __pidataBANK0
   112  07F6  00FF               	movwf	btemp+1
   113  07F7  302F               	movlw	low __pdataBANK0
   114  07F8  0084               	movwf	4
   115  07F9  120A  118A  26F2   	fcall	init_ram0
   116  07FC                     end_of_initialization:	
   117                           ;End of C runtime variable initialization code
   118                           
   119  07FC                     __end_of__initialization:	
   120  07FC  0183               	clrf	3
   121  07FD  120A  118A  2F5B   	ljmp	_main	;jump to C main() function
   122                           
   123                           	psect	dataBANK0
   124  002F                     __pdataBANK0:	
   125  002F                     main@F1077:	
   126  002F                     	ds	14
   127                           
   128                           	psect	inittext
   129  06EE                     init_fetch0:	
   130                           ;	Called with low address in FSR and high address in W
   131                           
   132  06EE  087E               	movf	126,w
   133  06EF  008A               	movwf	10
   134  06F0  087F               	movf	127,w
   135  06F1  0082               	movwf	2
   136  06F2                     init_ram0:	
   137                           ;Called with:
   138                           ;	high address of idata address in btemp 
   139                           ;	low address of idata address in btemp+1 
   140                           ;	low address of data in FSR
   141                           ;	high address + 1 of data in btemp-1
   142                           
   143  06F2  26EE  120A  118A   	fcall	init_fetch0
   144  06F5  0080               	movwf	0
   145  06F6  0A84               	incf	4,f
   146  06F7  0804               	movf	4,w
   147  06F8  067D               	xorwf	125,w
   148  06F9  1903               	btfsc	3,2
   149  06FA  3400               	retlw	0
   150  06FB  0AFF               	incf	127,f
   151  06FC  1903               	btfsc	3,2
   152  06FD  0AFE               	incf	126,f
   153  06FE  2EF2               	goto	init_ram0
   154                           
   155                           	psect	cstackCOMMON
   156  0070                     __pcstackCOMMON:	
   157  0070                     ?_delay:	
   158  0070                     ?_Lcd_CmdWrite:	
   159                           ; 1 bytes @ 0x0
   160                           
   161  0070                     ?_Lcd_DataWrite:	
   162                           ; 1 bytes @ 0x0
   163                           
   164  0070                     ?_main:	
   165                           ; 1 bytes @ 0x0
   166                           
   167  0070                     delay@cnt:	
   168                           ; 2 bytes @ 0x0
   169                           
   170                           
   171                           ; 2 bytes @ 0x0
   172  0070                     	ds	2
   173  0072                     ??_delay:	
   174                           
   175                           ; 1 bytes @ 0x2
   176  0072                     	ds	1
   177  0073                     delay@i:	
   178                           
   179                           ; 2 bytes @ 0x3
   180  0073                     	ds	2
   181  0075                     ??_Lcd_CmdWrite:	
   182  0075                     ??_Lcd_DataWrite:	
   183                           ; 1 bytes @ 0x5
   184                           
   185                           
   186                           ; 1 bytes @ 0x5
   187  0075                     	ds	1
   188  0076                     Lcd_CmdWrite@cmd:	
   189  0076                     Lcd_DataWrite@dat:	
   190                           ; 1 bytes @ 0x6
   191                           
   192                           
   193                           ; 1 bytes @ 0x6
   194  0076                     	ds	1
   195  0077                     ??_main:	
   196                           
   197                           ; 1 bytes @ 0x7
   198  0077                     	ds	4
   199                           
   200                           	psect	cstackBANK0
   201  0020                     __pcstackBANK0:	
   202  0020                     main@a:	
   203                           
   204                           ; 14 bytes @ 0x0
   205  0020                     	ds	14
   206  002E                     main@i:	
   207                           
   208                           ; 1 bytes @ 0xE
   209  002E                     	ds	1
   210                           
   211                           	psect	maintext
   212  075B                     __pmaintext:	
   213 ;;
   214 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   215 ;;
   216 ;; *************** function _main *****************
   217 ;; Defined at:
   218 ;;		line 54 in file "main.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;  a              14    0[BANK0 ] unsigned char [14]
   223 ;;  i               1   14[BANK0 ] unsigned char 
   224 ;; Return value:  Size  Location     Type
   225 ;;                  2   22[None  ] int 
   226 ;; Registers used:
   227 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   228 ;; Tracked objects:
   229 ;;		On entry : B00/0
   230 ;;		On exit  : 0/0
   231 ;;		Unchanged: 0/0
   232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   233 ;;      Params:         0       0       0       0       0
   234 ;;      Locals:         0      15       0       0       0
   235 ;;      Temps:          4       0       0       0       0
   236 ;;      Totals:         4      15       0       0       0
   237 ;;Total ram usage:       19 bytes
   238 ;; Hardware stack levels required when called:    2
   239 ;; This function calls:
   240 ;;		_Lcd_CmdWrite
   241 ;;		_Lcd_DataWrite
   242 ;; This function is called by:
   243 ;;		Startup code after reset
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           
   248                           ;psect for function _main
   249  075B                     _main:	
   250                           
   251                           ;main.c: 56: char i,a[]={"Good morning!"};
   252                           
   253                           ;incstack = 0
   254                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   255  075B  3020               	movlw	main@a& (0+255)
   256  075C  0084               	movwf	4
   257  075D  302F               	movlw	low main@F1077
   258  075E  00F7               	movwf	??_main
   259  075F  0804               	movf	4,w
   260  0760  00F8               	movwf	??_main+1
   261  0761  300E               	movlw	14
   262  0762  00F9               	movwf	??_main+2
   263  0763                     u50:	
   264  0763  0877               	movf	??_main,w
   265  0764  0084               	movwf	4
   266  0765  1383               	bcf	3,7	;select IRP bank0
   267  0766  0800               	movf	0,w
   268  0767  00FA               	movwf	??_main+3
   269  0768  0AF7               	incf	??_main,f
   270  0769  0878               	movf	??_main+1,w
   271  076A  0084               	movwf	4
   272  076B  087A               	movf	??_main+3,w
   273  076C  0080               	movwf	0
   274  076D  0AF8               	incf	??_main+1,f
   275  076E  0BF9               	decfsz	??_main+2,f
   276  076F  2F63               	goto	u50
   277                           
   278                           ;main.c: 58: TRISB = 0x00;
   279  0770  1683               	bsf	3,5	;RP0=1, select bank1
   280  0771  1303               	bcf	3,6	;RP1=0, select bank1
   281  0772  0186               	clrf	6	;volatile
   282                           
   283                           ;main.c: 59: TRISD = 0x00;
   284  0773  0188               	clrf	8	;volatile
   285                           
   286                           ;main.c: 62: Lcd_CmdWrite(0x38);
   287  0774  3038               	movlw	56
   288  0775  120A  118A  2736  120A  118A  	fcall	_Lcd_CmdWrite
   289                           
   290                           ;main.c: 63: Lcd_CmdWrite(0x0E);
   291  077A  300E               	movlw	14
   292  077B  120A  118A  2736  120A  118A  	fcall	_Lcd_CmdWrite
   293                           
   294                           ;main.c: 64: Lcd_CmdWrite(0x01);
   295  0780  3001               	movlw	1
   296  0781  120A  118A  2736  120A  118A  	fcall	_Lcd_CmdWrite
   297                           
   298                           ;main.c: 65: Lcd_CmdWrite(0x80);
   299  0786  3080               	movlw	128
   300  0787  120A  118A  2736  120A  118A  	fcall	_Lcd_CmdWrite
   301                           
   302                           ;main.c: 68: Lcd_DataWrite('H');
   303  078C  3048               	movlw	72
   304  078D  120A  118A  2714  120A  118A  	fcall	_Lcd_DataWrite
   305                           
   306                           ;main.c: 69: Lcd_DataWrite('e');
   307  0792  3065               	movlw	101
   308  0793  120A  118A  2714  120A  118A  	fcall	_Lcd_DataWrite
   309                           
   310                           ;main.c: 70: Lcd_DataWrite('l');
   311  0798  306C               	movlw	108
   312  0799  120A  118A  2714  120A  118A  	fcall	_Lcd_DataWrite
   313                           
   314                           ;main.c: 71: Lcd_DataWrite('l');
   315  079E  306C               	movlw	108
   316  079F  120A  118A  2714  120A  118A  	fcall	_Lcd_DataWrite
   317                           
   318                           ;main.c: 72: Lcd_DataWrite('o');
   319  07A4  306F               	movlw	111
   320  07A5  120A  118A  2714  120A  118A  	fcall	_Lcd_DataWrite
   321                           
   322                           ;main.c: 73: Lcd_DataWrite(' ');
   323  07AA  3020               	movlw	32
   324  07AB  120A  118A  2714  120A  118A  	fcall	_Lcd_DataWrite
   325                           
   326                           ;main.c: 74: Lcd_DataWrite('w');
   327  07B0  3077               	movlw	119
   328  07B1  120A  118A  2714  120A  118A  	fcall	_Lcd_DataWrite
   329                           
   330                           ;main.c: 75: Lcd_DataWrite('o');
   331  07B6  306F               	movlw	111
   332  07B7  120A  118A  2714  120A  118A  	fcall	_Lcd_DataWrite
   333                           
   334                           ;main.c: 76: Lcd_DataWrite('r');
   335  07BC  3072               	movlw	114
   336  07BD  120A  118A  2714  120A  118A  	fcall	_Lcd_DataWrite
   337                           
   338                           ;main.c: 77: Lcd_DataWrite('l');
   339  07C2  306C               	movlw	108
   340  07C3  120A  118A  2714  120A  118A  	fcall	_Lcd_DataWrite
   341                           
   342                           ;main.c: 78: Lcd_DataWrite('d');
   343  07C8  3064               	movlw	100
   344  07C9  120A  118A  2714  120A  118A  	fcall	_Lcd_DataWrite
   345                           
   346                           ;main.c: 80: Lcd_CmdWrite(0xc0);
   347  07CE  30C0               	movlw	192
   348  07CF  120A  118A  2736  120A  118A  	fcall	_Lcd_CmdWrite
   349                           
   350                           ;main.c: 81: for(i=0;a[i]!=0;i++)
   351  07D4  1283               	bcf	3,5	;RP0=0, select bank0
   352  07D5  1303               	bcf	3,6	;RP1=0, select bank0
   353  07D6  01AE               	clrf	main@i
   354  07D7                     l645:	
   355  07D7  082E               	movf	main@i,w
   356  07D8  3E20               	addlw	(low (main@a| 0))& (0+255)
   357  07D9  0084               	movwf	4
   358  07DA  1383               	bcf	3,7	;select IRP bank0
   359  07DB  0800               	movf	0,w
   360  07DC  1903               	btfsc	3,2
   361  07DD  2FEF               	goto	l28
   362                           
   363                           ;main.c: 82: {
   364                           ;main.c: 83: Lcd_DataWrite(a[i]);
   365  07DE  082E               	movf	main@i,w
   366  07DF  3E20               	addlw	(low (main@a| 0))& (0+255)
   367  07E0  0084               	movwf	4
   368  07E1  1383               	bcf	3,7	;select IRP bank0
   369  07E2  0800               	movf	0,w
   370  07E3  120A  118A  2714  120A  118A  	fcall	_Lcd_DataWrite
   371  07E8  3001               	movlw	1
   372  07E9  00F7               	movwf	??_main
   373  07EA  0877               	movf	??_main,w
   374  07EB  1283               	bcf	3,5	;RP0=0, select bank0
   375  07EC  1303               	bcf	3,6	;RP1=0, select bank0
   376  07ED  07AE               	addwf	main@i,f
   377  07EE  2FD7               	goto	l645
   378  07EF                     l28:	
   379                           ;main.c: 84: }
   380                           ;main.c: 86: while(1);
   381                           
   382  07EF  2FEF               	goto	l28
   383  07F0                     __end_of_main:	
   384                           
   385                           	psect	text1
   386  0714                     __ptext1:	
   387 ;; *************** function _Lcd_DataWrite *****************
   388 ;; Defined at:
   389 ;;		line 40 in file "main.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;  dat             1    wreg     unsigned char 
   392 ;; Auto vars:     Size  Location     Type
   393 ;;  dat             1    6[COMMON] unsigned char 
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2, status,0, pclath, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   403 ;;      Params:         0       0       0       0       0
   404 ;;      Locals:         1       0       0       0       0
   405 ;;      Temps:          1       0       0       0       0
   406 ;;      Totals:         2       0       0       0       0
   407 ;;Total ram usage:        2 bytes
   408 ;; Hardware stack levels used:    1
   409 ;; Hardware stack levels required when called:    1
   410 ;; This function calls:
   411 ;;		_delay
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           
   418                           ;psect for function _Lcd_DataWrite
   419  0714                     _Lcd_DataWrite:	
   420                           
   421                           ;incstack = 0
   422                           ; Regs used in _Lcd_DataWrite: [wreg+status,2+status,0+pclath+cstack]
   423                           ;Lcd_DataWrite@dat stored from wreg
   424  0714  00F6               	movwf	Lcd_DataWrite@dat
   425                           
   426                           ;main.c: 42: PORTB = dat;
   427  0715  0876               	movf	Lcd_DataWrite@dat,w
   428  0716  1283               	bcf	3,5	;RP0=0, select bank0
   429  0717  1303               	bcf	3,6	;RP1=0, select bank0
   430  0718  0086               	movwf	6	;volatile
   431                           
   432                           ;main.c: 43: PORTD |= (1<<0);
   433  0719  1408               	bsf	8,0	;volatile
   434                           
   435                           ;main.c: 44: PORTD &= ~(1<<1);
   436  071A  30FD               	movlw	253
   437  071B  00F5               	movwf	??_Lcd_DataWrite
   438  071C  0875               	movf	??_Lcd_DataWrite,w
   439  071D  0588               	andwf	8,f	;volatile
   440                           
   441                           ;main.c: 45: PORTD |= (1<<2);
   442  071E  1508               	bsf	8,2	;volatile
   443                           
   444                           ;main.c: 46: delay(100);
   445  071F  3064               	movlw	100
   446  0720  00F0               	movwf	delay@cnt
   447  0721  3000               	movlw	0
   448  0722  00F1               	movwf	delay@cnt+1
   449  0723  120A  118A  26FF  120A  118A  	fcall	_delay
   450                           
   451                           ;main.c: 47: PORTD &= ~(1<<2);
   452  0728  30FB               	movlw	251
   453  0729  00F5               	movwf	??_Lcd_DataWrite
   454  072A  0875               	movf	??_Lcd_DataWrite,w
   455  072B  1283               	bcf	3,5	;RP0=0, select bank0
   456  072C  1303               	bcf	3,6	;RP1=0, select bank0
   457  072D  0588               	andwf	8,f	;volatile
   458                           
   459                           ;main.c: 49: delay(10000);
   460  072E  3010               	movlw	16
   461  072F  00F0               	movwf	delay@cnt
   462  0730  3027               	movlw	39
   463  0731  00F1               	movwf	delay@cnt+1
   464  0732  120A  118A  26FF   	fcall	_delay
   465  0735  0008               	return
   466  0736                     __end_of_Lcd_DataWrite:	
   467                           
   468                           	psect	text2
   469  0736                     __ptext2:	
   470 ;; *************** function _Lcd_CmdWrite *****************
   471 ;; Defined at:
   472 ;;		line 25 in file "main.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;  cmd             1    wreg     unsigned char 
   475 ;; Auto vars:     Size  Location     Type
   476 ;;  cmd             1    6[COMMON] unsigned char 
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      void 
   479 ;; Registers used:
   480 ;;		wreg, status,2, status,0, pclath, cstack
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   486 ;;      Params:         0       0       0       0       0
   487 ;;      Locals:         1       0       0       0       0
   488 ;;      Temps:          1       0       0       0       0
   489 ;;      Totals:         2       0       0       0       0
   490 ;;Total ram usage:        2 bytes
   491 ;; Hardware stack levels used:    1
   492 ;; Hardware stack levels required when called:    1
   493 ;; This function calls:
   494 ;;		_delay
   495 ;; This function is called by:
   496 ;;		_main
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           
   501                           ;psect for function _Lcd_CmdWrite
   502  0736                     _Lcd_CmdWrite:	
   503                           
   504                           ;incstack = 0
   505                           ; Regs used in _Lcd_CmdWrite: [wreg+status,2+status,0+pclath+cstack]
   506                           ;Lcd_CmdWrite@cmd stored from wreg
   507  0736  00F6               	movwf	Lcd_CmdWrite@cmd
   508                           
   509                           ;main.c: 27: PORTB = cmd;
   510  0737  0876               	movf	Lcd_CmdWrite@cmd,w
   511  0738  1283               	bcf	3,5	;RP0=0, select bank0
   512  0739  1303               	bcf	3,6	;RP1=0, select bank0
   513  073A  0086               	movwf	6	;volatile
   514                           
   515                           ;main.c: 28: PORTD &= ~(1<<0);
   516  073B  30FE               	movlw	254
   517  073C  00F5               	movwf	??_Lcd_CmdWrite
   518  073D  0875               	movf	??_Lcd_CmdWrite,w
   519  073E  0588               	andwf	8,f	;volatile
   520                           
   521                           ;main.c: 29: PORTD &= ~(1<<1);
   522  073F  30FD               	movlw	253
   523  0740  00F5               	movwf	??_Lcd_CmdWrite
   524  0741  0875               	movf	??_Lcd_CmdWrite,w
   525  0742  0588               	andwf	8,f	;volatile
   526                           
   527                           ;main.c: 30: PORTD |= (1<<2);
   528  0743  1508               	bsf	8,2	;volatile
   529                           
   530                           ;main.c: 31: delay(100);
   531  0744  3064               	movlw	100
   532  0745  00F0               	movwf	delay@cnt
   533  0746  3000               	movlw	0
   534  0747  00F1               	movwf	delay@cnt+1
   535  0748  120A  118A  26FF  120A  118A  	fcall	_delay
   536                           
   537                           ;main.c: 32: PORTD &= ~(1<<2);
   538  074D  30FB               	movlw	251
   539  074E  00F5               	movwf	??_Lcd_CmdWrite
   540  074F  0875               	movf	??_Lcd_CmdWrite,w
   541  0750  1283               	bcf	3,5	;RP0=0, select bank0
   542  0751  1303               	bcf	3,6	;RP1=0, select bank0
   543  0752  0588               	andwf	8,f	;volatile
   544                           
   545                           ;main.c: 34: delay(10000);
   546  0753  3010               	movlw	16
   547  0754  00F0               	movwf	delay@cnt
   548  0755  3027               	movlw	39
   549  0756  00F1               	movwf	delay@cnt+1
   550  0757  120A  118A  26FF   	fcall	_delay
   551  075A  0008               	return
   552  075B                     __end_of_Lcd_CmdWrite:	
   553                           
   554                           	psect	text3
   555  06FF                     __ptext3:	
   556 ;; *************** function _delay *****************
   557 ;; Defined at:
   558 ;;		line 17 in file "main.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;  cnt             2    0[COMMON] int 
   561 ;; Auto vars:     Size  Location     Type
   562 ;;  i               2    3[COMMON] int 
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, status,2
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   572 ;;      Params:         2       0       0       0       0
   573 ;;      Locals:         2       0       0       0       0
   574 ;;      Temps:          1       0       0       0       0
   575 ;;      Totals:         5       0       0       0       0
   576 ;;Total ram usage:        5 bytes
   577 ;; Hardware stack levels used:    1
   578 ;; This function calls:
   579 ;;		Nothing
   580 ;; This function is called by:
   581 ;;		_Lcd_CmdWrite
   582 ;;		_Lcd_DataWrite
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           
   587                           ;psect for function _delay
   588  06FF                     _delay:	
   589                           
   590                           ;main.c: 19: int i;
   591                           ;main.c: 20: for(i=0;i<cnt;i++);
   592                           
   593                           ;incstack = 0
   594                           ; Regs used in _delay: [wreg+status,2]
   595  06FF  01F3               	clrf	delay@i
   596  0700  01F4               	clrf	delay@i+1
   597  0701                     l11:	
   598  0701  0874               	movf	delay@i+1,w
   599  0702  3A80               	xorlw	128
   600  0703  00F2               	movwf	??_delay
   601  0704  0871               	movf	delay@cnt+1,w
   602  0705  3A80               	xorlw	128
   603  0706  0272               	subwf	??_delay,w
   604  0707  1D03               	skipz
   605  0708  2F0B               	goto	u45
   606  0709  0870               	movf	delay@cnt,w
   607  070A  0273               	subwf	delay@i,w
   608  070B                     u45:	
   609  070B  1803               	btfsc	3,0
   610  070C  0008               	return
   611  070D  3001               	movlw	1
   612  070E  07F3               	addwf	delay@i,f
   613  070F  1803               	skipnc
   614  0710  0AF4               	incf	delay@i+1,f
   615  0711  3000               	movlw	0
   616  0712  07F4               	addwf	delay@i+1,f
   617  0713  2F01               	goto	l11
   618  0714                     __end_of_delay:	
   619  007E                     btemp	set	126	;btemp
   620  007E                     wtemp	set	126
   621  007E                     wtemp0	set	126
   622  0080                     wtemp1	set	128
   623  0082                     wtemp2	set	130
   624  0084                     wtemp3	set	132
   625  0086                     wtemp4	set	134
   626  0088                     wtemp5	set	136
   627  007F                     wtemp6	set	127
   628  007E                     ttemp	set	126
   629  007E                     ttemp0	set	126
   630  0081                     ttemp1	set	129
   631  0084                     ttemp2	set	132
   632  0087                     ttemp3	set	135
   633  007F                     ttemp4	set	127
   634  007E                     ltemp	set	126
   635  007E                     ltemp0	set	126
   636  0082                     ltemp1	set	130
   637  0086                     ltemp2	set	134
   638  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     15      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Lcd_CmdWrite
    _main->_Lcd_DataWrite
    _Lcd_DataWrite->_delay
    _Lcd_CmdWrite->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0     653
                                              7 COMMON     4     4      0
                                              0 BANK0     15    15      0
                       _Lcd_CmdWrite
                      _Lcd_DataWrite
 ---------------------------------------------------------------------------------
 (1) _Lcd_DataWrite                                        2     2      0     280
                                              5 COMMON     2     2      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _Lcd_CmdWrite                                         2     2      0     280
                                              5 COMMON     2     2      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     3      2     258
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_CmdWrite
     _delay
   _Lcd_DataWrite
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      1D       5       36.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      28      12        0.0%
ABS                  0      0      28       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat May 07 11:54:08 2016

                      pc 0002                       l11 0701                       l28 07EF  
                     u50 0763                       u45 070B                       fsr 0004  
                    l645 07D7                      fsr0 0004                      indf 0000  
                   _main 075B                     btemp 007E     __end_of_Lcd_CmdWrite 075B  
                   ltemp 007E                     start 0000                     ttemp 007E  
                   wtemp 007E                    ?_main 0070                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _delay 06FF    __end_of_Lcd_DataWrite 0736                    main@a 0020  
                  main@i 002E                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07F0             __end_of_main 07F0  
                 ??_main 0077                   ?_delay 0070                   delay@i 0073  
  __size_of_Lcd_CmdWrite 0025  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 06E0            __end_of_delay 0714             _Lcd_CmdWrite 0736  
                ??_delay 0072               __pmaintext 075B         Lcd_DataWrite@dat 0076  
                __ptext1 0714                  __ptext2 0736                  __ptext3 06FF  
   end_of_initialization 07FC   __size_of_Lcd_DataWrite 0022      start_initialization 07F0  
          _Lcd_DataWrite 0714               init_fetch0 06EE              __pdataBANK0 002F  
              ___latbits 0002            __pcstackBANK0 0020           ?_Lcd_DataWrite 0070  
         __size_of_delay 0015                main@F1077 002F          Lcd_CmdWrite@cmd 0076  
        ??_Lcd_DataWrite 0075            ?_Lcd_CmdWrite 0070            __size_of_main 0095  
               delay@cnt 0070           ??_Lcd_CmdWrite 0075                 init_ram0 06F2  
