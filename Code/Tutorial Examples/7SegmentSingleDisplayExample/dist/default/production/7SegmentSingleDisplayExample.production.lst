

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Fri May 06 15:27:36 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     	;# 
    14  0001                     	;# 
    15  0002                     	;# 
    16  0003                     	;# 
    17  0004                     	;# 
    18  0005                     	;# 
    19  0006                     	;# 
    20  0007                     	;# 
    21  0008                     	;# 
    22  0009                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000D                     	;# 
    27  000E                     	;# 
    28  000E                     	;# 
    29  000F                     	;# 
    30  0010                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001B                     	;# 
    44  001C                     	;# 
    45  001D                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  0081                     	;# 
    49  0085                     	;# 
    50  0086                     	;# 
    51  0087                     	;# 
    52  0088                     	;# 
    53  0089                     	;# 
    54  008C                     	;# 
    55  008D                     	;# 
    56  008E                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0094                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  010F                     	;# 
    71  018C                     	;# 
    72  018D                     	;# 
    73                           
    74                           	psect	idataBANK0
    75  076D                     __pidataBANK0:	
    76                           
    77                           ;initializer for main@F1073
    78  076D  34C0               	retlw	192
    79  076E  34F9               	retlw	249
    80  076F  34A4               	retlw	164
    81  0770  34B0               	retlw	176
    82  0771  3499               	retlw	153
    83  0772  3492               	retlw	146
    84  0773  3482               	retlw	130
    85  0774  34F8               	retlw	248
    86  0775  3480               	retlw	128
    87  0776  3490               	retlw	144
    88  0008                     _PORTD	set	8
    89  0088                     _TRISD	set	136
    90                           
    91                           	psect	cinit
    92  07F0                     start_initialization:	
    93                           ; #config settings
    94                           
    95  07F0                     __initialization:	
    96                           
    97                           ; Initialize objects allocated to BANK0
    98  07F0  1383               	bcf	3,7	;select IRP bank0
    99  07F1  3036               	movlw	low (__pdataBANK0+10)
   100  07F2  00FD               	movwf	btemp+-1
   101  07F3  3007               	movlw	high __pidataBANK0
   102  07F4  00FE               	movwf	btemp
   103  07F5  306D               	movlw	low __pidataBANK0
   104  07F6  00FF               	movwf	btemp+1
   105  07F7  302C               	movlw	low __pdataBANK0
   106  07F8  0084               	movwf	4
   107  07F9  120A  118A  277B   	fcall	init_ram0
   108  07FC                     end_of_initialization:	
   109                           ;End of C runtime variable initialization code
   110                           
   111  07FC                     __end_of__initialization:	
   112  07FC  0183               	clrf	3
   113  07FD  120A  118A  2FAF   	ljmp	_main	;jump to C main() function
   114                           
   115                           	psect	dataBANK0
   116  002C                     __pdataBANK0:	
   117  002C                     main@F1073:	
   118  002C                     	ds	10
   119                           
   120                           	psect	inittext
   121  0777                     init_fetch0:	
   122                           ;	Called with low address in FSR and high address in W
   123                           
   124  0777  087E               	movf	126,w
   125  0778  008A               	movwf	10
   126  0779  087F               	movf	127,w
   127  077A  0082               	movwf	2
   128  077B                     init_ram0:	
   129                           ;Called with:
   130                           ;	high address of idata address in btemp 
   131                           ;	low address of idata address in btemp+1 
   132                           ;	low address of data in FSR
   133                           ;	high address + 1 of data in btemp-1
   134                           
   135  077B  2777  120A  118A   	fcall	init_fetch0
   136  077E  0080               	movwf	0
   137  077F  0A84               	incf	4,f
   138  0780  0804               	movf	4,w
   139  0781  067D               	xorwf	125,w
   140  0782  1903               	btfsc	3,2
   141  0783  3400               	retlw	0
   142  0784  0AFF               	incf	127,f
   143  0785  1903               	btfsc	3,2
   144  0786  0AFE               	incf	126,f
   145  0787  2F7B               	goto	init_ram0
   146                           
   147                           	psect	cstackCOMMON
   148  0070                     __pcstackCOMMON:	
   149  0070                     ?_DELAY_ms:	
   150  0070                     ?_main:	
   151                           ; 1 bytes @ 0x0
   152                           
   153  0070                     DELAY_ms@ms_Count:	
   154                           ; 2 bytes @ 0x0
   155                           
   156                           
   157                           ; 2 bytes @ 0x0
   158  0070                     	ds	2
   159  0072                     ??_DELAY_ms:	
   160  0072                     DELAY_ms@i:	
   161                           ; 1 bytes @ 0x2
   162                           
   163                           
   164                           ; 2 bytes @ 0x2
   165  0072                     	ds	2
   166  0074                     DELAY_ms@j:	
   167                           
   168                           ; 2 bytes @ 0x4
   169  0074                     	ds	2
   170  0076                     ??_main:	
   171                           
   172                           ; 1 bytes @ 0x6
   173  0076                     	ds	4
   174                           
   175                           	psect	cstackBANK0
   176  0020                     __pcstackBANK0:	
   177  0020                     main@seg_code:	
   178                           
   179                           ; 10 bytes @ 0x0
   180  0020                     	ds	10
   181  002A                     main@i:	
   182                           
   183                           ; 2 bytes @ 0xA
   184  002A                     	ds	2
   185                           
   186                           	psect	maintext
   187  07AF                     __pmaintext:	
   188 ;;
   189 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   190 ;;
   191 ;; *************** function _main *****************
   192 ;; Defined at:
   193 ;;		line 13 in file "main.c"
   194 ;; Parameters:    Size  Location     Type
   195 ;;		None
   196 ;; Auto vars:     Size  Location     Type
   197 ;;  seg_code       10    0[BANK0 ] unsigned char [10]
   198 ;;  i               2   10[BANK0 ] int 
   199 ;; Return value:  Size  Location     Type
   200 ;;                  2   14[None  ] int 
   201 ;; Registers used:
   202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   203 ;; Tracked objects:
   204 ;;		On entry : B00/0
   205 ;;		On exit  : 0/0
   206 ;;		Unchanged: 0/0
   207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   208 ;;      Params:         0       0       0       0       0
   209 ;;      Locals:         0      12       0       0       0
   210 ;;      Temps:          4       0       0       0       0
   211 ;;      Totals:         4      12       0       0       0
   212 ;;Total ram usage:       16 bytes
   213 ;; Hardware stack levels required when called:    1
   214 ;; This function calls:
   215 ;;		_DELAY_ms
   216 ;; This function is called by:
   217 ;;		Startup code after reset
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221                           
   222                           ;psect for function _main
   223  07AF                     _main:	
   224                           
   225                           ;main.c: 14: char seg_code[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};
   226                           
   227                           ;incstack = 0
   228                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   229  07AF  3020               	movlw	main@seg_code& (0+255)
   230  07B0  0084               	movwf	4
   231  07B1  302C               	movlw	low main@F1073
   232  07B2  00F6               	movwf	??_main
   233  07B3  0804               	movf	4,w
   234  07B4  00F7               	movwf	??_main+1
   235  07B5  300A               	movlw	10
   236  07B6  00F8               	movwf	??_main+2
   237  07B7                     u100:	
   238  07B7  0876               	movf	??_main,w
   239  07B8  0084               	movwf	4
   240  07B9  1383               	bcf	3,7	;select IRP bank0
   241  07BA  0800               	movf	0,w
   242  07BB  00F9               	movwf	??_main+3
   243  07BC  0AF6               	incf	??_main,f
   244  07BD  0877               	movf	??_main+1,w
   245  07BE  0084               	movwf	4
   246  07BF  0879               	movf	??_main+3,w
   247  07C0  0080               	movwf	0
   248  07C1  0AF7               	incf	??_main+1,f
   249  07C2  0BF8               	decfsz	??_main+2,f
   250  07C3  2FB7               	goto	u100
   251                           
   252                           ;main.c: 15: int i;
   253                           ;main.c: 18: TRISD = 0x00;
   254  07C4  1683               	bsf	3,5	;RP0=1, select bank1
   255  07C5  1303               	bcf	3,6	;RP1=0, select bank1
   256  07C6  0188               	clrf	8	;volatile
   257  07C7                     l528:	
   258                           ;main.c: 20: while (1)
   259                           
   260                           
   261                           ;main.c: 21: {
   262                           ;main.c: 22: for (i = 0; i <= 9; i++)
   263  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   264  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   265  07C9  01AA               	clrf	main@i
   266  07CA  01AB               	clrf	main@i+1
   267  07CB                     L1:	
   268  07CB  082B               	movf	main@i+1,w
   269  07CC  3A80               	xorlw	128
   270  07CD  00FF               	movwf	127
   271  07CE  3080               	movlw	128
   272  07CF  027F               	subwf	127,w
   273  07D0  1D03               	skipz
   274  07D1  2FD4               	goto	u115
   275  07D2  300A               	movlw	10
   276  07D3  022A               	subwf	main@i,w
   277  07D4                     u115:	
   278  07D4  1803               	btfsc	3,0
   279  07D5  2FC7               	goto	l528
   280                           
   281                           ;main.c: 23: {
   282                           ;main.c: 24: PORTD = seg_code[i];
   283  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   284  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   285  07D8  082A               	movf	main@i,w
   286  07D9  3E20               	addlw	(low (main@seg_code| 0))& (0+255)
   287  07DA  0084               	movwf	4
   288  07DB  1383               	bcf	3,7	;select IRP bank0
   289  07DC  0800               	movf	0,w
   290  07DD  0088               	movwf	8	;volatile
   291                           
   292                           ;main.c: 25: DELAY_ms(1000);
   293  07DE  30E8               	movlw	232
   294  07DF  00F0               	movwf	DELAY_ms@ms_Count
   295  07E0  3003               	movlw	3
   296  07E1  00F1               	movwf	DELAY_ms@ms_Count+1
   297  07E2  120A  118A  2788  120A  118A  	fcall	_DELAY_ms
   298  07E7  3001               	movlw	1
   299  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   300  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   301  07EA  07AA               	addwf	main@i,f
   302  07EB  1803               	skipnc
   303  07EC  0AAB               	incf	main@i+1,f
   304  07ED  3000               	movlw	0
   305  07EE  07AB               	addwf	main@i+1,f
   306  07EF  2FCB               	goto	L1
   307  07F0                     __end_of_main:	
   308                           
   309                           	psect	text1
   310  0788                     __ptext1:	
   311 ;; *************** function _DELAY_ms *****************
   312 ;; Defined at:
   313 ;;		line 3 in file "main.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;  ms_Count        2    0[COMMON] unsigned int 
   316 ;; Auto vars:     Size  Location     Type
   317 ;;  j               2    4[COMMON] unsigned int 
   318 ;;  i               2    2[COMMON] unsigned int 
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		wreg, status,2
   323 ;; Tracked objects:
   324 ;;		On entry : 0/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   328 ;;      Params:         2       0       0       0       0
   329 ;;      Locals:         4       0       0       0       0
   330 ;;      Temps:          0       0       0       0       0
   331 ;;      Totals:         6       0       0       0       0
   332 ;;Total ram usage:        6 bytes
   333 ;; Hardware stack levels used:    1
   334 ;; This function calls:
   335 ;;		Nothing
   336 ;; This function is called by:
   337 ;;		_main
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           
   342                           ;psect for function _DELAY_ms
   343  0788                     _DELAY_ms:	
   344                           
   345                           ;main.c: 5: unsigned int i,j;
   346                           ;main.c: 6: for(i=0;i<ms_Count;i++)
   347                           
   348                           ;incstack = 0
   349                           ; Regs used in _DELAY_ms: [wreg+status,2]
   350  0788  01F2               	clrf	DELAY_ms@i
   351  0789  01F3               	clrf	DELAY_ms@i+1
   352  078A                     l7:	
   353  078A  0871               	movf	DELAY_ms@ms_Count+1,w
   354  078B  0273               	subwf	DELAY_ms@i+1,w
   355  078C  1D03               	skipz
   356  078D  2F90               	goto	u95
   357  078E  0870               	movf	DELAY_ms@ms_Count,w
   358  078F  0272               	subwf	DELAY_ms@i,w
   359  0790                     u95:	
   360  0790  1803               	btfsc	3,0
   361  0791  0008               	return
   362                           
   363                           ;main.c: 7: {
   364                           ;main.c: 8: for(j=0;j<1000;j++);
   365  0792  01F4               	clrf	DELAY_ms@j
   366  0793  01F5               	clrf	DELAY_ms@j+1
   367  0794  3003               	movlw	3
   368  0795  0275               	subwf	DELAY_ms@j+1,w
   369  0796  30E8               	movlw	232
   370  0797  1903               	skipnz
   371  0798  0274               	subwf	DELAY_ms@j,w
   372  0799  1803               	btfsc	3,0
   373  079A  2FA8               	goto	l522
   374  079B                     l520:	
   375  079B  3001               	movlw	1
   376  079C  07F4               	addwf	DELAY_ms@j,f
   377  079D  1803               	skipnc
   378  079E  0AF5               	incf	DELAY_ms@j+1,f
   379  079F  3000               	movlw	0
   380  07A0  07F5               	addwf	DELAY_ms@j+1,f
   381  07A1  3003               	movlw	3
   382  07A2  0275               	subwf	DELAY_ms@j+1,w
   383  07A3  30E8               	movlw	232
   384  07A4  1903               	skipnz
   385  07A5  0274               	subwf	DELAY_ms@j,w
   386  07A6  1C03               	skipc
   387  07A7  2F9B               	goto	l520
   388  07A8                     l522:	
   389  07A8  3001               	movlw	1
   390  07A9  07F2               	addwf	DELAY_ms@i,f
   391  07AA  1803               	skipnc
   392  07AB  0AF3               	incf	DELAY_ms@i+1,f
   393  07AC  3000               	movlw	0
   394  07AD  07F3               	addwf	DELAY_ms@i+1,f
   395  07AE  2F8A               	goto	l7
   396  07AF                     __end_of_DELAY_ms:	
   397  007E                     btemp	set	126	;btemp
   398  007E                     wtemp	set	126
   399  007E                     wtemp0	set	126
   400  0080                     wtemp1	set	128
   401  0082                     wtemp2	set	130
   402  0084                     wtemp3	set	132
   403  0086                     wtemp4	set	134
   404  0088                     wtemp5	set	136
   405  007F                     wtemp6	set	127
   406  007E                     ttemp	set	126
   407  007E                     ttemp0	set	126
   408  0081                     ttemp1	set	129
   409  0084                     ttemp2	set	132
   410  0087                     ttemp3	set	135
   411  007F                     ttemp4	set	127
   412  007E                     ltemp	set	126
   413  007E                     ltemp0	set	126
   414  0082                     ltemp1	set	130
   415  0086                     ltemp2	set	134
   416  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     12      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DELAY_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0     237
                                              6 COMMON     4     4      0
                                              0 BANK0     12    12      0
                           _DELAY_ms
 ---------------------------------------------------------------------------------
 (1) _DELAY_ms                                             6     4      2     145
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      16       5       27.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Fri May 06 15:27:36 2016

                      l7 078A                        pc 0002                       u95 0790  
                     fsr 0004                      l520 079B                      l522 07A8  
                    l528 07C7                      u100 07B7                      u115 07D4  
                    fsr0 0004                      indf 0000                     _main 07AF  
                   btemp 007E                     ltemp 007E                     start 0000  
                   ttemp 007E                     wtemp 007E         __end_of_DELAY_ms 07AF  
                  ?_main 0070                    _PORTD 0008                    _TRISD 0088  
           main@seg_code 0020                    main@i 002A                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 07F0  
           __end_of_main 07F0                   ??_main 0076                DELAY_ms@i 0072  
              DELAY_ms@j 0074         DELAY_ms@ms_Count 0070                ?_DELAY_ms 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 076D  
             ??_DELAY_ms 0072               __pmaintext 07AF                  __ptext1 0788  
   end_of_initialization 07FC        __size_of_DELAY_ms 0027      start_initialization 07F0  
             init_fetch0 0777              __pdataBANK0 002C                ___latbits 0002  
          __pcstackBANK0 0020                 _DELAY_ms 0788                main@F1073 002C  
          __size_of_main 0041                 init_ram0 077B  
