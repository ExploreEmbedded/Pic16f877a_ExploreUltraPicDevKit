

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Tue Mar 15 11:12:53 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105                           
   106                           	psect	idataBANK1
   107  0005                     __pidataBANK1:	
   108                           
   109                           ;initializer for _ARR_LcdLineNumAddress_U8
   110  0005  3480               	retlw	128
   111  0006  34C0               	retlw	192
   112  0007  3490               	retlw	144
   113  0008  34D0               	retlw	208
   114  0005                     _PORTA	set	5
   115  0006                     _PORTB	set	6
   116  0007                     _PORTC	set	7
   117  0008                     _PORTD	set	8
   118  0009                     _PORTE	set	9
   119  0085                     _TRISA	set	133
   120  0086                     _TRISB	set	134
   121  0087                     _TRISC	set	135
   122  0088                     _TRISD	set	136
   123  0089                     _TRISE	set	137
   124                           
   125                           	psect	strings
   126  0800                     __pstrings:	
   127  0800                     stringtab:	
   128  0800                     __stringtab:	
   129  0800                     stringcode:	
   130                           ;	String table - string pointers are 1 byte each
   131                           
   132  0800                     stringdir:	
   133  0800  3008               	movlw	high stringdir
   134  0801  008A               	movwf	10
   135  0802  0804               	movf	4,w
   136  0803  0A84               	incf	4,f
   137  0804  0782               	addwf	2,f
   138  0805                     __stringbase:	
   139  0805  3400               	retlw	0
   140  0806                     __end_of__stringtab:	
   141  0806                     STR_2:	
   142  0806  3443               	retlw	67	;'C'
   143  0807  346F               	retlw	111	;'o'
   144  0808  3475               	retlw	117	;'u'
   145  0809  346E               	retlw	110	;'n'
   146  080A  3474               	retlw	116	;'t'
   147  080B  343D               	retlw	61	;'='
   148  080C  3425               	retlw	37	;'%'
   149  080D  3434               	retlw	52	;'4'
   150  080E  3464               	retlw	100	;'d'
   151  080F  3400               	retlw	0
   152  0810                     STR_1:	
   153  0810  3444               	retlw	68	;'D'
   154  0811  3465               	retlw	101	;'e'
   155  0812  3463               	retlw	99	;'c'
   156  0813  3469               	retlw	105	;'i'
   157  0814  346D               	retlw	109	;'m'
   158  0815  3461               	retlw	97	;'a'
   159  0816  346C               	retlw	108	;'l'
   160  0817  3400               	retlw	0
   161                           
   162                           ; #config settings
   163  0000                     
   164                           	psect	cinit
   165  07DB                     start_initialization:	
   166  07DB                     __initialization:	
   167                           
   168                           ; Clear objects allocated to BANK1
   169  07DB  1383               	bcf	3,7	;select IRP bank0
   170  07DC  30A0               	movlw	low __pbssBANK1
   171  07DD  0084               	movwf	4
   172  07DE  30B0               	movlw	low (__pbssBANK1+16)
   173  07DF  120A  158A  222A  120A  118A  	fcall	clear_ram0
   174                           
   175                           ; Initialize objects allocated to BANK1
   176  07E4  1683               	bsf	3,5	;RP0=1, select bank1
   177  07E5  1303               	bcf	3,6	;RP1=0, select bank1
   178  07E6  120A  118A  2005  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   179  07EB  00B0               	movwf	__pdataBANK1& (0+127)
   180  07EC  120A  118A  2006  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   181  07F1  00B1               	movwf	(__pdataBANK1+1)& (0+127)
   182  07F2  120A  118A  2007  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   183  07F7  00B2               	movwf	(__pdataBANK1+2)& (0+127)
   184  07F8  120A  118A  2008   	fcall	__pidataBANK1+3	;fetch initializer
   185  07FB  00B3               	movwf	(__pdataBANK1+3)& (0+127)
   186  07FC                     end_of_initialization:	
   187                           ;End of C runtime variable initialization code
   188                           
   189  07FC                     __end_of__initialization:	
   190  07FC  0183               	clrf	3
   191  07FD  120A  158A  2CFE   	ljmp	_main	;jump to C main() function
   192                           
   193                           	psect	bssBANK1
   194  00A0                     __pbssBANK1:	
   195  00A0                     _LCDConfig:	
   196  00A0                     	ds	14
   197  00AE                     _v_LcdTrackCursorPos_U8:	
   198  00AE                     	ds	1
   199  00AF                     _v_LcdTrackLineNum_U8:	
   200  00AF                     	ds	1
   201                           
   202                           	psect	dataBANK1
   203  00B0                     __pdataBANK1:	
   204  00B0                     _ARR_LcdLineNumAddress_U8:	
   205  00B0                     	ds	4
   206                           
   207                           	psect	clrtext
   208  0A2A                     clear_ram0:	
   209                           ;	Called with FSR containing the base address, and
   210                           ;	W with the last address+1
   211                           
   212  0A2A  0064               	clrwdt	;clear the watchdog before getting into this loop
   213  0A2B                     clrloop0:	
   214  0A2B  0180               	clrf	0	;clear RAM location pointed to by FSR
   215  0A2C  0A84               	incf	4,f	;increment pointer
   216  0A2D  0604               	xorwf	4,w	;XOR with final address
   217  0A2E  1903               	btfsc	3,2	;have we reached the end yet?
   218  0A2F  3400               	retlw	0	;all done for this memory range, return
   219  0A30  0604               	xorwf	4,w	;XOR again to restore value
   220  0A31  2A2B               	goto	clrloop0	;do the next byte
   221                           
   222                           	psect	cstackCOMMON
   223  0070                     __pcstackCOMMON:	
   224  0070                     ?_LCD_CmdWrite:	
   225  0070                     ?_lcd_Reset:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     ?_LCD_Clear:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     ?_LCD_GoToLine:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ?_lcd_BusyCheck:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ?_lcd_SendLowerNibble:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ?_lcd_SendHigherNibble:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ?_lcd_SendCmdSignals:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ?_lcd_DataWrite:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ?_lcd_SendDataSignals:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?_DELAY_us:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ?_GPIO_PinDirection:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?_GPIO_PinWrite:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ?_GPIO_PinRead:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ??_GPIO_PinRead:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?_LCD_GoToNextLine:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?_LCD_DisplayChar:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?_LCD_DisplayString:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ?_main:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?___ftpack:	
   280                           ; 2 bytes @ 0x0
   281                           
   282  0070                     ?___lldiv:	
   283                           ; 3 bytes @ 0x0
   284                           
   285  0070                     GPIO_PinDirection@var_pinDirn_u8:	
   286                           ; 4 bytes @ 0x0
   287                           
   288  0070                     GPIO_PinWrite@var_pinValue_u8:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     DELAY_us@us_count:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ___ftpack@arg:	
   295                           ; 2 bytes @ 0x0
   296                           
   297  0070                     ___lldiv@divisor:	
   298                           ; 3 bytes @ 0x0
   299                           
   300                           
   301                           ; 4 bytes @ 0x0
   302  0070                     	ds	1
   303  0071                     ??_GPIO_PinDirection:	
   304  0071                     ??_GPIO_PinWrite:	
   305                           ; 1 bytes @ 0x1
   306                           
   307                           
   308                           ; 1 bytes @ 0x1
   309  0071                     	ds	1
   310  0072                     ??_DELAY_us:	
   311  0072                     ?_DELAY_ms:	
   312                           ; 1 bytes @ 0x2
   313                           
   314  0072                     GPIO_PinRead@var_portNumber_u8:	
   315                           ; 1 bytes @ 0x2
   316                           
   317  0072                     DELAY_ms@ms_count:	
   318                           ; 1 bytes @ 0x2
   319                           
   320                           
   321                           ; 2 bytes @ 0x2
   322  0072                     	ds	1
   323  0073                     GPIO_PinDirection@var_portNumber_u8:	
   324  0073                     GPIO_PinWrite@var_portNumber_u8:	
   325                           ; 1 bytes @ 0x3
   326                           
   327  0073                     GPIO_PinRead@returnStatus:	
   328                           ; 1 bytes @ 0x3
   329                           
   330  0073                     ___ftpack@exp:	
   331                           ; 1 bytes @ 0x3
   332                           
   333                           
   334                           ; 1 bytes @ 0x3
   335  0073                     	ds	1
   336  0074                     ??_DELAY_ms:	
   337  0074                     GPIO_PinDirection@enm_pinNumber:	
   338                           ; 1 bytes @ 0x4
   339                           
   340  0074                     GPIO_PinWrite@enm_pinNumber:	
   341                           ; 1 bytes @ 0x4
   342                           
   343  0074                     GPIO_PinRead@enm_pinNumber:	
   344                           ; 1 bytes @ 0x4
   345                           
   346  0074                     ___ftpack@sign:	
   347                           ; 1 bytes @ 0x4
   348                           
   349  0074                     ___lldiv@dividend:	
   350                           ; 1 bytes @ 0x4
   351                           
   352                           
   353                           ; 4 bytes @ 0x4
   354  0074                     	ds	1
   355  0075                     ??_lcd_BusyCheck:	
   356  0075                     ??_lcd_SendLowerNibble:	
   357                           ; 1 bytes @ 0x5
   358                           
   359  0075                     ??_lcd_SendHigherNibble:	
   360                           ; 1 bytes @ 0x5
   361                           
   362  0075                     ??_lcd_SendCmdSignals:	
   363                           ; 1 bytes @ 0x5
   364                           
   365  0075                     ??_lcd_SendDataSignals:	
   366                           ; 1 bytes @ 0x5
   367                           
   368  0075                     ??___ftpack:	
   369                           ; 1 bytes @ 0x5
   370                           
   371  0075                     ??_LCD_SetUp:	
   372                           ; 1 bytes @ 0x5
   373                           
   374                           
   375                           ; 1 bytes @ 0x5
   376  0075                     	ds	1
   377  0076                     LCD_SetUp@RS:	
   378  0076                     lcd_BusyCheck@busyflag:	
   379                           ; 1 bytes @ 0x6
   380                           
   381  0076                     lcd_SendHigherNibble@dataByte:	
   382                           ; 1 bytes @ 0x6
   383                           
   384  0076                     lcd_SendLowerNibble@dataByte:	
   385                           ; 1 bytes @ 0x6
   386                           
   387                           
   388                           ; 1 bytes @ 0x6
   389  0076                     	ds	1
   390  0077                     ??_LCD_CmdWrite:	
   391  0077                     ??_lcd_Reset:	
   392                           ; 1 bytes @ 0x7
   393                           
   394  0077                     ??_lcd_DataWrite:	
   395                           ; 1 bytes @ 0x7
   396                           
   397                           
   398                           ; 1 bytes @ 0x7
   399  0077                     	ds	1
   400  0078                     ??___lldiv:	
   401  0078                     ?___ftmul:	
   402                           ; 1 bytes @ 0x8
   403                           
   404  0078                     ?___lltoft:	
   405                           ; 3 bytes @ 0x8
   406                           
   407  0078                     ___ftmul@f1:	
   408                           ; 3 bytes @ 0x8
   409                           
   410  0078                     ___lltoft@c:	
   411                           ; 3 bytes @ 0x8
   412                           
   413                           
   414                           ; 4 bytes @ 0x8
   415  0078                     	ds	1
   416  0079                     LCD_CmdWrite@v_lcdCmd_u8:	
   417  0079                     lcd_DataWrite@dataByte:	
   418                           ; 1 bytes @ 0x9
   419                           
   420  0079                     ___lldiv@quotient:	
   421                           ; 1 bytes @ 0x9
   422                           
   423                           
   424                           ; 4 bytes @ 0x9
   425  0079                     	ds	1
   426  007A                     ??_LCD_GoToLine:	
   427  007A                     ??_LCD_GoToNextLine:	
   428                           ; 1 bytes @ 0xA
   429                           
   430                           
   431                           ; 1 bytes @ 0xA
   432  007A                     	ds	1
   433  007B                     ??_LCD_DisplayChar:	
   434  007B                     LCD_GoToLine@v_lineNumber_u8:	
   435                           ; 1 bytes @ 0xB
   436                           
   437  007B                     ___ftmul@f2:	
   438                           ; 1 bytes @ 0xB
   439                           
   440                           
   441                           ; 3 bytes @ 0xB
   442  007B                     	ds	1
   443  007C                     ??_LCD_Clear:	
   444  007C                     ?_LCD_Init:	
   445                           ; 1 bytes @ 0xC
   446                           
   447  007C                     ??___lltoft:	
   448                           ; 1 bytes @ 0xC
   449                           
   450  007C                     LCD_Init@v_MaxCharsPerLine_u8:	
   451                           ; 1 bytes @ 0xC
   452                           
   453  007C                     LCD_DisplayChar@v_lcdData_u8:	
   454                           ; 1 bytes @ 0xC
   455                           
   456                           
   457                           ; 1 bytes @ 0xC
   458  007C                     	ds	1
   459  007D                     ??_LCD_Init:	
   460  007D                     ??_LCD_DisplayString:	
   461                           ; 1 bytes @ 0xD
   462                           
   463  007D                     ___lldiv@counter:	
   464                           ; 1 bytes @ 0xD
   465                           
   466  007D                     ___lltoft@exp:	
   467                           ; 1 bytes @ 0xD
   468                           
   469                           
   470                           ; 1 bytes @ 0xD
   471  007D                     	ds	1
   472  007E                     ??___ftneg:	
   473                           
   474                           	psect	cstackBANK0
   475  0020                     __pcstackBANK0:	
   476                           ; 1 bytes @ 0xE
   477                           
   478  0020                     ?_LCD_SetUp:	
   479  0020                     ?___bmul:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0020                     ??___ftmul:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0020                     ?___ftneg:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0020                     LCD_SetUp@RW:	
   489                           ; 3 bytes @ 0x0
   490                           
   491  0020                     LCD_Init@v_lcdNoOfLines_u8:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0020                     LCD_DisplayString@ptr_stringPointer_u8:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0020                     ___bmul@multiplicand:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0020                     ___ftneg@f1:	
   501                           ; 1 bytes @ 0x0
   502                           
   503                           
   504                           ; 3 bytes @ 0x0
   505  0020                     	ds	1
   506  0021                     ??___bmul:	
   507  0021                     LCD_SetUp@EN:	
   508                           ; 1 bytes @ 0x1
   509                           
   510                           
   511                           ; 1 bytes @ 0x1
   512  0021                     	ds	1
   513  0022                     LCD_SetUp@D0:	
   514  0022                     ___bmul@product:	
   515                           ; 1 bytes @ 0x2
   516                           
   517                           
   518                           ; 1 bytes @ 0x2
   519  0022                     	ds	1
   520  0023                     ?___ftadd:	
   521  0023                     LCD_SetUp@D1:	
   522                           ; 3 bytes @ 0x3
   523                           
   524  0023                     ___bmul@multiplier:	
   525                           ; 1 bytes @ 0x3
   526                           
   527  0023                     ___ftadd@f1:	
   528                           ; 1 bytes @ 0x3
   529                           
   530                           
   531                           ; 3 bytes @ 0x3
   532  0023                     	ds	1
   533  0024                     ?_LCD_DisplayNumber:	
   534  0024                     LCD_SetUp@D2:	
   535                           ; 1 bytes @ 0x4
   536                           
   537  0024                     ___ftmul@exp:	
   538                           ; 1 bytes @ 0x4
   539                           
   540  0024                     LCD_DisplayNumber@v_number_u32:	
   541                           ; 1 bytes @ 0x4
   542                           
   543                           
   544                           ; 4 bytes @ 0x4
   545  0024                     	ds	1
   546  0025                     LCD_SetUp@D3:	
   547  0025                     ___ftmul@f3_as_product:	
   548                           ; 1 bytes @ 0x5
   549                           
   550                           
   551                           ; 3 bytes @ 0x5
   552  0025                     	ds	1
   553  0026                     LCD_SetUp@D4:	
   554  0026                     ___ftadd@f2:	
   555                           ; 1 bytes @ 0x6
   556                           
   557                           
   558                           ; 3 bytes @ 0x6
   559  0026                     	ds	1
   560  0027                     LCD_SetUp@D5:	
   561                           
   562                           ; 1 bytes @ 0x7
   563  0027                     	ds	1
   564  0028                     LCD_SetUp@D6:	
   565  0028                     LCD_DisplayNumber@v_numOfDigitsToDisplay_u8:	
   566                           ; 1 bytes @ 0x8
   567                           
   568  0028                     ___ftmul@cntr:	
   569                           ; 1 bytes @ 0x8
   570                           
   571                           
   572                           ; 1 bytes @ 0x8
   573  0028                     	ds	1
   574  0029                     ??_LCD_DisplayNumber:	
   575  0029                     ??___ftadd:	
   576                           ; 1 bytes @ 0x9
   577                           
   578  0029                     LCD_SetUp@D7:	
   579                           ; 1 bytes @ 0x9
   580                           
   581  0029                     ___ftmul@sign:	
   582                           ; 1 bytes @ 0x9
   583                           
   584                           
   585                           ; 1 bytes @ 0x9
   586  0029                     	ds	1
   587  002A                     ?___fttol:	
   588  002A                     ___fttol@f1:	
   589                           ; 4 bytes @ 0xA
   590                           
   591                           
   592                           ; 3 bytes @ 0xA
   593  002A                     	ds	3
   594  002D                     ___ftadd@sign:	
   595                           
   596                           ; 1 bytes @ 0xD
   597  002D                     	ds	1
   598  002E                     ??___fttol:	
   599  002E                     ___ftadd@exp2:	
   600                           ; 1 bytes @ 0xE
   601                           
   602                           
   603                           ; 1 bytes @ 0xE
   604  002E                     	ds	1
   605  002F                     ___ftadd@exp1:	
   606                           
   607                           ; 1 bytes @ 0xF
   608  002F                     	ds	3
   609  0032                     ___fttol@sign1:	
   610                           
   611                           ; 1 bytes @ 0x12
   612  0032                     	ds	1
   613  0033                     ___fttol@lval:	
   614                           
   615                           ; 4 bytes @ 0x13
   616  0033                     	ds	2
   617  0035                     LCD_DisplayNumber@a:	
   618                           
   619                           ; 10 bytes @ 0x15
   620  0035                     	ds	2
   621  0037                     ___fttol@exp1:	
   622                           
   623                           ; 1 bytes @ 0x17
   624  0037                     	ds	8
   625  003F                     _LCD_DisplayNumber$262:	
   626                           
   627                           ; 2 bytes @ 0x1F
   628  003F                     	ds	2
   629  0041                     LCD_DisplayNumber@v_numericSystem_u8:	
   630                           
   631                           ; 1 bytes @ 0x21
   632  0041                     	ds	1
   633  0042                     LCD_DisplayNumber@i:	
   634                           
   635                           ; 1 bytes @ 0x22
   636  0042                     	ds	1
   637  0043                     ?_LCD_DisplayFloatNumber:	
   638  0043                     LCD_DisplayFloatNumber@v_floatNum_f32:	
   639                           ; 1 bytes @ 0x23
   640                           
   641                           
   642                           ; 3 bytes @ 0x23
   643  0043                     	ds	3
   644  0046                     ??_LCD_DisplayFloatNumber:	
   645                           
   646                           ; 1 bytes @ 0x26
   647  0046                     	ds	1
   648  0047                     LCD_DisplayFloatNumber@v_decNumber_u32:	
   649                           
   650                           ; 4 bytes @ 0x27
   651  0047                     	ds	4
   652  004B                     ?_LCD_Printf:	
   653                           
   654                           ; 1 bytes @ 0x2B
   655  004B                     	ds	2
   656  004D                     ??_LCD_Printf:	
   657                           
   658                           ; 1 bytes @ 0x2D
   659  004D                     	ds	2
   660  004F                     LCD_Printf@v_floatNum_f32:	
   661                           
   662                           ; 3 bytes @ 0x2F
   663  004F                     	ds	3
   664  0052                     LCD_Printf@str:	
   665                           
   666                           ; 1 bytes @ 0x32
   667  0052                     	ds	1
   668  0053                     LCD_Printf@argList:	
   669                           
   670                           ; 1 bytes @ 0x33
   671  0053                     	ds	1
   672  0054                     LCD_Printf@v_num_s32:	
   673                           
   674                           ; 4 bytes @ 0x34
   675  0054                     	ds	4
   676  0058                     LCD_Printf@v_num_s16:	
   677                           
   678                           ; 2 bytes @ 0x38
   679  0058                     	ds	2
   680  005A                     LCD_Printf@v_num_u32:	
   681                           
   682                           ; 4 bytes @ 0x3A
   683  005A                     	ds	4
   684  005E                     LCD_Printf@v_num_u16:	
   685                           
   686                           ; 2 bytes @ 0x3E
   687  005E                     	ds	2
   688  0060                     LCD_Printf@ptr:	
   689                           
   690                           ; 1 bytes @ 0x40
   691  0060                     	ds	1
   692  0061                     LCD_Printf@ch:	
   693                           
   694                           ; 1 bytes @ 0x41
   695  0061                     	ds	1
   696  0062                     LCD_Printf@v_numOfDigitsToDisp_u8:	
   697                           
   698                           ; 1 bytes @ 0x42
   699  0062                     	ds	1
   700  0063                     LCD_Printf@argp:	
   701                           
   702                           ; 1 bytes @ 0x43
   703  0063                     	ds	1
   704  0064                     ??_main:	
   705                           
   706                           ; 1 bytes @ 0x44
   707  0064                     	ds	10
   708  006E                     main@count:	
   709                           
   710                           ; 2 bytes @ 0x4E
   711  006E                     	ds	2
   712                           
   713                           	psect	maintext
   714  0CFE                     __pmaintext:	
   715 ;;
   716 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   717 ;;
   718 ;; *************** function _main *****************
   719 ;; Defined at:
   720 ;;		line 43 in file "main.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  count           2   78[BANK0 ] int 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  2  309[None  ] int 
   727 ;; Registers used:
   728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : B00/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       0       0       0       0
   735 ;;      Locals:         0       2       0       0       0
   736 ;;      Temps:          0      10       0       0       0
   737 ;;      Totals:         0      12       0       0       0
   738 ;;Total ram usage:       12 bytes
   739 ;; Hardware stack levels required when called:    9
   740 ;; This function calls:
   741 ;;		_DELAY_ms
   742 ;;		_LCD_DisplayString
   743 ;;		_LCD_GoToLine
   744 ;;		_LCD_Init
   745 ;;		_LCD_Printf
   746 ;;		_LCD_SetUp
   747 ;; This function is called by:
   748 ;;		Startup code after reset
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           
   753                           ;psect for function _main
   754  0CFE                     _main:	
   755                           
   756                           ;main.c: 45: int count = 0;
   757                           
   758                           ;incstack = 0
   759 ;; hardware stack exceeded
   760                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   761  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
   762  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
   763  0D00  01EE               	clrf	main@count
   764  0D01  01EF               	clrf	main@count+1
   765                           
   766                           ;main.c: 47: LCD_SetUp(PB_0,PB_1,PB_2,P_NC,P_NC,P_NC,P_NC,PB_4,PB_5,PB_6,PB_7);
   767  0D02  3009               	movlw	9
   768  0D03  00E4               	movwf	??_main
   769  0D04  0864               	movf	??_main,w
   770  0D05  00A0               	movwf	LCD_SetUp@RW
   771  0D06  300A               	movlw	10
   772  0D07  00E5               	movwf	??_main+1
   773  0D08  0865               	movf	??_main+1,w
   774  0D09  00A1               	movwf	LCD_SetUp@EN
   775  0D0A  30FF               	movlw	255
   776  0D0B  00E6               	movwf	??_main+2
   777  0D0C  0866               	movf	??_main+2,w
   778  0D0D  00A2               	movwf	LCD_SetUp@D0
   779  0D0E  30FF               	movlw	255
   780  0D0F  00E7               	movwf	??_main+3
   781  0D10  0867               	movf	??_main+3,w
   782  0D11  00A3               	movwf	LCD_SetUp@D1
   783  0D12  30FF               	movlw	255
   784  0D13  00E8               	movwf	??_main+4
   785  0D14  0868               	movf	??_main+4,w
   786  0D15  00A4               	movwf	LCD_SetUp@D2
   787  0D16  30FF               	movlw	255
   788  0D17  00E9               	movwf	??_main+5
   789  0D18  0869               	movf	??_main+5,w
   790  0D19  00A5               	movwf	LCD_SetUp@D3
   791  0D1A  300C               	movlw	12
   792  0D1B  00EA               	movwf	??_main+6
   793  0D1C  086A               	movf	??_main+6,w
   794  0D1D  00A6               	movwf	LCD_SetUp@D4
   795  0D1E  300D               	movlw	13
   796  0D1F  00EB               	movwf	??_main+7
   797  0D20  086B               	movf	??_main+7,w
   798  0D21  00A7               	movwf	LCD_SetUp@D5
   799  0D22  300E               	movlw	14
   800  0D23  00EC               	movwf	??_main+8
   801  0D24  086C               	movf	??_main+8,w
   802  0D25  00A8               	movwf	LCD_SetUp@D6
   803  0D26  300F               	movlw	15
   804  0D27  00ED               	movwf	??_main+9
   805  0D28  086D               	movf	??_main+9,w
   806  0D29  00A9               	movwf	LCD_SetUp@D7
   807  0D2A  3008               	movlw	8
   808  0D2B  120A  118A  212B  120A  158A  	fcall	_LCD_SetUp
   809                           
   810                           ;main.c: 48: LCD_Init(2,16);
   811  0D30  3010               	movlw	16
   812  0D31  1283               	bcf	3,5	;RP0=0, select bank0
   813  0D32  1303               	bcf	3,6	;RP1=0, select bank0
   814  0D33  00E4               	movwf	??_main
   815  0D34  0864               	movf	??_main,w
   816  0D35  00FC               	movwf	LCD_Init@v_MaxCharsPerLine_u8
   817  0D36  3002               	movlw	2
   818  0D37  120A  118A  2009  120A  158A  	fcall	_LCD_Init
   819                           
   820                           ;main.c: 50: LCD_DisplayString("Decimal");
   821  0D3C  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   822  0D3D  120A  158A  22C1  120A  158A  	fcall	_LCD_DisplayString
   823  0D42                     l2309:	
   824                           ;main.c: 52: while(1)
   825                           
   826                           
   827                           ;main.c: 53: {
   828                           ;main.c: 54: LCD_GoToLine(1);
   829  0D42  3001               	movlw	1
   830  0D43  120A  158A  228D  120A  158A  	fcall	_LCD_GoToLine
   831                           
   832                           ;main.c: 55: LCD_Printf("Count=%4d",count);
   833  0D48  1283               	bcf	3,5	;RP0=0, select bank0
   834  0D49  1303               	bcf	3,6	;RP1=0, select bank0
   835  0D4A  086F               	movf	main@count+1,w
   836  0D4B  00CC               	movwf	?_LCD_Printf+1
   837  0D4C  086E               	movf	main@count,w
   838  0D4D  00CB               	movwf	?_LCD_Printf
   839  0D4E  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   840  0D4F  120A  118A  25A9  120A  158A  	fcall	_LCD_Printf
   841                           
   842                           ;main.c: 56: DELAY_ms(500);
   843  0D54  30F4               	movlw	244
   844  0D55  00F2               	movwf	DELAY_ms@ms_count
   845  0D56  3001               	movlw	1
   846  0D57  00F3               	movwf	DELAY_ms@ms_count+1
   847  0D58  120A  158A  2265  120A  158A  	fcall	_DELAY_ms
   848                           
   849                           ;main.c: 57: count++;
   850  0D5D  3001               	movlw	1
   851  0D5E  1283               	bcf	3,5	;RP0=0, select bank0
   852  0D5F  1303               	bcf	3,6	;RP1=0, select bank0
   853  0D60  07EE               	addwf	main@count,f
   854  0D61  1803               	skipnc
   855  0D62  0AEF               	incf	main@count+1,f
   856  0D63  3000               	movlw	0
   857  0D64  07EF               	addwf	main@count+1,f
   858  0D65  2D42               	goto	l2309
   859  0D66                     __end_of_main:	
   860                           ;main.c: 58: }
   861                           ;main.c: 60: return (0);
   862                           ;	Return value of _main is never used
   863                           
   864                           
   865                           	psect	text1
   866  012B                     __ptext1:	
   867 ;; *************** function _LCD_SetUp *****************
   868 ;; Defined at:
   869 ;;		line 135 in file "../00-libfiles/lcd.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  RS              1    wreg     enum E33
   872 ;;  RW              1    0[BANK0 ] enum E33
   873 ;;  EN              1    1[BANK0 ] enum E33
   874 ;;  D0              1    2[BANK0 ] enum E33
   875 ;;  D1              1    3[BANK0 ] enum E33
   876 ;;  D2              1    4[BANK0 ] enum E33
   877 ;;  D3              1    5[BANK0 ] enum E33
   878 ;;  D4              1    6[BANK0 ] enum E33
   879 ;;  D5              1    7[BANK0 ] enum E33
   880 ;;  D6              1    8[BANK0 ] enum E33
   881 ;;  D7              1    9[BANK0 ] enum E33
   882 ;; Auto vars:     Size  Location     Type
   883 ;;  RS              1    6[COMMON] enum E33
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   893 ;;      Params:         0      10       0       0       0
   894 ;;      Locals:         1       0       0       0       0
   895 ;;      Temps:          1       0       0       0       0
   896 ;;      Totals:         2      10       0       0       0
   897 ;;Total ram usage:       12 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; Hardware stack levels required when called:    1
   900 ;; This function calls:
   901 ;;		_GPIO_PinDirection
   902 ;; This function is called by:
   903 ;;		_main
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           
   908                           ;psect for function _LCD_SetUp
   909  012B                     _LCD_SetUp:	
   910                           
   911                           ;incstack = 0
   912                           ; Regs used in _LCD_SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   913                           ;LCD_SetUp@RS stored from wreg
   914  012B  00F6               	movwf	LCD_SetUp@RS
   915                           
   916                           ;lcd.c: 148: LCDConfig.RS = RS;
   917  012C  0876               	movf	LCD_SetUp@RS,w
   918  012D  00F5               	movwf	??_LCD_SetUp
   919  012E  0875               	movf	??_LCD_SetUp,w
   920  012F  1683               	bsf	3,5	;RP0=1, select bank1
   921  0130  1303               	bcf	3,6	;RP1=0, select bank1
   922  0131  00A3               	movwf	(_LCDConfig^(0+128)+3)
   923                           
   924                           ;lcd.c: 149: LCDConfig.RW = RW;
   925  0132  1283               	bcf	3,5	;RP0=0, select bank0
   926  0133  1303               	bcf	3,6	;RP1=0, select bank0
   927  0134  0820               	movf	LCD_SetUp@RW,w
   928  0135  00F5               	movwf	??_LCD_SetUp
   929  0136  0875               	movf	??_LCD_SetUp,w
   930  0137  1683               	bsf	3,5	;RP0=1, select bank1
   931  0138  1303               	bcf	3,6	;RP1=0, select bank1
   932  0139  00A4               	movwf	(_LCDConfig^(0+128)+4)
   933                           
   934                           ;lcd.c: 150: LCDConfig.EN = EN;
   935  013A  1283               	bcf	3,5	;RP0=0, select bank0
   936  013B  1303               	bcf	3,6	;RP1=0, select bank0
   937  013C  0821               	movf	LCD_SetUp@EN,w
   938  013D  00F5               	movwf	??_LCD_SetUp
   939  013E  0875               	movf	??_LCD_SetUp,w
   940  013F  1683               	bsf	3,5	;RP0=1, select bank1
   941  0140  1303               	bcf	3,6	;RP1=0, select bank1
   942  0141  00A5               	movwf	(_LCDConfig^(0+128)+5)
   943                           
   944                           ;lcd.c: 152: LCDConfig.D0 = D0;
   945  0142  1283               	bcf	3,5	;RP0=0, select bank0
   946  0143  1303               	bcf	3,6	;RP1=0, select bank0
   947  0144  0822               	movf	LCD_SetUp@D0,w
   948  0145  00F5               	movwf	??_LCD_SetUp
   949  0146  0875               	movf	??_LCD_SetUp,w
   950  0147  1683               	bsf	3,5	;RP0=1, select bank1
   951  0148  1303               	bcf	3,6	;RP1=0, select bank1
   952  0149  00A6               	movwf	(_LCDConfig^(0+128)+6)
   953                           
   954                           ;lcd.c: 153: LCDConfig.D1 = D1;
   955  014A  1283               	bcf	3,5	;RP0=0, select bank0
   956  014B  1303               	bcf	3,6	;RP1=0, select bank0
   957  014C  0823               	movf	LCD_SetUp@D1,w
   958  014D  00F5               	movwf	??_LCD_SetUp
   959  014E  0875               	movf	??_LCD_SetUp,w
   960  014F  1683               	bsf	3,5	;RP0=1, select bank1
   961  0150  1303               	bcf	3,6	;RP1=0, select bank1
   962  0151  00A7               	movwf	(_LCDConfig^(0+128)+7)
   963                           
   964                           ;lcd.c: 154: LCDConfig.D2 = D2;
   965  0152  1283               	bcf	3,5	;RP0=0, select bank0
   966  0153  1303               	bcf	3,6	;RP1=0, select bank0
   967  0154  0824               	movf	LCD_SetUp@D2,w
   968  0155  00F5               	movwf	??_LCD_SetUp
   969  0156  0875               	movf	??_LCD_SetUp,w
   970  0157  1683               	bsf	3,5	;RP0=1, select bank1
   971  0158  1303               	bcf	3,6	;RP1=0, select bank1
   972  0159  00A8               	movwf	(_LCDConfig^(0+128)+8)
   973                           
   974                           ;lcd.c: 155: LCDConfig.D3 = D3;
   975  015A  1283               	bcf	3,5	;RP0=0, select bank0
   976  015B  1303               	bcf	3,6	;RP1=0, select bank0
   977  015C  0825               	movf	LCD_SetUp@D3,w
   978  015D  00F5               	movwf	??_LCD_SetUp
   979  015E  0875               	movf	??_LCD_SetUp,w
   980  015F  1683               	bsf	3,5	;RP0=1, select bank1
   981  0160  1303               	bcf	3,6	;RP1=0, select bank1
   982  0161  00A9               	movwf	(_LCDConfig^(0+128)+9)
   983                           
   984                           ;lcd.c: 156: LCDConfig.D4 = D4;
   985  0162  1283               	bcf	3,5	;RP0=0, select bank0
   986  0163  1303               	bcf	3,6	;RP1=0, select bank0
   987  0164  0826               	movf	LCD_SetUp@D4,w
   988  0165  00F5               	movwf	??_LCD_SetUp
   989  0166  0875               	movf	??_LCD_SetUp,w
   990  0167  1683               	bsf	3,5	;RP0=1, select bank1
   991  0168  1303               	bcf	3,6	;RP1=0, select bank1
   992  0169  00AA               	movwf	(_LCDConfig^(0+128)+10)
   993                           
   994                           ;lcd.c: 157: LCDConfig.D5 = D5;
   995  016A  1283               	bcf	3,5	;RP0=0, select bank0
   996  016B  1303               	bcf	3,6	;RP1=0, select bank0
   997  016C  0827               	movf	LCD_SetUp@D5,w
   998  016D  00F5               	movwf	??_LCD_SetUp
   999  016E  0875               	movf	??_LCD_SetUp,w
  1000  016F  1683               	bsf	3,5	;RP0=1, select bank1
  1001  0170  1303               	bcf	3,6	;RP1=0, select bank1
  1002  0171  00AB               	movwf	(_LCDConfig^(0+128)+11)
  1003                           
  1004                           ;lcd.c: 158: LCDConfig.D6 = D6;
  1005  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0174  0828               	movf	LCD_SetUp@D6,w
  1008  0175  00F5               	movwf	??_LCD_SetUp
  1009  0176  0875               	movf	??_LCD_SetUp,w
  1010  0177  1683               	bsf	3,5	;RP0=1, select bank1
  1011  0178  1303               	bcf	3,6	;RP1=0, select bank1
  1012  0179  00AC               	movwf	(_LCDConfig^(0+128)+12)
  1013                           
  1014                           ;lcd.c: 159: LCDConfig.D7 = D7;
  1015  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1016  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1017  017C  0829               	movf	LCD_SetUp@D7,w
  1018  017D  00F5               	movwf	??_LCD_SetUp
  1019  017E  0875               	movf	??_LCD_SetUp,w
  1020  017F  1683               	bsf	3,5	;RP0=1, select bank1
  1021  0180  1303               	bcf	3,6	;RP1=0, select bank1
  1022  0181  00AD               	movwf	(_LCDConfig^(0+128)+13)
  1023                           
  1024                           ;lcd.c: 162: if((D0 == P_NC) || (D1 == P_NC) || (D2 == P_NC) || (D3 == P_NC))
  1025  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0184  0A22               	incf	LCD_SetUp@D0,w
  1028  0185  1903               	btfsc	3,2
  1029  0186  298F               	goto	l2103
  1030  0187  0A23               	incf	LCD_SetUp@D1,w
  1031  0188  1903               	btfsc	3,2
  1032  0189  298F               	goto	l2103
  1033  018A  0A24               	incf	LCD_SetUp@D2,w
  1034  018B  1D03               	btfss	3,2
  1035  018C  0A25               	incf	LCD_SetUp@D3,w
  1036  018D  1D03               	btfss	3,2
  1037  018E  2996               	goto	l2105
  1038  018F                     l2103:	
  1039                           
  1040                           ;lcd.c: 163: {
  1041                           ;lcd.c: 164: LCDConfig.v_LcdMode_U8 = 4;
  1042  018F  3004               	movlw	4
  1043  0190  00F5               	movwf	??_LCD_SetUp
  1044  0191  0875               	movf	??_LCD_SetUp,w
  1045  0192  1683               	bsf	3,5	;RP0=1, select bank1
  1046  0193  1303               	bcf	3,6	;RP1=0, select bank1
  1047  0194  00A2               	movwf	(_LCDConfig^(0+128)+2)
  1048                           
  1049                           ;lcd.c: 165: }
  1050  0195  29C0               	goto	l2115
  1051  0196                     l2105:	
  1052                           
  1053                           ;lcd.c: 166: else
  1054                           ;lcd.c: 167: {
  1055                           ;lcd.c: 168: LCDConfig.v_LcdMode_U8 = 8;
  1056  0196  3008               	movlw	8
  1057  0197  00F5               	movwf	??_LCD_SetUp
  1058  0198  0875               	movf	??_LCD_SetUp,w
  1059  0199  1683               	bsf	3,5	;RP0=1, select bank1
  1060  019A  1303               	bcf	3,6	;RP1=0, select bank1
  1061  019B  00A2               	movwf	(_LCDConfig^(0+128)+2)
  1062                           
  1063                           ;lcd.c: 169: GPIO_PinDirection(D0,0x00u);
  1064  019C  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1065  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1066  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1067  019F  0822               	movf	LCD_SetUp@D0,w
  1068  01A0  120A  118A  21FC  120A  118A  	fcall	_GPIO_PinDirection
  1069                           
  1070                           ;lcd.c: 170: GPIO_PinDirection(D1,0x00u);
  1071  01A5  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1072  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1073  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1074  01A8  0823               	movf	LCD_SetUp@D1,w
  1075  01A9  120A  118A  21FC  120A  118A  	fcall	_GPIO_PinDirection
  1076                           
  1077                           ;lcd.c: 171: GPIO_PinDirection(D2,0x00u);
  1078  01AE  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1079  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1080  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1081  01B1  0824               	movf	LCD_SetUp@D2,w
  1082  01B2  120A  118A  21FC  120A  118A  	fcall	_GPIO_PinDirection
  1083                           
  1084                           ;lcd.c: 172: GPIO_PinDirection(D3,0x00u);
  1085  01B7  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1086  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1087  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1088  01BA  0825               	movf	LCD_SetUp@D3,w
  1089  01BB  120A  118A  21FC  120A  118A  	fcall	_GPIO_PinDirection
  1090  01C0                     l2115:	
  1091                           
  1092                           ;lcd.c: 173: }
  1093                           ;lcd.c: 176: GPIO_PinDirection(RS,0x00u);
  1094  01C0  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1095  01C1  0876               	movf	LCD_SetUp@RS,w
  1096  01C2  120A  118A  21FC  120A  118A  	fcall	_GPIO_PinDirection
  1097                           
  1098                           ;lcd.c: 177: GPIO_PinDirection(RW,0x00u);
  1099  01C7  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1100  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1101  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1102  01CA  0820               	movf	LCD_SetUp@RW,w
  1103  01CB  120A  118A  21FC  120A  118A  	fcall	_GPIO_PinDirection
  1104                           
  1105                           ;lcd.c: 178: GPIO_PinDirection(EN,0x00u);
  1106  01D0  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1107  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1108  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  1109  01D3  0821               	movf	LCD_SetUp@EN,w
  1110  01D4  120A  118A  21FC  120A  118A  	fcall	_GPIO_PinDirection
  1111                           
  1112                           ;lcd.c: 180: GPIO_PinDirection(D4,0x00u);
  1113  01D9  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1114  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1115  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1116  01DC  0826               	movf	LCD_SetUp@D4,w
  1117  01DD  120A  118A  21FC  120A  118A  	fcall	_GPIO_PinDirection
  1118                           
  1119                           ;lcd.c: 181: GPIO_PinDirection(D5,0x00u);
  1120  01E2  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1121  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1122  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1123  01E5  0827               	movf	LCD_SetUp@D5,w
  1124  01E6  120A  118A  21FC  120A  118A  	fcall	_GPIO_PinDirection
  1125                           
  1126                           ;lcd.c: 182: GPIO_PinDirection(D6,0x00u);
  1127  01EB  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1128  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1129  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1130  01EE  0828               	movf	LCD_SetUp@D6,w
  1131  01EF  120A  118A  21FC  120A  118A  	fcall	_GPIO_PinDirection
  1132                           
  1133                           ;lcd.c: 183: GPIO_PinDirection(D7,0x00u);
  1134  01F4  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1135  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1136  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1137  01F7  0829               	movf	LCD_SetUp@D7,w
  1138  01F8  120A  118A  21FC   	fcall	_GPIO_PinDirection
  1139  01FB  0008               	return
  1140  01FC                     __end_of_LCD_SetUp:	
  1141                           
  1142                           	psect	text2
  1143  05A9                     __ptext2:	
  1144 ;; *************** function _LCD_Printf *****************
  1145 ;; Defined at:
  1146 ;;		line 676 in file "../00-libfiles/lcd.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;  argList         1    wreg     PTR const unsigned char 
  1149 ;;		 -> STR_2(10), 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  argList         1   51[BANK0 ] PTR const unsigned char 
  1152 ;;		 -> STR_2(10), 
  1153 ;;  v_num_u32       4   58[BANK0 ] unsigned long 
  1154 ;;  v_num_s32       4   52[BANK0 ] long 
  1155 ;;  v_floatNum_f    3   47[BANK0 ] long 
  1156 ;;  v_num_u16       2   62[BANK0 ] unsigned int 
  1157 ;;  v_num_s16       2   56[BANK0 ] int 
  1158 ;;  argp            1   67[BANK0 ] PTR void [1]
  1159 ;;		 -> ?_LCD_Printf(1), 
  1160 ;;  v_numOfDigit    1   66[BANK0 ] unsigned char 
  1161 ;;  ch              1   65[BANK0 ] unsigned char 
  1162 ;;  ptr             1   64[BANK0 ] PTR const unsigned char 
  1163 ;;		 -> STR_2(10), 
  1164 ;;  str             1   50[BANK0 ] PTR unsigned char 
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1174 ;;      Params:         0       2       0       0       0
  1175 ;;      Locals:         0      21       0       0       0
  1176 ;;      Temps:          0       2       0       0       0
  1177 ;;      Totals:         0      25       0       0       0
  1178 ;;Total ram usage:       25 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    8
  1181 ;; This function calls:
  1182 ;;		_LCD_DisplayChar
  1183 ;;		_LCD_DisplayFloatNumber
  1184 ;;		_LCD_DisplayNumber
  1185 ;;		_LCD_DisplayString
  1186 ;;		___bmul
  1187 ;; This function is called by:
  1188 ;;		_main
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           
  1193                           ;psect for function _LCD_Printf
  1194  05A9                     _LCD_Printf:	
  1195                           
  1196                           ;incstack = 0
  1197 ;; hardware stack exceeded
  1198                           ; Regs used in _LCD_Printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1199                           ;LCD_Printf@argList stored from wreg
  1200  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  1201  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  1202  05AB  00D3               	movwf	LCD_Printf@argList
  1203                           
  1204                           ;lcd.c: 678: const char *ptr;
  1205                           ;lcd.c: 679: va_list argp;
  1206                           ;lcd.c: 680: sint16_t v_num_s16;
  1207                           ;lcd.c: 681: sint32_t v_num_s32;
  1208                           ;lcd.c: 682: uint16_t v_num_u16;
  1209                           ;lcd.c: 683: uint32_t v_num_u32;
  1210                           ;lcd.c: 684: char *str;
  1211                           ;lcd.c: 685: char ch;
  1212                           ;lcd.c: 686: uint8_t v_numOfDigitsToDisp_u8;
  1213                           ;lcd.c: 688: double v_floatNum_f32;
  1214                           ;lcd.c: 691: *argp = __va_start();
  1215  05AC  304B               	movlw	(low (?_LCD_Printf| 0))& (0+255)
  1216  05AD  00CD               	movwf	??_LCD_Printf
  1217  05AE  084D               	movf	??_LCD_Printf,w
  1218  05AF  00E3               	movwf	LCD_Printf@argp
  1219                           
  1220                           ;lcd.c: 694: for(ptr = argList; *ptr != '\0'; ptr++)
  1221  05B0  0853               	movf	LCD_Printf@argList,w
  1222  05B1  00CD               	movwf	??_LCD_Printf
  1223  05B2  084D               	movf	??_LCD_Printf,w
  1224  05B3  00E0               	movwf	LCD_Printf@ptr
  1225  05B4                     l2265:	
  1226  05B4  0860               	movf	LCD_Printf@ptr,w
  1227  05B5  0084               	movwf	4
  1228  05B6  120A  158A  2000  120A  118A  	fcall	stringdir
  1229  05BB  3A00               	xorlw	0
  1230  05BC  1903               	btfsc	3,2
  1231  05BD  0008               	return
  1232                           
  1233                           ;lcd.c: 695: {
  1234                           ;lcd.c: 697: ch= *ptr;
  1235  05BE  0860               	movf	LCD_Printf@ptr,w
  1236  05BF  0084               	movwf	4
  1237  05C0  120A  158A  2000  120A  118A  	fcall	stringdir
  1238  05C5  00CD               	movwf	??_LCD_Printf
  1239  05C6  084D               	movf	??_LCD_Printf,w
  1240  05C7  00E1               	movwf	LCD_Printf@ch
  1241                           
  1242                           ;lcd.c: 698: if(ch == '%')
  1243  05C8  3025               	movlw	37
  1244  05C9  0661               	xorwf	LCD_Printf@ch,w
  1245  05CA  1D03               	btfss	3,2
  1246  05CB  2FCE               	goto	l2261
  1247                           
  1248                           ;lcd.c: 699: {
  1249                           ;lcd.c: 700: ptr++;
  1250  05CC  3001               	movlw	1
  1251  05CD  00CD               	movwf	??_LCD_Printf
  1252  05CE  084D               	movf	??_LCD_Printf,w
  1253  05CF  07E0               	addwf	LCD_Printf@ptr,f
  1254                           
  1255                           ;lcd.c: 701: ch = *ptr;
  1256  05D0  0860               	movf	LCD_Printf@ptr,w
  1257  05D1  0084               	movwf	4
  1258  05D2  120A  158A  2000  120A  118A  	fcall	stringdir
  1259  05D7  00CD               	movwf	??_LCD_Printf
  1260  05D8  084D               	movf	??_LCD_Printf,w
  1261  05D9  00E1               	movwf	LCD_Printf@ch
  1262                           
  1263                           ;lcd.c: 702: if((ch>=0x30) && (ch<=0x39))
  1264  05DA  3030               	movlw	48
  1265  05DB  0261               	subwf	LCD_Printf@ch,w
  1266  05DC  1C03               	skipc
  1267  05DD  2E0B               	goto	l2169
  1268  05DE  303A               	movlw	58
  1269  05DF  0261               	subwf	LCD_Printf@ch,w
  1270  05E0  1803               	skipnc
  1271  05E1  2E0B               	goto	l2169
  1272                           
  1273                           ;lcd.c: 703: {
  1274                           ;lcd.c: 704: v_numOfDigitsToDisp_u8 = 0;
  1275  05E2  01E2               	clrf	LCD_Printf@v_numOfDigitsToDisp_u8
  1276  05E3                     l2165:	
  1277                           ;lcd.c: 705: while((ch>=0x30) && (ch<=0x39))
  1278                           
  1279  05E3  3030               	movlw	48
  1280  05E4  0261               	subwf	LCD_Printf@ch,w
  1281  05E5  1C03               	skipc
  1282  05E6  2F9C               	goto	l2259
  1283  05E7  303A               	movlw	58
  1284  05E8  0261               	subwf	LCD_Printf@ch,w
  1285  05E9  1803               	btfsc	3,0
  1286  05EA  2F9C               	goto	l2259
  1287                           
  1288                           ;lcd.c: 706: {
  1289                           ;lcd.c: 707: v_numOfDigitsToDisp_u8 = (v_numOfDigitsToDisp_u8 * 10) + (ch-0x30);
  1290  05EB  300A               	movlw	10
  1291  05EC  00CD               	movwf	??_LCD_Printf
  1292  05ED  084D               	movf	??_LCD_Printf,w
  1293  05EE  00A0               	movwf	___bmul@multiplicand
  1294  05EF  0862               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1295  05F0  120A  158A  2252  120A  118A  	fcall	___bmul
  1296  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1297  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  1298  05F7  0761               	addwf	LCD_Printf@ch,w
  1299  05F8  3ED0               	addlw	208
  1300  05F9  00CE               	movwf	??_LCD_Printf+1
  1301  05FA  084E               	movf	??_LCD_Printf+1,w
  1302  05FB  00E2               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  1303                           
  1304                           ;lcd.c: 708: ptr++;
  1305  05FC  3001               	movlw	1
  1306  05FD  00CD               	movwf	??_LCD_Printf
  1307  05FE  084D               	movf	??_LCD_Printf,w
  1308  05FF  07E0               	addwf	LCD_Printf@ptr,f
  1309                           
  1310                           ;lcd.c: 709: ch = *ptr;
  1311  0600  0860               	movf	LCD_Printf@ptr,w
  1312  0601  0084               	movwf	4
  1313  0602  120A  158A  2000  120A  118A  	fcall	stringdir
  1314  0607  00CD               	movwf	??_LCD_Printf
  1315  0608  084D               	movf	??_LCD_Printf,w
  1316  0609  00E1               	movwf	LCD_Printf@ch
  1317  060A  2DE3               	goto	l2165
  1318  060B                     l2169:	
  1319                           ;lcd.c: 710: }
  1320                           ;lcd.c: 711: }
  1321                           
  1322                           
  1323                           ;lcd.c: 712: else
  1324                           ;lcd.c: 713: {
  1325                           ;lcd.c: 714: v_numOfDigitsToDisp_u8 = 0xffu;
  1326  060B  30FF               	movlw	255
  1327  060C  00CD               	movwf	??_LCD_Printf
  1328  060D  084D               	movf	??_LCD_Printf,w
  1329  060E  00E2               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  1330                           
  1331                           ;lcd.c: 715: }
  1332                           ;lcd.c: 718: switch(ch)
  1333  060F  2F9C               	goto	l2259
  1334  0610                     l2171:	
  1335                           ;lcd.c: 719: {
  1336                           ;lcd.c: 720: case 'C':
  1337                           
  1338                           
  1339                           ;lcd.c: 721: case 'c':
  1340                           ;lcd.c: 722: ch = (*(int *)__va_arg((*(int **)argp), (int)0));
  1341  0610  0863               	movf	LCD_Printf@argp,w
  1342  0611  0084               	movwf	4
  1343  0612  1383               	bcf	3,7	;select IRP bank0
  1344  0613  0800               	movf	0,w
  1345  0614  00CD               	movwf	??_LCD_Printf
  1346  0615  084D               	movf	??_LCD_Printf,w
  1347  0616  00E1               	movwf	LCD_Printf@ch
  1348  0617  3002               	movlw	2
  1349  0618  00CD               	movwf	??_LCD_Printf
  1350  0619  084D               	movf	??_LCD_Printf,w
  1351  061A  07E3               	addwf	LCD_Printf@argp,f
  1352  061B  2FCE               	goto	l2261
  1353  061C                     l2177:	
  1354                           ;lcd.c: 726: case 'd':
  1355                           
  1356                           ;lcd.c: 724: break;
  1357                           
  1358                           ;lcd.c: 723: LCD_DisplayChar(ch);
  1359                           
  1360                           
  1361                           ;lcd.c: 727: v_num_s16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  1362  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1363  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1364  061E  0863               	movf	LCD_Printf@argp,w
  1365  061F  0084               	movwf	4
  1366  0620  1383               	bcf	3,7	;select IRP bank0
  1367  0621  0800               	movf	0,w
  1368  0622  00D8               	movwf	LCD_Printf@v_num_s16
  1369  0623  0A84               	incf	4,f
  1370  0624  0800               	movf	0,w
  1371  0625  00D9               	movwf	LCD_Printf@v_num_s16+1
  1372  0626  3002               	movlw	2
  1373  0627  00CD               	movwf	??_LCD_Printf
  1374  0628  084D               	movf	??_LCD_Printf,w
  1375  0629  07E3               	addwf	LCD_Printf@argp,f
  1376                           
  1377                           ;lcd.c: 728: if(v_num_s16<0)
  1378  062A  1FD9               	btfss	LCD_Printf@v_num_s16+1,7
  1379  062B  2E37               	goto	l2187
  1380                           
  1381                           ;lcd.c: 729: {
  1382                           ;lcd.c: 730: v_num_s16 = -v_num_s16;
  1383  062C  09D8               	comf	LCD_Printf@v_num_s16,f
  1384  062D  09D9               	comf	LCD_Printf@v_num_s16+1,f
  1385  062E  0AD8               	incf	LCD_Printf@v_num_s16,f
  1386  062F  1903               	skipnz
  1387  0630  0AD9               	incf	LCD_Printf@v_num_s16+1,f
  1388                           
  1389                           ;lcd.c: 731: LCD_DisplayChar('-');
  1390  0631  302D               	movlw	45
  1391  0632  120A  158A  22A2  120A  118A  	fcall	_LCD_DisplayChar
  1392  0637                     l2187:	
  1393                           
  1394                           ;lcd.c: 732: }
  1395                           ;lcd.c: 733: LCD_DisplayNumber(10u,v_num_s16,v_numOfDigitsToDisp_u8);
  1396  0637  1283               	bcf	3,5	;RP0=0, select bank0
  1397  0638  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0639  0858               	movf	LCD_Printf@v_num_s16,w
  1399  063A  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1400  063B  0859               	movf	LCD_Printf@v_num_s16+1,w
  1401  063C  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1402  063D  3000               	movlw	0
  1403  063E  1BA5               	btfsc	LCD_DisplayNumber@v_number_u32+1,7
  1404  063F  30FF               	movlw	255
  1405  0640  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  1406  0641  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  1407  0642  0862               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1408  0643  00CD               	movwf	??_LCD_Printf
  1409  0644  084D               	movf	??_LCD_Printf,w
  1410  0645  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1411  0646  300A               	movlw	10
  1412  0647  120A  118A  23AE  120A  118A  	fcall	_LCD_DisplayNumber
  1413                           
  1414                           ;lcd.c: 734: break;
  1415  064C  2FD4               	goto	l2263
  1416  064D                     l2189:	
  1417                           ;lcd.c: 736: case 'D':
  1418                           
  1419                           
  1420                           ;lcd.c: 737: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
  1421  064D  1283               	bcf	3,5	;RP0=0, select bank0
  1422  064E  1303               	bcf	3,6	;RP1=0, select bank0
  1423  064F  0863               	movf	LCD_Printf@argp,w
  1424  0650  0084               	movwf	4
  1425  0651  1383               	bcf	3,7	;select IRP bank0
  1426  0652  0800               	movf	0,w
  1427  0653  00D4               	movwf	LCD_Printf@v_num_s32
  1428  0654  0A84               	incf	4,f
  1429  0655  0800               	movf	0,w
  1430  0656  00D5               	movwf	LCD_Printf@v_num_s32+1
  1431  0657  0A84               	incf	4,f
  1432  0658  0800               	movf	0,w
  1433  0659  00D6               	movwf	LCD_Printf@v_num_s32+2
  1434  065A  0A84               	incf	4,f
  1435  065B  0800               	movf	0,w
  1436  065C  00D7               	movwf	LCD_Printf@v_num_s32+3
  1437  065D  3004               	movlw	4
  1438  065E  00CD               	movwf	??_LCD_Printf
  1439  065F  084D               	movf	??_LCD_Printf,w
  1440  0660  07E3               	addwf	LCD_Printf@argp,f
  1441                           
  1442                           ;lcd.c: 738: if(v_num_s32<0)
  1443  0661  1FD7               	btfss	LCD_Printf@v_num_s32+3,7
  1444  0662  2E74               	goto	l251
  1445                           
  1446                           ;lcd.c: 739: {
  1447                           ;lcd.c: 740: v_num_s32 = -v_num_s32;
  1448  0663  09D4               	comf	LCD_Printf@v_num_s32,f
  1449  0664  09D5               	comf	LCD_Printf@v_num_s32+1,f
  1450  0665  09D6               	comf	LCD_Printf@v_num_s32+2,f
  1451  0666  09D7               	comf	LCD_Printf@v_num_s32+3,f
  1452  0667  0AD4               	incf	LCD_Printf@v_num_s32,f
  1453  0668  1903               	skipnz
  1454  0669  0AD5               	incf	LCD_Printf@v_num_s32+1,f
  1455  066A  1903               	skipnz
  1456  066B  0AD6               	incf	LCD_Printf@v_num_s32+2,f
  1457  066C  1903               	skipnz
  1458  066D  0AD7               	incf	LCD_Printf@v_num_s32+3,f
  1459                           
  1460                           ;lcd.c: 741: LCD_DisplayChar('-');
  1461  066E  302D               	movlw	45
  1462  066F  120A  158A  22A2  120A  118A  	fcall	_LCD_DisplayChar
  1463  0674                     l251:	
  1464                           
  1465                           ;lcd.c: 742: }
  1466                           ;lcd.c: 743: LCD_DisplayNumber(10u,v_num_s32,v_numOfDigitsToDisp_u8);
  1467  0674  1283               	bcf	3,5	;RP0=0, select bank0
  1468  0675  1303               	bcf	3,6	;RP1=0, select bank0
  1469  0676  0857               	movf	LCD_Printf@v_num_s32+3,w
  1470  0677  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  1471  0678  0856               	movf	LCD_Printf@v_num_s32+2,w
  1472  0679  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  1473  067A  0855               	movf	LCD_Printf@v_num_s32+1,w
  1474  067B  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1475  067C  0854               	movf	LCD_Printf@v_num_s32,w
  1476  067D  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1477  067E  0862               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1478  067F  00CD               	movwf	??_LCD_Printf
  1479  0680  084D               	movf	??_LCD_Printf,w
  1480  0681  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1481  0682  300A               	movlw	10
  1482  0683  120A  118A  23AE  120A  118A  	fcall	_LCD_DisplayNumber
  1483                           
  1484                           ;lcd.c: 744: break;
  1485  0688  2FD4               	goto	l2263
  1486  0689                     l2199:	
  1487                           ;lcd.c: 746: case 'u':
  1488                           
  1489                           
  1490                           ;lcd.c: 747: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  1491  0689  1283               	bcf	3,5	;RP0=0, select bank0
  1492  068A  1303               	bcf	3,6	;RP1=0, select bank0
  1493  068B  0863               	movf	LCD_Printf@argp,w
  1494  068C  0084               	movwf	4
  1495  068D  1383               	bcf	3,7	;select IRP bank0
  1496  068E  0800               	movf	0,w
  1497  068F  00DE               	movwf	LCD_Printf@v_num_u16
  1498  0690  0A84               	incf	4,f
  1499  0691  0800               	movf	0,w
  1500  0692  00DF               	movwf	LCD_Printf@v_num_u16+1
  1501  0693  3002               	movlw	2
  1502  0694  00CD               	movwf	??_LCD_Printf
  1503  0695  084D               	movf	??_LCD_Printf,w
  1504  0696  07E3               	addwf	LCD_Printf@argp,f
  1505                           
  1506                           ;lcd.c: 748: LCD_DisplayNumber(10u,v_num_u16,v_numOfDigitsToDisp_u8);
  1507  0697  085E               	movf	LCD_Printf@v_num_u16,w
  1508  0698  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1509  0699  085F               	movf	LCD_Printf@v_num_u16+1,w
  1510  069A  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1511  069B  01A6               	clrf	LCD_DisplayNumber@v_number_u32+2
  1512  069C  01A7               	clrf	LCD_DisplayNumber@v_number_u32+3
  1513  069D  0862               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1514  069E  00CD               	movwf	??_LCD_Printf
  1515  069F  084D               	movf	??_LCD_Printf,w
  1516  06A0  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1517  06A1  300A               	movlw	10
  1518  06A2  120A  118A  23AE  120A  118A  	fcall	_LCD_DisplayNumber
  1519                           
  1520                           ;lcd.c: 749: break;
  1521  06A7  2FD4               	goto	l2263
  1522  06A8                     l2205:	
  1523                           ;lcd.c: 751: case 'U':
  1524                           
  1525                           
  1526                           ;lcd.c: 752: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1527  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1528  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1529  06AA  0863               	movf	LCD_Printf@argp,w
  1530  06AB  0084               	movwf	4
  1531  06AC  1383               	bcf	3,7	;select IRP bank0
  1532  06AD  0800               	movf	0,w
  1533  06AE  00DA               	movwf	LCD_Printf@v_num_u32
  1534  06AF  0A84               	incf	4,f
  1535  06B0  0800               	movf	0,w
  1536  06B1  00DB               	movwf	LCD_Printf@v_num_u32+1
  1537  06B2  0A84               	incf	4,f
  1538  06B3  0800               	movf	0,w
  1539  06B4  00DC               	movwf	LCD_Printf@v_num_u32+2
  1540  06B5  0A84               	incf	4,f
  1541  06B6  0800               	movf	0,w
  1542  06B7  00DD               	movwf	LCD_Printf@v_num_u32+3
  1543  06B8  3004               	movlw	4
  1544  06B9  00CD               	movwf	??_LCD_Printf
  1545  06BA  084D               	movf	??_LCD_Printf,w
  1546  06BB  07E3               	addwf	LCD_Printf@argp,f
  1547                           
  1548                           ;lcd.c: 753: LCD_DisplayNumber(10u,v_num_u32,v_numOfDigitsToDisp_u8);
  1549  06BC  085D               	movf	LCD_Printf@v_num_u32+3,w
  1550  06BD  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  1551  06BE  085C               	movf	LCD_Printf@v_num_u32+2,w
  1552  06BF  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  1553  06C0  085B               	movf	LCD_Printf@v_num_u32+1,w
  1554  06C1  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1555  06C2  085A               	movf	LCD_Printf@v_num_u32,w
  1556  06C3  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1557  06C4  0862               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1558  06C5  00CD               	movwf	??_LCD_Printf
  1559  06C6  084D               	movf	??_LCD_Printf,w
  1560  06C7  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1561  06C8  300A               	movlw	10
  1562  06C9  120A  118A  23AE  120A  118A  	fcall	_LCD_DisplayNumber
  1563                           
  1564                           ;lcd.c: 754: break;
  1565  06CE  2FD4               	goto	l2263
  1566  06CF                     l2211:	
  1567                           ;lcd.c: 756: case 'x':
  1568                           
  1569                           
  1570                           ;lcd.c: 757: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  1571  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1572  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1573  06D1  0863               	movf	LCD_Printf@argp,w
  1574  06D2  0084               	movwf	4
  1575  06D3  1383               	bcf	3,7	;select IRP bank0
  1576  06D4  0800               	movf	0,w
  1577  06D5  00DE               	movwf	LCD_Printf@v_num_u16
  1578  06D6  0A84               	incf	4,f
  1579  06D7  0800               	movf	0,w
  1580  06D8  00DF               	movwf	LCD_Printf@v_num_u16+1
  1581  06D9  3002               	movlw	2
  1582  06DA  00CD               	movwf	??_LCD_Printf
  1583  06DB  084D               	movf	??_LCD_Printf,w
  1584  06DC  07E3               	addwf	LCD_Printf@argp,f
  1585                           
  1586                           ;lcd.c: 758: LCD_DisplayNumber(16u,v_num_u16,v_numOfDigitsToDisp_u8);
  1587  06DD  085E               	movf	LCD_Printf@v_num_u16,w
  1588  06DE  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1589  06DF  085F               	movf	LCD_Printf@v_num_u16+1,w
  1590  06E0  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1591  06E1  01A6               	clrf	LCD_DisplayNumber@v_number_u32+2
  1592  06E2  01A7               	clrf	LCD_DisplayNumber@v_number_u32+3
  1593  06E3  0862               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1594  06E4  00CD               	movwf	??_LCD_Printf
  1595  06E5  084D               	movf	??_LCD_Printf,w
  1596  06E6  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1597  06E7  3010               	movlw	16
  1598  06E8  120A  118A  23AE  120A  118A  	fcall	_LCD_DisplayNumber
  1599                           
  1600                           ;lcd.c: 759: break;
  1601  06ED  2FD4               	goto	l2263
  1602  06EE                     l2217:	
  1603                           ;lcd.c: 761: case 'X':
  1604                           
  1605                           
  1606                           ;lcd.c: 762: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1607  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  1608  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  1609  06F0  0863               	movf	LCD_Printf@argp,w
  1610  06F1  0084               	movwf	4
  1611  06F2  1383               	bcf	3,7	;select IRP bank0
  1612  06F3  0800               	movf	0,w
  1613  06F4  00DA               	movwf	LCD_Printf@v_num_u32
  1614  06F5  0A84               	incf	4,f
  1615  06F6  0800               	movf	0,w
  1616  06F7  00DB               	movwf	LCD_Printf@v_num_u32+1
  1617  06F8  0A84               	incf	4,f
  1618  06F9  0800               	movf	0,w
  1619  06FA  00DC               	movwf	LCD_Printf@v_num_u32+2
  1620  06FB  0A84               	incf	4,f
  1621  06FC  0800               	movf	0,w
  1622  06FD  00DD               	movwf	LCD_Printf@v_num_u32+3
  1623  06FE  3004               	movlw	4
  1624  06FF  00CD               	movwf	??_LCD_Printf
  1625  0700  084D               	movf	??_LCD_Printf,w
  1626  0701  07E3               	addwf	LCD_Printf@argp,f
  1627                           
  1628                           ;lcd.c: 763: LCD_DisplayNumber(16u,v_num_u32,v_numOfDigitsToDisp_u8);
  1629  0702  085D               	movf	LCD_Printf@v_num_u32+3,w
  1630  0703  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  1631  0704  085C               	movf	LCD_Printf@v_num_u32+2,w
  1632  0705  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  1633  0706  085B               	movf	LCD_Printf@v_num_u32+1,w
  1634  0707  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1635  0708  085A               	movf	LCD_Printf@v_num_u32,w
  1636  0709  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1637  070A  0862               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1638  070B  00CD               	movwf	??_LCD_Printf
  1639  070C  084D               	movf	??_LCD_Printf,w
  1640  070D  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1641  070E  3010               	movlw	16
  1642  070F  120A  118A  23AE  120A  118A  	fcall	_LCD_DisplayNumber
  1643                           
  1644                           ;lcd.c: 764: break;
  1645  0714  2FD4               	goto	l2263
  1646  0715                     l2223:	
  1647                           ;lcd.c: 767: case 'b':
  1648                           
  1649                           
  1650                           ;lcd.c: 768: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  1651  0715  1283               	bcf	3,5	;RP0=0, select bank0
  1652  0716  1303               	bcf	3,6	;RP1=0, select bank0
  1653  0717  0863               	movf	LCD_Printf@argp,w
  1654  0718  0084               	movwf	4
  1655  0719  1383               	bcf	3,7	;select IRP bank0
  1656  071A  0800               	movf	0,w
  1657  071B  00DE               	movwf	LCD_Printf@v_num_u16
  1658  071C  0A84               	incf	4,f
  1659  071D  0800               	movf	0,w
  1660  071E  00DF               	movwf	LCD_Printf@v_num_u16+1
  1661  071F  3002               	movlw	2
  1662  0720  00CD               	movwf	??_LCD_Printf
  1663  0721  084D               	movf	??_LCD_Printf,w
  1664  0722  07E3               	addwf	LCD_Printf@argp,f
  1665                           
  1666                           ;lcd.c: 769: if(v_numOfDigitsToDisp_u8 == 0xffu)
  1667  0723  0A62               	incf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1668  0724  1D03               	btfss	3,2
  1669  0725  2F2A               	goto	l2231
  1670                           
  1671                           ;lcd.c: 770: v_numOfDigitsToDisp_u8 = 16;
  1672  0726  3010               	movlw	16
  1673  0727  00CD               	movwf	??_LCD_Printf
  1674  0728  084D               	movf	??_LCD_Printf,w
  1675  0729  00E2               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  1676  072A                     l2231:	
  1677                           
  1678                           ;lcd.c: 771: LCD_DisplayNumber(2u,v_num_u16,v_numOfDigitsToDisp_u8);
  1679  072A  085E               	movf	LCD_Printf@v_num_u16,w
  1680  072B  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1681  072C  085F               	movf	LCD_Printf@v_num_u16+1,w
  1682  072D  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1683  072E  01A6               	clrf	LCD_DisplayNumber@v_number_u32+2
  1684  072F  01A7               	clrf	LCD_DisplayNumber@v_number_u32+3
  1685  0730  0862               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1686  0731  00CD               	movwf	??_LCD_Printf
  1687  0732  084D               	movf	??_LCD_Printf,w
  1688  0733  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1689  0734  3002               	movlw	2
  1690  0735  120A  118A  23AE  120A  118A  	fcall	_LCD_DisplayNumber
  1691                           
  1692                           ;lcd.c: 772: break;
  1693  073A  2FD4               	goto	l2263
  1694  073B                     l2233:	
  1695                           ;lcd.c: 774: case 'B':
  1696                           
  1697                           
  1698                           ;lcd.c: 775: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1699  073B  1283               	bcf	3,5	;RP0=0, select bank0
  1700  073C  1303               	bcf	3,6	;RP1=0, select bank0
  1701  073D  0863               	movf	LCD_Printf@argp,w
  1702  073E  0084               	movwf	4
  1703  073F  1383               	bcf	3,7	;select IRP bank0
  1704  0740  0800               	movf	0,w
  1705  0741  00DA               	movwf	LCD_Printf@v_num_u32
  1706  0742  0A84               	incf	4,f
  1707  0743  0800               	movf	0,w
  1708  0744  00DB               	movwf	LCD_Printf@v_num_u32+1
  1709  0745  0A84               	incf	4,f
  1710  0746  0800               	movf	0,w
  1711  0747  00DC               	movwf	LCD_Printf@v_num_u32+2
  1712  0748  0A84               	incf	4,f
  1713  0749  0800               	movf	0,w
  1714  074A  00DD               	movwf	LCD_Printf@v_num_u32+3
  1715  074B  3004               	movlw	4
  1716  074C  00CD               	movwf	??_LCD_Printf
  1717  074D  084D               	movf	??_LCD_Printf,w
  1718  074E  07E3               	addwf	LCD_Printf@argp,f
  1719                           
  1720                           ;lcd.c: 776: if(v_numOfDigitsToDisp_u8 == 0xffu)
  1721  074F  0A62               	incf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1722  0750  1D03               	btfss	3,2
  1723  0751  2F56               	goto	l2241
  1724                           
  1725                           ;lcd.c: 777: v_numOfDigitsToDisp_u8 = 16;
  1726  0752  3010               	movlw	16
  1727  0753  00CD               	movwf	??_LCD_Printf
  1728  0754  084D               	movf	??_LCD_Printf,w
  1729  0755  00E2               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  1730  0756                     l2241:	
  1731                           
  1732                           ;lcd.c: 778: LCD_DisplayNumber(2u,v_num_u32,v_numOfDigitsToDisp_u8);
  1733  0756  085D               	movf	LCD_Printf@v_num_u32+3,w
  1734  0757  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  1735  0758  085C               	movf	LCD_Printf@v_num_u32+2,w
  1736  0759  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  1737  075A  085B               	movf	LCD_Printf@v_num_u32+1,w
  1738  075B  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1739  075C  085A               	movf	LCD_Printf@v_num_u32,w
  1740  075D  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1741  075E  0862               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1742  075F  00CD               	movwf	??_LCD_Printf
  1743  0760  084D               	movf	??_LCD_Printf,w
  1744  0761  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1745  0762  3002               	movlw	2
  1746  0763  120A  118A  23AE  120A  118A  	fcall	_LCD_DisplayNumber
  1747                           
  1748                           ;lcd.c: 779: break;
  1749  0768  2FD4               	goto	l2263
  1750  0769                     l2243:	
  1751                           ;lcd.c: 782: case 'F':
  1752                           
  1753                           
  1754                           ;lcd.c: 783: case 'f':
  1755                           ;lcd.c: 785: v_floatNum_f32 = (*(double *)__va_arg((*(double **)argp), (double)0));
  1756  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1757  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1758  076B  0863               	movf	LCD_Printf@argp,w
  1759  076C  0084               	movwf	4
  1760  076D  1383               	bcf	3,7	;select IRP bank0
  1761  076E  0800               	movf	0,w
  1762  076F  00CF               	movwf	LCD_Printf@v_floatNum_f32
  1763  0770  0A84               	incf	4,f
  1764  0771  0800               	movf	0,w
  1765  0772  00D0               	movwf	LCD_Printf@v_floatNum_f32+1
  1766  0773  0A84               	incf	4,f
  1767  0774  0800               	movf	0,w
  1768  0775  00D1               	movwf	LCD_Printf@v_floatNum_f32+2
  1769  0776  3003               	movlw	3
  1770  0777  00CD               	movwf	??_LCD_Printf
  1771  0778  084D               	movf	??_LCD_Printf,w
  1772  0779  07E3               	addwf	LCD_Printf@argp,f
  1773                           
  1774                           ;lcd.c: 786: LCD_DisplayFloatNumber(v_floatNum_f32);
  1775  077A  084F               	movf	LCD_Printf@v_floatNum_f32,w
  1776  077B  00C3               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32
  1777  077C  0850               	movf	LCD_Printf@v_floatNum_f32+1,w
  1778  077D  00C4               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+1
  1779  077E  0851               	movf	LCD_Printf@v_floatNum_f32+2,w
  1780  077F  00C5               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+2
  1781  0780  120A  158A  2761  120A  118A  	fcall	_LCD_DisplayFloatNumber
  1782                           
  1783                           ;lcd.c: 788: break;
  1784  0785  2FD4               	goto	l2263
  1785  0786                     l2249:	
  1786                           ;lcd.c: 791: case 'S':
  1787                           
  1788                           
  1789                           ;lcd.c: 792: case 's':
  1790                           ;lcd.c: 793: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  1791  0786  1283               	bcf	3,5	;RP0=0, select bank0
  1792  0787  1303               	bcf	3,6	;RP1=0, select bank0
  1793  0788  0863               	movf	LCD_Printf@argp,w
  1794  0789  0084               	movwf	4
  1795  078A  1383               	bcf	3,7	;select IRP bank0
  1796  078B  0800               	movf	0,w
  1797  078C  00CD               	movwf	??_LCD_Printf
  1798  078D  084D               	movf	??_LCD_Printf,w
  1799  078E  00D2               	movwf	LCD_Printf@str
  1800  078F  3001               	movlw	1
  1801  0790  00CD               	movwf	??_LCD_Printf
  1802  0791  084D               	movf	??_LCD_Printf,w
  1803  0792  07E3               	addwf	LCD_Printf@argp,f
  1804                           
  1805                           ;lcd.c: 794: LCD_DisplayString(str);
  1806  0793  0852               	movf	LCD_Printf@str,w
  1807  0794  120A  158A  22C1  120A  118A  	fcall	_LCD_DisplayString
  1808                           
  1809                           ;lcd.c: 795: break;
  1810  0799  2FD4               	goto	l2263
  1811  079A                     l2255:	
  1812                           ;lcd.c: 797: case '%':
  1813                           
  1814                           
  1815                           ;lcd.c: 798: LCD_DisplayChar('%');
  1816  079A  3025               	movlw	37
  1817  079B  2FCF               	goto	L1
  1818  079C                     l2259:	
  1819                           ;lcd.c: 800: }
  1820                           
  1821                           ;lcd.c: 799: break;
  1822                           
  1823  079C  1283               	bcf	3,5	;RP0=0, select bank0
  1824  079D  1303               	bcf	3,6	;RP1=0, select bank0
  1825  079E  0861               	movf	LCD_Printf@ch,w
  1826                           
  1827                           ; Switch size 1, requested type "space"
  1828                           ; Number of cases is 15, Range of values is 37 to 120
  1829                           ; switch strategies available:
  1830                           ; Name         Instructions Cycles
  1831                           ; simple_byte           46    24 (average)
  1832                           ; direct_byte          263    11 (fixed)
  1833                           ; jumptable            263     9 (fixed)
  1834                           ;	Chosen strategy is simple_byte
  1835  079F  3A25               	xorlw	37	; case 37
  1836  07A0  1903               	skipnz
  1837  07A1  2F9A               	goto	l2255
  1838  07A2  3A67               	xorlw	103	; case 66
  1839  07A3  1903               	skipnz
  1840  07A4  2F3B               	goto	l2233
  1841  07A5  3A01               	xorlw	1	; case 67
  1842  07A6  1903               	skipnz
  1843  07A7  2E10               	goto	l2171
  1844  07A8  3A07               	xorlw	7	; case 68
  1845  07A9  1903               	skipnz
  1846  07AA  2E4D               	goto	l2189
  1847  07AB  3A02               	xorlw	2	; case 70
  1848  07AC  1903               	skipnz
  1849  07AD  2F69               	goto	l2243
  1850  07AE  3A15               	xorlw	21	; case 83
  1851  07AF  1903               	skipnz
  1852  07B0  2F86               	goto	l2249
  1853  07B1  3A06               	xorlw	6	; case 85
  1854  07B2  1903               	skipnz
  1855  07B3  2EA8               	goto	l2205
  1856  07B4  3A0D               	xorlw	13	; case 88
  1857  07B5  1903               	skipnz
  1858  07B6  2EEE               	goto	l2217
  1859  07B7  3A3A               	xorlw	58	; case 98
  1860  07B8  1903               	skipnz
  1861  07B9  2F15               	goto	l2223
  1862  07BA  3A01               	xorlw	1	; case 99
  1863  07BB  1903               	skipnz
  1864  07BC  2E10               	goto	l2171
  1865  07BD  3A07               	xorlw	7	; case 100
  1866  07BE  1903               	skipnz
  1867  07BF  2E1C               	goto	l2177
  1868  07C0  3A02               	xorlw	2	; case 102
  1869  07C1  1903               	skipnz
  1870  07C2  2F69               	goto	l2243
  1871  07C3  3A15               	xorlw	21	; case 115
  1872  07C4  1903               	skipnz
  1873  07C5  2F86               	goto	l2249
  1874  07C6  3A06               	xorlw	6	; case 117
  1875  07C7  1903               	skipnz
  1876  07C8  2E89               	goto	l2199
  1877  07C9  3A0D               	xorlw	13	; case 120
  1878  07CA  1903               	skipnz
  1879  07CB  2ECF               	goto	l2211
  1880  07CC  2FD4               	goto	l2263
  1881                           
  1882                           ;lcd.c: 801: }
  1883  07CD  2FD4               	goto	l2263
  1884  07CE                     l2261:	
  1885                           
  1886                           ;lcd.c: 802: else
  1887                           ;lcd.c: 803: {
  1888                           ;lcd.c: 805: LCD_DisplayChar(ch);
  1889  07CE  0861               	movf	LCD_Printf@ch,w
  1890  07CF                     L1:	
  1891  07CF  120A  158A  22A2  120A  118A  	fcall	_LCD_DisplayChar
  1892  07D4                     l2263:	
  1893  07D4  3001               	movlw	1
  1894  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1895  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1896  07D7  00CD               	movwf	??_LCD_Printf
  1897  07D8  084D               	movf	??_LCD_Printf,w
  1898  07D9  07E0               	addwf	LCD_Printf@ptr,f
  1899  07DA  2DB4               	goto	l2265
  1900  07DB                     __end_of_LCD_Printf:	
  1901                           
  1902                           	psect	text3
  1903  0AC1                     __ptext3:	
  1904 ;; *************** function _LCD_DisplayString *****************
  1905 ;; Defined at:
  1906 ;;		line 427 in file "../00-libfiles/lcd.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  ptr_stringPo    1    wreg     PTR const unsigned char 
  1909 ;;		 -> STR_1(8), 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  ptr_stringPo    1    0[BANK0 ] PTR const unsigned char 
  1912 ;;		 -> STR_1(8), 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1922 ;;      Params:         0       0       0       0       0
  1923 ;;      Locals:         0       1       0       0       0
  1924 ;;      Temps:          1       0       0       0       0
  1925 ;;      Totals:         1       1       0       0       0
  1926 ;;Total ram usage:        2 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; Hardware stack levels required when called:    6
  1929 ;; This function calls:
  1930 ;;		_LCD_DisplayChar
  1931 ;; This function is called by:
  1932 ;;		_LCD_Printf
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function _LCD_DisplayString
  1939  0AC1                     _LCD_DisplayString:	
  1940                           
  1941                           ;incstack = 0
  1942 ;; using string table level
  1943                           ; Regs used in _LCD_DisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1944                           ;LCD_DisplayString@ptr_stringPointer_u8 stored from wreg
  1945  0AC1  1283               	bcf	3,5	;RP0=0, select bank0
  1946  0AC2  1303               	bcf	3,6	;RP1=0, select bank0
  1947  0AC3  00A0               	movwf	LCD_DisplayString@ptr_stringPointer_u8
  1948  0AC4                     l2083:	
  1949                           ;lcd.c: 429: while((*ptr_stringPointer_u8)!=0)
  1950                           
  1951  0AC4  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  1952  0AC5  0084               	movwf	4
  1953  0AC6  120A  158A  2000  120A  158A  	fcall	stringdir
  1954  0ACB  3A00               	xorlw	0
  1955  0ACC  1903               	btfsc	3,2
  1956  0ACD  0008               	return
  1957                           
  1958                           ;lcd.c: 430: LCD_DisplayChar(*ptr_stringPointer_u8++);
  1959  0ACE  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  1960  0ACF  0084               	movwf	4
  1961  0AD0  120A  158A  2000  120A  158A  	fcall	stringdir
  1962  0AD5  120A  158A  22A2  120A  158A  	fcall	_LCD_DisplayChar
  1963  0ADA  3001               	movlw	1
  1964  0ADB  00FD               	movwf	??_LCD_DisplayString
  1965  0ADC  087D               	movf	??_LCD_DisplayString,w
  1966  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0ADE  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0ADF  07A0               	addwf	LCD_DisplayString@ptr_stringPointer_u8,f
  1969  0AE0  2AC4               	goto	l2083
  1970  0AE1                     __end_of_LCD_DisplayString:	
  1971                           
  1972                           	psect	text4
  1973  0F61                     __ptext4:	
  1974 ;; *************** function _LCD_DisplayFloatNumber *****************
  1975 ;; Defined at:
  1976 ;;		line 616 in file "../00-libfiles/lcd.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  v_floatNum_f    3   35[BANK0 ] void 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  v_decNumber_    4   39[BANK0 ] unsigned long 
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      void 
  1983 ;; Registers used:
  1984 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1990 ;;      Params:         0       3       0       0       0
  1991 ;;      Locals:         0       4       0       0       0
  1992 ;;      Temps:          0       1       0       0       0
  1993 ;;      Totals:         0       8       0       0       0
  1994 ;;Total ram usage:        8 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:    7
  1997 ;; This function calls:
  1998 ;;		_LCD_DisplayChar
  1999 ;;		_LCD_DisplayNumber
  2000 ;;		___ftadd
  2001 ;;		___ftmul
  2002 ;;		___ftneg
  2003 ;;		___fttol
  2004 ;;		___lltoft
  2005 ;; This function is called by:
  2006 ;;		_LCD_Printf
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           
  2011                           ;psect for function _LCD_DisplayFloatNumber
  2012  0F61                     _LCD_DisplayFloatNumber:	
  2013                           
  2014                           ;lcd.c: 618: uint32_t v_decNumber_u32;
  2015                           ;lcd.c: 625: v_decNumber_u32 = (uint32_t) v_floatNum_f32;
  2016                           
  2017                           ;incstack = 0
  2018 ;; hardware stack exceeded
  2019                           ; Regs used in _LCD_DisplayFloatNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2020  0F61  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0F62  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0F63  0843               	movf	LCD_DisplayFloatNumber@v_floatNum_f32,w
  2023  0F64  00AA               	movwf	___fttol@f1
  2024  0F65  0844               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+1,w
  2025  0F66  00AB               	movwf	___fttol@f1+1
  2026  0F67  0845               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+2,w
  2027  0F68  00AC               	movwf	___fttol@f1+2
  2028  0F69  120A  158A  26D3  120A  158A  	fcall	___fttol
  2029  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  2030  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  2031  0F70  082D               	movf	?___fttol+3,w
  2032  0F71  00CA               	movwf	LCD_DisplayFloatNumber@v_decNumber_u32+3
  2033  0F72  082C               	movf	?___fttol+2,w
  2034  0F73  00C9               	movwf	LCD_DisplayFloatNumber@v_decNumber_u32+2
  2035  0F74  082B               	movf	?___fttol+1,w
  2036  0F75  00C8               	movwf	LCD_DisplayFloatNumber@v_decNumber_u32+1
  2037  0F76  082A               	movf	?___fttol,w
  2038  0F77  00C7               	movwf	LCD_DisplayFloatNumber@v_decNumber_u32
  2039                           
  2040                           ;lcd.c: 626: LCD_DisplayNumber(10u,v_decNumber_u32,0xffu);
  2041  0F78  084A               	movf	LCD_DisplayFloatNumber@v_decNumber_u32+3,w
  2042  0F79  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2043  0F7A  0849               	movf	LCD_DisplayFloatNumber@v_decNumber_u32+2,w
  2044  0F7B  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2045  0F7C  0848               	movf	LCD_DisplayFloatNumber@v_decNumber_u32+1,w
  2046  0F7D  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2047  0F7E  0847               	movf	LCD_DisplayFloatNumber@v_decNumber_u32,w
  2048  0F7F  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2049  0F80  30FF               	movlw	255
  2050  0F81  00C6               	movwf	??_LCD_DisplayFloatNumber
  2051  0F82  0846               	movf	??_LCD_DisplayFloatNumber,w
  2052  0F83  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2053  0F84  300A               	movlw	10
  2054  0F85  120A  118A  23AE  120A  158A  	fcall	_LCD_DisplayNumber
  2055                           
  2056                           ;lcd.c: 628: LCD_DisplayChar('.');
  2057  0F8A  302E               	movlw	46
  2058  0F8B  120A  158A  22A2  120A  158A  	fcall	_LCD_DisplayChar
  2059                           
  2060                           ;lcd.c: 630: v_floatNum_f32 = v_floatNum_f32 - v_decNumber_u32;
  2061  0F90  1283               	bcf	3,5	;RP0=0, select bank0
  2062  0F91  1303               	bcf	3,6	;RP1=0, select bank0
  2063  0F92  0843               	movf	LCD_DisplayFloatNumber@v_floatNum_f32,w
  2064  0F93  00A3               	movwf	___ftadd@f1
  2065  0F94  0844               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+1,w
  2066  0F95  00A4               	movwf	___ftadd@f1+1
  2067  0F96  0845               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+2,w
  2068  0F97  00A5               	movwf	___ftadd@f1+2
  2069  0F98  084A               	movf	LCD_DisplayFloatNumber@v_decNumber_u32+3,w
  2070  0F99  00FB               	movwf	___lltoft@c+3
  2071  0F9A  0849               	movf	LCD_DisplayFloatNumber@v_decNumber_u32+2,w
  2072  0F9B  00FA               	movwf	___lltoft@c+2
  2073  0F9C  0848               	movf	LCD_DisplayFloatNumber@v_decNumber_u32+1,w
  2074  0F9D  00F9               	movwf	___lltoft@c+1
  2075  0F9E  0847               	movf	LCD_DisplayFloatNumber@v_decNumber_u32,w
  2076  0F9F  00F8               	movwf	___lltoft@c
  2077  0FA0  120A  158A  22E1  120A  158A  	fcall	___lltoft
  2078  0FA5  0878               	movf	?___lltoft,w
  2079  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  2081  0FA8  00A0               	movwf	___ftneg@f1
  2082  0FA9  0879               	movf	?___lltoft+1,w
  2083  0FAA  00A1               	movwf	___ftneg@f1+1
  2084  0FAB  087A               	movf	?___lltoft+2,w
  2085  0FAC  00A2               	movwf	___ftneg@f1+2
  2086  0FAD  120A  158A  2232  120A  158A  	fcall	___ftneg
  2087  0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  2088  0FB3  1303               	bcf	3,6	;RP1=0, select bank0
  2089  0FB4  0820               	movf	?___ftneg,w
  2090  0FB5  00A6               	movwf	___ftadd@f2
  2091  0FB6  0821               	movf	?___ftneg+1,w
  2092  0FB7  00A7               	movwf	___ftadd@f2+1
  2093  0FB8  0822               	movf	?___ftneg+2,w
  2094  0FB9  00A8               	movwf	___ftadd@f2+2
  2095  0FBA  120A  118A  24A0  120A  158A  	fcall	___ftadd
  2096  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  2098  0FC1  0823               	movf	?___ftadd,w
  2099  0FC2  00C3               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32
  2100  0FC3  0824               	movf	?___ftadd+1,w
  2101  0FC4  00C4               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+1
  2102  0FC5  0825               	movf	?___ftadd+2,w
  2103  0FC6  00C5               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+2
  2104                           
  2105                           ;lcd.c: 631: v_decNumber_u32 = v_floatNum_f32 * 1000000;
  2106  0FC7  0843               	movf	LCD_DisplayFloatNumber@v_floatNum_f32,w
  2107  0FC8  00FB               	movwf	___ftmul@f2
  2108  0FC9  0844               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+1,w
  2109  0FCA  00FC               	movwf	___ftmul@f2+1
  2110  0FCB  0845               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+2,w
  2111  0FCC  00FD               	movwf	___ftmul@f2+2
  2112  0FCD  3024               	movlw	36
  2113  0FCE  00F8               	movwf	___ftmul@f1
  2114  0FCF  3074               	movlw	116
  2115  0FD0  00F9               	movwf	___ftmul@f1+1
  2116  0FD1  3049               	movlw	73
  2117  0FD2  00FA               	movwf	___ftmul@f1+2
  2118  0FD3  120A  118A  205A  120A  158A  	fcall	___ftmul
  2119  0FD8  0878               	movf	?___ftmul,w
  2120  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  2121  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  2122  0FDB  00AA               	movwf	___fttol@f1
  2123  0FDC  0879               	movf	?___ftmul+1,w
  2124  0FDD  00AB               	movwf	___fttol@f1+1
  2125  0FDE  087A               	movf	?___ftmul+2,w
  2126  0FDF  00AC               	movwf	___fttol@f1+2
  2127  0FE0  120A  158A  26D3  120A  158A  	fcall	___fttol
  2128  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  2129  0FE6  1303               	bcf	3,6	;RP1=0, select bank0
  2130  0FE7  082D               	movf	?___fttol+3,w
  2131  0FE8  00CA               	movwf	LCD_DisplayFloatNumber@v_decNumber_u32+3
  2132  0FE9  082C               	movf	?___fttol+2,w
  2133  0FEA  00C9               	movwf	LCD_DisplayFloatNumber@v_decNumber_u32+2
  2134  0FEB  082B               	movf	?___fttol+1,w
  2135  0FEC  00C8               	movwf	LCD_DisplayFloatNumber@v_decNumber_u32+1
  2136  0FED  082A               	movf	?___fttol,w
  2137  0FEE  00C7               	movwf	LCD_DisplayFloatNumber@v_decNumber_u32
  2138                           
  2139                           ;lcd.c: 632: LCD_DisplayNumber(10u,v_decNumber_u32,0xffu);
  2140  0FEF  084A               	movf	LCD_DisplayFloatNumber@v_decNumber_u32+3,w
  2141  0FF0  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2142  0FF1  0849               	movf	LCD_DisplayFloatNumber@v_decNumber_u32+2,w
  2143  0FF2  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2144  0FF3  0848               	movf	LCD_DisplayFloatNumber@v_decNumber_u32+1,w
  2145  0FF4  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2146  0FF5  0847               	movf	LCD_DisplayFloatNumber@v_decNumber_u32,w
  2147  0FF6  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2148  0FF7  30FF               	movlw	255
  2149  0FF8  00C6               	movwf	??_LCD_DisplayFloatNumber
  2150  0FF9  0846               	movf	??_LCD_DisplayFloatNumber,w
  2151  0FFA  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2152  0FFB  300A               	movlw	10
  2153  0FFC  120A  118A  23AE   	fcall	_LCD_DisplayNumber
  2154  0FFF  0008               	return
  2155  1000                     __end_of_LCD_DisplayFloatNumber:	
  2156                           
  2157                           	psect	text5
  2158  0AE1                     __ptext5:	
  2159 ;; *************** function ___lltoft *****************
  2160 ;; Defined at:
  2161 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lltoft.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  c               4    8[COMMON] unsigned long 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  exp             1   13[COMMON] unsigned char 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  3    8[COMMON] float 
  2168 ;; Registers used:
  2169 ;;		wreg, status,2, status,0, pclath, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2175 ;;      Params:         4       0       0       0       0
  2176 ;;      Locals:         1       0       0       0       0
  2177 ;;      Temps:          1       0       0       0       0
  2178 ;;      Totals:         6       0       0       0       0
  2179 ;;Total ram usage:        6 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; Hardware stack levels required when called:    1
  2182 ;; This function calls:
  2183 ;;		___ftpack
  2184 ;; This function is called by:
  2185 ;;		_LCD_DisplayFloatNumber
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           
  2190                           ;psect for function ___lltoft
  2191  0AE1                     ___lltoft:	
  2192                           
  2193                           ;incstack = 0
  2194                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  2195  0AE1  308E               	movlw	142
  2196  0AE2  00FC               	movwf	??___lltoft
  2197  0AE3  087C               	movf	??___lltoft,w
  2198  0AE4  00FD               	movwf	___lltoft@exp
  2199  0AE5                     l2051:	
  2200  0AE5  30FF               	movlw	255
  2201  0AE6  057B               	andwf	___lltoft@c+3,w
  2202  0AE7  1903               	btfsc	3,2
  2203  0AE8  2AF7               	goto	l2053
  2204  0AE9  3001               	movlw	1
  2205  0AEA                     u3465:	
  2206  0AEA  1003               	clrc
  2207  0AEB  0CFB               	rrf	___lltoft@c+3,f
  2208  0AEC  0CFA               	rrf	___lltoft@c+2,f
  2209  0AED  0CF9               	rrf	___lltoft@c+1,f
  2210  0AEE  0CF8               	rrf	___lltoft@c,f
  2211  0AEF  3EFF               	addlw	-1
  2212  0AF0  1D03               	skipz
  2213  0AF1  2AEA               	goto	u3465
  2214  0AF2  3001               	movlw	1
  2215  0AF3  00FC               	movwf	??___lltoft
  2216  0AF4  087C               	movf	??___lltoft,w
  2217  0AF5  07FD               	addwf	___lltoft@exp,f
  2218  0AF6  2AE5               	goto	l2051
  2219  0AF7                     l2053:	
  2220  0AF7  0878               	movf	___lltoft@c,w
  2221  0AF8  00F0               	movwf	___ftpack@arg
  2222  0AF9  0879               	movf	___lltoft@c+1,w
  2223  0AFA  00F1               	movwf	___ftpack@arg+1
  2224  0AFB  087A               	movf	___lltoft@c+2,w
  2225  0AFC  00F2               	movwf	___ftpack@arg+2
  2226  0AFD  087D               	movf	___lltoft@exp,w
  2227  0AFE  00FC               	movwf	??___lltoft
  2228  0AFF  087C               	movf	??___lltoft,w
  2229  0B00  00F3               	movwf	___ftpack@exp
  2230  0B01  01F4               	clrf	___ftpack@sign
  2231  0B02  120A  158A  2566   	fcall	___ftpack
  2232  0B05  0870               	movf	?___ftpack,w
  2233  0B06  00F8               	movwf	?___lltoft
  2234  0B07  0871               	movf	?___ftpack+1,w
  2235  0B08  00F9               	movwf	?___lltoft+1
  2236  0B09  0872               	movf	?___ftpack+2,w
  2237  0B0A  00FA               	movwf	?___lltoft+2
  2238  0B0B  0008               	return
  2239  0B0C                     __end_of___lltoft:	
  2240                           
  2241                           	psect	text6
  2242  0ED3                     __ptext6:	
  2243 ;; *************** function ___fttol *****************
  2244 ;; Defined at:
  2245 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\fttol.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  f1              3   10[BANK0 ] float 
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;  lval            4   19[BANK0 ] unsigned long 
  2250 ;;  exp1            1   23[BANK0 ] unsigned char 
  2251 ;;  sign1           1   18[BANK0 ] unsigned char 
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  4   10[BANK0 ] long 
  2254 ;; Registers used:
  2255 ;;		wreg, status,2, status,0
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2261 ;;      Params:         0       4       0       0       0
  2262 ;;      Locals:         0       6       0       0       0
  2263 ;;      Temps:          0       4       0       0       0
  2264 ;;      Totals:         0      14       0       0       0
  2265 ;;Total ram usage:       14 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_LCD_DisplayFloatNumber
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           
  2275                           ;psect for function ___fttol
  2276  0ED3                     ___fttol:	
  2277                           
  2278                           ;incstack = 0
  2279                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2280  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  2281  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  2282  0ED5  082A               	movf	___fttol@f1,w
  2283  0ED6  00AE               	movwf	??___fttol
  2284  0ED7  082B               	movf	___fttol@f1+1,w
  2285  0ED8  00AF               	movwf	??___fttol+1
  2286  0ED9  082C               	movf	___fttol@f1+2,w
  2287  0EDA  00B0               	movwf	??___fttol+2
  2288  0EDB  1003               	clrc
  2289  0EDC  0D2F               	rlf	??___fttol+1,w
  2290  0EDD  0D30               	rlf	??___fttol+2,w
  2291  0EDE  00B1               	movwf	??___fttol+3
  2292  0EDF  0831               	movf	??___fttol+3,w
  2293  0EE0  00B7               	movwf	___fttol@exp1
  2294  0EE1  0837               	movf	___fttol@exp1,w
  2295  0EE2  1D03               	btfss	3,2
  2296  0EE3  2EED               	goto	l2011
  2297  0EE4  3000               	movlw	0
  2298  0EE5  00AD               	movwf	?___fttol+3
  2299  0EE6  3000               	movlw	0
  2300  0EE7  00AC               	movwf	?___fttol+2
  2301  0EE8  3000               	movlw	0
  2302  0EE9  00AB               	movwf	?___fttol+1
  2303  0EEA  3000               	movlw	0
  2304  0EEB  00AA               	movwf	?___fttol
  2305  0EEC  0008               	return
  2306  0EED                     l2011:	
  2307  0EED  082A               	movf	___fttol@f1,w
  2308  0EEE  00AE               	movwf	??___fttol
  2309  0EEF  082B               	movf	___fttol@f1+1,w
  2310  0EF0  00AF               	movwf	??___fttol+1
  2311  0EF1  082C               	movf	___fttol@f1+2,w
  2312  0EF2  00B0               	movwf	??___fttol+2
  2313  0EF3  3017               	movlw	23
  2314  0EF4                     u3375:	
  2315  0EF4  1003               	clrc
  2316  0EF5  0CB0               	rrf	??___fttol+2,f
  2317  0EF6  0CAF               	rrf	??___fttol+1,f
  2318  0EF7  0CAE               	rrf	??___fttol,f
  2319  0EF8  3EFF               	addlw	-1
  2320  0EF9  1D03               	skipz
  2321  0EFA  2EF4               	goto	u3375
  2322  0EFB  082E               	movf	??___fttol,w
  2323  0EFC  00B1               	movwf	??___fttol+3
  2324  0EFD  0831               	movf	??___fttol+3,w
  2325  0EFE  00B2               	movwf	___fttol@sign1
  2326  0EFF  17AB               	bsf	___fttol@f1+1,7
  2327  0F00  30FF               	movlw	255
  2328  0F01  05AA               	andwf	___fttol@f1,f
  2329  0F02  30FF               	movlw	255
  2330  0F03  05AB               	andwf	___fttol@f1+1,f
  2331  0F04  3000               	movlw	0
  2332  0F05  05AC               	andwf	___fttol@f1+2,f
  2333  0F06  082A               	movf	___fttol@f1,w
  2334  0F07  00B3               	movwf	___fttol@lval
  2335  0F08  082B               	movf	___fttol@f1+1,w
  2336  0F09  00B4               	movwf	___fttol@lval+1
  2337  0F0A  082C               	movf	___fttol@f1+2,w
  2338  0F0B  00B5               	movwf	___fttol@lval+2
  2339  0F0C  01B6               	clrf	___fttol@lval+3
  2340  0F0D  308E               	movlw	142
  2341  0F0E  02B7               	subwf	___fttol@exp1,f
  2342  0F0F  1FB7               	btfss	___fttol@exp1,7
  2343  0F10  2F2F               	goto	l2031
  2344  0F11  0837               	movf	___fttol@exp1,w
  2345  0F12  3A80               	xorlw	128
  2346  0F13  3E8F               	addlw	143
  2347  0F14  1803               	skipnc
  2348  0F15  2F1F               	goto	l2029
  2349  0F16  3000               	movlw	0
  2350  0F17  00AD               	movwf	?___fttol+3
  2351  0F18  3000               	movlw	0
  2352  0F19  00AC               	movwf	?___fttol+2
  2353  0F1A  3000               	movlw	0
  2354  0F1B  00AB               	movwf	?___fttol+1
  2355  0F1C  3000               	movlw	0
  2356  0F1D  00AA               	movwf	?___fttol
  2357  0F1E  0008               	return
  2358  0F1F                     l2029:	
  2359  0F1F  3001               	movlw	1
  2360  0F20                     u3405:	
  2361  0F20  1003               	clrc
  2362  0F21  0CB6               	rrf	___fttol@lval+3,f
  2363  0F22  0CB5               	rrf	___fttol@lval+2,f
  2364  0F23  0CB4               	rrf	___fttol@lval+1,f
  2365  0F24  0CB3               	rrf	___fttol@lval,f
  2366  0F25  3EFF               	addlw	-1
  2367  0F26  1D03               	skipz
  2368  0F27  2F20               	goto	u3405
  2369  0F28  3001               	movlw	1
  2370  0F29  00AE               	movwf	??___fttol
  2371  0F2A  082E               	movf	??___fttol,w
  2372  0F2B  07B7               	addwf	___fttol@exp1,f
  2373  0F2C  1903               	btfsc	3,2
  2374  0F2D  2F4A               	goto	l2039
  2375  0F2E  2F1F               	goto	l2029
  2376  0F2F                     l2031:	
  2377  0F2F  3018               	movlw	24
  2378  0F30  0237               	subwf	___fttol@exp1,w
  2379  0F31  1C03               	skipc
  2380  0F32  2F47               	goto	l649
  2381  0F33  3000               	movlw	0
  2382  0F34  00AD               	movwf	?___fttol+3
  2383  0F35  3000               	movlw	0
  2384  0F36  00AC               	movwf	?___fttol+2
  2385  0F37  3000               	movlw	0
  2386  0F38  00AB               	movwf	?___fttol+1
  2387  0F39  3000               	movlw	0
  2388  0F3A  00AA               	movwf	?___fttol
  2389  0F3B  0008               	return
  2390  0F3C                     l2037:	
  2391  0F3C  3001               	movlw	1
  2392  0F3D  00AE               	movwf	??___fttol
  2393  0F3E                     u3435:	
  2394  0F3E  1003               	clrc
  2395  0F3F  0DB3               	rlf	___fttol@lval,f
  2396  0F40  0DB4               	rlf	___fttol@lval+1,f
  2397  0F41  0DB5               	rlf	___fttol@lval+2,f
  2398  0F42  0DB6               	rlf	___fttol@lval+3,f
  2399  0F43  0BAE               	decfsz	??___fttol,f
  2400  0F44  2F3E               	goto	u3435
  2401  0F45  3001               	movlw	1
  2402  0F46  02B7               	subwf	___fttol@exp1,f
  2403  0F47                     l649:	
  2404  0F47  0837               	movf	___fttol@exp1,w
  2405  0F48  1D03               	btfss	3,2
  2406  0F49  2F3C               	goto	l2037
  2407  0F4A                     l2039:	
  2408  0F4A  0832               	movf	___fttol@sign1,w
  2409  0F4B  1903               	btfsc	3,2
  2410  0F4C  2F58               	goto	l2043
  2411  0F4D  09B3               	comf	___fttol@lval,f
  2412  0F4E  09B4               	comf	___fttol@lval+1,f
  2413  0F4F  09B5               	comf	___fttol@lval+2,f
  2414  0F50  09B6               	comf	___fttol@lval+3,f
  2415  0F51  0AB3               	incf	___fttol@lval,f
  2416  0F52  1903               	skipnz
  2417  0F53  0AB4               	incf	___fttol@lval+1,f
  2418  0F54  1903               	skipnz
  2419  0F55  0AB5               	incf	___fttol@lval+2,f
  2420  0F56  1903               	skipnz
  2421  0F57  0AB6               	incf	___fttol@lval+3,f
  2422  0F58                     l2043:	
  2423  0F58  0836               	movf	___fttol@lval+3,w
  2424  0F59  00AD               	movwf	?___fttol+3
  2425  0F5A  0835               	movf	___fttol@lval+2,w
  2426  0F5B  00AC               	movwf	?___fttol+2
  2427  0F5C  0834               	movf	___fttol@lval+1,w
  2428  0F5D  00AB               	movwf	?___fttol+1
  2429  0F5E  0833               	movf	___fttol@lval,w
  2430  0F5F  00AA               	movwf	?___fttol
  2431  0F60  0008               	return
  2432  0F61                     __end_of___fttol:	
  2433                           
  2434                           	psect	text7
  2435  0A32                     __ptext7:	
  2436 ;; *************** function ___ftneg *****************
  2437 ;; Defined at:
  2438 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftneg.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  f1              3    0[BANK0 ] float 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;		None
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  3    0[BANK0 ] float 
  2445 ;; Registers used:
  2446 ;;		wreg
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2452 ;;      Params:         0       3       0       0       0
  2453 ;;      Locals:         0       0       0       0       0
  2454 ;;      Temps:          0       0       0       0       0
  2455 ;;      Totals:         0       3       0       0       0
  2456 ;;Total ram usage:        3 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_LCD_DisplayFloatNumber
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           
  2466                           ;psect for function ___ftneg
  2467  0A32                     ___ftneg:	
  2468                           
  2469                           ;incstack = 0
  2470                           ; Regs used in ___ftneg: [wreg]
  2471  0A32  1283               	bcf	3,5	;RP0=0, select bank0
  2472  0A33  1303               	bcf	3,6	;RP1=0, select bank0
  2473  0A34  0822               	movf	___ftneg@f1+2,w
  2474  0A35  0421               	iorwf	___ftneg@f1+1,w
  2475  0A36  0420               	iorwf	___ftneg@f1,w
  2476  0A37  1903               	skipnz
  2477  0A38  0008               	return
  2478  0A39  3080               	movlw	128
  2479  0A3A  06A2               	xorwf	___ftneg@f1+2,f
  2480  0A3B  0008               	return
  2481  0A3C                     __end_of___ftneg:	
  2482                           
  2483                           	psect	text8
  2484  005A                     __ptext8:	
  2485 ;; *************** function ___ftmul *****************
  2486 ;; Defined at:
  2487 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftmul.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  f1              3    8[COMMON] float 
  2490 ;;  f2              3   11[COMMON] float 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  2493 ;;  sign            1    9[BANK0 ] unsigned char 
  2494 ;;  cntr            1    8[BANK0 ] unsigned char 
  2495 ;;  exp             1    4[BANK0 ] unsigned char 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  3    8[COMMON] float 
  2498 ;; Registers used:
  2499 ;;		wreg, status,2, status,0, pclath, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2505 ;;      Params:         6       0       0       0       0
  2506 ;;      Locals:         0       6       0       0       0
  2507 ;;      Temps:          0       4       0       0       0
  2508 ;;      Totals:         6      10       0       0       0
  2509 ;;Total ram usage:       16 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:    1
  2512 ;; This function calls:
  2513 ;;		___ftpack
  2514 ;; This function is called by:
  2515 ;;		_LCD_DisplayFloatNumber
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           
  2520                           ;psect for function ___ftmul
  2521  005A                     ___ftmul:	
  2522                           
  2523                           ;incstack = 0
  2524                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2525  005A  0878               	movf	___ftmul@f1,w
  2526  005B  1283               	bcf	3,5	;RP0=0, select bank0
  2527  005C  1303               	bcf	3,6	;RP1=0, select bank0
  2528  005D  00A0               	movwf	??___ftmul
  2529  005E  0879               	movf	___ftmul@f1+1,w
  2530  005F  00A1               	movwf	??___ftmul+1
  2531  0060  087A               	movf	___ftmul@f1+2,w
  2532  0061  00A2               	movwf	??___ftmul+2
  2533  0062  1003               	clrc
  2534  0063  0D21               	rlf	??___ftmul+1,w
  2535  0064  0D22               	rlf	??___ftmul+2,w
  2536  0065  00A3               	movwf	??___ftmul+3
  2537  0066  0823               	movf	??___ftmul+3,w
  2538  0067  00A4               	movwf	___ftmul@exp
  2539  0068  0824               	movf	___ftmul@exp,w
  2540  0069  1D03               	btfss	3,2
  2541  006A  2872               	goto	l1953
  2542  006B  3000               	movlw	0
  2543  006C  00F8               	movwf	?___ftmul
  2544  006D  3000               	movlw	0
  2545  006E  00F9               	movwf	?___ftmul+1
  2546  006F  3000               	movlw	0
  2547  0070  00FA               	movwf	?___ftmul+2
  2548  0071  0008               	return
  2549  0072                     l1953:	
  2550  0072  087B               	movf	___ftmul@f2,w
  2551  0073  00A0               	movwf	??___ftmul
  2552  0074  087C               	movf	___ftmul@f2+1,w
  2553  0075  00A1               	movwf	??___ftmul+1
  2554  0076  087D               	movf	___ftmul@f2+2,w
  2555  0077  00A2               	movwf	??___ftmul+2
  2556  0078  1003               	clrc
  2557  0079  0D21               	rlf	??___ftmul+1,w
  2558  007A  0D22               	rlf	??___ftmul+2,w
  2559  007B  00A3               	movwf	??___ftmul+3
  2560  007C  0823               	movf	??___ftmul+3,w
  2561  007D  00A9               	movwf	___ftmul@sign
  2562  007E  0829               	movf	___ftmul@sign,w
  2563  007F  1D03               	btfss	3,2
  2564  0080  2888               	goto	l1959
  2565  0081  3000               	movlw	0
  2566  0082  00F8               	movwf	?___ftmul
  2567  0083  3000               	movlw	0
  2568  0084  00F9               	movwf	?___ftmul+1
  2569  0085  3000               	movlw	0
  2570  0086  00FA               	movwf	?___ftmul+2
  2571  0087  0008               	return
  2572  0088                     l1959:	
  2573  0088  0829               	movf	___ftmul@sign,w
  2574  0089  3E7B               	addlw	123
  2575  008A  00A0               	movwf	??___ftmul
  2576  008B  0820               	movf	??___ftmul,w
  2577  008C  07A4               	addwf	___ftmul@exp,f
  2578  008D  0878               	movf	___ftmul@f1,w
  2579  008E  00A0               	movwf	??___ftmul
  2580  008F  0879               	movf	___ftmul@f1+1,w
  2581  0090  00A1               	movwf	??___ftmul+1
  2582  0091  087A               	movf	___ftmul@f1+2,w
  2583  0092  00A2               	movwf	??___ftmul+2
  2584  0093  3010               	movlw	16
  2585  0094                     u3235:	
  2586  0094  1003               	clrc
  2587  0095  0CA2               	rrf	??___ftmul+2,f
  2588  0096  0CA1               	rrf	??___ftmul+1,f
  2589  0097  0CA0               	rrf	??___ftmul,f
  2590  0098  3EFF               	addlw	-1
  2591  0099  1D03               	skipz
  2592  009A  2894               	goto	u3235
  2593  009B  0820               	movf	??___ftmul,w
  2594  009C  00A3               	movwf	??___ftmul+3
  2595  009D  0823               	movf	??___ftmul+3,w
  2596  009E  00A9               	movwf	___ftmul@sign
  2597  009F  087B               	movf	___ftmul@f2,w
  2598  00A0  00A0               	movwf	??___ftmul
  2599  00A1  087C               	movf	___ftmul@f2+1,w
  2600  00A2  00A1               	movwf	??___ftmul+1
  2601  00A3  087D               	movf	___ftmul@f2+2,w
  2602  00A4  00A2               	movwf	??___ftmul+2
  2603  00A5  3010               	movlw	16
  2604  00A6                     u3245:	
  2605  00A6  1003               	clrc
  2606  00A7  0CA2               	rrf	??___ftmul+2,f
  2607  00A8  0CA1               	rrf	??___ftmul+1,f
  2608  00A9  0CA0               	rrf	??___ftmul,f
  2609  00AA  3EFF               	addlw	-1
  2610  00AB  1D03               	skipz
  2611  00AC  28A6               	goto	u3245
  2612  00AD  0820               	movf	??___ftmul,w
  2613  00AE  00A3               	movwf	??___ftmul+3
  2614  00AF  0823               	movf	??___ftmul+3,w
  2615  00B0  06A9               	xorwf	___ftmul@sign,f
  2616  00B1  3080               	movlw	128
  2617  00B2  00A0               	movwf	??___ftmul
  2618  00B3  0820               	movf	??___ftmul,w
  2619  00B4  05A9               	andwf	___ftmul@sign,f
  2620  00B5  17F9               	bsf	___ftmul@f1+1,7
  2621  00B6  17FC               	bsf	___ftmul@f2+1,7
  2622  00B7  30FF               	movlw	255
  2623  00B8  05FB               	andwf	___ftmul@f2,f
  2624  00B9  30FF               	movlw	255
  2625  00BA  05FC               	andwf	___ftmul@f2+1,f
  2626  00BB  3000               	movlw	0
  2627  00BC  05FD               	andwf	___ftmul@f2+2,f
  2628  00BD  3000               	movlw	0
  2629  00BE  00A5               	movwf	___ftmul@f3_as_product
  2630  00BF  3000               	movlw	0
  2631  00C0  00A6               	movwf	___ftmul@f3_as_product+1
  2632  00C1  3000               	movlw	0
  2633  00C2  00A7               	movwf	___ftmul@f3_as_product+2
  2634  00C3  3007               	movlw	7
  2635  00C4  00A0               	movwf	??___ftmul
  2636  00C5  0820               	movf	??___ftmul,w
  2637  00C6  00A8               	movwf	___ftmul@cntr
  2638  00C7                     l1971:	
  2639  00C7  1C78               	btfss	___ftmul@f1,0
  2640  00C8  28D7               	goto	l1975
  2641  00C9  087B               	movf	___ftmul@f2,w
  2642  00CA  07A5               	addwf	___ftmul@f3_as_product,f
  2643  00CB  087C               	movf	___ftmul@f2+1,w
  2644  00CC  1103               	clrz
  2645  00CD  1803               	skipnc
  2646  00CE  0A7C               	incf	___ftmul@f2+1,w
  2647  00CF  1D03               	btfss	3,2
  2648  00D0  07A6               	addwf	___ftmul@f3_as_product+1,f
  2649  00D1  087D               	movf	___ftmul@f2+2,w
  2650  00D2  1103               	clrz
  2651  00D3  1803               	skipnc
  2652  00D4  0A7D               	incf	___ftmul@f2+2,w
  2653  00D5  1D03               	btfss	3,2
  2654  00D6  07A7               	addwf	___ftmul@f3_as_product+2,f
  2655  00D7                     l1975:	
  2656  00D7  3001               	movlw	1
  2657  00D8                     u3275:	
  2658  00D8  1003               	clrc
  2659  00D9  0CFA               	rrf	___ftmul@f1+2,f
  2660  00DA  0CF9               	rrf	___ftmul@f1+1,f
  2661  00DB  0CF8               	rrf	___ftmul@f1,f
  2662  00DC  3EFF               	addlw	-1
  2663  00DD  1D03               	skipz
  2664  00DE  28D8               	goto	u3275
  2665  00DF  3001               	movlw	1
  2666  00E0                     u3285:	
  2667  00E0  1003               	clrc
  2668  00E1  0DFB               	rlf	___ftmul@f2,f
  2669  00E2  0DFC               	rlf	___ftmul@f2+1,f
  2670  00E3  0DFD               	rlf	___ftmul@f2+2,f
  2671  00E4  3EFF               	addlw	-1
  2672  00E5  1D03               	skipz
  2673  00E6  28E0               	goto	u3285
  2674  00E7  3001               	movlw	1
  2675  00E8  02A8               	subwf	___ftmul@cntr,f
  2676  00E9  1D03               	btfss	3,2
  2677  00EA  28C7               	goto	l1971
  2678  00EB  3009               	movlw	9
  2679  00EC  00A0               	movwf	??___ftmul
  2680  00ED  0820               	movf	??___ftmul,w
  2681  00EE  00A8               	movwf	___ftmul@cntr
  2682  00EF                     l1983:	
  2683  00EF  1C78               	btfss	___ftmul@f1,0
  2684  00F0  28FF               	goto	l1987
  2685  00F1  087B               	movf	___ftmul@f2,w
  2686  00F2  07A5               	addwf	___ftmul@f3_as_product,f
  2687  00F3  087C               	movf	___ftmul@f2+1,w
  2688  00F4  1103               	clrz
  2689  00F5  1803               	skipnc
  2690  00F6  0A7C               	incf	___ftmul@f2+1,w
  2691  00F7  1D03               	btfss	3,2
  2692  00F8  07A6               	addwf	___ftmul@f3_as_product+1,f
  2693  00F9  087D               	movf	___ftmul@f2+2,w
  2694  00FA  1103               	clrz
  2695  00FB  1803               	skipnc
  2696  00FC  0A7D               	incf	___ftmul@f2+2,w
  2697  00FD  1D03               	btfss	3,2
  2698  00FE  07A7               	addwf	___ftmul@f3_as_product+2,f
  2699  00FF                     l1987:	
  2700  00FF  3001               	movlw	1
  2701  0100                     u3325:	
  2702  0100  1003               	clrc
  2703  0101  0CFA               	rrf	___ftmul@f1+2,f
  2704  0102  0CF9               	rrf	___ftmul@f1+1,f
  2705  0103  0CF8               	rrf	___ftmul@f1,f
  2706  0104  3EFF               	addlw	-1
  2707  0105  1D03               	skipz
  2708  0106  2900               	goto	u3325
  2709  0107  3001               	movlw	1
  2710  0108                     u3335:	
  2711  0108  1003               	clrc
  2712  0109  0CA7               	rrf	___ftmul@f3_as_product+2,f
  2713  010A  0CA6               	rrf	___ftmul@f3_as_product+1,f
  2714  010B  0CA5               	rrf	___ftmul@f3_as_product,f
  2715  010C  3EFF               	addlw	-1
  2716  010D  1D03               	skipz
  2717  010E  2908               	goto	u3335
  2718  010F  3001               	movlw	1
  2719  0110  02A8               	subwf	___ftmul@cntr,f
  2720  0111  1D03               	btfss	3,2
  2721  0112  28EF               	goto	l1983
  2722  0113  0825               	movf	___ftmul@f3_as_product,w
  2723  0114  00F0               	movwf	___ftpack@arg
  2724  0115  0826               	movf	___ftmul@f3_as_product+1,w
  2725  0116  00F1               	movwf	___ftpack@arg+1
  2726  0117  0827               	movf	___ftmul@f3_as_product+2,w
  2727  0118  00F2               	movwf	___ftpack@arg+2
  2728  0119  0824               	movf	___ftmul@exp,w
  2729  011A  00A0               	movwf	??___ftmul
  2730  011B  0820               	movf	??___ftmul,w
  2731  011C  00F3               	movwf	___ftpack@exp
  2732  011D  0829               	movf	___ftmul@sign,w
  2733  011E  00A1               	movwf	??___ftmul+1
  2734  011F  0821               	movf	??___ftmul+1,w
  2735  0120  00F4               	movwf	___ftpack@sign
  2736  0121  120A  158A  2566   	fcall	___ftpack
  2737  0124  0870               	movf	?___ftpack,w
  2738  0125  00F8               	movwf	?___ftmul
  2739  0126  0871               	movf	?___ftpack+1,w
  2740  0127  00F9               	movwf	?___ftmul+1
  2741  0128  0872               	movf	?___ftpack+2,w
  2742  0129  00FA               	movwf	?___ftmul+2
  2743  012A  0008               	return
  2744  012B                     __end_of___ftmul:	
  2745                           
  2746                           	psect	text9
  2747  04A0                     __ptext9:	
  2748 ;; *************** function ___ftadd *****************
  2749 ;; Defined at:
  2750 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftadd.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;  f1              3    3[BANK0 ] float 
  2753 ;;  f2              3    6[BANK0 ] float 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  exp1            1   15[BANK0 ] unsigned char 
  2756 ;;  exp2            1   14[BANK0 ] unsigned char 
  2757 ;;  sign            1   13[BANK0 ] unsigned char 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  3    3[BANK0 ] float 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2, status,0, pclath, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2767 ;;      Params:         0       6       0       0       0
  2768 ;;      Locals:         0       3       0       0       0
  2769 ;;      Temps:          0       4       0       0       0
  2770 ;;      Totals:         0      13       0       0       0
  2771 ;;Total ram usage:       13 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:    1
  2774 ;; This function calls:
  2775 ;;		___ftpack
  2776 ;; This function is called by:
  2777 ;;		_LCD_DisplayFloatNumber
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           
  2782                           ;psect for function ___ftadd
  2783  04A0                     ___ftadd:	
  2784                           
  2785                           ;incstack = 0
  2786                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2787  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2788  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  2789  04A2  0823               	movf	___ftadd@f1,w
  2790  04A3  00A9               	movwf	??___ftadd
  2791  04A4  0824               	movf	___ftadd@f1+1,w
  2792  04A5  00AA               	movwf	??___ftadd+1
  2793  04A6  0825               	movf	___ftadd@f1+2,w
  2794  04A7  00AB               	movwf	??___ftadd+2
  2795  04A8  1003               	clrc
  2796  04A9  0D2A               	rlf	??___ftadd+1,w
  2797  04AA  0D2B               	rlf	??___ftadd+2,w
  2798  04AB  00AC               	movwf	??___ftadd+3
  2799  04AC  082C               	movf	??___ftadd+3,w
  2800  04AD  00AF               	movwf	___ftadd@exp1
  2801  04AE  0826               	movf	___ftadd@f2,w
  2802  04AF  00A9               	movwf	??___ftadd
  2803  04B0  0827               	movf	___ftadd@f2+1,w
  2804  04B1  00AA               	movwf	??___ftadd+1
  2805  04B2  0828               	movf	___ftadd@f2+2,w
  2806  04B3  00AB               	movwf	??___ftadd+2
  2807  04B4  1003               	clrc
  2808  04B5  0D2A               	rlf	??___ftadd+1,w
  2809  04B6  0D2B               	rlf	??___ftadd+2,w
  2810  04B7  00AC               	movwf	??___ftadd+3
  2811  04B8  082C               	movf	??___ftadd+3,w
  2812  04B9  00AE               	movwf	___ftadd@exp2
  2813  04BA  082F               	movf	___ftadd@exp1,w
  2814  04BB  1903               	btfsc	3,2
  2815  04BC  2CC9               	goto	l1883
  2816  04BD  082E               	movf	___ftadd@exp2,w
  2817  04BE  022F               	subwf	___ftadd@exp1,w
  2818  04BF  1803               	skipnc
  2819  04C0  2CD0               	goto	l1887
  2820  04C1  032F               	decf	___ftadd@exp1,w
  2821  04C2  3AFF               	xorlw	255
  2822  04C3  072E               	addwf	___ftadd@exp2,w
  2823  04C4  00A9               	movwf	??___ftadd
  2824  04C5  3019               	movlw	25
  2825  04C6  0229               	subwf	??___ftadd,w
  2826  04C7  1C03               	skipc
  2827  04C8  2CD0               	goto	l1887
  2828  04C9                     l1883:	
  2829  04C9  0826               	movf	___ftadd@f2,w
  2830  04CA  00A3               	movwf	?___ftadd
  2831  04CB  0827               	movf	___ftadd@f2+1,w
  2832  04CC  00A4               	movwf	?___ftadd+1
  2833  04CD  0828               	movf	___ftadd@f2+2,w
  2834  04CE  00A5               	movwf	?___ftadd+2
  2835  04CF  0008               	return
  2836  04D0                     l1887:	
  2837  04D0  082E               	movf	___ftadd@exp2,w
  2838  04D1  1903               	btfsc	3,2
  2839  04D2  0008               	return
  2840  04D3  082F               	movf	___ftadd@exp1,w
  2841  04D4  022E               	subwf	___ftadd@exp2,w
  2842  04D5  1803               	skipnc
  2843  04D6  2CDF               	goto	l1893
  2844  04D7  032E               	decf	___ftadd@exp2,w
  2845  04D8  3AFF               	xorlw	255
  2846  04D9  072F               	addwf	___ftadd@exp1,w
  2847  04DA  00A9               	movwf	??___ftadd
  2848  04DB  3019               	movlw	25
  2849  04DC  0229               	subwf	??___ftadd,w
  2850  04DD  1803               	btfsc	3,0
  2851  04DE  0008               	return
  2852  04DF                     l1893:	
  2853  04DF  3006               	movlw	6
  2854  04E0  00A9               	movwf	??___ftadd
  2855  04E1  0829               	movf	??___ftadd,w
  2856  04E2  00AD               	movwf	___ftadd@sign
  2857  04E3  1BA5               	btfsc	___ftadd@f1+2,7
  2858  04E4  17AD               	bsf	___ftadd@sign,7
  2859  04E5  1BA8               	btfsc	___ftadd@f2+2,7
  2860  04E6  172D               	bsf	___ftadd@sign,6
  2861  04E7  17A4               	bsf	___ftadd@f1+1,7
  2862  04E8  30FF               	movlw	255
  2863  04E9  05A3               	andwf	___ftadd@f1,f
  2864  04EA  30FF               	movlw	255
  2865  04EB  05A4               	andwf	___ftadd@f1+1,f
  2866  04EC  3000               	movlw	0
  2867  04ED  05A5               	andwf	___ftadd@f1+2,f
  2868  04EE  17A7               	bsf	___ftadd@f2+1,7
  2869  04EF  30FF               	movlw	255
  2870  04F0  05A6               	andwf	___ftadd@f2,f
  2871  04F1  30FF               	movlw	255
  2872  04F2  05A7               	andwf	___ftadd@f2+1,f
  2873  04F3  3000               	movlw	0
  2874  04F4  05A8               	andwf	___ftadd@f2+2,f
  2875  04F5  082E               	movf	___ftadd@exp2,w
  2876  04F6  022F               	subwf	___ftadd@exp1,w
  2877  04F7  1803               	skipnc
  2878  04F8  2D1F               	goto	l1915
  2879  04F9                     l1905:	
  2880  04F9  3001               	movlw	1
  2881  04FA                     u3065:	
  2882  04FA  1003               	clrc
  2883  04FB  0DA6               	rlf	___ftadd@f2,f
  2884  04FC  0DA7               	rlf	___ftadd@f2+1,f
  2885  04FD  0DA8               	rlf	___ftadd@f2+2,f
  2886  04FE  3EFF               	addlw	-1
  2887  04FF  1D03               	skipz
  2888  0500  2CFA               	goto	u3065
  2889  0501  3001               	movlw	1
  2890  0502  02AE               	subwf	___ftadd@exp2,f
  2891  0503  082E               	movf	___ftadd@exp2,w
  2892  0504  062F               	xorwf	___ftadd@exp1,w
  2893  0505  1903               	skipnz
  2894  0506  2D1A               	goto	l1913
  2895  0507  3001               	movlw	1
  2896  0508  02AD               	subwf	___ftadd@sign,f
  2897  0509  082D               	movf	___ftadd@sign,w
  2898  050A  3907               	andlw	7
  2899  050B  1903               	btfsc	3,2
  2900  050C  2D1A               	goto	l1913
  2901  050D  2CF9               	goto	l1905
  2902  050E                     l1911:	
  2903  050E  3001               	movlw	1
  2904  050F                     u3095:	
  2905  050F  1003               	clrc
  2906  0510  0CA5               	rrf	___ftadd@f1+2,f
  2907  0511  0CA4               	rrf	___ftadd@f1+1,f
  2908  0512  0CA3               	rrf	___ftadd@f1,f
  2909  0513  3EFF               	addlw	-1
  2910  0514  1D03               	skipz
  2911  0515  2D0F               	goto	u3095
  2912  0516  3001               	movlw	1
  2913  0517  00A9               	movwf	??___ftadd
  2914  0518  0829               	movf	??___ftadd,w
  2915  0519  07AF               	addwf	___ftadd@exp1,f
  2916  051A                     l1913:	
  2917  051A  082F               	movf	___ftadd@exp1,w
  2918  051B  062E               	xorwf	___ftadd@exp2,w
  2919  051C  1903               	btfsc	3,2
  2920  051D  2D48               	goto	l589
  2921  051E  2D0E               	goto	l1911
  2922  051F                     l1915:	
  2923  051F  082F               	movf	___ftadd@exp1,w
  2924  0520  022E               	subwf	___ftadd@exp2,w
  2925  0521  1803               	skipnc
  2926  0522  2D48               	goto	l589
  2927  0523                     l1917:	
  2928  0523  3001               	movlw	1
  2929  0524                     u3125:	
  2930  0524  1003               	clrc
  2931  0525  0DA3               	rlf	___ftadd@f1,f
  2932  0526  0DA4               	rlf	___ftadd@f1+1,f
  2933  0527  0DA5               	rlf	___ftadd@f1+2,f
  2934  0528  3EFF               	addlw	-1
  2935  0529  1D03               	skipz
  2936  052A  2D24               	goto	u3125
  2937  052B  3001               	movlw	1
  2938  052C  02AF               	subwf	___ftadd@exp1,f
  2939  052D  082E               	movf	___ftadd@exp2,w
  2940  052E  062F               	xorwf	___ftadd@exp1,w
  2941  052F  1903               	skipnz
  2942  0530  2D44               	goto	l1925
  2943  0531  3001               	movlw	1
  2944  0532  02AD               	subwf	___ftadd@sign,f
  2945  0533  082D               	movf	___ftadd@sign,w
  2946  0534  3907               	andlw	7
  2947  0535  1903               	btfsc	3,2
  2948  0536  2D44               	goto	l1925
  2949  0537  2D23               	goto	l1917
  2950  0538                     l1923:	
  2951  0538  3001               	movlw	1
  2952  0539                     u3155:	
  2953  0539  1003               	clrc
  2954  053A  0CA8               	rrf	___ftadd@f2+2,f
  2955  053B  0CA7               	rrf	___ftadd@f2+1,f
  2956  053C  0CA6               	rrf	___ftadd@f2,f
  2957  053D  3EFF               	addlw	-1
  2958  053E  1D03               	skipz
  2959  053F  2D39               	goto	u3155
  2960  0540  3001               	movlw	1
  2961  0541  00A9               	movwf	??___ftadd
  2962  0542  0829               	movf	??___ftadd,w
  2963  0543  07AE               	addwf	___ftadd@exp2,f
  2964  0544                     l1925:	
  2965  0544  082F               	movf	___ftadd@exp1,w
  2966  0545  062E               	xorwf	___ftadd@exp2,w
  2967  0546  1D03               	skipz
  2968  0547  2D38               	goto	l1923
  2969  0548                     l589:	
  2970  0548  1FAD               	btfss	___ftadd@sign,7
  2971  0549  2D5A               	goto	l1929
  2972  054A  30FF               	movlw	255
  2973  054B  06A3               	xorwf	___ftadd@f1,f
  2974  054C  30FF               	movlw	255
  2975  054D  06A4               	xorwf	___ftadd@f1+1,f
  2976  054E  30FF               	movlw	255
  2977  054F  06A5               	xorwf	___ftadd@f1+2,f
  2978  0550  3001               	movlw	1
  2979  0551  07A3               	addwf	___ftadd@f1,f
  2980  0552  3000               	movlw	0
  2981  0553  1803               	skipnc
  2982  0554  3001               	movlw	1
  2983  0555  07A4               	addwf	___ftadd@f1+1,f
  2984  0556  3000               	movlw	0
  2985  0557  1803               	skipnc
  2986  0558  3001               	movlw	1
  2987  0559  07A5               	addwf	___ftadd@f1+2,f
  2988  055A                     l1929:	
  2989  055A  1F2D               	btfss	___ftadd@sign,6
  2990  055B  2D6C               	goto	l1933
  2991  055C  30FF               	movlw	255
  2992  055D  06A6               	xorwf	___ftadd@f2,f
  2993  055E  30FF               	movlw	255
  2994  055F  06A7               	xorwf	___ftadd@f2+1,f
  2995  0560  30FF               	movlw	255
  2996  0561  06A8               	xorwf	___ftadd@f2+2,f
  2997  0562  3001               	movlw	1
  2998  0563  07A6               	addwf	___ftadd@f2,f
  2999  0564  3000               	movlw	0
  3000  0565  1803               	skipnc
  3001  0566  3001               	movlw	1
  3002  0567  07A7               	addwf	___ftadd@f2+1,f
  3003  0568  3000               	movlw	0
  3004  0569  1803               	skipnc
  3005  056A  3001               	movlw	1
  3006  056B  07A8               	addwf	___ftadd@f2+2,f
  3007  056C                     l1933:	
  3008  056C  01AD               	clrf	___ftadd@sign
  3009  056D  0823               	movf	___ftadd@f1,w
  3010  056E  07A6               	addwf	___ftadd@f2,f
  3011  056F  0824               	movf	___ftadd@f1+1,w
  3012  0570  1103               	clrz
  3013  0571  1803               	skipnc
  3014  0572  0A24               	incf	___ftadd@f1+1,w
  3015  0573  1D03               	btfss	3,2
  3016  0574  07A7               	addwf	___ftadd@f2+1,f
  3017  0575  0825               	movf	___ftadd@f1+2,w
  3018  0576  1103               	clrz
  3019  0577  1803               	skipnc
  3020  0578  0A25               	incf	___ftadd@f1+2,w
  3021  0579  1D03               	btfss	3,2
  3022  057A  07A8               	addwf	___ftadd@f2+2,f
  3023  057B  1FA8               	btfss	___ftadd@f2+2,7
  3024  057C  2D8F               	goto	l1943
  3025  057D  30FF               	movlw	255
  3026  057E  06A6               	xorwf	___ftadd@f2,f
  3027  057F  30FF               	movlw	255
  3028  0580  06A7               	xorwf	___ftadd@f2+1,f
  3029  0581  30FF               	movlw	255
  3030  0582  06A8               	xorwf	___ftadd@f2+2,f
  3031  0583  3001               	movlw	1
  3032  0584  07A6               	addwf	___ftadd@f2,f
  3033  0585  3000               	movlw	0
  3034  0586  1803               	skipnc
  3035  0587  3001               	movlw	1
  3036  0588  07A7               	addwf	___ftadd@f2+1,f
  3037  0589  3000               	movlw	0
  3038  058A  1803               	skipnc
  3039  058B  3001               	movlw	1
  3040  058C  07A8               	addwf	___ftadd@f2+2,f
  3041  058D  01AD               	clrf	___ftadd@sign
  3042  058E  0AAD               	incf	___ftadd@sign,f
  3043  058F                     l1943:	
  3044  058F  0826               	movf	___ftadd@f2,w
  3045  0590  00F0               	movwf	___ftpack@arg
  3046  0591  0827               	movf	___ftadd@f2+1,w
  3047  0592  00F1               	movwf	___ftpack@arg+1
  3048  0593  0828               	movf	___ftadd@f2+2,w
  3049  0594  00F2               	movwf	___ftpack@arg+2
  3050  0595  082F               	movf	___ftadd@exp1,w
  3051  0596  00A9               	movwf	??___ftadd
  3052  0597  0829               	movf	??___ftadd,w
  3053  0598  00F3               	movwf	___ftpack@exp
  3054  0599  082D               	movf	___ftadd@sign,w
  3055  059A  00AA               	movwf	??___ftadd+1
  3056  059B  082A               	movf	??___ftadd+1,w
  3057  059C  00F4               	movwf	___ftpack@sign
  3058  059D  120A  158A  2566   	fcall	___ftpack
  3059  05A0  0870               	movf	?___ftpack,w
  3060  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  3061  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  3062  05A3  00A3               	movwf	?___ftadd
  3063  05A4  0871               	movf	?___ftpack+1,w
  3064  05A5  00A4               	movwf	?___ftadd+1
  3065  05A6  0872               	movf	?___ftpack+2,w
  3066  05A7  00A5               	movwf	?___ftadd+2
  3067  05A8  0008               	return
  3068  05A9                     __end_of___ftadd:	
  3069                           
  3070                           	psect	text10
  3071  0D66                     __ptext10:	
  3072 ;; *************** function ___ftpack *****************
  3073 ;; Defined at:
  3074 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\float.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  arg             3    0[COMMON] unsigned um
  3077 ;;  exp             1    3[COMMON] unsigned char 
  3078 ;;  sign            1    4[COMMON] unsigned char 
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;		None
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  3    0[COMMON] float 
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3090 ;;      Params:         5       0       0       0       0
  3091 ;;      Locals:         0       0       0       0       0
  3092 ;;      Temps:          3       0       0       0       0
  3093 ;;      Totals:         8       0       0       0       0
  3094 ;;Total ram usage:        8 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		___ftadd
  3100 ;;		___ftmul
  3101 ;;		___lltoft
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           
  3106                           ;psect for function ___ftpack
  3107  0D66                     ___ftpack:	
  3108                           
  3109                           ;incstack = 0
  3110                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3111  0D66  0873               	movf	___ftpack@exp,w
  3112  0D67  1903               	btfsc	3,2
  3113  0D68  2D6E               	goto	l1767
  3114  0D69  0872               	movf	___ftpack@arg+2,w
  3115  0D6A  0471               	iorwf	___ftpack@arg+1,w
  3116  0D6B  0470               	iorwf	___ftpack@arg,w
  3117  0D6C  1D03               	skipz
  3118  0D6D  2D81               	goto	l1773
  3119  0D6E                     l1767:	
  3120  0D6E  3000               	movlw	0
  3121  0D6F  00F0               	movwf	?___ftpack
  3122  0D70  3000               	movlw	0
  3123  0D71  00F1               	movwf	?___ftpack+1
  3124  0D72  3000               	movlw	0
  3125  0D73  00F2               	movwf	?___ftpack+2
  3126  0D74  0008               	return
  3127  0D75                     l1771:	
  3128  0D75  3001               	movlw	1
  3129  0D76  00F5               	movwf	??___ftpack
  3130  0D77  0875               	movf	??___ftpack,w
  3131  0D78  07F3               	addwf	___ftpack@exp,f
  3132  0D79  3001               	movlw	1
  3133  0D7A                     u2675:	
  3134  0D7A  1003               	clrc
  3135  0D7B  0CF2               	rrf	___ftpack@arg+2,f
  3136  0D7C  0CF1               	rrf	___ftpack@arg+1,f
  3137  0D7D  0CF0               	rrf	___ftpack@arg,f
  3138  0D7E  3EFF               	addlw	-1
  3139  0D7F  1D03               	skipz
  3140  0D80  2D7A               	goto	u2675
  3141  0D81                     l1773:	
  3142  0D81  30FE               	movlw	254
  3143  0D82  0572               	andwf	___ftpack@arg+2,w
  3144  0D83  1903               	btfsc	3,2
  3145  0D84  2D9C               	goto	l558
  3146  0D85  2D75               	goto	l1771
  3147  0D86                     l1775:	
  3148  0D86  3001               	movlw	1
  3149  0D87  00F5               	movwf	??___ftpack
  3150  0D88  0875               	movf	??___ftpack,w
  3151  0D89  07F3               	addwf	___ftpack@exp,f
  3152  0D8A  3001               	movlw	1
  3153  0D8B  07F0               	addwf	___ftpack@arg,f
  3154  0D8C  3000               	movlw	0
  3155  0D8D  1803               	skipnc
  3156  0D8E  3001               	movlw	1
  3157  0D8F  07F1               	addwf	___ftpack@arg+1,f
  3158  0D90  3000               	movlw	0
  3159  0D91  1803               	skipnc
  3160  0D92  3001               	movlw	1
  3161  0D93  07F2               	addwf	___ftpack@arg+2,f
  3162  0D94  3001               	movlw	1
  3163  0D95                     u2695:	
  3164  0D95  1003               	clrc
  3165  0D96  0CF2               	rrf	___ftpack@arg+2,f
  3166  0D97  0CF1               	rrf	___ftpack@arg+1,f
  3167  0D98  0CF0               	rrf	___ftpack@arg,f
  3168  0D99  3EFF               	addlw	-1
  3169  0D9A  1D03               	skipz
  3170  0D9B  2D95               	goto	u2695
  3171  0D9C                     l558:	
  3172  0D9C  30FF               	movlw	255
  3173  0D9D  0572               	andwf	___ftpack@arg+2,w
  3174  0D9E  1903               	btfsc	3,2
  3175  0D9F  2DAB               	goto	l1783
  3176  0DA0  2D86               	goto	l1775
  3177  0DA1                     l1781:	
  3178  0DA1  3001               	movlw	1
  3179  0DA2  02F3               	subwf	___ftpack@exp,f
  3180  0DA3  3001               	movlw	1
  3181  0DA4                     u2715:	
  3182  0DA4  1003               	clrc
  3183  0DA5  0DF0               	rlf	___ftpack@arg,f
  3184  0DA6  0DF1               	rlf	___ftpack@arg+1,f
  3185  0DA7  0DF2               	rlf	___ftpack@arg+2,f
  3186  0DA8  3EFF               	addlw	-1
  3187  0DA9  1D03               	skipz
  3188  0DAA  2DA4               	goto	u2715
  3189  0DAB                     l1783:	
  3190  0DAB  1BF1               	btfsc	___ftpack@arg+1,7
  3191  0DAC  2DB1               	goto	l565
  3192  0DAD  3002               	movlw	2
  3193  0DAE  0273               	subwf	___ftpack@exp,w
  3194  0DAF  1803               	skipnc
  3195  0DB0  2DA1               	goto	l1781
  3196  0DB1                     l565:	
  3197  0DB1  1873               	btfsc	___ftpack@exp,0
  3198  0DB2  2DB9               	goto	l566
  3199  0DB3  30FF               	movlw	255
  3200  0DB4  05F0               	andwf	___ftpack@arg,f
  3201  0DB5  307F               	movlw	127
  3202  0DB6  05F1               	andwf	___ftpack@arg+1,f
  3203  0DB7  30FF               	movlw	255
  3204  0DB8  05F2               	andwf	___ftpack@arg+2,f
  3205  0DB9                     l566:	
  3206  0DB9  1003               	clrc
  3207  0DBA  0CF3               	rrf	___ftpack@exp,f
  3208  0DBB  0873               	movf	___ftpack@exp,w
  3209  0DBC  00F5               	movwf	??___ftpack
  3210  0DBD  01F6               	clrf	??___ftpack+1
  3211  0DBE  01F7               	clrf	??___ftpack+2
  3212  0DBF  3010               	movlw	16
  3213  0DC0                     u2755:	
  3214  0DC0  1003               	clrc
  3215  0DC1  0DF5               	rlf	??___ftpack,f
  3216  0DC2  0DF6               	rlf	??___ftpack+1,f
  3217  0DC3  0DF7               	rlf	??___ftpack+2,f
  3218  0DC4  3EFF               	addlw	-1
  3219  0DC5  1D03               	skipz
  3220  0DC6  2DC0               	goto	u2755
  3221  0DC7  0875               	movf	??___ftpack,w
  3222  0DC8  04F0               	iorwf	___ftpack@arg,f
  3223  0DC9  0876               	movf	??___ftpack+1,w
  3224  0DCA  04F1               	iorwf	___ftpack@arg+1,f
  3225  0DCB  0877               	movf	??___ftpack+2,w
  3226  0DCC  04F2               	iorwf	___ftpack@arg+2,f
  3227  0DCD  0874               	movf	___ftpack@sign,w
  3228  0DCE  1903               	btfsc	3,2
  3229  0DCF  0008               	return
  3230  0DD0  17F2               	bsf	___ftpack@arg+2,7
  3231  0DD1  0008               	return
  3232  0DD2                     __end_of___ftpack:	
  3233                           
  3234                           	psect	text11
  3235  03AE                     __ptext11:	
  3236 ;; *************** function _LCD_DisplayNumber *****************
  3237 ;; Defined at:
  3238 ;;		line 529 in file "../00-libfiles/lcd.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  v_numericSys    1    wreg     unsigned char 
  3241 ;;  v_number_u32    4    4[BANK0 ] unsigned long 
  3242 ;;  v_numOfDigit    1    8[BANK0 ] unsigned char 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  v_numericSys    1   33[BANK0 ] unsigned char 
  3245 ;;  a              10   21[BANK0 ] unsigned char [10]
  3246 ;;  i               1   34[BANK0 ] unsigned char 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      void 
  3249 ;; Registers used:
  3250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3256 ;;      Params:         0       5       0       0       0
  3257 ;;      Locals:         0      14       0       0       0
  3258 ;;      Temps:          0      12       0       0       0
  3259 ;;      Totals:         0      31       0       0       0
  3260 ;;Total ram usage:       31 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:    6
  3263 ;; This function calls:
  3264 ;;		_LCD_DisplayChar
  3265 ;;		___bmul
  3266 ;;		___lldiv
  3267 ;; This function is called by:
  3268 ;;		_LCD_DisplayFloatNumber
  3269 ;;		_LCD_Printf
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           
  3274                           ;psect for function _LCD_DisplayNumber
  3275  03AE                     _LCD_DisplayNumber:	
  3276                           
  3277                           ;incstack = 0
  3278                           ; Regs used in _LCD_DisplayNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3279                           ;LCD_DisplayNumber@v_numericSystem_u8 stored from wreg
  3280  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  3281  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  3282  03B0  00C1               	movwf	LCD_DisplayNumber@v_numericSystem_u8
  3283                           
  3284                           ;lcd.c: 531: uint8_t i=0,a[10];
  3285  03B1  01C2               	clrf	LCD_DisplayNumber@i
  3286                           
  3287                           ;lcd.c: 533: if(2u == v_numericSystem_u8)
  3288  03B2  3002               	movlw	2
  3289  03B3  0641               	xorwf	LCD_DisplayNumber@v_numericSystem_u8,w
  3290  03B4  1903               	btfsc	3,2
  3291  03B5  2BF5               	goto	l1839
  3292  03B6  2BF9               	goto	l1841
  3293  03B7                     l1833:	
  3294                           ;lcd.c: 534: {
  3295                           ;lcd.c: 535: while(v_numOfDigitsToDisplay_u8!=0)
  3296                           
  3297                           
  3298                           ;lcd.c: 536: {
  3299                           ;lcd.c: 539: i = (((v_number_u32)&((1<<((v_numOfDigitsToDisplay_u8-1)))))!=0u);
  3300  03B7  0824               	movf	LCD_DisplayNumber@v_number_u32,w
  3301  03B8  00A9               	movwf	??_LCD_DisplayNumber
  3302  03B9  0825               	movf	LCD_DisplayNumber@v_number_u32+1,w
  3303  03BA  00AA               	movwf	??_LCD_DisplayNumber+1
  3304  03BB  0826               	movf	LCD_DisplayNumber@v_number_u32+2,w
  3305  03BC  00AB               	movwf	??_LCD_DisplayNumber+2
  3306  03BD  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  3307  03BE  00AC               	movwf	??_LCD_DisplayNumber+3
  3308  03BF  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  3309  03C0  3EFF               	addlw	-1
  3310  03C1  00AD               	movwf	??_LCD_DisplayNumber+4
  3311  03C2  0AAD               	incf	??_LCD_DisplayNumber+4,f
  3312  03C3  3001               	movlw	1
  3313  03C4  00AE               	movwf	??_LCD_DisplayNumber+5
  3314  03C5  3000               	movlw	0
  3315  03C6  00AF               	movwf	??_LCD_DisplayNumber+6
  3316  03C7  2BCB               	goto	u2864
  3317  03C8                     u2865:	
  3318  03C8  1003               	clrc
  3319  03C9  0DAE               	rlf	??_LCD_DisplayNumber+5,f
  3320  03CA  0DAF               	rlf	??_LCD_DisplayNumber+6,f
  3321  03CB                     u2864:	
  3322  03CB  0BAD               	decfsz	??_LCD_DisplayNumber+4,f
  3323  03CC  2BC8               	goto	u2865
  3324  03CD  082E               	movf	??_LCD_DisplayNumber+5,w
  3325  03CE  00B0               	movwf	??_LCD_DisplayNumber+7
  3326  03CF  082F               	movf	??_LCD_DisplayNumber+6,w
  3327  03D0  00B1               	movwf	??_LCD_DisplayNumber+8
  3328  03D1  3000               	movlw	0
  3329  03D2  1BB1               	btfsc	??_LCD_DisplayNumber+8,7
  3330  03D3  30FF               	movlw	255
  3331  03D4  00B2               	movwf	??_LCD_DisplayNumber+9
  3332  03D5  00B3               	movwf	??_LCD_DisplayNumber+10
  3333  03D6  0830               	movf	??_LCD_DisplayNumber+7,w
  3334  03D7  05A9               	andwf	??_LCD_DisplayNumber,f
  3335  03D8  0831               	movf	??_LCD_DisplayNumber+8,w
  3336  03D9  05AA               	andwf	??_LCD_DisplayNumber+1,f
  3337  03DA  0832               	movf	??_LCD_DisplayNumber+9,w
  3338  03DB  05AB               	andwf	??_LCD_DisplayNumber+2,f
  3339  03DC  0833               	movf	??_LCD_DisplayNumber+10,w
  3340  03DD  05AC               	andwf	??_LCD_DisplayNumber+3,f
  3341  03DE  082C               	movf	??_LCD_DisplayNumber+3,w
  3342  03DF  042B               	iorwf	??_LCD_DisplayNumber+2,w
  3343  03E0  042A               	iorwf	??_LCD_DisplayNumber+1,w
  3344  03E1  0429               	iorwf	??_LCD_DisplayNumber,w
  3345  03E2  1903               	btfsc	3,2
  3346  03E3  2BE6               	goto	u2870
  3347  03E4  3001               	movlw	1
  3348  03E5  2BE7               	goto	u2880
  3349  03E6                     u2870:	
  3350  03E6  3000               	movlw	0
  3351  03E7                     u2880:	
  3352  03E7  00B4               	movwf	??_LCD_DisplayNumber+11
  3353  03E8  0834               	movf	??_LCD_DisplayNumber+11,w
  3354  03E9  00C2               	movwf	LCD_DisplayNumber@i
  3355                           
  3356                           ;lcd.c: 540: LCD_DisplayChar(((i)+0x30));
  3357  03EA  0842               	movf	LCD_DisplayNumber@i,w
  3358  03EB  3E30               	addlw	48
  3359  03EC  120A  158A  22A2  120A  118A  	fcall	_LCD_DisplayChar
  3360                           
  3361                           ;lcd.c: 541: v_numOfDigitsToDisplay_u8--;
  3362  03F1  3001               	movlw	1
  3363  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  3364  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  3365  03F4  02A8               	subwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,f
  3366  03F5                     l1839:	
  3367  03F5  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  3368  03F6  1903               	btfsc	3,2
  3369  03F7  0008               	return
  3370  03F8  2BB7               	goto	l1833
  3371  03F9                     l1841:	
  3372                           ;lcd.c: 542: }
  3373                           ;lcd.c: 543: }
  3374                           
  3375                           
  3376                           ;lcd.c: 544: else if(v_number_u32==0)
  3377  03F9  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  3378  03FA  0426               	iorwf	LCD_DisplayNumber@v_number_u32+2,w
  3379  03FB  0425               	iorwf	LCD_DisplayNumber@v_number_u32+1,w
  3380  03FC  0424               	iorwf	LCD_DisplayNumber@v_number_u32,w
  3381  03FD  1D03               	skipz
  3382  03FE  2C04               	goto	l1845
  3383                           
  3384                           ;lcd.c: 545: {
  3385                           ;lcd.c: 549: LCD_DisplayChar('0');
  3386  03FF  3030               	movlw	48
  3387  0400  120A  158A  22A2   	fcall	_LCD_DisplayChar
  3388                           
  3389                           ;lcd.c: 550: }
  3390  0403  0008               	return
  3391  0404                     l1845:	
  3392                           
  3393                           ;lcd.c: 551: else
  3394                           ;lcd.c: 552: {
  3395                           ;lcd.c: 553: for(i=0;i<v_numOfDigitsToDisplay_u8;i++)
  3396  0404  1283               	bcf	3,5	;RP0=0, select bank0
  3397  0405  1303               	bcf	3,6	;RP1=0, select bank0
  3398  0406  01C2               	clrf	LCD_DisplayNumber@i
  3399  0407                     l1863:	
  3400  0407  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  3401  0408  0242               	subwf	LCD_DisplayNumber@i,w
  3402  0409  1803               	btfsc	3,0
  3403  040A  2C9C               	goto	l1875
  3404                           
  3405                           ;lcd.c: 554: {
  3406                           ;lcd.c: 557: if(v_number_u32!=0)
  3407  040B  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  3408  040C  0426               	iorwf	LCD_DisplayNumber@v_number_u32+2,w
  3409  040D  0425               	iorwf	LCD_DisplayNumber@v_number_u32+1,w
  3410  040E  0424               	iorwf	LCD_DisplayNumber@v_number_u32,w
  3411  040F  1903               	skipnz
  3412  0410  2C66               	goto	l1853
  3413                           
  3414                           ;lcd.c: 558: {
  3415                           ;lcd.c: 565: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u3
      +                          2/v_numericSystem_u8)));
  3416  0411  0841               	movf	LCD_DisplayNumber@v_numericSystem_u8,w
  3417  0412  00A9               	movwf	??_LCD_DisplayNumber
  3418  0413  0829               	movf	??_LCD_DisplayNumber,w
  3419  0414  00A0               	movwf	___bmul@multiplicand
  3420  0415  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  3421  0416  00F7               	movwf	___lldiv@dividend+3
  3422  0417  0826               	movf	LCD_DisplayNumber@v_number_u32+2,w
  3423  0418  00F6               	movwf	___lldiv@dividend+2
  3424  0419  0825               	movf	LCD_DisplayNumber@v_number_u32+1,w
  3425  041A  00F5               	movwf	___lldiv@dividend+1
  3426  041B  0824               	movf	LCD_DisplayNumber@v_number_u32,w
  3427  041C  00F4               	movwf	___lldiv@dividend
  3428  041D  0841               	movf	LCD_DisplayNumber@v_numericSystem_u8,w
  3429  041E  00AA               	movwf	??_LCD_DisplayNumber+1
  3430  041F  01AB               	clrf	??_LCD_DisplayNumber+2
  3431  0420  01AC               	clrf	??_LCD_DisplayNumber+3
  3432  0421  01AD               	clrf	??_LCD_DisplayNumber+4
  3433  0422  082D               	movf	??_LCD_DisplayNumber+4,w
  3434  0423  00F3               	movwf	___lldiv@divisor+3
  3435  0424  082C               	movf	??_LCD_DisplayNumber+3,w
  3436  0425  00F2               	movwf	___lldiv@divisor+2
  3437  0426  082B               	movf	??_LCD_DisplayNumber+2,w
  3438  0427  00F1               	movwf	___lldiv@divisor+1
  3439  0428  082A               	movf	??_LCD_DisplayNumber+1,w
  3440  0429  00F0               	movwf	___lldiv@divisor
  3441  042A  120A  158A  24A0  120A  118A  	fcall	___lldiv
  3442  042F  0870               	movf	?___lldiv,w
  3443  0430  120A  158A  2252  120A  118A  	fcall	___bmul
  3444  0435  3AFF               	xorlw	255
  3445  0436  3E01               	addlw	1
  3446  0437  1283               	bcf	3,5	;RP0=0, select bank0
  3447  0438  1303               	bcf	3,6	;RP1=0, select bank0
  3448  0439  0724               	addwf	LCD_DisplayNumber@v_number_u32,w
  3449  043A  00AE               	movwf	??_LCD_DisplayNumber+5
  3450  043B  0842               	movf	LCD_DisplayNumber@i,w
  3451  043C  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  3452  043D  0084               	movwf	4
  3453  043E  082E               	movf	??_LCD_DisplayNumber+5,w
  3454  043F  1383               	bcf	3,7	;select IRP bank0
  3455  0440  0080               	movwf	0
  3456                           
  3457                           ;lcd.c: 566: v_number_u32=v_number_u32/v_numericSystem_u8;
  3458  0441  0841               	movf	LCD_DisplayNumber@v_numericSystem_u8,w
  3459  0442  00A9               	movwf	??_LCD_DisplayNumber
  3460  0443  01AA               	clrf	??_LCD_DisplayNumber+1
  3461  0444  01AB               	clrf	??_LCD_DisplayNumber+2
  3462  0445  01AC               	clrf	??_LCD_DisplayNumber+3
  3463  0446  082C               	movf	??_LCD_DisplayNumber+3,w
  3464  0447  00F3               	movwf	___lldiv@divisor+3
  3465  0448  082B               	movf	??_LCD_DisplayNumber+2,w
  3466  0449  00F2               	movwf	___lldiv@divisor+2
  3467  044A  082A               	movf	??_LCD_DisplayNumber+1,w
  3468  044B  00F1               	movwf	___lldiv@divisor+1
  3469  044C  0829               	movf	??_LCD_DisplayNumber,w
  3470  044D  00F0               	movwf	___lldiv@divisor
  3471  044E  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  3472  044F  00F7               	movwf	___lldiv@dividend+3
  3473  0450  0826               	movf	LCD_DisplayNumber@v_number_u32+2,w
  3474  0451  00F6               	movwf	___lldiv@dividend+2
  3475  0452  0825               	movf	LCD_DisplayNumber@v_number_u32+1,w
  3476  0453  00F5               	movwf	___lldiv@dividend+1
  3477  0454  0824               	movf	LCD_DisplayNumber@v_number_u32,w
  3478  0455  00F4               	movwf	___lldiv@dividend
  3479  0456  120A  158A  24A0  120A  118A  	fcall	___lldiv
  3480  045B  0873               	movf	?___lldiv+3,w
  3481  045C  1283               	bcf	3,5	;RP0=0, select bank0
  3482  045D  1303               	bcf	3,6	;RP1=0, select bank0
  3483  045E  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  3484  045F  0872               	movf	?___lldiv+2,w
  3485  0460  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  3486  0461  0871               	movf	?___lldiv+1,w
  3487  0462  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  3488  0463  0870               	movf	?___lldiv,w
  3489  0464  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  3490                           
  3491                           ;lcd.c: 567: }
  3492  0465  2C72               	goto	l1861
  3493  0466                     l1853:	
  3494                           
  3495                           ;lcd.c: 568: else if( (v_numOfDigitsToDisplay_u8 == 0xffu) ||
  3496                           ;lcd.c: 569: (v_numOfDigitsToDisplay_u8 > 10u))
  3497  0466  0A28               	incf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  3498  0467  1903               	btfsc	3,2
  3499  0468  2C9C               	goto	l1875
  3500  0469  300B               	movlw	11
  3501  046A  0228               	subwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  3502  046B  1803               	btfsc	3,0
  3503  046C  2C9C               	goto	l1875
  3504                           
  3505                           ;lcd.c: 575: else
  3506                           ;lcd.c: 576: {
  3507                           ;lcd.c: 580: a[i]=0;
  3508                           
  3509                           ;lcd.c: 574: }
  3510                           
  3511                           ;lcd.c: 570: {
  3512                           ;lcd.c: 573: break;
  3513  046D  0842               	movf	LCD_DisplayNumber@i,w
  3514  046E  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  3515  046F  0084               	movwf	4
  3516  0470  1383               	bcf	3,7	;select IRP bank0
  3517  0471  0180               	clrf	0
  3518  0472                     l1861:	
  3519  0472  3001               	movlw	1
  3520  0473  00A9               	movwf	??_LCD_DisplayNumber
  3521  0474  0829               	movf	??_LCD_DisplayNumber,w
  3522  0475  07C2               	addwf	LCD_DisplayNumber@i,f
  3523  0476  2C07               	goto	l1863
  3524  0477                     l1865:	
  3525                           ;lcd.c: 581: }
  3526                           ;lcd.c: 582: }
  3527                           ;lcd.c: 584: while(i!=0)
  3528                           
  3529                           
  3530                           ;lcd.c: 585: {
  3531                           ;lcd.c: 587: LCD_DisplayChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  3532  0477  0842               	movf	LCD_DisplayNumber@i,w
  3533  0478  3EFF               	addlw	255
  3534  0479  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  3535  047A  0084               	movwf	4
  3536  047B  300A               	movlw	10
  3537  047C  1383               	bcf	3,7	;select IRP bank0
  3538  047D  0200               	subwf	0,w
  3539  047E  1803               	skipnc
  3540  047F  2C87               	goto	l1869
  3541  0480  0842               	movf	LCD_DisplayNumber@i,w
  3542  0481  3EFF               	addlw	255
  3543  0482  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  3544  0483  0084               	movwf	4
  3545  0484  0800               	movf	0,w
  3546  0485  3E30               	addlw	48
  3547  0486  2C8D               	goto	L2
  3548  0487                     l1869:	
  3549  0487  0842               	movf	LCD_DisplayNumber@i,w
  3550  0488  3EFF               	addlw	255
  3551  0489  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  3552  048A  0084               	movwf	4
  3553  048B  0800               	movf	0,w
  3554  048C  3E37               	addlw	55
  3555  048D                     L2:	
  3556  048D  00BF               	movwf	_LCD_DisplayNumber$262
  3557  048E  3000               	movlw	0
  3558  048F  1803               	skipnc
  3559  0490  3001               	movlw	1
  3560  0491  00C0               	movwf	_LCD_DisplayNumber$262+1
  3561  0492  083F               	movf	_LCD_DisplayNumber$262,w
  3562  0493  120A  158A  22A2  120A  118A  	fcall	_LCD_DisplayChar
  3563                           
  3564                           ;lcd.c: 588: i--;
  3565  0498  3001               	movlw	1
  3566  0499  1283               	bcf	3,5	;RP0=0, select bank0
  3567  049A  1303               	bcf	3,6	;RP1=0, select bank0
  3568  049B  02C2               	subwf	LCD_DisplayNumber@i,f
  3569  049C                     l1875:	
  3570  049C  0842               	movf	LCD_DisplayNumber@i,w
  3571  049D  1903               	btfsc	3,2
  3572  049E  0008               	return
  3573  049F  2C77               	goto	l1865
  3574  04A0                     __end_of_LCD_DisplayNumber:	
  3575                           
  3576                           	psect	text12
  3577  0CA0                     __ptext12:	
  3578 ;; *************** function ___lldiv *****************
  3579 ;; Defined at:
  3580 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  divisor         4    0[COMMON] unsigned long 
  3583 ;;  dividend        4    4[COMMON] unsigned long 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  quotient        4    9[COMMON] unsigned long 
  3586 ;;  counter         1   13[COMMON] unsigned char 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  4    0[COMMON] unsigned long 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3596 ;;      Params:         8       0       0       0       0
  3597 ;;      Locals:         5       0       0       0       0
  3598 ;;      Temps:          1       0       0       0       0
  3599 ;;      Totals:        14       0       0       0       0
  3600 ;;Total ram usage:       14 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_LCD_DisplayNumber
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           
  3610                           ;psect for function ___lldiv
  3611  0CA0                     ___lldiv:	
  3612                           
  3613                           ;incstack = 0
  3614                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3615  0CA0  3000               	movlw	0
  3616  0CA1  00FC               	movwf	___lldiv@quotient+3
  3617  0CA2  3000               	movlw	0
  3618  0CA3  00FB               	movwf	___lldiv@quotient+2
  3619  0CA4  3000               	movlw	0
  3620  0CA5  00FA               	movwf	___lldiv@quotient+1
  3621  0CA6  3000               	movlw	0
  3622  0CA7  00F9               	movwf	___lldiv@quotient
  3623  0CA8  0873               	movf	___lldiv@divisor+3,w
  3624  0CA9  0472               	iorwf	___lldiv@divisor+2,w
  3625  0CAA  0471               	iorwf	___lldiv@divisor+1,w
  3626  0CAB  0470               	iorwf	___lldiv@divisor,w
  3627  0CAC  1903               	skipnz
  3628  0CAD  2CF5               	goto	l1815
  3629  0CAE  01FD               	clrf	___lldiv@counter
  3630  0CAF  0AFD               	incf	___lldiv@counter,f
  3631  0CB0                     l1801:	
  3632  0CB0  1BF3               	btfsc	___lldiv@divisor+3,7
  3633  0CB1  2CC0               	goto	l1803
  3634  0CB2  3001               	movlw	1
  3635  0CB3  00F8               	movwf	??___lldiv
  3636  0CB4                     u2785:	
  3637  0CB4  1003               	clrc
  3638  0CB5  0DF0               	rlf	___lldiv@divisor,f
  3639  0CB6  0DF1               	rlf	___lldiv@divisor+1,f
  3640  0CB7  0DF2               	rlf	___lldiv@divisor+2,f
  3641  0CB8  0DF3               	rlf	___lldiv@divisor+3,f
  3642  0CB9  0BF8               	decfsz	??___lldiv,f
  3643  0CBA  2CB4               	goto	u2785
  3644  0CBB  3001               	movlw	1
  3645  0CBC  00F8               	movwf	??___lldiv
  3646  0CBD  0878               	movf	??___lldiv,w
  3647  0CBE  07FD               	addwf	___lldiv@counter,f
  3648  0CBF  2CB0               	goto	l1801
  3649  0CC0                     l1803:	
  3650  0CC0  3001               	movlw	1
  3651  0CC1  00F8               	movwf	??___lldiv
  3652  0CC2                     u2805:	
  3653  0CC2  1003               	clrc
  3654  0CC3  0DF9               	rlf	___lldiv@quotient,f
  3655  0CC4  0DFA               	rlf	___lldiv@quotient+1,f
  3656  0CC5  0DFB               	rlf	___lldiv@quotient+2,f
  3657  0CC6  0DFC               	rlf	___lldiv@quotient+3,f
  3658  0CC7  0BF8               	decfsz	??___lldiv,f
  3659  0CC8  2CC2               	goto	u2805
  3660  0CC9  0873               	movf	___lldiv@divisor+3,w
  3661  0CCA  0277               	subwf	___lldiv@dividend+3,w
  3662  0CCB  1D03               	skipz
  3663  0CCC  2CD7               	goto	u2815
  3664  0CCD  0872               	movf	___lldiv@divisor+2,w
  3665  0CCE  0276               	subwf	___lldiv@dividend+2,w
  3666  0CCF  1D03               	skipz
  3667  0CD0  2CD7               	goto	u2815
  3668  0CD1  0871               	movf	___lldiv@divisor+1,w
  3669  0CD2  0275               	subwf	___lldiv@dividend+1,w
  3670  0CD3  1D03               	skipz
  3671  0CD4  2CD7               	goto	u2815
  3672  0CD5  0870               	movf	___lldiv@divisor,w
  3673  0CD6  0274               	subwf	___lldiv@dividend,w
  3674  0CD7                     u2815:	
  3675  0CD7  1C03               	skipc
  3676  0CD8  2CE8               	goto	l1811
  3677  0CD9  0870               	movf	___lldiv@divisor,w
  3678  0CDA  02F4               	subwf	___lldiv@dividend,f
  3679  0CDB  0871               	movf	___lldiv@divisor+1,w
  3680  0CDC  1C03               	skipc
  3681  0CDD  0F71               	incfsz	___lldiv@divisor+1,w
  3682  0CDE  02F5               	subwf	___lldiv@dividend+1,f
  3683  0CDF  0872               	movf	___lldiv@divisor+2,w
  3684  0CE0  1C03               	skipc
  3685  0CE1  0F72               	incfsz	___lldiv@divisor+2,w
  3686  0CE2  02F6               	subwf	___lldiv@dividend+2,f
  3687  0CE3  0873               	movf	___lldiv@divisor+3,w
  3688  0CE4  1C03               	skipc
  3689  0CE5  0F73               	incfsz	___lldiv@divisor+3,w
  3690  0CE6  02F7               	subwf	___lldiv@dividend+3,f
  3691  0CE7  1479               	bsf	___lldiv@quotient,0
  3692  0CE8                     l1811:	
  3693  0CE8  3001               	movlw	1
  3694  0CE9                     u2825:	
  3695  0CE9  1003               	clrc
  3696  0CEA  0CF3               	rrf	___lldiv@divisor+3,f
  3697  0CEB  0CF2               	rrf	___lldiv@divisor+2,f
  3698  0CEC  0CF1               	rrf	___lldiv@divisor+1,f
  3699  0CED  0CF0               	rrf	___lldiv@divisor,f
  3700  0CEE  3EFF               	addlw	-1
  3701  0CEF  1D03               	skipz
  3702  0CF0  2CE9               	goto	u2825
  3703  0CF1  3001               	movlw	1
  3704  0CF2  02FD               	subwf	___lldiv@counter,f
  3705  0CF3  1D03               	btfss	3,2
  3706  0CF4  2CC0               	goto	l1803
  3707  0CF5                     l1815:	
  3708  0CF5  087C               	movf	___lldiv@quotient+3,w
  3709  0CF6  00F3               	movwf	?___lldiv+3
  3710  0CF7  087B               	movf	___lldiv@quotient+2,w
  3711  0CF8  00F2               	movwf	?___lldiv+2
  3712  0CF9  087A               	movf	___lldiv@quotient+1,w
  3713  0CFA  00F1               	movwf	?___lldiv+1
  3714  0CFB  0879               	movf	___lldiv@quotient,w
  3715  0CFC  00F0               	movwf	?___lldiv
  3716  0CFD  0008               	return
  3717  0CFE                     __end_of___lldiv:	
  3718                           
  3719                           	psect	text13
  3720  0A52                     __ptext13:	
  3721 ;; *************** function ___bmul *****************
  3722 ;; Defined at:
  3723 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\Umul8.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  multiplier      1    wreg     unsigned char 
  3726 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3729 ;;  product         1    2[BANK0 ] unsigned char 
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  1    wreg      unsigned char 
  3732 ;; Registers used:
  3733 ;;		wreg, status,2, status,0
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3739 ;;      Params:         0       1       0       0       0
  3740 ;;      Locals:         0       2       0       0       0
  3741 ;;      Temps:          0       1       0       0       0
  3742 ;;      Totals:         0       4       0       0       0
  3743 ;;Total ram usage:        4 bytes
  3744 ;; Hardware stack levels used:    1
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_LCD_DisplayNumber
  3749 ;;		_LCD_Printf
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           
  3754                           ;psect for function ___bmul
  3755  0A52                     ___bmul:	
  3756                           
  3757                           ;incstack = 0
  3758                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3759                           ;___bmul@multiplier stored from wreg
  3760  0A52  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0A53  1303               	bcf	3,6	;RP1=0, select bank0
  3762  0A54  00A3               	movwf	___bmul@multiplier
  3763  0A55  01A2               	clrf	___bmul@product
  3764  0A56                     l1751:	
  3765  0A56  1C23               	btfss	___bmul@multiplier,0
  3766  0A57  2A5C               	goto	l1755
  3767  0A58  0820               	movf	___bmul@multiplicand,w
  3768  0A59  00A1               	movwf	??___bmul
  3769  0A5A  0821               	movf	??___bmul,w
  3770  0A5B  07A2               	addwf	___bmul@product,f
  3771  0A5C                     l1755:	
  3772  0A5C  1003               	clrc
  3773  0A5D  0DA0               	rlf	___bmul@multiplicand,f
  3774  0A5E  1003               	clrc
  3775  0A5F  0CA3               	rrf	___bmul@multiplier,f
  3776  0A60  0823               	movf	___bmul@multiplier,w
  3777  0A61  1D03               	btfss	3,2
  3778  0A62  2A56               	goto	l1751
  3779  0A63  0822               	movf	___bmul@product,w
  3780  0A64  0008               	return
  3781  0A65                     __end_of___bmul:	
  3782                           
  3783                           	psect	text14
  3784  0AA2                     __ptext14:	
  3785 ;; *************** function _LCD_DisplayChar *****************
  3786 ;; Defined at:
  3787 ;;		line 392 in file "../00-libfiles/lcd.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;  v_lcdData_u8    1    wreg     unsigned char 
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;  v_lcdData_u8    1   12[COMMON] unsigned char 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3801 ;;      Params:         0       0       0       0       0
  3802 ;;      Locals:         1       0       0       0       0
  3803 ;;      Temps:          1       0       0       0       0
  3804 ;;      Totals:         2       0       0       0       0
  3805 ;;Total ram usage:        2 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    5
  3808 ;; This function calls:
  3809 ;;		_LCD_GoToNextLine
  3810 ;;		_lcd_DataWrite
  3811 ;; This function is called by:
  3812 ;;		_LCD_DisplayString
  3813 ;;		_LCD_DisplayNumber
  3814 ;;		_LCD_DisplayFloatNumber
  3815 ;;		_LCD_Printf
  3816 ;;		_LCD_ScrollMessage
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           
  3821                           ;psect for function _LCD_DisplayChar
  3822  0AA2                     _LCD_DisplayChar:	
  3823                           
  3824                           ;incstack = 0
  3825                           ; Regs used in _LCD_DisplayChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3826                           ;LCD_DisplayChar@v_lcdData_u8 stored from wreg
  3827  0AA2  00FC               	movwf	LCD_DisplayChar@v_lcdData_u8
  3828                           
  3829                           ;lcd.c: 394: if((v_LcdTrackCursorPos_U8>=LCDConfig.v_MaxSupportedChars_U8) || (v_lcdData
      +                          _u8=='\n'))
  3830  0AA3  1683               	bsf	3,5	;RP0=1, select bank1
  3831  0AA4  1303               	bcf	3,6	;RP1=0, select bank1
  3832  0AA5  0821               	movf	(_LCDConfig^(0+128)+1),w
  3833  0AA6  022E               	subwf	_v_LcdTrackCursorPos_U8^(0+128),w
  3834  0AA7  1803               	skipnc
  3835  0AA8  2AAD               	goto	l1741
  3836  0AA9  300A               	movlw	10
  3837  0AAA  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  3838  0AAB  1D03               	btfss	3,2
  3839  0AAC  2AB2               	goto	l1743
  3840  0AAD                     l1741:	
  3841                           
  3842                           ;lcd.c: 395: {
  3843                           ;lcd.c: 398: LCD_GoToNextLine();
  3844  0AAD  120A  158A  2279  120A  158A  	fcall	_LCD_GoToNextLine
  3845  0AB2                     l1743:	
  3846                           
  3847                           ;lcd.c: 399: }
  3848                           ;lcd.c: 400: if(v_lcdData_u8!='\n')
  3849  0AB2  300A               	movlw	10
  3850  0AB3  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  3851  0AB4  1903               	btfsc	3,2
  3852  0AB5  0008               	return
  3853                           
  3854                           ;lcd.c: 401: {
  3855                           ;lcd.c: 403: lcd_DataWrite(v_lcdData_u8);
  3856  0AB6  087C               	movf	LCD_DisplayChar@v_lcdData_u8,w
  3857  0AB7  120A  158A  239C   	fcall	_lcd_DataWrite
  3858                           
  3859                           ;lcd.c: 404: v_LcdTrackCursorPos_U8++;
  3860  0ABA  3001               	movlw	1
  3861  0ABB  00FB               	movwf	??_LCD_DisplayChar
  3862  0ABC  087B               	movf	??_LCD_DisplayChar,w
  3863  0ABD  1683               	bsf	3,5	;RP0=1, select bank1
  3864  0ABE  1303               	bcf	3,6	;RP1=0, select bank1
  3865  0ABF  07AE               	addwf	_v_LcdTrackCursorPos_U8^(0+128),f
  3866  0AC0  0008               	return
  3867  0AC1                     __end_of_LCD_DisplayChar:	
  3868                           
  3869                           	psect	text15
  3870  0B9C                     __ptext15:	
  3871 ;; *************** function _lcd_DataWrite *****************
  3872 ;; Defined at:
  3873 ;;		line 826 in file "../00-libfiles/lcd.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  dataByte        1    wreg     unsigned char 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  dataByte        1    9[COMMON] unsigned char 
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      void 
  3880 ;; Registers used:
  3881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3887 ;;      Params:         0       0       0       0       0
  3888 ;;      Locals:         1       0       0       0       0
  3889 ;;      Temps:          2       0       0       0       0
  3890 ;;      Totals:         3       0       0       0       0
  3891 ;;Total ram usage:        3 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    3
  3894 ;; This function calls:
  3895 ;;		_lcd_BusyCheck
  3896 ;;		_lcd_SendDataSignals
  3897 ;;		_lcd_SendHigherNibble
  3898 ;;		_lcd_SendLowerNibble
  3899 ;; This function is called by:
  3900 ;;		_LCD_DisplayChar
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           
  3905                           ;psect for function _lcd_DataWrite
  3906  0B9C                     _lcd_DataWrite:	
  3907                           
  3908                           ;incstack = 0
  3909                           ; Regs used in _lcd_DataWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3910                           ;lcd_DataWrite@dataByte stored from wreg
  3911  0B9C  00F9               	movwf	lcd_DataWrite@dataByte
  3912                           
  3913                           ;lcd.c: 828: lcd_BusyCheck();
  3914  0B9D  120A  158A  2647  120A  158A  	fcall	_lcd_BusyCheck
  3915                           
  3916                           ;lcd.c: 829: if(LCDConfig.v_LcdMode_U8 == 8u)
  3917  0BA2  3008               	movlw	8
  3918  0BA3  1683               	bsf	3,5	;RP0=1, select bank1
  3919  0BA4  1303               	bcf	3,6	;RP1=0, select bank1
  3920  0BA5  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  3921  0BA6  1D03               	btfss	3,2
  3922  0BA7  2BAF               	goto	l1729
  3923                           
  3924                           ;lcd.c: 830: {
  3925                           ;lcd.c: 831: lcd_SendLowerNibble(dataByte);
  3926  0BA8  0879               	movf	lcd_DataWrite@dataByte,w
  3927  0BA9  120A  158A  2411  120A  158A  	fcall	_lcd_SendLowerNibble
  3928                           
  3929                           ;lcd.c: 832: }
  3930  0BAE  2BC7               	goto	l1733
  3931  0BAF                     l1729:	
  3932                           
  3933                           ;lcd.c: 833: else
  3934                           ;lcd.c: 834: {
  3935                           ;lcd.c: 835: lcd_SendHigherNibble(dataByte);
  3936  0BAF  0879               	movf	lcd_DataWrite@dataByte,w
  3937  0BB0  120A  158A  23D1  120A  158A  	fcall	_lcd_SendHigherNibble
  3938                           
  3939                           ;lcd.c: 836: lcd_SendDataSignals();
  3940  0BB5  120A  158A  2339  120A  158A  	fcall	_lcd_SendDataSignals
  3941                           
  3942                           ;lcd.c: 837: dataByte = dataByte << 4;
  3943  0BBA  0879               	movf	lcd_DataWrite@dataByte,w
  3944  0BBB  00F7               	movwf	??_lcd_DataWrite
  3945  0BBC  3003               	movlw	3
  3946  0BBD                     u2595:	
  3947  0BBD  1003               	clrc
  3948  0BBE  0DF7               	rlf	??_lcd_DataWrite,f
  3949  0BBF  3EFF               	addlw	-1
  3950  0BC0  1D03               	skipz
  3951  0BC1  2BBD               	goto	u2595
  3952  0BC2  1003               	clrc
  3953  0BC3  0D77               	rlf	??_lcd_DataWrite,w
  3954  0BC4  00F8               	movwf	??_lcd_DataWrite+1
  3955  0BC5  0878               	movf	??_lcd_DataWrite+1,w
  3956  0BC6  00F9               	movwf	lcd_DataWrite@dataByte
  3957  0BC7                     l1733:	
  3958                           
  3959                           ;lcd.c: 838: }
  3960                           ;lcd.c: 840: lcd_SendHigherNibble(dataByte);
  3961  0BC7  0879               	movf	lcd_DataWrite@dataByte,w
  3962  0BC8  120A  158A  23D1  120A  158A  	fcall	_lcd_SendHigherNibble
  3963                           
  3964                           ;lcd.c: 841: lcd_SendDataSignals();
  3965  0BCD  120A  158A  2339   	fcall	_lcd_SendDataSignals
  3966  0BD0  0008               	return
  3967  0BD1                     __end_of_lcd_DataWrite:	
  3968                           
  3969                           	psect	text16
  3970  0B39                     __ptext16:	
  3971 ;; *************** function _lcd_SendDataSignals *****************
  3972 ;; Defined at:
  3973 ;;		line 1002 in file "../00-libfiles/lcd.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;		None
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;		None
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  1    wreg      void 
  3980 ;; Registers used:
  3981 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3987 ;;      Params:         0       0       0       0       0
  3988 ;;      Locals:         0       0       0       0       0
  3989 ;;      Temps:          0       0       0       0       0
  3990 ;;      Totals:         0       0       0       0       0
  3991 ;;Total ram usage:        0 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; Hardware stack levels required when called:    1
  3994 ;; This function calls:
  3995 ;;		_DELAY_us
  3996 ;;		_GPIO_PinWrite
  3997 ;; This function is called by:
  3998 ;;		_lcd_DataWrite
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           
  4003                           ;psect for function _lcd_SendDataSignals
  4004  0B39                     _lcd_SendDataSignals:	
  4005                           
  4006                           ;lcd.c: 1004: GPIO_PinWrite(LCDConfig.RS,1);
  4007                           
  4008                           ;incstack = 0
  4009                           ; Regs used in _lcd_SendDataSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4010  0B39  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4011  0B3A  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  4012  0B3B  1683               	bsf	3,5	;RP0=1, select bank1
  4013  0B3C  1303               	bcf	3,6	;RP1=0, select bank1
  4014  0B3D  0823               	movf	(_LCDConfig^(0+128)+3),w
  4015  0B3E  120A  118A  22D5  120A  158A  	fcall	_GPIO_PinWrite
  4016                           
  4017                           ;lcd.c: 1005: GPIO_PinWrite(LCDConfig.RW,0);
  4018  0B43  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4019  0B44  1683               	bsf	3,5	;RP0=1, select bank1
  4020  0B45  1303               	bcf	3,6	;RP1=0, select bank1
  4021  0B46  0824               	movf	(_LCDConfig^(0+128)+4),w
  4022  0B47  120A  118A  22D5  120A  158A  	fcall	_GPIO_PinWrite
  4023                           
  4024                           ;lcd.c: 1006: GPIO_PinWrite(LCDConfig.EN,1);
  4025  0B4C  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4026  0B4D  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  4027  0B4E  1683               	bsf	3,5	;RP0=1, select bank1
  4028  0B4F  1303               	bcf	3,6	;RP1=0, select bank1
  4029  0B50  0825               	movf	(_LCDConfig^(0+128)+5),w
  4030  0B51  120A  118A  22D5  120A  158A  	fcall	_GPIO_PinWrite
  4031                           
  4032                           ;lcd.c: 1007: DELAY_us(10);
  4033  0B56  300A               	movlw	10
  4034  0B57  00F0               	movwf	DELAY_us@us_count
  4035  0B58  3000               	movlw	0
  4036  0B59  00F1               	movwf	DELAY_us@us_count+1
  4037  0B5A  120A  158A  223C  120A  158A  	fcall	_DELAY_us
  4038                           
  4039                           ;lcd.c: 1008: GPIO_PinWrite(LCDConfig.EN,0);
  4040  0B5F  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4041  0B60  1683               	bsf	3,5	;RP0=1, select bank1
  4042  0B61  1303               	bcf	3,6	;RP1=0, select bank1
  4043  0B62  0825               	movf	(_LCDConfig^(0+128)+5),w
  4044  0B63  120A  118A  22D5   	fcall	_GPIO_PinWrite
  4045  0B66  0008               	return
  4046  0B67                     __end_of_lcd_SendDataSignals:	
  4047                           
  4048                           	psect	text17
  4049  0A79                     __ptext17:	
  4050 ;; *************** function _LCD_GoToNextLine *****************
  4051 ;; Defined at:
  4052 ;;		line 292 in file "../00-libfiles/lcd.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      void 
  4059 ;; Registers used:
  4060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4066 ;;      Params:         0       0       0       0       0
  4067 ;;      Locals:         0       0       0       0       0
  4068 ;;      Temps:          1       0       0       0       0
  4069 ;;      Totals:         1       0       0       0       0
  4070 ;;Total ram usage:        1 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    4
  4073 ;; This function calls:
  4074 ;;		_LCD_CmdWrite
  4075 ;; This function is called by:
  4076 ;;		_LCD_DisplayChar
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           
  4081                           ;psect for function _LCD_GoToNextLine
  4082  0A79                     _LCD_GoToNextLine:	
  4083                           
  4084                           ;lcd.c: 296: v_LcdTrackLineNum_U8++;
  4085                           
  4086                           ;incstack = 0
  4087                           ; Regs used in _LCD_GoToNextLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4088  0A79  3001               	movlw	1
  4089  0A7A  00FA               	movwf	??_LCD_GoToNextLine
  4090  0A7B  087A               	movf	??_LCD_GoToNextLine,w
  4091  0A7C  1683               	bsf	3,5	;RP0=1, select bank1
  4092  0A7D  1303               	bcf	3,6	;RP1=0, select bank1
  4093  0A7E  07AF               	addwf	_v_LcdTrackLineNum_U8^(0+128),f
  4094                           
  4095                           ;lcd.c: 297: v_LcdTrackCursorPos_U8 = 0x00;
  4096  0A7F  01AE               	clrf	_v_LcdTrackCursorPos_U8^(0+128)
  4097                           
  4098                           ;lcd.c: 298: if(v_LcdTrackLineNum_U8 >= LCDConfig.v_MaxSupportedLines_U8)
  4099  0A80  0820               	movf	_LCDConfig^(0+128),w
  4100  0A81  022F               	subwf	_v_LcdTrackLineNum_U8^(0+128),w
  4101  0A82  1803               	btfsc	3,0
  4102                           
  4103                           ;lcd.c: 299: v_LcdTrackLineNum_U8 = 0x00;
  4104  0A83  01AF               	clrf	_v_LcdTrackLineNum_U8^(0+128)
  4105                           
  4106                           ;lcd.c: 300: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_LcdTrackLineNum_U8]);
  4107  0A84  082F               	movf	_v_LcdTrackLineNum_U8^(0+128),w
  4108  0A85  3EB0               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  4109  0A86  0084               	movwf	4
  4110  0A87  1383               	bcf	3,7	;select IRP bank1
  4111  0A88  0800               	movf	0,w
  4112  0A89  120A  158A  2367   	fcall	_LCD_CmdWrite
  4113  0A8C  0008               	return
  4114  0A8D                     __end_of_LCD_GoToNextLine:	
  4115                           
  4116                           	psect	text18
  4117  0009                     __ptext18:	
  4118 ;; *************** function _LCD_Init *****************
  4119 ;; Defined at:
  4120 ;;		line 198 in file "../00-libfiles/lcd.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  v_lcdNoOfLin    1    wreg     unsigned char 
  4123 ;;  v_MaxCharsPe    1   12[COMMON] unsigned char 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  v_lcdNoOfLin    1    0[BANK0 ] unsigned char 
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4135 ;;      Params:         1       0       0       0       0
  4136 ;;      Locals:         0       1       0       0       0
  4137 ;;      Temps:          1       0       0       0       0
  4138 ;;      Totals:         2       1       0       0       0
  4139 ;;Total ram usage:        3 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; Hardware stack levels required when called:    6
  4142 ;; This function calls:
  4143 ;;		_DELAY_ms
  4144 ;;		_LCD_Clear
  4145 ;;		_LCD_CmdWrite
  4146 ;;		_lcd_Reset
  4147 ;; This function is called by:
  4148 ;;		_main
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           
  4153                           ;psect for function _LCD_Init
  4154  0009                     _LCD_Init:	
  4155                           
  4156                           ;incstack = 0
  4157                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4158                           ;LCD_Init@v_lcdNoOfLines_u8 stored from wreg
  4159  0009  1283               	bcf	3,5	;RP0=0, select bank0
  4160  000A  1303               	bcf	3,6	;RP1=0, select bank0
  4161  000B  00A0               	movwf	LCD_Init@v_lcdNoOfLines_u8
  4162                           
  4163                           ;lcd.c: 202: LCDConfig.v_MaxSupportedChars_U8 = v_MaxCharsPerLine_u8;
  4164  000C  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  4165  000D  00FD               	movwf	??_LCD_Init
  4166  000E  087D               	movf	??_LCD_Init,w
  4167  000F  1683               	bsf	3,5	;RP0=1, select bank1
  4168  0010  1303               	bcf	3,6	;RP1=0, select bank1
  4169  0011  00A1               	movwf	(_LCDConfig^(0+128)+1)
  4170                           
  4171                           ;lcd.c: 203: LCDConfig.v_MaxSupportedLines_U8 = v_lcdNoOfLines_u8;
  4172  0012  1283               	bcf	3,5	;RP0=0, select bank0
  4173  0013  1303               	bcf	3,6	;RP1=0, select bank0
  4174  0014  0820               	movf	LCD_Init@v_lcdNoOfLines_u8,w
  4175  0015  00FD               	movwf	??_LCD_Init
  4176  0016  087D               	movf	??_LCD_Init,w
  4177  0017  1683               	bsf	3,5	;RP0=1, select bank1
  4178  0018  1303               	bcf	3,6	;RP1=0, select bank1
  4179  0019  00A0               	movwf	_LCDConfig^(0+128)
  4180                           
  4181                           ;lcd.c: 204: if(v_lcdNoOfLines_u8 > 0x02)
  4182  001A  3003               	movlw	3
  4183  001B  1283               	bcf	3,5	;RP0=0, select bank0
  4184  001C  1303               	bcf	3,6	;RP1=0, select bank0
  4185  001D  0220               	subwf	LCD_Init@v_lcdNoOfLines_u8,w
  4186  001E  1C03               	skipc
  4187  001F  282E               	goto	l2133
  4188                           
  4189                           ;lcd.c: 205: {
  4190                           ;lcd.c: 206: ARR_LcdLineNumAddress_U8[0x02] = 0x90 + (v_MaxCharsPerLine_u8 & 0x0fu);
  4191  0020  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  4192  0021  390F               	andlw	15
  4193  0022  3E90               	addlw	144
  4194  0023  00FD               	movwf	??_LCD_Init
  4195  0024  087D               	movf	??_LCD_Init,w
  4196  0025  1683               	bsf	3,5	;RP0=1, select bank1
  4197  0026  1303               	bcf	3,6	;RP1=0, select bank1
  4198  0027  00B2               	movwf	(_ARR_LcdLineNumAddress_U8^(0+128)+2)
  4199                           
  4200                           ;lcd.c: 207: ARR_LcdLineNumAddress_U8[0x03] = 0xd0 + (v_MaxCharsPerLine_u8 & 0x0fu);
  4201  0028  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  4202  0029  390F               	andlw	15
  4203  002A  3ED0               	addlw	208
  4204  002B  00FD               	movwf	??_LCD_Init
  4205  002C  087D               	movf	??_LCD_Init,w
  4206  002D  00B3               	movwf	(_ARR_LcdLineNumAddress_U8^(0+128)+3)
  4207  002E                     l2133:	
  4208                           
  4209                           ;lcd.c: 208: }
  4210                           ;lcd.c: 210: DELAY_ms(100);
  4211  002E  3064               	movlw	100
  4212  002F  00F2               	movwf	DELAY_ms@ms_count
  4213  0030  3000               	movlw	0
  4214  0031  00F3               	movwf	DELAY_ms@ms_count+1
  4215  0032  120A  158A  2265  120A  118A  	fcall	_DELAY_ms
  4216                           
  4217                           ;lcd.c: 212: if(LCDConfig.v_LcdMode_U8 == 8u)
  4218  0037  3008               	movlw	8
  4219  0038  1683               	bsf	3,5	;RP0=1, select bank1
  4220  0039  1303               	bcf	3,6	;RP1=0, select bank1
  4221  003A  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  4222  003B  1D03               	btfss	3,2
  4223  003C  283F               	goto	l2139
  4224                           
  4225                           ;lcd.c: 213: {
  4226                           ;lcd.c: 214: LCD_CmdWrite(0x38u);
  4227  003D  3038               	movlw	56
  4228  003E  284B               	goto	L3
  4229  003F                     l2139:	
  4230                           ;lcd.c: 215: }
  4231                           
  4232                           
  4233                           ;lcd.c: 216: else if(LCDConfig.v_LcdMode_U8 == 4u)
  4234  003F  3004               	movlw	4
  4235  0040  1683               	bsf	3,5	;RP0=1, select bank1
  4236  0041  1303               	bcf	3,6	;RP1=0, select bank1
  4237  0042  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  4238  0043  1D03               	btfss	3,2
  4239  0044  2850               	goto	l156
  4240                           
  4241                           ;lcd.c: 217: {
  4242                           ;lcd.c: 218: lcd_Reset();
  4243  0045  120A  158A  2451  120A  118A  	fcall	_lcd_Reset
  4244                           
  4245                           ;lcd.c: 219: LCD_CmdWrite(0x28u);
  4246  004A  3028               	movlw	40
  4247  004B                     L3:	
  4248  004B  120A  158A  2367  120A  118A  	fcall	_LCD_CmdWrite
  4249  0050                     l156:	
  4250                           
  4251                           ;lcd.c: 220: }
  4252                           ;lcd.c: 222: LCD_CmdWrite(0x0Eu);
  4253  0050  300E               	movlw	14
  4254  0051  120A  158A  2367  120A  118A  	fcall	_LCD_CmdWrite
  4255                           
  4256                           ;lcd.c: 223: LCD_Clear();
  4257  0056  120A  158A  2247   	fcall	_LCD_Clear
  4258  0059  0008               	return
  4259  005A                     __end_of_LCD_Init:	
  4260                           
  4261                           	psect	text19
  4262  0C51                     __ptext19:	
  4263 ;; *************** function _lcd_Reset *****************
  4264 ;; Defined at:
  4265 ;;		line 913 in file "../00-libfiles/lcd.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;		None
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;		None
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      void 
  4272 ;; Registers used:
  4273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4279 ;;      Params:         0       0       0       0       0
  4280 ;;      Locals:         0       0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0
  4282 ;;      Totals:         0       0       0       0       0
  4283 ;;Total ram usage:        0 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    2
  4286 ;; This function calls:
  4287 ;;		_DELAY_ms
  4288 ;;		_DELAY_us
  4289 ;;		_lcd_SendCmdSignals
  4290 ;;		_lcd_SendHigherNibble
  4291 ;; This function is called by:
  4292 ;;		_LCD_Init
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           
  4297                           ;psect for function _lcd_Reset
  4298  0C51                     _lcd_Reset:	
  4299                           
  4300                           ;lcd.c: 916: lcd_SendHigherNibble(0x30);
  4301                           
  4302                           ;incstack = 0
  4303                           ; Regs used in _lcd_Reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4304  0C51  3030               	movlw	48
  4305  0C52  120A  158A  23D1  120A  158A  	fcall	_lcd_SendHigherNibble
  4306                           
  4307                           ;lcd.c: 917: lcd_SendCmdSignals();
  4308  0C57  120A  158A  230C  120A  158A  	fcall	_lcd_SendCmdSignals
  4309                           
  4310                           ;lcd.c: 918: DELAY_ms(100);
  4311  0C5C  3064               	movlw	100
  4312  0C5D  00F2               	movwf	DELAY_ms@ms_count
  4313  0C5E  3000               	movlw	0
  4314  0C5F  00F3               	movwf	DELAY_ms@ms_count+1
  4315  0C60  120A  158A  2265  120A  158A  	fcall	_DELAY_ms
  4316                           
  4317                           ;lcd.c: 919: lcd_SendHigherNibble(0x30);
  4318  0C65  3030               	movlw	48
  4319  0C66  120A  158A  23D1  120A  158A  	fcall	_lcd_SendHigherNibble
  4320                           
  4321                           ;lcd.c: 920: lcd_SendCmdSignals();
  4322  0C6B  120A  158A  230C  120A  158A  	fcall	_lcd_SendCmdSignals
  4323                           
  4324                           ;lcd.c: 921: DELAY_us(200);
  4325  0C70  30C8               	movlw	200
  4326  0C71  00F0               	movwf	DELAY_us@us_count
  4327  0C72  3000               	movlw	0
  4328  0C73  00F1               	movwf	DELAY_us@us_count+1
  4329  0C74  120A  158A  223C  120A  158A  	fcall	_DELAY_us
  4330                           
  4331                           ;lcd.c: 922: lcd_SendHigherNibble(0x30);
  4332  0C79  3030               	movlw	48
  4333  0C7A  120A  158A  23D1  120A  158A  	fcall	_lcd_SendHigherNibble
  4334                           
  4335                           ;lcd.c: 923: lcd_SendCmdSignals();
  4336  0C7F  120A  158A  230C  120A  158A  	fcall	_lcd_SendCmdSignals
  4337                           
  4338                           ;lcd.c: 924: DELAY_us(200);
  4339  0C84  30C8               	movlw	200
  4340  0C85  00F0               	movwf	DELAY_us@us_count
  4341  0C86  3000               	movlw	0
  4342  0C87  00F1               	movwf	DELAY_us@us_count+1
  4343  0C88  120A  158A  223C  120A  158A  	fcall	_DELAY_us
  4344                           
  4345                           ;lcd.c: 925: lcd_SendHigherNibble(0x20);
  4346  0C8D  3020               	movlw	32
  4347  0C8E  120A  158A  23D1  120A  158A  	fcall	_lcd_SendHigherNibble
  4348                           
  4349                           ;lcd.c: 926: lcd_SendCmdSignals();
  4350  0C93  120A  158A  230C  120A  158A  	fcall	_lcd_SendCmdSignals
  4351                           
  4352                           ;lcd.c: 927: DELAY_us(200);
  4353  0C98  30C8               	movlw	200
  4354  0C99  00F0               	movwf	DELAY_us@us_count
  4355  0C9A  3000               	movlw	0
  4356  0C9B  00F1               	movwf	DELAY_us@us_count+1
  4357  0C9C  120A  158A  223C   	fcall	_DELAY_us
  4358  0C9F  0008               	return
  4359  0CA0                     __end_of_lcd_Reset:	
  4360                           
  4361                           	psect	text20
  4362  0A47                     __ptext20:	
  4363 ;; *************** function _LCD_Clear *****************
  4364 ;; Defined at:
  4365 ;;		line 237 in file "../00-libfiles/lcd.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      void 
  4372 ;; Registers used:
  4373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4379 ;;      Params:         0       0       0       0       0
  4380 ;;      Locals:         0       0       0       0       0
  4381 ;;      Temps:          0       0       0       0       0
  4382 ;;      Totals:         0       0       0       0       0
  4383 ;;Total ram usage:        0 bytes
  4384 ;; Hardware stack levels used:    1
  4385 ;; Hardware stack levels required when called:    5
  4386 ;; This function calls:
  4387 ;;		_LCD_CmdWrite
  4388 ;;		_LCD_GoToLine
  4389 ;; This function is called by:
  4390 ;;		_LCD_Init
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           
  4395                           ;psect for function _LCD_Clear
  4396  0A47                     _LCD_Clear:	
  4397                           
  4398                           ;lcd.c: 239: LCD_CmdWrite(0x01u);
  4399                           
  4400                           ;incstack = 0
  4401                           ; Regs used in _LCD_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4402  0A47  3001               	movlw	1
  4403  0A48  120A  158A  2367  120A  158A  	fcall	_LCD_CmdWrite
  4404                           
  4405                           ;lcd.c: 240: LCD_GoToLine(0x00);
  4406  0A4D  3000               	movlw	0
  4407  0A4E  120A  158A  228D   	fcall	_LCD_GoToLine
  4408  0A51  0008               	return
  4409  0A52                     __end_of_LCD_Clear:	
  4410                           
  4411                           	psect	text21
  4412  0A8D                     __ptext21:	
  4413 ;; *************** function _LCD_GoToLine *****************
  4414 ;; Defined at:
  4415 ;;		line 265 in file "../00-libfiles/lcd.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  v_lineNumber    1    wreg     unsigned char 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  v_lineNumber    1   11[COMMON] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      void 
  4422 ;; Registers used:
  4423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4429 ;;      Params:         0       0       0       0       0
  4430 ;;      Locals:         1       0       0       0       0
  4431 ;;      Temps:          1       0       0       0       0
  4432 ;;      Totals:         2       0       0       0       0
  4433 ;;Total ram usage:        2 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; Hardware stack levels required when called:    4
  4436 ;; This function calls:
  4437 ;;		_LCD_CmdWrite
  4438 ;; This function is called by:
  4439 ;;		_LCD_Clear
  4440 ;;		_main
  4441 ;;		_LCD_ScrollMessage
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           
  4446                           ;psect for function _LCD_GoToLine
  4447  0A8D                     _LCD_GoToLine:	
  4448                           
  4449                           ;incstack = 0
  4450                           ; Regs used in _LCD_GoToLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4451                           ;LCD_GoToLine@v_lineNumber_u8 stored from wreg
  4452  0A8D  00FB               	movwf	LCD_GoToLine@v_lineNumber_u8
  4453                           
  4454                           ;lcd.c: 267: if(v_lineNumber_u8 < LCDConfig.v_MaxSupportedLines_U8)
  4455  0A8E  1683               	bsf	3,5	;RP0=1, select bank1
  4456  0A8F  1303               	bcf	3,6	;RP1=0, select bank1
  4457  0A90  0820               	movf	_LCDConfig^(0+128),w
  4458  0A91  027B               	subwf	LCD_GoToLine@v_lineNumber_u8,w
  4459  0A92  1803               	skipnc
  4460  0A93  0008               	return
  4461                           
  4462                           ;lcd.c: 268: {
  4463                           ;lcd.c: 271: v_LcdTrackCursorPos_U8 = 0x00;
  4464  0A94  01AE               	clrf	_v_LcdTrackCursorPos_U8^(0+128)
  4465                           
  4466                           ;lcd.c: 272: v_LcdTrackLineNum_U8 = v_lineNumber_u8;
  4467  0A95  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  4468  0A96  00FA               	movwf	??_LCD_GoToLine
  4469  0A97  087A               	movf	??_LCD_GoToLine,w
  4470  0A98  00AF               	movwf	_v_LcdTrackLineNum_U8^(0+128)
  4471                           
  4472                           ;lcd.c: 273: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_lineNumber_u8]);
  4473  0A99  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  4474  0A9A  3EB0               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  4475  0A9B  0084               	movwf	4
  4476  0A9C  1383               	bcf	3,7	;select IRP bank1
  4477  0A9D  0800               	movf	0,w
  4478  0A9E  120A  158A  2367   	fcall	_LCD_CmdWrite
  4479  0AA1  0008               	return
  4480  0AA2                     __end_of_LCD_GoToLine:	
  4481                           
  4482                           	psect	text22
  4483  0B67                     __ptext22:	
  4484 ;; *************** function _LCD_CmdWrite *****************
  4485 ;; Defined at:
  4486 ;;		line 358 in file "../00-libfiles/lcd.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  v_lcdCmd_u8     1    wreg     unsigned char 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  v_lcdCmd_u8     1    9[COMMON] unsigned char 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      void 
  4493 ;; Registers used:
  4494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4500 ;;      Params:         0       0       0       0       0
  4501 ;;      Locals:         1       0       0       0       0
  4502 ;;      Temps:          2       0       0       0       0
  4503 ;;      Totals:         3       0       0       0       0
  4504 ;;Total ram usage:        3 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; Hardware stack levels required when called:    3
  4507 ;; This function calls:
  4508 ;;		_lcd_BusyCheck
  4509 ;;		_lcd_SendCmdSignals
  4510 ;;		_lcd_SendHigherNibble
  4511 ;;		_lcd_SendLowerNibble
  4512 ;; This function is called by:
  4513 ;;		_LCD_Init
  4514 ;;		_LCD_Clear
  4515 ;;		_LCD_GoToLine
  4516 ;;		_LCD_GoToNextLine
  4517 ;;		_LCD_ScrollMessage
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           
  4522                           ;psect for function _LCD_CmdWrite
  4523  0B67                     _LCD_CmdWrite:	
  4524                           
  4525                           ;incstack = 0
  4526                           ; Regs used in _LCD_CmdWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4527                           ;LCD_CmdWrite@v_lcdCmd_u8 stored from wreg
  4528  0B67  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  4529                           
  4530                           ;lcd.c: 360: lcd_BusyCheck();
  4531  0B68  120A  158A  2647  120A  158A  	fcall	_lcd_BusyCheck
  4532                           
  4533                           ;lcd.c: 361: if(LCDConfig.v_LcdMode_U8 == 8u)
  4534  0B6D  3008               	movlw	8
  4535  0B6E  1683               	bsf	3,5	;RP0=1, select bank1
  4536  0B6F  1303               	bcf	3,6	;RP1=0, select bank1
  4537  0B70  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  4538  0B71  1D03               	btfss	3,2
  4539  0B72  2B7A               	goto	l1699
  4540                           
  4541                           ;lcd.c: 362: {
  4542                           ;lcd.c: 363: lcd_SendLowerNibble(v_lcdCmd_u8);
  4543  0B73  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  4544  0B74  120A  158A  2411  120A  158A  	fcall	_lcd_SendLowerNibble
  4545                           
  4546                           ;lcd.c: 364: }
  4547  0B79  2B92               	goto	l1703
  4548  0B7A                     l1699:	
  4549                           
  4550                           ;lcd.c: 365: else
  4551                           ;lcd.c: 366: {
  4552                           ;lcd.c: 367: lcd_SendHigherNibble(v_lcdCmd_u8);
  4553  0B7A  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  4554  0B7B  120A  158A  23D1  120A  158A  	fcall	_lcd_SendHigherNibble
  4555                           
  4556                           ;lcd.c: 368: lcd_SendCmdSignals();
  4557  0B80  120A  158A  230C  120A  158A  	fcall	_lcd_SendCmdSignals
  4558                           
  4559                           ;lcd.c: 369: v_lcdCmd_u8 = v_lcdCmd_u8 << 4;
  4560  0B85  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  4561  0B86  00F7               	movwf	??_LCD_CmdWrite
  4562  0B87  3003               	movlw	3
  4563  0B88                     u2565:	
  4564  0B88  1003               	clrc
  4565  0B89  0DF7               	rlf	??_LCD_CmdWrite,f
  4566  0B8A  3EFF               	addlw	-1
  4567  0B8B  1D03               	skipz
  4568  0B8C  2B88               	goto	u2565
  4569  0B8D  1003               	clrc
  4570  0B8E  0D77               	rlf	??_LCD_CmdWrite,w
  4571  0B8F  00F8               	movwf	??_LCD_CmdWrite+1
  4572  0B90  0878               	movf	??_LCD_CmdWrite+1,w
  4573  0B91  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  4574  0B92                     l1703:	
  4575                           
  4576                           ;lcd.c: 370: }
  4577                           ;lcd.c: 372: lcd_SendHigherNibble(v_lcdCmd_u8);
  4578  0B92  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  4579  0B93  120A  158A  23D1  120A  158A  	fcall	_lcd_SendHigherNibble
  4580                           
  4581                           ;lcd.c: 373: lcd_SendCmdSignals();
  4582  0B98  120A  158A  230C   	fcall	_lcd_SendCmdSignals
  4583  0B9B  0008               	return
  4584  0B9C                     __end_of_LCD_CmdWrite:	
  4585                           
  4586                           	psect	text23
  4587  0C11                     __ptext23:	
  4588 ;; *************** function _lcd_SendLowerNibble *****************
  4589 ;; Defined at:
  4590 ;;		line 962 in file "../00-libfiles/lcd.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  dataByte        1    wreg     unsigned char 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  dataByte        1    6[COMMON] unsigned char 
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  1    wreg      void 
  4597 ;; Registers used:
  4598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4604 ;;      Params:         0       0       0       0       0
  4605 ;;      Locals:         1       0       0       0       0
  4606 ;;      Temps:          1       0       0       0       0
  4607 ;;      Totals:         2       0       0       0       0
  4608 ;;Total ram usage:        2 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    1
  4611 ;; This function calls:
  4612 ;;		_GPIO_PinWrite
  4613 ;; This function is called by:
  4614 ;;		_LCD_CmdWrite
  4615 ;;		_lcd_DataWrite
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           
  4620                           ;psect for function _lcd_SendLowerNibble
  4621  0C11                     _lcd_SendLowerNibble:	
  4622                           
  4623                           ;incstack = 0
  4624                           ; Regs used in _lcd_SendLowerNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4625                           ;lcd_SendLowerNibble@dataByte stored from wreg
  4626  0C11  00F6               	movwf	lcd_SendLowerNibble@dataByte
  4627                           
  4628                           ;lcd.c: 964: GPIO_PinWrite(LCDConfig.D0,(((dataByte)&((1<<(0))))!=0u));
  4629  0C12  1C76               	btfss	lcd_SendLowerNibble@dataByte,0
  4630  0C13  2C16               	goto	u2390
  4631  0C14  3001               	movlw	1
  4632  0C15  2C17               	goto	u2400
  4633  0C16                     u2390:	
  4634  0C16  3000               	movlw	0
  4635  0C17                     u2400:	
  4636  0C17  00F5               	movwf	??_lcd_SendLowerNibble
  4637  0C18  0875               	movf	??_lcd_SendLowerNibble,w
  4638  0C19  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  4639  0C1A  1683               	bsf	3,5	;RP0=1, select bank1
  4640  0C1B  1303               	bcf	3,6	;RP1=0, select bank1
  4641  0C1C  0826               	movf	(_LCDConfig^(0+128)+6),w
  4642  0C1D  120A  118A  22D5  120A  158A  	fcall	_GPIO_PinWrite
  4643                           
  4644                           ;lcd.c: 965: GPIO_PinWrite(LCDConfig.D1,(((dataByte)&((1<<(1))))!=0u));
  4645  0C22  1CF6               	btfss	lcd_SendLowerNibble@dataByte,1
  4646  0C23  2C26               	goto	u2410
  4647  0C24  3001               	movlw	1
  4648  0C25  2C27               	goto	u2420
  4649  0C26                     u2410:	
  4650  0C26  3000               	movlw	0
  4651  0C27                     u2420:	
  4652  0C27  00F5               	movwf	??_lcd_SendLowerNibble
  4653  0C28  0875               	movf	??_lcd_SendLowerNibble,w
  4654  0C29  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  4655  0C2A  1683               	bsf	3,5	;RP0=1, select bank1
  4656  0C2B  1303               	bcf	3,6	;RP1=0, select bank1
  4657  0C2C  0827               	movf	(_LCDConfig^(0+128)+7),w
  4658  0C2D  120A  118A  22D5  120A  158A  	fcall	_GPIO_PinWrite
  4659                           
  4660                           ;lcd.c: 966: GPIO_PinWrite(LCDConfig.D2,(((dataByte)&((1<<(2))))!=0u));
  4661  0C32  1D76               	btfss	lcd_SendLowerNibble@dataByte,2
  4662  0C33  2C36               	goto	u2430
  4663  0C34  3001               	movlw	1
  4664  0C35  2C37               	goto	u2440
  4665  0C36                     u2430:	
  4666  0C36  3000               	movlw	0
  4667  0C37                     u2440:	
  4668  0C37  00F5               	movwf	??_lcd_SendLowerNibble
  4669  0C38  0875               	movf	??_lcd_SendLowerNibble,w
  4670  0C39  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  4671  0C3A  1683               	bsf	3,5	;RP0=1, select bank1
  4672  0C3B  1303               	bcf	3,6	;RP1=0, select bank1
  4673  0C3C  0828               	movf	(_LCDConfig^(0+128)+8),w
  4674  0C3D  120A  118A  22D5  120A  158A  	fcall	_GPIO_PinWrite
  4675                           
  4676                           ;lcd.c: 967: GPIO_PinWrite(LCDConfig.D3,(((dataByte)&((1<<(3))))!=0u));
  4677  0C42  1DF6               	btfss	lcd_SendLowerNibble@dataByte,3
  4678  0C43  2C46               	goto	u2450
  4679  0C44  3001               	movlw	1
  4680  0C45  2C47               	goto	u2460
  4681  0C46                     u2450:	
  4682  0C46  3000               	movlw	0
  4683  0C47                     u2460:	
  4684  0C47  00F5               	movwf	??_lcd_SendLowerNibble
  4685  0C48  0875               	movf	??_lcd_SendLowerNibble,w
  4686  0C49  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  4687  0C4A  1683               	bsf	3,5	;RP0=1, select bank1
  4688  0C4B  1303               	bcf	3,6	;RP1=0, select bank1
  4689  0C4C  0829               	movf	(_LCDConfig^(0+128)+9),w
  4690  0C4D  120A  118A  22D5   	fcall	_GPIO_PinWrite
  4691  0C50  0008               	return
  4692  0C51                     __end_of_lcd_SendLowerNibble:	
  4693                           
  4694                           	psect	text24
  4695  0BD1                     __ptext24:	
  4696 ;; *************** function _lcd_SendHigherNibble *****************
  4697 ;; Defined at:
  4698 ;;		line 943 in file "../00-libfiles/lcd.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  dataByte        1    wreg     unsigned char 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  dataByte        1    6[COMMON] unsigned char 
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  1    wreg      void 
  4705 ;; Registers used:
  4706 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4712 ;;      Params:         0       0       0       0       0
  4713 ;;      Locals:         1       0       0       0       0
  4714 ;;      Temps:          1       0       0       0       0
  4715 ;;      Totals:         2       0       0       0       0
  4716 ;;Total ram usage:        2 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:    1
  4719 ;; This function calls:
  4720 ;;		_GPIO_PinWrite
  4721 ;; This function is called by:
  4722 ;;		_LCD_CmdWrite
  4723 ;;		_lcd_DataWrite
  4724 ;;		_lcd_Reset
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           
  4729                           ;psect for function _lcd_SendHigherNibble
  4730  0BD1                     _lcd_SendHigherNibble:	
  4731                           
  4732                           ;incstack = 0
  4733                           ; Regs used in _lcd_SendHigherNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4734                           ;lcd_SendHigherNibble@dataByte stored from wreg
  4735  0BD1  00F6               	movwf	lcd_SendHigherNibble@dataByte
  4736                           
  4737                           ;lcd.c: 945: GPIO_PinWrite(LCDConfig.D4,(((dataByte)&((1<<(4))))!=0u));
  4738  0BD2  1E76               	btfss	lcd_SendHigherNibble@dataByte,4
  4739  0BD3  2BD6               	goto	u2470
  4740  0BD4  3001               	movlw	1
  4741  0BD5  2BD7               	goto	u2480
  4742  0BD6                     u2470:	
  4743  0BD6  3000               	movlw	0
  4744  0BD7                     u2480:	
  4745  0BD7  00F5               	movwf	??_lcd_SendHigherNibble
  4746  0BD8  0875               	movf	??_lcd_SendHigherNibble,w
  4747  0BD9  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  4748  0BDA  1683               	bsf	3,5	;RP0=1, select bank1
  4749  0BDB  1303               	bcf	3,6	;RP1=0, select bank1
  4750  0BDC  082A               	movf	(_LCDConfig^(0+128)+10),w
  4751  0BDD  120A  118A  22D5  120A  158A  	fcall	_GPIO_PinWrite
  4752                           
  4753                           ;lcd.c: 946: GPIO_PinWrite(LCDConfig.D5,(((dataByte)&((1<<(5))))!=0u));
  4754  0BE2  1EF6               	btfss	lcd_SendHigherNibble@dataByte,5
  4755  0BE3  2BE6               	goto	u2490
  4756  0BE4  3001               	movlw	1
  4757  0BE5  2BE7               	goto	u2500
  4758  0BE6                     u2490:	
  4759  0BE6  3000               	movlw	0
  4760  0BE7                     u2500:	
  4761  0BE7  00F5               	movwf	??_lcd_SendHigherNibble
  4762  0BE8  0875               	movf	??_lcd_SendHigherNibble,w
  4763  0BE9  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  4764  0BEA  1683               	bsf	3,5	;RP0=1, select bank1
  4765  0BEB  1303               	bcf	3,6	;RP1=0, select bank1
  4766  0BEC  082B               	movf	(_LCDConfig^(0+128)+11),w
  4767  0BED  120A  118A  22D5  120A  158A  	fcall	_GPIO_PinWrite
  4768                           
  4769                           ;lcd.c: 947: GPIO_PinWrite(LCDConfig.D6,(((dataByte)&((1<<(6))))!=0u));
  4770  0BF2  1F76               	btfss	lcd_SendHigherNibble@dataByte,6
  4771  0BF3  2BF6               	goto	u2510
  4772  0BF4  3001               	movlw	1
  4773  0BF5  2BF7               	goto	u2520
  4774  0BF6                     u2510:	
  4775  0BF6  3000               	movlw	0
  4776  0BF7                     u2520:	
  4777  0BF7  00F5               	movwf	??_lcd_SendHigherNibble
  4778  0BF8  0875               	movf	??_lcd_SendHigherNibble,w
  4779  0BF9  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  4780  0BFA  1683               	bsf	3,5	;RP0=1, select bank1
  4781  0BFB  1303               	bcf	3,6	;RP1=0, select bank1
  4782  0BFC  082C               	movf	(_LCDConfig^(0+128)+12),w
  4783  0BFD  120A  118A  22D5  120A  158A  	fcall	_GPIO_PinWrite
  4784                           
  4785                           ;lcd.c: 948: GPIO_PinWrite(LCDConfig.D7,(((dataByte)&((1<<(7))))!=0u));
  4786  0C02  1FF6               	btfss	lcd_SendHigherNibble@dataByte,7
  4787  0C03  2C06               	goto	u2530
  4788  0C04  3001               	movlw	1
  4789  0C05  2C07               	goto	u2540
  4790  0C06                     u2530:	
  4791  0C06  3000               	movlw	0
  4792  0C07                     u2540:	
  4793  0C07  00F5               	movwf	??_lcd_SendHigherNibble
  4794  0C08  0875               	movf	??_lcd_SendHigherNibble,w
  4795  0C09  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  4796  0C0A  1683               	bsf	3,5	;RP0=1, select bank1
  4797  0C0B  1303               	bcf	3,6	;RP1=0, select bank1
  4798  0C0C  082D               	movf	(_LCDConfig^(0+128)+13),w
  4799  0C0D  120A  118A  22D5   	fcall	_GPIO_PinWrite
  4800  0C10  0008               	return
  4801  0C11                     __end_of_lcd_SendHigherNibble:	
  4802                           
  4803                           	psect	text25
  4804  0B0C                     __ptext25:	
  4805 ;; *************** function _lcd_SendCmdSignals *****************
  4806 ;; Defined at:
  4807 ;;		line 981 in file "../00-libfiles/lcd.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;		None
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;		None
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  1    wreg      void 
  4814 ;; Registers used:
  4815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4821 ;;      Params:         0       0       0       0       0
  4822 ;;      Locals:         0       0       0       0       0
  4823 ;;      Temps:          0       0       0       0       0
  4824 ;;      Totals:         0       0       0       0       0
  4825 ;;Total ram usage:        0 bytes
  4826 ;; Hardware stack levels used:    1
  4827 ;; Hardware stack levels required when called:    1
  4828 ;; This function calls:
  4829 ;;		_DELAY_us
  4830 ;;		_GPIO_PinWrite
  4831 ;; This function is called by:
  4832 ;;		_LCD_CmdWrite
  4833 ;;		_lcd_Reset
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           
  4838                           ;psect for function _lcd_SendCmdSignals
  4839  0B0C                     _lcd_SendCmdSignals:	
  4840                           
  4841                           ;lcd.c: 983: GPIO_PinWrite(LCDConfig.RS,0);
  4842                           
  4843                           ;incstack = 0
  4844                           ; Regs used in _lcd_SendCmdSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4845  0B0C  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4846  0B0D  1683               	bsf	3,5	;RP0=1, select bank1
  4847  0B0E  1303               	bcf	3,6	;RP1=0, select bank1
  4848  0B0F  0823               	movf	(_LCDConfig^(0+128)+3),w
  4849  0B10  120A  118A  22D5  120A  158A  	fcall	_GPIO_PinWrite
  4850                           
  4851                           ;lcd.c: 984: GPIO_PinWrite(LCDConfig.RW,0);
  4852  0B15  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4853  0B16  1683               	bsf	3,5	;RP0=1, select bank1
  4854  0B17  1303               	bcf	3,6	;RP1=0, select bank1
  4855  0B18  0824               	movf	(_LCDConfig^(0+128)+4),w
  4856  0B19  120A  118A  22D5  120A  158A  	fcall	_GPIO_PinWrite
  4857                           
  4858                           ;lcd.c: 985: GPIO_PinWrite(LCDConfig.EN,1);
  4859  0B1E  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4860  0B1F  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  4861  0B20  1683               	bsf	3,5	;RP0=1, select bank1
  4862  0B21  1303               	bcf	3,6	;RP1=0, select bank1
  4863  0B22  0825               	movf	(_LCDConfig^(0+128)+5),w
  4864  0B23  120A  118A  22D5  120A  158A  	fcall	_GPIO_PinWrite
  4865                           
  4866                           ;lcd.c: 986: DELAY_us(10);
  4867  0B28  300A               	movlw	10
  4868  0B29  00F0               	movwf	DELAY_us@us_count
  4869  0B2A  3000               	movlw	0
  4870  0B2B  00F1               	movwf	DELAY_us@us_count+1
  4871  0B2C  120A  158A  223C  120A  158A  	fcall	_DELAY_us
  4872                           
  4873                           ;lcd.c: 987: GPIO_PinWrite(LCDConfig.EN,0);
  4874  0B31  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4875  0B32  1683               	bsf	3,5	;RP0=1, select bank1
  4876  0B33  1303               	bcf	3,6	;RP1=0, select bank1
  4877  0B34  0825               	movf	(_LCDConfig^(0+128)+5),w
  4878  0B35  120A  118A  22D5   	fcall	_GPIO_PinWrite
  4879  0B38  0008               	return
  4880  0B39                     __end_of_lcd_SendCmdSignals:	
  4881                           
  4882                           	psect	text26
  4883  0E47                     __ptext26:	
  4884 ;; *************** function _lcd_BusyCheck *****************
  4885 ;; Defined at:
  4886 ;;		line 860 in file "../00-libfiles/lcd.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;		None
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;  busyflag        1    6[COMMON] unsigned char 
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  1    wreg      void 
  4893 ;; Registers used:
  4894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4900 ;;      Params:         0       0       0       0       0
  4901 ;;      Locals:         1       0       0       0       0
  4902 ;;      Temps:          1       0       0       0       0
  4903 ;;      Totals:         2       0       0       0       0
  4904 ;;Total ram usage:        2 bytes
  4905 ;; Hardware stack levels used:    1
  4906 ;; Hardware stack levels required when called:    2
  4907 ;; This function calls:
  4908 ;;		_DELAY_ms
  4909 ;;		_DELAY_us
  4910 ;;		_GPIO_PinDirection
  4911 ;;		_GPIO_PinRead
  4912 ;;		_GPIO_PinWrite
  4913 ;; This function is called by:
  4914 ;;		_LCD_CmdWrite
  4915 ;;		_lcd_DataWrite
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           
  4920                           ;psect for function _lcd_BusyCheck
  4921  0E47                     _lcd_BusyCheck:	
  4922                           
  4923                           ;lcd.c: 862: uint8_t busyflag;
  4924                           ;lcd.c: 864: if(LCDConfig.RW != P_NC)
  4925                           
  4926                           ;incstack = 0
  4927                           ; Regs used in _lcd_BusyCheck: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4928  0E47  1683               	bsf	3,5	;RP0=1, select bank1
  4929  0E48  1303               	bcf	3,6	;RP1=0, select bank1
  4930  0E49  0A24               	incf	(_LCDConfig^(0+128)+4),w
  4931  0E4A  1903               	btfsc	3,2
  4932  0E4B  2ECB               	goto	l1681
  4933                           
  4934                           ;lcd.c: 865: {
  4935                           ;lcd.c: 866: GPIO_PinDirection(LCDConfig.D7,0x01u);
  4936  0E4C  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  4937  0E4D  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  4938  0E4E  082D               	movf	(_LCDConfig^(0+128)+13),w
  4939  0E4F  120A  118A  21FC  120A  158A  	fcall	_GPIO_PinDirection
  4940                           
  4941                           ;lcd.c: 867: GPIO_PinWrite(LCDConfig.RS,0);
  4942  0E54  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4943  0E55  1683               	bsf	3,5	;RP0=1, select bank1
  4944  0E56  1303               	bcf	3,6	;RP1=0, select bank1
  4945  0E57  0823               	movf	(_LCDConfig^(0+128)+3),w
  4946  0E58  120A  118A  22D5  120A  158A  	fcall	_GPIO_PinWrite
  4947                           
  4948                           ;lcd.c: 868: GPIO_PinWrite(LCDConfig.RW,1);
  4949  0E5D  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4950  0E5E  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  4951  0E5F  1683               	bsf	3,5	;RP0=1, select bank1
  4952  0E60  1303               	bcf	3,6	;RP1=0, select bank1
  4953  0E61  0824               	movf	(_LCDConfig^(0+128)+4),w
  4954  0E62  120A  118A  22D5  120A  158A  	fcall	_GPIO_PinWrite
  4955  0E67                     l276:	
  4956                           ;lcd.c: 869: do
  4957                           
  4958                           
  4959                           ;lcd.c: 870: {
  4960                           ;lcd.c: 872: GPIO_PinWrite(LCDConfig.EN,0);
  4961  0E67  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4962  0E68  1683               	bsf	3,5	;RP0=1, select bank1
  4963  0E69  1303               	bcf	3,6	;RP1=0, select bank1
  4964  0E6A  0825               	movf	(_LCDConfig^(0+128)+5),w
  4965  0E6B  120A  118A  22D5  120A  158A  	fcall	_GPIO_PinWrite
  4966                           
  4967                           ;lcd.c: 873: DELAY_us(10);
  4968  0E70  300A               	movlw	10
  4969  0E71  00F0               	movwf	DELAY_us@us_count
  4970  0E72  3000               	movlw	0
  4971  0E73  00F1               	movwf	DELAY_us@us_count+1
  4972  0E74  120A  158A  223C  120A  158A  	fcall	_DELAY_us
  4973                           
  4974                           ;lcd.c: 874: GPIO_PinWrite(LCDConfig.EN,1);
  4975  0E79  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4976  0E7A  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  4977  0E7B  1683               	bsf	3,5	;RP0=1, select bank1
  4978  0E7C  1303               	bcf	3,6	;RP1=0, select bank1
  4979  0E7D  0825               	movf	(_LCDConfig^(0+128)+5),w
  4980  0E7E  120A  118A  22D5  120A  158A  	fcall	_GPIO_PinWrite
  4981                           
  4982                           ;lcd.c: 875: DELAY_us(10);
  4983  0E83  300A               	movlw	10
  4984  0E84  00F0               	movwf	DELAY_us@us_count
  4985  0E85  3000               	movlw	0
  4986  0E86  00F1               	movwf	DELAY_us@us_count+1
  4987  0E87  120A  158A  223C  120A  158A  	fcall	_DELAY_us
  4988                           
  4989                           ;lcd.c: 876: busyflag = GPIO_PinRead(LCDConfig.D7);
  4990  0E8C  1683               	bsf	3,5	;RP0=1, select bank1
  4991  0E8D  1303               	bcf	3,6	;RP1=0, select bank1
  4992  0E8E  082D               	movf	(_LCDConfig^(0+128)+13),w
  4993  0E8F  120A  158A  25D2  120A  158A  	fcall	_GPIO_PinRead
  4994  0E94  00F5               	movwf	??_lcd_BusyCheck
  4995  0E95  0875               	movf	??_lcd_BusyCheck,w
  4996  0E96  00F6               	movwf	lcd_BusyCheck@busyflag
  4997                           
  4998                           ;lcd.c: 879: if(LCDConfig.v_LcdMode_U8 == 4)
  4999  0E97  3004               	movlw	4
  5000  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  5001  0E99  1303               	bcf	3,6	;RP1=0, select bank1
  5002  0E9A  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  5003  0E9B  1D03               	btfss	3,2
  5004  0E9C  2EC0               	goto	l1677
  5005                           
  5006                           ;lcd.c: 880: {
  5007                           ;lcd.c: 882: GPIO_PinWrite(LCDConfig.EN,0);
  5008  0E9D  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5009  0E9E  0825               	movf	(_LCDConfig^(0+128)+5),w
  5010  0E9F  120A  118A  22D5  120A  158A  	fcall	_GPIO_PinWrite
  5011                           
  5012                           ;lcd.c: 883: DELAY_us(10);
  5013  0EA4  300A               	movlw	10
  5014  0EA5  00F0               	movwf	DELAY_us@us_count
  5015  0EA6  3000               	movlw	0
  5016  0EA7  00F1               	movwf	DELAY_us@us_count+1
  5017  0EA8  120A  158A  223C  120A  158A  	fcall	_DELAY_us
  5018                           
  5019                           ;lcd.c: 884: GPIO_PinWrite(LCDConfig.EN,1);
  5020  0EAD  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5021  0EAE  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  5022  0EAF  1683               	bsf	3,5	;RP0=1, select bank1
  5023  0EB0  1303               	bcf	3,6	;RP1=0, select bank1
  5024  0EB1  0825               	movf	(_LCDConfig^(0+128)+5),w
  5025  0EB2  120A  118A  22D5  120A  158A  	fcall	_GPIO_PinWrite
  5026                           
  5027                           ;lcd.c: 885: DELAY_us(10);
  5028  0EB7  300A               	movlw	10
  5029  0EB8  00F0               	movwf	DELAY_us@us_count
  5030  0EB9  3000               	movlw	0
  5031  0EBA  00F1               	movwf	DELAY_us@us_count+1
  5032  0EBB  120A  158A  223C  120A  158A  	fcall	_DELAY_us
  5033  0EC0                     l1677:	
  5034                           
  5035                           ;lcd.c: 886: }
  5036                           ;lcd.c: 887: }while(busyflag!=0);
  5037  0EC0  0876               	movf	lcd_BusyCheck@busyflag,w
  5038  0EC1  1D03               	btfss	3,2
  5039  0EC2  2E67               	goto	l276
  5040                           
  5041                           ;lcd.c: 889: GPIO_PinDirection(LCDConfig.D7,0x00u);
  5042  0EC3  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  5043  0EC4  1683               	bsf	3,5	;RP0=1, select bank1
  5044  0EC5  1303               	bcf	3,6	;RP1=0, select bank1
  5045  0EC6  082D               	movf	(_LCDConfig^(0+128)+13),w
  5046  0EC7  120A  118A  21FC   	fcall	_GPIO_PinDirection
  5047                           
  5048                           ;lcd.c: 890: }
  5049  0ECA  0008               	return
  5050  0ECB                     l1681:	
  5051                           
  5052                           ;lcd.c: 891: else
  5053                           ;lcd.c: 892: {
  5054                           ;lcd.c: 895: DELAY_ms(1);
  5055  0ECB  3001               	movlw	1
  5056  0ECC  00F2               	movwf	DELAY_ms@ms_count
  5057  0ECD  3000               	movlw	0
  5058  0ECE  00F3               	movwf	DELAY_ms@ms_count+1
  5059  0ECF  120A  158A  2265   	fcall	_DELAY_ms
  5060  0ED2  0008               	return
  5061  0ED3                     __end_of_lcd_BusyCheck:	
  5062                           
  5063                           	psect	text27
  5064  02D5                     __ptext27:	
  5065 ;; *************** function _GPIO_PinWrite *****************
  5066 ;; Defined at:
  5067 ;;		line 127 in file "../00-libfiles/gpio.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  enm_pinNumbe    1    wreg     enum E1088
  5070 ;;  var_pinValue    1    0[COMMON] unsigned char 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  5073 ;;  var_portNumb    1    3[COMMON] unsigned char 
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      void 
  5076 ;; Registers used:
  5077 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5083 ;;      Params:         1       0       0       0       0
  5084 ;;      Locals:         2       0       0       0       0
  5085 ;;      Temps:          2       0       0       0       0
  5086 ;;      Totals:         5       0       0       0       0
  5087 ;;Total ram usage:        5 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; This function calls:
  5090 ;;		Nothing
  5091 ;; This function is called by:
  5092 ;;		_lcd_BusyCheck
  5093 ;;		_lcd_SendHigherNibble
  5094 ;;		_lcd_SendLowerNibble
  5095 ;;		_lcd_SendCmdSignals
  5096 ;;		_lcd_SendDataSignals
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           
  5101                           ;psect for function _GPIO_PinWrite
  5102  02D5                     _GPIO_PinWrite:	
  5103                           
  5104                           ;incstack = 0
  5105                           ; Regs used in _GPIO_PinWrite: [wreg-fsr0h+status,2+status,0]
  5106                           ;GPIO_PinWrite@enm_pinNumber stored from wreg
  5107  02D5  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  5108                           
  5109                           ;gpio.c: 130: uint8_t var_portNumber_u8;
  5110                           ;gpio.c: 133: var_portNumber_u8 = (enm_pinNumber>>3);
  5111  02D6  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  5112  02D7  00F1               	movwf	??_GPIO_PinWrite
  5113  02D8  3003               	movlw	3
  5114  02D9                     u2045:	
  5115  02D9  1003               	clrc
  5116  02DA  0CF1               	rrf	??_GPIO_PinWrite,f
  5117  02DB  3EFF               	addlw	-1
  5118  02DC  1D03               	skipz
  5119  02DD  2AD9               	goto	u2045
  5120  02DE  0871               	movf	??_GPIO_PinWrite,w
  5121  02DF  00F2               	movwf	??_GPIO_PinWrite+1
  5122  02E0  0872               	movf	??_GPIO_PinWrite+1,w
  5123  02E1  00F3               	movwf	GPIO_PinWrite@var_portNumber_u8
  5124                           
  5125                           ;gpio.c: 134: enm_pinNumber = enm_pinNumber & 0x07;
  5126  02E2  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  5127  02E3  3907               	andlw	7
  5128  02E4  00F1               	movwf	??_GPIO_PinWrite
  5129  02E5  0871               	movf	??_GPIO_PinWrite,w
  5130  02E6  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  5131                           
  5132                           ;gpio.c: 138: switch(var_portNumber_u8)
  5133  02E7  2B9C               	goto	l1633
  5134  02E8                     l1601:	
  5135                           ;gpio.c: 139: {
  5136                           ;gpio.c: 141: case 0:
  5137                           
  5138                           
  5139                           ;gpio.c: 142: ((var_pinValue_u8)? ((PORTA) |= (1<<(enm_pinNumber))): ((PORTA) &= ~(1<<(e
      +                          nm_pinNumber))));
  5140  02E8  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  5141  02E9  1903               	btfsc	3,2
  5142  02EA  2AFB               	goto	l1605
  5143  02EB  3001               	movlw	1
  5144  02EC  00F1               	movwf	??_GPIO_PinWrite
  5145  02ED  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5146  02EE  2AF1               	goto	u2064
  5147  02EF                     u2065:	
  5148  02EF  1003               	clrc
  5149  02F0  0DF1               	rlf	??_GPIO_PinWrite,f
  5150  02F1                     u2064:	
  5151  02F1  3EFF               	addlw	-1
  5152  02F2  1D03               	skipz
  5153  02F3  2AEF               	goto	u2065
  5154  02F4  0871               	movf	??_GPIO_PinWrite,w
  5155  02F5  00F2               	movwf	??_GPIO_PinWrite+1
  5156  02F6  0872               	movf	??_GPIO_PinWrite+1,w
  5157  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  5158  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  5159  02F9  0485               	iorwf	5,f	;volatile
  5160  02FA  0008               	return
  5161  02FB                     l1605:	
  5162  02FB  3001               	movlw	1
  5163  02FC  00F1               	movwf	??_GPIO_PinWrite
  5164  02FD  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5165  02FE  2B01               	goto	u2074
  5166  02FF                     u2075:	
  5167  02FF  1003               	clrc
  5168  0300  0DF1               	rlf	??_GPIO_PinWrite,f
  5169  0301                     u2074:	
  5170  0301  3EFF               	addlw	-1
  5171  0302  1D03               	skipz
  5172  0303  2AFF               	goto	u2075
  5173  0304  0871               	movf	??_GPIO_PinWrite,w
  5174  0305  3AFF               	xorlw	255
  5175  0306  00F2               	movwf	??_GPIO_PinWrite+1
  5176  0307  0872               	movf	??_GPIO_PinWrite+1,w
  5177  0308  1283               	bcf	3,5	;RP0=0, select bank0
  5178  0309  1303               	bcf	3,6	;RP1=0, select bank0
  5179  030A  0585               	andwf	5,f	;volatile
  5180                           
  5181                           ;gpio.c: 143: break;
  5182  030B  0008               	return
  5183  030C                     l1607:	
  5184                           ;gpio.c: 147: case 1:
  5185                           
  5186                           
  5187                           ;gpio.c: 148: ((var_pinValue_u8)? ((PORTB) |= (1<<(enm_pinNumber))): ((PORTB) &= ~(1<<(e
      +                          nm_pinNumber))));
  5188  030C  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  5189  030D  1903               	btfsc	3,2
  5190  030E  2B1F               	goto	l1611
  5191  030F  3001               	movlw	1
  5192  0310  00F1               	movwf	??_GPIO_PinWrite
  5193  0311  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5194  0312  2B15               	goto	u2094
  5195  0313                     u2095:	
  5196  0313  1003               	clrc
  5197  0314  0DF1               	rlf	??_GPIO_PinWrite,f
  5198  0315                     u2094:	
  5199  0315  3EFF               	addlw	-1
  5200  0316  1D03               	skipz
  5201  0317  2B13               	goto	u2095
  5202  0318  0871               	movf	??_GPIO_PinWrite,w
  5203  0319  00F2               	movwf	??_GPIO_PinWrite+1
  5204  031A  0872               	movf	??_GPIO_PinWrite+1,w
  5205  031B  1283               	bcf	3,5	;RP0=0, select bank0
  5206  031C  1303               	bcf	3,6	;RP1=0, select bank0
  5207  031D  0486               	iorwf	6,f	;volatile
  5208  031E  0008               	return
  5209  031F                     l1611:	
  5210  031F  3001               	movlw	1
  5211  0320  00F1               	movwf	??_GPIO_PinWrite
  5212  0321  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5213  0322  2B25               	goto	u2104
  5214  0323                     u2105:	
  5215  0323  1003               	clrc
  5216  0324  0DF1               	rlf	??_GPIO_PinWrite,f
  5217  0325                     u2104:	
  5218  0325  3EFF               	addlw	-1
  5219  0326  1D03               	skipz
  5220  0327  2B23               	goto	u2105
  5221  0328  0871               	movf	??_GPIO_PinWrite,w
  5222  0329  3AFF               	xorlw	255
  5223  032A  00F2               	movwf	??_GPIO_PinWrite+1
  5224  032B  0872               	movf	??_GPIO_PinWrite+1,w
  5225  032C  1283               	bcf	3,5	;RP0=0, select bank0
  5226  032D  1303               	bcf	3,6	;RP1=0, select bank0
  5227  032E  0586               	andwf	6,f	;volatile
  5228                           
  5229                           ;gpio.c: 149: break;
  5230  032F  0008               	return
  5231  0330                     l1613:	
  5232                           ;gpio.c: 153: case 2:
  5233                           
  5234                           
  5235                           ;gpio.c: 154: ((var_pinValue_u8)? ((PORTC) |= (1<<(enm_pinNumber))): ((PORTC) &= ~(1<<(e
      +                          nm_pinNumber))));
  5236  0330  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  5237  0331  1903               	btfsc	3,2
  5238  0332  2B43               	goto	l1617
  5239  0333  3001               	movlw	1
  5240  0334  00F1               	movwf	??_GPIO_PinWrite
  5241  0335  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5242  0336  2B39               	goto	u2124
  5243  0337                     u2125:	
  5244  0337  1003               	clrc
  5245  0338  0DF1               	rlf	??_GPIO_PinWrite,f
  5246  0339                     u2124:	
  5247  0339  3EFF               	addlw	-1
  5248  033A  1D03               	skipz
  5249  033B  2B37               	goto	u2125
  5250  033C  0871               	movf	??_GPIO_PinWrite,w
  5251  033D  00F2               	movwf	??_GPIO_PinWrite+1
  5252  033E  0872               	movf	??_GPIO_PinWrite+1,w
  5253  033F  1283               	bcf	3,5	;RP0=0, select bank0
  5254  0340  1303               	bcf	3,6	;RP1=0, select bank0
  5255  0341  0487               	iorwf	7,f	;volatile
  5256  0342  0008               	return
  5257  0343                     l1617:	
  5258  0343  3001               	movlw	1
  5259  0344  00F1               	movwf	??_GPIO_PinWrite
  5260  0345  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5261  0346  2B49               	goto	u2134
  5262  0347                     u2135:	
  5263  0347  1003               	clrc
  5264  0348  0DF1               	rlf	??_GPIO_PinWrite,f
  5265  0349                     u2134:	
  5266  0349  3EFF               	addlw	-1
  5267  034A  1D03               	skipz
  5268  034B  2B47               	goto	u2135
  5269  034C  0871               	movf	??_GPIO_PinWrite,w
  5270  034D  3AFF               	xorlw	255
  5271  034E  00F2               	movwf	??_GPIO_PinWrite+1
  5272  034F  0872               	movf	??_GPIO_PinWrite+1,w
  5273  0350  1283               	bcf	3,5	;RP0=0, select bank0
  5274  0351  1303               	bcf	3,6	;RP1=0, select bank0
  5275  0352  0587               	andwf	7,f	;volatile
  5276                           
  5277                           ;gpio.c: 155: break;
  5278  0353  0008               	return
  5279  0354                     l1619:	
  5280                           ;gpio.c: 159: case 3:
  5281                           
  5282                           
  5283                           ;gpio.c: 160: ((var_pinValue_u8)? ((PORTD) |= (1<<(enm_pinNumber))): ((PORTD) &= ~(1<<(e
      +                          nm_pinNumber))));
  5284  0354  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  5285  0355  1903               	btfsc	3,2
  5286  0356  2B67               	goto	l1623
  5287  0357  3001               	movlw	1
  5288  0358  00F1               	movwf	??_GPIO_PinWrite
  5289  0359  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5290  035A  2B5D               	goto	u2154
  5291  035B                     u2155:	
  5292  035B  1003               	clrc
  5293  035C  0DF1               	rlf	??_GPIO_PinWrite,f
  5294  035D                     u2154:	
  5295  035D  3EFF               	addlw	-1
  5296  035E  1D03               	skipz
  5297  035F  2B5B               	goto	u2155
  5298  0360  0871               	movf	??_GPIO_PinWrite,w
  5299  0361  00F2               	movwf	??_GPIO_PinWrite+1
  5300  0362  0872               	movf	??_GPIO_PinWrite+1,w
  5301  0363  1283               	bcf	3,5	;RP0=0, select bank0
  5302  0364  1303               	bcf	3,6	;RP1=0, select bank0
  5303  0365  0488               	iorwf	8,f	;volatile
  5304  0366  0008               	return
  5305  0367                     l1623:	
  5306  0367  3001               	movlw	1
  5307  0368  00F1               	movwf	??_GPIO_PinWrite
  5308  0369  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5309  036A  2B6D               	goto	u2164
  5310  036B                     u2165:	
  5311  036B  1003               	clrc
  5312  036C  0DF1               	rlf	??_GPIO_PinWrite,f
  5313  036D                     u2164:	
  5314  036D  3EFF               	addlw	-1
  5315  036E  1D03               	skipz
  5316  036F  2B6B               	goto	u2165
  5317  0370  0871               	movf	??_GPIO_PinWrite,w
  5318  0371  3AFF               	xorlw	255
  5319  0372  00F2               	movwf	??_GPIO_PinWrite+1
  5320  0373  0872               	movf	??_GPIO_PinWrite+1,w
  5321  0374  1283               	bcf	3,5	;RP0=0, select bank0
  5322  0375  1303               	bcf	3,6	;RP1=0, select bank0
  5323  0376  0588               	andwf	8,f	;volatile
  5324                           
  5325                           ;gpio.c: 161: break;
  5326  0377  0008               	return
  5327  0378                     l1625:	
  5328                           ;gpio.c: 165: case 4:
  5329                           
  5330                           
  5331                           ;gpio.c: 166: ((var_pinValue_u8)? ((PORTE) |= (1<<(enm_pinNumber))): ((PORTE) &= ~(1<<(e
      +                          nm_pinNumber))));
  5332  0378  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  5333  0379  1903               	btfsc	3,2
  5334  037A  2B8B               	goto	l1629
  5335  037B  3001               	movlw	1
  5336  037C  00F1               	movwf	??_GPIO_PinWrite
  5337  037D  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5338  037E  2B81               	goto	u2184
  5339  037F                     u2185:	
  5340  037F  1003               	clrc
  5341  0380  0DF1               	rlf	??_GPIO_PinWrite,f
  5342  0381                     u2184:	
  5343  0381  3EFF               	addlw	-1
  5344  0382  1D03               	skipz
  5345  0383  2B7F               	goto	u2185
  5346  0384  0871               	movf	??_GPIO_PinWrite,w
  5347  0385  00F2               	movwf	??_GPIO_PinWrite+1
  5348  0386  0872               	movf	??_GPIO_PinWrite+1,w
  5349  0387  1283               	bcf	3,5	;RP0=0, select bank0
  5350  0388  1303               	bcf	3,6	;RP1=0, select bank0
  5351  0389  0489               	iorwf	9,f	;volatile
  5352  038A  0008               	return
  5353  038B                     l1629:	
  5354  038B  3001               	movlw	1
  5355  038C  00F1               	movwf	??_GPIO_PinWrite
  5356  038D  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5357  038E  2B91               	goto	u2194
  5358  038F                     u2195:	
  5359  038F  1003               	clrc
  5360  0390  0DF1               	rlf	??_GPIO_PinWrite,f
  5361  0391                     u2194:	
  5362  0391  3EFF               	addlw	-1
  5363  0392  1D03               	skipz
  5364  0393  2B8F               	goto	u2195
  5365  0394  0871               	movf	??_GPIO_PinWrite,w
  5366  0395  3AFF               	xorlw	255
  5367  0396  00F2               	movwf	??_GPIO_PinWrite+1
  5368  0397  0872               	movf	??_GPIO_PinWrite+1,w
  5369  0398  1283               	bcf	3,5	;RP0=0, select bank0
  5370  0399  1303               	bcf	3,6	;RP1=0, select bank0
  5371  039A  0589               	andwf	9,f	;volatile
  5372                           
  5373                           ;gpio.c: 169: }
  5374                           
  5375                           ;gpio.c: 167: break;
  5376  039B  0008               	return
  5377  039C                     l1633:	
  5378  039C  0873               	movf	GPIO_PinWrite@var_portNumber_u8,w
  5379                           
  5380                           ; Switch size 1, requested type "space"
  5381                           ; Number of cases is 5, Range of values is 0 to 4
  5382                           ; switch strategies available:
  5383                           ; Name         Instructions Cycles
  5384                           ; simple_byte           16     9 (average)
  5385                           ; direct_byte           23     8 (fixed)
  5386                           ; jumptable            260     6 (fixed)
  5387                           ;	Chosen strategy is simple_byte
  5388  039D  3A00               	xorlw	0	; case 0
  5389  039E  1903               	skipnz
  5390  039F  2AE8               	goto	l1601
  5391  03A0  3A01               	xorlw	1	; case 1
  5392  03A1  1903               	skipnz
  5393  03A2  2B0C               	goto	l1607
  5394  03A3  3A03               	xorlw	3	; case 2
  5395  03A4  1903               	skipnz
  5396  03A5  2B30               	goto	l1613
  5397  03A6  3A01               	xorlw	1	; case 3
  5398  03A7  1903               	skipnz
  5399  03A8  2B54               	goto	l1619
  5400  03A9  3A07               	xorlw	7	; case 4
  5401  03AA  1903               	skipnz
  5402  03AB  2B78               	goto	l1625
  5403  03AC  2BAD               	goto	l92
  5404  03AD                     l92:	
  5405  03AD  0008               	return
  5406  03AE                     __end_of_GPIO_PinWrite:	
  5407                           
  5408                           	psect	text28
  5409  0DD2                     __ptext28:	
  5410 ;; *************** function _GPIO_PinRead *****************
  5411 ;; Defined at:
  5412 ;;		line 192 in file "../00-libfiles/gpio.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;  enm_pinNumbe    1    wreg     enum E1088
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  5417 ;;  returnStatus    1    3[COMMON] unsigned char 
  5418 ;;  var_portNumb    1    2[COMMON] unsigned char 
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  1    wreg      unsigned char 
  5421 ;; Registers used:
  5422 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5428 ;;      Params:         0       0       0       0       0
  5429 ;;      Locals:         3       0       0       0       0
  5430 ;;      Temps:          2       0       0       0       0
  5431 ;;      Totals:         5       0       0       0       0
  5432 ;;Total ram usage:        5 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_lcd_BusyCheck
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           
  5442                           ;psect for function _GPIO_PinRead
  5443  0DD2                     _GPIO_PinRead:	
  5444                           
  5445                           ;incstack = 0
  5446                           ; Regs used in _GPIO_PinRead: [wreg-fsr0h+status,2+status,0]
  5447                           ;GPIO_PinRead@enm_pinNumber stored from wreg
  5448  0DD2  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  5449                           
  5450                           ;gpio.c: 194: uint8_t var_portNumber_u8;
  5451                           ;gpio.c: 195: uint8_t returnStatus = 0;
  5452  0DD3  01F3               	clrf	GPIO_PinRead@returnStatus
  5453                           
  5454                           ;gpio.c: 197: var_portNumber_u8 = (enm_pinNumber>>3);
  5455  0DD4  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  5456  0DD5  00F0               	movwf	??_GPIO_PinRead
  5457  0DD6  3003               	movlw	3
  5458  0DD7                     u2205:	
  5459  0DD7  1003               	clrc
  5460  0DD8  0CF0               	rrf	??_GPIO_PinRead,f
  5461  0DD9  3EFF               	addlw	-1
  5462  0DDA  1D03               	skipz
  5463  0DDB  2DD7               	goto	u2205
  5464  0DDC  0870               	movf	??_GPIO_PinRead,w
  5465  0DDD  00F1               	movwf	??_GPIO_PinRead+1
  5466  0DDE  0871               	movf	??_GPIO_PinRead+1,w
  5467  0DDF  00F2               	movwf	GPIO_PinRead@var_portNumber_u8
  5468                           
  5469                           ;gpio.c: 198: enm_pinNumber = enm_pinNumber & 0x07;
  5470  0DE0  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  5471  0DE1  3907               	andlw	7
  5472  0DE2  00F0               	movwf	??_GPIO_PinRead
  5473  0DE3  0870               	movf	??_GPIO_PinRead,w
  5474  0DE4  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  5475                           
  5476                           ;gpio.c: 201: switch(var_portNumber_u8)
  5477  0DE5  2E34               	goto	l1653
  5478  0DE6                     l1641:	
  5479                           ;gpio.c: 202: {
  5480                           ;gpio.c: 204: case 0:
  5481                           
  5482                           
  5483                           ;gpio.c: 205: returnStatus = (((PORTA)&((1<<(enm_pinNumber))))!=0u);
  5484  0DE6  3001               	movlw	1
  5485  0DE7  00F0               	movwf	??_GPIO_PinRead
  5486  0DE8  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  5487  0DE9  2DEC               	goto	u2214
  5488  0DEA                     u2215:	
  5489  0DEA  1003               	clrc
  5490  0DEB  0DF0               	rlf	??_GPIO_PinRead,f
  5491  0DEC                     u2214:	
  5492  0DEC  3EFF               	addlw	-1
  5493  0DED  1D03               	skipz
  5494  0DEE  2DEA               	goto	u2215
  5495  0DEF  0870               	movf	??_GPIO_PinRead,w
  5496  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  5497  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  5498  0DF2  0505               	andwf	5,w	;volatile
  5499  0DF3  2E2B               	goto	L7
  5500  0DF4                     l1643:	
  5501                           ;gpio.c: 209: case 1:
  5502                           
  5503                           ;gpio.c: 206: break;
  5504                           
  5505                           
  5506                           ;gpio.c: 210: returnStatus = (((PORTB)&((1<<(enm_pinNumber))))!=0u);
  5507  0DF4  3001               	movlw	1
  5508  0DF5  00F0               	movwf	??_GPIO_PinRead
  5509  0DF6  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  5510  0DF7  2DFA               	goto	u2244
  5511  0DF8                     u2245:	
  5512  0DF8  1003               	clrc
  5513  0DF9  0DF0               	rlf	??_GPIO_PinRead,f
  5514  0DFA                     u2244:	
  5515  0DFA  3EFF               	addlw	-1
  5516  0DFB  1D03               	skipz
  5517  0DFC  2DF8               	goto	u2245
  5518  0DFD  0870               	movf	??_GPIO_PinRead,w
  5519  0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  5520  0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  5521  0E00  0506               	andwf	6,w	;volatile
  5522  0E01  2E2B               	goto	L7
  5523  0E02                     l1645:	
  5524                           ;gpio.c: 214: case 2:
  5525                           
  5526                           ;gpio.c: 211: break;
  5527                           
  5528                           
  5529                           ;gpio.c: 215: returnStatus = (((PORTC)&((1<<(enm_pinNumber))))!=0u);
  5530  0E02  3001               	movlw	1
  5531  0E03  00F0               	movwf	??_GPIO_PinRead
  5532  0E04  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  5533  0E05  2E08               	goto	u2274
  5534  0E06                     u2275:	
  5535  0E06  1003               	clrc
  5536  0E07  0DF0               	rlf	??_GPIO_PinRead,f
  5537  0E08                     u2274:	
  5538  0E08  3EFF               	addlw	-1
  5539  0E09  1D03               	skipz
  5540  0E0A  2E06               	goto	u2275
  5541  0E0B  0870               	movf	??_GPIO_PinRead,w
  5542  0E0C  1283               	bcf	3,5	;RP0=0, select bank0
  5543  0E0D  1303               	bcf	3,6	;RP1=0, select bank0
  5544  0E0E  0507               	andwf	7,w	;volatile
  5545  0E0F  2E2B               	goto	L7
  5546  0E10                     l1647:	
  5547                           ;gpio.c: 220: case 3:
  5548                           
  5549                           ;gpio.c: 216: break;
  5550                           
  5551                           
  5552                           ;gpio.c: 221: returnStatus = (((PORTD)&((1<<(enm_pinNumber))))!=0u);
  5553  0E10  3001               	movlw	1
  5554  0E11  00F0               	movwf	??_GPIO_PinRead
  5555  0E12  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  5556  0E13  2E16               	goto	u2304
  5557  0E14                     u2305:	
  5558  0E14  1003               	clrc
  5559  0E15  0DF0               	rlf	??_GPIO_PinRead,f
  5560  0E16                     u2304:	
  5561  0E16  3EFF               	addlw	-1
  5562  0E17  1D03               	skipz
  5563  0E18  2E14               	goto	u2305
  5564  0E19  0870               	movf	??_GPIO_PinRead,w
  5565  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  5566  0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  5567  0E1C  0508               	andwf	8,w	;volatile
  5568  0E1D  2E2B               	goto	L7
  5569  0E1E                     l1649:	
  5570                           ;gpio.c: 226: case 4:
  5571                           
  5572                           ;gpio.c: 222: break;
  5573                           
  5574                           
  5575                           ;gpio.c: 227: returnStatus = (((PORTE)&((1<<(enm_pinNumber))))!=0u);
  5576  0E1E  3001               	movlw	1
  5577  0E1F  00F0               	movwf	??_GPIO_PinRead
  5578  0E20  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  5579  0E21  2E24               	goto	u2334
  5580  0E22                     u2335:	
  5581  0E22  1003               	clrc
  5582  0E23  0DF0               	rlf	??_GPIO_PinRead,f
  5583  0E24                     u2334:	
  5584  0E24  3EFF               	addlw	-1
  5585  0E25  1D03               	skipz
  5586  0E26  2E22               	goto	u2335
  5587  0E27  0870               	movf	??_GPIO_PinRead,w
  5588  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  5589  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  5590  0E2A  0509               	andwf	9,w	;volatile
  5591  0E2B                     L7:	
  5592  0E2B  1903               	btfsc	3,2
  5593  0E2C  2E2F               	goto	u2340
  5594  0E2D  3001               	movlw	1
  5595  0E2E  2E30               	goto	u2350
  5596  0E2F                     u2340:	
  5597  0E2F  3000               	movlw	0
  5598  0E30                     u2350:	
  5599  0E30  00F1               	movwf	??_GPIO_PinRead+1
  5600  0E31  0871               	movf	??_GPIO_PinRead+1,w
  5601  0E32  00F3               	movwf	GPIO_PinRead@returnStatus
  5602                           
  5603                           ;gpio.c: 229: }
  5604                           
  5605                           ;gpio.c: 228: break;
  5606  0E33  2E45               	goto	l1655
  5607  0E34                     l1653:	
  5608  0E34  0872               	movf	GPIO_PinRead@var_portNumber_u8,w
  5609                           
  5610                           ; Switch size 1, requested type "space"
  5611                           ; Number of cases is 5, Range of values is 0 to 4
  5612                           ; switch strategies available:
  5613                           ; Name         Instructions Cycles
  5614                           ; simple_byte           16     9 (average)
  5615                           ; direct_byte           23     8 (fixed)
  5616                           ; jumptable            260     6 (fixed)
  5617                           ;	Chosen strategy is simple_byte
  5618  0E35  3A00               	xorlw	0	; case 0
  5619  0E36  1903               	skipnz
  5620  0E37  2DE6               	goto	l1641
  5621  0E38  3A01               	xorlw	1	; case 1
  5622  0E39  1903               	skipnz
  5623  0E3A  2DF4               	goto	l1643
  5624  0E3B  3A03               	xorlw	3	; case 2
  5625  0E3C  1903               	skipnz
  5626  0E3D  2E02               	goto	l1645
  5627  0E3E  3A01               	xorlw	1	; case 3
  5628  0E3F  1903               	skipnz
  5629  0E40  2E10               	goto	l1647
  5630  0E41  3A07               	xorlw	7	; case 4
  5631  0E42  1903               	skipnz
  5632  0E43  2E1E               	goto	l1649
  5633  0E44  2E45               	goto	l1655
  5634  0E45                     l1655:	
  5635                           
  5636                           ;gpio.c: 230: return returnStatus;
  5637  0E45  0873               	movf	GPIO_PinRead@returnStatus,w
  5638  0E46  0008               	return
  5639  0E47                     __end_of_GPIO_PinRead:	
  5640                           
  5641                           	psect	text29
  5642  01FC                     __ptext29:	
  5643 ;; *************** function _GPIO_PinDirection *****************
  5644 ;; Defined at:
  5645 ;;		line 60 in file "../00-libfiles/gpio.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  enm_pinNumbe    1    wreg     enum E1088
  5648 ;;  var_pinDirn_    1    0[COMMON] unsigned char 
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  5651 ;;  var_portNumb    1    3[COMMON] unsigned char 
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  1    wreg      void 
  5654 ;; Registers used:
  5655 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5661 ;;      Params:         1       0       0       0       0
  5662 ;;      Locals:         2       0       0       0       0
  5663 ;;      Temps:          2       0       0       0       0
  5664 ;;      Totals:         5       0       0       0       0
  5665 ;;Total ram usage:        5 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_LCD_SetUp
  5671 ;;		_lcd_BusyCheck
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           
  5676                           ;psect for function _GPIO_PinDirection
  5677  01FC                     _GPIO_PinDirection:	
  5678                           
  5679                           ;incstack = 0
  5680                           ; Regs used in _GPIO_PinDirection: [wreg-fsr0h+status,2+status,0]
  5681                           ;GPIO_PinDirection@enm_pinNumber stored from wreg
  5682  01FC  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  5683                           
  5684                           ;gpio.c: 63: uint8_t var_portNumber_u8;
  5685                           ;gpio.c: 66: var_portNumber_u8 = (enm_pinNumber>>3);
  5686  01FD  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  5687  01FE  00F1               	movwf	??_GPIO_PinDirection
  5688  01FF  3003               	movlw	3
  5689  0200                     u1885:	
  5690  0200  1003               	clrc
  5691  0201  0CF1               	rrf	??_GPIO_PinDirection,f
  5692  0202  3EFF               	addlw	-1
  5693  0203  1D03               	skipz
  5694  0204  2A00               	goto	u1885
  5695  0205  0871               	movf	??_GPIO_PinDirection,w
  5696  0206  00F2               	movwf	??_GPIO_PinDirection+1
  5697  0207  0872               	movf	??_GPIO_PinDirection+1,w
  5698  0208  00F3               	movwf	GPIO_PinDirection@var_portNumber_u8
  5699                           
  5700                           ;gpio.c: 67: enm_pinNumber = enm_pinNumber & 0x07;
  5701  0209  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  5702  020A  3907               	andlw	7
  5703  020B  00F1               	movwf	??_GPIO_PinDirection
  5704  020C  0871               	movf	??_GPIO_PinDirection,w
  5705  020D  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  5706                           
  5707                           ;gpio.c: 71: switch(var_portNumber_u8)
  5708  020E  2AC3               	goto	l1595
  5709  020F                     l1563:	
  5710                           ;gpio.c: 72: {
  5711                           ;gpio.c: 74: case 0:
  5712                           
  5713                           
  5714                           ;gpio.c: 75: ((var_pinDirn_u8)? ((TRISA) |= (1<<(enm_pinNumber))): ((TRISA) &= ~(1<<(enm
      +                          _pinNumber))));
  5715  020F  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  5716  0210  1903               	btfsc	3,2
  5717  0211  2A22               	goto	l1567
  5718  0212  3001               	movlw	1
  5719  0213  00F1               	movwf	??_GPIO_PinDirection
  5720  0214  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5721  0215  2A18               	goto	u1904
  5722  0216                     u1905:	
  5723  0216  1003               	clrc
  5724  0217  0DF1               	rlf	??_GPIO_PinDirection,f
  5725  0218                     u1904:	
  5726  0218  3EFF               	addlw	-1
  5727  0219  1D03               	skipz
  5728  021A  2A16               	goto	u1905
  5729  021B  0871               	movf	??_GPIO_PinDirection,w
  5730  021C  00F2               	movwf	??_GPIO_PinDirection+1
  5731  021D  0872               	movf	??_GPIO_PinDirection+1,w
  5732  021E  1683               	bsf	3,5	;RP0=1, select bank1
  5733  021F  1303               	bcf	3,6	;RP1=0, select bank1
  5734  0220  0485               	iorwf	5,f	;volatile
  5735  0221  0008               	return
  5736  0222                     l1567:	
  5737  0222  3001               	movlw	1
  5738  0223  00F1               	movwf	??_GPIO_PinDirection
  5739  0224  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5740  0225  2A28               	goto	u1914
  5741  0226                     u1915:	
  5742  0226  1003               	clrc
  5743  0227  0DF1               	rlf	??_GPIO_PinDirection,f
  5744  0228                     u1914:	
  5745  0228  3EFF               	addlw	-1
  5746  0229  1D03               	skipz
  5747  022A  2A26               	goto	u1915
  5748  022B  0871               	movf	??_GPIO_PinDirection,w
  5749  022C  3AFF               	xorlw	255
  5750  022D  00F2               	movwf	??_GPIO_PinDirection+1
  5751  022E  0872               	movf	??_GPIO_PinDirection+1,w
  5752  022F  1683               	bsf	3,5	;RP0=1, select bank1
  5753  0230  1303               	bcf	3,6	;RP1=0, select bank1
  5754  0231  0585               	andwf	5,f	;volatile
  5755                           
  5756                           ;gpio.c: 76: break;
  5757  0232  0008               	return
  5758  0233                     l1569:	
  5759                           ;gpio.c: 80: case 1:
  5760                           
  5761                           
  5762                           ;gpio.c: 81: ((var_pinDirn_u8)? ((TRISB) |= (1<<(enm_pinNumber))): ((TRISB) &= ~(1<<(enm
      +                          _pinNumber))));
  5763  0233  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  5764  0234  1903               	btfsc	3,2
  5765  0235  2A46               	goto	l1573
  5766  0236  3001               	movlw	1
  5767  0237  00F1               	movwf	??_GPIO_PinDirection
  5768  0238  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5769  0239  2A3C               	goto	u1934
  5770  023A                     u1935:	
  5771  023A  1003               	clrc
  5772  023B  0DF1               	rlf	??_GPIO_PinDirection,f
  5773  023C                     u1934:	
  5774  023C  3EFF               	addlw	-1
  5775  023D  1D03               	skipz
  5776  023E  2A3A               	goto	u1935
  5777  023F  0871               	movf	??_GPIO_PinDirection,w
  5778  0240  00F2               	movwf	??_GPIO_PinDirection+1
  5779  0241  0872               	movf	??_GPIO_PinDirection+1,w
  5780  0242  1683               	bsf	3,5	;RP0=1, select bank1
  5781  0243  1303               	bcf	3,6	;RP1=0, select bank1
  5782  0244  0486               	iorwf	6,f	;volatile
  5783  0245  0008               	return
  5784  0246                     l1573:	
  5785  0246  3001               	movlw	1
  5786  0247  00F1               	movwf	??_GPIO_PinDirection
  5787  0248  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5788  0249  2A4C               	goto	u1944
  5789  024A                     u1945:	
  5790  024A  1003               	clrc
  5791  024B  0DF1               	rlf	??_GPIO_PinDirection,f
  5792  024C                     u1944:	
  5793  024C  3EFF               	addlw	-1
  5794  024D  1D03               	skipz
  5795  024E  2A4A               	goto	u1945
  5796  024F  0871               	movf	??_GPIO_PinDirection,w
  5797  0250  3AFF               	xorlw	255
  5798  0251  00F2               	movwf	??_GPIO_PinDirection+1
  5799  0252  0872               	movf	??_GPIO_PinDirection+1,w
  5800  0253  1683               	bsf	3,5	;RP0=1, select bank1
  5801  0254  1303               	bcf	3,6	;RP1=0, select bank1
  5802  0255  0586               	andwf	6,f	;volatile
  5803                           
  5804                           ;gpio.c: 82: break;
  5805  0256  0008               	return
  5806  0257                     l1575:	
  5807                           ;gpio.c: 86: case 2:
  5808                           
  5809                           
  5810                           ;gpio.c: 87: ((var_pinDirn_u8)? ((TRISC) |= (1<<(enm_pinNumber))): ((TRISC) &= ~(1<<(enm
      +                          _pinNumber))));
  5811  0257  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  5812  0258  1903               	btfsc	3,2
  5813  0259  2A6A               	goto	l1579
  5814  025A  3001               	movlw	1
  5815  025B  00F1               	movwf	??_GPIO_PinDirection
  5816  025C  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5817  025D  2A60               	goto	u1964
  5818  025E                     u1965:	
  5819  025E  1003               	clrc
  5820  025F  0DF1               	rlf	??_GPIO_PinDirection,f
  5821  0260                     u1964:	
  5822  0260  3EFF               	addlw	-1
  5823  0261  1D03               	skipz
  5824  0262  2A5E               	goto	u1965
  5825  0263  0871               	movf	??_GPIO_PinDirection,w
  5826  0264  00F2               	movwf	??_GPIO_PinDirection+1
  5827  0265  0872               	movf	??_GPIO_PinDirection+1,w
  5828  0266  1683               	bsf	3,5	;RP0=1, select bank1
  5829  0267  1303               	bcf	3,6	;RP1=0, select bank1
  5830  0268  0487               	iorwf	7,f	;volatile
  5831  0269  0008               	return
  5832  026A                     l1579:	
  5833  026A  3001               	movlw	1
  5834  026B  00F1               	movwf	??_GPIO_PinDirection
  5835  026C  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5836  026D  2A70               	goto	u1974
  5837  026E                     u1975:	
  5838  026E  1003               	clrc
  5839  026F  0DF1               	rlf	??_GPIO_PinDirection,f
  5840  0270                     u1974:	
  5841  0270  3EFF               	addlw	-1
  5842  0271  1D03               	skipz
  5843  0272  2A6E               	goto	u1975
  5844  0273  0871               	movf	??_GPIO_PinDirection,w
  5845  0274  3AFF               	xorlw	255
  5846  0275  00F2               	movwf	??_GPIO_PinDirection+1
  5847  0276  0872               	movf	??_GPIO_PinDirection+1,w
  5848  0277  1683               	bsf	3,5	;RP0=1, select bank1
  5849  0278  1303               	bcf	3,6	;RP1=0, select bank1
  5850  0279  0587               	andwf	7,f	;volatile
  5851                           
  5852                           ;gpio.c: 88: break;
  5853  027A  0008               	return
  5854  027B                     l1581:	
  5855                           ;gpio.c: 92: case 3:
  5856                           
  5857                           
  5858                           ;gpio.c: 93: ((var_pinDirn_u8)? ((TRISD) |= (1<<(enm_pinNumber))): ((TRISD) &= ~(1<<(enm
      +                          _pinNumber))));
  5859  027B  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  5860  027C  1903               	btfsc	3,2
  5861  027D  2A8E               	goto	l1585
  5862  027E  3001               	movlw	1
  5863  027F  00F1               	movwf	??_GPIO_PinDirection
  5864  0280  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5865  0281  2A84               	goto	u1994
  5866  0282                     u1995:	
  5867  0282  1003               	clrc
  5868  0283  0DF1               	rlf	??_GPIO_PinDirection,f
  5869  0284                     u1994:	
  5870  0284  3EFF               	addlw	-1
  5871  0285  1D03               	skipz
  5872  0286  2A82               	goto	u1995
  5873  0287  0871               	movf	??_GPIO_PinDirection,w
  5874  0288  00F2               	movwf	??_GPIO_PinDirection+1
  5875  0289  0872               	movf	??_GPIO_PinDirection+1,w
  5876  028A  1683               	bsf	3,5	;RP0=1, select bank1
  5877  028B  1303               	bcf	3,6	;RP1=0, select bank1
  5878  028C  0488               	iorwf	8,f	;volatile
  5879  028D  0008               	return
  5880  028E                     l1585:	
  5881  028E  3001               	movlw	1
  5882  028F  00F1               	movwf	??_GPIO_PinDirection
  5883  0290  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5884  0291  2A94               	goto	u2004
  5885  0292                     u2005:	
  5886  0292  1003               	clrc
  5887  0293  0DF1               	rlf	??_GPIO_PinDirection,f
  5888  0294                     u2004:	
  5889  0294  3EFF               	addlw	-1
  5890  0295  1D03               	skipz
  5891  0296  2A92               	goto	u2005
  5892  0297  0871               	movf	??_GPIO_PinDirection,w
  5893  0298  3AFF               	xorlw	255
  5894  0299  00F2               	movwf	??_GPIO_PinDirection+1
  5895  029A  0872               	movf	??_GPIO_PinDirection+1,w
  5896  029B  1683               	bsf	3,5	;RP0=1, select bank1
  5897  029C  1303               	bcf	3,6	;RP1=0, select bank1
  5898  029D  0588               	andwf	8,f	;volatile
  5899                           
  5900                           ;gpio.c: 94: break;
  5901  029E  0008               	return
  5902  029F                     l1587:	
  5903                           ;gpio.c: 97: case 4:
  5904                           
  5905                           
  5906                           ;gpio.c: 98: ((var_pinDirn_u8)? ((TRISE) |= (1<<(enm_pinNumber))): ((TRISE) &= ~(1<<(enm
      +                          _pinNumber))));
  5907  029F  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  5908  02A0  1903               	btfsc	3,2
  5909  02A1  2AB2               	goto	l1591
  5910  02A2  3001               	movlw	1
  5911  02A3  00F1               	movwf	??_GPIO_PinDirection
  5912  02A4  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5913  02A5  2AA8               	goto	u2024
  5914  02A6                     u2025:	
  5915  02A6  1003               	clrc
  5916  02A7  0DF1               	rlf	??_GPIO_PinDirection,f
  5917  02A8                     u2024:	
  5918  02A8  3EFF               	addlw	-1
  5919  02A9  1D03               	skipz
  5920  02AA  2AA6               	goto	u2025
  5921  02AB  0871               	movf	??_GPIO_PinDirection,w
  5922  02AC  00F2               	movwf	??_GPIO_PinDirection+1
  5923  02AD  0872               	movf	??_GPIO_PinDirection+1,w
  5924  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  5925  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  5926  02B0  0489               	iorwf	9,f	;volatile
  5927  02B1  0008               	return
  5928  02B2                     l1591:	
  5929  02B2  3001               	movlw	1
  5930  02B3  00F1               	movwf	??_GPIO_PinDirection
  5931  02B4  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5932  02B5  2AB8               	goto	u2034
  5933  02B6                     u2035:	
  5934  02B6  1003               	clrc
  5935  02B7  0DF1               	rlf	??_GPIO_PinDirection,f
  5936  02B8                     u2034:	
  5937  02B8  3EFF               	addlw	-1
  5938  02B9  1D03               	skipz
  5939  02BA  2AB6               	goto	u2035
  5940  02BB  0871               	movf	??_GPIO_PinDirection,w
  5941  02BC  3AFF               	xorlw	255
  5942  02BD  00F2               	movwf	??_GPIO_PinDirection+1
  5943  02BE  0872               	movf	??_GPIO_PinDirection+1,w
  5944  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  5945  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  5946  02C1  0589               	andwf	9,f	;volatile
  5947                           
  5948                           ;gpio.c: 101: }
  5949                           
  5950                           ;gpio.c: 99: break;
  5951  02C2  0008               	return
  5952  02C3                     l1595:	
  5953  02C3  0873               	movf	GPIO_PinDirection@var_portNumber_u8,w
  5954                           
  5955                           ; Switch size 1, requested type "space"
  5956                           ; Number of cases is 5, Range of values is 0 to 4
  5957                           ; switch strategies available:
  5958                           ; Name         Instructions Cycles
  5959                           ; simple_byte           16     9 (average)
  5960                           ; direct_byte           23     8 (fixed)
  5961                           ; jumptable            260     6 (fixed)
  5962                           ;	Chosen strategy is simple_byte
  5963  02C4  3A00               	xorlw	0	; case 0
  5964  02C5  1903               	skipnz
  5965  02C6  2A0F               	goto	l1563
  5966  02C7  3A01               	xorlw	1	; case 1
  5967  02C8  1903               	skipnz
  5968  02C9  2A33               	goto	l1569
  5969  02CA  3A03               	xorlw	3	; case 2
  5970  02CB  1903               	skipnz
  5971  02CC  2A57               	goto	l1575
  5972  02CD  3A01               	xorlw	1	; case 3
  5973  02CE  1903               	skipnz
  5974  02CF  2A7B               	goto	l1581
  5975  02D0  3A07               	xorlw	7	; case 4
  5976  02D1  1903               	skipnz
  5977  02D2  2A9F               	goto	l1587
  5978  02D3  2AD4               	goto	l62
  5979  02D4                     l62:	
  5980  02D4  0008               	return
  5981  02D5                     __end_of_GPIO_PinDirection:	
  5982                           
  5983                           	psect	text30
  5984  0A65                     __ptext30:	
  5985 ;; *************** function _DELAY_ms *****************
  5986 ;; Defined at:
  5987 ;;		line 75 in file "../00-libfiles/delay.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;  ms_count        2    2[COMMON] unsigned int 
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;		None
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  1    wreg      void 
  5994 ;; Registers used:
  5995 ;;		wreg, status,2, status,0, pclath, cstack
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6001 ;;      Params:         2       0       0       0       0
  6002 ;;      Locals:         0       0       0       0       0
  6003 ;;      Temps:          0       0       0       0       0
  6004 ;;      Totals:         2       0       0       0       0
  6005 ;;Total ram usage:        2 bytes
  6006 ;; Hardware stack levels used:    1
  6007 ;; Hardware stack levels required when called:    1
  6008 ;; This function calls:
  6009 ;;		_DELAY_us
  6010 ;; This function is called by:
  6011 ;;		_LCD_Init
  6012 ;;		_lcd_BusyCheck
  6013 ;;		_lcd_Reset
  6014 ;;		_main
  6015 ;;		_LCD_ScrollMessage
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           
  6020                           ;psect for function _DELAY_ms
  6021  0A65                     _DELAY_ms:	
  6022  0A65                     l1557:	
  6023                           ;delay.c: 77: while (ms_count != 0)
  6024                           
  6025                           ;incstack = 0
  6026                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  6027                           
  6028  0A65  0872               	movf	DELAY_ms@ms_count,w
  6029  0A66  0473               	iorwf	DELAY_ms@ms_count+1,w
  6030  0A67  1903               	btfsc	3,2
  6031  0A68  0008               	return
  6032                           
  6033                           ;delay.c: 78: {
  6034                           ;delay.c: 79: DELAY_us(300u);
  6035  0A69  302C               	movlw	44
  6036  0A6A  00F0               	movwf	DELAY_us@us_count
  6037  0A6B  3001               	movlw	1
  6038  0A6C  00F1               	movwf	DELAY_us@us_count+1
  6039  0A6D  120A  158A  223C  120A  158A  	fcall	_DELAY_us
  6040                           
  6041                           ;delay.c: 80: ms_count--;
  6042  0A72  3001               	movlw	1
  6043  0A73  02F2               	subwf	DELAY_ms@ms_count,f
  6044  0A74  3000               	movlw	0
  6045  0A75  1C03               	skipc
  6046  0A76  03F3               	decf	DELAY_ms@ms_count+1,f
  6047  0A77  02F3               	subwf	DELAY_ms@ms_count+1,f
  6048  0A78  2A65               	goto	l1557
  6049  0A79                     __end_of_DELAY_ms:	
  6050                           
  6051                           	psect	text31
  6052  0A3C                     __ptext31:	
  6053 ;; *************** function _DELAY_us *****************
  6054 ;; Defined at:
  6055 ;;		line 56 in file "../00-libfiles/delay.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;  us_count        2    0[COMMON] unsigned int 
  6058 ;; Auto vars:     Size  Location     Type
  6059 ;;		None
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  1    wreg      void 
  6062 ;; Registers used:
  6063 ;;		wreg, status,2, status,0
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6069 ;;      Params:         2       0       0       0       0
  6070 ;;      Locals:         0       0       0       0       0
  6071 ;;      Temps:          0       0       0       0       0
  6072 ;;      Totals:         2       0       0       0       0
  6073 ;;Total ram usage:        2 bytes
  6074 ;; Hardware stack levels used:    1
  6075 ;; This function calls:
  6076 ;;		Nothing
  6077 ;; This function is called by:
  6078 ;;		_DELAY_ms
  6079 ;;		_lcd_BusyCheck
  6080 ;;		_lcd_Reset
  6081 ;;		_lcd_SendCmdSignals
  6082 ;;		_lcd_SendDataSignals
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           
  6087                           ;psect for function _DELAY_us
  6088  0A3C                     _DELAY_us:	
  6089  0A3C                     l1549:	
  6090                           ;delay.c: 58: while (us_count != 0)
  6091                           
  6092                           ;incstack = 0
  6093                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  6094                           
  6095  0A3C  0870               	movf	DELAY_us@us_count,w
  6096  0A3D  0471               	iorwf	DELAY_us@us_count+1,w
  6097  0A3E  1903               	btfsc	3,2
  6098  0A3F  0008               	return
  6099                           
  6100                           ;delay.c: 59: {
  6101                           ;delay.c: 60: us_count--;
  6102  0A40  3001               	movlw	1
  6103  0A41  02F0               	subwf	DELAY_us@us_count,f
  6104  0A42  3000               	movlw	0
  6105  0A43  1C03               	skipc
  6106  0A44  03F1               	decf	DELAY_us@us_count+1,f
  6107  0A45  02F1               	subwf	DELAY_us@us_count+1,f
  6108  0A46  2A3C               	goto	l1549
  6109  0A47                     __end_of_DELAY_us:	
  6110  007E                     btemp	set	126	;btemp
  6111  007E                     wtemp	set	126
  6112  007E                     wtemp0	set	126
  6113  0080                     wtemp1	set	128
  6114  0082                     wtemp2	set	130
  6115  0084                     wtemp3	set	132
  6116  0086                     wtemp4	set	134
  6117  0088                     wtemp5	set	136
  6118  007F                     wtemp6	set	127
  6119  007E                     ttemp	set	126
  6120  007E                     ttemp0	set	126
  6121  0081                     ttemp1	set	129
  6122  0084                     ttemp2	set	132
  6123  0087                     ttemp3	set	135
  6124  007F                     ttemp4	set	127
  6125  007E                     ltemp	set	126
  6126  007E                     ltemp0	set	126
  6127  0082                     ltemp1	set	130
  6128  0086                     ltemp2	set	134
  6129  0080                     ltemp3	set	128


Data Sizes:
    Strings     18
    Constant    0
    Data        4
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Printf@str	PTR unsigned char  size(1) Largest target is 0

    LCD_Printf@argList	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_2(CODE[10]), 

    LCD_Printf@ptr	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_2(CODE[10]), 

    LCD_Printf@argp	PTR void [1] size(1) Largest target is 1
		 -> ?_LCD_Printf(BANK0[1]), 

    LCD_DisplayString@ptr_stringPointer_u8	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_LCD_DisplayString
    _main->_LCD_Init
    _LCD_SetUp->_GPIO_PinDirection
    _LCD_Printf->_LCD_DisplayString
    _LCD_DisplayString->_LCD_DisplayChar
    _LCD_DisplayFloatNumber->___ftmul
    _LCD_DisplayFloatNumber->___lltoft
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftneg->___lltoft
    ___ftmul->___ftpack
    ___ftadd->___lltoft
    _LCD_DisplayNumber->___lldiv
    ___bmul->___lldiv
    _LCD_DisplayChar->_LCD_GoToNextLine
    _lcd_DataWrite->_lcd_BusyCheck
    _lcd_DataWrite->_lcd_SendHigherNibble
    _lcd_DataWrite->_lcd_SendLowerNibble
    _lcd_SendDataSignals->_GPIO_PinWrite
    _LCD_GoToNextLine->_LCD_CmdWrite
    _lcd_Reset->_lcd_SendHigherNibble
    _LCD_Clear->_LCD_GoToLine
    _LCD_GoToLine->_LCD_CmdWrite
    _LCD_CmdWrite->_lcd_BusyCheck
    _LCD_CmdWrite->_lcd_SendHigherNibble
    _LCD_CmdWrite->_lcd_SendLowerNibble
    _lcd_SendLowerNibble->_GPIO_PinWrite
    _lcd_SendHigherNibble->_GPIO_PinWrite
    _lcd_SendCmdSignals->_GPIO_PinWrite
    _lcd_BusyCheck->_GPIO_PinDirection
    _lcd_BusyCheck->_GPIO_PinRead
    _lcd_BusyCheck->_GPIO_PinWrite
    _DELAY_ms->_DELAY_us

Critical Paths under _main in BANK0

    _main->_LCD_Printf
    _LCD_Printf->_LCD_DisplayFloatNumber
    _LCD_DisplayFloatNumber->_LCD_DisplayNumber
    ___fttol->___ftmul
    ___ftadd->___ftneg
    _LCD_DisplayNumber->___bmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0  179653
                                             68 BANK0     12    12      0
                           _DELAY_ms
                  _LCD_DisplayString
                       _LCD_GoToLine
                           _LCD_Init
                         _LCD_Printf
                          _LCD_SetUp
 ---------------------------------------------------------------------------------
 (1) _LCD_SetUp                                           12     2     10    2189
                                              5 COMMON     2     2      0
                                              0 BANK0     10     0     10
                  _GPIO_PinDirection
 ---------------------------------------------------------------------------------
 (1) _LCD_Printf                                          25    23      2  111431
                                             43 BANK0     25    23      2
                    _LCD_DisplayChar
             _LCD_DisplayFloatNumber
                  _LCD_DisplayNumber
                  _LCD_DisplayString
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayString                                    2     2      0   19733
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                    _LCD_DisplayChar
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayFloatNumber                               8     5      3   48782
                                             35 BANK0      8     5      3
                    _LCD_DisplayChar
                  _LCD_DisplayNumber
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    1790
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     358
                                             10 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                              0 BANK0      3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2100
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2694
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayNumber                                   31    26      5   21920
                                              4 BANK0     31    26      5
                    _LCD_DisplayChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_DisplayChar                                      2     2      0   19634
                                             11 COMMON     2     2      0
                   _LCD_GoToNextLine
                      _lcd_DataWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_DataWrite                                        3     3      0    9784
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                _lcd_SendDataSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendDataSignals                                  0     0      0    2117
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _LCD_GoToNextLine                                     1     1      0    9784
                                             10 COMMON     1     1      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     2      1   35585
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                           _DELAY_ms
                          _LCD_Clear
                       _LCD_CmdWrite
                          _lcd_Reset
 ---------------------------------------------------------------------------------
 (2) _lcd_Reset                                            0     0      0    5163
                           _DELAY_ms
                           _DELAY_us
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0   19634
                       _LCD_CmdWrite
                       _LCD_GoToLine
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToLine                                         2     2      0    9850
                                             10 COMMON     2     2      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (5) _LCD_CmdWrite                                         3     3      0    9784
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendLowerNibble                                  2     2      0    1652
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (5) _lcd_SendHigherNibble                                 2     2      0    1652
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (6) _lcd_SendCmdSignals                                   0     0      0    2117
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (5) _lcd_BusyCheck                                        2     2      0    4274
                                              5 COMMON     2     2      0
                           _DELAY_ms
                           _DELAY_us
                  _GPIO_PinDirection
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (6) _GPIO_PinWrite                                        5     4      1    1564
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (6) _GPIO_PinRead                                         5     5      0     206
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinDirection                                    5     4      1    1087
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (6) _DELAY_ms                                             2     0      2     841
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (6) _DELAY_us                                             2     0      2     553
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_ms
     _DELAY_us
   _LCD_DisplayString
     _LCD_DisplayChar
       _LCD_GoToNextLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _lcd_DataWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendDataSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
   _LCD_GoToLine
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
   _LCD_Init
     _DELAY_ms
       _DELAY_us
     _LCD_Clear
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
       _LCD_GoToLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
     _lcd_Reset
       _DELAY_ms
         _DELAY_us
       _DELAY_us
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
   _LCD_Printf
     _LCD_DisplayChar
       _LCD_GoToNextLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _lcd_DataWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendDataSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
     _LCD_DisplayFloatNumber
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _LCD_DisplayNumber
         _LCD_DisplayChar
           _LCD_GoToNextLine
             _LCD_CmdWrite
               _lcd_BusyCheck
                 _DELAY_ms
                   _DELAY_us
                 _DELAY_us
                 _GPIO_PinDirection
                 _GPIO_PinRead
                 _GPIO_PinWrite
               _lcd_SendCmdSignals
                 _DELAY_us
                 _GPIO_PinWrite
               _lcd_SendHigherNibble
                 _GPIO_PinWrite
               _lcd_SendLowerNibble
                 _GPIO_PinWrite
           _lcd_DataWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendDataSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       ___ftadd
         ___ftneg (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
     _LCD_DisplayNumber
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       ___bmul
         ___lldiv (ARG)
       ___lldiv
     _LCD_DisplayString
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     ___bmul
       ___lldiv (ARG)
   _LCD_SetUp
     _GPIO_PinDirection

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      72      12        0.0%
ABS                  0      0      72       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Tue Mar 15 11:12:53 2016

                    _LCD_DisplayFloatNumber 0F61                                           pc 0002  
                            ___bmul@product 0022                                 __CFG_CP$OFF 0000  
                             ?_LCD_CmdWrite 0070                                          l62 02D4  
                                        l92 03AD                                 ?_LCD_Printf 004B  
                                        fsr 0004                               ?_LCD_GoToLine 0070  
                              ___ftadd@exp1 002F                                ___ftadd@exp2 002E  
                               __CFG_LVP$ON 0000                                ___ftadd@sign 002D  
                                       l251 0674                                         l156 0050  
                                       l276 0E67                                         l565 0DB1  
                                       l566 0DB9                                         l558 0D9C  
                                       l649 0F47                                         l589 0548  
                              __CFG_CPD$OFF 0000                                         fsr0 0004  
                                       indf 0000                                __CFG_FOSC$HS 0000  
                   __end_of_LCD_DisplayChar 0AC1                                        l2011 0EED  
                                      l2031 0F2F                                        l2103 018F  
                                      l2105 0196                                        l2043 0F58  
                                      l2051 0AE5                                        l2211 06CF  
                                      l2115 01C0                                        l2133 002E  
                                      l2037 0F3C                                        l2029 0F1F  
                                      l2053 0AF7                                        l2205 06A8  
                                      l2039 0F4A                                        l2231 072A  
                                      l2223 0715                                        l1601 02E8  
                                      l2241 0756                                        l2233 073B  
                                      l2217 06EE                                        l1611 031F  
                                      l2139 003F                                        l2083 0AC4  
                                      l2243 0769                                        l2171 0610  
                                      l1613 0330                                        l1605 02FB  
                                      l2165 05E3                                        l2261 07CE  
                                      l2309 0D42                                        l1623 0367  
                                      l1607 030C                                        l1703 0B92  
                                      l2255 079A                                        l2263 07D4  
                                      l1641 0DE6                                        l1625 0378  
                                      l1617 0343                                        l1633 039C  
                                      l1801 0CB0                                        l2249 0786  
                                      l2177 061C                                        l2169 060B  
                                      l2265 05B4                                        l1563 020F  
                                      l1643 0DF4                                        l1619 0354  
                                      l1811 0CE8                                        l1803 0CC0  
                                      l2187 0637                                        l2259 079C  
                                      l1549 0A3C                                        l1557 0A65  
                                      l1581 027B                                        l1573 0246  
                                      l1645 0E02                                        l1653 0E34  
                                      l1629 038B                                        l1733 0BC7  
                                      l1741 0AAD                                        l2189 064D  
                                      l1591 02B2                                        l1575 0257  
                                      l1567 0222                                        l1647 0E10  
                                      l1655 0E45                                        l1743 0AB2  
                                      l1751 0A56                                        l1815 0CF5  
                                      l1911 050E                                        l2199 0689  
                                      l1585 028E                                        l1569 0233  
                                      l1649 0E1E                                        l1681 0ECB  
                                      l1729 0BAF                                        l1833 03B7  
                                      l1841 03F9                                        l1913 051A  
                                      l1905 04F9                                        l1587 029F  
                                      l1579 026A                                        l1595 02C3  
                                      l1755 0A5C                                        l1771 0D75  
                                      l1923 0538                                        l1915 051F  
                                      l1677 0EC0                                        l1861 0472  
                                      l1853 0466                                        l1845 0404  
                                      l1781 0DA1                                        l1773 0D81  
                                      l1933 056C                                        l1925 0544  
                                      l1917 0523                                        l1863 0407  
                                      l1839 03F5                                        l1783 0DAB  
                                      l1775 0D86                                        l1767 0D6E  
                                      l1943 058F                                        l1865 0477  
                                      l1929 055A                                        l1953 0072  
                                      l1699 0B7A                                        l1875 049C  
                                      l1883 04C9                                        l1971 00C7  
                                      l1869 0487                                        l1893 04DF  
                                      l1887 04D0                                        l1983 00EF  
                                      l1975 00D7                                        l1959 0088  
                                      l1987 00FF                                        STR_1 0810  
                                      STR_2 0806                                        u2004 0294  
                                      u2005 0292                                        u2024 02A8  
                                      u2104 0325                                        u2025 02A6  
                                      u2105 0323                                        u2034 02B8  
                                      u2035 02B6                                        u2124 0339  
                                      u2205 0DD7                                        u2125 0337  
                                      u2045 02D9                                        u2214 0DEC  
                                      u2134 0349                                        u2215 0DEA  
                                      u2135 0347                                        u2304 0E16  
                                      u2064 02F1                                        u2400 0C17  
                                      u2305 0E14                                        u2065 02EF  
                                      u2154 035D                                        u2074 0301  
                                      u2410 0C26                                        u2155 035B  
                                      u2075 02FF                                        u2340 0E2F  
                                      u2244 0DFA                                        u2164 036D  
                                      u2500 0BE7                                        u2420 0C27  
                                      u2245 0DF8                                        u2165 036B  
                                      u3125 0524                                        u2350 0E30  
                                      u2334 0E24                                        u2094 0315  
                                      u2510 0BF6                                        u2430 0C36  
                                      u2335 0E22                                        u2095 0313  
                                      u2184 0381                                        u2520 0BF7  
                                      u2440 0C37                                        u2185 037F  
                                      u3065 04FA                                        u2274 0E08  
                                      u2194 0391                                        u2530 0C06  
                                      u2450 0C46                                        u2275 0E06  
                                      u2195 038F                                        u3155 0539  
                                      u3235 0094                                        u2540 0C07  
                                      u2460 0C47                                        u3325 0100  
                                      u3245 00A6                                        u3405 0F20  
                                      u2470 0BD6                                        u2390 0C16  
                                      u3095 050F                                        u3335 0108  
                                      u1904 0218                                        u2480 0BD7  
                                      u1905 0216                                        u1914 0228  
                                      u2490 0BE6                                        u1915 0226  
                                      u2715 0DA4                                        u3275 00D8  
                                      u3435 0F3E                                        u2565 0B88  
                                      u2805 0CC2                                        u3285 00E0  
                                      u1934 023C                                        u1935 023A  
                                      u2815 0CD7                                        u3375 0EF4  
                                      u1944 024C                                        u1945 024A  
                                      u2825 0CE9                                        u3465 0AEA  
                                      u2595 0BBD                                        u2755 0DC0  
                                      u2675 0D7A                                        u1964 0260  
                                      u1965 025E                                        u1885 0200  
                                      u1974 0270                                        u2870 03E6  
                                      u1975 026E                                        u2695 0D95  
                                      u2880 03E7                                        u2864 03CB  
                                      u2785 0CB4                                        u2865 03C8  
                                      u1994 0284                                        u1995 0282  
                              __CFG_WRT$OFF 0000                                        _main 0CFE  
                              ___ftpack@arg 0070                          __size_of_LCD_Clear 000B  
                              ___ftpack@exp 0073                                        btemp 007E  
                                      ltemp 007E                          __size_of_LCD_SetUp 00D1  
                                      start 0000                                        ttemp 007E  
                                      wtemp 007E                            __end_of_DELAY_ms 0A79  
                          __end_of_DELAY_us 0A47                           ___bmul@multiplier 0023  
                              ___ftmul@cntr 0028                               ?_GPIO_PinRead 0070  
                              ___ftmul@sign 0029                              ??_LCD_CmdWrite 0077  
                               LCD_SetUp@D0 0022                                 LCD_SetUp@D1 0023  
                               LCD_SetUp@D2 0024                                 LCD_SetUp@D3 0025  
                               LCD_SetUp@D4 0026                                 LCD_SetUp@D5 0027  
                               LCD_SetUp@D6 0028                                 LCD_SetUp@D7 0029  
                               LCD_SetUp@EN 0021                                ___fttol@exp1 0037  
                               LCD_SetUp@RS 0076                                 LCD_SetUp@RW 0020  
                              ___fttol@lval 0033                              ??_LCD_GoToLine 007A  
                             _GPIO_PinWrite 02D5                            __end_of_LCD_Init 005A  
          LCD_Printf@v_numOfDigitsToDisp_u8 0062                     LCD_CmdWrite@v_lcdCmd_u8 0079  
                                     ?_main 0070                             __end_of___ftadd 05A9  
                             __CFG_WDTE$OFF 0000                             __end_of___ftneg 0A3C  
                           __end_of___lldiv 0CFE                             __end_of___ftmul 012B  
                           __end_of___fttol 0F61                       _LCD_DisplayNumber$262 003F  
                                     _PORTA 0005                                       _PORTB 0006  
                                     _PORTC 0007                                       _PORTD 0008  
                                     _PORTE 0009                                       _TRISA 0085  
                                     _TRISB 0086                                       _TRISC 0087  
                                     _TRISD 0088                                       _TRISE 0089  
                              ___lltoft@exp 007D       LCD_DisplayString@ptr_stringPointer_u8 0020  
                             ___ftpack@sign 0074                              __CFG_BOREN$OFF 0000  
                                     pclath 000A                                       ltemp0 007E  
                                     ltemp1 0082                                       ltemp2 0086  
                                     ltemp3 0080                __end_of_lcd_SendHigherNibble 0C11  
                       __size_of_LCD_Printf 0232                                       ttemp0 007E  
                                     ttemp1 0081                                       ttemp2 0084  
                                     ttemp3 0087                                       ttemp4 007F  
                                     status 0003                                       wtemp0 007E  
                                     wtemp1 0080                                       wtemp2 0082  
                                     wtemp3 0084                                       wtemp4 0086  
                                     wtemp5 0088                                       wtemp6 007F  
                            ??_GPIO_PinRead 0070                             __initialization 07DB  
                GPIO_PinWrite@enm_pinNumber 0074                                __end_of_main 0D66  
                            ?_GPIO_PinWrite 0070                           _GPIO_PinDirection 01FC  
                                    ??_main 0064                               ___fttol@sign1 0032  
               __size_of_lcd_SendCmdSignals 002D                           __end_of_LCD_Clear 0A52  
                        ?_GPIO_PinDirection 0070                           __end_of_LCD_SetUp 01FC  
                          ?_LCD_DisplayChar 0070                 LCD_DisplayChar@v_lcdData_u8 007C  
                              LCD_Printf@ch 0061                         ??_GPIO_PinDirection 0071  
                          __end_of___ftpack 0DD2                            __end_of___lltoft 0B0C  
                     lcd_BusyCheck@busyflag 0076                              __CFG_PWRTE$OFF 0000  
                 GPIO_PinRead@enm_pinNumber 0074                                      ___bmul 0A52  
                                 ??___ftadd 0029                                   ??___ftneg 007E  
                                 ??___lldiv 0078                                   ??___ftmul 0020  
                                 ??___fttol 002E                   __end_of_GPIO_PinDirection 02D5  
            GPIO_PinDirection@enm_pinNumber 0074                            DELAY_ms@ms_count 0072  
                     ___ftmul@f3_as_product 0025                           ?_LCD_GoToNextLine 0070  
                                 ?_DELAY_ms 0072                                   ?_DELAY_us 0070  
               __end_of_lcd_SendLowerNibble 0C51                          ??_LCD_GoToNextLine 007A  
                      __end_of_LCD_CmdWrite 0B9C                        __end_of_LCD_GoToLine 0AA2  
               lcd_SendLowerNibble@dataByte 0076                     __end_of__initialization 07FC  
                                 ?_LCD_Init 007C                                  ___ftadd@f1 0023  
                                ___ftadd@f2 0026                     ?_LCD_DisplayFloatNumber 0043  
                                ___ftneg@f1 0020                         ___bmul@multiplicand 0020  
                                ___ftmul@f1 0078                                  ___ftmul@f2 007B  
                           ??_GPIO_PinWrite 0071                                  ___fttol@f1 002A  
                            __pcstackCOMMON 0070                                __pidataBANK1 0005  
                                ___lltoft@c 0078                       __end_of_lcd_DataWrite 0BD1  
                              ??_LCD_Printf 004D                        _lcd_SendHigherNibble 0BD1  
                       LCD_Printf@v_num_s16 0058                         LCD_Printf@v_num_s32 0054  
                       LCD_Printf@v_num_u16 005E                         LCD_Printf@v_num_u32 005A  
                        __size_of_lcd_Reset 004F                __size_of_lcd_SendDataSignals 002E  
                                ??_DELAY_ms 0074                                  ??_DELAY_us 0072  
                      __end_of_GPIO_PinRead 0E47              GPIO_PinWrite@var_portNumber_u8 0073  
                                __pbssBANK1 00A0                       __end_of_lcd_BusyCheck 0ED3  
              lcd_SendHigherNibble@dataByte 0076                GPIO_PinWrite@var_pinValue_u8 0070  
                                ??_LCD_Init 007D              __end_of_LCD_DisplayFloatNumber 1000  
                        __end_of_LCD_Printf 07DB                                  __pmaintext 0CFE  
                                   ?___bmul 0020                  __size_of_GPIO_PinDirection 00D9  
                             LCD_Printf@ptr 0060                               LCD_Printf@str 0052  
                                 ?___ftpack 0070                       ?_lcd_SendHigherNibble 0070  
                                 ?___lltoft 0078                            DELAY_us@us_count 0070  
                                __stringtab 0800                           __end_of_lcd_Reset 0CA0  
                           __size_of___bmul 0013                   LCD_Init@v_lcdNoOfLines_u8 0020  
                                   ___ftadd 04A0                                     ___ftneg 0A32  
                                   ___lldiv 0CA0                                     ___ftmul 005A  
                                   ___fttol 0ED3                                  ??___ftpack 0075  
                        LCD_DisplayNumber@a 0035                          LCD_DisplayNumber@i 0042  
                                ??___lltoft 007C                                     __ptext1 012B  
                                   __ptext2 05A9                                     __ptext3 0AC1  
                                   __ptext4 0F61                                     __ptext5 0AE1  
                                   __ptext6 0ED3                                     __ptext7 0A32  
                                   __ptext8 005A                                     __ptext9 04A0  
                     __size_of_LCD_CmdWrite 0035                                   _LCDConfig 00A0  
                     __size_of_LCD_GoToLine 0015                                   _LCD_Clear 0A47  
                                 _LCD_SetUp 012B                                     clrloop0 0A2B  
                      end_of_initialization 07FC                LCD_Init@v_MaxCharsPerLine_u8 007C  
                           ___lldiv@divisor 0070                             ___lldiv@counter 007D  
                    ??_lcd_SendHigherNibble 0075                  __end_of_lcd_SendCmdSignals 0B39  
                              _LCD_CmdWrite 0B67                                _LCD_GoToLine 0A8D  
                     __size_of_GPIO_PinRead 0075                                  ?_LCD_Clear 0070  
                                ?_LCD_SetUp 0020                           __size_of_DELAY_ms 0014  
                         __size_of_DELAY_us 000B                    __size_of_LCD_DisplayChar 001F  
                         __size_of_LCD_Init 0051                   __size_of_LCD_GoToNextLine 0014  
                       _lcd_SendDataSignals 0B39                                 ___ftmul@exp 0024  
        GPIO_PinDirection@var_portNumber_u8 0073                                _GPIO_PinRead 0DD2  
                            __end_of___bmul 0A65       LCD_DisplayFloatNumber@v_decNumber_u32 0047  
                         LCD_Printf@argList 0053                    _ARR_LcdLineNumAddress_U8 00B0  
                       start_initialization 07DB                        ?_lcd_SendDataSignals 0070  
                    _v_LcdTrackCursorPos_U8 00AE               GPIO_PinRead@var_portNumber_u8 0072  
              __size_of_lcd_SendLowerNibble 0040             GPIO_PinDirection@var_pinDirn_u8 0070  
                                  ??___bmul 0021                       __end_of_GPIO_PinWrite 03AE  
                               __pdataBANK1 00B0        LCD_DisplayFloatNumber@v_floatNum_f32 0043  
                         __size_of___ftpack 006C                       ??_lcd_SendDataSignals 0075  
                      _v_LcdTrackLineNum_U8 00AF                           __size_of___lltoft 002B  
                                 ___latbits 0002                       lcd_DataWrite@dataByte 0079  
                             __pcstackBANK0 0020                                 ??_LCD_Clear 007C  
                               ??_LCD_SetUp 0075                      __size_of_lcd_DataWrite 0035  
               LCD_GoToLine@v_lineNumber_u8 007B                                    ?___ftadd 0023  
                                  ?___ftneg 0020                                    ?___lldiv 0070  
                                  ?___ftmul 0078                                    ?___fttol 002A  
                                 _lcd_Reset 0C51                           ??_LCD_DisplayChar 007B  
                                 __pstrings 0800                      __size_of_lcd_BusyCheck 008C  
                         _LCD_DisplayNumber 03AE                              LCD_Printf@argp 0063  
                         _LCD_DisplayString 0AC1                                    _DELAY_ms 0A65  
                                  _DELAY_us 0A3C                          ?_LCD_DisplayNumber 0024  
                        ?_LCD_DisplayString 0070                         ??_LCD_DisplayNumber 0029  
                                  _LCD_Init 0009                         ??_LCD_DisplayString 007D  
                                 clear_ram0 0A2A                            _LCD_GoToNextLine 0A79  
                                ?_lcd_Reset 0070                               _lcd_DataWrite 0B9C  
                  GPIO_PinRead@returnStatus 0073                   __end_of_LCD_DisplayNumber 04A0  
                               __stringbase 0805                   __end_of_LCD_DisplayString 0AE1  
                                 main@count 006E                          _lcd_SendCmdSignals 0B0C  
                  ??_LCD_DisplayFloatNumber 0046                               _lcd_BusyCheck 0E47  
                       ?_lcd_SendCmdSignals 0070                              ?_lcd_DataWrite 0070  
                          __size_of___ftadd 0109                            __size_of___ftneg 000A  
                          __size_of___lldiv 005E                            __size_of___ftmul 00D1  
                          __size_of___fttol 008E                                    ___ftpack 0D66  
                        __end_of__stringtab 0806                        ??_lcd_SendCmdSignals 0075  
                                  ___lltoft 0AE1               __size_of_lcd_SendHigherNibble 0040  
                       _lcd_SendLowerNibble 0C11                                    __ptext10 0D66  
                                  __ptext11 03AE                                    __ptext20 0A47  
                                  __ptext12 0CA0                                    __ptext21 0A8D  
                                  __ptext13 0A52                                    __ptext30 0A65  
                                  __ptext22 0B67                                    __ptext14 0AA2  
                                  __ptext31 0A3C                                    __ptext23 0C11  
                                  __ptext15 0B9C                                    __ptext24 0BD1  
                                  __ptext16 0B39                                    __ptext25 0B0C  
                                  __ptext17 0A79                                    __ptext26 0E47  
                                  __ptext18 0009                                    __ptext27 02D5  
                                  __ptext19 0C51                                    __ptext28 0DD2  
                                  __ptext29 01FC                              ?_lcd_BusyCheck 0070  
       LCD_DisplayNumber@v_numericSystem_u8 0041                               __size_of_main 0068  
                      ?_lcd_SendLowerNibble 0070                                 ??_lcd_Reset 0077  
                                _LCD_Printf 05A9                  __size_of_LCD_DisplayNumber 00F2  
                __size_of_LCD_DisplayString 0020             __size_of_LCD_DisplayFloatNumber 009F  
                     ??_lcd_SendLowerNibble 0075                            ___lldiv@dividend 0074  
                           _LCD_DisplayChar 0AA2                                   stringcode 0800  
                           ??_lcd_DataWrite 0077                 __end_of_lcd_SendDataSignals 0B67  
                  LCD_Printf@v_floatNum_f32 004F                            ___lldiv@quotient 0079  
                  __end_of_LCD_GoToNextLine 0A8D                                    stringdir 0800  
                                  stringtab 0800  LCD_DisplayNumber@v_numOfDigitsToDisplay_u8 0028  
                           ??_lcd_BusyCheck 0075                      __size_of_GPIO_PinWrite 00D9  
             LCD_DisplayNumber@v_number_u32 0024  
