

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat May 07 16:37:05 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     	;# 
    35  0001                     	;# 
    36  0002                     	;# 
    37  0003                     	;# 
    38  0004                     	;# 
    39  0005                     	;# 
    40  0006                     	;# 
    41  0007                     	;# 
    42  0008                     	;# 
    43  0009                     	;# 
    44  000A                     	;# 
    45  000B                     	;# 
    46  000C                     	;# 
    47  000D                     	;# 
    48  000E                     	;# 
    49  000E                     	;# 
    50  000F                     	;# 
    51  0010                     	;# 
    52  0011                     	;# 
    53  0012                     	;# 
    54  0013                     	;# 
    55  0014                     	;# 
    56  0015                     	;# 
    57  0015                     	;# 
    58  0016                     	;# 
    59  0017                     	;# 
    60  0018                     	;# 
    61  0019                     	;# 
    62  001A                     	;# 
    63  001B                     	;# 
    64  001B                     	;# 
    65  001C                     	;# 
    66  001D                     	;# 
    67  001E                     	;# 
    68  001F                     	;# 
    69  0081                     	;# 
    70  0085                     	;# 
    71  0086                     	;# 
    72  0087                     	;# 
    73  0088                     	;# 
    74  0089                     	;# 
    75  008C                     	;# 
    76  008D                     	;# 
    77  008E                     	;# 
    78  0091                     	;# 
    79  0092                     	;# 
    80  0093                     	;# 
    81  0094                     	;# 
    82  0098                     	;# 
    83  0099                     	;# 
    84  009C                     	;# 
    85  009D                     	;# 
    86  009E                     	;# 
    87  009F                     	;# 
    88  010C                     	;# 
    89  010D                     	;# 
    90  010E                     	;# 
    91  010F                     	;# 
    92  018C                     	;# 
    93  018D                     	;# 
    94                           
    95                           	psect	idataBANK0
    96  01C7                     __pidataBANK0:	
    97                           
    98                           ;initializer for _ARR_LcdLineNumAddress_U8
    99  01C7  3480               	retlw	128
   100  01C8  34C0               	retlw	192
   101  01C9  3490               	retlw	144
   102  01CA  34D0               	retlw	208
   103  0005                     _PORTA	set	5
   104  0006                     _PORTB	set	6
   105  0007                     _PORTC	set	7
   106  0008                     _PORTD	set	8
   107  0009                     _PORTE	set	9
   108  0085                     _TRISA	set	133
   109  0086                     _TRISB	set	134
   110  0087                     _TRISC	set	135
   111  0088                     _TRISD	set	136
   112  0089                     _TRISE	set	137
   113                           
   114                           	psect	strings
   115  0003                     __pstrings:	
   116  0003                     stringtab:	
   117  0003                     __stringtab:	
   118  0003                     stringcode:	
   119                           ;	String table - string pointers are 1 byte each
   120                           
   121  0003                     stringdir:	
   122  0003  3000               	movlw	high stringdir
   123  0004  008A               	movwf	10
   124  0005  0804               	movf	4,w
   125  0006  0A84               	incf	4,f
   126  0007  0782               	addwf	2,f
   127  0008                     __stringbase:	
   128  0008  3400               	retlw	0
   129  0009                     __end_of__stringtab:	
   130  0009                     STR_1:	
   131  0009  3445               	retlw	69	;'E'
   132  000A  3478               	retlw	120	;'x'
   133  000B  3470               	retlw	112	;'p'
   134  000C  346C               	retlw	108	;'l'
   135  000D  346F               	retlw	111	;'o'
   136  000E  3472               	retlw	114	;'r'
   137  000F  3465               	retlw	101	;'e'
   138  0010  3420               	retlw	32	;' '
   139  0011  3445               	retlw	69	;'E'
   140  0012  346D               	retlw	109	;'m'
   141  0013  3462               	retlw	98	;'b'
   142  0014  3465               	retlw	101	;'e'
   143  0015  3464               	retlw	100	;'d'
   144  0016  3464               	retlw	100	;'d'
   145  0017  3465               	retlw	101	;'e'
   146  0018  3464               	retlw	100	;'d'
   147  0019  3400               	retlw	0
   148  001A                     STR_2:	
   149  001A  344C               	retlw	76	;'L'
   150  001B  3463               	retlw	99	;'c'
   151  001C  3464               	retlw	100	;'d'
   152  001D  3420               	retlw	32	;' '
   153  001E  3438               	retlw	56	;'8'
   154  001F  342D               	retlw	45	;'-'
   155  0020  3462               	retlw	98	;'b'
   156  0021  3469               	retlw	105	;'i'
   157  0022  3474               	retlw	116	;'t'
   158  0023  3420               	retlw	32	;' '
   159  0024  344D               	retlw	77	;'M'
   160  0025  346F               	retlw	111	;'o'
   161  0026  3464               	retlw	100	;'d'
   162  0027  3465               	retlw	101	;'e'
   163  0028  3400               	retlw	0
   164                           
   165                           ; #config settings
   166  0000                     
   167                           	psect	cinit
   168  07DD                     start_initialization:	
   169  07DD                     __initialization:	
   170                           
   171                           ; Clear objects allocated to BANK0
   172  07DD  1383               	bcf	3,7	;select IRP bank0
   173  07DE  3034               	movlw	low __pbssBANK0
   174  07DF  0084               	movwf	4
   175  07E0  3044               	movlw	low (__pbssBANK0+16)
   176  07E1  120A  118A  21CB  120A  118A  	fcall	clear_ram0
   177                           
   178                           ; Initialize objects allocated to BANK0
   179  07E6  120A  118A  21C7  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   180  07EB  00C4               	movwf	__pdataBANK0& (0+127)
   181  07EC  120A  118A  21C8  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   182  07F1  00C5               	movwf	(__pdataBANK0+1)& (0+127)
   183  07F2  120A  118A  21C9  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   184  07F7  00C6               	movwf	(__pdataBANK0+2)& (0+127)
   185  07F8  120A  118A  21CA   	fcall	__pidataBANK0+3	;fetch initializer
   186  07FB  00C7               	movwf	(__pdataBANK0+3)& (0+127)
   187  07FC                     end_of_initialization:	
   188                           ;End of C runtime variable initialization code
   189                           
   190  07FC                     __end_of__initialization:	
   191  07FC  0183               	clrf	3
   192  07FD  120A  118A  2BF1   	ljmp	_main	;jump to C main() function
   193                           
   194                           	psect	bssBANK0
   195  0034                     __pbssBANK0:	
   196  0034                     _LCDConfig:	
   197  0034                     	ds	14
   198  0042                     _v_LcdTrackCursorPos_U8:	
   199  0042                     	ds	1
   200  0043                     _v_LcdTrackLineNum_U8:	
   201  0043                     	ds	1
   202                           
   203                           	psect	dataBANK0
   204  0044                     __pdataBANK0:	
   205  0044                     _ARR_LcdLineNumAddress_U8:	
   206  0044                     	ds	4
   207                           
   208                           	psect	clrtext
   209  01CB                     clear_ram0:	
   210                           ;	Called with FSR containing the base address, and
   211                           ;	W with the last address+1
   212                           
   213  01CB  0064               	clrwdt	;clear the watchdog before getting into this loop
   214  01CC                     clrloop0:	
   215  01CC  0180               	clrf	0	;clear RAM location pointed to by FSR
   216  01CD  0A84               	incf	4,f	;increment pointer
   217  01CE  0604               	xorwf	4,w	;XOR with final address
   218  01CF  1903               	btfsc	3,2	;have we reached the end yet?
   219  01D0  3400               	retlw	0	;all done for this memory range, return
   220  01D1  0604               	xorwf	4,w	;XOR again to restore value
   221  01D2  29CC               	goto	clrloop0	;do the next byte
   222                           
   223                           	psect	cstackCOMMON
   224  0070                     __pcstackCOMMON:	
   225  0070                     ?_LCD_CmdWrite:	
   226  0070                     ?_lcd_Reset:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0070                     ?_LCD_Clear:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ?_LCD_GoToLine:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_lcd_BusyCheck:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_lcd_SendLowerNibble:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?_lcd_SendHigherNibble:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?_lcd_SendCmdSignals:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_lcd_DataWrite:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ?_lcd_SendDataSignals:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_DELAY_us:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ?_GPIO_PinDirection:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_GPIO_PinWrite:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ?_GPIO_PinRead:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ??_GPIO_PinRead:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ?_LCD_GoToNextLine:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ?_LCD_DisplayChar:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ?_LCD_DisplayString:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_main:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     GPIO_PinDirection@var_pinDirn_u8:	
   281                           ; 2 bytes @ 0x0
   282                           
   283  0070                     GPIO_PinWrite@var_pinValue_u8:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     DELAY_us@us_count:	
   287                           ; 1 bytes @ 0x0
   288                           
   289                           
   290                           ; 2 bytes @ 0x0
   291  0070                     	ds	1
   292  0071                     ??_GPIO_PinDirection:	
   293  0071                     ??_GPIO_PinWrite:	
   294                           ; 1 bytes @ 0x1
   295                           
   296                           
   297                           ; 1 bytes @ 0x1
   298  0071                     	ds	1
   299  0072                     ?_DELAY_ms:	
   300  0072                     ??_DELAY_us:	
   301                           ; 1 bytes @ 0x2
   302                           
   303  0072                     GPIO_PinRead@var_portNumber_u8:	
   304                           ; 1 bytes @ 0x2
   305                           
   306  0072                     DELAY_ms@ms_count:	
   307                           ; 1 bytes @ 0x2
   308                           
   309                           
   310                           ; 2 bytes @ 0x2
   311  0072                     	ds	1
   312  0073                     GPIO_PinDirection@var_portNumber_u8:	
   313  0073                     GPIO_PinWrite@var_portNumber_u8:	
   314                           ; 1 bytes @ 0x3
   315                           
   316  0073                     GPIO_PinRead@returnStatus:	
   317                           ; 1 bytes @ 0x3
   318                           
   319                           
   320                           ; 1 bytes @ 0x3
   321  0073                     	ds	1
   322  0074                     ??_DELAY_ms:	
   323  0074                     GPIO_PinDirection@enm_pinNumber:	
   324                           ; 1 bytes @ 0x4
   325                           
   326  0074                     GPIO_PinWrite@enm_pinNumber:	
   327                           ; 1 bytes @ 0x4
   328                           
   329  0074                     GPIO_PinRead@enm_pinNumber:	
   330                           ; 1 bytes @ 0x4
   331                           
   332                           
   333                           ; 1 bytes @ 0x4
   334  0074                     	ds	1
   335  0075                     ??_lcd_BusyCheck:	
   336  0075                     ??_lcd_SendLowerNibble:	
   337                           ; 1 bytes @ 0x5
   338                           
   339  0075                     ??_lcd_SendHigherNibble:	
   340                           ; 1 bytes @ 0x5
   341                           
   342  0075                     ??_lcd_SendCmdSignals:	
   343                           ; 1 bytes @ 0x5
   344                           
   345  0075                     ??_lcd_SendDataSignals:	
   346                           ; 1 bytes @ 0x5
   347                           
   348  0075                     ??_LCD_SetUp:	
   349                           ; 1 bytes @ 0x5
   350                           
   351                           
   352                           ; 1 bytes @ 0x5
   353  0075                     	ds	1
   354  0076                     LCD_SetUp@RS:	
   355  0076                     lcd_BusyCheck@busyflag:	
   356                           ; 1 bytes @ 0x6
   357                           
   358  0076                     lcd_SendHigherNibble@dataByte:	
   359                           ; 1 bytes @ 0x6
   360                           
   361  0076                     lcd_SendLowerNibble@dataByte:	
   362                           ; 1 bytes @ 0x6
   363                           
   364                           
   365                           ; 1 bytes @ 0x6
   366  0076                     	ds	1
   367  0077                     ??_LCD_CmdWrite:	
   368  0077                     ??_lcd_Reset:	
   369                           ; 1 bytes @ 0x7
   370                           
   371  0077                     ??_lcd_DataWrite:	
   372                           ; 1 bytes @ 0x7
   373                           
   374                           
   375                           ; 1 bytes @ 0x7
   376  0077                     	ds	2
   377  0079                     LCD_CmdWrite@v_lcdCmd_u8:	
   378  0079                     lcd_DataWrite@dataByte:	
   379                           ; 1 bytes @ 0x9
   380                           
   381                           
   382                           ; 1 bytes @ 0x9
   383  0079                     	ds	1
   384  007A                     ??_LCD_GoToLine:	
   385  007A                     ??_LCD_GoToNextLine:	
   386                           ; 1 bytes @ 0xA
   387                           
   388                           
   389                           ; 1 bytes @ 0xA
   390  007A                     	ds	1
   391  007B                     ??_LCD_DisplayChar:	
   392  007B                     LCD_GoToLine@v_lineNumber_u8:	
   393                           ; 1 bytes @ 0xB
   394                           
   395                           
   396                           ; 1 bytes @ 0xB
   397  007B                     	ds	1
   398  007C                     ??_LCD_Clear:	
   399  007C                     ?_LCD_Init:	
   400                           ; 1 bytes @ 0xC
   401                           
   402  007C                     LCD_Init@v_MaxCharsPerLine_u8:	
   403                           ; 1 bytes @ 0xC
   404                           
   405  007C                     LCD_DisplayChar@v_lcdData_u8:	
   406                           ; 1 bytes @ 0xC
   407                           
   408                           
   409                           ; 1 bytes @ 0xC
   410  007C                     	ds	1
   411  007D                     ??_LCD_Init:	
   412  007D                     ??_LCD_DisplayString:	
   413                           ; 1 bytes @ 0xD
   414                           
   415                           
   416                           ; 1 bytes @ 0xD
   417  007D                     	ds	1
   418                           
   419                           	psect	cstackBANK0
   420  0020                     __pcstackBANK0:	
   421  0020                     ?_LCD_SetUp:	
   422  0020                     LCD_SetUp@RW:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0020                     LCD_Init@v_lcdNoOfLines_u8:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0020                     LCD_DisplayString@ptr_stringPointer_u8:	
   429                           ; 1 bytes @ 0x0
   430                           
   431                           
   432                           ; 1 bytes @ 0x0
   433  0020                     	ds	1
   434  0021                     LCD_SetUp@EN:	
   435                           
   436                           ; 1 bytes @ 0x1
   437  0021                     	ds	1
   438  0022                     LCD_SetUp@D0:	
   439                           
   440                           ; 1 bytes @ 0x2
   441  0022                     	ds	1
   442  0023                     LCD_SetUp@D1:	
   443                           
   444                           ; 1 bytes @ 0x3
   445  0023                     	ds	1
   446  0024                     LCD_SetUp@D2:	
   447                           
   448                           ; 1 bytes @ 0x4
   449  0024                     	ds	1
   450  0025                     LCD_SetUp@D3:	
   451                           
   452                           ; 1 bytes @ 0x5
   453  0025                     	ds	1
   454  0026                     LCD_SetUp@D4:	
   455                           
   456                           ; 1 bytes @ 0x6
   457  0026                     	ds	1
   458  0027                     LCD_SetUp@D5:	
   459                           
   460                           ; 1 bytes @ 0x7
   461  0027                     	ds	1
   462  0028                     LCD_SetUp@D6:	
   463                           
   464                           ; 1 bytes @ 0x8
   465  0028                     	ds	1
   466  0029                     LCD_SetUp@D7:	
   467                           
   468                           ; 1 bytes @ 0x9
   469  0029                     	ds	1
   470  002A                     ??_main:	
   471                           
   472                           ; 1 bytes @ 0xA
   473  002A                     	ds	10
   474                           
   475                           	psect	maintext
   476  03F1                     __pmaintext:	
   477 ;;
   478 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   479 ;;
   480 ;; *************** function _main *****************
   481 ;; Defined at:
   482 ;;		line 42 in file "main.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  2  225[None  ] int 
   489 ;; Registers used:
   490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : B00/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   496 ;;      Params:         0       0       0       0       0
   497 ;;      Locals:         0       0       0       0       0
   498 ;;      Temps:          0      10       0       0       0
   499 ;;      Totals:         0      10       0       0       0
   500 ;;Total ram usage:       10 bytes
   501 ;; Hardware stack levels required when called:    7
   502 ;; This function calls:
   503 ;;		_LCD_DisplayString
   504 ;;		_LCD_Init
   505 ;;		_LCD_SetUp
   506 ;; This function is called by:
   507 ;;		Startup code after reset
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           
   512                           ;psect for function _main
   513  03F1                     _main:	
   514                           
   515                           ;main.c: 45: LCD_SetUp(PD_0,PD_1,PD_2,PB_0,PB_1,PB_2,PB_3,PB_4,PB_5,PB_6,PB_7);
   516                           
   517                           ;incstack = 0
   518                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   519  03F1  3019               	movlw	25
   520  03F2  1283               	bcf	3,5	;RP0=0, select bank0
   521  03F3  1303               	bcf	3,6	;RP1=0, select bank0
   522  03F4  00AA               	movwf	??_main
   523  03F5  082A               	movf	??_main,w
   524  03F6  00A0               	movwf	LCD_SetUp@RW
   525  03F7  301A               	movlw	26
   526  03F8  00AB               	movwf	??_main+1
   527  03F9  082B               	movf	??_main+1,w
   528  03FA  00A1               	movwf	LCD_SetUp@EN
   529  03FB  3008               	movlw	8
   530  03FC  00AC               	movwf	??_main+2
   531  03FD  082C               	movf	??_main+2,w
   532  03FE  00A2               	movwf	LCD_SetUp@D0
   533  03FF  3009               	movlw	9
   534  0400  00AD               	movwf	??_main+3
   535  0401  082D               	movf	??_main+3,w
   536  0402  00A3               	movwf	LCD_SetUp@D1
   537  0403  300A               	movlw	10
   538  0404  00AE               	movwf	??_main+4
   539  0405  082E               	movf	??_main+4,w
   540  0406  00A4               	movwf	LCD_SetUp@D2
   541  0407  300B               	movlw	11
   542  0408  00AF               	movwf	??_main+5
   543  0409  082F               	movf	??_main+5,w
   544  040A  00A5               	movwf	LCD_SetUp@D3
   545  040B  300C               	movlw	12
   546  040C  00B0               	movwf	??_main+6
   547  040D  0830               	movf	??_main+6,w
   548  040E  00A6               	movwf	LCD_SetUp@D4
   549  040F  300D               	movlw	13
   550  0410  00B1               	movwf	??_main+7
   551  0411  0831               	movf	??_main+7,w
   552  0412  00A7               	movwf	LCD_SetUp@D5
   553  0413  300E               	movlw	14
   554  0414  00B2               	movwf	??_main+8
   555  0415  0832               	movf	??_main+8,w
   556  0416  00A8               	movwf	LCD_SetUp@D6
   557  0417  300F               	movlw	15
   558  0418  00B3               	movwf	??_main+9
   559  0419  0833               	movf	??_main+9,w
   560  041A  00A9               	movwf	LCD_SetUp@D7
   561  041B  3018               	movlw	24
   562  041C  120A  118A  258A  120A  118A  	fcall	_LCD_SetUp
   563                           
   564                           ;main.c: 46: LCD_Init(2,16);
   565  0421  3010               	movlw	16
   566  0422  1283               	bcf	3,5	;RP0=0, select bank0
   567  0423  1303               	bcf	3,6	;RP1=0, select bank0
   568  0424  00AA               	movwf	??_main
   569  0425  082A               	movf	??_main,w
   570  0426  00FC               	movwf	LCD_Init@v_MaxCharsPerLine_u8
   571  0427  3002               	movlw	2
   572  0428  120A  118A  23AA  120A  118A  	fcall	_LCD_Init
   573                           
   574                           ;main.c: 48: LCD_DisplayString("Explore Embedded");
   575  042D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   576  042E  120A  118A  2245  120A  118A  	fcall	_LCD_DisplayString
   577                           
   578                           ;main.c: 49: LCD_DisplayString("Lcd 8-bit Mode");
   579  0433  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   580  0434  120A  118A  2245  120A  118A  	fcall	_LCD_DisplayString
   581  0439                     l226:	
   582                           ;main.c: 50: while(1);
   583                           
   584  0439  2C39               	goto	l226
   585  043A                     __end_of_main:	
   586                           ;main.c: 52: return (0);
   587                           ;	Return value of _main is never used
   588                           
   589                           
   590                           	psect	text1
   591  058A                     __ptext1:	
   592 ;; *************** function _LCD_SetUp *****************
   593 ;; Defined at:
   594 ;;		line 135 in file "../00-libfiles/lcd.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  RS              1    wreg     enum E33
   597 ;;  RW              1    0[BANK0 ] enum E33
   598 ;;  EN              1    1[BANK0 ] enum E33
   599 ;;  D0              1    2[BANK0 ] enum E33
   600 ;;  D1              1    3[BANK0 ] enum E33
   601 ;;  D2              1    4[BANK0 ] enum E33
   602 ;;  D3              1    5[BANK0 ] enum E33
   603 ;;  D4              1    6[BANK0 ] enum E33
   604 ;;  D5              1    7[BANK0 ] enum E33
   605 ;;  D6              1    8[BANK0 ] enum E33
   606 ;;  D7              1    9[BANK0 ] enum E33
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  RS              1    6[COMMON] enum E33
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   618 ;;      Params:         0      10       0       0       0
   619 ;;      Locals:         1       0       0       0       0
   620 ;;      Temps:          1       0       0       0       0
   621 ;;      Totals:         2      10       0       0       0
   622 ;;Total ram usage:       12 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; Hardware stack levels required when called:    1
   625 ;; This function calls:
   626 ;;		_GPIO_PinDirection
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           
   633                           ;psect for function _LCD_SetUp
   634  058A                     _LCD_SetUp:	
   635                           
   636                           ;incstack = 0
   637                           ; Regs used in _LCD_SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   638                           ;LCD_SetUp@RS stored from wreg
   639  058A  00F6               	movwf	LCD_SetUp@RS
   640                           
   641                           ;lcd.c: 148: LCDConfig.RS = RS;
   642  058B  0876               	movf	LCD_SetUp@RS,w
   643  058C  00F5               	movwf	??_LCD_SetUp
   644  058D  0875               	movf	??_LCD_SetUp,w
   645  058E  1283               	bcf	3,5	;RP0=0, select bank0
   646  058F  1303               	bcf	3,6	;RP1=0, select bank0
   647  0590  00B7               	movwf	_LCDConfig+3
   648                           
   649                           ;lcd.c: 149: LCDConfig.RW = RW;
   650  0591  0820               	movf	LCD_SetUp@RW,w
   651  0592  00F5               	movwf	??_LCD_SetUp
   652  0593  0875               	movf	??_LCD_SetUp,w
   653  0594  00B8               	movwf	_LCDConfig+4
   654                           
   655                           ;lcd.c: 150: LCDConfig.EN = EN;
   656  0595  0821               	movf	LCD_SetUp@EN,w
   657  0596  00F5               	movwf	??_LCD_SetUp
   658  0597  0875               	movf	??_LCD_SetUp,w
   659  0598  00B9               	movwf	_LCDConfig+5
   660                           
   661                           ;lcd.c: 152: LCDConfig.D0 = D0;
   662  0599  0822               	movf	LCD_SetUp@D0,w
   663  059A  00F5               	movwf	??_LCD_SetUp
   664  059B  0875               	movf	??_LCD_SetUp,w
   665  059C  00BA               	movwf	_LCDConfig+6
   666                           
   667                           ;lcd.c: 153: LCDConfig.D1 = D1;
   668  059D  0823               	movf	LCD_SetUp@D1,w
   669  059E  00F5               	movwf	??_LCD_SetUp
   670  059F  0875               	movf	??_LCD_SetUp,w
   671  05A0  00BB               	movwf	_LCDConfig+7
   672                           
   673                           ;lcd.c: 154: LCDConfig.D2 = D2;
   674  05A1  0824               	movf	LCD_SetUp@D2,w
   675  05A2  00F5               	movwf	??_LCD_SetUp
   676  05A3  0875               	movf	??_LCD_SetUp,w
   677  05A4  00BC               	movwf	_LCDConfig+8
   678                           
   679                           ;lcd.c: 155: LCDConfig.D3 = D3;
   680  05A5  0825               	movf	LCD_SetUp@D3,w
   681  05A6  00F5               	movwf	??_LCD_SetUp
   682  05A7  0875               	movf	??_LCD_SetUp,w
   683  05A8  00BD               	movwf	_LCDConfig+9
   684                           
   685                           ;lcd.c: 156: LCDConfig.D4 = D4;
   686  05A9  0826               	movf	LCD_SetUp@D4,w
   687  05AA  00F5               	movwf	??_LCD_SetUp
   688  05AB  0875               	movf	??_LCD_SetUp,w
   689  05AC  00BE               	movwf	_LCDConfig+10
   690                           
   691                           ;lcd.c: 157: LCDConfig.D5 = D5;
   692  05AD  0827               	movf	LCD_SetUp@D5,w
   693  05AE  00F5               	movwf	??_LCD_SetUp
   694  05AF  0875               	movf	??_LCD_SetUp,w
   695  05B0  00BF               	movwf	_LCDConfig+11
   696                           
   697                           ;lcd.c: 158: LCDConfig.D6 = D6;
   698  05B1  0828               	movf	LCD_SetUp@D6,w
   699  05B2  00F5               	movwf	??_LCD_SetUp
   700  05B3  0875               	movf	??_LCD_SetUp,w
   701  05B4  00C0               	movwf	_LCDConfig+12
   702                           
   703                           ;lcd.c: 159: LCDConfig.D7 = D7;
   704  05B5  0829               	movf	LCD_SetUp@D7,w
   705  05B6  00F5               	movwf	??_LCD_SetUp
   706  05B7  0875               	movf	??_LCD_SetUp,w
   707  05B8  00C1               	movwf	_LCDConfig+13
   708                           
   709                           ;lcd.c: 162: if((D0 == P_NC) || (D1 == P_NC) || (D2 == P_NC) || (D3 == P_NC))
   710  05B9  0A22               	incf	LCD_SetUp@D0,w
   711  05BA  1903               	btfsc	3,2
   712  05BB  2DC4               	goto	l1231
   713  05BC  0A23               	incf	LCD_SetUp@D1,w
   714  05BD  1903               	btfsc	3,2
   715  05BE  2DC4               	goto	l1231
   716  05BF  0A24               	incf	LCD_SetUp@D2,w
   717  05C0  1D03               	btfss	3,2
   718  05C1  0A25               	incf	LCD_SetUp@D3,w
   719  05C2  1D03               	btfss	3,2
   720  05C3  2DC9               	goto	l1233
   721  05C4                     l1231:	
   722                           
   723                           ;lcd.c: 163: {
   724                           ;lcd.c: 164: LCDConfig.v_LcdMode_U8 = 4;
   725  05C4  3004               	movlw	4
   726  05C5  00F5               	movwf	??_LCD_SetUp
   727  05C6  0875               	movf	??_LCD_SetUp,w
   728  05C7  00B6               	movwf	_LCDConfig+2
   729                           
   730                           ;lcd.c: 165: }
   731  05C8  2DEF               	goto	l1243
   732  05C9                     l1233:	
   733                           
   734                           ;lcd.c: 166: else
   735                           ;lcd.c: 167: {
   736                           ;lcd.c: 168: LCDConfig.v_LcdMode_U8 = 8;
   737  05C9  3008               	movlw	8
   738  05CA  00F5               	movwf	??_LCD_SetUp
   739  05CB  0875               	movf	??_LCD_SetUp,w
   740  05CC  00B6               	movwf	_LCDConfig+2
   741                           
   742                           ;lcd.c: 169: GPIO_PinDirection(D0,0x00u);
   743  05CD  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   744  05CE  0822               	movf	LCD_SetUp@D0,w
   745  05CF  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   746                           
   747                           ;lcd.c: 170: GPIO_PinDirection(D1,0x00u);
   748  05D4  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   749  05D5  1283               	bcf	3,5	;RP0=0, select bank0
   750  05D6  1303               	bcf	3,6	;RP1=0, select bank0
   751  05D7  0823               	movf	LCD_SetUp@D1,w
   752  05D8  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   753                           
   754                           ;lcd.c: 171: GPIO_PinDirection(D2,0x00u);
   755  05DD  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   756  05DE  1283               	bcf	3,5	;RP0=0, select bank0
   757  05DF  1303               	bcf	3,6	;RP1=0, select bank0
   758  05E0  0824               	movf	LCD_SetUp@D2,w
   759  05E1  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   760                           
   761                           ;lcd.c: 172: GPIO_PinDirection(D3,0x00u);
   762  05E6  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   763  05E7  1283               	bcf	3,5	;RP0=0, select bank0
   764  05E8  1303               	bcf	3,6	;RP1=0, select bank0
   765  05E9  0825               	movf	LCD_SetUp@D3,w
   766  05EA  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   767  05EF                     l1243:	
   768                           
   769                           ;lcd.c: 173: }
   770                           ;lcd.c: 176: GPIO_PinDirection(RS,0x00u);
   771  05EF  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   772  05F0  0876               	movf	LCD_SetUp@RS,w
   773  05F1  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   774                           
   775                           ;lcd.c: 177: GPIO_PinDirection(RW,0x00u);
   776  05F6  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   777  05F7  1283               	bcf	3,5	;RP0=0, select bank0
   778  05F8  1303               	bcf	3,6	;RP1=0, select bank0
   779  05F9  0820               	movf	LCD_SetUp@RW,w
   780  05FA  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   781                           
   782                           ;lcd.c: 178: GPIO_PinDirection(EN,0x00u);
   783  05FF  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   784  0600  1283               	bcf	3,5	;RP0=0, select bank0
   785  0601  1303               	bcf	3,6	;RP1=0, select bank0
   786  0602  0821               	movf	LCD_SetUp@EN,w
   787  0603  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   788                           
   789                           ;lcd.c: 180: GPIO_PinDirection(D4,0x00u);
   790  0608  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   791  0609  1283               	bcf	3,5	;RP0=0, select bank0
   792  060A  1303               	bcf	3,6	;RP1=0, select bank0
   793  060B  0826               	movf	LCD_SetUp@D4,w
   794  060C  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   795                           
   796                           ;lcd.c: 181: GPIO_PinDirection(D5,0x00u);
   797  0611  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   798  0612  1283               	bcf	3,5	;RP0=0, select bank0
   799  0613  1303               	bcf	3,6	;RP1=0, select bank0
   800  0614  0827               	movf	LCD_SetUp@D5,w
   801  0615  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   802                           
   803                           ;lcd.c: 182: GPIO_PinDirection(D6,0x00u);
   804  061A  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   805  061B  1283               	bcf	3,5	;RP0=0, select bank0
   806  061C  1303               	bcf	3,6	;RP1=0, select bank0
   807  061D  0828               	movf	LCD_SetUp@D6,w
   808  061E  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   809                           
   810                           ;lcd.c: 183: GPIO_PinDirection(D7,0x00u);
   811  0623  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   812  0624  1283               	bcf	3,5	;RP0=0, select bank0
   813  0625  1303               	bcf	3,6	;RP1=0, select bank0
   814  0626  0829               	movf	LCD_SetUp@D7,w
   815  0627  120A  118A  262B   	fcall	_GPIO_PinDirection
   816  062A  0008               	return
   817  062B                     __end_of_LCD_SetUp:	
   818                           
   819                           	psect	text2
   820  03AA                     __ptext2:	
   821 ;; *************** function _LCD_Init *****************
   822 ;; Defined at:
   823 ;;		line 198 in file "../00-libfiles/lcd.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;  v_lcdNoOfLin    1    wreg     unsigned char 
   826 ;;  v_MaxCharsPe    1   12[COMMON] unsigned char 
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  v_lcdNoOfLin    1    0[BANK0 ] unsigned char 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   838 ;;      Params:         1       0       0       0       0
   839 ;;      Locals:         0       1       0       0       0
   840 ;;      Temps:          1       0       0       0       0
   841 ;;      Totals:         2       1       0       0       0
   842 ;;Total ram usage:        3 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:    6
   845 ;; This function calls:
   846 ;;		_DELAY_ms
   847 ;;		_LCD_Clear
   848 ;;		_LCD_CmdWrite
   849 ;;		_lcd_Reset
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           
   856                           ;psect for function _LCD_Init
   857  03AA                     _LCD_Init:	
   858                           
   859                           ;incstack = 0
   860                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   861                           ;LCD_Init@v_lcdNoOfLines_u8 stored from wreg
   862  03AA  1283               	bcf	3,5	;RP0=0, select bank0
   863  03AB  1303               	bcf	3,6	;RP1=0, select bank0
   864  03AC  00A0               	movwf	LCD_Init@v_lcdNoOfLines_u8
   865                           
   866                           ;lcd.c: 202: LCDConfig.v_MaxSupportedChars_U8 = v_MaxCharsPerLine_u8;
   867  03AD  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
   868  03AE  00FD               	movwf	??_LCD_Init
   869  03AF  087D               	movf	??_LCD_Init,w
   870  03B0  00B5               	movwf	_LCDConfig+1
   871                           
   872                           ;lcd.c: 203: LCDConfig.v_MaxSupportedLines_U8 = v_lcdNoOfLines_u8;
   873  03B1  0820               	movf	LCD_Init@v_lcdNoOfLines_u8,w
   874  03B2  00FD               	movwf	??_LCD_Init
   875  03B3  087D               	movf	??_LCD_Init,w
   876  03B4  00B4               	movwf	_LCDConfig
   877                           
   878                           ;lcd.c: 204: if(v_lcdNoOfLines_u8 > 0x02)
   879  03B5  3003               	movlw	3
   880  03B6  0220               	subwf	LCD_Init@v_lcdNoOfLines_u8,w
   881  03B7  1C03               	skipc
   882  03B8  2BC5               	goto	l1261
   883                           
   884                           ;lcd.c: 205: {
   885                           ;lcd.c: 206: ARR_LcdLineNumAddress_U8[0x02] = 0x90 + (v_MaxCharsPerLine_u8 & 0x0fu);
   886  03B9  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
   887  03BA  390F               	andlw	15
   888  03BB  3E90               	addlw	144
   889  03BC  00FD               	movwf	??_LCD_Init
   890  03BD  087D               	movf	??_LCD_Init,w
   891  03BE  00C6               	movwf	_ARR_LcdLineNumAddress_U8+2
   892                           
   893                           ;lcd.c: 207: ARR_LcdLineNumAddress_U8[0x03] = 0xd0 + (v_MaxCharsPerLine_u8 & 0x0fu);
   894  03BF  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
   895  03C0  390F               	andlw	15
   896  03C1  3ED0               	addlw	208
   897  03C2  00FD               	movwf	??_LCD_Init
   898  03C3  087D               	movf	??_LCD_Init,w
   899  03C4  00C7               	movwf	_ARR_LcdLineNumAddress_U8+3
   900  03C5                     l1261:	
   901                           
   902                           ;lcd.c: 208: }
   903                           ;lcd.c: 210: DELAY_ms(100);
   904  03C5  3064               	movlw	100
   905  03C6  00F2               	movwf	DELAY_ms@ms_count
   906  03C7  3000               	movlw	0
   907  03C8  00F3               	movwf	DELAY_ms@ms_count+1
   908  03C9  120A  118A  21E9  120A  118A  	fcall	_DELAY_ms
   909                           
   910                           ;lcd.c: 212: if(LCDConfig.v_LcdMode_U8 == 8u)
   911  03CE  3008               	movlw	8
   912  03CF  1283               	bcf	3,5	;RP0=0, select bank0
   913  03D0  1303               	bcf	3,6	;RP1=0, select bank0
   914  03D1  0636               	xorwf	_LCDConfig+2,w
   915  03D2  1D03               	btfss	3,2
   916  03D3  2BD6               	goto	l1267
   917                           
   918                           ;lcd.c: 213: {
   919                           ;lcd.c: 214: LCD_CmdWrite(0x38u);
   920  03D4  3038               	movlw	56
   921  03D5  2BE2               	goto	L1
   922  03D6                     l1267:	
   923                           ;lcd.c: 215: }
   924                           
   925                           
   926                           ;lcd.c: 216: else if(LCDConfig.v_LcdMode_U8 == 4u)
   927  03D6  3004               	movlw	4
   928  03D7  1283               	bcf	3,5	;RP0=0, select bank0
   929  03D8  1303               	bcf	3,6	;RP1=0, select bank0
   930  03D9  0636               	xorwf	_LCDConfig+2,w
   931  03DA  1D03               	btfss	3,2
   932  03DB  2BE7               	goto	l140
   933                           
   934                           ;lcd.c: 217: {
   935                           ;lcd.c: 218: lcd_Reset();
   936  03DC  120A  118A  243A  120A  118A  	fcall	_lcd_Reset
   937                           
   938                           ;lcd.c: 219: LCD_CmdWrite(0x28u);
   939  03E1  3028               	movlw	40
   940  03E2                     L1:	
   941  03E2  120A  118A  22C0  120A  118A  	fcall	_LCD_CmdWrite
   942  03E7                     l140:	
   943                           
   944                           ;lcd.c: 220: }
   945                           ;lcd.c: 222: LCD_CmdWrite(0x0Eu);
   946  03E7  300E               	movlw	14
   947  03E8  120A  118A  22C0  120A  118A  	fcall	_LCD_CmdWrite
   948                           
   949                           ;lcd.c: 223: LCD_Clear();
   950  03ED  120A  118A  21DE   	fcall	_LCD_Clear
   951  03F0  0008               	return
   952  03F1                     __end_of_LCD_Init:	
   953                           
   954                           	psect	text3
   955  043A                     __ptext3:	
   956 ;; *************** function _lcd_Reset *****************
   957 ;; Defined at:
   958 ;;		line 913 in file "../00-libfiles/lcd.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;		None
   961 ;; Auto vars:     Size  Location     Type
   962 ;;		None
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   972 ;;      Params:         0       0       0       0       0
   973 ;;      Locals:         0       0       0       0       0
   974 ;;      Temps:          0       0       0       0       0
   975 ;;      Totals:         0       0       0       0       0
   976 ;;Total ram usage:        0 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; Hardware stack levels required when called:    2
   979 ;; This function calls:
   980 ;;		_DELAY_ms
   981 ;;		_DELAY_us
   982 ;;		_lcd_SendCmdSignals
   983 ;;		_lcd_SendHigherNibble
   984 ;; This function is called by:
   985 ;;		_LCD_Init
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           
   990                           ;psect for function _lcd_Reset
   991  043A                     _lcd_Reset:	
   992                           
   993                           ;lcd.c: 916: lcd_SendHigherNibble(0x30);
   994                           
   995                           ;incstack = 0
   996                           ; Regs used in _lcd_Reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   997  043A  3030               	movlw	48
   998  043B  120A  118A  232A  120A  118A  	fcall	_lcd_SendHigherNibble
   999                           
  1000                           ;lcd.c: 917: lcd_SendCmdSignals();
  1001  0440  120A  118A  2265  120A  118A  	fcall	_lcd_SendCmdSignals
  1002                           
  1003                           ;lcd.c: 918: DELAY_ms(100);
  1004  0445  3064               	movlw	100
  1005  0446  00F2               	movwf	DELAY_ms@ms_count
  1006  0447  3000               	movlw	0
  1007  0448  00F3               	movwf	DELAY_ms@ms_count+1
  1008  0449  120A  118A  21E9  120A  118A  	fcall	_DELAY_ms
  1009                           
  1010                           ;lcd.c: 919: lcd_SendHigherNibble(0x30);
  1011  044E  3030               	movlw	48
  1012  044F  120A  118A  232A  120A  118A  	fcall	_lcd_SendHigherNibble
  1013                           
  1014                           ;lcd.c: 920: lcd_SendCmdSignals();
  1015  0454  120A  118A  2265  120A  118A  	fcall	_lcd_SendCmdSignals
  1016                           
  1017                           ;lcd.c: 921: DELAY_us(200);
  1018  0459  30C8               	movlw	200
  1019  045A  00F0               	movwf	DELAY_us@us_count
  1020  045B  3000               	movlw	0
  1021  045C  00F1               	movwf	DELAY_us@us_count+1
  1022  045D  120A  118A  21D3  120A  118A  	fcall	_DELAY_us
  1023                           
  1024                           ;lcd.c: 922: lcd_SendHigherNibble(0x30);
  1025  0462  3030               	movlw	48
  1026  0463  120A  118A  232A  120A  118A  	fcall	_lcd_SendHigherNibble
  1027                           
  1028                           ;lcd.c: 923: lcd_SendCmdSignals();
  1029  0468  120A  118A  2265  120A  118A  	fcall	_lcd_SendCmdSignals
  1030                           
  1031                           ;lcd.c: 924: DELAY_us(200);
  1032  046D  30C8               	movlw	200
  1033  046E  00F0               	movwf	DELAY_us@us_count
  1034  046F  3000               	movlw	0
  1035  0470  00F1               	movwf	DELAY_us@us_count+1
  1036  0471  120A  118A  21D3  120A  118A  	fcall	_DELAY_us
  1037                           
  1038                           ;lcd.c: 925: lcd_SendHigherNibble(0x20);
  1039  0476  3020               	movlw	32
  1040  0477  120A  118A  232A  120A  118A  	fcall	_lcd_SendHigherNibble
  1041                           
  1042                           ;lcd.c: 926: lcd_SendCmdSignals();
  1043  047C  120A  118A  2265  120A  118A  	fcall	_lcd_SendCmdSignals
  1044                           
  1045                           ;lcd.c: 927: DELAY_us(200);
  1046  0481  30C8               	movlw	200
  1047  0482  00F0               	movwf	DELAY_us@us_count
  1048  0483  3000               	movlw	0
  1049  0484  00F1               	movwf	DELAY_us@us_count+1
  1050  0485  120A  118A  21D3   	fcall	_DELAY_us
  1051  0488  0008               	return
  1052  0489                     __end_of_lcd_Reset:	
  1053                           
  1054                           	psect	text4
  1055  01DE                     __ptext4:	
  1056 ;; *************** function _LCD_Clear *****************
  1057 ;; Defined at:
  1058 ;;		line 237 in file "../00-libfiles/lcd.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1072 ;;      Params:         0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0
  1075 ;;      Totals:         0       0       0       0       0
  1076 ;;Total ram usage:        0 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:    5
  1079 ;; This function calls:
  1080 ;;		_LCD_CmdWrite
  1081 ;;		_LCD_GoToLine
  1082 ;; This function is called by:
  1083 ;;		_LCD_Init
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           
  1088                           ;psect for function _LCD_Clear
  1089  01DE                     _LCD_Clear:	
  1090                           
  1091                           ;lcd.c: 239: LCD_CmdWrite(0x01u);
  1092                           
  1093                           ;incstack = 0
  1094                           ; Regs used in _LCD_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1095  01DE  3001               	movlw	1
  1096  01DF  120A  118A  22C0  120A  118A  	fcall	_LCD_CmdWrite
  1097                           
  1098                           ;lcd.c: 240: LCD_GoToLine(0x00);
  1099  01E4  3000               	movlw	0
  1100  01E5  120A  118A  2211   	fcall	_LCD_GoToLine
  1101  01E8  0008               	return
  1102  01E9                     __end_of_LCD_Clear:	
  1103                           
  1104                           	psect	text5
  1105  0211                     __ptext5:	
  1106 ;; *************** function _LCD_GoToLine *****************
  1107 ;; Defined at:
  1108 ;;		line 265 in file "../00-libfiles/lcd.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;  v_lineNumber    1    wreg     unsigned char 
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  v_lineNumber    1   11[COMMON] unsigned char 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1122 ;;      Params:         0       0       0       0       0
  1123 ;;      Locals:         1       0       0       0       0
  1124 ;;      Temps:          1       0       0       0       0
  1125 ;;      Totals:         2       0       0       0       0
  1126 ;;Total ram usage:        2 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; Hardware stack levels required when called:    4
  1129 ;; This function calls:
  1130 ;;		_LCD_CmdWrite
  1131 ;; This function is called by:
  1132 ;;		_LCD_Clear
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           
  1137                           ;psect for function _LCD_GoToLine
  1138  0211                     _LCD_GoToLine:	
  1139                           
  1140                           ;incstack = 0
  1141                           ; Regs used in _LCD_GoToLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1142                           ;LCD_GoToLine@v_lineNumber_u8 stored from wreg
  1143  0211  00FB               	movwf	LCD_GoToLine@v_lineNumber_u8
  1144                           
  1145                           ;lcd.c: 267: if(v_lineNumber_u8 < LCDConfig.v_MaxSupportedLines_U8)
  1146  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1147  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1148  0214  0834               	movf	_LCDConfig,w
  1149  0215  027B               	subwf	LCD_GoToLine@v_lineNumber_u8,w
  1150  0216  1803               	skipnc
  1151  0217  0008               	return
  1152                           
  1153                           ;lcd.c: 268: {
  1154                           ;lcd.c: 271: v_LcdTrackCursorPos_U8 = 0x00;
  1155  0218  01C2               	clrf	_v_LcdTrackCursorPos_U8
  1156                           
  1157                           ;lcd.c: 272: v_LcdTrackLineNum_U8 = v_lineNumber_u8;
  1158  0219  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  1159  021A  00FA               	movwf	??_LCD_GoToLine
  1160  021B  087A               	movf	??_LCD_GoToLine,w
  1161  021C  00C3               	movwf	_v_LcdTrackLineNum_U8
  1162                           
  1163                           ;lcd.c: 273: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_lineNumber_u8]);
  1164  021D  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  1165  021E  3E44               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  1166  021F  0084               	movwf	4
  1167  0220  1383               	bcf	3,7	;select IRP bank0
  1168  0221  0800               	movf	0,w
  1169  0222  120A  118A  22C0   	fcall	_LCD_CmdWrite
  1170  0225  0008               	return
  1171  0226                     __end_of_LCD_GoToLine:	
  1172                           
  1173                           	psect	text6
  1174  0245                     __ptext6:	
  1175 ;; *************** function _LCD_DisplayString *****************
  1176 ;; Defined at:
  1177 ;;		line 427 in file "../00-libfiles/lcd.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  ptr_stringPo    1    wreg     PTR const unsigned char 
  1180 ;;		 -> STR_2(15), STR_1(17), 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  ptr_stringPo    1    0[BANK0 ] PTR const unsigned char 
  1183 ;;		 -> STR_2(15), STR_1(17), 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1193 ;;      Params:         0       0       0       0       0
  1194 ;;      Locals:         0       1       0       0       0
  1195 ;;      Temps:          1       0       0       0       0
  1196 ;;      Totals:         1       1       0       0       0
  1197 ;;Total ram usage:        2 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    6
  1200 ;; This function calls:
  1201 ;;		_LCD_DisplayChar
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           
  1208                           ;psect for function _LCD_DisplayString
  1209  0245                     _LCD_DisplayString:	
  1210                           
  1211                           ;incstack = 0
  1212                           ; Regs used in _LCD_DisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1213                           ;LCD_DisplayString@ptr_stringPointer_u8 stored from wreg
  1214  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1215  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1216  0247  00A0               	movwf	LCD_DisplayString@ptr_stringPointer_u8
  1217  0248                     l1277:	
  1218                           ;lcd.c: 429: while((*ptr_stringPointer_u8)!=0)
  1219                           
  1220  0248  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  1221  0249  0084               	movwf	4
  1222  024A  120A  118A  2003  120A  118A  	fcall	stringdir
  1223  024F  3A00               	xorlw	0
  1224  0250  1903               	btfsc	3,2
  1225  0251  0008               	return
  1226                           
  1227                           ;lcd.c: 430: LCD_DisplayChar(*ptr_stringPointer_u8++);
  1228  0252  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  1229  0253  0084               	movwf	4
  1230  0254  120A  118A  2003  120A  118A  	fcall	stringdir
  1231  0259  120A  118A  2226  120A  118A  	fcall	_LCD_DisplayChar
  1232  025E  3001               	movlw	1
  1233  025F  00FD               	movwf	??_LCD_DisplayString
  1234  0260  087D               	movf	??_LCD_DisplayString,w
  1235  0261  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0262  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0263  07A0               	addwf	LCD_DisplayString@ptr_stringPointer_u8,f
  1238  0264  2A48               	goto	l1277
  1239  0265                     __end_of_LCD_DisplayString:	
  1240                           
  1241                           	psect	text7
  1242  0226                     __ptext7:	
  1243 ;; *************** function _LCD_DisplayChar *****************
  1244 ;; Defined at:
  1245 ;;		line 392 in file "../00-libfiles/lcd.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;  v_lcdData_u8    1    wreg     unsigned char 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  v_lcdData_u8    1   12[COMMON] unsigned char 
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      void 
  1252 ;; Registers used:
  1253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1259 ;;      Params:         0       0       0       0       0
  1260 ;;      Locals:         1       0       0       0       0
  1261 ;;      Temps:          1       0       0       0       0
  1262 ;;      Totals:         2       0       0       0       0
  1263 ;;Total ram usage:        2 bytes
  1264 ;; Hardware stack levels used:    1
  1265 ;; Hardware stack levels required when called:    5
  1266 ;; This function calls:
  1267 ;;		_LCD_GoToNextLine
  1268 ;;		_lcd_DataWrite
  1269 ;; This function is called by:
  1270 ;;		_LCD_DisplayString
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           
  1275                           ;psect for function _LCD_DisplayChar
  1276  0226                     _LCD_DisplayChar:	
  1277                           
  1278                           ;incstack = 0
  1279                           ; Regs used in _LCD_DisplayChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1280                           ;LCD_DisplayChar@v_lcdData_u8 stored from wreg
  1281  0226  00FC               	movwf	LCD_DisplayChar@v_lcdData_u8
  1282                           
  1283                           ;lcd.c: 394: if((v_LcdTrackCursorPos_U8>=LCDConfig.v_MaxSupportedChars_U8) || (v_lcdData
      +                          _u8=='\n'))
  1284  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0228  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0229  0835               	movf	_LCDConfig+1,w
  1287  022A  0242               	subwf	_v_LcdTrackCursorPos_U8,w
  1288  022B  1803               	skipnc
  1289  022C  2A31               	goto	l1213
  1290  022D  300A               	movlw	10
  1291  022E  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  1292  022F  1D03               	btfss	3,2
  1293  0230  2A36               	goto	l1215
  1294  0231                     l1213:	
  1295                           
  1296                           ;lcd.c: 395: {
  1297                           ;lcd.c: 398: LCD_GoToNextLine();
  1298  0231  120A  118A  21FD  120A  118A  	fcall	_LCD_GoToNextLine
  1299  0236                     l1215:	
  1300                           
  1301                           ;lcd.c: 399: }
  1302                           ;lcd.c: 400: if(v_lcdData_u8!='\n')
  1303  0236  300A               	movlw	10
  1304  0237  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  1305  0238  1903               	btfsc	3,2
  1306  0239  0008               	return
  1307                           
  1308                           ;lcd.c: 401: {
  1309                           ;lcd.c: 403: lcd_DataWrite(v_lcdData_u8);
  1310  023A  087C               	movf	LCD_DisplayChar@v_lcdData_u8,w
  1311  023B  120A  118A  22F5   	fcall	_lcd_DataWrite
  1312                           
  1313                           ;lcd.c: 404: v_LcdTrackCursorPos_U8++;
  1314  023E  3001               	movlw	1
  1315  023F  00FB               	movwf	??_LCD_DisplayChar
  1316  0240  087B               	movf	??_LCD_DisplayChar,w
  1317  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1318  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1319  0243  07C2               	addwf	_v_LcdTrackCursorPos_U8,f
  1320  0244  0008               	return
  1321  0245                     __end_of_LCD_DisplayChar:	
  1322                           
  1323                           	psect	text8
  1324  02F5                     __ptext8:	
  1325 ;; *************** function _lcd_DataWrite *****************
  1326 ;; Defined at:
  1327 ;;		line 826 in file "../00-libfiles/lcd.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  dataByte        1    wreg     unsigned char 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  dataByte        1    9[COMMON] unsigned char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1341 ;;      Params:         0       0       0       0       0
  1342 ;;      Locals:         1       0       0       0       0
  1343 ;;      Temps:          2       0       0       0       0
  1344 ;;      Totals:         3       0       0       0       0
  1345 ;;Total ram usage:        3 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    3
  1348 ;; This function calls:
  1349 ;;		_lcd_BusyCheck
  1350 ;;		_lcd_SendDataSignals
  1351 ;;		_lcd_SendHigherNibble
  1352 ;;		_lcd_SendLowerNibble
  1353 ;; This function is called by:
  1354 ;;		_LCD_DisplayChar
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           
  1359                           ;psect for function _lcd_DataWrite
  1360  02F5                     _lcd_DataWrite:	
  1361                           
  1362                           ;incstack = 0
  1363                           ; Regs used in _lcd_DataWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1364                           ;lcd_DataWrite@dataByte stored from wreg
  1365  02F5  00F9               	movwf	lcd_DataWrite@dataByte
  1366                           
  1367                           ;lcd.c: 828: lcd_BusyCheck();
  1368  02F6  120A  118A  24FE  120A  118A  	fcall	_lcd_BusyCheck
  1369                           
  1370                           ;lcd.c: 829: if(LCDConfig.v_LcdMode_U8 == 8u)
  1371  02FB  3008               	movlw	8
  1372  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1373  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1374  02FE  0636               	xorwf	_LCDConfig+2,w
  1375  02FF  1D03               	btfss	3,2
  1376  0300  2B08               	goto	l1181
  1377                           
  1378                           ;lcd.c: 830: {
  1379                           ;lcd.c: 831: lcd_SendLowerNibble(dataByte);
  1380  0301  0879               	movf	lcd_DataWrite@dataByte,w
  1381  0302  120A  118A  236A  120A  118A  	fcall	_lcd_SendLowerNibble
  1382                           
  1383                           ;lcd.c: 832: }
  1384  0307  2B20               	goto	l1185
  1385  0308                     l1181:	
  1386                           
  1387                           ;lcd.c: 833: else
  1388                           ;lcd.c: 834: {
  1389                           ;lcd.c: 835: lcd_SendHigherNibble(dataByte);
  1390  0308  0879               	movf	lcd_DataWrite@dataByte,w
  1391  0309  120A  118A  232A  120A  118A  	fcall	_lcd_SendHigherNibble
  1392                           
  1393                           ;lcd.c: 836: lcd_SendDataSignals();
  1394  030E  120A  118A  2292  120A  118A  	fcall	_lcd_SendDataSignals
  1395                           
  1396                           ;lcd.c: 837: dataByte = dataByte << 4;
  1397  0313  0879               	movf	lcd_DataWrite@dataByte,w
  1398  0314  00F7               	movwf	??_lcd_DataWrite
  1399  0315  3003               	movlw	3
  1400  0316                     u1625:	
  1401  0316  1003               	clrc
  1402  0317  0DF7               	rlf	??_lcd_DataWrite,f
  1403  0318  3EFF               	addlw	-1
  1404  0319  1D03               	skipz
  1405  031A  2B16               	goto	u1625
  1406  031B  1003               	clrc
  1407  031C  0D77               	rlf	??_lcd_DataWrite,w
  1408  031D  00F8               	movwf	??_lcd_DataWrite+1
  1409  031E  0878               	movf	??_lcd_DataWrite+1,w
  1410  031F  00F9               	movwf	lcd_DataWrite@dataByte
  1411  0320                     l1185:	
  1412                           
  1413                           ;lcd.c: 838: }
  1414                           ;lcd.c: 840: lcd_SendHigherNibble(dataByte);
  1415  0320  0879               	movf	lcd_DataWrite@dataByte,w
  1416  0321  120A  118A  232A  120A  118A  	fcall	_lcd_SendHigherNibble
  1417                           
  1418                           ;lcd.c: 841: lcd_SendDataSignals();
  1419  0326  120A  118A  2292   	fcall	_lcd_SendDataSignals
  1420  0329  0008               	return
  1421  032A                     __end_of_lcd_DataWrite:	
  1422                           
  1423                           	psect	text9
  1424  0292                     __ptext9:	
  1425 ;; *************** function _lcd_SendDataSignals *****************
  1426 ;; Defined at:
  1427 ;;		line 1002 in file "../00-libfiles/lcd.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;		None
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;		None
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1441 ;;      Params:         0       0       0       0       0
  1442 ;;      Locals:         0       0       0       0       0
  1443 ;;      Temps:          0       0       0       0       0
  1444 ;;      Totals:         0       0       0       0       0
  1445 ;;Total ram usage:        0 bytes
  1446 ;; Hardware stack levels used:    1
  1447 ;; Hardware stack levels required when called:    1
  1448 ;; This function calls:
  1449 ;;		_DELAY_us
  1450 ;;		_GPIO_PinWrite
  1451 ;; This function is called by:
  1452 ;;		_lcd_DataWrite
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           
  1457                           ;psect for function _lcd_SendDataSignals
  1458  0292                     _lcd_SendDataSignals:	
  1459                           
  1460                           ;lcd.c: 1004: GPIO_PinWrite(LCDConfig.RS,1);
  1461                           
  1462                           ;incstack = 0
  1463                           ; Regs used in _lcd_SendDataSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1464  0292  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  1465  0293  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  1466  0294  1283               	bcf	3,5	;RP0=0, select bank0
  1467  0295  1303               	bcf	3,6	;RP1=0, select bank0
  1468  0296  0837               	movf	_LCDConfig+3,w
  1469  0297  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1470                           
  1471                           ;lcd.c: 1005: GPIO_PinWrite(LCDConfig.RW,0);
  1472  029C  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  1473  029D  1283               	bcf	3,5	;RP0=0, select bank0
  1474  029E  1303               	bcf	3,6	;RP1=0, select bank0
  1475  029F  0838               	movf	_LCDConfig+4,w
  1476  02A0  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1477                           
  1478                           ;lcd.c: 1006: GPIO_PinWrite(LCDConfig.EN,1);
  1479  02A5  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  1480  02A6  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  1481  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1482  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  1483  02A9  0839               	movf	_LCDConfig+5,w
  1484  02AA  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1485                           
  1486                           ;lcd.c: 1007: DELAY_us(10);
  1487  02AF  300A               	movlw	10
  1488  02B0  00F0               	movwf	DELAY_us@us_count
  1489  02B1  3000               	movlw	0
  1490  02B2  00F1               	movwf	DELAY_us@us_count+1
  1491  02B3  120A  118A  21D3  120A  118A  	fcall	_DELAY_us
  1492                           
  1493                           ;lcd.c: 1008: GPIO_PinWrite(LCDConfig.EN,0);
  1494  02B8  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  1495  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1496  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1497  02BB  0839               	movf	_LCDConfig+5,w
  1498  02BC  120A  118A  2704   	fcall	_GPIO_PinWrite
  1499  02BF  0008               	return
  1500  02C0                     __end_of_lcd_SendDataSignals:	
  1501                           
  1502                           	psect	text10
  1503  01FD                     __ptext10:	
  1504 ;; *************** function _LCD_GoToNextLine *****************
  1505 ;; Defined at:
  1506 ;;		line 292 in file "../00-libfiles/lcd.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1520 ;;      Params:         0       0       0       0       0
  1521 ;;      Locals:         0       0       0       0       0
  1522 ;;      Temps:          1       0       0       0       0
  1523 ;;      Totals:         1       0       0       0       0
  1524 ;;Total ram usage:        1 bytes
  1525 ;; Hardware stack levels used:    1
  1526 ;; Hardware stack levels required when called:    4
  1527 ;; This function calls:
  1528 ;;		_LCD_CmdWrite
  1529 ;; This function is called by:
  1530 ;;		_LCD_DisplayChar
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           
  1535                           ;psect for function _LCD_GoToNextLine
  1536  01FD                     _LCD_GoToNextLine:	
  1537                           
  1538                           ;lcd.c: 296: v_LcdTrackLineNum_U8++;
  1539                           
  1540                           ;incstack = 0
  1541                           ; Regs used in _LCD_GoToNextLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1542  01FD  3001               	movlw	1
  1543  01FE  00FA               	movwf	??_LCD_GoToNextLine
  1544  01FF  087A               	movf	??_LCD_GoToNextLine,w
  1545  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1546  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1547  0202  07C3               	addwf	_v_LcdTrackLineNum_U8,f
  1548                           
  1549                           ;lcd.c: 297: v_LcdTrackCursorPos_U8 = 0x00;
  1550  0203  01C2               	clrf	_v_LcdTrackCursorPos_U8
  1551                           
  1552                           ;lcd.c: 298: if(v_LcdTrackLineNum_U8 >= LCDConfig.v_MaxSupportedLines_U8)
  1553  0204  0834               	movf	_LCDConfig,w
  1554  0205  0243               	subwf	_v_LcdTrackLineNum_U8,w
  1555  0206  1803               	btfsc	3,0
  1556                           
  1557                           ;lcd.c: 299: v_LcdTrackLineNum_U8 = 0x00;
  1558  0207  01C3               	clrf	_v_LcdTrackLineNum_U8
  1559                           
  1560                           ;lcd.c: 300: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_LcdTrackLineNum_U8]);
  1561  0208  0843               	movf	_v_LcdTrackLineNum_U8,w
  1562  0209  3E44               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  1563  020A  0084               	movwf	4
  1564  020B  1383               	bcf	3,7	;select IRP bank0
  1565  020C  0800               	movf	0,w
  1566  020D  120A  118A  22C0   	fcall	_LCD_CmdWrite
  1567  0210  0008               	return
  1568  0211                     __end_of_LCD_GoToNextLine:	
  1569                           
  1570                           	psect	text11
  1571  02C0                     __ptext11:	
  1572 ;; *************** function _LCD_CmdWrite *****************
  1573 ;; Defined at:
  1574 ;;		line 358 in file "../00-libfiles/lcd.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  v_lcdCmd_u8     1    wreg     unsigned char 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  v_lcdCmd_u8     1    9[COMMON] unsigned char 
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1588 ;;      Params:         0       0       0       0       0
  1589 ;;      Locals:         1       0       0       0       0
  1590 ;;      Temps:          2       0       0       0       0
  1591 ;;      Totals:         3       0       0       0       0
  1592 ;;Total ram usage:        3 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; Hardware stack levels required when called:    3
  1595 ;; This function calls:
  1596 ;;		_lcd_BusyCheck
  1597 ;;		_lcd_SendCmdSignals
  1598 ;;		_lcd_SendHigherNibble
  1599 ;;		_lcd_SendLowerNibble
  1600 ;; This function is called by:
  1601 ;;		_LCD_Init
  1602 ;;		_LCD_Clear
  1603 ;;		_LCD_GoToLine
  1604 ;;		_LCD_GoToNextLine
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           
  1609                           ;psect for function _LCD_CmdWrite
  1610  02C0                     _LCD_CmdWrite:	
  1611                           
  1612                           ;incstack = 0
  1613                           ; Regs used in _LCD_CmdWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1614                           ;LCD_CmdWrite@v_lcdCmd_u8 stored from wreg
  1615  02C0  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  1616                           
  1617                           ;lcd.c: 360: lcd_BusyCheck();
  1618  02C1  120A  118A  24FE  120A  118A  	fcall	_lcd_BusyCheck
  1619                           
  1620                           ;lcd.c: 361: if(LCDConfig.v_LcdMode_U8 == 8u)
  1621  02C6  3008               	movlw	8
  1622  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1623  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1624  02C9  0636               	xorwf	_LCDConfig+2,w
  1625  02CA  1D03               	btfss	3,2
  1626  02CB  2AD3               	goto	l1143
  1627                           
  1628                           ;lcd.c: 362: {
  1629                           ;lcd.c: 363: lcd_SendLowerNibble(v_lcdCmd_u8);
  1630  02CC  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  1631  02CD  120A  118A  236A  120A  118A  	fcall	_lcd_SendLowerNibble
  1632                           
  1633                           ;lcd.c: 364: }
  1634  02D2  2AEB               	goto	l1147
  1635  02D3                     l1143:	
  1636                           
  1637                           ;lcd.c: 365: else
  1638                           ;lcd.c: 366: {
  1639                           ;lcd.c: 367: lcd_SendHigherNibble(v_lcdCmd_u8);
  1640  02D3  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  1641  02D4  120A  118A  232A  120A  118A  	fcall	_lcd_SendHigherNibble
  1642                           
  1643                           ;lcd.c: 368: lcd_SendCmdSignals();
  1644  02D9  120A  118A  2265  120A  118A  	fcall	_lcd_SendCmdSignals
  1645                           
  1646                           ;lcd.c: 369: v_lcdCmd_u8 = v_lcdCmd_u8 << 4;
  1647  02DE  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  1648  02DF  00F7               	movwf	??_LCD_CmdWrite
  1649  02E0  3003               	movlw	3
  1650  02E1                     u1585:	
  1651  02E1  1003               	clrc
  1652  02E2  0DF7               	rlf	??_LCD_CmdWrite,f
  1653  02E3  3EFF               	addlw	-1
  1654  02E4  1D03               	skipz
  1655  02E5  2AE1               	goto	u1585
  1656  02E6  1003               	clrc
  1657  02E7  0D77               	rlf	??_LCD_CmdWrite,w
  1658  02E8  00F8               	movwf	??_LCD_CmdWrite+1
  1659  02E9  0878               	movf	??_LCD_CmdWrite+1,w
  1660  02EA  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  1661  02EB                     l1147:	
  1662                           
  1663                           ;lcd.c: 370: }
  1664                           ;lcd.c: 372: lcd_SendHigherNibble(v_lcdCmd_u8);
  1665  02EB  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  1666  02EC  120A  118A  232A  120A  118A  	fcall	_lcd_SendHigherNibble
  1667                           
  1668                           ;lcd.c: 373: lcd_SendCmdSignals();
  1669  02F1  120A  118A  2265   	fcall	_lcd_SendCmdSignals
  1670  02F4  0008               	return
  1671  02F5                     __end_of_LCD_CmdWrite:	
  1672                           
  1673                           	psect	text12
  1674  036A                     __ptext12:	
  1675 ;; *************** function _lcd_SendLowerNibble *****************
  1676 ;; Defined at:
  1677 ;;		line 962 in file "../00-libfiles/lcd.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  dataByte        1    wreg     unsigned char 
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  dataByte        1    6[COMMON] unsigned char 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1691 ;;      Params:         0       0       0       0       0
  1692 ;;      Locals:         1       0       0       0       0
  1693 ;;      Temps:          1       0       0       0       0
  1694 ;;      Totals:         2       0       0       0       0
  1695 ;;Total ram usage:        2 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    1
  1698 ;; This function calls:
  1699 ;;		_GPIO_PinWrite
  1700 ;; This function is called by:
  1701 ;;		_LCD_CmdWrite
  1702 ;;		_lcd_DataWrite
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           
  1707                           ;psect for function _lcd_SendLowerNibble
  1708  036A                     _lcd_SendLowerNibble:	
  1709                           
  1710                           ;incstack = 0
  1711                           ; Regs used in _lcd_SendLowerNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1712                           ;lcd_SendLowerNibble@dataByte stored from wreg
  1713  036A  00F6               	movwf	lcd_SendLowerNibble@dataByte
  1714                           
  1715                           ;lcd.c: 964: GPIO_PinWrite(LCDConfig.D0,(((dataByte)&((1<<(0))))!=0u));
  1716  036B  1C76               	btfss	lcd_SendLowerNibble@dataByte,0
  1717  036C  2B6F               	goto	u1410
  1718  036D  3001               	movlw	1
  1719  036E  2B70               	goto	u1420
  1720  036F                     u1410:	
  1721  036F  3000               	movlw	0
  1722  0370                     u1420:	
  1723  0370  00F5               	movwf	??_lcd_SendLowerNibble
  1724  0371  0875               	movf	??_lcd_SendLowerNibble,w
  1725  0372  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  1726  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1727  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1728  0375  083A               	movf	_LCDConfig+6,w
  1729  0376  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1730                           
  1731                           ;lcd.c: 965: GPIO_PinWrite(LCDConfig.D1,(((dataByte)&((1<<(1))))!=0u));
  1732  037B  1CF6               	btfss	lcd_SendLowerNibble@dataByte,1
  1733  037C  2B7F               	goto	u1430
  1734  037D  3001               	movlw	1
  1735  037E  2B80               	goto	u1440
  1736  037F                     u1430:	
  1737  037F  3000               	movlw	0
  1738  0380                     u1440:	
  1739  0380  00F5               	movwf	??_lcd_SendLowerNibble
  1740  0381  0875               	movf	??_lcd_SendLowerNibble,w
  1741  0382  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  1742  0383  1283               	bcf	3,5	;RP0=0, select bank0
  1743  0384  1303               	bcf	3,6	;RP1=0, select bank0
  1744  0385  083B               	movf	_LCDConfig+7,w
  1745  0386  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1746                           
  1747                           ;lcd.c: 966: GPIO_PinWrite(LCDConfig.D2,(((dataByte)&((1<<(2))))!=0u));
  1748  038B  1D76               	btfss	lcd_SendLowerNibble@dataByte,2
  1749  038C  2B8F               	goto	u1450
  1750  038D  3001               	movlw	1
  1751  038E  2B90               	goto	u1460
  1752  038F                     u1450:	
  1753  038F  3000               	movlw	0
  1754  0390                     u1460:	
  1755  0390  00F5               	movwf	??_lcd_SendLowerNibble
  1756  0391  0875               	movf	??_lcd_SendLowerNibble,w
  1757  0392  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  1758  0393  1283               	bcf	3,5	;RP0=0, select bank0
  1759  0394  1303               	bcf	3,6	;RP1=0, select bank0
  1760  0395  083C               	movf	_LCDConfig+8,w
  1761  0396  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1762                           
  1763                           ;lcd.c: 967: GPIO_PinWrite(LCDConfig.D3,(((dataByte)&((1<<(3))))!=0u));
  1764  039B  1DF6               	btfss	lcd_SendLowerNibble@dataByte,3
  1765  039C  2B9F               	goto	u1470
  1766  039D  3001               	movlw	1
  1767  039E  2BA0               	goto	u1480
  1768  039F                     u1470:	
  1769  039F  3000               	movlw	0
  1770  03A0                     u1480:	
  1771  03A0  00F5               	movwf	??_lcd_SendLowerNibble
  1772  03A1  0875               	movf	??_lcd_SendLowerNibble,w
  1773  03A2  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  1774  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1775  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  1776  03A5  083D               	movf	_LCDConfig+9,w
  1777  03A6  120A  118A  2704   	fcall	_GPIO_PinWrite
  1778  03A9  0008               	return
  1779  03AA                     __end_of_lcd_SendLowerNibble:	
  1780                           
  1781                           	psect	text13
  1782  032A                     __ptext13:	
  1783 ;; *************** function _lcd_SendHigherNibble *****************
  1784 ;; Defined at:
  1785 ;;		line 943 in file "../00-libfiles/lcd.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  dataByte        1    wreg     unsigned char 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  dataByte        1    6[COMMON] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1799 ;;      Params:         0       0       0       0       0
  1800 ;;      Locals:         1       0       0       0       0
  1801 ;;      Temps:          1       0       0       0       0
  1802 ;;      Totals:         2       0       0       0       0
  1803 ;;Total ram usage:        2 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    1
  1806 ;; This function calls:
  1807 ;;		_GPIO_PinWrite
  1808 ;; This function is called by:
  1809 ;;		_LCD_CmdWrite
  1810 ;;		_lcd_DataWrite
  1811 ;;		_lcd_Reset
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           
  1816                           ;psect for function _lcd_SendHigherNibble
  1817  032A                     _lcd_SendHigherNibble:	
  1818                           
  1819                           ;incstack = 0
  1820                           ; Regs used in _lcd_SendHigherNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1821                           ;lcd_SendHigherNibble@dataByte stored from wreg
  1822  032A  00F6               	movwf	lcd_SendHigherNibble@dataByte
  1823                           
  1824                           ;lcd.c: 945: GPIO_PinWrite(LCDConfig.D4,(((dataByte)&((1<<(4))))!=0u));
  1825  032B  1E76               	btfss	lcd_SendHigherNibble@dataByte,4
  1826  032C  2B2F               	goto	u1490
  1827  032D  3001               	movlw	1
  1828  032E  2B30               	goto	u1500
  1829  032F                     u1490:	
  1830  032F  3000               	movlw	0
  1831  0330                     u1500:	
  1832  0330  00F5               	movwf	??_lcd_SendHigherNibble
  1833  0331  0875               	movf	??_lcd_SendHigherNibble,w
  1834  0332  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  1835  0333  1283               	bcf	3,5	;RP0=0, select bank0
  1836  0334  1303               	bcf	3,6	;RP1=0, select bank0
  1837  0335  083E               	movf	_LCDConfig+10,w
  1838  0336  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1839                           
  1840                           ;lcd.c: 946: GPIO_PinWrite(LCDConfig.D5,(((dataByte)&((1<<(5))))!=0u));
  1841  033B  1EF6               	btfss	lcd_SendHigherNibble@dataByte,5
  1842  033C  2B3F               	goto	u1510
  1843  033D  3001               	movlw	1
  1844  033E  2B40               	goto	u1520
  1845  033F                     u1510:	
  1846  033F  3000               	movlw	0
  1847  0340                     u1520:	
  1848  0340  00F5               	movwf	??_lcd_SendHigherNibble
  1849  0341  0875               	movf	??_lcd_SendHigherNibble,w
  1850  0342  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  1851  0343  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0344  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0345  083F               	movf	_LCDConfig+11,w
  1854  0346  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1855                           
  1856                           ;lcd.c: 947: GPIO_PinWrite(LCDConfig.D6,(((dataByte)&((1<<(6))))!=0u));
  1857  034B  1F76               	btfss	lcd_SendHigherNibble@dataByte,6
  1858  034C  2B4F               	goto	u1530
  1859  034D  3001               	movlw	1
  1860  034E  2B50               	goto	u1540
  1861  034F                     u1530:	
  1862  034F  3000               	movlw	0
  1863  0350                     u1540:	
  1864  0350  00F5               	movwf	??_lcd_SendHigherNibble
  1865  0351  0875               	movf	??_lcd_SendHigherNibble,w
  1866  0352  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  1867  0353  1283               	bcf	3,5	;RP0=0, select bank0
  1868  0354  1303               	bcf	3,6	;RP1=0, select bank0
  1869  0355  0840               	movf	_LCDConfig+12,w
  1870  0356  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1871                           
  1872                           ;lcd.c: 948: GPIO_PinWrite(LCDConfig.D7,(((dataByte)&((1<<(7))))!=0u));
  1873  035B  1FF6               	btfss	lcd_SendHigherNibble@dataByte,7
  1874  035C  2B5F               	goto	u1550
  1875  035D  3001               	movlw	1
  1876  035E  2B60               	goto	u1560
  1877  035F                     u1550:	
  1878  035F  3000               	movlw	0
  1879  0360                     u1560:	
  1880  0360  00F5               	movwf	??_lcd_SendHigherNibble
  1881  0361  0875               	movf	??_lcd_SendHigherNibble,w
  1882  0362  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  1883  0363  1283               	bcf	3,5	;RP0=0, select bank0
  1884  0364  1303               	bcf	3,6	;RP1=0, select bank0
  1885  0365  0841               	movf	_LCDConfig+13,w
  1886  0366  120A  118A  2704   	fcall	_GPIO_PinWrite
  1887  0369  0008               	return
  1888  036A                     __end_of_lcd_SendHigherNibble:	
  1889                           
  1890                           	psect	text14
  1891  0265                     __ptext14:	
  1892 ;; *************** function _lcd_SendCmdSignals *****************
  1893 ;; Defined at:
  1894 ;;		line 981 in file "../00-libfiles/lcd.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;		None
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;		None
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      void 
  1901 ;; Registers used:
  1902 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1908 ;;      Params:         0       0       0       0       0
  1909 ;;      Locals:         0       0       0       0       0
  1910 ;;      Temps:          0       0       0       0       0
  1911 ;;      Totals:         0       0       0       0       0
  1912 ;;Total ram usage:        0 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    1
  1915 ;; This function calls:
  1916 ;;		_DELAY_us
  1917 ;;		_GPIO_PinWrite
  1918 ;; This function is called by:
  1919 ;;		_LCD_CmdWrite
  1920 ;;		_lcd_Reset
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _lcd_SendCmdSignals
  1926  0265                     _lcd_SendCmdSignals:	
  1927                           
  1928                           ;lcd.c: 983: GPIO_PinWrite(LCDConfig.RS,0);
  1929                           
  1930                           ;incstack = 0
  1931                           ; Regs used in _lcd_SendCmdSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1932  0265  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  1933  0266  1283               	bcf	3,5	;RP0=0, select bank0
  1934  0267  1303               	bcf	3,6	;RP1=0, select bank0
  1935  0268  0837               	movf	_LCDConfig+3,w
  1936  0269  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1937                           
  1938                           ;lcd.c: 984: GPIO_PinWrite(LCDConfig.RW,0);
  1939  026E  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  1940  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1941  0270  1303               	bcf	3,6	;RP1=0, select bank0
  1942  0271  0838               	movf	_LCDConfig+4,w
  1943  0272  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1944                           
  1945                           ;lcd.c: 985: GPIO_PinWrite(LCDConfig.EN,1);
  1946  0277  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  1947  0278  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  1948  0279  1283               	bcf	3,5	;RP0=0, select bank0
  1949  027A  1303               	bcf	3,6	;RP1=0, select bank0
  1950  027B  0839               	movf	_LCDConfig+5,w
  1951  027C  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1952                           
  1953                           ;lcd.c: 986: DELAY_us(10);
  1954  0281  300A               	movlw	10
  1955  0282  00F0               	movwf	DELAY_us@us_count
  1956  0283  3000               	movlw	0
  1957  0284  00F1               	movwf	DELAY_us@us_count+1
  1958  0285  120A  118A  21D3  120A  118A  	fcall	_DELAY_us
  1959                           
  1960                           ;lcd.c: 987: GPIO_PinWrite(LCDConfig.EN,0);
  1961  028A  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  1962  028B  1283               	bcf	3,5	;RP0=0, select bank0
  1963  028C  1303               	bcf	3,6	;RP1=0, select bank0
  1964  028D  0839               	movf	_LCDConfig+5,w
  1965  028E  120A  118A  2704   	fcall	_GPIO_PinWrite
  1966  0291  0008               	return
  1967  0292                     __end_of_lcd_SendCmdSignals:	
  1968                           
  1969                           	psect	text15
  1970  04FE                     __ptext15:	
  1971 ;; *************** function _lcd_BusyCheck *****************
  1972 ;; Defined at:
  1973 ;;		line 860 in file "../00-libfiles/lcd.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  busyflag        1    6[COMMON] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1987 ;;      Params:         0       0       0       0       0
  1988 ;;      Locals:         1       0       0       0       0
  1989 ;;      Temps:          1       0       0       0       0
  1990 ;;      Totals:         2       0       0       0       0
  1991 ;;Total ram usage:        2 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    2
  1994 ;; This function calls:
  1995 ;;		_DELAY_ms
  1996 ;;		_DELAY_us
  1997 ;;		_GPIO_PinDirection
  1998 ;;		_GPIO_PinRead
  1999 ;;		_GPIO_PinWrite
  2000 ;; This function is called by:
  2001 ;;		_LCD_CmdWrite
  2002 ;;		_lcd_DataWrite
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           
  2007                           ;psect for function _lcd_BusyCheck
  2008  04FE                     _lcd_BusyCheck:	
  2009                           
  2010                           ;lcd.c: 862: uint8_t busyflag;
  2011                           ;lcd.c: 864: if(LCDConfig.RW != P_NC)
  2012                           
  2013                           ;incstack = 0
  2014                           ; Regs used in _lcd_BusyCheck: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2015  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2016  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  2017  0500  0A38               	incf	_LCDConfig+4,w
  2018  0501  1903               	btfsc	3,2
  2019  0502  2D82               	goto	l1125
  2020                           
  2021                           ;lcd.c: 865: {
  2022                           ;lcd.c: 866: GPIO_PinDirection(LCDConfig.D7,0x01u);
  2023  0503  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2024  0504  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  2025  0505  0841               	movf	_LCDConfig+13,w
  2026  0506  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
  2027                           
  2028                           ;lcd.c: 867: GPIO_PinWrite(LCDConfig.RS,0);
  2029  050B  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2030  050C  1283               	bcf	3,5	;RP0=0, select bank0
  2031  050D  1303               	bcf	3,6	;RP1=0, select bank0
  2032  050E  0837               	movf	_LCDConfig+3,w
  2033  050F  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2034                           
  2035                           ;lcd.c: 868: GPIO_PinWrite(LCDConfig.RW,1);
  2036  0514  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2037  0515  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  2038  0516  1283               	bcf	3,5	;RP0=0, select bank0
  2039  0517  1303               	bcf	3,6	;RP1=0, select bank0
  2040  0518  0838               	movf	_LCDConfig+4,w
  2041  0519  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2042  051E                     l180:	
  2043                           ;lcd.c: 869: do
  2044                           
  2045                           
  2046                           ;lcd.c: 870: {
  2047                           ;lcd.c: 872: GPIO_PinWrite(LCDConfig.EN,0);
  2048  051E  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2049  051F  1283               	bcf	3,5	;RP0=0, select bank0
  2050  0520  1303               	bcf	3,6	;RP1=0, select bank0
  2051  0521  0839               	movf	_LCDConfig+5,w
  2052  0522  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2053                           
  2054                           ;lcd.c: 873: DELAY_us(10);
  2055  0527  300A               	movlw	10
  2056  0528  00F0               	movwf	DELAY_us@us_count
  2057  0529  3000               	movlw	0
  2058  052A  00F1               	movwf	DELAY_us@us_count+1
  2059  052B  120A  118A  21D3  120A  118A  	fcall	_DELAY_us
  2060                           
  2061                           ;lcd.c: 874: GPIO_PinWrite(LCDConfig.EN,1);
  2062  0530  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2063  0531  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  2064  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2065  0533  1303               	bcf	3,6	;RP1=0, select bank0
  2066  0534  0839               	movf	_LCDConfig+5,w
  2067  0535  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2068                           
  2069                           ;lcd.c: 875: DELAY_us(10);
  2070  053A  300A               	movlw	10
  2071  053B  00F0               	movwf	DELAY_us@us_count
  2072  053C  3000               	movlw	0
  2073  053D  00F1               	movwf	DELAY_us@us_count+1
  2074  053E  120A  118A  21D3  120A  118A  	fcall	_DELAY_us
  2075                           
  2076                           ;lcd.c: 876: busyflag = GPIO_PinRead(LCDConfig.D7);
  2077  0543  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0544  1303               	bcf	3,6	;RP1=0, select bank0
  2079  0545  0841               	movf	_LCDConfig+13,w
  2080  0546  120A  118A  2489  120A  118A  	fcall	_GPIO_PinRead
  2081  054B  00F5               	movwf	??_lcd_BusyCheck
  2082  054C  0875               	movf	??_lcd_BusyCheck,w
  2083  054D  00F6               	movwf	lcd_BusyCheck@busyflag
  2084                           
  2085                           ;lcd.c: 879: if(LCDConfig.v_LcdMode_U8 == 4)
  2086  054E  3004               	movlw	4
  2087  054F  1283               	bcf	3,5	;RP0=0, select bank0
  2088  0550  1303               	bcf	3,6	;RP1=0, select bank0
  2089  0551  0636               	xorwf	_LCDConfig+2,w
  2090  0552  1D03               	btfss	3,2
  2091  0553  2D77               	goto	l1121
  2092                           
  2093                           ;lcd.c: 880: {
  2094                           ;lcd.c: 882: GPIO_PinWrite(LCDConfig.EN,0);
  2095  0554  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2096  0555  0839               	movf	_LCDConfig+5,w
  2097  0556  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2098                           
  2099                           ;lcd.c: 883: DELAY_us(10);
  2100  055B  300A               	movlw	10
  2101  055C  00F0               	movwf	DELAY_us@us_count
  2102  055D  3000               	movlw	0
  2103  055E  00F1               	movwf	DELAY_us@us_count+1
  2104  055F  120A  118A  21D3  120A  118A  	fcall	_DELAY_us
  2105                           
  2106                           ;lcd.c: 884: GPIO_PinWrite(LCDConfig.EN,1);
  2107  0564  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2108  0565  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  2109  0566  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0567  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0568  0839               	movf	_LCDConfig+5,w
  2112  0569  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2113                           
  2114                           ;lcd.c: 885: DELAY_us(10);
  2115  056E  300A               	movlw	10
  2116  056F  00F0               	movwf	DELAY_us@us_count
  2117  0570  3000               	movlw	0
  2118  0571  00F1               	movwf	DELAY_us@us_count+1
  2119  0572  120A  118A  21D3  120A  118A  	fcall	_DELAY_us
  2120  0577                     l1121:	
  2121                           
  2122                           ;lcd.c: 886: }
  2123                           ;lcd.c: 887: }while(busyflag!=0);
  2124  0577  0876               	movf	lcd_BusyCheck@busyflag,w
  2125  0578  1D03               	btfss	3,2
  2126  0579  2D1E               	goto	l180
  2127                           
  2128                           ;lcd.c: 889: GPIO_PinDirection(LCDConfig.D7,0x00u);
  2129  057A  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2130  057B  1283               	bcf	3,5	;RP0=0, select bank0
  2131  057C  1303               	bcf	3,6	;RP1=0, select bank0
  2132  057D  0841               	movf	_LCDConfig+13,w
  2133  057E  120A  118A  262B   	fcall	_GPIO_PinDirection
  2134                           
  2135                           ;lcd.c: 890: }
  2136  0581  0008               	return
  2137  0582                     l1125:	
  2138                           
  2139                           ;lcd.c: 891: else
  2140                           ;lcd.c: 892: {
  2141                           ;lcd.c: 895: DELAY_ms(1);
  2142  0582  3001               	movlw	1
  2143  0583  00F2               	movwf	DELAY_ms@ms_count
  2144  0584  3000               	movlw	0
  2145  0585  00F3               	movwf	DELAY_ms@ms_count+1
  2146  0586  120A  118A  21E9   	fcall	_DELAY_ms
  2147  0589  0008               	return
  2148  058A                     __end_of_lcd_BusyCheck:	
  2149                           
  2150                           	psect	text16
  2151  0704                     __ptext16:	
  2152 ;; *************** function _GPIO_PinWrite *****************
  2153 ;; Defined at:
  2154 ;;		line 127 in file "../00-libfiles/gpio.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  enm_pinNumbe    1    wreg     enum E1088
  2157 ;;  var_pinValue    1    0[COMMON] unsigned char 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  2160 ;;  var_portNumb    1    3[COMMON] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2170 ;;      Params:         1       0       0       0       0
  2171 ;;      Locals:         2       0       0       0       0
  2172 ;;      Temps:          2       0       0       0       0
  2173 ;;      Totals:         5       0       0       0       0
  2174 ;;Total ram usage:        5 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		_lcd_BusyCheck
  2180 ;;		_lcd_SendHigherNibble
  2181 ;;		_lcd_SendLowerNibble
  2182 ;;		_lcd_SendCmdSignals
  2183 ;;		_lcd_SendDataSignals
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           
  2188                           ;psect for function _GPIO_PinWrite
  2189  0704                     _GPIO_PinWrite:	
  2190                           
  2191                           ;incstack = 0
  2192                           ; Regs used in _GPIO_PinWrite: [wreg-fsr0h+status,2+status,0]
  2193                           ;GPIO_PinWrite@enm_pinNumber stored from wreg
  2194  0704  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  2195                           
  2196                           ;gpio.c: 130: uint8_t var_portNumber_u8;
  2197                           ;gpio.c: 133: var_portNumber_u8 = (enm_pinNumber>>3);
  2198  0705  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  2199  0706  00F1               	movwf	??_GPIO_PinWrite
  2200  0707  3003               	movlw	3
  2201  0708                     u1055:	
  2202  0708  1003               	clrc
  2203  0709  0CF1               	rrf	??_GPIO_PinWrite,f
  2204  070A  3EFF               	addlw	-1
  2205  070B  1D03               	skipz
  2206  070C  2F08               	goto	u1055
  2207  070D  0871               	movf	??_GPIO_PinWrite,w
  2208  070E  00F2               	movwf	??_GPIO_PinWrite+1
  2209  070F  0872               	movf	??_GPIO_PinWrite+1,w
  2210  0710  00F3               	movwf	GPIO_PinWrite@var_portNumber_u8
  2211                           
  2212                           ;gpio.c: 134: enm_pinNumber = enm_pinNumber & 0x07;
  2213  0711  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  2214  0712  3907               	andlw	7
  2215  0713  00F1               	movwf	??_GPIO_PinWrite
  2216  0714  0871               	movf	??_GPIO_PinWrite,w
  2217  0715  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  2218                           
  2219                           ;gpio.c: 138: switch(var_portNumber_u8)
  2220  0716  2FCB               	goto	l1069
  2221  0717                     l1037:	
  2222                           ;gpio.c: 139: {
  2223                           ;gpio.c: 141: case 0:
  2224                           
  2225                           
  2226                           ;gpio.c: 142: ((var_pinValue_u8)? ((PORTA) |= (1<<(enm_pinNumber))): ((PORTA) &= ~(1<<(e
      +                          nm_pinNumber))));
  2227  0717  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  2228  0718  1903               	btfsc	3,2
  2229  0719  2F2A               	goto	l1041
  2230  071A  3001               	movlw	1
  2231  071B  00F1               	movwf	??_GPIO_PinWrite
  2232  071C  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2233  071D  2F20               	goto	u1074
  2234  071E                     u1075:	
  2235  071E  1003               	clrc
  2236  071F  0DF1               	rlf	??_GPIO_PinWrite,f
  2237  0720                     u1074:	
  2238  0720  3EFF               	addlw	-1
  2239  0721  1D03               	skipz
  2240  0722  2F1E               	goto	u1075
  2241  0723  0871               	movf	??_GPIO_PinWrite,w
  2242  0724  00F2               	movwf	??_GPIO_PinWrite+1
  2243  0725  0872               	movf	??_GPIO_PinWrite+1,w
  2244  0726  1283               	bcf	3,5	;RP0=0, select bank0
  2245  0727  1303               	bcf	3,6	;RP1=0, select bank0
  2246  0728  0485               	iorwf	5,f	;volatile
  2247  0729  0008               	return
  2248  072A                     l1041:	
  2249  072A  3001               	movlw	1
  2250  072B  00F1               	movwf	??_GPIO_PinWrite
  2251  072C  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2252  072D  2F30               	goto	u1084
  2253  072E                     u1085:	
  2254  072E  1003               	clrc
  2255  072F  0DF1               	rlf	??_GPIO_PinWrite,f
  2256  0730                     u1084:	
  2257  0730  3EFF               	addlw	-1
  2258  0731  1D03               	skipz
  2259  0732  2F2E               	goto	u1085
  2260  0733  0871               	movf	??_GPIO_PinWrite,w
  2261  0734  3AFF               	xorlw	255
  2262  0735  00F2               	movwf	??_GPIO_PinWrite+1
  2263  0736  0872               	movf	??_GPIO_PinWrite+1,w
  2264  0737  1283               	bcf	3,5	;RP0=0, select bank0
  2265  0738  1303               	bcf	3,6	;RP1=0, select bank0
  2266  0739  0585               	andwf	5,f	;volatile
  2267                           
  2268                           ;gpio.c: 143: break;
  2269  073A  0008               	return
  2270  073B                     l1043:	
  2271                           ;gpio.c: 147: case 1:
  2272                           
  2273                           
  2274                           ;gpio.c: 148: ((var_pinValue_u8)? ((PORTB) |= (1<<(enm_pinNumber))): ((PORTB) &= ~(1<<(e
      +                          nm_pinNumber))));
  2275  073B  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  2276  073C  1903               	btfsc	3,2
  2277  073D  2F4E               	goto	l1047
  2278  073E  3001               	movlw	1
  2279  073F  00F1               	movwf	??_GPIO_PinWrite
  2280  0740  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2281  0741  2F44               	goto	u1104
  2282  0742                     u1105:	
  2283  0742  1003               	clrc
  2284  0743  0DF1               	rlf	??_GPIO_PinWrite,f
  2285  0744                     u1104:	
  2286  0744  3EFF               	addlw	-1
  2287  0745  1D03               	skipz
  2288  0746  2F42               	goto	u1105
  2289  0747  0871               	movf	??_GPIO_PinWrite,w
  2290  0748  00F2               	movwf	??_GPIO_PinWrite+1
  2291  0749  0872               	movf	??_GPIO_PinWrite+1,w
  2292  074A  1283               	bcf	3,5	;RP0=0, select bank0
  2293  074B  1303               	bcf	3,6	;RP1=0, select bank0
  2294  074C  0486               	iorwf	6,f	;volatile
  2295  074D  0008               	return
  2296  074E                     l1047:	
  2297  074E  3001               	movlw	1
  2298  074F  00F1               	movwf	??_GPIO_PinWrite
  2299  0750  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2300  0751  2F54               	goto	u1114
  2301  0752                     u1115:	
  2302  0752  1003               	clrc
  2303  0753  0DF1               	rlf	??_GPIO_PinWrite,f
  2304  0754                     u1114:	
  2305  0754  3EFF               	addlw	-1
  2306  0755  1D03               	skipz
  2307  0756  2F52               	goto	u1115
  2308  0757  0871               	movf	??_GPIO_PinWrite,w
  2309  0758  3AFF               	xorlw	255
  2310  0759  00F2               	movwf	??_GPIO_PinWrite+1
  2311  075A  0872               	movf	??_GPIO_PinWrite+1,w
  2312  075B  1283               	bcf	3,5	;RP0=0, select bank0
  2313  075C  1303               	bcf	3,6	;RP1=0, select bank0
  2314  075D  0586               	andwf	6,f	;volatile
  2315                           
  2316                           ;gpio.c: 149: break;
  2317  075E  0008               	return
  2318  075F                     l1049:	
  2319                           ;gpio.c: 153: case 2:
  2320                           
  2321                           
  2322                           ;gpio.c: 154: ((var_pinValue_u8)? ((PORTC) |= (1<<(enm_pinNumber))): ((PORTC) &= ~(1<<(e
      +                          nm_pinNumber))));
  2323  075F  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  2324  0760  1903               	btfsc	3,2
  2325  0761  2F72               	goto	l1053
  2326  0762  3001               	movlw	1
  2327  0763  00F1               	movwf	??_GPIO_PinWrite
  2328  0764  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2329  0765  2F68               	goto	u1134
  2330  0766                     u1135:	
  2331  0766  1003               	clrc
  2332  0767  0DF1               	rlf	??_GPIO_PinWrite,f
  2333  0768                     u1134:	
  2334  0768  3EFF               	addlw	-1
  2335  0769  1D03               	skipz
  2336  076A  2F66               	goto	u1135
  2337  076B  0871               	movf	??_GPIO_PinWrite,w
  2338  076C  00F2               	movwf	??_GPIO_PinWrite+1
  2339  076D  0872               	movf	??_GPIO_PinWrite+1,w
  2340  076E  1283               	bcf	3,5	;RP0=0, select bank0
  2341  076F  1303               	bcf	3,6	;RP1=0, select bank0
  2342  0770  0487               	iorwf	7,f	;volatile
  2343  0771  0008               	return
  2344  0772                     l1053:	
  2345  0772  3001               	movlw	1
  2346  0773  00F1               	movwf	??_GPIO_PinWrite
  2347  0774  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2348  0775  2F78               	goto	u1144
  2349  0776                     u1145:	
  2350  0776  1003               	clrc
  2351  0777  0DF1               	rlf	??_GPIO_PinWrite,f
  2352  0778                     u1144:	
  2353  0778  3EFF               	addlw	-1
  2354  0779  1D03               	skipz
  2355  077A  2F76               	goto	u1145
  2356  077B  0871               	movf	??_GPIO_PinWrite,w
  2357  077C  3AFF               	xorlw	255
  2358  077D  00F2               	movwf	??_GPIO_PinWrite+1
  2359  077E  0872               	movf	??_GPIO_PinWrite+1,w
  2360  077F  1283               	bcf	3,5	;RP0=0, select bank0
  2361  0780  1303               	bcf	3,6	;RP1=0, select bank0
  2362  0781  0587               	andwf	7,f	;volatile
  2363                           
  2364                           ;gpio.c: 155: break;
  2365  0782  0008               	return
  2366  0783                     l1055:	
  2367                           ;gpio.c: 159: case 3:
  2368                           
  2369                           
  2370                           ;gpio.c: 160: ((var_pinValue_u8)? ((PORTD) |= (1<<(enm_pinNumber))): ((PORTD) &= ~(1<<(e
      +                          nm_pinNumber))));
  2371  0783  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  2372  0784  1903               	btfsc	3,2
  2373  0785  2F96               	goto	l1059
  2374  0786  3001               	movlw	1
  2375  0787  00F1               	movwf	??_GPIO_PinWrite
  2376  0788  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2377  0789  2F8C               	goto	u1164
  2378  078A                     u1165:	
  2379  078A  1003               	clrc
  2380  078B  0DF1               	rlf	??_GPIO_PinWrite,f
  2381  078C                     u1164:	
  2382  078C  3EFF               	addlw	-1
  2383  078D  1D03               	skipz
  2384  078E  2F8A               	goto	u1165
  2385  078F  0871               	movf	??_GPIO_PinWrite,w
  2386  0790  00F2               	movwf	??_GPIO_PinWrite+1
  2387  0791  0872               	movf	??_GPIO_PinWrite+1,w
  2388  0792  1283               	bcf	3,5	;RP0=0, select bank0
  2389  0793  1303               	bcf	3,6	;RP1=0, select bank0
  2390  0794  0488               	iorwf	8,f	;volatile
  2391  0795  0008               	return
  2392  0796                     l1059:	
  2393  0796  3001               	movlw	1
  2394  0797  00F1               	movwf	??_GPIO_PinWrite
  2395  0798  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2396  0799  2F9C               	goto	u1174
  2397  079A                     u1175:	
  2398  079A  1003               	clrc
  2399  079B  0DF1               	rlf	??_GPIO_PinWrite,f
  2400  079C                     u1174:	
  2401  079C  3EFF               	addlw	-1
  2402  079D  1D03               	skipz
  2403  079E  2F9A               	goto	u1175
  2404  079F  0871               	movf	??_GPIO_PinWrite,w
  2405  07A0  3AFF               	xorlw	255
  2406  07A1  00F2               	movwf	??_GPIO_PinWrite+1
  2407  07A2  0872               	movf	??_GPIO_PinWrite+1,w
  2408  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  2409  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  2410  07A5  0588               	andwf	8,f	;volatile
  2411                           
  2412                           ;gpio.c: 161: break;
  2413  07A6  0008               	return
  2414  07A7                     l1061:	
  2415                           ;gpio.c: 165: case 4:
  2416                           
  2417                           
  2418                           ;gpio.c: 166: ((var_pinValue_u8)? ((PORTE) |= (1<<(enm_pinNumber))): ((PORTE) &= ~(1<<(e
      +                          nm_pinNumber))));
  2419  07A7  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  2420  07A8  1903               	btfsc	3,2
  2421  07A9  2FBA               	goto	l1065
  2422  07AA  3001               	movlw	1
  2423  07AB  00F1               	movwf	??_GPIO_PinWrite
  2424  07AC  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2425  07AD  2FB0               	goto	u1194
  2426  07AE                     u1195:	
  2427  07AE  1003               	clrc
  2428  07AF  0DF1               	rlf	??_GPIO_PinWrite,f
  2429  07B0                     u1194:	
  2430  07B0  3EFF               	addlw	-1
  2431  07B1  1D03               	skipz
  2432  07B2  2FAE               	goto	u1195
  2433  07B3  0871               	movf	??_GPIO_PinWrite,w
  2434  07B4  00F2               	movwf	??_GPIO_PinWrite+1
  2435  07B5  0872               	movf	??_GPIO_PinWrite+1,w
  2436  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  2437  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  2438  07B8  0489               	iorwf	9,f	;volatile
  2439  07B9  0008               	return
  2440  07BA                     l1065:	
  2441  07BA  3001               	movlw	1
  2442  07BB  00F1               	movwf	??_GPIO_PinWrite
  2443  07BC  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2444  07BD  2FC0               	goto	u1204
  2445  07BE                     u1205:	
  2446  07BE  1003               	clrc
  2447  07BF  0DF1               	rlf	??_GPIO_PinWrite,f
  2448  07C0                     u1204:	
  2449  07C0  3EFF               	addlw	-1
  2450  07C1  1D03               	skipz
  2451  07C2  2FBE               	goto	u1205
  2452  07C3  0871               	movf	??_GPIO_PinWrite,w
  2453  07C4  3AFF               	xorlw	255
  2454  07C5  00F2               	movwf	??_GPIO_PinWrite+1
  2455  07C6  0872               	movf	??_GPIO_PinWrite+1,w
  2456  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  2457  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  2458  07C9  0589               	andwf	9,f	;volatile
  2459                           
  2460                           ;gpio.c: 169: }
  2461                           
  2462                           ;gpio.c: 167: break;
  2463  07CA  0008               	return
  2464  07CB                     l1069:	
  2465  07CB  0873               	movf	GPIO_PinWrite@var_portNumber_u8,w
  2466                           
  2467                           ; Switch size 1, requested type "space"
  2468                           ; Number of cases is 5, Range of values is 0 to 4
  2469                           ; switch strategies available:
  2470                           ; Name         Instructions Cycles
  2471                           ; simple_byte           16     9 (average)
  2472                           ; direct_byte           23     8 (fixed)
  2473                           ; jumptable            260     6 (fixed)
  2474                           ;	Chosen strategy is simple_byte
  2475  07CC  3A00               	xorlw	0	; case 0
  2476  07CD  1903               	skipnz
  2477  07CE  2F17               	goto	l1037
  2478  07CF  3A01               	xorlw	1	; case 1
  2479  07D0  1903               	skipnz
  2480  07D1  2F3B               	goto	l1043
  2481  07D2  3A03               	xorlw	3	; case 2
  2482  07D3  1903               	skipnz
  2483  07D4  2F5F               	goto	l1049
  2484  07D5  3A01               	xorlw	1	; case 3
  2485  07D6  1903               	skipnz
  2486  07D7  2F83               	goto	l1055
  2487  07D8  3A07               	xorlw	7	; case 4
  2488  07D9  1903               	skipnz
  2489  07DA  2FA7               	goto	l1061
  2490  07DB  2FDC               	goto	l80
  2491  07DC                     l80:	
  2492  07DC  0008               	return
  2493  07DD                     __end_of_GPIO_PinWrite:	
  2494                           
  2495                           	psect	text17
  2496  0489                     __ptext17:	
  2497 ;; *************** function _GPIO_PinRead *****************
  2498 ;; Defined at:
  2499 ;;		line 192 in file "../00-libfiles/gpio.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  enm_pinNumbe    1    wreg     enum E1088
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  2504 ;;  returnStatus    1    3[COMMON] unsigned char 
  2505 ;;  var_portNumb    1    2[COMMON] unsigned char 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      unsigned char 
  2508 ;; Registers used:
  2509 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2515 ;;      Params:         0       0       0       0       0
  2516 ;;      Locals:         3       0       0       0       0
  2517 ;;      Temps:          2       0       0       0       0
  2518 ;;      Totals:         5       0       0       0       0
  2519 ;;Total ram usage:        5 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; This function calls:
  2522 ;;		Nothing
  2523 ;; This function is called by:
  2524 ;;		_lcd_BusyCheck
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           
  2529                           ;psect for function _GPIO_PinRead
  2530  0489                     _GPIO_PinRead:	
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in _GPIO_PinRead: [wreg-fsr0h+status,2+status,0]
  2534                           ;GPIO_PinRead@enm_pinNumber stored from wreg
  2535  0489  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  2536                           
  2537                           ;gpio.c: 194: uint8_t var_portNumber_u8;
  2538                           ;gpio.c: 195: uint8_t returnStatus = 0;
  2539  048A  01F3               	clrf	GPIO_PinRead@returnStatus
  2540                           
  2541                           ;gpio.c: 197: var_portNumber_u8 = (enm_pinNumber>>3);
  2542  048B  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  2543  048C  00F0               	movwf	??_GPIO_PinRead
  2544  048D  3003               	movlw	3
  2545  048E                     u1215:	
  2546  048E  1003               	clrc
  2547  048F  0CF0               	rrf	??_GPIO_PinRead,f
  2548  0490  3EFF               	addlw	-1
  2549  0491  1D03               	skipz
  2550  0492  2C8E               	goto	u1215
  2551  0493  0870               	movf	??_GPIO_PinRead,w
  2552  0494  00F1               	movwf	??_GPIO_PinRead+1
  2553  0495  0871               	movf	??_GPIO_PinRead+1,w
  2554  0496  00F2               	movwf	GPIO_PinRead@var_portNumber_u8
  2555                           
  2556                           ;gpio.c: 198: enm_pinNumber = enm_pinNumber & 0x07;
  2557  0497  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  2558  0498  3907               	andlw	7
  2559  0499  00F0               	movwf	??_GPIO_PinRead
  2560  049A  0870               	movf	??_GPIO_PinRead,w
  2561  049B  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  2562                           
  2563                           ;gpio.c: 201: switch(var_portNumber_u8)
  2564  049C  2CEB               	goto	l1089
  2565  049D                     l1077:	
  2566                           ;gpio.c: 202: {
  2567                           ;gpio.c: 204: case 0:
  2568                           
  2569                           
  2570                           ;gpio.c: 205: returnStatus = (((PORTA)&((1<<(enm_pinNumber))))!=0u);
  2571  049D  3001               	movlw	1
  2572  049E  00F0               	movwf	??_GPIO_PinRead
  2573  049F  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  2574  04A0  2CA3               	goto	u1224
  2575  04A1                     u1225:	
  2576  04A1  1003               	clrc
  2577  04A2  0DF0               	rlf	??_GPIO_PinRead,f
  2578  04A3                     u1224:	
  2579  04A3  3EFF               	addlw	-1
  2580  04A4  1D03               	skipz
  2581  04A5  2CA1               	goto	u1225
  2582  04A6  0870               	movf	??_GPIO_PinRead,w
  2583  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2584  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  2585  04A9  0505               	andwf	5,w	;volatile
  2586  04AA  2CE2               	goto	L5
  2587  04AB                     l1079:	
  2588                           ;gpio.c: 209: case 1:
  2589                           
  2590                           ;gpio.c: 206: break;
  2591                           
  2592                           
  2593                           ;gpio.c: 210: returnStatus = (((PORTB)&((1<<(enm_pinNumber))))!=0u);
  2594  04AB  3001               	movlw	1
  2595  04AC  00F0               	movwf	??_GPIO_PinRead
  2596  04AD  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  2597  04AE  2CB1               	goto	u1254
  2598  04AF                     u1255:	
  2599  04AF  1003               	clrc
  2600  04B0  0DF0               	rlf	??_GPIO_PinRead,f
  2601  04B1                     u1254:	
  2602  04B1  3EFF               	addlw	-1
  2603  04B2  1D03               	skipz
  2604  04B3  2CAF               	goto	u1255
  2605  04B4  0870               	movf	??_GPIO_PinRead,w
  2606  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2607  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  2608  04B7  0506               	andwf	6,w	;volatile
  2609  04B8  2CE2               	goto	L5
  2610  04B9                     l1081:	
  2611                           ;gpio.c: 214: case 2:
  2612                           
  2613                           ;gpio.c: 211: break;
  2614                           
  2615                           
  2616                           ;gpio.c: 215: returnStatus = (((PORTC)&((1<<(enm_pinNumber))))!=0u);
  2617  04B9  3001               	movlw	1
  2618  04BA  00F0               	movwf	??_GPIO_PinRead
  2619  04BB  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  2620  04BC  2CBF               	goto	u1284
  2621  04BD                     u1285:	
  2622  04BD  1003               	clrc
  2623  04BE  0DF0               	rlf	??_GPIO_PinRead,f
  2624  04BF                     u1284:	
  2625  04BF  3EFF               	addlw	-1
  2626  04C0  1D03               	skipz
  2627  04C1  2CBD               	goto	u1285
  2628  04C2  0870               	movf	??_GPIO_PinRead,w
  2629  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2630  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2631  04C5  0507               	andwf	7,w	;volatile
  2632  04C6  2CE2               	goto	L5
  2633  04C7                     l1083:	
  2634                           ;gpio.c: 220: case 3:
  2635                           
  2636                           ;gpio.c: 216: break;
  2637                           
  2638                           
  2639                           ;gpio.c: 221: returnStatus = (((PORTD)&((1<<(enm_pinNumber))))!=0u);
  2640  04C7  3001               	movlw	1
  2641  04C8  00F0               	movwf	??_GPIO_PinRead
  2642  04C9  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  2643  04CA  2CCD               	goto	u1314
  2644  04CB                     u1315:	
  2645  04CB  1003               	clrc
  2646  04CC  0DF0               	rlf	??_GPIO_PinRead,f
  2647  04CD                     u1314:	
  2648  04CD  3EFF               	addlw	-1
  2649  04CE  1D03               	skipz
  2650  04CF  2CCB               	goto	u1315
  2651  04D0  0870               	movf	??_GPIO_PinRead,w
  2652  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2653  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2654  04D3  0508               	andwf	8,w	;volatile
  2655  04D4  2CE2               	goto	L5
  2656  04D5                     l1085:	
  2657                           ;gpio.c: 226: case 4:
  2658                           
  2659                           ;gpio.c: 222: break;
  2660                           
  2661                           
  2662                           ;gpio.c: 227: returnStatus = (((PORTE)&((1<<(enm_pinNumber))))!=0u);
  2663  04D5  3001               	movlw	1
  2664  04D6  00F0               	movwf	??_GPIO_PinRead
  2665  04D7  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  2666  04D8  2CDB               	goto	u1344
  2667  04D9                     u1345:	
  2668  04D9  1003               	clrc
  2669  04DA  0DF0               	rlf	??_GPIO_PinRead,f
  2670  04DB                     u1344:	
  2671  04DB  3EFF               	addlw	-1
  2672  04DC  1D03               	skipz
  2673  04DD  2CD9               	goto	u1345
  2674  04DE  0870               	movf	??_GPIO_PinRead,w
  2675  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  2676  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  2677  04E1  0509               	andwf	9,w	;volatile
  2678  04E2                     L5:	
  2679  04E2  1903               	btfsc	3,2
  2680  04E3  2CE6               	goto	u1350
  2681  04E4  3001               	movlw	1
  2682  04E5  2CE7               	goto	u1360
  2683  04E6                     u1350:	
  2684  04E6  3000               	movlw	0
  2685  04E7                     u1360:	
  2686  04E7  00F1               	movwf	??_GPIO_PinRead+1
  2687  04E8  0871               	movf	??_GPIO_PinRead+1,w
  2688  04E9  00F3               	movwf	GPIO_PinRead@returnStatus
  2689                           
  2690                           ;gpio.c: 229: }
  2691                           
  2692                           ;gpio.c: 228: break;
  2693  04EA  2CFC               	goto	l1091
  2694  04EB                     l1089:	
  2695  04EB  0872               	movf	GPIO_PinRead@var_portNumber_u8,w
  2696                           
  2697                           ; Switch size 1, requested type "space"
  2698                           ; Number of cases is 5, Range of values is 0 to 4
  2699                           ; switch strategies available:
  2700                           ; Name         Instructions Cycles
  2701                           ; simple_byte           16     9 (average)
  2702                           ; direct_byte           23     8 (fixed)
  2703                           ; jumptable            260     6 (fixed)
  2704                           ;	Chosen strategy is simple_byte
  2705  04EC  3A00               	xorlw	0	; case 0
  2706  04ED  1903               	skipnz
  2707  04EE  2C9D               	goto	l1077
  2708  04EF  3A01               	xorlw	1	; case 1
  2709  04F0  1903               	skipnz
  2710  04F1  2CAB               	goto	l1079
  2711  04F2  3A03               	xorlw	3	; case 2
  2712  04F3  1903               	skipnz
  2713  04F4  2CB9               	goto	l1081
  2714  04F5  3A01               	xorlw	1	; case 3
  2715  04F6  1903               	skipnz
  2716  04F7  2CC7               	goto	l1083
  2717  04F8  3A07               	xorlw	7	; case 4
  2718  04F9  1903               	skipnz
  2719  04FA  2CD5               	goto	l1085
  2720  04FB  2CFC               	goto	l1091
  2721  04FC                     l1091:	
  2722                           
  2723                           ;gpio.c: 230: return returnStatus;
  2724  04FC  0873               	movf	GPIO_PinRead@returnStatus,w
  2725  04FD  0008               	return
  2726  04FE                     __end_of_GPIO_PinRead:	
  2727                           
  2728                           	psect	text18
  2729  062B                     __ptext18:	
  2730 ;; *************** function _GPIO_PinDirection *****************
  2731 ;; Defined at:
  2732 ;;		line 60 in file "../00-libfiles/gpio.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  enm_pinNumbe    1    wreg     enum E1088
  2735 ;;  var_pinDirn_    1    0[COMMON] unsigned char 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  2738 ;;  var_portNumb    1    3[COMMON] unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      void 
  2741 ;; Registers used:
  2742 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2748 ;;      Params:         1       0       0       0       0
  2749 ;;      Locals:         2       0       0       0       0
  2750 ;;      Temps:          2       0       0       0       0
  2751 ;;      Totals:         5       0       0       0       0
  2752 ;;Total ram usage:        5 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; This function calls:
  2755 ;;		Nothing
  2756 ;; This function is called by:
  2757 ;;		_LCD_SetUp
  2758 ;;		_lcd_BusyCheck
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           
  2763                           ;psect for function _GPIO_PinDirection
  2764  062B                     _GPIO_PinDirection:	
  2765                           
  2766                           ;incstack = 0
  2767                           ; Regs used in _GPIO_PinDirection: [wreg-fsr0h+status,2+status,0]
  2768                           ;GPIO_PinDirection@enm_pinNumber stored from wreg
  2769  062B  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  2770                           
  2771                           ;gpio.c: 63: uint8_t var_portNumber_u8;
  2772                           ;gpio.c: 66: var_portNumber_u8 = (enm_pinNumber>>3);
  2773  062C  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  2774  062D  00F1               	movwf	??_GPIO_PinDirection
  2775  062E  3003               	movlw	3
  2776  062F                     u895:	
  2777  062F  1003               	clrc
  2778  0630  0CF1               	rrf	??_GPIO_PinDirection,f
  2779  0631  3EFF               	addlw	-1
  2780  0632  1D03               	skipz
  2781  0633  2E2F               	goto	u895
  2782  0634  0871               	movf	??_GPIO_PinDirection,w
  2783  0635  00F2               	movwf	??_GPIO_PinDirection+1
  2784  0636  0872               	movf	??_GPIO_PinDirection+1,w
  2785  0637  00F3               	movwf	GPIO_PinDirection@var_portNumber_u8
  2786                           
  2787                           ;gpio.c: 67: enm_pinNumber = enm_pinNumber & 0x07;
  2788  0638  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  2789  0639  3907               	andlw	7
  2790  063A  00F1               	movwf	??_GPIO_PinDirection
  2791  063B  0871               	movf	??_GPIO_PinDirection,w
  2792  063C  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  2793                           
  2794                           ;gpio.c: 71: switch(var_portNumber_u8)
  2795  063D  2EF2               	goto	l1031
  2796  063E                     l999:	
  2797                           ;gpio.c: 72: {
  2798                           ;gpio.c: 74: case 0:
  2799                           
  2800                           
  2801                           ;gpio.c: 75: ((var_pinDirn_u8)? ((TRISA) |= (1<<(enm_pinNumber))): ((TRISA) &= ~(1<<(enm
      +                          _pinNumber))));
  2802  063E  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  2803  063F  1903               	btfsc	3,2
  2804  0640  2E51               	goto	l1003
  2805  0641  3001               	movlw	1
  2806  0642  00F1               	movwf	??_GPIO_PinDirection
  2807  0643  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  2808  0644  2E47               	goto	u914
  2809  0645                     u915:	
  2810  0645  1003               	clrc
  2811  0646  0DF1               	rlf	??_GPIO_PinDirection,f
  2812  0647                     u914:	
  2813  0647  3EFF               	addlw	-1
  2814  0648  1D03               	skipz
  2815  0649  2E45               	goto	u915
  2816  064A  0871               	movf	??_GPIO_PinDirection,w
  2817  064B  00F2               	movwf	??_GPIO_PinDirection+1
  2818  064C  0872               	movf	??_GPIO_PinDirection+1,w
  2819  064D  1683               	bsf	3,5	;RP0=1, select bank1
  2820  064E  1303               	bcf	3,6	;RP1=0, select bank1
  2821  064F  0485               	iorwf	5,f	;volatile
  2822  0650  0008               	return
  2823  0651                     l1003:	
  2824  0651  3001               	movlw	1
  2825  0652  00F1               	movwf	??_GPIO_PinDirection
  2826  0653  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  2827  0654  2E57               	goto	u924
  2828  0655                     u925:	
  2829  0655  1003               	clrc
  2830  0656  0DF1               	rlf	??_GPIO_PinDirection,f
  2831  0657                     u924:	
  2832  0657  3EFF               	addlw	-1
  2833  0658  1D03               	skipz
  2834  0659  2E55               	goto	u925
  2835  065A  0871               	movf	??_GPIO_PinDirection,w
  2836  065B  3AFF               	xorlw	255
  2837  065C  00F2               	movwf	??_GPIO_PinDirection+1
  2838  065D  0872               	movf	??_GPIO_PinDirection+1,w
  2839  065E  1683               	bsf	3,5	;RP0=1, select bank1
  2840  065F  1303               	bcf	3,6	;RP1=0, select bank1
  2841  0660  0585               	andwf	5,f	;volatile
  2842                           
  2843                           ;gpio.c: 76: break;
  2844  0661  0008               	return
  2845  0662                     l1005:	
  2846                           ;gpio.c: 80: case 1:
  2847                           
  2848                           
  2849                           ;gpio.c: 81: ((var_pinDirn_u8)? ((TRISB) |= (1<<(enm_pinNumber))): ((TRISB) &= ~(1<<(enm
      +                          _pinNumber))));
  2850  0662  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  2851  0663  1903               	btfsc	3,2
  2852  0664  2E75               	goto	l1009
  2853  0665  3001               	movlw	1
  2854  0666  00F1               	movwf	??_GPIO_PinDirection
  2855  0667  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  2856  0668  2E6B               	goto	u944
  2857  0669                     u945:	
  2858  0669  1003               	clrc
  2859  066A  0DF1               	rlf	??_GPIO_PinDirection,f
  2860  066B                     u944:	
  2861  066B  3EFF               	addlw	-1
  2862  066C  1D03               	skipz
  2863  066D  2E69               	goto	u945
  2864  066E  0871               	movf	??_GPIO_PinDirection,w
  2865  066F  00F2               	movwf	??_GPIO_PinDirection+1
  2866  0670  0872               	movf	??_GPIO_PinDirection+1,w
  2867  0671  1683               	bsf	3,5	;RP0=1, select bank1
  2868  0672  1303               	bcf	3,6	;RP1=0, select bank1
  2869  0673  0486               	iorwf	6,f	;volatile
  2870  0674  0008               	return
  2871  0675                     l1009:	
  2872  0675  3001               	movlw	1
  2873  0676  00F1               	movwf	??_GPIO_PinDirection
  2874  0677  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  2875  0678  2E7B               	goto	u954
  2876  0679                     u955:	
  2877  0679  1003               	clrc
  2878  067A  0DF1               	rlf	??_GPIO_PinDirection,f
  2879  067B                     u954:	
  2880  067B  3EFF               	addlw	-1
  2881  067C  1D03               	skipz
  2882  067D  2E79               	goto	u955
  2883  067E  0871               	movf	??_GPIO_PinDirection,w
  2884  067F  3AFF               	xorlw	255
  2885  0680  00F2               	movwf	??_GPIO_PinDirection+1
  2886  0681  0872               	movf	??_GPIO_PinDirection+1,w
  2887  0682  1683               	bsf	3,5	;RP0=1, select bank1
  2888  0683  1303               	bcf	3,6	;RP1=0, select bank1
  2889  0684  0586               	andwf	6,f	;volatile
  2890                           
  2891                           ;gpio.c: 82: break;
  2892  0685  0008               	return
  2893  0686                     l1011:	
  2894                           ;gpio.c: 86: case 2:
  2895                           
  2896                           
  2897                           ;gpio.c: 87: ((var_pinDirn_u8)? ((TRISC) |= (1<<(enm_pinNumber))): ((TRISC) &= ~(1<<(enm
      +                          _pinNumber))));
  2898  0686  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  2899  0687  1903               	btfsc	3,2
  2900  0688  2E99               	goto	l1015
  2901  0689  3001               	movlw	1
  2902  068A  00F1               	movwf	??_GPIO_PinDirection
  2903  068B  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  2904  068C  2E8F               	goto	u974
  2905  068D                     u975:	
  2906  068D  1003               	clrc
  2907  068E  0DF1               	rlf	??_GPIO_PinDirection,f
  2908  068F                     u974:	
  2909  068F  3EFF               	addlw	-1
  2910  0690  1D03               	skipz
  2911  0691  2E8D               	goto	u975
  2912  0692  0871               	movf	??_GPIO_PinDirection,w
  2913  0693  00F2               	movwf	??_GPIO_PinDirection+1
  2914  0694  0872               	movf	??_GPIO_PinDirection+1,w
  2915  0695  1683               	bsf	3,5	;RP0=1, select bank1
  2916  0696  1303               	bcf	3,6	;RP1=0, select bank1
  2917  0697  0487               	iorwf	7,f	;volatile
  2918  0698  0008               	return
  2919  0699                     l1015:	
  2920  0699  3001               	movlw	1
  2921  069A  00F1               	movwf	??_GPIO_PinDirection
  2922  069B  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  2923  069C  2E9F               	goto	u984
  2924  069D                     u985:	
  2925  069D  1003               	clrc
  2926  069E  0DF1               	rlf	??_GPIO_PinDirection,f
  2927  069F                     u984:	
  2928  069F  3EFF               	addlw	-1
  2929  06A0  1D03               	skipz
  2930  06A1  2E9D               	goto	u985
  2931  06A2  0871               	movf	??_GPIO_PinDirection,w
  2932  06A3  3AFF               	xorlw	255
  2933  06A4  00F2               	movwf	??_GPIO_PinDirection+1
  2934  06A5  0872               	movf	??_GPIO_PinDirection+1,w
  2935  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  2936  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  2937  06A8  0587               	andwf	7,f	;volatile
  2938                           
  2939                           ;gpio.c: 88: break;
  2940  06A9  0008               	return
  2941  06AA                     l1017:	
  2942                           ;gpio.c: 92: case 3:
  2943                           
  2944                           
  2945                           ;gpio.c: 93: ((var_pinDirn_u8)? ((TRISD) |= (1<<(enm_pinNumber))): ((TRISD) &= ~(1<<(enm
      +                          _pinNumber))));
  2946  06AA  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  2947  06AB  1903               	btfsc	3,2
  2948  06AC  2EBD               	goto	l1021
  2949  06AD  3001               	movlw	1
  2950  06AE  00F1               	movwf	??_GPIO_PinDirection
  2951  06AF  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  2952  06B0  2EB3               	goto	u1004
  2953  06B1                     u1005:	
  2954  06B1  1003               	clrc
  2955  06B2  0DF1               	rlf	??_GPIO_PinDirection,f
  2956  06B3                     u1004:	
  2957  06B3  3EFF               	addlw	-1
  2958  06B4  1D03               	skipz
  2959  06B5  2EB1               	goto	u1005
  2960  06B6  0871               	movf	??_GPIO_PinDirection,w
  2961  06B7  00F2               	movwf	??_GPIO_PinDirection+1
  2962  06B8  0872               	movf	??_GPIO_PinDirection+1,w
  2963  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  2964  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  2965  06BB  0488               	iorwf	8,f	;volatile
  2966  06BC  0008               	return
  2967  06BD                     l1021:	
  2968  06BD  3001               	movlw	1
  2969  06BE  00F1               	movwf	??_GPIO_PinDirection
  2970  06BF  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  2971  06C0  2EC3               	goto	u1014
  2972  06C1                     u1015:	
  2973  06C1  1003               	clrc
  2974  06C2  0DF1               	rlf	??_GPIO_PinDirection,f
  2975  06C3                     u1014:	
  2976  06C3  3EFF               	addlw	-1
  2977  06C4  1D03               	skipz
  2978  06C5  2EC1               	goto	u1015
  2979  06C6  0871               	movf	??_GPIO_PinDirection,w
  2980  06C7  3AFF               	xorlw	255
  2981  06C8  00F2               	movwf	??_GPIO_PinDirection+1
  2982  06C9  0872               	movf	??_GPIO_PinDirection+1,w
  2983  06CA  1683               	bsf	3,5	;RP0=1, select bank1
  2984  06CB  1303               	bcf	3,6	;RP1=0, select bank1
  2985  06CC  0588               	andwf	8,f	;volatile
  2986                           
  2987                           ;gpio.c: 94: break;
  2988  06CD  0008               	return
  2989  06CE                     l1023:	
  2990                           ;gpio.c: 97: case 4:
  2991                           
  2992                           
  2993                           ;gpio.c: 98: ((var_pinDirn_u8)? ((TRISE) |= (1<<(enm_pinNumber))): ((TRISE) &= ~(1<<(enm
      +                          _pinNumber))));
  2994  06CE  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  2995  06CF  1903               	btfsc	3,2
  2996  06D0  2EE1               	goto	l1027
  2997  06D1  3001               	movlw	1
  2998  06D2  00F1               	movwf	??_GPIO_PinDirection
  2999  06D3  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  3000  06D4  2ED7               	goto	u1034
  3001  06D5                     u1035:	
  3002  06D5  1003               	clrc
  3003  06D6  0DF1               	rlf	??_GPIO_PinDirection,f
  3004  06D7                     u1034:	
  3005  06D7  3EFF               	addlw	-1
  3006  06D8  1D03               	skipz
  3007  06D9  2ED5               	goto	u1035
  3008  06DA  0871               	movf	??_GPIO_PinDirection,w
  3009  06DB  00F2               	movwf	??_GPIO_PinDirection+1
  3010  06DC  0872               	movf	??_GPIO_PinDirection+1,w
  3011  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  3012  06DE  1303               	bcf	3,6	;RP1=0, select bank1
  3013  06DF  0489               	iorwf	9,f	;volatile
  3014  06E0  0008               	return
  3015  06E1                     l1027:	
  3016  06E1  3001               	movlw	1
  3017  06E2  00F1               	movwf	??_GPIO_PinDirection
  3018  06E3  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  3019  06E4  2EE7               	goto	u1044
  3020  06E5                     u1045:	
  3021  06E5  1003               	clrc
  3022  06E6  0DF1               	rlf	??_GPIO_PinDirection,f
  3023  06E7                     u1044:	
  3024  06E7  3EFF               	addlw	-1
  3025  06E8  1D03               	skipz
  3026  06E9  2EE5               	goto	u1045
  3027  06EA  0871               	movf	??_GPIO_PinDirection,w
  3028  06EB  3AFF               	xorlw	255
  3029  06EC  00F2               	movwf	??_GPIO_PinDirection+1
  3030  06ED  0872               	movf	??_GPIO_PinDirection+1,w
  3031  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  3032  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  3033  06F0  0589               	andwf	9,f	;volatile
  3034                           
  3035                           ;gpio.c: 101: }
  3036                           
  3037                           ;gpio.c: 99: break;
  3038  06F1  0008               	return
  3039  06F2                     l1031:	
  3040  06F2  0873               	movf	GPIO_PinDirection@var_portNumber_u8,w
  3041                           
  3042                           ; Switch size 1, requested type "space"
  3043                           ; Number of cases is 5, Range of values is 0 to 4
  3044                           ; switch strategies available:
  3045                           ; Name         Instructions Cycles
  3046                           ; simple_byte           16     9 (average)
  3047                           ; direct_byte           23     8 (fixed)
  3048                           ; jumptable            260     6 (fixed)
  3049                           ;	Chosen strategy is simple_byte
  3050  06F3  3A00               	xorlw	0	; case 0
  3051  06F4  1903               	skipnz
  3052  06F5  2E3E               	goto	l999
  3053  06F6  3A01               	xorlw	1	; case 1
  3054  06F7  1903               	skipnz
  3055  06F8  2E62               	goto	l1005
  3056  06F9  3A03               	xorlw	3	; case 2
  3057  06FA  1903               	skipnz
  3058  06FB  2E86               	goto	l1011
  3059  06FC  3A01               	xorlw	1	; case 3
  3060  06FD  1903               	skipnz
  3061  06FE  2EAA               	goto	l1017
  3062  06FF  3A07               	xorlw	7	; case 4
  3063  0700  1903               	skipnz
  3064  0701  2ECE               	goto	l1023
  3065  0702  2F03               	goto	l50
  3066  0703                     l50:	
  3067  0703  0008               	return
  3068  0704                     __end_of_GPIO_PinDirection:	
  3069                           
  3070                           	psect	text19
  3071  01E9                     __ptext19:	
  3072 ;; *************** function _DELAY_ms *****************
  3073 ;; Defined at:
  3074 ;;		line 75 in file "../00-libfiles/delay.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  ms_count        2    2[COMMON] unsigned int 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;		None
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, status,2, status,0, pclath, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3088 ;;      Params:         2       0       0       0       0
  3089 ;;      Locals:         0       0       0       0       0
  3090 ;;      Temps:          0       0       0       0       0
  3091 ;;      Totals:         2       0       0       0       0
  3092 ;;Total ram usage:        2 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; Hardware stack levels required when called:    1
  3095 ;; This function calls:
  3096 ;;		_DELAY_us
  3097 ;; This function is called by:
  3098 ;;		_LCD_Init
  3099 ;;		_lcd_BusyCheck
  3100 ;;		_lcd_Reset
  3101 ;;		_DELAY_sec
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           
  3106                           ;psect for function _DELAY_ms
  3107  01E9                     _DELAY_ms:	
  3108  01E9                     l1101:	
  3109                           ;delay.c: 77: while (ms_count != 0)
  3110                           
  3111                           ;incstack = 0
  3112                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  3113                           
  3114  01E9  0872               	movf	DELAY_ms@ms_count,w
  3115  01EA  0473               	iorwf	DELAY_ms@ms_count+1,w
  3116  01EB  1903               	btfsc	3,2
  3117  01EC  0008               	return
  3118                           
  3119                           ;delay.c: 78: {
  3120                           ;delay.c: 79: DELAY_us(300u);
  3121  01ED  302C               	movlw	44
  3122  01EE  00F0               	movwf	DELAY_us@us_count
  3123  01EF  3001               	movlw	1
  3124  01F0  00F1               	movwf	DELAY_us@us_count+1
  3125  01F1  120A  118A  21D3  120A  118A  	fcall	_DELAY_us
  3126                           
  3127                           ;delay.c: 80: ms_count--;
  3128  01F6  3001               	movlw	1
  3129  01F7  02F2               	subwf	DELAY_ms@ms_count,f
  3130  01F8  3000               	movlw	0
  3131  01F9  1C03               	skipc
  3132  01FA  03F3               	decf	DELAY_ms@ms_count+1,f
  3133  01FB  02F3               	subwf	DELAY_ms@ms_count+1,f
  3134  01FC  29E9               	goto	l1101
  3135  01FD                     __end_of_DELAY_ms:	
  3136                           
  3137                           	psect	text20
  3138  01D3                     __ptext20:	
  3139 ;; *************** function _DELAY_us *****************
  3140 ;; Defined at:
  3141 ;;		line 56 in file "../00-libfiles/delay.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;  us_count        2    0[COMMON] unsigned int 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;		None
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      void 
  3148 ;; Registers used:
  3149 ;;		wreg, status,2, status,0
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3155 ;;      Params:         2       0       0       0       0
  3156 ;;      Locals:         0       0       0       0       0
  3157 ;;      Temps:          0       0       0       0       0
  3158 ;;      Totals:         2       0       0       0       0
  3159 ;;Total ram usage:        2 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; This function calls:
  3162 ;;		Nothing
  3163 ;; This function is called by:
  3164 ;;		_lcd_BusyCheck
  3165 ;;		_lcd_Reset
  3166 ;;		_lcd_SendCmdSignals
  3167 ;;		_lcd_SendDataSignals
  3168 ;;		_DELAY_ms
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           
  3173                           ;psect for function _DELAY_us
  3174  01D3                     _DELAY_us:	
  3175  01D3                     l993:	
  3176                           ;delay.c: 58: while (us_count != 0)
  3177                           
  3178                           ;incstack = 0
  3179                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  3180                           
  3181  01D3  0870               	movf	DELAY_us@us_count,w
  3182  01D4  0471               	iorwf	DELAY_us@us_count+1,w
  3183  01D5  1903               	btfsc	3,2
  3184  01D6  0008               	return
  3185                           
  3186                           ;delay.c: 59: {
  3187                           ;delay.c: 60: us_count--;
  3188  01D7  3001               	movlw	1
  3189  01D8  02F0               	subwf	DELAY_us@us_count,f
  3190  01D9  3000               	movlw	0
  3191  01DA  1C03               	skipc
  3192  01DB  03F1               	decf	DELAY_us@us_count+1,f
  3193  01DC  02F1               	subwf	DELAY_us@us_count+1,f
  3194  01DD  29D3               	goto	l993
  3195  01DE                     __end_of_DELAY_us:	
  3196  007E                     btemp	set	126	;btemp
  3197  007E                     wtemp	set	126
  3198  007E                     wtemp0	set	126
  3199  0080                     wtemp1	set	128
  3200  0082                     wtemp2	set	130
  3201  0084                     wtemp3	set	132
  3202  0086                     wtemp4	set	134
  3203  0088                     wtemp5	set	136
  3204  007F                     wtemp6	set	127
  3205  007E                     ttemp	set	126
  3206  007E                     ttemp0	set	126
  3207  0081                     ttemp1	set	129
  3208  0084                     ttemp2	set	132
  3209  0087                     ttemp3	set	135
  3210  007F                     ttemp4	set	127
  3211  007E                     ltemp	set	126
  3212  007E                     ltemp0	set	126
  3213  0082                     ltemp1	set	130
  3214  0086                     ltemp2	set	134
  3215  0080                     ltemp3	set	128


Data Sizes:
    Strings     32
    Constant    0
    Data        4
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      40
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_DisplayString@ptr_stringPointer_u8	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_LCD_DisplayString
    _main->_LCD_Init
    _LCD_SetUp->_GPIO_PinDirection
    _lcd_Reset->_lcd_SendHigherNibble
    _LCD_Clear->_LCD_GoToLine
    _LCD_GoToLine->_LCD_CmdWrite
    _LCD_DisplayString->_LCD_DisplayChar
    _LCD_DisplayChar->_LCD_GoToNextLine
    _lcd_DataWrite->_lcd_BusyCheck
    _lcd_DataWrite->_lcd_SendHigherNibble
    _lcd_DataWrite->_lcd_SendLowerNibble
    _lcd_SendDataSignals->_GPIO_PinWrite
    _LCD_GoToNextLine->_LCD_CmdWrite
    _LCD_CmdWrite->_lcd_BusyCheck
    _LCD_CmdWrite->_lcd_SendHigherNibble
    _LCD_CmdWrite->_lcd_SendLowerNibble
    _lcd_SendLowerNibble->_GPIO_PinWrite
    _lcd_SendHigherNibble->_GPIO_PinWrite
    _lcd_SendCmdSignals->_GPIO_PinWrite
    _lcd_BusyCheck->_GPIO_PinDirection
    _lcd_BusyCheck->_GPIO_PinRead
    _lcd_BusyCheck->_GPIO_PinWrite
    _DELAY_ms->_DELAY_us

Critical Paths under _main in BANK0

    _main->_LCD_SetUp

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   57136
                                             10 BANK0     10    10      0
                  _LCD_DisplayString
                           _LCD_Init
                          _LCD_SetUp
 ---------------------------------------------------------------------------------
 (1) _LCD_SetUp                                           12     2     10    2189
                                              5 COMMON     2     2      0
                                              0 BANK0     10     0     10
                  _GPIO_PinDirection
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     2      1   35320
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                           _DELAY_ms
                          _LCD_Clear
                       _LCD_CmdWrite
                          _lcd_Reset
 ---------------------------------------------------------------------------------
 (2) _lcd_Reset                                            0     0      0    5110
                           _DELAY_ms
                           _DELAY_us
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0   19528
                       _LCD_CmdWrite
                       _LCD_GoToLine
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToLine                                         2     2      0    9797
                                             10 COMMON     2     2      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_DisplayString                                    2     2      0   19627
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                    _LCD_DisplayChar
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayChar                                      2     2      0   19528
                                             11 COMMON     2     2      0
                   _LCD_GoToNextLine
                      _lcd_DataWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_DataWrite                                        3     3      0    9731
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                _lcd_SendDataSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (4) _lcd_SendDataSignals                                  0     0      0    2117
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToNextLine                                     1     1      0    9731
                                             10 COMMON     1     1      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (2) _LCD_CmdWrite                                         3     3      0    9731
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (3) _lcd_SendLowerNibble                                  2     2      0    1652
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_SendHigherNibble                                 2     2      0    1652
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_SendCmdSignals                                   0     0      0    2117
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_BusyCheck                                        2     2      0    4221
                                              5 COMMON     2     2      0
                           _DELAY_ms
                           _DELAY_us
                  _GPIO_PinDirection
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _GPIO_PinWrite                                        5     4      1    1564
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (4) _GPIO_PinRead                                         5     5      0     206
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinDirection                                    5     4      1    1087
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (3) _DELAY_ms                                             2     0      2     788
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (4) _DELAY_us                                             2     0      2     553
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_DisplayString
     _LCD_DisplayChar
       _LCD_GoToNextLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _lcd_DataWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendDataSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
   _LCD_Init
     _DELAY_ms
       _DELAY_us
     _LCD_Clear
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
       _LCD_GoToLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
     _lcd_Reset
       _DELAY_ms
         _DELAY_us
       _DELAY_us
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
   _LCD_SetUp
     _GPIO_PinDirection

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      28       5       50.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      36      12        0.0%
ABS                  0      0      36       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat May 07 16:37:05 2016

                                    pc 0002                            __CFG_CP$OFF 0000  
                        ?_LCD_CmdWrite 0070                                     l50 0703  
                                   l80 07DC                                     fsr 0004  
                        ?_LCD_GoToLine 0070                            __CFG_LVP$ON 0000  
                                  l140 03E7                                    l226 0439  
                                  l180 051E                                    l993 01D3  
                                  l999 063E                           __CFG_CPD$OFF 0000  
                                  u914 0647                                    u915 0645  
                                  u924 0657                                    u925 0655  
                                  u944 066B                                    u945 0669  
                                  u954 067B                                    u955 0679  
                                  u974 068F                                    u975 068D  
                                  u895 062F                                    u984 069F  
                                  u985 069D                                    fsr0 0004  
                                  indf 0000                           __CFG_FOSC$HS 0000  
              __end_of_LCD_DisplayChar 0245                                   l1011 0686  
                                 l1003 0651                                   l1101 01E9  
                                 l1021 06BD                                   l1005 0662  
                                 l1023 06CE                                   l1015 0699  
                                 l1031 06F2                                   l1017 06AA  
                                 l1009 0675                                   l1041 072A  
                                 l1121 0577                                   l1027 06E1  
                                 l1043 073B                                   l1061 07A7  
                                 l1053 0772                                   l1037 0717  
                                 l1125 0582                                   l1213 0231  
                                 l1055 0783                                   l1047 074E  
                                 l1143 02D3                                   l1215 0236  
                                 l1231 05C4                                   l1081 04B9  
                                 l1065 07BA                                   l1049 075F  
                                 l1233 05C9                                   l1083 04C7  
                                 l1091 04FC                                   l1059 0796  
                                 l1147 02EB                                   l1243 05EF  
                                 l1085 04D5                                   l1077 049D  
                                 l1069 07CB                                   l1181 0308  
                                 l1261 03C5                                   l1079 04AB  
                                 l1089 04EB                                   l1185 0320  
                                 l1267 03D6                                   l1277 0248  
                                 STR_1 0009                                   STR_2 001A  
                                 u1004 06B3                                   u1005 06B1  
                                 u1014 06C3                                   u1015 06C1  
                                 u1104 0744                                   u1105 0742  
                                 u1034 06D7                                   u1114 0754  
                                 u1035 06D5                                   u1115 0752  
                                 u1044 06E7                                   u1204 07C0  
                                 u1045 06E5                                   u1205 07BE  
                                 u1134 0768                                   u1215 048E  
                                 u1135 0766                                   u1055 0708  
                                 u1224 04A3                                   u1144 0778  
                                 u1225 04A1                                   u1145 0776  
                                 u1314 04CD                                   u1074 0720  
                                 u1410 036F                                   u1315 04CB  
                                 u1075 071E                                   u1164 078C  
                                 u1084 0730                                   u1500 0330  
                                 u1420 0370                                   u1165 078A  
                                 u1085 072E                                   u1350 04E6  
                                 u1254 04B1                                   u1174 079C  
                                 u1510 033F                                   u1430 037F  
                                 u1255 04AF                                   u1175 079A  
                                 u1360 04E7                                   u1344 04DB  
                                 u1520 0340                                   u1440 0380  
                                 u1345 04D9                                   u1194 07B0  
                                 u1530 034F                                   u1450 038F  
                                 u1195 07AE                                   u1284 04BF  
                                 u1540 0350                                   u1460 0390  
                                 u1285 04BD                                   u1550 035F  
                                 u1470 039F                                   u1560 0360  
                                 u1480 03A0                                   u1625 0316  
                                 u1490 032F                                   u1585 02E1  
                         __CFG_WRT$OFF 0000                                   _main 03F1  
                   __size_of_LCD_Clear 000B                                   btemp 007E  
                                 ltemp 007E                     __size_of_LCD_SetUp 00A1  
                                 start 0000                                   ttemp 007E  
                                 wtemp 007E                       __end_of_DELAY_ms 01FD  
                     __end_of_DELAY_us 01DE                          ?_GPIO_PinRead 0070  
                       ??_LCD_CmdWrite 0077                            LCD_SetUp@D0 0022  
                          LCD_SetUp@D1 0023                            LCD_SetUp@D2 0024  
                          LCD_SetUp@D3 0025                            LCD_SetUp@D4 0026  
                          LCD_SetUp@D5 0027                            LCD_SetUp@D6 0028  
                          LCD_SetUp@D7 0029                            LCD_SetUp@EN 0021  
                          LCD_SetUp@RS 0076                            LCD_SetUp@RW 0020  
                       ??_LCD_GoToLine 007A                          _GPIO_PinWrite 0704  
                     __end_of_LCD_Init 03F1                LCD_CmdWrite@v_lcdCmd_u8 0079  
                                ?_main 0070                          __CFG_WDTE$OFF 0000  
                                _PORTA 0005                                  _PORTB 0006  
                                _PORTC 0007                                  _PORTD 0008  
                                _PORTE 0009                                  _TRISA 0085  
                                _TRISB 0086                                  _TRISC 0087  
                                _TRISD 0088                                  _TRISE 0089  
LCD_DisplayString@ptr_stringPointer_u8 0020                         __CFG_BOREN$OFF 0000  
                                pclath 000A                                  ltemp0 007E  
                                ltemp1 0082                                  ltemp2 0086  
                                ltemp3 0080           __end_of_lcd_SendHigherNibble 036A  
                                ttemp0 007E                                  ttemp1 0081  
                                ttemp2 0084                                  ttemp3 0087  
                                ttemp4 007F                                  status 0003  
                                wtemp0 007E                                  wtemp1 0080  
                                wtemp2 0082                                  wtemp3 0084  
                                wtemp4 0086                                  wtemp5 0088  
                                wtemp6 007F                         ??_GPIO_PinRead 0070  
                      __initialization 07DD             GPIO_PinWrite@enm_pinNumber 0074  
                         __end_of_main 043A                         ?_GPIO_PinWrite 0070  
                    _GPIO_PinDirection 062B                                 ??_main 002A  
          __size_of_lcd_SendCmdSignals 002D                      __end_of_LCD_Clear 01E9  
                   ?_GPIO_PinDirection 0070                      __end_of_LCD_SetUp 062B  
                     ?_LCD_DisplayChar 0070            LCD_DisplayChar@v_lcdData_u8 007C  
                  ??_GPIO_PinDirection 0071                  lcd_BusyCheck@busyflag 0076  
                       __CFG_PWRTE$OFF 0000              GPIO_PinRead@enm_pinNumber 0074  
            __end_of_GPIO_PinDirection 0704         GPIO_PinDirection@enm_pinNumber 0074  
                     DELAY_ms@ms_count 0072                      ?_LCD_GoToNextLine 0070  
                            ?_DELAY_ms 0072                              ?_DELAY_us 0070  
          __end_of_lcd_SendLowerNibble 03AA                     ??_LCD_GoToNextLine 007A  
                 __end_of_LCD_CmdWrite 02F5                   __end_of_LCD_GoToLine 0226  
          lcd_SendLowerNibble@dataByte 0076                __end_of__initialization 07FC  
                            ?_LCD_Init 007C                        ??_GPIO_PinWrite 0071  
                       __pcstackCOMMON 0070                           __pidataBANK0 01C7  
                __end_of_lcd_DataWrite 032A                   _lcd_SendHigherNibble 032A  
                   __size_of_lcd_Reset 004F           __size_of_lcd_SendDataSignals 002E  
                           ??_DELAY_ms 0074                             ??_DELAY_us 0072  
                 __end_of_GPIO_PinRead 04FE         GPIO_PinWrite@var_portNumber_u8 0073  
                           __pbssBANK0 0034                  __end_of_lcd_BusyCheck 058A  
         lcd_SendHigherNibble@dataByte 0076           GPIO_PinWrite@var_pinValue_u8 0070  
                           ??_LCD_Init 007D                             __pmaintext 03F1  
           __size_of_GPIO_PinDirection 00D9                  ?_lcd_SendHigherNibble 0070  
                     DELAY_us@us_count 0070                             __stringtab 0003  
                    __end_of_lcd_Reset 0489              LCD_Init@v_lcdNoOfLines_u8 0020  
                              __ptext1 058A                                __ptext2 03AA  
                              __ptext3 043A                                __ptext4 01DE  
                              __ptext5 0211                                __ptext6 0245  
                              __ptext7 0226                                __ptext8 02F5  
                              __ptext9 0292                  __size_of_LCD_CmdWrite 0035  
                            _LCDConfig 0034                  __size_of_LCD_GoToLine 0015  
                            _LCD_Clear 01DE                              _LCD_SetUp 058A  
                              clrloop0 01CC                   end_of_initialization 07FC  
         LCD_Init@v_MaxCharsPerLine_u8 007C                 ??_lcd_SendHigherNibble 0075  
           __end_of_lcd_SendCmdSignals 0292                           _LCD_CmdWrite 02C0  
                         _LCD_GoToLine 0211                  __size_of_GPIO_PinRead 0075  
                           ?_LCD_Clear 0070                             ?_LCD_SetUp 0020  
                    __size_of_DELAY_ms 0014                      __size_of_DELAY_us 000B  
             __size_of_LCD_DisplayChar 001F                      __size_of_LCD_Init 0047  
            __size_of_LCD_GoToNextLine 0014                    _lcd_SendDataSignals 0292  
   GPIO_PinDirection@var_portNumber_u8 0073                           _GPIO_PinRead 0489  
             _ARR_LcdLineNumAddress_U8 0044                    start_initialization 07DD  
                 ?_lcd_SendDataSignals 0070                 _v_LcdTrackCursorPos_U8 0042  
        GPIO_PinRead@var_portNumber_u8 0072           __size_of_lcd_SendLowerNibble 0040  
      GPIO_PinDirection@var_pinDirn_u8 0070                  __end_of_GPIO_PinWrite 07DD  
                          __pdataBANK0 0044                  ??_lcd_SendDataSignals 0075  
                 _v_LcdTrackLineNum_U8 0043                              ___latbits 0002  
                lcd_DataWrite@dataByte 0079                          __pcstackBANK0 0020  
                          ??_LCD_Clear 007C                            ??_LCD_SetUp 0075  
               __size_of_lcd_DataWrite 0035            LCD_GoToLine@v_lineNumber_u8 007B  
                            _lcd_Reset 043A                      ??_LCD_DisplayChar 007B  
                            __pstrings 0003                 __size_of_lcd_BusyCheck 008C  
                    _LCD_DisplayString 0245                               _DELAY_ms 01E9  
                             _DELAY_us 01D3                     ?_LCD_DisplayString 0070  
                             _LCD_Init 03AA                    ??_LCD_DisplayString 007D  
                            clear_ram0 01CB                       _LCD_GoToNextLine 01FD  
                           ?_lcd_Reset 0070                          _lcd_DataWrite 02F5  
             GPIO_PinRead@returnStatus 0073                            __stringbase 0008  
            __end_of_LCD_DisplayString 0265                     _lcd_SendCmdSignals 0265  
                        _lcd_BusyCheck 04FE                    ?_lcd_SendCmdSignals 0070  
                       ?_lcd_DataWrite 0070                     __end_of__stringtab 0009  
                 ??_lcd_SendCmdSignals 0075          __size_of_lcd_SendHigherNibble 0040  
                  _lcd_SendLowerNibble 036A                               __ptext10 01FD  
                             __ptext11 02C0                               __ptext20 01D3  
                             __ptext12 036A                               __ptext13 032A  
                             __ptext14 0265                               __ptext15 04FE  
                             __ptext16 0704                               __ptext17 0489  
                             __ptext18 062B                               __ptext19 01E9  
                       ?_lcd_BusyCheck 0070                          __size_of_main 0049  
                 ?_lcd_SendLowerNibble 0070                            ??_lcd_Reset 0077  
           __size_of_LCD_DisplayString 0020                  ??_lcd_SendLowerNibble 0075  
                      _LCD_DisplayChar 0226                              stringcode 0003  
                      ??_lcd_DataWrite 0077            __end_of_lcd_SendDataSignals 02C0  
             __end_of_LCD_GoToNextLine 0211                               stringdir 0003  
                             stringtab 0003                        ??_lcd_BusyCheck 0075  
               __size_of_GPIO_PinWrite 00D9  
