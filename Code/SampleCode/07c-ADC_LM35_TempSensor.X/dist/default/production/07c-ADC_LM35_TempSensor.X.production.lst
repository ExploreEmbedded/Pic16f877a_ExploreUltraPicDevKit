

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Feb 20 20:22:48 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	text19,local,class=CODE,merge=1,delta=2
    28                           	psect	text20,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  0008                     	;# 
    39  0009                     	;# 
    40  000A                     	;# 
    41  000B                     	;# 
    42  000C                     	;# 
    43  000D                     	;# 
    44  000E                     	;# 
    45  000E                     	;# 
    46  000F                     	;# 
    47  0010                     	;# 
    48  0011                     	;# 
    49  0012                     	;# 
    50  0013                     	;# 
    51  0014                     	;# 
    52  0015                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0017                     	;# 
    56  0018                     	;# 
    57  0019                     	;# 
    58  001A                     	;# 
    59  001B                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  001D                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  0081                     	;# 
    66  0085                     	;# 
    67  0086                     	;# 
    68  0087                     	;# 
    69  0088                     	;# 
    70  0089                     	;# 
    71  008C                     	;# 
    72  008D                     	;# 
    73  008E                     	;# 
    74  0091                     	;# 
    75  0092                     	;# 
    76  0093                     	;# 
    77  0094                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009E                     	;# 
    83  009F                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  010E                     	;# 
    87  010F                     	;# 
    88  018C                     	;# 
    89  018D                     	;# 
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  0081                     	;# 
   126  0085                     	;# 
   127  0086                     	;# 
   128  0087                     	;# 
   129  0088                     	;# 
   130  0089                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0098                     	;# 
   139  0099                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  001F                     _ADCON0	set	31
   211  001E                     _ADRESH	set	30
   212  001A                     _RCREG	set	26
   213  0018                     _RCSTA	set	24
   214  0019                     _TXREG	set	25
   215  00F8                     _ADON	set	248
   216  00FA                     _GO	set	250
   217  00FA                     _GO_DONE	set	250
   218  0065                     _RCIF	set	101
   219  0064                     _TXIF	set	100
   220  009F                     _ADCON1	set	159
   221  009E                     _ADRESL	set	158
   222  0099                     _SPBRG	set	153
   223  0087                     _TRISC	set	135
   224  0098                     _TXSTA	set	152
   225                           
   226                           	psect	strings
   227  0800                     __pstrings:	
   228  0800                     stringtab:	
   229  0800                     __stringtab:	
   230  0800                     stringcode:	
   231                           ;	String table - string pointers are 1 byte each
   232                           
   233  0800                     stringdir:	
   234  0800  3008               	movlw	high stringdir
   235  0801  008A               	movwf	10
   236  0802  0804               	movf	4,w
   237  0803  0A84               	incf	4,f
   238  0804  0782               	addwf	2,f
   239  0805                     __stringbase:	
   240  0805  3400               	retlw	0
   241  0806                     __end_of__stringtab:	
   242  0806                     STR_1:	
   243  0806  3441               	retlw	65	;'A'
   244  0807  3444               	retlw	68	;'D'
   245  0808  3443               	retlw	67	;'C'
   246  0809  3430               	retlw	48	;'0'
   247  080A  3420               	retlw	32	;' '
   248  080B  3456               	retlw	86	;'V'
   249  080C  3461               	retlw	97	;'a'
   250  080D  346C               	retlw	108	;'l'
   251  080E  3475               	retlw	117	;'u'
   252  080F  3465               	retlw	101	;'e'
   253  0810  343A               	retlw	58	;':'
   254  0811  3425               	retlw	37	;'%'
   255  0812  3434               	retlw	52	;'4'
   256  0813  3464               	retlw	100	;'d'
   257  0814  3420               	retlw	32	;' '
   258  0815  3420               	retlw	32	;' '
   259  0816  3445               	retlw	69	;'E'
   260  0817  3471               	retlw	113	;'q'
   261  0818  3475               	retlw	117	;'u'
   262  0819  3469               	retlw	105	;'i'
   263  081A  3476               	retlw	118	;'v'
   264  081B  3461               	retlw	97	;'a'
   265  081C  346C               	retlw	108	;'l'
   266  081D  3465               	retlw	101	;'e'
   267  081E  346E               	retlw	110	;'n'
   268  081F  3474               	retlw	116	;'t'
   269  0820  3420               	retlw	32	;' '
   270  0821  3454               	retlw	84	;'T'
   271  0822  3465               	retlw	101	;'e'
   272  0823  346D               	retlw	109	;'m'
   273  0824  3470               	retlw	112	;'p'
   274  0825  3465               	retlw	101	;'e'
   275  0826  3472               	retlw	114	;'r'
   276  0827  3461               	retlw	97	;'a'
   277  0828  3474               	retlw	116	;'t'
   278  0829  3475               	retlw	117	;'u'
   279  082A  3472               	retlw	114	;'r'
   280  082B  3465               	retlw	101	;'e'
   281  082C  343A               	retlw	58	;':'
   282  082D  3425               	retlw	37	;'%'
   283  082E  3466               	retlw	102	;'f'
   284  082F  340A               	retlw	10
   285  0830  340D               	retlw	13
   286  0831  3400               	retlw	0
   287                           
   288                           ; #config settings
   289  0000                     
   290                           	psect	cinit
   291  07FC                     start_initialization:	
   292  07FC                     __initialization:	
   293  07FC                     end_of_initialization:	
   294                           ;End of C runtime variable initialization code
   295                           
   296  07FC                     __end_of__initialization:	
   297  07FC  0183               	clrf	3
   298  07FD  120A  158A  2F4D   	ljmp	_main	;jump to C main() function
   299                           
   300                           	psect	cstackCOMMON
   301  0070                     __pcstackCOMMON:	
   302  0070                     ?_UART_TxChar:	
   303  0070                     ??_UART_TxChar:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_UART_TxString:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_DELAY_us:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ?_ADC_Init:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ??_ADC_Init:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ?_main:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?___ftpack:	
   322                           ; 2 bytes @ 0x0
   323                           
   324  0070                     ?___lldiv:	
   325                           ; 3 bytes @ 0x0
   326                           
   327  0070                     UART_TxChar@var_uartData_u8:	
   328                           ; 4 bytes @ 0x0
   329                           
   330  0070                     DELAY_us@us_count:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ___ftpack@arg:	
   334                           ; 2 bytes @ 0x0
   335                           
   336  0070                     ___lldiv@divisor:	
   337                           ; 3 bytes @ 0x0
   338                           
   339                           
   340                           ; 4 bytes @ 0x0
   341  0070                     	ds	1
   342  0071                     ??_UART_TxString:	
   343                           
   344                           ; 1 bytes @ 0x1
   345  0071                     	ds	1
   346  0072                     ??_DELAY_us:	
   347  0072                     ?_ADC_GetAdcValue:	
   348                           ; 1 bytes @ 0x2
   349                           
   350  0072                     UART_TxString@ptr_string:	
   351                           ; 2 bytes @ 0x2
   352                           
   353                           
   354                           ; 1 bytes @ 0x2
   355  0072                     	ds	1
   356  0073                     ___ftpack@exp:	
   357                           
   358                           ; 1 bytes @ 0x3
   359  0073                     	ds	1
   360  0074                     ??_ADC_GetAdcValue:	
   361  0074                     ___ftpack@sign:	
   362                           ; 1 bytes @ 0x4
   363                           
   364  0074                     ___lldiv@dividend:	
   365                           ; 1 bytes @ 0x4
   366                           
   367                           
   368                           ; 4 bytes @ 0x4
   369  0074                     	ds	1
   370  0075                     ??___ftpack:	
   371  0075                     ADC_GetAdcValue@var_adcChannel_u8:	
   372                           ; 1 bytes @ 0x5
   373                           
   374                           
   375                           ; 1 bytes @ 0x5
   376  0075                     	ds	3
   377  0078                     ??___lldiv:	
   378  0078                     ?___awtoft:	
   379                           ; 1 bytes @ 0x8
   380                           
   381  0078                     ?___ftmul:	
   382                           ; 3 bytes @ 0x8
   383                           
   384  0078                     ?___lltoft:	
   385                           ; 3 bytes @ 0x8
   386                           
   387  0078                     ___awtoft@c:	
   388                           ; 3 bytes @ 0x8
   389                           
   390  0078                     ___ftmul@f1:	
   391                           ; 2 bytes @ 0x8
   392                           
   393  0078                     ___lltoft@c:	
   394                           ; 3 bytes @ 0x8
   395                           
   396                           
   397                           ; 4 bytes @ 0x8
   398  0078                     	ds	1
   399  0079                     ___lldiv@quotient:	
   400                           
   401                           ; 4 bytes @ 0x9
   402  0079                     	ds	2
   403  007B                     ??___awtoft:	
   404  007B                     ___ftmul@f2:	
   405                           ; 1 bytes @ 0xB
   406                           
   407                           
   408                           ; 3 bytes @ 0xB
   409  007B                     	ds	1
   410  007C                     ??___lltoft:	
   411                           
   412                           ; 1 bytes @ 0xC
   413  007C                     	ds	1
   414  007D                     ___awtoft@sign:	
   415  007D                     ___lldiv@counter:	
   416                           ; 1 bytes @ 0xD
   417                           
   418  007D                     ___lltoft@exp:	
   419                           ; 1 bytes @ 0xD
   420                           
   421                           
   422                           ; 1 bytes @ 0xD
   423  007D                     	ds	1
   424  007E                     ??_UART_Init:	
   425  007E                     ??_main:	
   426                           ; 1 bytes @ 0xE
   427                           
   428  007E                     ??___ftneg:	
   429                           ; 1 bytes @ 0xE
   430                           
   431                           
   432                           	psect	cstackBANK0
   433  0020                     __pcstackBANK0:	
   434                           ; 1 bytes @ 0xE
   435                           
   436  0020                     ?_UART_SetBaudRate:	
   437  0020                     ?___bmul:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0020                     ??___ftmul:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0020                     ?___ftdiv:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0020                     ?___ftneg:	
   447                           ; 3 bytes @ 0x0
   448                           
   449  0020                     ___bmul@multiplicand:	
   450                           ; 3 bytes @ 0x0
   451                           
   452  0020                     ___ftdiv@f2:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0020                     ___ftneg@f1:	
   456                           ; 3 bytes @ 0x0
   457                           
   458  0020                     UART_SetBaudRate@var_baudRate_u32:	
   459                           ; 3 bytes @ 0x0
   460                           
   461                           
   462                           ; 4 bytes @ 0x0
   463  0020                     	ds	1
   464  0021                     ??___bmul:	
   465                           
   466                           ; 1 bytes @ 0x1
   467  0021                     	ds	1
   468  0022                     ___bmul@product:	
   469                           
   470                           ; 1 bytes @ 0x2
   471  0022                     	ds	1
   472  0023                     ?___ftadd:	
   473  0023                     ___bmul@multiplier:	
   474                           ; 3 bytes @ 0x3
   475                           
   476  0023                     ___ftadd@f1:	
   477                           ; 1 bytes @ 0x3
   478                           
   479  0023                     ___ftdiv@f1:	
   480                           ; 3 bytes @ 0x3
   481                           
   482                           
   483                           ; 3 bytes @ 0x3
   484  0023                     	ds	1
   485  0024                     ??_UART_SetBaudRate:	
   486  0024                     ?_UART_TxNumber:	
   487                           ; 1 bytes @ 0x4
   488                           
   489  0024                     ___ftmul@exp:	
   490                           ; 1 bytes @ 0x4
   491                           
   492  0024                     UART_TxNumber@v_number_u32:	
   493                           ; 1 bytes @ 0x4
   494                           
   495                           
   496                           ; 4 bytes @ 0x4
   497  0024                     	ds	1
   498  0025                     ___ftmul@f3_as_product:	
   499                           
   500                           ; 3 bytes @ 0x5
   501  0025                     	ds	1
   502  0026                     ??___ftdiv:	
   503  0026                     ___ftadd@f2:	
   504                           ; 1 bytes @ 0x6
   505                           
   506                           
   507                           ; 3 bytes @ 0x6
   508  0026                     	ds	2
   509  0028                     UART_TxNumber@v_numOfDigitsToTransmit_u8:	
   510  0028                     ___ftmul@cntr:	
   511                           ; 1 bytes @ 0x8
   512                           
   513                           
   514                           ; 1 bytes @ 0x8
   515  0028                     	ds	1
   516  0029                     ??_UART_TxNumber:	
   517  0029                     ??___ftadd:	
   518                           ; 1 bytes @ 0x9
   519                           
   520  0029                     ___ftmul@sign:	
   521                           ; 1 bytes @ 0x9
   522                           
   523                           
   524                           ; 1 bytes @ 0x9
   525  0029                     	ds	1
   526  002A                     ?___fttol:	
   527  002A                     ___ftdiv@cntr:	
   528                           ; 4 bytes @ 0xA
   529                           
   530  002A                     ___fttol@f1:	
   531                           ; 1 bytes @ 0xA
   532                           
   533                           
   534                           ; 3 bytes @ 0xA
   535  002A                     	ds	1
   536  002B                     ___ftdiv@f3:	
   537                           
   538                           ; 3 bytes @ 0xB
   539  002B                     	ds	1
   540  002C                     UART_SetBaudRate@RegValue:	
   541                           
   542                           ; 4 bytes @ 0xC
   543  002C                     	ds	1
   544  002D                     ___ftadd@sign:	
   545                           
   546                           ; 1 bytes @ 0xD
   547  002D                     	ds	1
   548  002E                     ??___fttol:	
   549  002E                     ___ftadd@exp2:	
   550                           ; 1 bytes @ 0xE
   551                           
   552  002E                     ___ftdiv@exp:	
   553                           ; 1 bytes @ 0xE
   554                           
   555                           
   556                           ; 1 bytes @ 0xE
   557  002E                     	ds	1
   558  002F                     ___ftadd@exp1:	
   559  002F                     ___ftdiv@sign:	
   560                           ; 1 bytes @ 0xF
   561                           
   562                           
   563                           ; 1 bytes @ 0xF
   564  002F                     	ds	1
   565  0030                     ?_UART_Init:	
   566  0030                     UART_Init@var_baudRate_u32:	
   567                           ; 1 bytes @ 0x10
   568                           
   569                           
   570                           ; 4 bytes @ 0x10
   571  0030                     	ds	2
   572  0032                     ___fttol@sign1:	
   573                           
   574                           ; 1 bytes @ 0x12
   575  0032                     	ds	1
   576  0033                     ___fttol@lval:	
   577                           
   578                           ; 4 bytes @ 0x13
   579  0033                     	ds	2
   580  0035                     UART_TxNumber@a:	
   581                           
   582                           ; 10 bytes @ 0x15
   583  0035                     	ds	2
   584  0037                     ___fttol@exp1:	
   585                           
   586                           ; 1 bytes @ 0x17
   587  0037                     	ds	8
   588  003F                     _UART_TxNumber$63:	
   589                           
   590                           ; 2 bytes @ 0x1F
   591  003F                     	ds	2
   592  0041                     UART_TxNumber@v_numericSystem_u8:	
   593                           
   594                           ; 1 bytes @ 0x21
   595  0041                     	ds	1
   596  0042                     UART_TxNumber@i:	
   597                           
   598                           ; 1 bytes @ 0x22
   599  0042                     	ds	1
   600  0043                     ?_UART_TxFloatNumber:	
   601  0043                     UART_TxFloatNumber@v_floatNumber_f32:	
   602                           ; 1 bytes @ 0x23
   603                           
   604                           
   605                           ; 3 bytes @ 0x23
   606  0043                     	ds	3
   607  0046                     ??_UART_TxFloatNumber:	
   608                           
   609                           ; 1 bytes @ 0x26
   610  0046                     	ds	1
   611  0047                     UART_TxFloatNumber@v_tempNumber_u32:	
   612                           
   613                           ; 4 bytes @ 0x27
   614  0047                     	ds	4
   615  004B                     ?_UART_Printf:	
   616                           
   617                           ; 1 bytes @ 0x2B
   618  004B                     	ds	5
   619  0050                     ??_UART_Printf:	
   620                           
   621                           ; 1 bytes @ 0x30
   622  0050                     	ds	2
   623  0052                     UART_Printf@v_floatNum_f32:	
   624                           
   625                           ; 3 bytes @ 0x32
   626  0052                     	ds	3
   627  0055                     UART_Printf@str:	
   628                           
   629                           ; 1 bytes @ 0x35
   630  0055                     	ds	1
   631  0056                     UART_Printf@argList:	
   632                           
   633                           ; 1 bytes @ 0x36
   634  0056                     	ds	1
   635  0057                     UART_Printf@v_num_s32:	
   636                           
   637                           ; 4 bytes @ 0x37
   638  0057                     	ds	4
   639  005B                     UART_Printf@v_num_s16:	
   640                           
   641                           ; 2 bytes @ 0x3B
   642  005B                     	ds	2
   643  005D                     UART_Printf@v_num_u32:	
   644                           
   645                           ; 4 bytes @ 0x3D
   646  005D                     	ds	4
   647  0061                     UART_Printf@v_num_u16:	
   648                           
   649                           ; 2 bytes @ 0x41
   650  0061                     	ds	2
   651  0063                     UART_Printf@ptr:	
   652                           
   653                           ; 1 bytes @ 0x43
   654  0063                     	ds	1
   655  0064                     UART_Printf@ch:	
   656                           
   657                           ; 1 bytes @ 0x44
   658  0064                     	ds	1
   659  0065                     UART_Printf@v_numOfDigitsToTransmit_u8:	
   660                           
   661                           ; 1 bytes @ 0x45
   662  0065                     	ds	1
   663  0066                     UART_Printf@argp:	
   664                           
   665                           ; 1 bytes @ 0x46
   666  0066                     	ds	1
   667  0067                     main@temp:	
   668                           
   669                           ; 3 bytes @ 0x47
   670  0067                     	ds	3
   671  006A                     main@adcValue:	
   672                           
   673                           ; 2 bytes @ 0x4A
   674  006A                     	ds	2
   675                           
   676                           	psect	maintext
   677  0F4D                     __pmaintext:	
   678 ;;
   679 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   680 ;;
   681 ;; *************** function _main *****************
   682 ;; Defined at:
   683 ;;		line 41 in file "main.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  temp            3   71[BANK0 ] float 
   688 ;;  adcValue        2   74[BANK0 ] int 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  2  172[None  ] int 
   691 ;; Registers used:
   692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : B00/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   698 ;;      Params:         0       0       0       0       0
   699 ;;      Locals:         0       5       0       0       0
   700 ;;      Temps:          0       0       0       0       0
   701 ;;      Totals:         0       5       0       0       0
   702 ;;Total ram usage:        5 bytes
   703 ;; Hardware stack levels required when called:    4
   704 ;; This function calls:
   705 ;;		_ADC_GetAdcValue
   706 ;;		_ADC_Init
   707 ;;		_UART_Init
   708 ;;		_UART_Printf
   709 ;;		___awtoft
   710 ;;		___ftdiv
   711 ;; This function is called by:
   712 ;;		Startup code after reset
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           
   717                           ;psect for function _main
   718  0F4D                     _main:	
   719                           
   720                           ;main.c: 43: int adcValue;
   721                           ;main.c: 44: float temp;
   722                           ;main.c: 46: ADC_Init();
   723                           
   724                           ;incstack = 0
   725                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   726  0F4D  120A  158A  26A4  120A  158A  	fcall	_ADC_Init
   727                           
   728                           ;main.c: 47: UART_Init(9600);
   729  0F52  3000               	movlw	0
   730  0F53  1283               	bcf	3,5	;RP0=0, select bank0
   731  0F54  1303               	bcf	3,6	;RP1=0, select bank0
   732  0F55  00B3               	movwf	UART_Init@var_baudRate_u32+3
   733  0F56  3000               	movlw	0
   734  0F57  00B2               	movwf	UART_Init@var_baudRate_u32+2
   735  0F58  3025               	movlw	37
   736  0F59  00B1               	movwf	UART_Init@var_baudRate_u32+1
   737  0F5A  3080               	movlw	128
   738  0F5B  00B0               	movwf	UART_Init@var_baudRate_u32
   739  0F5C  120A  158A  26F2  120A  158A  	fcall	_UART_Init
   740  0F61                     l173:	
   741                           ;main.c: 49: while(1)
   742                           
   743                           
   744                           ;main.c: 50: {
   745                           ;main.c: 51: adcValue = ADC_GetAdcValue(0);
   746  0F61  3000               	movlw	0
   747  0F62  120A  158A  2729  120A  158A  	fcall	_ADC_GetAdcValue
   748  0F67  0873               	movf	?_ADC_GetAdcValue+1,w
   749  0F68  1283               	bcf	3,5	;RP0=0, select bank0
   750  0F69  1303               	bcf	3,6	;RP1=0, select bank0
   751  0F6A  00EB               	movwf	main@adcValue+1
   752  0F6B  0872               	movf	?_ADC_GetAdcValue,w
   753  0F6C  00EA               	movwf	main@adcValue
   754                           
   755                           ;main.c: 58: temp = adcValue/2.0;
   756  0F6D  3000               	movlw	0
   757  0F6E  00A0               	movwf	___ftdiv@f2
   758  0F6F  3000               	movlw	0
   759  0F70  00A1               	movwf	___ftdiv@f2+1
   760  0F71  3040               	movlw	64
   761  0F72  00A2               	movwf	___ftdiv@f2+2
   762  0F73  086B               	movf	main@adcValue+1,w
   763  0F74  00F9               	movwf	___awtoft@c+1
   764  0F75  086A               	movf	main@adcValue,w
   765  0F76  00F8               	movwf	___awtoft@c
   766  0F77  120A  158A  2708  120A  158A  	fcall	___awtoft
   767  0F7C  0878               	movf	?___awtoft,w
   768  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
   769  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
   770  0F7F  00A3               	movwf	___ftdiv@f1
   771  0F80  0879               	movf	?___awtoft+1,w
   772  0F81  00A4               	movwf	___ftdiv@f1+1
   773  0F82  087A               	movf	?___awtoft+2,w
   774  0F83  00A5               	movwf	___ftdiv@f1+2
   775  0F84  120A  118A  2246  120A  158A  	fcall	___ftdiv
   776  0F89  1283               	bcf	3,5	;RP0=0, select bank0
   777  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
   778  0F8B  0820               	movf	?___ftdiv,w
   779  0F8C  00E7               	movwf	main@temp
   780  0F8D  0821               	movf	?___ftdiv+1,w
   781  0F8E  00E8               	movwf	main@temp+1
   782  0F8F  0822               	movf	?___ftdiv+2,w
   783  0F90  00E9               	movwf	main@temp+2
   784                           
   785                           ;main.c: 59: UART_Printf("ADC0 Value:%4d  Equivalent Temperature:%f\n\r",adcValue,temp);
   786  0F91  086B               	movf	main@adcValue+1,w
   787  0F92  00CC               	movwf	?_UART_Printf+1
   788  0F93  086A               	movf	main@adcValue,w
   789  0F94  00CB               	movwf	?_UART_Printf
   790  0F95  0867               	movf	main@temp,w
   791  0F96  00CD               	movwf	?_UART_Printf+2
   792  0F97  0868               	movf	main@temp+1,w
   793  0F98  00CE               	movwf	?_UART_Printf+3
   794  0F99  0869               	movf	main@temp+2,w
   795  0F9A  00CF               	movwf	?_UART_Printf+4
   796  0F9B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   797  0F9C  120A  118A  25CA  120A  158A  	fcall	_UART_Printf
   798  0FA1  2F61               	goto	l173
   799  0FA2                     __end_of_main:	
   800                           ;main.c: 60: }
   801                           ;main.c: 62: return (0);
   802                           ;	Return value of _main is never used
   803                           
   804                           
   805                           	psect	text1
   806  0246                     __ptext1:	
   807 ;; *************** function ___ftdiv *****************
   808 ;; Defined at:
   809 ;;		line 56 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftdiv.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  f2              3    0[BANK0 ] float 
   812 ;;  f1              3    3[BANK0 ] float 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  f3              3   11[BANK0 ] float 
   815 ;;  sign            1   15[BANK0 ] unsigned char 
   816 ;;  exp             1   14[BANK0 ] unsigned char 
   817 ;;  cntr            1   10[BANK0 ] unsigned char 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  3    0[BANK0 ] float 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0, pclath, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   827 ;;      Params:         0       6       0       0       0
   828 ;;      Locals:         0       6       0       0       0
   829 ;;      Temps:          0       4       0       0       0
   830 ;;      Totals:         0      16       0       0       0
   831 ;;Total ram usage:       16 bytes
   832 ;; Hardware stack levels used:    1
   833 ;; Hardware stack levels required when called:    1
   834 ;; This function calls:
   835 ;;		___ftpack
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           
   842                           ;psect for function ___ftdiv
   843  0246                     ___ftdiv:	
   844                           
   845                           ;incstack = 0
   846                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
   847  0246  1283               	bcf	3,5	;RP0=0, select bank0
   848  0247  1303               	bcf	3,6	;RP1=0, select bank0
   849  0248  0823               	movf	___ftdiv@f1,w
   850  0249  00A6               	movwf	??___ftdiv
   851  024A  0824               	movf	___ftdiv@f1+1,w
   852  024B  00A7               	movwf	??___ftdiv+1
   853  024C  0825               	movf	___ftdiv@f1+2,w
   854  024D  00A8               	movwf	??___ftdiv+2
   855  024E  1003               	clrc
   856  024F  0D27               	rlf	??___ftdiv+1,w
   857  0250  0D28               	rlf	??___ftdiv+2,w
   858  0251  00A9               	movwf	??___ftdiv+3
   859  0252  0829               	movf	??___ftdiv+3,w
   860  0253  00AE               	movwf	___ftdiv@exp
   861  0254  082E               	movf	___ftdiv@exp,w
   862  0255  1D03               	btfss	3,2
   863  0256  2A5E               	goto	l1710
   864  0257  3000               	movlw	0
   865  0258  00A0               	movwf	?___ftdiv
   866  0259  3000               	movlw	0
   867  025A  00A1               	movwf	?___ftdiv+1
   868  025B  3000               	movlw	0
   869  025C  00A2               	movwf	?___ftdiv+2
   870  025D  0008               	return
   871  025E                     l1710:	
   872  025E  0820               	movf	___ftdiv@f2,w
   873  025F  00A6               	movwf	??___ftdiv
   874  0260  0821               	movf	___ftdiv@f2+1,w
   875  0261  00A7               	movwf	??___ftdiv+1
   876  0262  0822               	movf	___ftdiv@f2+2,w
   877  0263  00A8               	movwf	??___ftdiv+2
   878  0264  1003               	clrc
   879  0265  0D27               	rlf	??___ftdiv+1,w
   880  0266  0D28               	rlf	??___ftdiv+2,w
   881  0267  00A9               	movwf	??___ftdiv+3
   882  0268  0829               	movf	??___ftdiv+3,w
   883  0269  00AF               	movwf	___ftdiv@sign
   884  026A  082F               	movf	___ftdiv@sign,w
   885  026B  1D03               	btfss	3,2
   886  026C  2A74               	goto	l1716
   887  026D  3000               	movlw	0
   888  026E  00A0               	movwf	?___ftdiv
   889  026F  3000               	movlw	0
   890  0270  00A1               	movwf	?___ftdiv+1
   891  0271  3000               	movlw	0
   892  0272  00A2               	movwf	?___ftdiv+2
   893  0273  0008               	return
   894  0274                     l1716:	
   895  0274  3000               	movlw	0
   896  0275  00AB               	movwf	___ftdiv@f3
   897  0276  3000               	movlw	0
   898  0277  00AC               	movwf	___ftdiv@f3+1
   899  0278  3000               	movlw	0
   900  0279  00AD               	movwf	___ftdiv@f3+2
   901  027A  3089               	movlw	137
   902  027B  072F               	addwf	___ftdiv@sign,w
   903  027C  00A6               	movwf	??___ftdiv
   904  027D  0826               	movf	??___ftdiv,w
   905  027E  02AE               	subwf	___ftdiv@exp,f
   906  027F  0823               	movf	___ftdiv@f1,w
   907  0280  00A6               	movwf	??___ftdiv
   908  0281  0824               	movf	___ftdiv@f1+1,w
   909  0282  00A7               	movwf	??___ftdiv+1
   910  0283  0825               	movf	___ftdiv@f1+2,w
   911  0284  00A8               	movwf	??___ftdiv+2
   912  0285  3010               	movlw	16
   913  0286                     u2255:	
   914  0286  1003               	clrc
   915  0287  0CA8               	rrf	??___ftdiv+2,f
   916  0288  0CA7               	rrf	??___ftdiv+1,f
   917  0289  0CA6               	rrf	??___ftdiv,f
   918  028A  3EFF               	addlw	-1
   919  028B  1D03               	skipz
   920  028C  2A86               	goto	u2255
   921  028D  0826               	movf	??___ftdiv,w
   922  028E  00A9               	movwf	??___ftdiv+3
   923  028F  0829               	movf	??___ftdiv+3,w
   924  0290  00AF               	movwf	___ftdiv@sign
   925  0291  0820               	movf	___ftdiv@f2,w
   926  0292  00A6               	movwf	??___ftdiv
   927  0293  0821               	movf	___ftdiv@f2+1,w
   928  0294  00A7               	movwf	??___ftdiv+1
   929  0295  0822               	movf	___ftdiv@f2+2,w
   930  0296  00A8               	movwf	??___ftdiv+2
   931  0297  3010               	movlw	16
   932  0298                     u2265:	
   933  0298  1003               	clrc
   934  0299  0CA8               	rrf	??___ftdiv+2,f
   935  029A  0CA7               	rrf	??___ftdiv+1,f
   936  029B  0CA6               	rrf	??___ftdiv,f
   937  029C  3EFF               	addlw	-1
   938  029D  1D03               	skipz
   939  029E  2A98               	goto	u2265
   940  029F  0826               	movf	??___ftdiv,w
   941  02A0  00A9               	movwf	??___ftdiv+3
   942  02A1  0829               	movf	??___ftdiv+3,w
   943  02A2  06AF               	xorwf	___ftdiv@sign,f
   944  02A3  3080               	movlw	128
   945  02A4  00A6               	movwf	??___ftdiv
   946  02A5  0826               	movf	??___ftdiv,w
   947  02A6  05AF               	andwf	___ftdiv@sign,f
   948  02A7  17A4               	bsf	___ftdiv@f1+1,7
   949  02A8  30FF               	movlw	255
   950  02A9  05A3               	andwf	___ftdiv@f1,f
   951  02AA  30FF               	movlw	255
   952  02AB  05A4               	andwf	___ftdiv@f1+1,f
   953  02AC  3000               	movlw	0
   954  02AD  05A5               	andwf	___ftdiv@f1+2,f
   955  02AE  17A1               	bsf	___ftdiv@f2+1,7
   956  02AF  30FF               	movlw	255
   957  02B0  05A0               	andwf	___ftdiv@f2,f
   958  02B1  30FF               	movlw	255
   959  02B2  05A1               	andwf	___ftdiv@f2+1,f
   960  02B3  3000               	movlw	0
   961  02B4  05A2               	andwf	___ftdiv@f2+2,f
   962  02B5  3018               	movlw	24
   963  02B6  00A6               	movwf	??___ftdiv
   964  02B7  0826               	movf	??___ftdiv,w
   965  02B8  00AA               	movwf	___ftdiv@cntr
   966  02B9                     l1730:	
   967  02B9  3001               	movlw	1
   968  02BA                     u2275:	
   969  02BA  1003               	clrc
   970  02BB  0DAB               	rlf	___ftdiv@f3,f
   971  02BC  0DAC               	rlf	___ftdiv@f3+1,f
   972  02BD  0DAD               	rlf	___ftdiv@f3+2,f
   973  02BE  3EFF               	addlw	-1
   974  02BF  1D03               	skipz
   975  02C0  2ABA               	goto	u2275
   976  02C1  0822               	movf	___ftdiv@f2+2,w
   977  02C2  0225               	subwf	___ftdiv@f1+2,w
   978  02C3  1D03               	skipz
   979  02C4  2ACB               	goto	u2285
   980  02C5  0821               	movf	___ftdiv@f2+1,w
   981  02C6  0224               	subwf	___ftdiv@f1+1,w
   982  02C7  1D03               	skipz
   983  02C8  2ACB               	goto	u2285
   984  02C9  0820               	movf	___ftdiv@f2,w
   985  02CA  0223               	subwf	___ftdiv@f1,w
   986  02CB                     u2285:	
   987  02CB  1C03               	skipc
   988  02CC  2AD8               	goto	l1738
   989  02CD  0820               	movf	___ftdiv@f2,w
   990  02CE  02A3               	subwf	___ftdiv@f1,f
   991  02CF  0821               	movf	___ftdiv@f2+1,w
   992  02D0  1C03               	skipc
   993  02D1  0F21               	incfsz	___ftdiv@f2+1,w
   994  02D2  02A4               	subwf	___ftdiv@f1+1,f
   995  02D3  0822               	movf	___ftdiv@f2+2,w
   996  02D4  1C03               	skipc
   997  02D5  0A22               	incf	___ftdiv@f2+2,w
   998  02D6  02A5               	subwf	___ftdiv@f1+2,f
   999  02D7  142B               	bsf	___ftdiv@f3,0
  1000  02D8                     l1738:	
  1001  02D8  3001               	movlw	1
  1002  02D9                     u2295:	
  1003  02D9  1003               	clrc
  1004  02DA  0DA3               	rlf	___ftdiv@f1,f
  1005  02DB  0DA4               	rlf	___ftdiv@f1+1,f
  1006  02DC  0DA5               	rlf	___ftdiv@f1+2,f
  1007  02DD  3EFF               	addlw	-1
  1008  02DE  1D03               	skipz
  1009  02DF  2AD9               	goto	u2295
  1010  02E0  3001               	movlw	1
  1011  02E1  02AA               	subwf	___ftdiv@cntr,f
  1012  02E2  1D03               	btfss	3,2
  1013  02E3  2AB9               	goto	l1730
  1014  02E4  082B               	movf	___ftdiv@f3,w
  1015  02E5  00F0               	movwf	___ftpack@arg
  1016  02E6  082C               	movf	___ftdiv@f3+1,w
  1017  02E7  00F1               	movwf	___ftpack@arg+1
  1018  02E8  082D               	movf	___ftdiv@f3+2,w
  1019  02E9  00F2               	movwf	___ftpack@arg+2
  1020  02EA  082E               	movf	___ftdiv@exp,w
  1021  02EB  00A6               	movwf	??___ftdiv
  1022  02EC  0826               	movf	??___ftdiv,w
  1023  02ED  00F3               	movwf	___ftpack@exp
  1024  02EE  082F               	movf	___ftdiv@sign,w
  1025  02EF  00A7               	movwf	??___ftdiv+1
  1026  02F0  0827               	movf	??___ftdiv+1,w
  1027  02F1  00F4               	movwf	___ftpack@sign
  1028  02F2  120A  118A  2033   	fcall	___ftpack
  1029  02F5  0870               	movf	?___ftpack,w
  1030  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1031  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1032  02F8  00A0               	movwf	?___ftdiv
  1033  02F9  0871               	movf	?___ftpack+1,w
  1034  02FA  00A1               	movwf	?___ftdiv+1
  1035  02FB  0872               	movf	?___ftpack+2,w
  1036  02FC  00A2               	movwf	?___ftdiv+2
  1037  02FD  0008               	return
  1038  02FE                     __end_of___ftdiv:	
  1039                           
  1040                           	psect	text2
  1041  0F08                     __ptext2:	
  1042 ;; *************** function ___awtoft *****************
  1043 ;; Defined at:
  1044 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\awtoft.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;  c               2    8[COMMON] int 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  sign            1   13[COMMON] unsigned char 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  3    8[COMMON] float 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0, pclath, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1058 ;;      Params:         3       0       0       0       0
  1059 ;;      Locals:         1       0       0       0       0
  1060 ;;      Temps:          2       0       0       0       0
  1061 ;;      Totals:         6       0       0       0       0
  1062 ;;Total ram usage:        6 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:    1
  1065 ;; This function calls:
  1066 ;;		___ftpack
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           
  1073                           ;psect for function ___awtoft
  1074  0F08                     ___awtoft:	
  1075                           
  1076                           ;incstack = 0
  1077                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1078  0F08  01FD               	clrf	___awtoft@sign
  1079  0F09  1FF9               	btfss	___awtoft@c+1,7
  1080  0F0A  2F12               	goto	l1700
  1081  0F0B  09F8               	comf	___awtoft@c,f
  1082  0F0C  09F9               	comf	___awtoft@c+1,f
  1083  0F0D  0AF8               	incf	___awtoft@c,f
  1084  0F0E  1903               	skipnz
  1085  0F0F  0AF9               	incf	___awtoft@c+1,f
  1086  0F10  01FD               	clrf	___awtoft@sign
  1087  0F11  0AFD               	incf	___awtoft@sign,f
  1088  0F12                     l1700:	
  1089  0F12  0878               	movf	___awtoft@c,w
  1090  0F13  00F0               	movwf	___ftpack@arg
  1091  0F14  0879               	movf	___awtoft@c+1,w
  1092  0F15  00F1               	movwf	___ftpack@arg+1
  1093  0F16  01F2               	clrf	___ftpack@arg+2
  1094  0F17  308E               	movlw	142
  1095  0F18  00FB               	movwf	??___awtoft
  1096  0F19  087B               	movf	??___awtoft,w
  1097  0F1A  00F3               	movwf	___ftpack@exp
  1098  0F1B  087D               	movf	___awtoft@sign,w
  1099  0F1C  00FC               	movwf	??___awtoft+1
  1100  0F1D  087C               	movf	??___awtoft+1,w
  1101  0F1E  00F4               	movwf	___ftpack@sign
  1102  0F1F  120A  118A  2033   	fcall	___ftpack
  1103  0F22  0870               	movf	?___ftpack,w
  1104  0F23  00F8               	movwf	?___awtoft
  1105  0F24  0871               	movf	?___ftpack+1,w
  1106  0F25  00F9               	movwf	?___awtoft+1
  1107  0F26  0872               	movf	?___ftpack+2,w
  1108  0F27  00FA               	movwf	?___awtoft+2
  1109  0F28  0008               	return
  1110  0F29                     __end_of___awtoft:	
  1111                           
  1112                           	psect	text3
  1113  05CA                     __ptext3:	
  1114 ;; *************** function _UART_Printf *****************
  1115 ;; Defined at:
  1116 ;;		line 411 in file "../00-libfiles/uart.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;  argList         1    wreg     PTR const unsigned char 
  1119 ;;		 -> STR_1(44), 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  argList         1   54[BANK0 ] PTR const unsigned char 
  1122 ;;		 -> STR_1(44), 
  1123 ;;  v_num_u32       4   61[BANK0 ] unsigned long 
  1124 ;;  v_num_s32       4   55[BANK0 ] long 
  1125 ;;  v_floatNum_f    3   50[BANK0 ] long 
  1126 ;;  v_num_u16       2   65[BANK0 ] unsigned int 
  1127 ;;  v_num_s16       2   59[BANK0 ] int 
  1128 ;;  argp            1   70[BANK0 ] PTR void [1]
  1129 ;;		 -> ?_UART_Printf(1), 
  1130 ;;  v_numOfDigit    1   69[BANK0 ] unsigned char 
  1131 ;;  ch              1   68[BANK0 ] unsigned char 
  1132 ;;  ptr             1   67[BANK0 ] PTR const unsigned char 
  1133 ;;		 -> STR_1(44), 
  1134 ;;  str             1   53[BANK0 ] PTR unsigned char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1144 ;;      Params:         0       5       0       0       0
  1145 ;;      Locals:         0      21       0       0       0
  1146 ;;      Temps:          0       2       0       0       0
  1147 ;;      Totals:         0      28       0       0       0
  1148 ;;Total ram usage:       28 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; Hardware stack levels required when called:    3
  1151 ;; This function calls:
  1152 ;;		_UART_TxChar
  1153 ;;		_UART_TxFloatNumber
  1154 ;;		_UART_TxNumber
  1155 ;;		_UART_TxString
  1156 ;;		___bmul
  1157 ;; This function is called by:
  1158 ;;		_main
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           
  1163                           ;psect for function _UART_Printf
  1164  05CA                     _UART_Printf:	
  1165                           
  1166                           ;incstack = 0
  1167                           ; Regs used in _UART_Printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1168                           ;UART_Printf@argList stored from wreg
  1169  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1170  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1171  05CC  00D6               	movwf	UART_Printf@argList
  1172                           
  1173                           ;uart.c: 413: const char *ptr;
  1174                           ;uart.c: 414: va_list argp;
  1175                           ;uart.c: 415: sint16_t v_num_s16;
  1176                           ;uart.c: 416: sint32_t v_num_s32;
  1177                           ;uart.c: 417: uint16_t v_num_u16;
  1178                           ;uart.c: 418: uint32_t v_num_u32;
  1179                           ;uart.c: 419: char *str;
  1180                           ;uart.c: 420: char ch;
  1181                           ;uart.c: 421: uint8_t v_numOfDigitsToTransmit_u8;
  1182                           ;uart.c: 423: double v_floatNum_f32;
  1183                           ;uart.c: 427: *argp = __va_start();
  1184  05CD  304B               	movlw	(low (?_UART_Printf| 0))& (0+255)
  1185  05CE  00D0               	movwf	??_UART_Printf
  1186  05CF  0850               	movf	??_UART_Printf,w
  1187  05D0  00E6               	movwf	UART_Printf@argp
  1188                           
  1189                           ;uart.c: 430: for(ptr = argList; *ptr != '\0'; ptr++)
  1190  05D1  0856               	movf	UART_Printf@argList,w
  1191  05D2  00D0               	movwf	??_UART_Printf
  1192  05D3  0850               	movf	??_UART_Printf,w
  1193  05D4  00E3               	movwf	UART_Printf@ptr
  1194  05D5                     l1674:	
  1195  05D5  0863               	movf	UART_Printf@ptr,w
  1196  05D6  0084               	movwf	4
  1197  05D7  120A  158A  2000  120A  118A  	fcall	stringdir
  1198  05DC  3A00               	xorlw	0
  1199  05DD  1903               	btfsc	3,2
  1200  05DE  0008               	return
  1201                           
  1202                           ;uart.c: 431: {
  1203                           ;uart.c: 433: ch= *ptr;
  1204  05DF  0863               	movf	UART_Printf@ptr,w
  1205  05E0  0084               	movwf	4
  1206  05E1  120A  158A  2000  120A  118A  	fcall	stringdir
  1207  05E6  00D0               	movwf	??_UART_Printf
  1208  05E7  0850               	movf	??_UART_Printf,w
  1209  05E8  00E4               	movwf	UART_Printf@ch
  1210                           
  1211                           ;uart.c: 434: if(ch == '%')
  1212  05E9  3025               	movlw	37
  1213  05EA  0664               	xorwf	UART_Printf@ch,w
  1214  05EB  1D03               	btfss	3,2
  1215  05EC  2FEF               	goto	l1670
  1216                           
  1217                           ;uart.c: 435: {
  1218                           ;uart.c: 436: ptr++;
  1219  05ED  3001               	movlw	1
  1220  05EE  00D0               	movwf	??_UART_Printf
  1221  05EF  0850               	movf	??_UART_Printf,w
  1222  05F0  07E3               	addwf	UART_Printf@ptr,f
  1223                           
  1224                           ;uart.c: 437: ch = *ptr;
  1225  05F1  0863               	movf	UART_Printf@ptr,w
  1226  05F2  0084               	movwf	4
  1227  05F3  120A  158A  2000  120A  118A  	fcall	stringdir
  1228  05F8  00D0               	movwf	??_UART_Printf
  1229  05F9  0850               	movf	??_UART_Printf,w
  1230  05FA  00E4               	movwf	UART_Printf@ch
  1231                           
  1232                           ;uart.c: 438: if((ch>=0x30) && (ch<=0x39))
  1233  05FB  3030               	movlw	48
  1234  05FC  0264               	subwf	UART_Printf@ch,w
  1235  05FD  1C03               	skipc
  1236  05FE  2E2C               	goto	l1576
  1237  05FF  303A               	movlw	58
  1238  0600  0264               	subwf	UART_Printf@ch,w
  1239  0601  1803               	skipnc
  1240  0602  2E2C               	goto	l1576
  1241                           
  1242                           ;uart.c: 439: {
  1243                           ;uart.c: 440: v_numOfDigitsToTransmit_u8 = 0;
  1244  0603  01E5               	clrf	UART_Printf@v_numOfDigitsToTransmit_u8
  1245  0604                     l1572:	
  1246                           ;uart.c: 441: while((ch>=0x30) && (ch<=0x39))
  1247                           
  1248  0604  3030               	movlw	48
  1249  0605  0264               	subwf	UART_Printf@ch,w
  1250  0606  1C03               	skipc
  1251  0607  2FBD               	goto	l1668
  1252  0608  303A               	movlw	58
  1253  0609  0264               	subwf	UART_Printf@ch,w
  1254  060A  1803               	btfsc	3,0
  1255  060B  2FBD               	goto	l1668
  1256                           
  1257                           ;uart.c: 442: {
  1258                           ;uart.c: 443: v_numOfDigitsToTransmit_u8 = (v_numOfDigitsToTransmit_u8 * 10) + (ch-0x30)
      +                          ;
  1259  060C  300A               	movlw	10
  1260  060D  00D0               	movwf	??_UART_Printf
  1261  060E  0850               	movf	??_UART_Printf,w
  1262  060F  00A0               	movwf	___bmul@multiplicand
  1263  0610  0865               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1264  0611  120A  158A  26CA  120A  118A  	fcall	___bmul
  1265  0616  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0617  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0618  0764               	addwf	UART_Printf@ch,w
  1268  0619  3ED0               	addlw	208
  1269  061A  00D1               	movwf	??_UART_Printf+1
  1270  061B  0851               	movf	??_UART_Printf+1,w
  1271  061C  00E5               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1272                           
  1273                           ;uart.c: 444: ptr++;
  1274  061D  3001               	movlw	1
  1275  061E  00D0               	movwf	??_UART_Printf
  1276  061F  0850               	movf	??_UART_Printf,w
  1277  0620  07E3               	addwf	UART_Printf@ptr,f
  1278                           
  1279                           ;uart.c: 445: ch = *ptr;
  1280  0621  0863               	movf	UART_Printf@ptr,w
  1281  0622  0084               	movwf	4
  1282  0623  120A  158A  2000  120A  118A  	fcall	stringdir
  1283  0628  00D0               	movwf	??_UART_Printf
  1284  0629  0850               	movf	??_UART_Printf,w
  1285  062A  00E4               	movwf	UART_Printf@ch
  1286  062B  2E04               	goto	l1572
  1287  062C                     l1576:	
  1288                           ;uart.c: 446: }
  1289                           ;uart.c: 447: }
  1290                           
  1291                           
  1292                           ;uart.c: 448: else
  1293                           ;uart.c: 449: {
  1294                           ;uart.c: 450: v_numOfDigitsToTransmit_u8 = 0xffu;
  1295  062C  30FF               	movlw	255
  1296  062D  00D0               	movwf	??_UART_Printf
  1297  062E  0850               	movf	??_UART_Printf,w
  1298  062F  00E5               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1299                           
  1300                           ;uart.c: 451: }
  1301                           ;uart.c: 454: switch(ch)
  1302  0630  2FBD               	goto	l1668
  1303  0631                     l1578:	
  1304                           ;uart.c: 455: {
  1305                           ;uart.c: 456: case 'C':
  1306                           
  1307                           
  1308                           ;uart.c: 457: case 'c':
  1309                           ;uart.c: 458: ch = (*(uint8_t *)__va_arg((*(uint8_t **)argp), (uint8_t)0));
  1310  0631  0866               	movf	UART_Printf@argp,w
  1311  0632  0084               	movwf	4
  1312  0633  1383               	bcf	3,7	;select IRP bank0
  1313  0634  0800               	movf	0,w
  1314  0635  00D0               	movwf	??_UART_Printf
  1315  0636  0850               	movf	??_UART_Printf,w
  1316  0637  00E4               	movwf	UART_Printf@ch
  1317  0638  3002               	movlw	2
  1318  0639  00D0               	movwf	??_UART_Printf
  1319  063A  0850               	movf	??_UART_Printf,w
  1320  063B  07E6               	addwf	UART_Printf@argp,f
  1321  063C  2FEF               	goto	l1670
  1322  063D                     l1584:	
  1323                           ;uart.c: 462: case 'd':
  1324                           
  1325                           ;uart.c: 460: break;
  1326                           
  1327                           ;uart.c: 459: UART_TxChar(ch);
  1328                           
  1329                           
  1330                           ;uart.c: 463: v_num_s16 = (*(sint16_t *)__va_arg((*(sint16_t **)argp), (sint16_t)0));
  1331  063D  1283               	bcf	3,5	;RP0=0, select bank0
  1332  063E  1303               	bcf	3,6	;RP1=0, select bank0
  1333  063F  0866               	movf	UART_Printf@argp,w
  1334  0640  0084               	movwf	4
  1335  0641  1383               	bcf	3,7	;select IRP bank0
  1336  0642  0800               	movf	0,w
  1337  0643  00DB               	movwf	UART_Printf@v_num_s16
  1338  0644  0A84               	incf	4,f
  1339  0645  0800               	movf	0,w
  1340  0646  00DC               	movwf	UART_Printf@v_num_s16+1
  1341  0647  3002               	movlw	2
  1342  0648  00D0               	movwf	??_UART_Printf
  1343  0649  0850               	movf	??_UART_Printf,w
  1344  064A  07E6               	addwf	UART_Printf@argp,f
  1345                           
  1346                           ;uart.c: 464: if(v_num_s16<0)
  1347  064B  1FDC               	btfss	UART_Printf@v_num_s16+1,7
  1348  064C  2E58               	goto	l1594
  1349                           
  1350                           ;uart.c: 465: {
  1351                           ;uart.c: 466: v_num_s16 = -v_num_s16;
  1352  064D  09DB               	comf	UART_Printf@v_num_s16,f
  1353  064E  09DC               	comf	UART_Printf@v_num_s16+1,f
  1354  064F  0ADB               	incf	UART_Printf@v_num_s16,f
  1355  0650  1903               	skipnz
  1356  0651  0ADC               	incf	UART_Printf@v_num_s16+1,f
  1357                           
  1358                           ;uart.c: 467: UART_TxChar('-');
  1359  0652  302D               	movlw	45
  1360  0653  120A  158A  26AC  120A  118A  	fcall	_UART_TxChar
  1361  0658                     l1594:	
  1362                           
  1363                           ;uart.c: 468: }
  1364                           ;uart.c: 469: UART_TxNumber(10u,v_num_s16,v_numOfDigitsToTransmit_u8);
  1365  0658  1283               	bcf	3,5	;RP0=0, select bank0
  1366  0659  1303               	bcf	3,6	;RP1=0, select bank0
  1367  065A  085B               	movf	UART_Printf@v_num_s16,w
  1368  065B  00A4               	movwf	UART_TxNumber@v_number_u32
  1369  065C  085C               	movf	UART_Printf@v_num_s16+1,w
  1370  065D  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1371  065E  3000               	movlw	0
  1372  065F  1BA5               	btfsc	UART_TxNumber@v_number_u32+1,7
  1373  0660  30FF               	movlw	255
  1374  0661  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1375  0662  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1376  0663  0865               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1377  0664  00D0               	movwf	??_UART_Printf
  1378  0665  0850               	movf	??_UART_Printf,w
  1379  0666  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1380  0667  300A               	movlw	10
  1381  0668  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1382                           
  1383                           ;uart.c: 470: break;
  1384  066D  2FF5               	goto	l1672
  1385  066E                     l1596:	
  1386                           ;uart.c: 472: case 'D':
  1387                           
  1388                           
  1389                           ;uart.c: 473: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
  1390  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1391  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1392  0670  0866               	movf	UART_Printf@argp,w
  1393  0671  0084               	movwf	4
  1394  0672  1383               	bcf	3,7	;select IRP bank0
  1395  0673  0800               	movf	0,w
  1396  0674  00D7               	movwf	UART_Printf@v_num_s32
  1397  0675  0A84               	incf	4,f
  1398  0676  0800               	movf	0,w
  1399  0677  00D8               	movwf	UART_Printf@v_num_s32+1
  1400  0678  0A84               	incf	4,f
  1401  0679  0800               	movf	0,w
  1402  067A  00D9               	movwf	UART_Printf@v_num_s32+2
  1403  067B  0A84               	incf	4,f
  1404  067C  0800               	movf	0,w
  1405  067D  00DA               	movwf	UART_Printf@v_num_s32+3
  1406  067E  3004               	movlw	4
  1407  067F  00D0               	movwf	??_UART_Printf
  1408  0680  0850               	movf	??_UART_Printf,w
  1409  0681  07E6               	addwf	UART_Printf@argp,f
  1410                           
  1411                           ;uart.c: 474: if(v_num_s32<0)
  1412  0682  1FDA               	btfss	UART_Printf@v_num_s32+3,7
  1413  0683  2E95               	goto	l1606
  1414                           
  1415                           ;uart.c: 475: {
  1416                           ;uart.c: 476: v_num_s32 = -v_num_s32;
  1417  0684  09D7               	comf	UART_Printf@v_num_s32,f
  1418  0685  09D8               	comf	UART_Printf@v_num_s32+1,f
  1419  0686  09D9               	comf	UART_Printf@v_num_s32+2,f
  1420  0687  09DA               	comf	UART_Printf@v_num_s32+3,f
  1421  0688  0AD7               	incf	UART_Printf@v_num_s32,f
  1422  0689  1903               	skipnz
  1423  068A  0AD8               	incf	UART_Printf@v_num_s32+1,f
  1424  068B  1903               	skipnz
  1425  068C  0AD9               	incf	UART_Printf@v_num_s32+2,f
  1426  068D  1903               	skipnz
  1427  068E  0ADA               	incf	UART_Printf@v_num_s32+3,f
  1428                           
  1429                           ;uart.c: 477: UART_TxChar('-');
  1430  068F  302D               	movlw	45
  1431  0690  120A  158A  26AC  120A  118A  	fcall	_UART_TxChar
  1432  0695                     l1606:	
  1433                           
  1434                           ;uart.c: 478: }
  1435                           ;uart.c: 479: UART_TxNumber(10u,v_num_s32,v_numOfDigitsToTransmit_u8);
  1436  0695  1283               	bcf	3,5	;RP0=0, select bank0
  1437  0696  1303               	bcf	3,6	;RP1=0, select bank0
  1438  0697  085A               	movf	UART_Printf@v_num_s32+3,w
  1439  0698  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1440  0699  0859               	movf	UART_Printf@v_num_s32+2,w
  1441  069A  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1442  069B  0858               	movf	UART_Printf@v_num_s32+1,w
  1443  069C  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1444  069D  0857               	movf	UART_Printf@v_num_s32,w
  1445  069E  00A4               	movwf	UART_TxNumber@v_number_u32
  1446  069F  0865               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1447  06A0  00D0               	movwf	??_UART_Printf
  1448  06A1  0850               	movf	??_UART_Printf,w
  1449  06A2  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1450  06A3  300A               	movlw	10
  1451  06A4  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1452                           
  1453                           ;uart.c: 480: break;
  1454  06A9  2FF5               	goto	l1672
  1455  06AA                     l1608:	
  1456                           ;uart.c: 482: case 'u':
  1457                           
  1458                           
  1459                           ;uart.c: 483: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1460  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  1461  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  1462  06AC  0866               	movf	UART_Printf@argp,w
  1463  06AD  0084               	movwf	4
  1464  06AE  1383               	bcf	3,7	;select IRP bank0
  1465  06AF  0800               	movf	0,w
  1466  06B0  00E1               	movwf	UART_Printf@v_num_u16
  1467  06B1  0A84               	incf	4,f
  1468  06B2  0800               	movf	0,w
  1469  06B3  00E2               	movwf	UART_Printf@v_num_u16+1
  1470  06B4  3002               	movlw	2
  1471  06B5  00D0               	movwf	??_UART_Printf
  1472  06B6  0850               	movf	??_UART_Printf,w
  1473  06B7  07E6               	addwf	UART_Printf@argp,f
  1474                           
  1475                           ;uart.c: 484: UART_TxNumber(10u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1476  06B8  0861               	movf	UART_Printf@v_num_u16,w
  1477  06B9  00A4               	movwf	UART_TxNumber@v_number_u32
  1478  06BA  0862               	movf	UART_Printf@v_num_u16+1,w
  1479  06BB  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1480  06BC  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1481  06BD  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1482  06BE  0865               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1483  06BF  00D0               	movwf	??_UART_Printf
  1484  06C0  0850               	movf	??_UART_Printf,w
  1485  06C1  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1486  06C2  300A               	movlw	10
  1487  06C3  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1488                           
  1489                           ;uart.c: 485: break;
  1490  06C8  2FF5               	goto	l1672
  1491  06C9                     l1614:	
  1492                           ;uart.c: 487: case 'U':
  1493                           
  1494                           
  1495                           ;uart.c: 488: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1496  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1497  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1498  06CB  0866               	movf	UART_Printf@argp,w
  1499  06CC  0084               	movwf	4
  1500  06CD  1383               	bcf	3,7	;select IRP bank0
  1501  06CE  0800               	movf	0,w
  1502  06CF  00DD               	movwf	UART_Printf@v_num_u32
  1503  06D0  0A84               	incf	4,f
  1504  06D1  0800               	movf	0,w
  1505  06D2  00DE               	movwf	UART_Printf@v_num_u32+1
  1506  06D3  0A84               	incf	4,f
  1507  06D4  0800               	movf	0,w
  1508  06D5  00DF               	movwf	UART_Printf@v_num_u32+2
  1509  06D6  0A84               	incf	4,f
  1510  06D7  0800               	movf	0,w
  1511  06D8  00E0               	movwf	UART_Printf@v_num_u32+3
  1512  06D9  3004               	movlw	4
  1513  06DA  00D0               	movwf	??_UART_Printf
  1514  06DB  0850               	movf	??_UART_Printf,w
  1515  06DC  07E6               	addwf	UART_Printf@argp,f
  1516                           
  1517                           ;uart.c: 489: UART_TxNumber(10u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1518  06DD  0860               	movf	UART_Printf@v_num_u32+3,w
  1519  06DE  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1520  06DF  085F               	movf	UART_Printf@v_num_u32+2,w
  1521  06E0  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1522  06E1  085E               	movf	UART_Printf@v_num_u32+1,w
  1523  06E2  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1524  06E3  085D               	movf	UART_Printf@v_num_u32,w
  1525  06E4  00A4               	movwf	UART_TxNumber@v_number_u32
  1526  06E5  0865               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1527  06E6  00D0               	movwf	??_UART_Printf
  1528  06E7  0850               	movf	??_UART_Printf,w
  1529  06E8  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1530  06E9  300A               	movlw	10
  1531  06EA  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1532                           
  1533                           ;uart.c: 490: break;
  1534  06EF  2FF5               	goto	l1672
  1535  06F0                     l1620:	
  1536                           ;uart.c: 492: case 'x':
  1537                           
  1538                           
  1539                           ;uart.c: 493: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1540  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  1541  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  1542  06F2  0866               	movf	UART_Printf@argp,w
  1543  06F3  0084               	movwf	4
  1544  06F4  1383               	bcf	3,7	;select IRP bank0
  1545  06F5  0800               	movf	0,w
  1546  06F6  00E1               	movwf	UART_Printf@v_num_u16
  1547  06F7  0A84               	incf	4,f
  1548  06F8  0800               	movf	0,w
  1549  06F9  00E2               	movwf	UART_Printf@v_num_u16+1
  1550  06FA  3002               	movlw	2
  1551  06FB  00D0               	movwf	??_UART_Printf
  1552  06FC  0850               	movf	??_UART_Printf,w
  1553  06FD  07E6               	addwf	UART_Printf@argp,f
  1554                           
  1555                           ;uart.c: 494: UART_TxNumber(16u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1556  06FE  0861               	movf	UART_Printf@v_num_u16,w
  1557  06FF  00A4               	movwf	UART_TxNumber@v_number_u32
  1558  0700  0862               	movf	UART_Printf@v_num_u16+1,w
  1559  0701  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1560  0702  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1561  0703  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1562  0704  0865               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1563  0705  00D0               	movwf	??_UART_Printf
  1564  0706  0850               	movf	??_UART_Printf,w
  1565  0707  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1566  0708  3010               	movlw	16
  1567  0709  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1568                           
  1569                           ;uart.c: 495: break;
  1570  070E  2FF5               	goto	l1672
  1571  070F                     l1626:	
  1572                           ;uart.c: 497: case 'X':
  1573                           
  1574                           
  1575                           ;uart.c: 498: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1576  070F  1283               	bcf	3,5	;RP0=0, select bank0
  1577  0710  1303               	bcf	3,6	;RP1=0, select bank0
  1578  0711  0866               	movf	UART_Printf@argp,w
  1579  0712  0084               	movwf	4
  1580  0713  1383               	bcf	3,7	;select IRP bank0
  1581  0714  0800               	movf	0,w
  1582  0715  00DD               	movwf	UART_Printf@v_num_u32
  1583  0716  0A84               	incf	4,f
  1584  0717  0800               	movf	0,w
  1585  0718  00DE               	movwf	UART_Printf@v_num_u32+1
  1586  0719  0A84               	incf	4,f
  1587  071A  0800               	movf	0,w
  1588  071B  00DF               	movwf	UART_Printf@v_num_u32+2
  1589  071C  0A84               	incf	4,f
  1590  071D  0800               	movf	0,w
  1591  071E  00E0               	movwf	UART_Printf@v_num_u32+3
  1592  071F  3004               	movlw	4
  1593  0720  00D0               	movwf	??_UART_Printf
  1594  0721  0850               	movf	??_UART_Printf,w
  1595  0722  07E6               	addwf	UART_Printf@argp,f
  1596                           
  1597                           ;uart.c: 499: UART_TxNumber(16u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1598  0723  0860               	movf	UART_Printf@v_num_u32+3,w
  1599  0724  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1600  0725  085F               	movf	UART_Printf@v_num_u32+2,w
  1601  0726  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1602  0727  085E               	movf	UART_Printf@v_num_u32+1,w
  1603  0728  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1604  0729  085D               	movf	UART_Printf@v_num_u32,w
  1605  072A  00A4               	movwf	UART_TxNumber@v_number_u32
  1606  072B  0865               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1607  072C  00D0               	movwf	??_UART_Printf
  1608  072D  0850               	movf	??_UART_Printf,w
  1609  072E  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1610  072F  3010               	movlw	16
  1611  0730  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1612                           
  1613                           ;uart.c: 500: break;
  1614  0735  2FF5               	goto	l1672
  1615  0736                     l1632:	
  1616                           ;uart.c: 503: case 'b':
  1617                           
  1618                           
  1619                           ;uart.c: 504: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1620  0736  1283               	bcf	3,5	;RP0=0, select bank0
  1621  0737  1303               	bcf	3,6	;RP1=0, select bank0
  1622  0738  0866               	movf	UART_Printf@argp,w
  1623  0739  0084               	movwf	4
  1624  073A  1383               	bcf	3,7	;select IRP bank0
  1625  073B  0800               	movf	0,w
  1626  073C  00E1               	movwf	UART_Printf@v_num_u16
  1627  073D  0A84               	incf	4,f
  1628  073E  0800               	movf	0,w
  1629  073F  00E2               	movwf	UART_Printf@v_num_u16+1
  1630  0740  3002               	movlw	2
  1631  0741  00D0               	movwf	??_UART_Printf
  1632  0742  0850               	movf	??_UART_Printf,w
  1633  0743  07E6               	addwf	UART_Printf@argp,f
  1634                           
  1635                           ;uart.c: 506: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1636  0744  0A65               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1637  0745  1D03               	btfss	3,2
  1638  0746  2F4B               	goto	l1640
  1639                           
  1640                           ;uart.c: 507: v_numOfDigitsToTransmit_u8 = 16;
  1641  0747  3010               	movlw	16
  1642  0748  00D0               	movwf	??_UART_Printf
  1643  0749  0850               	movf	??_UART_Printf,w
  1644  074A  00E5               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1645  074B                     l1640:	
  1646                           
  1647                           ;uart.c: 509: UART_TxNumber(2u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1648  074B  0861               	movf	UART_Printf@v_num_u16,w
  1649  074C  00A4               	movwf	UART_TxNumber@v_number_u32
  1650  074D  0862               	movf	UART_Printf@v_num_u16+1,w
  1651  074E  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1652  074F  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1653  0750  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1654  0751  0865               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1655  0752  00D0               	movwf	??_UART_Printf
  1656  0753  0850               	movf	??_UART_Printf,w
  1657  0754  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1658  0755  3002               	movlw	2
  1659  0756  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1660                           
  1661                           ;uart.c: 510: break;
  1662  075B  2FF5               	goto	l1672
  1663  075C                     l1642:	
  1664                           ;uart.c: 512: case 'B':
  1665                           
  1666                           
  1667                           ;uart.c: 513: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1668  075C  1283               	bcf	3,5	;RP0=0, select bank0
  1669  075D  1303               	bcf	3,6	;RP1=0, select bank0
  1670  075E  0866               	movf	UART_Printf@argp,w
  1671  075F  0084               	movwf	4
  1672  0760  1383               	bcf	3,7	;select IRP bank0
  1673  0761  0800               	movf	0,w
  1674  0762  00DD               	movwf	UART_Printf@v_num_u32
  1675  0763  0A84               	incf	4,f
  1676  0764  0800               	movf	0,w
  1677  0765  00DE               	movwf	UART_Printf@v_num_u32+1
  1678  0766  0A84               	incf	4,f
  1679  0767  0800               	movf	0,w
  1680  0768  00DF               	movwf	UART_Printf@v_num_u32+2
  1681  0769  0A84               	incf	4,f
  1682  076A  0800               	movf	0,w
  1683  076B  00E0               	movwf	UART_Printf@v_num_u32+3
  1684  076C  3004               	movlw	4
  1685  076D  00D0               	movwf	??_UART_Printf
  1686  076E  0850               	movf	??_UART_Printf,w
  1687  076F  07E6               	addwf	UART_Printf@argp,f
  1688                           
  1689                           ;uart.c: 515: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1690  0770  0A65               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1691  0771  1D03               	btfss	3,2
  1692  0772  2F77               	goto	l1650
  1693                           
  1694                           ;uart.c: 516: v_numOfDigitsToTransmit_u8 = 32;
  1695  0773  3020               	movlw	32
  1696  0774  00D0               	movwf	??_UART_Printf
  1697  0775  0850               	movf	??_UART_Printf,w
  1698  0776  00E5               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1699  0777                     l1650:	
  1700                           
  1701                           ;uart.c: 518: UART_TxNumber(2u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1702  0777  0860               	movf	UART_Printf@v_num_u32+3,w
  1703  0778  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1704  0779  085F               	movf	UART_Printf@v_num_u32+2,w
  1705  077A  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1706  077B  085E               	movf	UART_Printf@v_num_u32+1,w
  1707  077C  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1708  077D  085D               	movf	UART_Printf@v_num_u32,w
  1709  077E  00A4               	movwf	UART_TxNumber@v_number_u32
  1710  077F  0865               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1711  0780  00D0               	movwf	??_UART_Printf
  1712  0781  0850               	movf	??_UART_Printf,w
  1713  0782  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1714  0783  3002               	movlw	2
  1715  0784  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1716                           
  1717                           ;uart.c: 519: break;
  1718  0789  2FF5               	goto	l1672
  1719  078A                     l1652:	
  1720                           ;uart.c: 522: case 'F':
  1721                           
  1722                           
  1723                           ;uart.c: 523: case 'f':
  1724                           ;uart.c: 525: v_floatNum_f32 = (*(double *)__va_arg((*(double **)argp), (double)0));
  1725  078A  1283               	bcf	3,5	;RP0=0, select bank0
  1726  078B  1303               	bcf	3,6	;RP1=0, select bank0
  1727  078C  0866               	movf	UART_Printf@argp,w
  1728  078D  0084               	movwf	4
  1729  078E  1383               	bcf	3,7	;select IRP bank0
  1730  078F  0800               	movf	0,w
  1731  0790  00D2               	movwf	UART_Printf@v_floatNum_f32
  1732  0791  0A84               	incf	4,f
  1733  0792  0800               	movf	0,w
  1734  0793  00D3               	movwf	UART_Printf@v_floatNum_f32+1
  1735  0794  0A84               	incf	4,f
  1736  0795  0800               	movf	0,w
  1737  0796  00D4               	movwf	UART_Printf@v_floatNum_f32+2
  1738  0797  3003               	movlw	3
  1739  0798  00D0               	movwf	??_UART_Printf
  1740  0799  0850               	movf	??_UART_Printf,w
  1741  079A  07E6               	addwf	UART_Printf@argp,f
  1742                           
  1743                           ;uart.c: 526: UART_TxFloatNumber(v_floatNum_f32);
  1744  079B  0852               	movf	UART_Printf@v_floatNum_f32,w
  1745  079C  00C3               	movwf	UART_TxFloatNumber@v_floatNumber_f32
  1746  079D  0853               	movf	UART_Printf@v_floatNum_f32+1,w
  1747  079E  00C4               	movwf	UART_TxFloatNumber@v_floatNumber_f32+1
  1748  079F  0854               	movf	UART_Printf@v_floatNum_f32+2,w
  1749  07A0  00C5               	movwf	UART_TxFloatNumber@v_floatNumber_f32+2
  1750  07A1  120A  118A  21A7  120A  118A  	fcall	_UART_TxFloatNumber
  1751                           
  1752                           ;uart.c: 528: break;
  1753  07A6  2FF5               	goto	l1672
  1754  07A7                     l1658:	
  1755                           ;uart.c: 531: case 'S':
  1756                           
  1757                           
  1758                           ;uart.c: 532: case 's':
  1759                           ;uart.c: 533: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  1760  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1761  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1762  07A9  0866               	movf	UART_Printf@argp,w
  1763  07AA  0084               	movwf	4
  1764  07AB  1383               	bcf	3,7	;select IRP bank0
  1765  07AC  0800               	movf	0,w
  1766  07AD  00D0               	movwf	??_UART_Printf
  1767  07AE  0850               	movf	??_UART_Printf,w
  1768  07AF  00D5               	movwf	UART_Printf@str
  1769  07B0  3001               	movlw	1
  1770  07B1  00D0               	movwf	??_UART_Printf
  1771  07B2  0850               	movf	??_UART_Printf,w
  1772  07B3  07E6               	addwf	UART_Printf@argp,f
  1773                           
  1774                           ;uart.c: 534: UART_TxString(str);
  1775  07B4  0855               	movf	UART_Printf@str,w
  1776  07B5  120A  158A  26DD  120A  118A  	fcall	_UART_TxString
  1777                           
  1778                           ;uart.c: 535: break;
  1779  07BA  2FF5               	goto	l1672
  1780  07BB                     l1664:	
  1781                           ;uart.c: 537: case '%':
  1782                           
  1783                           
  1784                           ;uart.c: 538: UART_TxChar('%');
  1785  07BB  3025               	movlw	37
  1786  07BC  2FF0               	goto	L1
  1787  07BD                     l1668:	
  1788                           ;uart.c: 540: }
  1789                           
  1790                           ;uart.c: 539: break;
  1791                           
  1792  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1793  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1794  07BF  0864               	movf	UART_Printf@ch,w
  1795                           
  1796                           ; Switch size 1, requested type "space"
  1797                           ; Number of cases is 15, Range of values is 37 to 120
  1798                           ; switch strategies available:
  1799                           ; Name         Instructions Cycles
  1800                           ; simple_byte           46    24 (average)
  1801                           ; direct_byte          263    11 (fixed)
  1802                           ; jumptable            263     9 (fixed)
  1803                           ;	Chosen strategy is simple_byte
  1804  07C0  3A25               	xorlw	37	; case 37
  1805  07C1  1903               	skipnz
  1806  07C2  2FBB               	goto	l1664
  1807  07C3  3A67               	xorlw	103	; case 66
  1808  07C4  1903               	skipnz
  1809  07C5  2F5C               	goto	l1642
  1810  07C6  3A01               	xorlw	1	; case 67
  1811  07C7  1903               	skipnz
  1812  07C8  2E31               	goto	l1578
  1813  07C9  3A07               	xorlw	7	; case 68
  1814  07CA  1903               	skipnz
  1815  07CB  2E6E               	goto	l1596
  1816  07CC  3A02               	xorlw	2	; case 70
  1817  07CD  1903               	skipnz
  1818  07CE  2F8A               	goto	l1652
  1819  07CF  3A15               	xorlw	21	; case 83
  1820  07D0  1903               	skipnz
  1821  07D1  2FA7               	goto	l1658
  1822  07D2  3A06               	xorlw	6	; case 85
  1823  07D3  1903               	skipnz
  1824  07D4  2EC9               	goto	l1614
  1825  07D5  3A0D               	xorlw	13	; case 88
  1826  07D6  1903               	skipnz
  1827  07D7  2F0F               	goto	l1626
  1828  07D8  3A3A               	xorlw	58	; case 98
  1829  07D9  1903               	skipnz
  1830  07DA  2F36               	goto	l1632
  1831  07DB  3A01               	xorlw	1	; case 99
  1832  07DC  1903               	skipnz
  1833  07DD  2E31               	goto	l1578
  1834  07DE  3A07               	xorlw	7	; case 100
  1835  07DF  1903               	skipnz
  1836  07E0  2E3D               	goto	l1584
  1837  07E1  3A02               	xorlw	2	; case 102
  1838  07E2  1903               	skipnz
  1839  07E3  2F8A               	goto	l1652
  1840  07E4  3A15               	xorlw	21	; case 115
  1841  07E5  1903               	skipnz
  1842  07E6  2FA7               	goto	l1658
  1843  07E7  3A06               	xorlw	6	; case 117
  1844  07E8  1903               	skipnz
  1845  07E9  2EAA               	goto	l1608
  1846  07EA  3A0D               	xorlw	13	; case 120
  1847  07EB  1903               	skipnz
  1848  07EC  2EF0               	goto	l1620
  1849  07ED  2FF5               	goto	l1672
  1850                           
  1851                           ;uart.c: 541: }
  1852  07EE  2FF5               	goto	l1672
  1853  07EF                     l1670:	
  1854                           
  1855                           ;uart.c: 542: else
  1856                           ;uart.c: 543: {
  1857                           ;uart.c: 545: UART_TxChar(ch);
  1858  07EF  0864               	movf	UART_Printf@ch,w
  1859  07F0                     L1:	
  1860  07F0  120A  158A  26AC  120A  118A  	fcall	_UART_TxChar
  1861  07F5                     l1672:	
  1862  07F5  3001               	movlw	1
  1863  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  1864  07F7  1303               	bcf	3,6	;RP1=0, select bank0
  1865  07F8  00D0               	movwf	??_UART_Printf
  1866  07F9  0850               	movf	??_UART_Printf,w
  1867  07FA  07E3               	addwf	UART_Printf@ptr,f
  1868  07FB  2DD5               	goto	l1674
  1869  07FC                     __end_of_UART_Printf:	
  1870                           
  1871                           	psect	text4
  1872  0EDD                     __ptext4:	
  1873 ;; *************** function _UART_TxString *****************
  1874 ;; Defined at:
  1875 ;;		line 168 in file "../00-libfiles/uart.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  ptr_string      1    wreg     PTR unsigned char 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  ptr_string      1    2[COMMON] PTR unsigned char 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1889 ;;      Params:         0       0       0       0       0
  1890 ;;      Locals:         1       0       0       0       0
  1891 ;;      Temps:          1       0       0       0       0
  1892 ;;      Totals:         2       0       0       0       0
  1893 ;;Total ram usage:        2 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    1
  1896 ;; This function calls:
  1897 ;;		_UART_TxChar
  1898 ;; This function is called by:
  1899 ;;		_UART_Printf
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           
  1904                           ;psect for function _UART_TxString
  1905  0EDD                     _UART_TxString:	
  1906                           
  1907                           ;incstack = 0
  1908                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1909                           ;UART_TxString@ptr_string stored from wreg
  1910  0EDD  00F2               	movwf	UART_TxString@ptr_string
  1911  0EDE                     l1528:	
  1912                           ;uart.c: 170: while(*ptr_string)
  1913                           
  1914  0EDE  0872               	movf	UART_TxString@ptr_string,w
  1915  0EDF  0084               	movwf	4
  1916  0EE0  1383               	bcf	3,7	;select IRP bank0
  1917  0EE1  0800               	movf	0,w
  1918  0EE2  1903               	btfsc	3,2
  1919  0EE3  0008               	return
  1920                           
  1921                           ;uart.c: 171: UART_TxChar(*ptr_string++);
  1922  0EE4  0872               	movf	UART_TxString@ptr_string,w
  1923  0EE5  0084               	movwf	4
  1924  0EE6  1383               	bcf	3,7	;select IRP bank0
  1925  0EE7  0800               	movf	0,w
  1926  0EE8  120A  158A  26AC  120A  158A  	fcall	_UART_TxChar
  1927  0EED  3001               	movlw	1
  1928  0EEE  00F1               	movwf	??_UART_TxString
  1929  0EEF  0871               	movf	??_UART_TxString,w
  1930  0EF0  07F2               	addwf	UART_TxString@ptr_string,f
  1931  0EF1  2EDE               	goto	l1528
  1932  0EF2                     __end_of_UART_TxString:	
  1933                           
  1934                           	psect	text5
  1935  01A7                     __ptext5:	
  1936 ;; *************** function _UART_TxFloatNumber *****************
  1937 ;; Defined at:
  1938 ;;		line 348 in file "../00-libfiles/uart.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  v_floatNumbe    3   35[BANK0 ] float 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  v_tempNumber    4   39[BANK0 ] unsigned long 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1952 ;;      Params:         0       3       0       0       0
  1953 ;;      Locals:         0       4       0       0       0
  1954 ;;      Temps:          0       1       0       0       0
  1955 ;;      Totals:         0       8       0       0       0
  1956 ;;Total ram usage:        8 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    2
  1959 ;; This function calls:
  1960 ;;		_UART_TxChar
  1961 ;;		_UART_TxNumber
  1962 ;;		___ftadd
  1963 ;;		___ftmul
  1964 ;;		___ftneg
  1965 ;;		___fttol
  1966 ;;		___lltoft
  1967 ;; This function is called by:
  1968 ;;		_UART_Printf
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           
  1973                           ;psect for function _UART_TxFloatNumber
  1974  01A7                     _UART_TxFloatNumber:	
  1975                           
  1976                           ;uart.c: 350: uint32_t v_tempNumber_u32;
  1977                           ;uart.c: 357: v_tempNumber_u32 = (uint32_t) v_floatNumber_f32;
  1978                           
  1979                           ;incstack = 0
  1980                           ; Regs used in _UART_TxFloatNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1981  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1982  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1983  01A9  0843               	movf	UART_TxFloatNumber@v_floatNumber_f32,w
  1984  01AA  00AA               	movwf	___fttol@f1
  1985  01AB  0844               	movf	UART_TxFloatNumber@v_floatNumber_f32+1,w
  1986  01AC  00AB               	movwf	___fttol@f1+1
  1987  01AD  0845               	movf	UART_TxFloatNumber@v_floatNumber_f32+2,w
  1988  01AE  00AC               	movwf	___fttol@f1+2
  1989  01AF  120A  118A  2119  120A  118A  	fcall	___fttol
  1990  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1991  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1992  01B6  082D               	movf	?___fttol+3,w
  1993  01B7  00CA               	movwf	UART_TxFloatNumber@v_tempNumber_u32+3
  1994  01B8  082C               	movf	?___fttol+2,w
  1995  01B9  00C9               	movwf	UART_TxFloatNumber@v_tempNumber_u32+2
  1996  01BA  082B               	movf	?___fttol+1,w
  1997  01BB  00C8               	movwf	UART_TxFloatNumber@v_tempNumber_u32+1
  1998  01BC  082A               	movf	?___fttol,w
  1999  01BD  00C7               	movwf	UART_TxFloatNumber@v_tempNumber_u32
  2000                           
  2001                           ;uart.c: 358: UART_TxNumber(10u,v_tempNumber_u32,0xffu);
  2002  01BE  084A               	movf	UART_TxFloatNumber@v_tempNumber_u32+3,w
  2003  01BF  00A7               	movwf	UART_TxNumber@v_number_u32+3
  2004  01C0  0849               	movf	UART_TxFloatNumber@v_tempNumber_u32+2,w
  2005  01C1  00A6               	movwf	UART_TxNumber@v_number_u32+2
  2006  01C2  0848               	movf	UART_TxFloatNumber@v_tempNumber_u32+1,w
  2007  01C3  00A5               	movwf	UART_TxNumber@v_number_u32+1
  2008  01C4  0847               	movf	UART_TxFloatNumber@v_tempNumber_u32,w
  2009  01C5  00A4               	movwf	UART_TxNumber@v_number_u32
  2010  01C6  30FF               	movlw	255
  2011  01C7  00C6               	movwf	??_UART_TxFloatNumber
  2012  01C8  0846               	movf	??_UART_TxFloatNumber,w
  2013  01C9  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  2014  01CA  300A               	movlw	10
  2015  01CB  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  2016                           
  2017                           ;uart.c: 360: UART_TxChar('.');
  2018  01D0  302E               	movlw	46
  2019  01D1  120A  158A  26AC  120A  118A  	fcall	_UART_TxChar
  2020                           
  2021                           ;uart.c: 362: v_floatNumber_f32 = v_floatNumber_f32 - v_tempNumber_u32;
  2022  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2023  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2024  01D8  0843               	movf	UART_TxFloatNumber@v_floatNumber_f32,w
  2025  01D9  00A3               	movwf	___ftadd@f1
  2026  01DA  0844               	movf	UART_TxFloatNumber@v_floatNumber_f32+1,w
  2027  01DB  00A4               	movwf	___ftadd@f1+1
  2028  01DC  0845               	movf	UART_TxFloatNumber@v_floatNumber_f32+2,w
  2029  01DD  00A5               	movwf	___ftadd@f1+2
  2030  01DE  084A               	movf	UART_TxFloatNumber@v_tempNumber_u32+3,w
  2031  01DF  00FB               	movwf	___lltoft@c+3
  2032  01E0  0849               	movf	UART_TxFloatNumber@v_tempNumber_u32+2,w
  2033  01E1  00FA               	movwf	___lltoft@c+2
  2034  01E2  0848               	movf	UART_TxFloatNumber@v_tempNumber_u32+1,w
  2035  01E3  00F9               	movwf	___lltoft@c+1
  2036  01E4  0847               	movf	UART_TxFloatNumber@v_tempNumber_u32,w
  2037  01E5  00F8               	movwf	___lltoft@c
  2038  01E6  120A  118A  2008  120A  118A  	fcall	___lltoft
  2039  01EB  0878               	movf	?___lltoft,w
  2040  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2041  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2042  01EE  00A0               	movwf	___ftneg@f1
  2043  01EF  0879               	movf	?___lltoft+1,w
  2044  01F0  00A1               	movwf	___ftneg@f1+1
  2045  01F1  087A               	movf	?___lltoft+2,w
  2046  01F2  00A2               	movwf	___ftneg@f1+2
  2047  01F3  120A  158A  26B5  120A  118A  	fcall	___ftneg
  2048  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2049  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  2050  01FA  0820               	movf	?___ftneg,w
  2051  01FB  00A6               	movwf	___ftadd@f2
  2052  01FC  0821               	movf	?___ftneg+1,w
  2053  01FD  00A7               	movwf	___ftadd@f2+1
  2054  01FE  0822               	movf	?___ftneg+2,w
  2055  01FF  00A8               	movwf	___ftadd@f2+2
  2056  0200  120A  118A  24C1  120A  118A  	fcall	___ftadd
  2057  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2059  0207  0823               	movf	?___ftadd,w
  2060  0208  00C3               	movwf	UART_TxFloatNumber@v_floatNumber_f32
  2061  0209  0824               	movf	?___ftadd+1,w
  2062  020A  00C4               	movwf	UART_TxFloatNumber@v_floatNumber_f32+1
  2063  020B  0825               	movf	?___ftadd+2,w
  2064  020C  00C5               	movwf	UART_TxFloatNumber@v_floatNumber_f32+2
  2065                           
  2066                           ;uart.c: 363: v_tempNumber_u32 = v_floatNumber_f32 * 1000000;
  2067  020D  0843               	movf	UART_TxFloatNumber@v_floatNumber_f32,w
  2068  020E  00FB               	movwf	___ftmul@f2
  2069  020F  0844               	movf	UART_TxFloatNumber@v_floatNumber_f32+1,w
  2070  0210  00FC               	movwf	___ftmul@f2+1
  2071  0211  0845               	movf	UART_TxFloatNumber@v_floatNumber_f32+2,w
  2072  0212  00FD               	movwf	___ftmul@f2+2
  2073  0213  3024               	movlw	36
  2074  0214  00F8               	movwf	___ftmul@f1
  2075  0215  3074               	movlw	116
  2076  0216  00F9               	movwf	___ftmul@f1+1
  2077  0217  3049               	movlw	73
  2078  0218  00FA               	movwf	___ftmul@f1+2
  2079  0219  120A  118A  22FE  120A  118A  	fcall	___ftmul
  2080  021E  0878               	movf	?___ftmul,w
  2081  021F  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0220  1303               	bcf	3,6	;RP1=0, select bank0
  2083  0221  00AA               	movwf	___fttol@f1
  2084  0222  0879               	movf	?___ftmul+1,w
  2085  0223  00AB               	movwf	___fttol@f1+1
  2086  0224  087A               	movf	?___ftmul+2,w
  2087  0225  00AC               	movwf	___fttol@f1+2
  2088  0226  120A  118A  2119  120A  118A  	fcall	___fttol
  2089  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2090  022C  1303               	bcf	3,6	;RP1=0, select bank0
  2091  022D  082D               	movf	?___fttol+3,w
  2092  022E  00CA               	movwf	UART_TxFloatNumber@v_tempNumber_u32+3
  2093  022F  082C               	movf	?___fttol+2,w
  2094  0230  00C9               	movwf	UART_TxFloatNumber@v_tempNumber_u32+2
  2095  0231  082B               	movf	?___fttol+1,w
  2096  0232  00C8               	movwf	UART_TxFloatNumber@v_tempNumber_u32+1
  2097  0233  082A               	movf	?___fttol,w
  2098  0234  00C7               	movwf	UART_TxFloatNumber@v_tempNumber_u32
  2099                           
  2100                           ;uart.c: 364: UART_TxNumber(10u,v_tempNumber_u32,0xffu);
  2101  0235  084A               	movf	UART_TxFloatNumber@v_tempNumber_u32+3,w
  2102  0236  00A7               	movwf	UART_TxNumber@v_number_u32+3
  2103  0237  0849               	movf	UART_TxFloatNumber@v_tempNumber_u32+2,w
  2104  0238  00A6               	movwf	UART_TxNumber@v_number_u32+2
  2105  0239  0848               	movf	UART_TxFloatNumber@v_tempNumber_u32+1,w
  2106  023A  00A5               	movwf	UART_TxNumber@v_number_u32+1
  2107  023B  0847               	movf	UART_TxFloatNumber@v_tempNumber_u32,w
  2108  023C  00A4               	movwf	UART_TxNumber@v_number_u32
  2109  023D  30FF               	movlw	255
  2110  023E  00C6               	movwf	??_UART_TxFloatNumber
  2111  023F  0846               	movf	??_UART_TxFloatNumber,w
  2112  0240  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  2113  0241  300A               	movlw	10
  2114  0242  120A  118A  23CF   	fcall	_UART_TxNumber
  2115  0245  0008               	return
  2116  0246                     __end_of_UART_TxFloatNumber:	
  2117                           
  2118                           	psect	text6
  2119  0008                     __ptext6:	
  2120 ;; *************** function ___lltoft *****************
  2121 ;; Defined at:
  2122 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lltoft.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  c               4    8[COMMON] unsigned long 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  exp             1   13[COMMON] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  3    8[COMMON] float 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0, pclath, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2136 ;;      Params:         4       0       0       0       0
  2137 ;;      Locals:         1       0       0       0       0
  2138 ;;      Temps:          1       0       0       0       0
  2139 ;;      Totals:         6       0       0       0       0
  2140 ;;Total ram usage:        6 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    1
  2143 ;; This function calls:
  2144 ;;		___ftpack
  2145 ;; This function is called by:
  2146 ;;		_UART_TxFloatNumber
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           
  2151                           ;psect for function ___lltoft
  2152  0008                     ___lltoft:	
  2153                           
  2154                           ;incstack = 0
  2155                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  2156  0008  308E               	movlw	142
  2157  0009  00FC               	movwf	??___lltoft
  2158  000A  087C               	movf	??___lltoft,w
  2159  000B  00FD               	movwf	___lltoft@exp
  2160  000C                     l1508:	
  2161  000C  30FF               	movlw	255
  2162  000D  057B               	andwf	___lltoft@c+3,w
  2163  000E  1903               	btfsc	3,2
  2164  000F  281E               	goto	l1510
  2165  0010  3001               	movlw	1
  2166  0011                     u2025:	
  2167  0011  1003               	clrc
  2168  0012  0CFB               	rrf	___lltoft@c+3,f
  2169  0013  0CFA               	rrf	___lltoft@c+2,f
  2170  0014  0CF9               	rrf	___lltoft@c+1,f
  2171  0015  0CF8               	rrf	___lltoft@c,f
  2172  0016  3EFF               	addlw	-1
  2173  0017  1D03               	skipz
  2174  0018  2811               	goto	u2025
  2175  0019  3001               	movlw	1
  2176  001A  00FC               	movwf	??___lltoft
  2177  001B  087C               	movf	??___lltoft,w
  2178  001C  07FD               	addwf	___lltoft@exp,f
  2179  001D  280C               	goto	l1508
  2180  001E                     l1510:	
  2181  001E  0878               	movf	___lltoft@c,w
  2182  001F  00F0               	movwf	___ftpack@arg
  2183  0020  0879               	movf	___lltoft@c+1,w
  2184  0021  00F1               	movwf	___ftpack@arg+1
  2185  0022  087A               	movf	___lltoft@c+2,w
  2186  0023  00F2               	movwf	___ftpack@arg+2
  2187  0024  087D               	movf	___lltoft@exp,w
  2188  0025  00FC               	movwf	??___lltoft
  2189  0026  087C               	movf	??___lltoft,w
  2190  0027  00F3               	movwf	___ftpack@exp
  2191  0028  01F4               	clrf	___ftpack@sign
  2192  0029  120A  118A  2033   	fcall	___ftpack
  2193  002C  0870               	movf	?___ftpack,w
  2194  002D  00F8               	movwf	?___lltoft
  2195  002E  0871               	movf	?___ftpack+1,w
  2196  002F  00F9               	movwf	?___lltoft+1
  2197  0030  0872               	movf	?___ftpack+2,w
  2198  0031  00FA               	movwf	?___lltoft+2
  2199  0032  0008               	return
  2200  0033                     __end_of___lltoft:	
  2201                           
  2202                           	psect	text7
  2203  0119                     __ptext7:	
  2204 ;; *************** function ___fttol *****************
  2205 ;; Defined at:
  2206 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\fttol.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  f1              3   10[BANK0 ] float 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  lval            4   19[BANK0 ] unsigned long 
  2211 ;;  exp1            1   23[BANK0 ] unsigned char 
  2212 ;;  sign1           1   18[BANK0 ] unsigned char 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  4   10[BANK0 ] long 
  2215 ;; Registers used:
  2216 ;;		wreg, status,2, status,0
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2222 ;;      Params:         0       4       0       0       0
  2223 ;;      Locals:         0       6       0       0       0
  2224 ;;      Temps:          0       4       0       0       0
  2225 ;;      Totals:         0      14       0       0       0
  2226 ;;Total ram usage:       14 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_UART_TxFloatNumber
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           
  2236                           ;psect for function ___fttol
  2237  0119                     ___fttol:	
  2238                           
  2239                           ;incstack = 0
  2240                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2241  0119  1283               	bcf	3,5	;RP0=0, select bank0
  2242  011A  1303               	bcf	3,6	;RP1=0, select bank0
  2243  011B  082A               	movf	___fttol@f1,w
  2244  011C  00AE               	movwf	??___fttol
  2245  011D  082B               	movf	___fttol@f1+1,w
  2246  011E  00AF               	movwf	??___fttol+1
  2247  011F  082C               	movf	___fttol@f1+2,w
  2248  0120  00B0               	movwf	??___fttol+2
  2249  0121  1003               	clrc
  2250  0122  0D2F               	rlf	??___fttol+1,w
  2251  0123  0D30               	rlf	??___fttol+2,w
  2252  0124  00B1               	movwf	??___fttol+3
  2253  0125  0831               	movf	??___fttol+3,w
  2254  0126  00B7               	movwf	___fttol@exp1
  2255  0127  0837               	movf	___fttol@exp1,w
  2256  0128  1D03               	btfss	3,2
  2257  0129  2933               	goto	l1468
  2258  012A  3000               	movlw	0
  2259  012B  00AD               	movwf	?___fttol+3
  2260  012C  3000               	movlw	0
  2261  012D  00AC               	movwf	?___fttol+2
  2262  012E  3000               	movlw	0
  2263  012F  00AB               	movwf	?___fttol+1
  2264  0130  3000               	movlw	0
  2265  0131  00AA               	movwf	?___fttol
  2266  0132  0008               	return
  2267  0133                     l1468:	
  2268  0133  082A               	movf	___fttol@f1,w
  2269  0134  00AE               	movwf	??___fttol
  2270  0135  082B               	movf	___fttol@f1+1,w
  2271  0136  00AF               	movwf	??___fttol+1
  2272  0137  082C               	movf	___fttol@f1+2,w
  2273  0138  00B0               	movwf	??___fttol+2
  2274  0139  3017               	movlw	23
  2275  013A                     u1935:	
  2276  013A  1003               	clrc
  2277  013B  0CB0               	rrf	??___fttol+2,f
  2278  013C  0CAF               	rrf	??___fttol+1,f
  2279  013D  0CAE               	rrf	??___fttol,f
  2280  013E  3EFF               	addlw	-1
  2281  013F  1D03               	skipz
  2282  0140  293A               	goto	u1935
  2283  0141  082E               	movf	??___fttol,w
  2284  0142  00B1               	movwf	??___fttol+3
  2285  0143  0831               	movf	??___fttol+3,w
  2286  0144  00B2               	movwf	___fttol@sign1
  2287  0145  17AB               	bsf	___fttol@f1+1,7
  2288  0146  30FF               	movlw	255
  2289  0147  05AA               	andwf	___fttol@f1,f
  2290  0148  30FF               	movlw	255
  2291  0149  05AB               	andwf	___fttol@f1+1,f
  2292  014A  3000               	movlw	0
  2293  014B  05AC               	andwf	___fttol@f1+2,f
  2294  014C  082A               	movf	___fttol@f1,w
  2295  014D  00B3               	movwf	___fttol@lval
  2296  014E  082B               	movf	___fttol@f1+1,w
  2297  014F  00B4               	movwf	___fttol@lval+1
  2298  0150  082C               	movf	___fttol@f1+2,w
  2299  0151  00B5               	movwf	___fttol@lval+2
  2300  0152  01B6               	clrf	___fttol@lval+3
  2301  0153  308E               	movlw	142
  2302  0154  02B7               	subwf	___fttol@exp1,f
  2303  0155  1FB7               	btfss	___fttol@exp1,7
  2304  0156  2975               	goto	l1488
  2305  0157  0837               	movf	___fttol@exp1,w
  2306  0158  3A80               	xorlw	128
  2307  0159  3E8F               	addlw	143
  2308  015A  1803               	skipnc
  2309  015B  2965               	goto	l1486
  2310  015C  3000               	movlw	0
  2311  015D  00AD               	movwf	?___fttol+3
  2312  015E  3000               	movlw	0
  2313  015F  00AC               	movwf	?___fttol+2
  2314  0160  3000               	movlw	0
  2315  0161  00AB               	movwf	?___fttol+1
  2316  0162  3000               	movlw	0
  2317  0163  00AA               	movwf	?___fttol
  2318  0164  0008               	return
  2319  0165                     l1486:	
  2320  0165  3001               	movlw	1
  2321  0166                     u1965:	
  2322  0166  1003               	clrc
  2323  0167  0CB6               	rrf	___fttol@lval+3,f
  2324  0168  0CB5               	rrf	___fttol@lval+2,f
  2325  0169  0CB4               	rrf	___fttol@lval+1,f
  2326  016A  0CB3               	rrf	___fttol@lval,f
  2327  016B  3EFF               	addlw	-1
  2328  016C  1D03               	skipz
  2329  016D  2966               	goto	u1965
  2330  016E  3001               	movlw	1
  2331  016F  00AE               	movwf	??___fttol
  2332  0170  082E               	movf	??___fttol,w
  2333  0171  07B7               	addwf	___fttol@exp1,f
  2334  0172  1903               	btfsc	3,2
  2335  0173  2990               	goto	l1496
  2336  0174  2965               	goto	l1486
  2337  0175                     l1488:	
  2338  0175  3018               	movlw	24
  2339  0176  0237               	subwf	___fttol@exp1,w
  2340  0177  1C03               	skipc
  2341  0178  298D               	goto	l512
  2342  0179  3000               	movlw	0
  2343  017A  00AD               	movwf	?___fttol+3
  2344  017B  3000               	movlw	0
  2345  017C  00AC               	movwf	?___fttol+2
  2346  017D  3000               	movlw	0
  2347  017E  00AB               	movwf	?___fttol+1
  2348  017F  3000               	movlw	0
  2349  0180  00AA               	movwf	?___fttol
  2350  0181  0008               	return
  2351  0182                     l1494:	
  2352  0182  3001               	movlw	1
  2353  0183  00AE               	movwf	??___fttol
  2354  0184                     u1995:	
  2355  0184  1003               	clrc
  2356  0185  0DB3               	rlf	___fttol@lval,f
  2357  0186  0DB4               	rlf	___fttol@lval+1,f
  2358  0187  0DB5               	rlf	___fttol@lval+2,f
  2359  0188  0DB6               	rlf	___fttol@lval+3,f
  2360  0189  0BAE               	decfsz	??___fttol,f
  2361  018A  2984               	goto	u1995
  2362  018B  3001               	movlw	1
  2363  018C  02B7               	subwf	___fttol@exp1,f
  2364  018D                     l512:	
  2365  018D  0837               	movf	___fttol@exp1,w
  2366  018E  1D03               	btfss	3,2
  2367  018F  2982               	goto	l1494
  2368  0190                     l1496:	
  2369  0190  0832               	movf	___fttol@sign1,w
  2370  0191  1903               	btfsc	3,2
  2371  0192  299E               	goto	l1500
  2372  0193  09B3               	comf	___fttol@lval,f
  2373  0194  09B4               	comf	___fttol@lval+1,f
  2374  0195  09B5               	comf	___fttol@lval+2,f
  2375  0196  09B6               	comf	___fttol@lval+3,f
  2376  0197  0AB3               	incf	___fttol@lval,f
  2377  0198  1903               	skipnz
  2378  0199  0AB4               	incf	___fttol@lval+1,f
  2379  019A  1903               	skipnz
  2380  019B  0AB5               	incf	___fttol@lval+2,f
  2381  019C  1903               	skipnz
  2382  019D  0AB6               	incf	___fttol@lval+3,f
  2383  019E                     l1500:	
  2384  019E  0836               	movf	___fttol@lval+3,w
  2385  019F  00AD               	movwf	?___fttol+3
  2386  01A0  0835               	movf	___fttol@lval+2,w
  2387  01A1  00AC               	movwf	?___fttol+2
  2388  01A2  0834               	movf	___fttol@lval+1,w
  2389  01A3  00AB               	movwf	?___fttol+1
  2390  01A4  0833               	movf	___fttol@lval,w
  2391  01A5  00AA               	movwf	?___fttol
  2392  01A6  0008               	return
  2393  01A7                     __end_of___fttol:	
  2394                           
  2395                           	psect	text8
  2396  0EB5                     __ptext8:	
  2397 ;; *************** function ___ftneg *****************
  2398 ;; Defined at:
  2399 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftneg.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  f1              3    0[BANK0 ] float 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  3    0[BANK0 ] float 
  2406 ;; Registers used:
  2407 ;;		wreg
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2413 ;;      Params:         0       3       0       0       0
  2414 ;;      Locals:         0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0
  2416 ;;      Totals:         0       3       0       0       0
  2417 ;;Total ram usage:        3 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_UART_TxFloatNumber
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           
  2427                           ;psect for function ___ftneg
  2428  0EB5                     ___ftneg:	
  2429                           
  2430                           ;incstack = 0
  2431                           ; Regs used in ___ftneg: [wreg]
  2432  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  2433  0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  2434  0EB7  0822               	movf	___ftneg@f1+2,w
  2435  0EB8  0421               	iorwf	___ftneg@f1+1,w
  2436  0EB9  0420               	iorwf	___ftneg@f1,w
  2437  0EBA  1903               	skipnz
  2438  0EBB  0008               	return
  2439  0EBC  3080               	movlw	128
  2440  0EBD  06A2               	xorwf	___ftneg@f1+2,f
  2441  0EBE  0008               	return
  2442  0EBF                     __end_of___ftneg:	
  2443                           
  2444                           	psect	text9
  2445  02FE                     __ptext9:	
  2446 ;; *************** function ___ftmul *****************
  2447 ;; Defined at:
  2448 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftmul.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  f1              3    8[COMMON] float 
  2451 ;;  f2              3   11[COMMON] float 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  2454 ;;  sign            1    9[BANK0 ] unsigned char 
  2455 ;;  cntr            1    8[BANK0 ] unsigned char 
  2456 ;;  exp             1    4[BANK0 ] unsigned char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  3    8[COMMON] float 
  2459 ;; Registers used:
  2460 ;;		wreg, status,2, status,0, pclath, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2466 ;;      Params:         6       0       0       0       0
  2467 ;;      Locals:         0       6       0       0       0
  2468 ;;      Temps:          0       4       0       0       0
  2469 ;;      Totals:         6      10       0       0       0
  2470 ;;Total ram usage:       16 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; Hardware stack levels required when called:    1
  2473 ;; This function calls:
  2474 ;;		___ftpack
  2475 ;; This function is called by:
  2476 ;;		_UART_TxFloatNumber
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           
  2481                           ;psect for function ___ftmul
  2482  02FE                     ___ftmul:	
  2483                           
  2484                           ;incstack = 0
  2485                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2486  02FE  0878               	movf	___ftmul@f1,w
  2487  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2488  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2489  0301  00A0               	movwf	??___ftmul
  2490  0302  0879               	movf	___ftmul@f1+1,w
  2491  0303  00A1               	movwf	??___ftmul+1
  2492  0304  087A               	movf	___ftmul@f1+2,w
  2493  0305  00A2               	movwf	??___ftmul+2
  2494  0306  1003               	clrc
  2495  0307  0D21               	rlf	??___ftmul+1,w
  2496  0308  0D22               	rlf	??___ftmul+2,w
  2497  0309  00A3               	movwf	??___ftmul+3
  2498  030A  0823               	movf	??___ftmul+3,w
  2499  030B  00A4               	movwf	___ftmul@exp
  2500  030C  0824               	movf	___ftmul@exp,w
  2501  030D  1D03               	btfss	3,2
  2502  030E  2B16               	goto	l1410
  2503  030F  3000               	movlw	0
  2504  0310  00F8               	movwf	?___ftmul
  2505  0311  3000               	movlw	0
  2506  0312  00F9               	movwf	?___ftmul+1
  2507  0313  3000               	movlw	0
  2508  0314  00FA               	movwf	?___ftmul+2
  2509  0315  0008               	return
  2510  0316                     l1410:	
  2511  0316  087B               	movf	___ftmul@f2,w
  2512  0317  00A0               	movwf	??___ftmul
  2513  0318  087C               	movf	___ftmul@f2+1,w
  2514  0319  00A1               	movwf	??___ftmul+1
  2515  031A  087D               	movf	___ftmul@f2+2,w
  2516  031B  00A2               	movwf	??___ftmul+2
  2517  031C  1003               	clrc
  2518  031D  0D21               	rlf	??___ftmul+1,w
  2519  031E  0D22               	rlf	??___ftmul+2,w
  2520  031F  00A3               	movwf	??___ftmul+3
  2521  0320  0823               	movf	??___ftmul+3,w
  2522  0321  00A9               	movwf	___ftmul@sign
  2523  0322  0829               	movf	___ftmul@sign,w
  2524  0323  1D03               	btfss	3,2
  2525  0324  2B2C               	goto	l1416
  2526  0325  3000               	movlw	0
  2527  0326  00F8               	movwf	?___ftmul
  2528  0327  3000               	movlw	0
  2529  0328  00F9               	movwf	?___ftmul+1
  2530  0329  3000               	movlw	0
  2531  032A  00FA               	movwf	?___ftmul+2
  2532  032B  0008               	return
  2533  032C                     l1416:	
  2534  032C  0829               	movf	___ftmul@sign,w
  2535  032D  3E7B               	addlw	123
  2536  032E  00A0               	movwf	??___ftmul
  2537  032F  0820               	movf	??___ftmul,w
  2538  0330  07A4               	addwf	___ftmul@exp,f
  2539  0331  0878               	movf	___ftmul@f1,w
  2540  0332  00A0               	movwf	??___ftmul
  2541  0333  0879               	movf	___ftmul@f1+1,w
  2542  0334  00A1               	movwf	??___ftmul+1
  2543  0335  087A               	movf	___ftmul@f1+2,w
  2544  0336  00A2               	movwf	??___ftmul+2
  2545  0337  3010               	movlw	16
  2546  0338                     u1795:	
  2547  0338  1003               	clrc
  2548  0339  0CA2               	rrf	??___ftmul+2,f
  2549  033A  0CA1               	rrf	??___ftmul+1,f
  2550  033B  0CA0               	rrf	??___ftmul,f
  2551  033C  3EFF               	addlw	-1
  2552  033D  1D03               	skipz
  2553  033E  2B38               	goto	u1795
  2554  033F  0820               	movf	??___ftmul,w
  2555  0340  00A3               	movwf	??___ftmul+3
  2556  0341  0823               	movf	??___ftmul+3,w
  2557  0342  00A9               	movwf	___ftmul@sign
  2558  0343  087B               	movf	___ftmul@f2,w
  2559  0344  00A0               	movwf	??___ftmul
  2560  0345  087C               	movf	___ftmul@f2+1,w
  2561  0346  00A1               	movwf	??___ftmul+1
  2562  0347  087D               	movf	___ftmul@f2+2,w
  2563  0348  00A2               	movwf	??___ftmul+2
  2564  0349  3010               	movlw	16
  2565  034A                     u1805:	
  2566  034A  1003               	clrc
  2567  034B  0CA2               	rrf	??___ftmul+2,f
  2568  034C  0CA1               	rrf	??___ftmul+1,f
  2569  034D  0CA0               	rrf	??___ftmul,f
  2570  034E  3EFF               	addlw	-1
  2571  034F  1D03               	skipz
  2572  0350  2B4A               	goto	u1805
  2573  0351  0820               	movf	??___ftmul,w
  2574  0352  00A3               	movwf	??___ftmul+3
  2575  0353  0823               	movf	??___ftmul+3,w
  2576  0354  06A9               	xorwf	___ftmul@sign,f
  2577  0355  3080               	movlw	128
  2578  0356  00A0               	movwf	??___ftmul
  2579  0357  0820               	movf	??___ftmul,w
  2580  0358  05A9               	andwf	___ftmul@sign,f
  2581  0359  17F9               	bsf	___ftmul@f1+1,7
  2582  035A  17FC               	bsf	___ftmul@f2+1,7
  2583  035B  30FF               	movlw	255
  2584  035C  05FB               	andwf	___ftmul@f2,f
  2585  035D  30FF               	movlw	255
  2586  035E  05FC               	andwf	___ftmul@f2+1,f
  2587  035F  3000               	movlw	0
  2588  0360  05FD               	andwf	___ftmul@f2+2,f
  2589  0361  3000               	movlw	0
  2590  0362  00A5               	movwf	___ftmul@f3_as_product
  2591  0363  3000               	movlw	0
  2592  0364  00A6               	movwf	___ftmul@f3_as_product+1
  2593  0365  3000               	movlw	0
  2594  0366  00A7               	movwf	___ftmul@f3_as_product+2
  2595  0367  3007               	movlw	7
  2596  0368  00A0               	movwf	??___ftmul
  2597  0369  0820               	movf	??___ftmul,w
  2598  036A  00A8               	movwf	___ftmul@cntr
  2599  036B                     l1428:	
  2600  036B  1C78               	btfss	___ftmul@f1,0
  2601  036C  2B7B               	goto	l1432
  2602  036D  087B               	movf	___ftmul@f2,w
  2603  036E  07A5               	addwf	___ftmul@f3_as_product,f
  2604  036F  087C               	movf	___ftmul@f2+1,w
  2605  0370  1103               	clrz
  2606  0371  1803               	skipnc
  2607  0372  0A7C               	incf	___ftmul@f2+1,w
  2608  0373  1D03               	btfss	3,2
  2609  0374  07A6               	addwf	___ftmul@f3_as_product+1,f
  2610  0375  087D               	movf	___ftmul@f2+2,w
  2611  0376  1103               	clrz
  2612  0377  1803               	skipnc
  2613  0378  0A7D               	incf	___ftmul@f2+2,w
  2614  0379  1D03               	btfss	3,2
  2615  037A  07A7               	addwf	___ftmul@f3_as_product+2,f
  2616  037B                     l1432:	
  2617  037B  3001               	movlw	1
  2618  037C                     u1835:	
  2619  037C  1003               	clrc
  2620  037D  0CFA               	rrf	___ftmul@f1+2,f
  2621  037E  0CF9               	rrf	___ftmul@f1+1,f
  2622  037F  0CF8               	rrf	___ftmul@f1,f
  2623  0380  3EFF               	addlw	-1
  2624  0381  1D03               	skipz
  2625  0382  2B7C               	goto	u1835
  2626  0383  3001               	movlw	1
  2627  0384                     u1845:	
  2628  0384  1003               	clrc
  2629  0385  0DFB               	rlf	___ftmul@f2,f
  2630  0386  0DFC               	rlf	___ftmul@f2+1,f
  2631  0387  0DFD               	rlf	___ftmul@f2+2,f
  2632  0388  3EFF               	addlw	-1
  2633  0389  1D03               	skipz
  2634  038A  2B84               	goto	u1845
  2635  038B  3001               	movlw	1
  2636  038C  02A8               	subwf	___ftmul@cntr,f
  2637  038D  1D03               	btfss	3,2
  2638  038E  2B6B               	goto	l1428
  2639  038F  3009               	movlw	9
  2640  0390  00A0               	movwf	??___ftmul
  2641  0391  0820               	movf	??___ftmul,w
  2642  0392  00A8               	movwf	___ftmul@cntr
  2643  0393                     l1440:	
  2644  0393  1C78               	btfss	___ftmul@f1,0
  2645  0394  2BA3               	goto	l1444
  2646  0395  087B               	movf	___ftmul@f2,w
  2647  0396  07A5               	addwf	___ftmul@f3_as_product,f
  2648  0397  087C               	movf	___ftmul@f2+1,w
  2649  0398  1103               	clrz
  2650  0399  1803               	skipnc
  2651  039A  0A7C               	incf	___ftmul@f2+1,w
  2652  039B  1D03               	btfss	3,2
  2653  039C  07A6               	addwf	___ftmul@f3_as_product+1,f
  2654  039D  087D               	movf	___ftmul@f2+2,w
  2655  039E  1103               	clrz
  2656  039F  1803               	skipnc
  2657  03A0  0A7D               	incf	___ftmul@f2+2,w
  2658  03A1  1D03               	btfss	3,2
  2659  03A2  07A7               	addwf	___ftmul@f3_as_product+2,f
  2660  03A3                     l1444:	
  2661  03A3  3001               	movlw	1
  2662  03A4                     u1885:	
  2663  03A4  1003               	clrc
  2664  03A5  0CFA               	rrf	___ftmul@f1+2,f
  2665  03A6  0CF9               	rrf	___ftmul@f1+1,f
  2666  03A7  0CF8               	rrf	___ftmul@f1,f
  2667  03A8  3EFF               	addlw	-1
  2668  03A9  1D03               	skipz
  2669  03AA  2BA4               	goto	u1885
  2670  03AB  3001               	movlw	1
  2671  03AC                     u1895:	
  2672  03AC  1003               	clrc
  2673  03AD  0CA7               	rrf	___ftmul@f3_as_product+2,f
  2674  03AE  0CA6               	rrf	___ftmul@f3_as_product+1,f
  2675  03AF  0CA5               	rrf	___ftmul@f3_as_product,f
  2676  03B0  3EFF               	addlw	-1
  2677  03B1  1D03               	skipz
  2678  03B2  2BAC               	goto	u1895
  2679  03B3  3001               	movlw	1
  2680  03B4  02A8               	subwf	___ftmul@cntr,f
  2681  03B5  1D03               	btfss	3,2
  2682  03B6  2B93               	goto	l1440
  2683  03B7  0825               	movf	___ftmul@f3_as_product,w
  2684  03B8  00F0               	movwf	___ftpack@arg
  2685  03B9  0826               	movf	___ftmul@f3_as_product+1,w
  2686  03BA  00F1               	movwf	___ftpack@arg+1
  2687  03BB  0827               	movf	___ftmul@f3_as_product+2,w
  2688  03BC  00F2               	movwf	___ftpack@arg+2
  2689  03BD  0824               	movf	___ftmul@exp,w
  2690  03BE  00A0               	movwf	??___ftmul
  2691  03BF  0820               	movf	??___ftmul,w
  2692  03C0  00F3               	movwf	___ftpack@exp
  2693  03C1  0829               	movf	___ftmul@sign,w
  2694  03C2  00A1               	movwf	??___ftmul+1
  2695  03C3  0821               	movf	??___ftmul+1,w
  2696  03C4  00F4               	movwf	___ftpack@sign
  2697  03C5  120A  118A  2033   	fcall	___ftpack
  2698  03C8  0870               	movf	?___ftpack,w
  2699  03C9  00F8               	movwf	?___ftmul
  2700  03CA  0871               	movf	?___ftpack+1,w
  2701  03CB  00F9               	movwf	?___ftmul+1
  2702  03CC  0872               	movf	?___ftpack+2,w
  2703  03CD  00FA               	movwf	?___ftmul+2
  2704  03CE  0008               	return
  2705  03CF                     __end_of___ftmul:	
  2706                           
  2707                           	psect	text10
  2708  04C1                     __ptext10:	
  2709 ;; *************** function ___ftadd *****************
  2710 ;; Defined at:
  2711 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftadd.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;  f1              3    3[BANK0 ] float 
  2714 ;;  f2              3    6[BANK0 ] float 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  exp1            1   15[BANK0 ] unsigned char 
  2717 ;;  exp2            1   14[BANK0 ] unsigned char 
  2718 ;;  sign            1   13[BANK0 ] unsigned char 
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  3    3[BANK0 ] float 
  2721 ;; Registers used:
  2722 ;;		wreg, status,2, status,0, pclath, cstack
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2728 ;;      Params:         0       6       0       0       0
  2729 ;;      Locals:         0       3       0       0       0
  2730 ;;      Temps:          0       4       0       0       0
  2731 ;;      Totals:         0      13       0       0       0
  2732 ;;Total ram usage:       13 bytes
  2733 ;; Hardware stack levels used:    1
  2734 ;; Hardware stack levels required when called:    1
  2735 ;; This function calls:
  2736 ;;		___ftpack
  2737 ;; This function is called by:
  2738 ;;		_UART_TxFloatNumber
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           
  2743                           ;psect for function ___ftadd
  2744  04C1                     ___ftadd:	
  2745                           
  2746                           ;incstack = 0
  2747                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2748  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2749  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2750  04C3  0823               	movf	___ftadd@f1,w
  2751  04C4  00A9               	movwf	??___ftadd
  2752  04C5  0824               	movf	___ftadd@f1+1,w
  2753  04C6  00AA               	movwf	??___ftadd+1
  2754  04C7  0825               	movf	___ftadd@f1+2,w
  2755  04C8  00AB               	movwf	??___ftadd+2
  2756  04C9  1003               	clrc
  2757  04CA  0D2A               	rlf	??___ftadd+1,w
  2758  04CB  0D2B               	rlf	??___ftadd+2,w
  2759  04CC  00AC               	movwf	??___ftadd+3
  2760  04CD  082C               	movf	??___ftadd+3,w
  2761  04CE  00AF               	movwf	___ftadd@exp1
  2762  04CF  0826               	movf	___ftadd@f2,w
  2763  04D0  00A9               	movwf	??___ftadd
  2764  04D1  0827               	movf	___ftadd@f2+1,w
  2765  04D2  00AA               	movwf	??___ftadd+1
  2766  04D3  0828               	movf	___ftadd@f2+2,w
  2767  04D4  00AB               	movwf	??___ftadd+2
  2768  04D5  1003               	clrc
  2769  04D6  0D2A               	rlf	??___ftadd+1,w
  2770  04D7  0D2B               	rlf	??___ftadd+2,w
  2771  04D8  00AC               	movwf	??___ftadd+3
  2772  04D9  082C               	movf	??___ftadd+3,w
  2773  04DA  00AE               	movwf	___ftadd@exp2
  2774  04DB  082F               	movf	___ftadd@exp1,w
  2775  04DC  1903               	btfsc	3,2
  2776  04DD  2CEA               	goto	l1340
  2777  04DE  082E               	movf	___ftadd@exp2,w
  2778  04DF  022F               	subwf	___ftadd@exp1,w
  2779  04E0  1803               	skipnc
  2780  04E1  2CF1               	goto	l1344
  2781  04E2  032F               	decf	___ftadd@exp1,w
  2782  04E3  3AFF               	xorlw	255
  2783  04E4  072E               	addwf	___ftadd@exp2,w
  2784  04E5  00A9               	movwf	??___ftadd
  2785  04E6  3019               	movlw	25
  2786  04E7  0229               	subwf	??___ftadd,w
  2787  04E8  1C03               	skipc
  2788  04E9  2CF1               	goto	l1344
  2789  04EA                     l1340:	
  2790  04EA  0826               	movf	___ftadd@f2,w
  2791  04EB  00A3               	movwf	?___ftadd
  2792  04EC  0827               	movf	___ftadd@f2+1,w
  2793  04ED  00A4               	movwf	?___ftadd+1
  2794  04EE  0828               	movf	___ftadd@f2+2,w
  2795  04EF  00A5               	movwf	?___ftadd+2
  2796  04F0  0008               	return
  2797  04F1                     l1344:	
  2798  04F1  082E               	movf	___ftadd@exp2,w
  2799  04F2  1903               	btfsc	3,2
  2800  04F3  0008               	return
  2801  04F4  082F               	movf	___ftadd@exp1,w
  2802  04F5  022E               	subwf	___ftadd@exp2,w
  2803  04F6  1803               	skipnc
  2804  04F7  2D00               	goto	l1350
  2805  04F8  032E               	decf	___ftadd@exp2,w
  2806  04F9  3AFF               	xorlw	255
  2807  04FA  072F               	addwf	___ftadd@exp1,w
  2808  04FB  00A9               	movwf	??___ftadd
  2809  04FC  3019               	movlw	25
  2810  04FD  0229               	subwf	??___ftadd,w
  2811  04FE  1803               	btfsc	3,0
  2812  04FF  0008               	return
  2813  0500                     l1350:	
  2814  0500  3006               	movlw	6
  2815  0501  00A9               	movwf	??___ftadd
  2816  0502  0829               	movf	??___ftadd,w
  2817  0503  00AD               	movwf	___ftadd@sign
  2818  0504  1BA5               	btfsc	___ftadd@f1+2,7
  2819  0505  17AD               	bsf	___ftadd@sign,7
  2820  0506  1BA8               	btfsc	___ftadd@f2+2,7
  2821  0507  172D               	bsf	___ftadd@sign,6
  2822  0508  17A4               	bsf	___ftadd@f1+1,7
  2823  0509  30FF               	movlw	255
  2824  050A  05A3               	andwf	___ftadd@f1,f
  2825  050B  30FF               	movlw	255
  2826  050C  05A4               	andwf	___ftadd@f1+1,f
  2827  050D  3000               	movlw	0
  2828  050E  05A5               	andwf	___ftadd@f1+2,f
  2829  050F  17A7               	bsf	___ftadd@f2+1,7
  2830  0510  30FF               	movlw	255
  2831  0511  05A6               	andwf	___ftadd@f2,f
  2832  0512  30FF               	movlw	255
  2833  0513  05A7               	andwf	___ftadd@f2+1,f
  2834  0514  3000               	movlw	0
  2835  0515  05A8               	andwf	___ftadd@f2+2,f
  2836  0516  082E               	movf	___ftadd@exp2,w
  2837  0517  022F               	subwf	___ftadd@exp1,w
  2838  0518  1803               	skipnc
  2839  0519  2D40               	goto	l1372
  2840  051A                     l1362:	
  2841  051A  3001               	movlw	1
  2842  051B                     u1625:	
  2843  051B  1003               	clrc
  2844  051C  0DA6               	rlf	___ftadd@f2,f
  2845  051D  0DA7               	rlf	___ftadd@f2+1,f
  2846  051E  0DA8               	rlf	___ftadd@f2+2,f
  2847  051F  3EFF               	addlw	-1
  2848  0520  1D03               	skipz
  2849  0521  2D1B               	goto	u1625
  2850  0522  3001               	movlw	1
  2851  0523  02AE               	subwf	___ftadd@exp2,f
  2852  0524  082E               	movf	___ftadd@exp2,w
  2853  0525  062F               	xorwf	___ftadd@exp1,w
  2854  0526  1903               	skipnz
  2855  0527  2D3B               	goto	l1370
  2856  0528  3001               	movlw	1
  2857  0529  02AD               	subwf	___ftadd@sign,f
  2858  052A  082D               	movf	___ftadd@sign,w
  2859  052B  3907               	andlw	7
  2860  052C  1903               	btfsc	3,2
  2861  052D  2D3B               	goto	l1370
  2862  052E  2D1A               	goto	l1362
  2863  052F                     l1368:	
  2864  052F  3001               	movlw	1
  2865  0530                     u1655:	
  2866  0530  1003               	clrc
  2867  0531  0CA5               	rrf	___ftadd@f1+2,f
  2868  0532  0CA4               	rrf	___ftadd@f1+1,f
  2869  0533  0CA3               	rrf	___ftadd@f1,f
  2870  0534  3EFF               	addlw	-1
  2871  0535  1D03               	skipz
  2872  0536  2D30               	goto	u1655
  2873  0537  3001               	movlw	1
  2874  0538  00A9               	movwf	??___ftadd
  2875  0539  0829               	movf	??___ftadd,w
  2876  053A  07AF               	addwf	___ftadd@exp1,f
  2877  053B                     l1370:	
  2878  053B  082F               	movf	___ftadd@exp1,w
  2879  053C  062E               	xorwf	___ftadd@exp2,w
  2880  053D  1903               	btfsc	3,2
  2881  053E  2D69               	goto	l452
  2882  053F  2D2F               	goto	l1368
  2883  0540                     l1372:	
  2884  0540  082F               	movf	___ftadd@exp1,w
  2885  0541  022E               	subwf	___ftadd@exp2,w
  2886  0542  1803               	skipnc
  2887  0543  2D69               	goto	l452
  2888  0544                     l1374:	
  2889  0544  3001               	movlw	1
  2890  0545                     u1685:	
  2891  0545  1003               	clrc
  2892  0546  0DA3               	rlf	___ftadd@f1,f
  2893  0547  0DA4               	rlf	___ftadd@f1+1,f
  2894  0548  0DA5               	rlf	___ftadd@f1+2,f
  2895  0549  3EFF               	addlw	-1
  2896  054A  1D03               	skipz
  2897  054B  2D45               	goto	u1685
  2898  054C  3001               	movlw	1
  2899  054D  02AF               	subwf	___ftadd@exp1,f
  2900  054E  082E               	movf	___ftadd@exp2,w
  2901  054F  062F               	xorwf	___ftadd@exp1,w
  2902  0550  1903               	skipnz
  2903  0551  2D65               	goto	l1382
  2904  0552  3001               	movlw	1
  2905  0553  02AD               	subwf	___ftadd@sign,f
  2906  0554  082D               	movf	___ftadd@sign,w
  2907  0555  3907               	andlw	7
  2908  0556  1903               	btfsc	3,2
  2909  0557  2D65               	goto	l1382
  2910  0558  2D44               	goto	l1374
  2911  0559                     l1380:	
  2912  0559  3001               	movlw	1
  2913  055A                     u1715:	
  2914  055A  1003               	clrc
  2915  055B  0CA8               	rrf	___ftadd@f2+2,f
  2916  055C  0CA7               	rrf	___ftadd@f2+1,f
  2917  055D  0CA6               	rrf	___ftadd@f2,f
  2918  055E  3EFF               	addlw	-1
  2919  055F  1D03               	skipz
  2920  0560  2D5A               	goto	u1715
  2921  0561  3001               	movlw	1
  2922  0562  00A9               	movwf	??___ftadd
  2923  0563  0829               	movf	??___ftadd,w
  2924  0564  07AE               	addwf	___ftadd@exp2,f
  2925  0565                     l1382:	
  2926  0565  082F               	movf	___ftadd@exp1,w
  2927  0566  062E               	xorwf	___ftadd@exp2,w
  2928  0567  1D03               	skipz
  2929  0568  2D59               	goto	l1380
  2930  0569                     l452:	
  2931  0569  1FAD               	btfss	___ftadd@sign,7
  2932  056A  2D7B               	goto	l1386
  2933  056B  30FF               	movlw	255
  2934  056C  06A3               	xorwf	___ftadd@f1,f
  2935  056D  30FF               	movlw	255
  2936  056E  06A4               	xorwf	___ftadd@f1+1,f
  2937  056F  30FF               	movlw	255
  2938  0570  06A5               	xorwf	___ftadd@f1+2,f
  2939  0571  3001               	movlw	1
  2940  0572  07A3               	addwf	___ftadd@f1,f
  2941  0573  3000               	movlw	0
  2942  0574  1803               	skipnc
  2943  0575  3001               	movlw	1
  2944  0576  07A4               	addwf	___ftadd@f1+1,f
  2945  0577  3000               	movlw	0
  2946  0578  1803               	skipnc
  2947  0579  3001               	movlw	1
  2948  057A  07A5               	addwf	___ftadd@f1+2,f
  2949  057B                     l1386:	
  2950  057B  1F2D               	btfss	___ftadd@sign,6
  2951  057C  2D8D               	goto	l1390
  2952  057D  30FF               	movlw	255
  2953  057E  06A6               	xorwf	___ftadd@f2,f
  2954  057F  30FF               	movlw	255
  2955  0580  06A7               	xorwf	___ftadd@f2+1,f
  2956  0581  30FF               	movlw	255
  2957  0582  06A8               	xorwf	___ftadd@f2+2,f
  2958  0583  3001               	movlw	1
  2959  0584  07A6               	addwf	___ftadd@f2,f
  2960  0585  3000               	movlw	0
  2961  0586  1803               	skipnc
  2962  0587  3001               	movlw	1
  2963  0588  07A7               	addwf	___ftadd@f2+1,f
  2964  0589  3000               	movlw	0
  2965  058A  1803               	skipnc
  2966  058B  3001               	movlw	1
  2967  058C  07A8               	addwf	___ftadd@f2+2,f
  2968  058D                     l1390:	
  2969  058D  01AD               	clrf	___ftadd@sign
  2970  058E  0823               	movf	___ftadd@f1,w
  2971  058F  07A6               	addwf	___ftadd@f2,f
  2972  0590  0824               	movf	___ftadd@f1+1,w
  2973  0591  1103               	clrz
  2974  0592  1803               	skipnc
  2975  0593  0A24               	incf	___ftadd@f1+1,w
  2976  0594  1D03               	btfss	3,2
  2977  0595  07A7               	addwf	___ftadd@f2+1,f
  2978  0596  0825               	movf	___ftadd@f1+2,w
  2979  0597  1103               	clrz
  2980  0598  1803               	skipnc
  2981  0599  0A25               	incf	___ftadd@f1+2,w
  2982  059A  1D03               	btfss	3,2
  2983  059B  07A8               	addwf	___ftadd@f2+2,f
  2984  059C  1FA8               	btfss	___ftadd@f2+2,7
  2985  059D  2DB0               	goto	l1400
  2986  059E  30FF               	movlw	255
  2987  059F  06A6               	xorwf	___ftadd@f2,f
  2988  05A0  30FF               	movlw	255
  2989  05A1  06A7               	xorwf	___ftadd@f2+1,f
  2990  05A2  30FF               	movlw	255
  2991  05A3  06A8               	xorwf	___ftadd@f2+2,f
  2992  05A4  3001               	movlw	1
  2993  05A5  07A6               	addwf	___ftadd@f2,f
  2994  05A6  3000               	movlw	0
  2995  05A7  1803               	skipnc
  2996  05A8  3001               	movlw	1
  2997  05A9  07A7               	addwf	___ftadd@f2+1,f
  2998  05AA  3000               	movlw	0
  2999  05AB  1803               	skipnc
  3000  05AC  3001               	movlw	1
  3001  05AD  07A8               	addwf	___ftadd@f2+2,f
  3002  05AE  01AD               	clrf	___ftadd@sign
  3003  05AF  0AAD               	incf	___ftadd@sign,f
  3004  05B0                     l1400:	
  3005  05B0  0826               	movf	___ftadd@f2,w
  3006  05B1  00F0               	movwf	___ftpack@arg
  3007  05B2  0827               	movf	___ftadd@f2+1,w
  3008  05B3  00F1               	movwf	___ftpack@arg+1
  3009  05B4  0828               	movf	___ftadd@f2+2,w
  3010  05B5  00F2               	movwf	___ftpack@arg+2
  3011  05B6  082F               	movf	___ftadd@exp1,w
  3012  05B7  00A9               	movwf	??___ftadd
  3013  05B8  0829               	movf	??___ftadd,w
  3014  05B9  00F3               	movwf	___ftpack@exp
  3015  05BA  082D               	movf	___ftadd@sign,w
  3016  05BB  00AA               	movwf	??___ftadd+1
  3017  05BC  082A               	movf	??___ftadd+1,w
  3018  05BD  00F4               	movwf	___ftpack@sign
  3019  05BE  120A  118A  2033   	fcall	___ftpack
  3020  05C1  0870               	movf	?___ftpack,w
  3021  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  3022  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  3023  05C4  00A3               	movwf	?___ftadd
  3024  05C5  0871               	movf	?___ftpack+1,w
  3025  05C6  00A4               	movwf	?___ftadd+1
  3026  05C7  0872               	movf	?___ftpack+2,w
  3027  05C8  00A5               	movwf	?___ftadd+2
  3028  05C9  0008               	return
  3029  05CA                     __end_of___ftadd:	
  3030                           
  3031                           	psect	text11
  3032  0033                     __ptext11:	
  3033 ;; *************** function ___ftpack *****************
  3034 ;; Defined at:
  3035 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\float.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;  arg             3    0[COMMON] unsigned um
  3038 ;;  exp             1    3[COMMON] unsigned char 
  3039 ;;  sign            1    4[COMMON] unsigned char 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;		None
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  3    0[COMMON] float 
  3044 ;; Registers used:
  3045 ;;		wreg, status,2, status,0
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3051 ;;      Params:         5       0       0       0       0
  3052 ;;      Locals:         0       0       0       0       0
  3053 ;;      Temps:          3       0       0       0       0
  3054 ;;      Totals:         8       0       0       0       0
  3055 ;;Total ram usage:        8 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		___awtoft
  3061 ;;		___ftadd
  3062 ;;		___ftdiv
  3063 ;;		___ftmul
  3064 ;;		___lltoft
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           
  3069                           ;psect for function ___ftpack
  3070  0033                     ___ftpack:	
  3071                           
  3072                           ;incstack = 0
  3073                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3074  0033  0873               	movf	___ftpack@exp,w
  3075  0034  1903               	btfsc	3,2
  3076  0035  283B               	goto	l1232
  3077  0036  0872               	movf	___ftpack@arg+2,w
  3078  0037  0471               	iorwf	___ftpack@arg+1,w
  3079  0038  0470               	iorwf	___ftpack@arg,w
  3080  0039  1D03               	skipz
  3081  003A  284E               	goto	l1238
  3082  003B                     l1232:	
  3083  003B  3000               	movlw	0
  3084  003C  00F0               	movwf	?___ftpack
  3085  003D  3000               	movlw	0
  3086  003E  00F1               	movwf	?___ftpack+1
  3087  003F  3000               	movlw	0
  3088  0040  00F2               	movwf	?___ftpack+2
  3089  0041  0008               	return
  3090  0042                     l1236:	
  3091  0042  3001               	movlw	1
  3092  0043  00F5               	movwf	??___ftpack
  3093  0044  0875               	movf	??___ftpack,w
  3094  0045  07F3               	addwf	___ftpack@exp,f
  3095  0046  3001               	movlw	1
  3096  0047                     u1245:	
  3097  0047  1003               	clrc
  3098  0048  0CF2               	rrf	___ftpack@arg+2,f
  3099  0049  0CF1               	rrf	___ftpack@arg+1,f
  3100  004A  0CF0               	rrf	___ftpack@arg,f
  3101  004B  3EFF               	addlw	-1
  3102  004C  1D03               	skipz
  3103  004D  2847               	goto	u1245
  3104  004E                     l1238:	
  3105  004E  30FE               	movlw	254
  3106  004F  0572               	andwf	___ftpack@arg+2,w
  3107  0050  1903               	btfsc	3,2
  3108  0051  2869               	goto	l421
  3109  0052  2842               	goto	l1236
  3110  0053                     l1240:	
  3111  0053  3001               	movlw	1
  3112  0054  00F5               	movwf	??___ftpack
  3113  0055  0875               	movf	??___ftpack,w
  3114  0056  07F3               	addwf	___ftpack@exp,f
  3115  0057  3001               	movlw	1
  3116  0058  07F0               	addwf	___ftpack@arg,f
  3117  0059  3000               	movlw	0
  3118  005A  1803               	skipnc
  3119  005B  3001               	movlw	1
  3120  005C  07F1               	addwf	___ftpack@arg+1,f
  3121  005D  3000               	movlw	0
  3122  005E  1803               	skipnc
  3123  005F  3001               	movlw	1
  3124  0060  07F2               	addwf	___ftpack@arg+2,f
  3125  0061  3001               	movlw	1
  3126  0062                     u1265:	
  3127  0062  1003               	clrc
  3128  0063  0CF2               	rrf	___ftpack@arg+2,f
  3129  0064  0CF1               	rrf	___ftpack@arg+1,f
  3130  0065  0CF0               	rrf	___ftpack@arg,f
  3131  0066  3EFF               	addlw	-1
  3132  0067  1D03               	skipz
  3133  0068  2862               	goto	u1265
  3134  0069                     l421:	
  3135  0069  30FF               	movlw	255
  3136  006A  0572               	andwf	___ftpack@arg+2,w
  3137  006B  1903               	btfsc	3,2
  3138  006C  2878               	goto	l1248
  3139  006D  2853               	goto	l1240
  3140  006E                     l1246:	
  3141  006E  3001               	movlw	1
  3142  006F  02F3               	subwf	___ftpack@exp,f
  3143  0070  3001               	movlw	1
  3144  0071                     u1285:	
  3145  0071  1003               	clrc
  3146  0072  0DF0               	rlf	___ftpack@arg,f
  3147  0073  0DF1               	rlf	___ftpack@arg+1,f
  3148  0074  0DF2               	rlf	___ftpack@arg+2,f
  3149  0075  3EFF               	addlw	-1
  3150  0076  1D03               	skipz
  3151  0077  2871               	goto	u1285
  3152  0078                     l1248:	
  3153  0078  1BF1               	btfsc	___ftpack@arg+1,7
  3154  0079  287E               	goto	l428
  3155  007A  3002               	movlw	2
  3156  007B  0273               	subwf	___ftpack@exp,w
  3157  007C  1803               	skipnc
  3158  007D  286E               	goto	l1246
  3159  007E                     l428:	
  3160  007E  1873               	btfsc	___ftpack@exp,0
  3161  007F  2886               	goto	l429
  3162  0080  30FF               	movlw	255
  3163  0081  05F0               	andwf	___ftpack@arg,f
  3164  0082  307F               	movlw	127
  3165  0083  05F1               	andwf	___ftpack@arg+1,f
  3166  0084  30FF               	movlw	255
  3167  0085  05F2               	andwf	___ftpack@arg+2,f
  3168  0086                     l429:	
  3169  0086  1003               	clrc
  3170  0087  0CF3               	rrf	___ftpack@exp,f
  3171  0088  0873               	movf	___ftpack@exp,w
  3172  0089  00F5               	movwf	??___ftpack
  3173  008A  01F6               	clrf	??___ftpack+1
  3174  008B  01F7               	clrf	??___ftpack+2
  3175  008C  3010               	movlw	16
  3176  008D                     u1325:	
  3177  008D  1003               	clrc
  3178  008E  0DF5               	rlf	??___ftpack,f
  3179  008F  0DF6               	rlf	??___ftpack+1,f
  3180  0090  0DF7               	rlf	??___ftpack+2,f
  3181  0091  3EFF               	addlw	-1
  3182  0092  1D03               	skipz
  3183  0093  288D               	goto	u1325
  3184  0094  0875               	movf	??___ftpack,w
  3185  0095  04F0               	iorwf	___ftpack@arg,f
  3186  0096  0876               	movf	??___ftpack+1,w
  3187  0097  04F1               	iorwf	___ftpack@arg+1,f
  3188  0098  0877               	movf	??___ftpack+2,w
  3189  0099  04F2               	iorwf	___ftpack@arg+2,f
  3190  009A  0874               	movf	___ftpack@sign,w
  3191  009B  1903               	btfsc	3,2
  3192  009C  0008               	return
  3193  009D  17F2               	bsf	___ftpack@arg+2,7
  3194  009E  0008               	return
  3195  009F                     __end_of___ftpack:	
  3196                           
  3197                           	psect	text12
  3198  03CF                     __ptext12:	
  3199 ;; *************** function _UART_TxNumber *****************
  3200 ;; Defined at:
  3201 ;;		line 259 in file "../00-libfiles/uart.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  v_numericSys    1    wreg     unsigned char 
  3204 ;;  v_number_u32    4    4[BANK0 ] unsigned long 
  3205 ;;  v_numOfDigit    1    8[BANK0 ] unsigned char 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  v_numericSys    1   33[BANK0 ] unsigned char 
  3208 ;;  a              10   21[BANK0 ] unsigned char [10]
  3209 ;;  i               1   34[BANK0 ] unsigned char 
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  1    wreg      void 
  3212 ;; Registers used:
  3213 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3219 ;;      Params:         0       5       0       0       0
  3220 ;;      Locals:         0      14       0       0       0
  3221 ;;      Temps:          0      12       0       0       0
  3222 ;;      Totals:         0      31       0       0       0
  3223 ;;Total ram usage:       31 bytes
  3224 ;; Hardware stack levels used:    1
  3225 ;; Hardware stack levels required when called:    1
  3226 ;; This function calls:
  3227 ;;		_UART_TxChar
  3228 ;;		___bmul
  3229 ;;		___lldiv
  3230 ;; This function is called by:
  3231 ;;		_UART_TxFloatNumber
  3232 ;;		_UART_Printf
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           
  3237                           ;psect for function _UART_TxNumber
  3238  03CF                     _UART_TxNumber:	
  3239                           
  3240                           ;incstack = 0
  3241                           ; Regs used in _UART_TxNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3242                           ;UART_TxNumber@v_numericSystem_u8 stored from wreg
  3243  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  3244  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  3245  03D1  00C1               	movwf	UART_TxNumber@v_numericSystem_u8
  3246                           
  3247                           ;uart.c: 261: uint8_t i=0,a[10];
  3248  03D2  01C2               	clrf	UART_TxNumber@i
  3249                           
  3250                           ;uart.c: 263: if(2u == v_numericSystem_u8)
  3251  03D3  3002               	movlw	2
  3252  03D4  0641               	xorwf	UART_TxNumber@v_numericSystem_u8,w
  3253  03D5  1903               	btfsc	3,2
  3254  03D6  2C16               	goto	l1296
  3255  03D7  2C1A               	goto	l1298
  3256  03D8                     l1290:	
  3257                           ;uart.c: 264: {
  3258                           ;uart.c: 265: while(v_numOfDigitsToTransmit_u8!=0)
  3259                           
  3260                           
  3261                           ;uart.c: 266: {
  3262                           ;uart.c: 269: i = (((v_number_u32)&((1<<((v_numOfDigitsToTransmit_u8-1)))))!=0u);
  3263  03D8  0824               	movf	UART_TxNumber@v_number_u32,w
  3264  03D9  00A9               	movwf	??_UART_TxNumber
  3265  03DA  0825               	movf	UART_TxNumber@v_number_u32+1,w
  3266  03DB  00AA               	movwf	??_UART_TxNumber+1
  3267  03DC  0826               	movf	UART_TxNumber@v_number_u32+2,w
  3268  03DD  00AB               	movwf	??_UART_TxNumber+2
  3269  03DE  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3270  03DF  00AC               	movwf	??_UART_TxNumber+3
  3271  03E0  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3272  03E1  3EFF               	addlw	-1
  3273  03E2  00AD               	movwf	??_UART_TxNumber+4
  3274  03E3  0AAD               	incf	??_UART_TxNumber+4,f
  3275  03E4  3001               	movlw	1
  3276  03E5  00AE               	movwf	??_UART_TxNumber+5
  3277  03E6  3000               	movlw	0
  3278  03E7  00AF               	movwf	??_UART_TxNumber+6
  3279  03E8  2BEC               	goto	u1424
  3280  03E9                     u1425:	
  3281  03E9  1003               	clrc
  3282  03EA  0DAE               	rlf	??_UART_TxNumber+5,f
  3283  03EB  0DAF               	rlf	??_UART_TxNumber+6,f
  3284  03EC                     u1424:	
  3285  03EC  0BAD               	decfsz	??_UART_TxNumber+4,f
  3286  03ED  2BE9               	goto	u1425
  3287  03EE  082E               	movf	??_UART_TxNumber+5,w
  3288  03EF  00B0               	movwf	??_UART_TxNumber+7
  3289  03F0  082F               	movf	??_UART_TxNumber+6,w
  3290  03F1  00B1               	movwf	??_UART_TxNumber+8
  3291  03F2  3000               	movlw	0
  3292  03F3  1BB1               	btfsc	??_UART_TxNumber+8,7
  3293  03F4  30FF               	movlw	255
  3294  03F5  00B2               	movwf	??_UART_TxNumber+9
  3295  03F6  00B3               	movwf	??_UART_TxNumber+10
  3296  03F7  0830               	movf	??_UART_TxNumber+7,w
  3297  03F8  05A9               	andwf	??_UART_TxNumber,f
  3298  03F9  0831               	movf	??_UART_TxNumber+8,w
  3299  03FA  05AA               	andwf	??_UART_TxNumber+1,f
  3300  03FB  0832               	movf	??_UART_TxNumber+9,w
  3301  03FC  05AB               	andwf	??_UART_TxNumber+2,f
  3302  03FD  0833               	movf	??_UART_TxNumber+10,w
  3303  03FE  05AC               	andwf	??_UART_TxNumber+3,f
  3304  03FF  082C               	movf	??_UART_TxNumber+3,w
  3305  0400  042B               	iorwf	??_UART_TxNumber+2,w
  3306  0401  042A               	iorwf	??_UART_TxNumber+1,w
  3307  0402  0429               	iorwf	??_UART_TxNumber,w
  3308  0403  1903               	btfsc	3,2
  3309  0404  2C07               	goto	u1430
  3310  0405  3001               	movlw	1
  3311  0406  2C08               	goto	u1440
  3312  0407                     u1430:	
  3313  0407  3000               	movlw	0
  3314  0408                     u1440:	
  3315  0408  00B4               	movwf	??_UART_TxNumber+11
  3316  0409  0834               	movf	??_UART_TxNumber+11,w
  3317  040A  00C2               	movwf	UART_TxNumber@i
  3318                           
  3319                           ;uart.c: 270: UART_TxChar(((i)+0x30));
  3320  040B  0842               	movf	UART_TxNumber@i,w
  3321  040C  3E30               	addlw	48
  3322  040D  120A  158A  26AC  120A  118A  	fcall	_UART_TxChar
  3323                           
  3324                           ;uart.c: 271: v_numOfDigitsToTransmit_u8--;
  3325  0412  3001               	movlw	1
  3326  0413  1283               	bcf	3,5	;RP0=0, select bank0
  3327  0414  1303               	bcf	3,6	;RP1=0, select bank0
  3328  0415  02A8               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,f
  3329  0416                     l1296:	
  3330  0416  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3331  0417  1903               	btfsc	3,2
  3332  0418  0008               	return
  3333  0419  2BD8               	goto	l1290
  3334  041A                     l1298:	
  3335                           ;uart.c: 272: }
  3336                           ;uart.c: 273: }
  3337                           
  3338                           
  3339                           ;uart.c: 274: else if(v_number_u32==0)
  3340  041A  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3341  041B  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  3342  041C  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  3343  041D  0424               	iorwf	UART_TxNumber@v_number_u32,w
  3344  041E  1D03               	skipz
  3345  041F  2C25               	goto	l1302
  3346                           
  3347                           ;uart.c: 275: {
  3348                           ;uart.c: 278: UART_TxChar('0');
  3349  0420  3030               	movlw	48
  3350  0421  120A  158A  26AC   	fcall	_UART_TxChar
  3351                           
  3352                           ;uart.c: 279: }
  3353  0424  0008               	return
  3354  0425                     l1302:	
  3355                           
  3356                           ;uart.c: 280: else
  3357                           ;uart.c: 281: {
  3358                           ;uart.c: 282: for(i=0;i<v_numOfDigitsToTransmit_u8;i++)
  3359  0425  1283               	bcf	3,5	;RP0=0, select bank0
  3360  0426  1303               	bcf	3,6	;RP1=0, select bank0
  3361  0427  01C2               	clrf	UART_TxNumber@i
  3362  0428                     l1320:	
  3363  0428  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3364  0429  0242               	subwf	UART_TxNumber@i,w
  3365  042A  1803               	btfsc	3,0
  3366  042B  2CBD               	goto	l1332
  3367                           
  3368                           ;uart.c: 283: {
  3369                           ;uart.c: 286: if(v_number_u32!=0)
  3370  042C  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3371  042D  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  3372  042E  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  3373  042F  0424               	iorwf	UART_TxNumber@v_number_u32,w
  3374  0430  1903               	skipnz
  3375  0431  2C87               	goto	l1310
  3376                           
  3377                           ;uart.c: 287: {
  3378                           ;uart.c: 294: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u
      +                          32/v_numericSystem_u8)));
  3379  0432  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  3380  0433  00A9               	movwf	??_UART_TxNumber
  3381  0434  0829               	movf	??_UART_TxNumber,w
  3382  0435  00A0               	movwf	___bmul@multiplicand
  3383  0436  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3384  0437  00F7               	movwf	___lldiv@dividend+3
  3385  0438  0826               	movf	UART_TxNumber@v_number_u32+2,w
  3386  0439  00F6               	movwf	___lldiv@dividend+2
  3387  043A  0825               	movf	UART_TxNumber@v_number_u32+1,w
  3388  043B  00F5               	movwf	___lldiv@dividend+1
  3389  043C  0824               	movf	UART_TxNumber@v_number_u32,w
  3390  043D  00F4               	movwf	___lldiv@dividend
  3391  043E  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  3392  043F  00AA               	movwf	??_UART_TxNumber+1
  3393  0440  01AB               	clrf	??_UART_TxNumber+2
  3394  0441  01AC               	clrf	??_UART_TxNumber+3
  3395  0442  01AD               	clrf	??_UART_TxNumber+4
  3396  0443  082D               	movf	??_UART_TxNumber+4,w
  3397  0444  00F3               	movwf	___lldiv@divisor+3
  3398  0445  082C               	movf	??_UART_TxNumber+3,w
  3399  0446  00F2               	movwf	___lldiv@divisor+2
  3400  0447  082B               	movf	??_UART_TxNumber+2,w
  3401  0448  00F1               	movwf	___lldiv@divisor+1
  3402  0449  082A               	movf	??_UART_TxNumber+1,w
  3403  044A  00F0               	movwf	___lldiv@divisor
  3404  044B  120A  158A  27A2  120A  118A  	fcall	___lldiv
  3405  0450  0870               	movf	?___lldiv,w
  3406  0451  120A  158A  26CA  120A  118A  	fcall	___bmul
  3407  0456  3AFF               	xorlw	255
  3408  0457  3E01               	addlw	1
  3409  0458  1283               	bcf	3,5	;RP0=0, select bank0
  3410  0459  1303               	bcf	3,6	;RP1=0, select bank0
  3411  045A  0724               	addwf	UART_TxNumber@v_number_u32,w
  3412  045B  00AE               	movwf	??_UART_TxNumber+5
  3413  045C  0842               	movf	UART_TxNumber@i,w
  3414  045D  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3415  045E  0084               	movwf	4
  3416  045F  082E               	movf	??_UART_TxNumber+5,w
  3417  0460  1383               	bcf	3,7	;select IRP bank0
  3418  0461  0080               	movwf	0
  3419                           
  3420                           ;uart.c: 295: v_number_u32=v_number_u32/v_numericSystem_u8;
  3421  0462  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  3422  0463  00A9               	movwf	??_UART_TxNumber
  3423  0464  01AA               	clrf	??_UART_TxNumber+1
  3424  0465  01AB               	clrf	??_UART_TxNumber+2
  3425  0466  01AC               	clrf	??_UART_TxNumber+3
  3426  0467  082C               	movf	??_UART_TxNumber+3,w
  3427  0468  00F3               	movwf	___lldiv@divisor+3
  3428  0469  082B               	movf	??_UART_TxNumber+2,w
  3429  046A  00F2               	movwf	___lldiv@divisor+2
  3430  046B  082A               	movf	??_UART_TxNumber+1,w
  3431  046C  00F1               	movwf	___lldiv@divisor+1
  3432  046D  0829               	movf	??_UART_TxNumber,w
  3433  046E  00F0               	movwf	___lldiv@divisor
  3434  046F  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3435  0470  00F7               	movwf	___lldiv@dividend+3
  3436  0471  0826               	movf	UART_TxNumber@v_number_u32+2,w
  3437  0472  00F6               	movwf	___lldiv@dividend+2
  3438  0473  0825               	movf	UART_TxNumber@v_number_u32+1,w
  3439  0474  00F5               	movwf	___lldiv@dividend+1
  3440  0475  0824               	movf	UART_TxNumber@v_number_u32,w
  3441  0476  00F4               	movwf	___lldiv@dividend
  3442  0477  120A  158A  27A2  120A  118A  	fcall	___lldiv
  3443  047C  0873               	movf	?___lldiv+3,w
  3444  047D  1283               	bcf	3,5	;RP0=0, select bank0
  3445  047E  1303               	bcf	3,6	;RP1=0, select bank0
  3446  047F  00A7               	movwf	UART_TxNumber@v_number_u32+3
  3447  0480  0872               	movf	?___lldiv+2,w
  3448  0481  00A6               	movwf	UART_TxNumber@v_number_u32+2
  3449  0482  0871               	movf	?___lldiv+1,w
  3450  0483  00A5               	movwf	UART_TxNumber@v_number_u32+1
  3451  0484  0870               	movf	?___lldiv,w
  3452  0485  00A4               	movwf	UART_TxNumber@v_number_u32
  3453                           
  3454                           ;uart.c: 296: }
  3455  0486  2C93               	goto	l1318
  3456  0487                     l1310:	
  3457                           
  3458                           ;uart.c: 297: else if( (v_numOfDigitsToTransmit_u8 == 0xffu) ||
  3459                           ;uart.c: 298: (v_numOfDigitsToTransmit_u8 > 10u))
  3460  0487  0A28               	incf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3461  0488  1903               	btfsc	3,2
  3462  0489  2CBD               	goto	l1332
  3463  048A  300B               	movlw	11
  3464  048B  0228               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3465  048C  1803               	btfsc	3,0
  3466  048D  2CBD               	goto	l1332
  3467                           
  3468                           ;uart.c: 304: else
  3469                           ;uart.c: 305: {
  3470                           ;uart.c: 309: a[i]=0;
  3471                           
  3472                           ;uart.c: 303: }
  3473                           
  3474                           ;uart.c: 299: {
  3475                           ;uart.c: 302: break;
  3476  048E  0842               	movf	UART_TxNumber@i,w
  3477  048F  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3478  0490  0084               	movwf	4
  3479  0491  1383               	bcf	3,7	;select IRP bank0
  3480  0492  0180               	clrf	0
  3481  0493                     l1318:	
  3482  0493  3001               	movlw	1
  3483  0494  00A9               	movwf	??_UART_TxNumber
  3484  0495  0829               	movf	??_UART_TxNumber,w
  3485  0496  07C2               	addwf	UART_TxNumber@i,f
  3486  0497  2C28               	goto	l1320
  3487  0498                     l1322:	
  3488                           ;uart.c: 310: }
  3489                           ;uart.c: 311: }
  3490                           ;uart.c: 313: while(i)
  3491                           
  3492                           
  3493                           ;uart.c: 314: {
  3494                           ;uart.c: 316: UART_TxChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  3495  0498  0842               	movf	UART_TxNumber@i,w
  3496  0499  3EFF               	addlw	255
  3497  049A  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3498  049B  0084               	movwf	4
  3499  049C  300A               	movlw	10
  3500  049D  1383               	bcf	3,7	;select IRP bank0
  3501  049E  0200               	subwf	0,w
  3502  049F  1803               	skipnc
  3503  04A0  2CA8               	goto	l1326
  3504  04A1  0842               	movf	UART_TxNumber@i,w
  3505  04A2  3EFF               	addlw	255
  3506  04A3  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3507  04A4  0084               	movwf	4
  3508  04A5  0800               	movf	0,w
  3509  04A6  3E30               	addlw	48
  3510  04A7  2CAE               	goto	L2
  3511  04A8                     l1326:	
  3512  04A8  0842               	movf	UART_TxNumber@i,w
  3513  04A9  3EFF               	addlw	255
  3514  04AA  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3515  04AB  0084               	movwf	4
  3516  04AC  0800               	movf	0,w
  3517  04AD  3E37               	addlw	55
  3518  04AE                     L2:	
  3519  04AE  00BF               	movwf	_UART_TxNumber$63
  3520  04AF  3000               	movlw	0
  3521  04B0  1803               	skipnc
  3522  04B1  3001               	movlw	1
  3523  04B2  00C0               	movwf	_UART_TxNumber$63+1
  3524  04B3  083F               	movf	_UART_TxNumber$63,w
  3525  04B4  120A  158A  26AC  120A  118A  	fcall	_UART_TxChar
  3526                           
  3527                           ;uart.c: 317: i--;
  3528  04B9  3001               	movlw	1
  3529  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  3530  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  3531  04BC  02C2               	subwf	UART_TxNumber@i,f
  3532  04BD                     l1332:	
  3533  04BD  0842               	movf	UART_TxNumber@i,w
  3534  04BE  1903               	btfsc	3,2
  3535  04BF  0008               	return
  3536  04C0  2C98               	goto	l1322
  3537  04C1                     __end_of_UART_TxNumber:	
  3538                           
  3539                           	psect	text13
  3540  0ECA                     __ptext13:	
  3541 ;; *************** function ___bmul *****************
  3542 ;; Defined at:
  3543 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\Umul8.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  multiplier      1    wreg     unsigned char 
  3546 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3549 ;;  product         1    2[BANK0 ] unsigned char 
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      unsigned char 
  3552 ;; Registers used:
  3553 ;;		wreg, status,2, status,0
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3559 ;;      Params:         0       1       0       0       0
  3560 ;;      Locals:         0       2       0       0       0
  3561 ;;      Temps:          0       1       0       0       0
  3562 ;;      Totals:         0       4       0       0       0
  3563 ;;Total ram usage:        4 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; This function calls:
  3566 ;;		Nothing
  3567 ;; This function is called by:
  3568 ;;		_UART_TxNumber
  3569 ;;		_UART_Printf
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573                           
  3574                           ;psect for function ___bmul
  3575  0ECA                     ___bmul:	
  3576                           
  3577                           ;incstack = 0
  3578                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3579                           ;___bmul@multiplier stored from wreg
  3580  0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  3581  0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  3582  0ECC  00A3               	movwf	___bmul@multiplier
  3583  0ECD  01A2               	clrf	___bmul@product
  3584  0ECE                     l1216:	
  3585  0ECE  1C23               	btfss	___bmul@multiplier,0
  3586  0ECF  2ED4               	goto	l1220
  3587  0ED0  0820               	movf	___bmul@multiplicand,w
  3588  0ED1  00A1               	movwf	??___bmul
  3589  0ED2  0821               	movf	??___bmul,w
  3590  0ED3  07A2               	addwf	___bmul@product,f
  3591  0ED4                     l1220:	
  3592  0ED4  1003               	clrc
  3593  0ED5  0DA0               	rlf	___bmul@multiplicand,f
  3594  0ED6  1003               	clrc
  3595  0ED7  0CA3               	rrf	___bmul@multiplier,f
  3596  0ED8  0823               	movf	___bmul@multiplier,w
  3597  0ED9  1D03               	btfss	3,2
  3598  0EDA  2ECE               	goto	l1216
  3599  0EDB  0822               	movf	___bmul@product,w
  3600  0EDC  0008               	return
  3601  0EDD                     __end_of___bmul:	
  3602                           
  3603                           	psect	text14
  3604  0EAC                     __ptext14:	
  3605 ;; *************** function _UART_TxChar *****************
  3606 ;; Defined at:
  3607 ;;		line 144 in file "../00-libfiles/uart.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  var_uartData    1    wreg     unsigned char 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;  var_uartData    1    0[COMMON] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3621 ;;      Params:         0       0       0       0       0
  3622 ;;      Locals:         1       0       0       0       0
  3623 ;;      Temps:          0       0       0       0       0
  3624 ;;      Totals:         1       0       0       0       0
  3625 ;;Total ram usage:        1 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; This function calls:
  3628 ;;		Nothing
  3629 ;; This function is called by:
  3630 ;;		_UART_TxString
  3631 ;;		_UART_TxNumber
  3632 ;;		_UART_TxFloatNumber
  3633 ;;		_UART_Printf
  3634 ;;		_UART_RxString
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           
  3639                           ;psect for function _UART_TxChar
  3640  0EAC                     _UART_TxChar:	
  3641                           
  3642                           ;incstack = 0
  3643                           ; Regs used in _UART_TxChar: [wreg]
  3644                           ;UART_TxChar@var_uartData_u8 stored from wreg
  3645  0EAC  00F0               	movwf	UART_TxChar@var_uartData_u8
  3646  0EAD                     l39:	
  3647                           ;uart.c: 146: while(TXIF==0);
  3648                           
  3649  0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  3650  0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  3651  0EAF  1E0C               	btfss	12,4	;volatile
  3652  0EB0  2EAD               	goto	l39
  3653                           
  3654                           ;uart.c: 147: TXIF=0;
  3655  0EB1  120C               	bcf	12,4	;volatile
  3656                           
  3657                           ;uart.c: 148: TXREG=var_uartData_u8;
  3658  0EB2  0870               	movf	UART_TxChar@var_uartData_u8,w
  3659  0EB3  0099               	movwf	25	;volatile
  3660  0EB4  0008               	return
  3661  0EB5                     __end_of_UART_TxChar:	
  3662                           
  3663                           	psect	text15
  3664  0EF2                     __ptext15:	
  3665 ;; *************** function _UART_Init *****************
  3666 ;; Defined at:
  3667 ;;		line 65 in file "../00-libfiles/uart.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;  var_baudRate    4   16[BANK0 ] unsigned long 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2, status,0, pclath, cstack
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3681 ;;      Params:         0       4       0       0       0
  3682 ;;      Locals:         0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0
  3684 ;;      Totals:         0       4       0       0       0
  3685 ;;Total ram usage:        4 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:    2
  3688 ;; This function calls:
  3689 ;;		_UART_SetBaudRate
  3690 ;; This function is called by:
  3691 ;;		_main
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           
  3696                           ;psect for function _UART_Init
  3697  0EF2                     _UART_Init:	
  3698                           
  3699                           ;uart.c: 67: TRISC=0x80;
  3700                           
  3701                           ;incstack = 0
  3702                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3703  0EF2  3080               	movlw	128
  3704  0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  3705  0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  3706  0EF5  0087               	movwf	7	;volatile
  3707                           
  3708                           ;uart.c: 68: TXSTA=0x20;
  3709  0EF6  3020               	movlw	32
  3710  0EF7  0098               	movwf	24	;volatile
  3711                           
  3712                           ;uart.c: 69: RCSTA=0x90;
  3713  0EF8  3090               	movlw	144
  3714  0EF9  1283               	bcf	3,5	;RP0=0, select bank0
  3715  0EFA  1303               	bcf	3,6	;RP1=0, select bank0
  3716  0EFB  0098               	movwf	24	;volatile
  3717                           
  3718                           ;uart.c: 70: UART_SetBaudRate(var_baudRate_u32);
  3719  0EFC  0833               	movf	UART_Init@var_baudRate_u32+3,w
  3720  0EFD  00A3               	movwf	UART_SetBaudRate@var_baudRate_u32+3
  3721  0EFE  0832               	movf	UART_Init@var_baudRate_u32+2,w
  3722  0EFF  00A2               	movwf	UART_SetBaudRate@var_baudRate_u32+2
  3723  0F00  0831               	movf	UART_Init@var_baudRate_u32+1,w
  3724  0F01  00A1               	movwf	UART_SetBaudRate@var_baudRate_u32+1
  3725  0F02  0830               	movf	UART_Init@var_baudRate_u32,w
  3726  0F03  00A0               	movwf	UART_SetBaudRate@var_baudRate_u32
  3727  0F04  120A  118A  209F   	fcall	_UART_SetBaudRate
  3728  0F07  0008               	return
  3729  0F08                     __end_of_UART_Init:	
  3730                           
  3731                           	psect	text16
  3732  009F                     __ptext16:	
  3733 ;; *************** function _UART_SetBaudRate *****************
  3734 ;; Defined at:
  3735 ;;		line 90 in file "../00-libfiles/uart.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  var_baudRate    4    0[BANK0 ] unsigned long 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  RegValue        4   12[BANK0 ] unsigned long 
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2, status,0, pclath, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3749 ;;      Params:         0       4       0       0       0
  3750 ;;      Locals:         0       4       0       0       0
  3751 ;;      Temps:          0       8       0       0       0
  3752 ;;      Totals:         0      16       0       0       0
  3753 ;;Total ram usage:       16 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; Hardware stack levels required when called:    1
  3756 ;; This function calls:
  3757 ;;		___lldiv
  3758 ;; This function is called by:
  3759 ;;		_UART_Init
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           
  3764                           ;psect for function _UART_SetBaudRate
  3765  009F                     _UART_SetBaudRate:	
  3766                           
  3767                           ;uart.c: 92: uint32_t RegValue;
  3768                           ;uart.c: 94: if((var_baudRate_u32 >= 2400) && (var_baudRate_u32<=115200UL))
  3769                           
  3770                           ;incstack = 0
  3771                           ; Regs used in _UART_SetBaudRate: [wreg+status,2+status,0+pclath+cstack]
  3772  009F  1283               	bcf	3,5	;RP0=0, select bank0
  3773  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  3774  00A1  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  3775  00A2  1D03               	btfss	3,2
  3776  00A3  28B1               	goto	l1516
  3777  00A4  0822               	movf	UART_SetBaudRate@var_baudRate_u32+2,w
  3778  00A5  1D03               	btfss	3,2
  3779  00A6  28B1               	goto	l1516
  3780  00A7  3009               	movlw	9
  3781  00A8  0221               	subwf	UART_SetBaudRate@var_baudRate_u32+1,w
  3782  00A9  1D03               	skipz
  3783  00AA  28AF               	goto	u2043
  3784  00AB  3060               	movlw	96
  3785  00AC  0220               	subwf	UART_SetBaudRate@var_baudRate_u32,w
  3786  00AD  1D03               	skipz
  3787  00AE  28AF               	goto	u2043
  3788  00AF                     u2043:	
  3789  00AF  1C03               	btfss	3,0
  3790  00B0  290C               	goto	l1520
  3791  00B1                     l1516:	
  3792  00B1  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  3793  00B2  1D03               	btfss	3,2
  3794  00B3  290C               	goto	l1520
  3795  00B4  3001               	movlw	1
  3796  00B5  0222               	subwf	UART_SetBaudRate@var_baudRate_u32+2,w
  3797  00B6  1D03               	skipz
  3798  00B7  28C0               	goto	u2053
  3799  00B8  30C2               	movlw	194
  3800  00B9  0221               	subwf	UART_SetBaudRate@var_baudRate_u32+1,w
  3801  00BA  1D03               	skipz
  3802  00BB  28C0               	goto	u2053
  3803  00BC  3001               	movlw	1
  3804  00BD  0220               	subwf	UART_SetBaudRate@var_baudRate_u32,w
  3805  00BE  1D03               	skipz
  3806  00BF  28C0               	goto	u2053
  3807  00C0                     u2053:	
  3808  00C0  1803               	btfsc	3,0
  3809  00C1  290C               	goto	l1520
  3810                           
  3811                           ;uart.c: 95: {
  3812                           ;uart.c: 98: RegValue = (uint32_t)((20000000UL / (64*(uint32_t)var_baudRate_u32)) - 1);
  3813  00C2  30FF               	movlw	255
  3814  00C3  00A4               	movwf	??_UART_SetBaudRate
  3815  00C4  30FF               	movlw	255
  3816  00C5  00A5               	movwf	??_UART_SetBaudRate+1
  3817  00C6  30FF               	movlw	255
  3818  00C7  00A6               	movwf	??_UART_SetBaudRate+2
  3819  00C8  30FF               	movlw	255
  3820  00C9  00A7               	movwf	??_UART_SetBaudRate+3
  3821  00CA  0820               	movf	UART_SetBaudRate@var_baudRate_u32,w
  3822  00CB  00A8               	movwf	??_UART_SetBaudRate+4
  3823  00CC  0821               	movf	UART_SetBaudRate@var_baudRate_u32+1,w
  3824  00CD  00A9               	movwf	??_UART_SetBaudRate+5
  3825  00CE  0822               	movf	UART_SetBaudRate@var_baudRate_u32+2,w
  3826  00CF  00AA               	movwf	??_UART_SetBaudRate+6
  3827  00D0  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  3828  00D1  00AB               	movwf	??_UART_SetBaudRate+7
  3829  00D2  3006               	movlw	6
  3830  00D3                     u2065:	
  3831  00D3  1003               	clrc
  3832  00D4  0DA8               	rlf	??_UART_SetBaudRate+4,f
  3833  00D5  0DA9               	rlf	??_UART_SetBaudRate+5,f
  3834  00D6  0DAA               	rlf	??_UART_SetBaudRate+6,f
  3835  00D7  0DAB               	rlf	??_UART_SetBaudRate+7,f
  3836  00D8  3EFF               	addlw	-1
  3837  00D9  1D03               	skipz
  3838  00DA  28D3               	goto	u2065
  3839  00DB  082B               	movf	??_UART_SetBaudRate+7,w
  3840  00DC  00F3               	movwf	___lldiv@divisor+3
  3841  00DD  082A               	movf	??_UART_SetBaudRate+6,w
  3842  00DE  00F2               	movwf	___lldiv@divisor+2
  3843  00DF  0829               	movf	??_UART_SetBaudRate+5,w
  3844  00E0  00F1               	movwf	___lldiv@divisor+1
  3845  00E1  0828               	movf	??_UART_SetBaudRate+4,w
  3846  00E2  00F0               	movwf	___lldiv@divisor
  3847  00E3  3001               	movlw	1
  3848  00E4  00F7               	movwf	___lldiv@dividend+3
  3849  00E5  3031               	movlw	49
  3850  00E6  00F6               	movwf	___lldiv@dividend+2
  3851  00E7  302D               	movlw	45
  3852  00E8  00F5               	movwf	___lldiv@dividend+1
  3853  00E9  3000               	movlw	0
  3854  00EA  00F4               	movwf	___lldiv@dividend
  3855  00EB  120A  158A  27A2  120A  118A  	fcall	___lldiv
  3856  00F0  0870               	movf	?___lldiv,w
  3857  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  3858  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  3859  00F3  07A4               	addwf	??_UART_SetBaudRate,f
  3860  00F4  0871               	movf	?___lldiv+1,w
  3861  00F5  1803               	skipnc
  3862  00F6  0F71               	incfsz	?___lldiv+1,w
  3863  00F7  28F9               	goto	u2070
  3864  00F8  28FA               	goto	u2071
  3865  00F9                     u2070:	
  3866  00F9  07A5               	addwf	??_UART_SetBaudRate+1,f
  3867  00FA                     u2071:	
  3868  00FA  0872               	movf	?___lldiv+2,w
  3869  00FB  1803               	skipnc
  3870  00FC  0F72               	incfsz	?___lldiv+2,w
  3871  00FD  28FF               	goto	u2072
  3872  00FE  2900               	goto	u2073
  3873  00FF                     u2072:	
  3874  00FF  07A6               	addwf	??_UART_SetBaudRate+2,f
  3875  0100                     u2073:	
  3876  0100  0873               	movf	?___lldiv+3,w
  3877  0101  1803               	skipnc
  3878  0102  0A73               	incf	?___lldiv+3,w
  3879  0103  07A7               	addwf	??_UART_SetBaudRate+3,f
  3880  0104  0827               	movf	??_UART_SetBaudRate+3,w
  3881  0105  00AF               	movwf	UART_SetBaudRate@RegValue+3
  3882  0106  0826               	movf	??_UART_SetBaudRate+2,w
  3883  0107  00AE               	movwf	UART_SetBaudRate@RegValue+2
  3884  0108  0825               	movf	??_UART_SetBaudRate+1,w
  3885  0109  00AD               	movwf	UART_SetBaudRate@RegValue+1
  3886  010A  0824               	movf	??_UART_SetBaudRate,w
  3887  010B  2913               	goto	L3
  3888  010C                     l1520:	
  3889                           ;uart.c: 99: }
  3890                           
  3891                           
  3892                           ;uart.c: 100: else
  3893                           ;uart.c: 101: {
  3894                           ;uart.c: 103: RegValue = (uint32_t)((20000000UL / (64*(uint32_t)9600)) - 1);
  3895  010C  3000               	movlw	0
  3896  010D  00AF               	movwf	UART_SetBaudRate@RegValue+3
  3897  010E  3000               	movlw	0
  3898  010F  00AE               	movwf	UART_SetBaudRate@RegValue+2
  3899  0110  3000               	movlw	0
  3900  0111  00AD               	movwf	UART_SetBaudRate@RegValue+1
  3901  0112  301F               	movlw	31
  3902  0113                     L3:	
  3903  0113  00AC               	movwf	UART_SetBaudRate@RegValue
  3904                           
  3905                           ;uart.c: 104: }
  3906                           ;uart.c: 106: SPBRG = (uint8_t)RegValue;
  3907  0114  082C               	movf	UART_SetBaudRate@RegValue,w
  3908  0115  1683               	bsf	3,5	;RP0=1, select bank1
  3909  0116  1303               	bcf	3,6	;RP1=0, select bank1
  3910  0117  0099               	movwf	25	;volatile
  3911  0118  0008               	return
  3912  0119                     __end_of_UART_SetBaudRate:	
  3913                           
  3914                           	psect	text17
  3915  0FA2                     __ptext17:	
  3916 ;; *************** function ___lldiv *****************
  3917 ;; Defined at:
  3918 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  divisor         4    0[COMMON] unsigned long 
  3921 ;;  dividend        4    4[COMMON] unsigned long 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  quotient        4    9[COMMON] unsigned long 
  3924 ;;  counter         1   13[COMMON] unsigned char 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  4    0[COMMON] unsigned long 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3934 ;;      Params:         8       0       0       0       0
  3935 ;;      Locals:         5       0       0       0       0
  3936 ;;      Temps:          1       0       0       0       0
  3937 ;;      Totals:        14       0       0       0       0
  3938 ;;Total ram usage:       14 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_UART_SetBaudRate
  3944 ;;		_UART_TxNumber
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           
  3949                           ;psect for function ___lldiv
  3950  0FA2                     ___lldiv:	
  3951                           
  3952                           ;incstack = 0
  3953                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3954  0FA2  3000               	movlw	0
  3955  0FA3  00FC               	movwf	___lldiv@quotient+3
  3956  0FA4  3000               	movlw	0
  3957  0FA5  00FB               	movwf	___lldiv@quotient+2
  3958  0FA6  3000               	movlw	0
  3959  0FA7  00FA               	movwf	___lldiv@quotient+1
  3960  0FA8  3000               	movlw	0
  3961  0FA9  00F9               	movwf	___lldiv@quotient
  3962  0FAA  0873               	movf	___lldiv@divisor+3,w
  3963  0FAB  0472               	iorwf	___lldiv@divisor+2,w
  3964  0FAC  0471               	iorwf	___lldiv@divisor+1,w
  3965  0FAD  0470               	iorwf	___lldiv@divisor,w
  3966  0FAE  1903               	skipnz
  3967  0FAF  2FF7               	goto	l1280
  3968  0FB0  01FD               	clrf	___lldiv@counter
  3969  0FB1  0AFD               	incf	___lldiv@counter,f
  3970  0FB2                     l1266:	
  3971  0FB2  1BF3               	btfsc	___lldiv@divisor+3,7
  3972  0FB3  2FC2               	goto	l1268
  3973  0FB4  3001               	movlw	1
  3974  0FB5  00F8               	movwf	??___lldiv
  3975  0FB6                     u1355:	
  3976  0FB6  1003               	clrc
  3977  0FB7  0DF0               	rlf	___lldiv@divisor,f
  3978  0FB8  0DF1               	rlf	___lldiv@divisor+1,f
  3979  0FB9  0DF2               	rlf	___lldiv@divisor+2,f
  3980  0FBA  0DF3               	rlf	___lldiv@divisor+3,f
  3981  0FBB  0BF8               	decfsz	??___lldiv,f
  3982  0FBC  2FB6               	goto	u1355
  3983  0FBD  3001               	movlw	1
  3984  0FBE  00F8               	movwf	??___lldiv
  3985  0FBF  0878               	movf	??___lldiv,w
  3986  0FC0  07FD               	addwf	___lldiv@counter,f
  3987  0FC1  2FB2               	goto	l1266
  3988  0FC2                     l1268:	
  3989  0FC2  3001               	movlw	1
  3990  0FC3  00F8               	movwf	??___lldiv
  3991  0FC4                     u1375:	
  3992  0FC4  1003               	clrc
  3993  0FC5  0DF9               	rlf	___lldiv@quotient,f
  3994  0FC6  0DFA               	rlf	___lldiv@quotient+1,f
  3995  0FC7  0DFB               	rlf	___lldiv@quotient+2,f
  3996  0FC8  0DFC               	rlf	___lldiv@quotient+3,f
  3997  0FC9  0BF8               	decfsz	??___lldiv,f
  3998  0FCA  2FC4               	goto	u1375
  3999  0FCB  0873               	movf	___lldiv@divisor+3,w
  4000  0FCC  0277               	subwf	___lldiv@dividend+3,w
  4001  0FCD  1D03               	skipz
  4002  0FCE  2FD9               	goto	u1385
  4003  0FCF  0872               	movf	___lldiv@divisor+2,w
  4004  0FD0  0276               	subwf	___lldiv@dividend+2,w
  4005  0FD1  1D03               	skipz
  4006  0FD2  2FD9               	goto	u1385
  4007  0FD3  0871               	movf	___lldiv@divisor+1,w
  4008  0FD4  0275               	subwf	___lldiv@dividend+1,w
  4009  0FD5  1D03               	skipz
  4010  0FD6  2FD9               	goto	u1385
  4011  0FD7  0870               	movf	___lldiv@divisor,w
  4012  0FD8  0274               	subwf	___lldiv@dividend,w
  4013  0FD9                     u1385:	
  4014  0FD9  1C03               	skipc
  4015  0FDA  2FEA               	goto	l1276
  4016  0FDB  0870               	movf	___lldiv@divisor,w
  4017  0FDC  02F4               	subwf	___lldiv@dividend,f
  4018  0FDD  0871               	movf	___lldiv@divisor+1,w
  4019  0FDE  1C03               	skipc
  4020  0FDF  0F71               	incfsz	___lldiv@divisor+1,w
  4021  0FE0  02F5               	subwf	___lldiv@dividend+1,f
  4022  0FE1  0872               	movf	___lldiv@divisor+2,w
  4023  0FE2  1C03               	skipc
  4024  0FE3  0F72               	incfsz	___lldiv@divisor+2,w
  4025  0FE4  02F6               	subwf	___lldiv@dividend+2,f
  4026  0FE5  0873               	movf	___lldiv@divisor+3,w
  4027  0FE6  1C03               	skipc
  4028  0FE7  0F73               	incfsz	___lldiv@divisor+3,w
  4029  0FE8  02F7               	subwf	___lldiv@dividend+3,f
  4030  0FE9  1479               	bsf	___lldiv@quotient,0
  4031  0FEA                     l1276:	
  4032  0FEA  3001               	movlw	1
  4033  0FEB                     u1395:	
  4034  0FEB  1003               	clrc
  4035  0FEC  0CF3               	rrf	___lldiv@divisor+3,f
  4036  0FED  0CF2               	rrf	___lldiv@divisor+2,f
  4037  0FEE  0CF1               	rrf	___lldiv@divisor+1,f
  4038  0FEF  0CF0               	rrf	___lldiv@divisor,f
  4039  0FF0  3EFF               	addlw	-1
  4040  0FF1  1D03               	skipz
  4041  0FF2  2FEB               	goto	u1395
  4042  0FF3  3001               	movlw	1
  4043  0FF4  02FD               	subwf	___lldiv@counter,f
  4044  0FF5  1D03               	btfss	3,2
  4045  0FF6  2FC2               	goto	l1268
  4046  0FF7                     l1280:	
  4047  0FF7  087C               	movf	___lldiv@quotient+3,w
  4048  0FF8  00F3               	movwf	?___lldiv+3
  4049  0FF9  087B               	movf	___lldiv@quotient+2,w
  4050  0FFA  00F2               	movwf	?___lldiv+2
  4051  0FFB  087A               	movf	___lldiv@quotient+1,w
  4052  0FFC  00F1               	movwf	?___lldiv+1
  4053  0FFD  0879               	movf	___lldiv@quotient,w
  4054  0FFE  00F0               	movwf	?___lldiv
  4055  0FFF  0008               	return
  4056  1000                     __end_of___lldiv:	
  4057                           
  4058                           	psect	text18
  4059  0EA4                     __ptext18:	
  4060 ;; *************** function _ADC_Init *****************
  4061 ;; Defined at:
  4062 ;;		line 54 in file "../00-libfiles/adc.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;		None
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;		None
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1    wreg      void 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4076 ;;      Params:         0       0       0       0       0
  4077 ;;      Locals:         0       0       0       0       0
  4078 ;;      Temps:          0       0       0       0       0
  4079 ;;      Totals:         0       0       0       0       0
  4080 ;;Total ram usage:        0 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; This function calls:
  4083 ;;		Nothing
  4084 ;; This function is called by:
  4085 ;;		_main
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           
  4090                           ;psect for function _ADC_Init
  4091  0EA4                     _ADC_Init:	
  4092                           
  4093                           ;adc.c: 56: ADCON0=0x00;
  4094                           
  4095                           ;incstack = 0
  4096                           ; Regs used in _ADC_Init: [wreg+status,2]
  4097  0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  4098  0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  4099  0EA6  019F               	clrf	31	;volatile
  4100                           
  4101                           ;adc.c: 57: ADCON1=0x80;
  4102  0EA7  3080               	movlw	128
  4103  0EA8  1683               	bsf	3,5	;RP0=1, select bank1
  4104  0EA9  1303               	bcf	3,6	;RP1=0, select bank1
  4105  0EAA  009F               	movwf	31	;volatile
  4106  0EAB  0008               	return
  4107  0EAC                     __end_of_ADC_Init:	
  4108                           
  4109                           	psect	text19
  4110  0F29                     __ptext19:	
  4111 ;; *************** function _ADC_GetAdcValue *****************
  4112 ;; Defined at:
  4113 ;;		line 76 in file "../00-libfiles/adc.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  var_adcChann    1    wreg     unsigned char 
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  var_adcChann    1    5[COMMON] unsigned char 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  2    2[COMMON] unsigned int 
  4120 ;; Registers used:
  4121 ;;		wreg, status,2, status,0, pclath, cstack
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4127 ;;      Params:         2       0       0       0       0
  4128 ;;      Locals:         1       0       0       0       0
  4129 ;;      Temps:          1       0       0       0       0
  4130 ;;      Totals:         4       0       0       0       0
  4131 ;;Total ram usage:        4 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; Hardware stack levels required when called:    1
  4134 ;; This function calls:
  4135 ;;		_DELAY_us
  4136 ;; This function is called by:
  4137 ;;		_main
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           
  4142                           ;psect for function _ADC_GetAdcValue
  4143  0F29                     _ADC_GetAdcValue:	
  4144                           
  4145                           ;incstack = 0
  4146                           ; Regs used in _ADC_GetAdcValue: [wreg+status,2+status,0+pclath+cstack]
  4147                           ;ADC_GetAdcValue@var_adcChannel_u8 stored from wreg
  4148  0F29  00F5               	movwf	ADC_GetAdcValue@var_adcChannel_u8
  4149                           
  4150                           ;adc.c: 79: ADCON0= (var_adcChannel_u8<<3);
  4151  0F2A  0875               	movf	ADC_GetAdcValue@var_adcChannel_u8,w
  4152  0F2B  00F4               	movwf	??_ADC_GetAdcValue
  4153  0F2C  3002               	movlw	2
  4154  0F2D                     u2205:	
  4155  0F2D  1003               	clrc
  4156  0F2E  0DF4               	rlf	??_ADC_GetAdcValue,f
  4157  0F2F  3EFF               	addlw	-1
  4158  0F30  1D03               	skipz
  4159  0F31  2F2D               	goto	u2205
  4160  0F32  1003               	clrc
  4161  0F33  0D74               	rlf	??_ADC_GetAdcValue,w
  4162  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  4163  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  4164  0F36  009F               	movwf	31	;volatile
  4165                           
  4166                           ;adc.c: 80: ADON = 1;
  4167  0F37  141F               	bsf	31,0	;volatile
  4168                           
  4169                           ;adc.c: 81: DELAY_us(10);
  4170  0F38  300A               	movlw	10
  4171  0F39  00F0               	movwf	DELAY_us@us_count
  4172  0F3A  3000               	movlw	0
  4173  0F3B  00F1               	movwf	DELAY_us@us_count+1
  4174  0F3C  120A  158A  26BF  120A  158A  	fcall	_DELAY_us
  4175                           
  4176                           ;adc.c: 83: GO=1;
  4177  0F41  1283               	bcf	3,5	;RP0=0, select bank0
  4178  0F42  1303               	bcf	3,6	;RP1=0, select bank0
  4179  0F43  151F               	bsf	31,2	;volatile
  4180  0F44                     l159:	
  4181                           ;adc.c: 84: while(GO_DONE==1);
  4182                           
  4183  0F44  191F               	btfsc	31,2	;volatile
  4184  0F45  2F44               	goto	l159
  4185                           
  4186                           ;adc.c: 87: return((ADRESH<<8) + ADRESL);
  4187  0F46  081E               	movf	30,w	;volatile
  4188  0F47  00F3               	movwf	?_ADC_GetAdcValue+1
  4189  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  4190  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  4191  0F4A  081E               	movf	30,w	;volatile
  4192  0F4B  00F2               	movwf	?_ADC_GetAdcValue
  4193  0F4C  0008               	return
  4194  0F4D                     __end_of_ADC_GetAdcValue:	
  4195                           
  4196                           	psect	text20
  4197  0EBF                     __ptext20:	
  4198 ;; *************** function _DELAY_us *****************
  4199 ;; Defined at:
  4200 ;;		line 56 in file "../00-libfiles/delay.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;  us_count        2    0[COMMON] unsigned int 
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;		None
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  1    wreg      void 
  4207 ;; Registers used:
  4208 ;;		wreg, status,2, status,0
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4214 ;;      Params:         2       0       0       0       0
  4215 ;;      Locals:         0       0       0       0       0
  4216 ;;      Temps:          0       0       0       0       0
  4217 ;;      Totals:         2       0       0       0       0
  4218 ;;Total ram usage:        2 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; This function calls:
  4221 ;;		Nothing
  4222 ;; This function is called by:
  4223 ;;		_ADC_GetAdcValue
  4224 ;;		_DELAY_ms
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           
  4229                           ;psect for function _DELAY_us
  4230  0EBF                     _DELAY_us:	
  4231  0EBF                     l1544:	
  4232                           ;delay.c: 58: while (us_count != 0)
  4233                           
  4234                           ;incstack = 0
  4235                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  4236                           
  4237  0EBF  0870               	movf	DELAY_us@us_count,w
  4238  0EC0  0471               	iorwf	DELAY_us@us_count+1,w
  4239  0EC1  1903               	btfsc	3,2
  4240  0EC2  0008               	return
  4241                           
  4242                           ;delay.c: 59: {
  4243                           ;delay.c: 60: us_count--;
  4244  0EC3  3001               	movlw	1
  4245  0EC4  02F0               	subwf	DELAY_us@us_count,f
  4246  0EC5  3000               	movlw	0
  4247  0EC6  1C03               	skipc
  4248  0EC7  03F1               	decf	DELAY_us@us_count+1,f
  4249  0EC8  02F1               	subwf	DELAY_us@us_count+1,f
  4250  0EC9  2EBF               	goto	l1544
  4251  0ECA                     __end_of_DELAY_us:	
  4252  007E                     btemp	set	126	;btemp
  4253  007E                     wtemp	set	126
  4254  007E                     wtemp0	set	126
  4255  0080                     wtemp1	set	128
  4256  0082                     wtemp2	set	130
  4257  0084                     wtemp3	set	132
  4258  0086                     wtemp4	set	134
  4259  0088                     wtemp5	set	136
  4260  007F                     wtemp6	set	127
  4261  007E                     ttemp	set	126
  4262  007E                     ttemp0	set	126
  4263  0081                     ttemp1	set	129
  4264  0084                     ttemp2	set	132
  4265  0087                     ttemp3	set	135
  4266  007F                     ttemp4	set	127
  4267  007E                     ltemp	set	126
  4268  007E                     ltemp0	set	126
  4269  0082                     ltemp1	set	130
  4270  0086                     ltemp2	set	134
  4271  0080                     ltemp3	set	128


Data Sizes:
    Strings     44
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      76
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Printf@str	PTR unsigned char  size(1) Largest target is 0

    UART_Printf@argList	PTR const unsigned char  size(1) Largest target is 44
		 -> STR_1(CODE[44]), 

    UART_Printf@ptr	PTR const unsigned char  size(1) Largest target is 44
		 -> STR_1(CODE[44]), 

    UART_Printf@argp	PTR void [1] size(1) Largest target is 1
		 -> ?_UART_Printf(BANK0[1]), 

    UART_TxString@ptr_string	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _UART_TxString->_UART_TxChar
    _UART_TxFloatNumber->___ftmul
    _UART_TxFloatNumber->___lltoft
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftneg->___lltoft
    ___ftmul->___ftpack
    ___ftadd->___lltoft
    _UART_TxNumber->___lldiv
    ___bmul->___lldiv
    _UART_SetBaudRate->___lldiv
    _ADC_GetAdcValue->_DELAY_us

Critical Paths under _main in BANK0

    _main->_UART_Printf
    _UART_Printf->_UART_TxFloatNumber
    _UART_TxFloatNumber->_UART_TxNumber
    ___fttol->___ftmul
    ___ftadd->___ftneg
    _UART_TxNumber->___bmul
    _UART_Init->_UART_SetBaudRate

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   18729
                                             71 BANK0      5     5      0
                    _ADC_GetAdcValue
                           _ADC_Init
                          _UART_Init
                        _UART_Printf
                           ___awtoft
                            ___ftdiv
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2132
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    1890
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _UART_Printf                                         28    23      5   13790
                                             43 BANK0     28    23      5
                        _UART_TxChar
                 _UART_TxFloatNumber
                      _UART_TxNumber
                      _UART_TxString
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _UART_TxString                                        2     2      0      94
                                              1 COMMON     2     2      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxFloatNumber                                   8     5      3    9898
                                             35 BANK0      8     5      3
                        _UART_TxChar
                      _UART_TxNumber
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    1868
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     358
                                             10 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                              0 BANK0      3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2178
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2772
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _UART_TxNumber                                       31    26      5    2414
                                              4 BANK0     31    26      5
                        _UART_TxChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4     698
                                             16 BANK0      4     0      4
                   _UART_SetBaudRate
 ---------------------------------------------------------------------------------
 (2) _UART_SetBaudRate                                    16    12      4     623
                                              0 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetAdcValue                                      4     2      2     151
                                              2 COMMON     4     2      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (2) _DELAY_us                                             2     0      2     129
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetAdcValue
     _DELAY_us
   _ADC_Init
   _UART_Init
     _UART_SetBaudRate
       ___lldiv
   _UART_Printf
     _UART_TxChar
     _UART_TxFloatNumber
       _UART_TxChar
       _UART_TxNumber
         _UART_TxChar
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       ___ftadd
         ___ftneg (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
     _UART_TxNumber
       _UART_TxChar
       ___bmul
         ___lldiv (ARG)
       ___lldiv
     _UART_TxString
       _UART_TxChar
     ___bmul
       ___lldiv (ARG)
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4C       5       95.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Feb 20 20:22:48 2016

       UART_SetBaudRate@var_baudRate_u32 0020                                        pc 0002  
                         ___bmul@product 0022                              __CFG_CP$OFF 0000  
                                     l39 0EAD                                       _GO 00FA  
                                     fsr 0004                             ___ftadd@exp1 002F  
                           ___ftadd@exp2 002E                              __CFG_LVP$ON 0000  
                           ___ftadd@sign 002D                                      l421 0069  
                                    l173 0F61                                      l159 0F44  
                                    l512 018D                                      l428 007E  
                                    l452 0569                                      l429 0086  
                           __CFG_CPD$OFF 0000                                      fsr0 0004  
                                    indf 0000                             __CFG_FOSC$HS 0000  
                __end_of_ADC_GetAdcValue 0F4D                             ___ftdiv@cntr 002A  
                           ___ftdiv@sign 002F                                     l1220 0ED4  
                                   l1310 0487                                     l1302 0425  
                                   l1216 0ECE                                     l1320 0428  
                                   l1240 0053                                     l1232 003B  
                                   l1400 05B0                                     l1322 0498  
                                   l1410 0316                                     l1332 04BD  
                                   l1236 0042                                     l1340 04EA  
                                   l1500 019E                                     l1326 04A8  
                                   l1318 0493                                     l1246 006E  
                                   l1238 004E                                     l1350 0500  
                                   l1510 001E                                     l1280 0FF7  
                                   l1520 010C                                     l1248 0078  
                                   l1344 04F1                                     l1440 0393  
                                   l1432 037B                                     l1416 032C  
                                   l1266 0FB2                                     l1290 03D8  
                                   l1370 053B                                     l1362 051A  
                                   l1276 0FEA                                     l1268 0FC2  
                                   l1516 00B1                                     l1380 0559  
                                   l1372 0540                                     l1444 03A3  
                                   l1428 036B                                     l1508 000C  
                                   l1620 06F0                                     l1700 0F12  
                                   l1390 058D                                     l1382 0565  
                                   l1374 0544                                     l1614 06C9  
                                   l1606 0695                                     l1710 025E  
                                   l1544 0EBF                                     l1296 0416  
                                   l1368 052F                                     l1528 0EDE  
                                   l1640 074B                                     l1632 0736  
                                   l1608 06AA                                     l1298 041A  
                                   l1386 057B                                     l1650 0777  
                                   l1642 075C                                     l1626 070F  
                                   l1730 02B9                                     l1468 0133  
                                   l1652 078A                                     l1572 0604  
                                   l1716 0274                                     l1494 0182  
                                   l1486 0165                                     l1670 07EF  
                                   l1496 0190                                     l1488 0175  
                                   l1664 07BB                                     l1584 063D  
                                   l1672 07F5                                     l1576 062C  
                                   l1658 07A7                                     l1594 0658  
                                   l1578 0631                                     l1674 05D5  
                                   l1738 02D8                                     l1596 066E  
                                   l1668 07BD                                     _ADON 00F8  
                                   STR_1 0806                                     u2025 0011  
                                   u2043 00AF                                     u2205 0F2D  
                                   u2053 00C0                                     u1325 008D  
                                   u1245 0047                                     u2070 00F9  
                                   u1430 0407                                     u2071 00FA  
                                   u2072 00FF                                     u1440 0408  
                                   u1424 03EC                                     u2073 0100  
                                   u2065 00D3                                     u1425 03E9  
                                   u1265 0062                                     u1355 0FB6  
                                   u1285 0071                                     u1375 0FC4  
                                   u2255 0286                                     u1385 0FD9  
                                   u1625 051B                                     u2265 0298  
                                   u1395 0FEB                                     u1715 055A  
                                   u2275 02BA                                     u1805 034A  
                                   u2285 02CB                                     u1655 0530  
                                   u2295 02D9                                     u1835 037C  
                                   u1685 0545                                     u1845 0384  
                                   u1935 013A                                     u1795 0338  
                                   u1885 03A4                                     u1965 0166  
                                   u1895 03AC                                     u1995 0184  
                                   _RCIF 0065                                     _TXIF 0064  
                           __CFG_WRT$OFF 0000                       _UART_TxFloatNumber 01A7  
                                   _main 0F4D                             ___ftpack@arg 0070  
                           ___ftpack@exp 0073                                     btemp 007E  
                       __end_of_ADC_Init 0EAC                             main@adcValue 006A  
                                   ltemp 007E                                     start 0000  
                                   ttemp 007E                                     wtemp 007E  
                       __end_of_DELAY_us 0ECA                      ?_UART_TxFloatNumber 0043  
                      ___bmul@multiplier 0023                             ___ftmul@cntr 0028  
                           ___ftmul@sign 0029      UART_TxFloatNumber@v_floatNumber_f32 0043  
                           ___fttol@exp1 0037                             ___fttol@lval 0033  
                                  ?_main 0070                          __end_of___ftadd 05CA  
                          __CFG_WDTE$OFF 0000                          __end_of___ftdiv 02FE  
                        __end_of___ftneg 0EBF                          __end_of___lldiv 1000  
                        __end_of___ftmul 03CF                          __end_of___fttol 01A7  
                                  _RCREG 001A                                    _RCSTA 0018  
                                  _SPBRG 0099                                    _TRISC 0087  
                                  _TXREG 0019                                    _TXSTA 0098  
                   ??_UART_TxFloatNumber 0046                             ___lltoft@exp 007D  
                     __size_of_UART_Init 0016                            ___awtoft@sign 007D  
                          ___ftpack@sign 0074                           __CFG_BOREN$OFF 0000  
                                  pclath 000A                                    ltemp0 007E  
                                  ltemp1 0082                                    ltemp2 0086  
                                  ltemp3 0080                                    ttemp0 007E  
                                  ttemp1 0081                                    ttemp2 0084  
                                  ttemp3 0087                                    ttemp4 007F  
                                  status 0003                                    wtemp0 007E  
                                  wtemp1 0080                                    wtemp2 0082  
                                  wtemp3 0084                                    wtemp4 0086  
                                  wtemp5 0088                                    wtemp6 007F  
                        __initialization 07FC                             __end_of_main 0FA2  
                                 ??_main 007E                            ___fttol@sign1 0032  
                       ?_ADC_GetAdcValue 0072                                   _ADCON0 001F  
                                 _ADCON1 009F                                   _ADRESH 001E  
                                 _ADRESL 009E                         __end_of___awtoft 0F29  
                       __end_of___ftpack 009F                         __end_of___lltoft 0033  
                      ?_UART_SetBaudRate 0020                       ??_UART_SetBaudRate 0024  
                         __CFG_PWRTE$OFF 0000                             ?_UART_TxChar 0070  
                           ?_UART_Printf 004B                        __end_of_UART_Init 0F08  
                                 ___bmul 0ECA                                ??___ftadd 0029  
                              ??___ftdiv 0026                                ??___ftneg 007E  
                              ??___lldiv 0078                                ??___ftmul 0020  
                              ??___fttol 002E  UART_TxNumber@v_numOfDigitsToTransmit_u8 0028  
                  ___ftmul@f3_as_product 0025                                ?_ADC_Init 0070  
                              ?_DELAY_us 0070                  __end_of__initialization 07FC  
                             ___ftadd@f1 0023                               ___ftadd@f2 0026  
                  __end_of_UART_TxNumber 04C1                               ___ftdiv@f1 0023  
                             ___ftdiv@f2 0020                               ___ftdiv@f3 002B  
                  __end_of_UART_TxString 0EF2                UART_Printf@v_floatNum_f32 0052  
                             ___ftneg@f1 0020                               ___awtoft@c 0078  
                    ___bmul@multiplicand 0020                               ___ftmul@f1 0078  
                             ___ftmul@f2 007B                               ___fttol@f1 002A  
                         __pcstackCOMMON 0070                               ___lltoft@c 0078  
                             ??_ADC_Init 0070                               ??_DELAY_us 0072  
                             __pmaintext 0F4D                                  ?___bmul 0020  
                              ?___awtoft 0078                                ?___ftpack 0070  
                              ?___lltoft 0078                                  _GO_DONE 00FA  
                       DELAY_us@us_count 0070                               __stringtab 0800  
                   __size_of_UART_TxChar 0009                          __size_of___bmul 0013  
                   __size_of_UART_Printf 0232                                  ___ftadd 04C1  
                                ___ftdiv 0246                                  ___ftneg 0EB5  
                                ___lldiv 0FA2                                  ___ftmul 02FE  
                                ___fttol 0119                               ??___awtoft 007B  
                             ??___ftpack 0075                               ??___lltoft 007C  
                                __ptext1 0246                                  __ptext2 0F08  
                                __ptext3 05CA                                  __ptext4 0EDD  
                                __ptext5 01A7                                  __ptext6 0008  
                                __ptext7 0119                                  __ptext8 0EB5  
                                __ptext9 02FE              __size_of_UART_TxFloatNumber 009F  
                         UART_Printf@ptr 0063                           UART_Printf@str 0055  
                   end_of_initialization 07FC                           UART_TxNumber@a 0035  
                         UART_TxNumber@i 0042               UART_TxChar@var_uartData_u8 0070  
                        ___lldiv@divisor 0070                          ___lldiv@counter 007D  
                              _UART_Init 0EF2                __size_of_UART_SetBaudRate 007A  
       ADC_GetAdcValue@var_adcChannel_u8 0075                        __size_of_ADC_Init 0008  
                      __size_of_DELAY_us 000B                              ___ftdiv@exp 002E  
               __size_of_ADC_GetAdcValue 0024          UART_TxNumber@v_numericSystem_u8 0041  
                            ___ftmul@exp 0024                           __end_of___bmul 0EDD  
                             ?_UART_Init 0030                      start_initialization 07FC  
                               ??___bmul 0021                        __size_of___awtoft 0021  
                      __size_of___ftpack 006C                   __size_of_UART_TxNumber 00F2  
                      __size_of___lltoft 002B                                ___latbits 0002  
                 __size_of_UART_TxString 0015                            __pcstackBANK0 0020  
              UART_Init@var_baudRate_u32 0030                                 ?___ftadd 0023  
                               ?___ftdiv 0020                                 ?___ftneg 0020  
                               ?___lldiv 0070                        ??_ADC_GetAdcValue 0074  
                               ?___ftmul 0078                                 ?___fttol 002A  
                            ??_UART_Init 007E                         _UART_SetBaudRate 009F  
                              __pstrings 0800                                 _ADC_Init 0EA4  
                               _DELAY_us 0EBF                            UART_Printf@ch 0064  
                          ??_UART_TxChar 0070                            _UART_TxNumber 03CF  
                          ??_UART_Printf 0050                            _UART_TxString 0EDD  
                UART_TxString@ptr_string 0072                              __stringbase 0805  
             __end_of_UART_TxFloatNumber 0246                UART_TxNumber@v_number_u32 0024  
                         ?_UART_TxNumber 0024                           ?_UART_TxString 0070  
                       _UART_TxNumber$63 003F                      __end_of_UART_TxChar 0EB5  
                       __size_of___ftadd 0109                         __size_of___ftdiv 00B8  
                       __size_of___ftneg 000A                         __size_of___lldiv 005E  
                       __size_of___ftmul 00D1                         __size_of___fttol 008E  
                    __end_of_UART_Printf 07FC                                 ___awtoft 0F08  
                               ___ftpack 0033                       __end_of__stringtab 0806  
                               ___lltoft 0008                                 __ptext10 04C1  
                               __ptext11 0033                                 __ptext20 0EBF  
                               __ptext12 03CF                                 __ptext13 0ECA  
                               __ptext14 0EAC                                 __ptext15 0EF2  
                               __ptext16 009F                                 __ptext17 0FA2  
                               __ptext18 0EA4                                 __ptext19 0F29  
                          __size_of_main 0055                          UART_Printf@argp 0066  
               UART_SetBaudRate@RegValue 002C                                 main@temp 0067  
                        ??_UART_TxNumber 0029                 __end_of_UART_SetBaudRate 0119  
                        _ADC_GetAdcValue 0F29                          ??_UART_TxString 0071  
                       ___lldiv@dividend 0074                                stringcode 0800  
                            _UART_TxChar 0EAC                              _UART_Printf 05CA  
                       ___lldiv@quotient 0079       UART_TxFloatNumber@v_tempNumber_u32 0047  
                               stringdir 0800                                 stringtab 0800  
  UART_Printf@v_numOfDigitsToTransmit_u8 0065                       UART_Printf@argList 0056  
                   UART_Printf@v_num_s16 005B                     UART_Printf@v_num_s32 0057  
                   UART_Printf@v_num_u16 0061                     UART_Printf@v_num_u32 005D  
