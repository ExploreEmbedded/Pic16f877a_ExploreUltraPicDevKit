

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Feb 20 15:18:30 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     	;# 
    40  0001                     	;# 
    41  0002                     	;# 
    42  0003                     	;# 
    43  0004                     	;# 
    44  0005                     	;# 
    45  0006                     	;# 
    46  0007                     	;# 
    47  0008                     	;# 
    48  0009                     	;# 
    49  000A                     	;# 
    50  000B                     	;# 
    51  000C                     	;# 
    52  000D                     	;# 
    53  000E                     	;# 
    54  000E                     	;# 
    55  000F                     	;# 
    56  0010                     	;# 
    57  0011                     	;# 
    58  0012                     	;# 
    59  0013                     	;# 
    60  0014                     	;# 
    61  0015                     	;# 
    62  0015                     	;# 
    63  0016                     	;# 
    64  0017                     	;# 
    65  0018                     	;# 
    66  0019                     	;# 
    67  001A                     	;# 
    68  001B                     	;# 
    69  001B                     	;# 
    70  001C                     	;# 
    71  001D                     	;# 
    72  001E                     	;# 
    73  001F                     	;# 
    74  0081                     	;# 
    75  0085                     	;# 
    76  0086                     	;# 
    77  0087                     	;# 
    78  0088                     	;# 
    79  0089                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  008E                     	;# 
    83  0091                     	;# 
    84  0092                     	;# 
    85  0093                     	;# 
    86  0094                     	;# 
    87  0098                     	;# 
    88  0099                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  009F                     	;# 
    93  010C                     	;# 
    94  010D                     	;# 
    95  010E                     	;# 
    96  010F                     	;# 
    97  018C                     	;# 
    98  018D                     	;# 
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0008                     	;# 
   108  0009                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  000D                     	;# 
   113  000E                     	;# 
   114  000E                     	;# 
   115  000F                     	;# 
   116  0010                     	;# 
   117  0011                     	;# 
   118  0012                     	;# 
   119  0013                     	;# 
   120  0014                     	;# 
   121  0015                     	;# 
   122  0015                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  0019                     	;# 
   127  001A                     	;# 
   128  001B                     	;# 
   129  001B                     	;# 
   130  001C                     	;# 
   131  001D                     	;# 
   132  001E                     	;# 
   133  001F                     	;# 
   134  0081                     	;# 
   135  0085                     	;# 
   136  0086                     	;# 
   137  0087                     	;# 
   138  0088                     	;# 
   139  0089                     	;# 
   140  008C                     	;# 
   141  008D                     	;# 
   142  008E                     	;# 
   143  0091                     	;# 
   144  0092                     	;# 
   145  0093                     	;# 
   146  0094                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  001D                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  0086                     	;# 
   197  0087                     	;# 
   198  0088                     	;# 
   199  0089                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  008E                     	;# 
   203  0091                     	;# 
   204  0092                     	;# 
   205  0093                     	;# 
   206  0094                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219                           
   220                           	psect	idataBANK0
   221  00A2                     __pidataBANK0:	
   222                           
   223                           ;initializer for _ARR_LcdLineNumAddress_U8
   224  00A2  3480               	retlw	128
   225  00A3  34C0               	retlw	192
   226  00A4  3490               	retlw	144
   227  00A5  34D0               	retlw	208
   228  0005                     _PORTA	set	5
   229  0006                     _PORTB	set	6
   230  0007                     _PORTC	set	7
   231  0008                     _PORTD	set	8
   232  0009                     _PORTE	set	9
   233  001A                     _RCREG	set	26
   234  0018                     _RCSTA	set	24
   235  0019                     _TXREG	set	25
   236  0065                     _RCIF	set	101
   237  0064                     _TXIF	set	100
   238  0099                     _SPBRG	set	153
   239  0085                     _TRISA	set	133
   240  0086                     _TRISB	set	134
   241  0087                     _TRISC	set	135
   242  0088                     _TRISD	set	136
   243  0089                     _TRISE	set	137
   244  0098                     _TXSTA	set	152
   245                           
   246                           	psect	strings
   247  0003                     __pstrings:	
   248  0003                     stringtab:	
   249  0003                     __stringtab:	
   250  0003                     stringcode:	
   251                           ;	String table - string pointers are 1 byte each
   252                           
   253  0003                     stringdir:	
   254  0003  3000               	movlw	high stringdir
   255  0004  008A               	movwf	10
   256  0005  0804               	movf	4,w
   257  0006  0A84               	incf	4,f
   258  0007  0782               	addwf	2,f
   259  0008                     __stringbase:	
   260  0008  3400               	retlw	0
   261  0009                     __end_of__stringtab:	
   262  0009                     STR_1:	
   263  0009  3473               	retlw	115	;'s'
   264  000A  3465               	retlw	101	;'e'
   265  000B  346E               	retlw	110	;'n'
   266  000C  3464               	retlw	100	;'d'
   267  000D  3420               	retlw	32	;' '
   268  000E  3464               	retlw	100	;'d'
   269  000F  3461               	retlw	97	;'a'
   270  0010  3474               	retlw	116	;'t'
   271  0011  3461               	retlw	97	;'a'
   272  0012  3420               	retlw	32	;' '
   273  0013  3466               	retlw	102	;'f'
   274  0014  3472               	retlw	114	;'r'
   275  0015  346F               	retlw	111	;'o'
   276  0016  346D               	retlw	109	;'m'
   277  0017  3420               	retlw	32	;' '
   278  0018  3420               	retlw	32	;' '
   279  0019  3473               	retlw	115	;'s'
   280  001A  3465               	retlw	101	;'e'
   281  001B  3472               	retlw	114	;'r'
   282  001C  3469               	retlw	105	;'i'
   283  001D  3461               	retlw	97	;'a'
   284  001E  346C               	retlw	108	;'l'
   285  001F  3420               	retlw	32	;' '
   286  0020  3474               	retlw	116	;'t'
   287  0021  3465               	retlw	101	;'e'
   288  0022  3472               	retlw	114	;'r'
   289  0023  346D               	retlw	109	;'m'
   290  0024  3469               	retlw	105	;'i'
   291  0025  346E               	retlw	110	;'n'
   292  0026  3461               	retlw	97	;'a'
   293  0027  346C               	retlw	108	;'l'
   294  0028  3400               	retlw	0
   295                           
   296                           ; #config settings
   297  0000                     
   298                           	psect	cinit
   299  07DD                     start_initialization:	
   300  07DD                     __initialization:	
   301                           
   302                           ; Clear objects allocated to BANK0
   303  07DD  1383               	bcf	3,7	;select IRP bank0
   304  07DE  303F               	movlw	low __pbssBANK0
   305  07DF  0084               	movwf	4
   306  07E0  304F               	movlw	low (__pbssBANK0+16)
   307  07E1  120A  118A  20AD  120A  118A  	fcall	clear_ram0
   308                           
   309                           ; Initialize objects allocated to BANK0
   310  07E6  120A  118A  20A2  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   311  07EB  00CF               	movwf	__pdataBANK0& (0+127)
   312  07EC  120A  118A  20A3  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   313  07F1  00D0               	movwf	(__pdataBANK0+1)& (0+127)
   314  07F2  120A  118A  20A4  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   315  07F7  00D1               	movwf	(__pdataBANK0+2)& (0+127)
   316  07F8  120A  118A  20A5   	fcall	__pidataBANK0+3	;fetch initializer
   317  07FB  00D2               	movwf	(__pdataBANK0+3)& (0+127)
   318  07FC                     end_of_initialization:	
   319                           ;End of C runtime variable initialization code
   320                           
   321  07FC                     __end_of__initialization:	
   322  07FC  0183               	clrf	3
   323  07FD  120A  118A  2B9F   	ljmp	_main	;jump to C main() function
   324                           
   325                           	psect	bssBANK0
   326  003F                     __pbssBANK0:	
   327  003F                     _LCDConfig:	
   328  003F                     	ds	14
   329  004D                     _v_LcdTrackCursorPos_U8:	
   330  004D                     	ds	1
   331  004E                     _v_LcdTrackLineNum_U8:	
   332  004E                     	ds	1
   333                           
   334                           	psect	dataBANK0
   335  004F                     __pdataBANK0:	
   336  004F                     _ARR_LcdLineNumAddress_U8:	
   337  004F                     	ds	4
   338                           
   339                           	psect	clrtext
   340  00AD                     clear_ram0:	
   341                           ;	Called with FSR containing the base address, and
   342                           ;	W with the last address+1
   343                           
   344  00AD  0064               	clrwdt	;clear the watchdog before getting into this loop
   345  00AE                     clrloop0:	
   346  00AE  0180               	clrf	0	;clear RAM location pointed to by FSR
   347  00AF  0A84               	incf	4,f	;increment pointer
   348  00B0  0604               	xorwf	4,w	;XOR with final address
   349  00B1  1903               	btfsc	3,2	;have we reached the end yet?
   350  00B2  3400               	retlw	0	;all done for this memory range, return
   351  00B3  0604               	xorwf	4,w	;XOR again to restore value
   352  00B4  28AE               	goto	clrloop0	;do the next byte
   353                           
   354                           	psect	cstackCOMMON
   355  0070                     __pcstackCOMMON:	
   356  0070                     ?_GPIO_PinDirection:	
   357  0070                     ?_LCD_CmdWrite:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_lcd_Reset:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ?_LCD_Clear:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?_LCD_GoToLine:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ?_lcd_BusyCheck:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ?_lcd_SendLowerNibble:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_lcd_SendHigherNibble:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ?_lcd_SendCmdSignals:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_lcd_DataWrite:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_lcd_SendDataSignals:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ?_GPIO_PinWrite:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ?_DELAY_us:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ?_GPIO_PinRead:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ??_GPIO_PinRead:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_UART_RxChar:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ??_UART_RxChar:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_UART_TxChar:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ??_UART_TxChar:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_LCD_GoToNextLine:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_LCD_DisplayChar:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_LCD_DisplayString:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_main:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?___lldiv:	
   424                           ; 2 bytes @ 0x0
   425                           
   426  0070                     UART_TxChar@var_uartData_u8:	
   427                           ; 4 bytes @ 0x0
   428                           
   429  0070                     GPIO_PinDirection@var_pinDirn_u8:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     GPIO_PinWrite@var_pinValue_u8:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     DELAY_us@us_count:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ___lldiv@divisor:	
   439                           ; 2 bytes @ 0x0
   440                           
   441                           
   442                           ; 4 bytes @ 0x0
   443  0070                     	ds	1
   444  0071                     ??_GPIO_PinDirection:	
   445  0071                     ??_GPIO_PinWrite:	
   446                           ; 1 bytes @ 0x1
   447                           
   448                           
   449                           ; 1 bytes @ 0x1
   450  0071                     	ds	1
   451  0072                     ?_DELAY_ms:	
   452  0072                     ??_DELAY_us:	
   453                           ; 1 bytes @ 0x2
   454                           
   455  0072                     GPIO_PinRead@var_portNumber_u8:	
   456                           ; 1 bytes @ 0x2
   457                           
   458  0072                     DELAY_ms@ms_count:	
   459                           ; 1 bytes @ 0x2
   460                           
   461                           
   462                           ; 2 bytes @ 0x2
   463  0072                     	ds	1
   464  0073                     GPIO_PinDirection@var_portNumber_u8:	
   465  0073                     GPIO_PinWrite@var_portNumber_u8:	
   466                           ; 1 bytes @ 0x3
   467                           
   468  0073                     GPIO_PinRead@returnStatus:	
   469                           ; 1 bytes @ 0x3
   470                           
   471                           
   472                           ; 1 bytes @ 0x3
   473  0073                     	ds	1
   474  0074                     ??_DELAY_ms:	
   475  0074                     GPIO_PinDirection@enm_pinNumber:	
   476                           ; 1 bytes @ 0x4
   477                           
   478  0074                     GPIO_PinWrite@enm_pinNumber:	
   479                           ; 1 bytes @ 0x4
   480                           
   481  0074                     GPIO_PinRead@enm_pinNumber:	
   482                           ; 1 bytes @ 0x4
   483                           
   484  0074                     ___lldiv@dividend:	
   485                           ; 1 bytes @ 0x4
   486                           
   487                           
   488                           ; 4 bytes @ 0x4
   489  0074                     	ds	1
   490  0075                     ??_lcd_BusyCheck:	
   491  0075                     ??_lcd_SendLowerNibble:	
   492                           ; 1 bytes @ 0x5
   493                           
   494  0075                     ??_lcd_SendHigherNibble:	
   495                           ; 1 bytes @ 0x5
   496                           
   497  0075                     ??_lcd_SendCmdSignals:	
   498                           ; 1 bytes @ 0x5
   499                           
   500  0075                     ??_lcd_SendDataSignals:	
   501                           ; 1 bytes @ 0x5
   502                           
   503  0075                     ??_LCD_SetUp:	
   504                           ; 1 bytes @ 0x5
   505                           
   506                           
   507                           ; 1 bytes @ 0x5
   508  0075                     	ds	1
   509  0076                     LCD_SetUp@RS:	
   510  0076                     lcd_BusyCheck@busyflag:	
   511                           ; 1 bytes @ 0x6
   512                           
   513  0076                     lcd_SendHigherNibble@dataByte:	
   514                           ; 1 bytes @ 0x6
   515                           
   516  0076                     lcd_SendLowerNibble@dataByte:	
   517                           ; 1 bytes @ 0x6
   518                           
   519                           
   520                           ; 1 bytes @ 0x6
   521  0076                     	ds	1
   522  0077                     ??_LCD_CmdWrite:	
   523  0077                     ??_lcd_Reset:	
   524                           ; 1 bytes @ 0x7
   525                           
   526  0077                     ??_lcd_DataWrite:	
   527                           ; 1 bytes @ 0x7
   528                           
   529                           
   530                           ; 1 bytes @ 0x7
   531  0077                     	ds	1
   532  0078                     ??___lldiv:	
   533                           
   534                           ; 1 bytes @ 0x8
   535  0078                     	ds	1
   536  0079                     LCD_CmdWrite@v_lcdCmd_u8:	
   537  0079                     lcd_DataWrite@dataByte:	
   538                           ; 1 bytes @ 0x9
   539                           
   540  0079                     ___lldiv@quotient:	
   541                           ; 1 bytes @ 0x9
   542                           
   543                           
   544                           ; 4 bytes @ 0x9
   545  0079                     	ds	1
   546  007A                     ??_LCD_GoToLine:	
   547  007A                     ??_LCD_GoToNextLine:	
   548                           ; 1 bytes @ 0xA
   549                           
   550                           
   551                           ; 1 bytes @ 0xA
   552  007A                     	ds	1
   553  007B                     ??_LCD_DisplayChar:	
   554  007B                     LCD_GoToLine@v_lineNumber_u8:	
   555                           ; 1 bytes @ 0xB
   556                           
   557                           
   558                           ; 1 bytes @ 0xB
   559  007B                     	ds	1
   560  007C                     ??_LCD_Clear:	
   561  007C                     ?_LCD_Init:	
   562                           ; 1 bytes @ 0xC
   563                           
   564  007C                     LCD_Init@v_MaxCharsPerLine_u8:	
   565                           ; 1 bytes @ 0xC
   566                           
   567  007C                     LCD_DisplayChar@v_lcdData_u8:	
   568                           ; 1 bytes @ 0xC
   569                           
   570                           
   571                           ; 1 bytes @ 0xC
   572  007C                     	ds	1
   573  007D                     ??_LCD_Init:	
   574  007D                     ??_LCD_DisplayString:	
   575                           ; 1 bytes @ 0xD
   576                           
   577  007D                     ___lldiv@counter:	
   578                           ; 1 bytes @ 0xD
   579                           
   580                           
   581                           ; 1 bytes @ 0xD
   582  007D                     	ds	1
   583  007E                     ??_UART_Init:	
   584                           
   585                           	psect	cstackBANK0
   586  0020                     __pcstackBANK0:	
   587                           ; 1 bytes @ 0xE
   588                           
   589  0020                     ?_UART_SetBaudRate:	
   590  0020                     ?_LCD_SetUp:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0020                     LCD_SetUp@RW:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0020                     LCD_Init@v_lcdNoOfLines_u8:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0020                     LCD_DisplayString@ptr_stringPointer_u8:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0020                     UART_SetBaudRate@var_baudRate_u32:	
   603                           ; 1 bytes @ 0x0
   604                           
   605                           
   606                           ; 4 bytes @ 0x0
   607  0020                     	ds	1
   608  0021                     LCD_SetUp@EN:	
   609                           
   610                           ; 1 bytes @ 0x1
   611  0021                     	ds	1
   612  0022                     LCD_SetUp@D0:	
   613                           
   614                           ; 1 bytes @ 0x2
   615  0022                     	ds	1
   616  0023                     LCD_SetUp@D1:	
   617                           
   618                           ; 1 bytes @ 0x3
   619  0023                     	ds	1
   620  0024                     ??_UART_SetBaudRate:	
   621  0024                     LCD_SetUp@D2:	
   622                           ; 1 bytes @ 0x4
   623                           
   624                           
   625                           ; 1 bytes @ 0x4
   626  0024                     	ds	1
   627  0025                     LCD_SetUp@D3:	
   628                           
   629                           ; 1 bytes @ 0x5
   630  0025                     	ds	1
   631  0026                     LCD_SetUp@D4:	
   632                           
   633                           ; 1 bytes @ 0x6
   634  0026                     	ds	1
   635  0027                     LCD_SetUp@D5:	
   636                           
   637                           ; 1 bytes @ 0x7
   638  0027                     	ds	1
   639  0028                     LCD_SetUp@D6:	
   640                           
   641                           ; 1 bytes @ 0x8
   642  0028                     	ds	1
   643  0029                     LCD_SetUp@D7:	
   644                           
   645                           ; 1 bytes @ 0x9
   646  0029                     	ds	3
   647  002C                     UART_SetBaudRate@RegValue:	
   648                           
   649                           ; 4 bytes @ 0xC
   650  002C                     	ds	4
   651  0030                     ?_UART_Init:	
   652  0030                     UART_Init@var_baudRate_u32:	
   653                           ; 1 bytes @ 0x10
   654                           
   655                           
   656                           ; 4 bytes @ 0x10
   657  0030                     	ds	4
   658  0034                     ??_main:	
   659                           
   660                           ; 1 bytes @ 0x14
   661  0034                     	ds	10
   662  003E                     main@ch:	
   663                           
   664                           ; 1 bytes @ 0x1E
   665  003E                     	ds	1
   666                           
   667                           	psect	maintext
   668  039F                     __pmaintext:	
   669 ;;
   670 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   671 ;;
   672 ;; *************** function _main *****************
   673 ;; Defined at:
   674 ;;		line 43 in file "main.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;  ch              1   30[BANK0 ] unsigned char 
   679 ;; Return value:  Size  Location     Type
   680 ;;                  2  430[None  ] int 
   681 ;; Registers used:
   682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   683 ;; Tracked objects:
   684 ;;		On entry : B00/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   688 ;;      Params:         0       0       0       0       0
   689 ;;      Locals:         0       1       0       0       0
   690 ;;      Temps:          0      10       0       0       0
   691 ;;      Totals:         0      11       0       0       0
   692 ;;Total ram usage:       11 bytes
   693 ;; Hardware stack levels required when called:    7
   694 ;; This function calls:
   695 ;;		_LCD_DisplayChar
   696 ;;		_LCD_DisplayString
   697 ;;		_LCD_GoToLine
   698 ;;		_LCD_Init
   699 ;;		_LCD_SetUp
   700 ;;		_UART_Init
   701 ;;		_UART_RxChar
   702 ;;		_UART_TxChar
   703 ;; This function is called by:
   704 ;;		Startup code after reset
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           
   709                           ;psect for function _main
   710  039F                     _main:	
   711                           
   712                           ;main.c: 45: char ch;
   713                           ;main.c: 47: LCD_SetUp(PB_0,PB_1,PB_2,P_NC,P_NC,P_NC,P_NC,PB_4,PB_5,PB_6,PB_7);
   714                           
   715                           ;incstack = 0
   716                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   717  039F  3009               	movlw	9
   718  03A0  1283               	bcf	3,5	;RP0=0, select bank0
   719  03A1  1303               	bcf	3,6	;RP1=0, select bank0
   720  03A2  00B4               	movwf	??_main
   721  03A3  0834               	movf	??_main,w
   722  03A4  00A0               	movwf	LCD_SetUp@RW
   723  03A5  300A               	movlw	10
   724  03A6  00B5               	movwf	??_main+1
   725  03A7  0835               	movf	??_main+1,w
   726  03A8  00A1               	movwf	LCD_SetUp@EN
   727  03A9  30FF               	movlw	255
   728  03AA  00B6               	movwf	??_main+2
   729  03AB  0836               	movf	??_main+2,w
   730  03AC  00A2               	movwf	LCD_SetUp@D0
   731  03AD  30FF               	movlw	255
   732  03AE  00B7               	movwf	??_main+3
   733  03AF  0837               	movf	??_main+3,w
   734  03B0  00A3               	movwf	LCD_SetUp@D1
   735  03B1  30FF               	movlw	255
   736  03B2  00B8               	movwf	??_main+4
   737  03B3  0838               	movf	??_main+4,w
   738  03B4  00A4               	movwf	LCD_SetUp@D2
   739  03B5  30FF               	movlw	255
   740  03B6  00B9               	movwf	??_main+5
   741  03B7  0839               	movf	??_main+5,w
   742  03B8  00A5               	movwf	LCD_SetUp@D3
   743  03B9  300C               	movlw	12
   744  03BA  00BA               	movwf	??_main+6
   745  03BB  083A               	movf	??_main+6,w
   746  03BC  00A6               	movwf	LCD_SetUp@D4
   747  03BD  300D               	movlw	13
   748  03BE  00BB               	movwf	??_main+7
   749  03BF  083B               	movf	??_main+7,w
   750  03C0  00A7               	movwf	LCD_SetUp@D5
   751  03C1  300E               	movlw	14
   752  03C2  00BC               	movwf	??_main+8
   753  03C3  083C               	movf	??_main+8,w
   754  03C4  00A8               	movwf	LCD_SetUp@D6
   755  03C5  300F               	movlw	15
   756  03C6  00BD               	movwf	??_main+9
   757  03C7  083D               	movf	??_main+9,w
   758  03C8  00A9               	movwf	LCD_SetUp@D7
   759  03C9  3008               	movlw	8
   760  03CA  120A  118A  258A  120A  118A  	fcall	_LCD_SetUp
   761                           
   762                           ;main.c: 48: LCD_Init(2,16);
   763  03CF  3010               	movlw	16
   764  03D0  1283               	bcf	3,5	;RP0=0, select bank0
   765  03D1  1303               	bcf	3,6	;RP1=0, select bank0
   766  03D2  00B4               	movwf	??_main
   767  03D3  0834               	movf	??_main,w
   768  03D4  00FC               	movwf	LCD_Init@v_MaxCharsPerLine_u8
   769  03D5  3002               	movlw	2
   770  03D6  120A  118A  22AB  120A  118A  	fcall	_LCD_Init
   771                           
   772                           ;main.c: 49: UART_Init(9600);
   773  03DB  3000               	movlw	0
   774  03DC  1283               	bcf	3,5	;RP0=0, select bank0
   775  03DD  1303               	bcf	3,6	;RP1=0, select bank0
   776  03DE  00B3               	movwf	UART_Init@var_baudRate_u32+3
   777  03DF  3000               	movlw	0
   778  03E0  00B2               	movwf	UART_Init@var_baudRate_u32+2
   779  03E1  3025               	movlw	37
   780  03E2  00B1               	movwf	UART_Init@var_baudRate_u32+1
   781  03E3  3080               	movlw	128
   782  03E4  00B0               	movwf	UART_Init@var_baudRate_u32
   783  03E5  120A  118A  2111  120A  118A  	fcall	_UART_Init
   784                           
   785                           ;main.c: 50: LCD_DisplayString("send data from  serial terminal");
   786  03EA  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   787  03EB  120A  118A  2146  120A  118A  	fcall	_LCD_DisplayString
   788                           
   789                           ;main.c: 51: LCD_GoToLine(0);
   790  03F0  3000               	movlw	0
   791  03F1  120A  118A  20FC  120A  118A  	fcall	_LCD_GoToLine
   792  03F6                     l2392:	
   793                           ;main.c: 52: while(1)
   794                           
   795                           
   796                           ;main.c: 53: {
   797                           ;main.c: 54: ch = UART_RxChar();
   798  03F6  120A  118A  20A6  120A  118A  	fcall	_UART_RxChar
   799  03FB  1283               	bcf	3,5	;RP0=0, select bank0
   800  03FC  1303               	bcf	3,6	;RP1=0, select bank0
   801  03FD  00B4               	movwf	??_main
   802  03FE  0834               	movf	??_main,w
   803  03FF  00BE               	movwf	main@ch
   804                           
   805                           ;main.c: 55: UART_TxChar(ch);
   806  0400  083E               	movf	main@ch,w
   807  0401  120A  118A  20B5  120A  118A  	fcall	_UART_TxChar
   808                           
   809                           ;main.c: 56: LCD_DisplayChar(ch);
   810  0406  1283               	bcf	3,5	;RP0=0, select bank0
   811  0407  1303               	bcf	3,6	;RP1=0, select bank0
   812  0408  083E               	movf	main@ch,w
   813  0409  120A  118A  2127  120A  118A  	fcall	_LCD_DisplayChar
   814  040E  2BF6               	goto	l2392
   815  040F                     __end_of_main:	
   816                           ;main.c: 57: }
   817                           ;main.c: 59: return (0);
   818                           ;	Return value of _main is never used
   819                           
   820                           
   821                           	psect	text1
   822  00B5                     __ptext1:	
   823 ;; *************** function _UART_TxChar *****************
   824 ;; Defined at:
   825 ;;		line 141 in file "../00-libfiles/uart.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;  var_uartData    1    wreg     unsigned char 
   828 ;; Auto vars:     Size  Location     Type
   829 ;;  var_uartData    1    0[COMMON] unsigned char 
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   839 ;;      Params:         0       0       0       0       0
   840 ;;      Locals:         1       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0
   842 ;;      Totals:         1       0       0       0       0
   843 ;;Total ram usage:        1 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_main
   849 ;;		_UART_TxString
   850 ;;		_UART_TxNumber
   851 ;;		_UART_Printf
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           
   856                           ;psect for function _UART_TxChar
   857  00B5                     _UART_TxChar:	
   858                           
   859                           ;incstack = 0
   860                           ; Regs used in _UART_TxChar: [wreg]
   861                           ;UART_TxChar@var_uartData_u8 stored from wreg
   862  00B5  00F0               	movwf	UART_TxChar@var_uartData_u8
   863  00B6                     l39:	
   864                           ;uart.c: 143: while(TXIF==0);
   865                           
   866  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   867  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   868  00B8  1E0C               	btfss	12,4	;volatile
   869  00B9  28B6               	goto	l39
   870                           
   871                           ;uart.c: 144: TXIF=0;
   872  00BA  120C               	bcf	12,4	;volatile
   873                           
   874                           ;uart.c: 145: TXREG=var_uartData_u8;
   875  00BB  0870               	movf	UART_TxChar@var_uartData_u8,w
   876  00BC  0099               	movwf	25	;volatile
   877  00BD  0008               	return
   878  00BE                     __end_of_UART_TxChar:	
   879                           
   880                           	psect	text2
   881  00A6                     __ptext2:	
   882 ;; *************** function _UART_RxChar *****************
   883 ;; Defined at:
   884 ;;		line 119 in file "../00-libfiles/uart.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;		None
   887 ;; Auto vars:     Size  Location     Type
   888 ;;		None
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      unsigned char 
   891 ;; Registers used:
   892 ;;		wreg
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   898 ;;      Params:         0       0       0       0       0
   899 ;;      Locals:         0       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0
   901 ;;      Totals:         0       0       0       0       0
   902 ;;Total ram usage:        0 bytes
   903 ;; Hardware stack levels used:    1
   904 ;; This function calls:
   905 ;;		Nothing
   906 ;; This function is called by:
   907 ;;		_main
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           
   912                           ;psect for function _UART_RxChar
   913  00A6                     _UART_RxChar:	
   914  00A6                     l33:	
   915                           ;uart.c: 121: while(RCIF==0);
   916                           
   917                           ;incstack = 0
   918                           ; Regs used in _UART_RxChar: [wreg]
   919                           
   920  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   921  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   922  00A8  1E8C               	btfss	12,5	;volatile
   923  00A9  28A6               	goto	l33
   924                           
   925                           ;uart.c: 122: RCIF=0;
   926  00AA  128C               	bcf	12,5	;volatile
   927                           
   928                           ;uart.c: 123: return(RCREG);
   929  00AB  081A               	movf	26,w	;volatile
   930  00AC  0008               	return
   931  00AD                     __end_of_UART_RxChar:	
   932                           
   933                           	psect	text3
   934  0111                     __ptext3:	
   935 ;; *************** function _UART_Init *****************
   936 ;; Defined at:
   937 ;;		line 62 in file "../00-libfiles/uart.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;  var_baudRate    4   16[BANK0 ] unsigned long 
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		wreg, status,2, status,0, pclath, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   951 ;;      Params:         0       4       0       0       0
   952 ;;      Locals:         0       0       0       0       0
   953 ;;      Temps:          0       0       0       0       0
   954 ;;      Totals:         0       4       0       0       0
   955 ;;Total ram usage:        4 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    2
   958 ;; This function calls:
   959 ;;		_UART_SetBaudRate
   960 ;; This function is called by:
   961 ;;		_main
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           
   966                           ;psect for function _UART_Init
   967  0111                     _UART_Init:	
   968                           
   969                           ;uart.c: 64: TRISC=0x80;
   970                           
   971                           ;incstack = 0
   972                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
   973  0111  3080               	movlw	128
   974  0112  1683               	bsf	3,5	;RP0=1, select bank1
   975  0113  1303               	bcf	3,6	;RP1=0, select bank1
   976  0114  0087               	movwf	7	;volatile
   977                           
   978                           ;uart.c: 65: TXSTA=0x20;
   979  0115  3020               	movlw	32
   980  0116  0098               	movwf	24	;volatile
   981                           
   982                           ;uart.c: 66: RCSTA=0x90;
   983  0117  3090               	movlw	144
   984  0118  1283               	bcf	3,5	;RP0=0, select bank0
   985  0119  1303               	bcf	3,6	;RP1=0, select bank0
   986  011A  0098               	movwf	24	;volatile
   987                           
   988                           ;uart.c: 67: UART_SetBaudRate(var_baudRate_u32);
   989  011B  0833               	movf	UART_Init@var_baudRate_u32+3,w
   990  011C  00A3               	movwf	UART_SetBaudRate@var_baudRate_u32+3
   991  011D  0832               	movf	UART_Init@var_baudRate_u32+2,w
   992  011E  00A2               	movwf	UART_SetBaudRate@var_baudRate_u32+2
   993  011F  0831               	movf	UART_Init@var_baudRate_u32+1,w
   994  0120  00A1               	movwf	UART_SetBaudRate@var_baudRate_u32+1
   995  0121  0830               	movf	UART_Init@var_baudRate_u32,w
   996  0122  00A0               	movwf	UART_SetBaudRate@var_baudRate_u32
   997  0123  120A  118A  2484   	fcall	_UART_SetBaudRate
   998  0126  0008               	return
   999  0127                     __end_of_UART_Init:	
  1000                           
  1001                           	psect	text4
  1002  0484                     __ptext4:	
  1003 ;; *************** function _UART_SetBaudRate *****************
  1004 ;; Defined at:
  1005 ;;		line 87 in file "../00-libfiles/uart.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;  var_baudRate    4    0[BANK0 ] unsigned long 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  RegValue        4   12[BANK0 ] unsigned long 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0, pclath, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1019 ;;      Params:         0       4       0       0       0
  1020 ;;      Locals:         0       4       0       0       0
  1021 ;;      Temps:          0       8       0       0       0
  1022 ;;      Totals:         0      16       0       0       0
  1023 ;;Total ram usage:       16 bytes
  1024 ;; Hardware stack levels used:    1
  1025 ;; Hardware stack levels required when called:    1
  1026 ;; This function calls:
  1027 ;;		___lldiv
  1028 ;; This function is called by:
  1029 ;;		_UART_Init
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           
  1034                           ;psect for function _UART_SetBaudRate
  1035  0484                     _UART_SetBaudRate:	
  1036                           
  1037                           ;uart.c: 89: uint32_t RegValue;
  1038                           ;uart.c: 91: if((var_baudRate_u32 >= 2400) && (var_baudRate_u32<=115200UL))
  1039                           
  1040                           ;incstack = 0
  1041                           ; Regs used in _UART_SetBaudRate: [wreg+status,2+status,0+pclath+cstack]
  1042  0484  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0485  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0486  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  1045  0487  1D03               	btfss	3,2
  1046  0488  2C96               	goto	l1872
  1047  0489  0822               	movf	UART_SetBaudRate@var_baudRate_u32+2,w
  1048  048A  1D03               	btfss	3,2
  1049  048B  2C96               	goto	l1872
  1050  048C  3009               	movlw	9
  1051  048D  0221               	subwf	UART_SetBaudRate@var_baudRate_u32+1,w
  1052  048E  1D03               	skipz
  1053  048F  2C94               	goto	u2363
  1054  0490  3060               	movlw	96
  1055  0491  0220               	subwf	UART_SetBaudRate@var_baudRate_u32,w
  1056  0492  1D03               	skipz
  1057  0493  2C94               	goto	u2363
  1058  0494                     u2363:	
  1059  0494  1C03               	btfss	3,0
  1060  0495  2CF1               	goto	l1876
  1061  0496                     l1872:	
  1062  0496  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  1063  0497  1D03               	btfss	3,2
  1064  0498  2CF1               	goto	l1876
  1065  0499  3001               	movlw	1
  1066  049A  0222               	subwf	UART_SetBaudRate@var_baudRate_u32+2,w
  1067  049B  1D03               	skipz
  1068  049C  2CA5               	goto	u2373
  1069  049D  30C2               	movlw	194
  1070  049E  0221               	subwf	UART_SetBaudRate@var_baudRate_u32+1,w
  1071  049F  1D03               	skipz
  1072  04A0  2CA5               	goto	u2373
  1073  04A1  3001               	movlw	1
  1074  04A2  0220               	subwf	UART_SetBaudRate@var_baudRate_u32,w
  1075  04A3  1D03               	skipz
  1076  04A4  2CA5               	goto	u2373
  1077  04A5                     u2373:	
  1078  04A5  1803               	btfsc	3,0
  1079  04A6  2CF1               	goto	l1876
  1080                           
  1081                           ;uart.c: 92: {
  1082                           ;uart.c: 95: RegValue = (uint32_t)((20000000UL / (64*(uint32_t)var_baudRate_u32)) - 1);
  1083  04A7  30FF               	movlw	255
  1084  04A8  00A4               	movwf	??_UART_SetBaudRate
  1085  04A9  30FF               	movlw	255
  1086  04AA  00A5               	movwf	??_UART_SetBaudRate+1
  1087  04AB  30FF               	movlw	255
  1088  04AC  00A6               	movwf	??_UART_SetBaudRate+2
  1089  04AD  30FF               	movlw	255
  1090  04AE  00A7               	movwf	??_UART_SetBaudRate+3
  1091  04AF  0820               	movf	UART_SetBaudRate@var_baudRate_u32,w
  1092  04B0  00A8               	movwf	??_UART_SetBaudRate+4
  1093  04B1  0821               	movf	UART_SetBaudRate@var_baudRate_u32+1,w
  1094  04B2  00A9               	movwf	??_UART_SetBaudRate+5
  1095  04B3  0822               	movf	UART_SetBaudRate@var_baudRate_u32+2,w
  1096  04B4  00AA               	movwf	??_UART_SetBaudRate+6
  1097  04B5  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  1098  04B6  00AB               	movwf	??_UART_SetBaudRate+7
  1099  04B7  3006               	movlw	6
  1100  04B8                     u2385:	
  1101  04B8  1003               	clrc
  1102  04B9  0DA8               	rlf	??_UART_SetBaudRate+4,f
  1103  04BA  0DA9               	rlf	??_UART_SetBaudRate+5,f
  1104  04BB  0DAA               	rlf	??_UART_SetBaudRate+6,f
  1105  04BC  0DAB               	rlf	??_UART_SetBaudRate+7,f
  1106  04BD  3EFF               	addlw	-1
  1107  04BE  1D03               	skipz
  1108  04BF  2CB8               	goto	u2385
  1109  04C0  082B               	movf	??_UART_SetBaudRate+7,w
  1110  04C1  00F3               	movwf	___lldiv@divisor+3
  1111  04C2  082A               	movf	??_UART_SetBaudRate+6,w
  1112  04C3  00F2               	movwf	___lldiv@divisor+2
  1113  04C4  0829               	movf	??_UART_SetBaudRate+5,w
  1114  04C5  00F1               	movwf	___lldiv@divisor+1
  1115  04C6  0828               	movf	??_UART_SetBaudRate+4,w
  1116  04C7  00F0               	movwf	___lldiv@divisor
  1117  04C8  3001               	movlw	1
  1118  04C9  00F7               	movwf	___lldiv@dividend+3
  1119  04CA  3031               	movlw	49
  1120  04CB  00F6               	movwf	___lldiv@dividend+2
  1121  04CC  302D               	movlw	45
  1122  04CD  00F5               	movwf	___lldiv@dividend+1
  1123  04CE  3000               	movlw	0
  1124  04CF  00F4               	movwf	___lldiv@dividend
  1125  04D0  120A  118A  2341  120A  118A  	fcall	___lldiv
  1126  04D5  0870               	movf	?___lldiv,w
  1127  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  1128  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  1129  04D8  07A4               	addwf	??_UART_SetBaudRate,f
  1130  04D9  0871               	movf	?___lldiv+1,w
  1131  04DA  1803               	skipnc
  1132  04DB  0F71               	incfsz	?___lldiv+1,w
  1133  04DC  2CDE               	goto	u2390
  1134  04DD  2CDF               	goto	u2391
  1135  04DE                     u2390:	
  1136  04DE  07A5               	addwf	??_UART_SetBaudRate+1,f
  1137  04DF                     u2391:	
  1138  04DF  0872               	movf	?___lldiv+2,w
  1139  04E0  1803               	skipnc
  1140  04E1  0F72               	incfsz	?___lldiv+2,w
  1141  04E2  2CE4               	goto	u2392
  1142  04E3  2CE5               	goto	u2393
  1143  04E4                     u2392:	
  1144  04E4  07A6               	addwf	??_UART_SetBaudRate+2,f
  1145  04E5                     u2393:	
  1146  04E5  0873               	movf	?___lldiv+3,w
  1147  04E6  1803               	skipnc
  1148  04E7  0A73               	incf	?___lldiv+3,w
  1149  04E8  07A7               	addwf	??_UART_SetBaudRate+3,f
  1150  04E9  0827               	movf	??_UART_SetBaudRate+3,w
  1151  04EA  00AF               	movwf	UART_SetBaudRate@RegValue+3
  1152  04EB  0826               	movf	??_UART_SetBaudRate+2,w
  1153  04EC  00AE               	movwf	UART_SetBaudRate@RegValue+2
  1154  04ED  0825               	movf	??_UART_SetBaudRate+1,w
  1155  04EE  00AD               	movwf	UART_SetBaudRate@RegValue+1
  1156  04EF  0824               	movf	??_UART_SetBaudRate,w
  1157  04F0  2CF8               	goto	L1
  1158  04F1                     l1876:	
  1159                           ;uart.c: 96: }
  1160                           
  1161                           
  1162                           ;uart.c: 97: else
  1163                           ;uart.c: 98: {
  1164                           ;uart.c: 100: RegValue = (uint32_t)((20000000UL / (64*(uint32_t)9600)) - 1);
  1165  04F1  3000               	movlw	0
  1166  04F2  00AF               	movwf	UART_SetBaudRate@RegValue+3
  1167  04F3  3000               	movlw	0
  1168  04F4  00AE               	movwf	UART_SetBaudRate@RegValue+2
  1169  04F5  3000               	movlw	0
  1170  04F6  00AD               	movwf	UART_SetBaudRate@RegValue+1
  1171  04F7  301F               	movlw	31
  1172  04F8                     L1:	
  1173  04F8  00AC               	movwf	UART_SetBaudRate@RegValue
  1174                           
  1175                           ;uart.c: 101: }
  1176                           ;uart.c: 103: SPBRG = (uint8_t)RegValue;
  1177  04F9  082C               	movf	UART_SetBaudRate@RegValue,w
  1178  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  1179  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  1180  04FC  0099               	movwf	25	;volatile
  1181  04FD  0008               	return
  1182  04FE                     __end_of_UART_SetBaudRate:	
  1183                           
  1184                           	psect	text5
  1185  0341                     __ptext5:	
  1186 ;; *************** function ___lldiv *****************
  1187 ;; Defined at:
  1188 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  divisor         4    0[COMMON] unsigned long 
  1191 ;;  dividend        4    4[COMMON] unsigned long 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  quotient        4    9[COMMON] unsigned long 
  1194 ;;  counter         1   13[COMMON] unsigned char 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  4    0[COMMON] unsigned long 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1204 ;;      Params:         8       0       0       0       0
  1205 ;;      Locals:         5       0       0       0       0
  1206 ;;      Temps:          1       0       0       0       0
  1207 ;;      Totals:        14       0       0       0       0
  1208 ;;Total ram usage:       14 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_UART_SetBaudRate
  1214 ;;		_UART_TxNumber
  1215 ;;		_LCD_DisplayNumber
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           
  1220                           ;psect for function ___lldiv
  1221  0341                     ___lldiv:	
  1222                           
  1223                           ;incstack = 0
  1224                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1225  0341  3000               	movlw	0
  1226  0342  00FC               	movwf	___lldiv@quotient+3
  1227  0343  3000               	movlw	0
  1228  0344  00FB               	movwf	___lldiv@quotient+2
  1229  0345  3000               	movlw	0
  1230  0346  00FA               	movwf	___lldiv@quotient+1
  1231  0347  3000               	movlw	0
  1232  0348  00F9               	movwf	___lldiv@quotient
  1233  0349  0873               	movf	___lldiv@divisor+3,w
  1234  034A  0472               	iorwf	___lldiv@divisor+2,w
  1235  034B  0471               	iorwf	___lldiv@divisor+1,w
  1236  034C  0470               	iorwf	___lldiv@divisor,w
  1237  034D  1903               	skipnz
  1238  034E  2B96               	goto	l1866
  1239  034F  01FD               	clrf	___lldiv@counter
  1240  0350  0AFD               	incf	___lldiv@counter,f
  1241  0351                     l1852:	
  1242  0351  1BF3               	btfsc	___lldiv@divisor+3,7
  1243  0352  2B61               	goto	l1854
  1244  0353  3001               	movlw	1
  1245  0354  00F8               	movwf	??___lldiv
  1246  0355                     u2305:	
  1247  0355  1003               	clrc
  1248  0356  0DF0               	rlf	___lldiv@divisor,f
  1249  0357  0DF1               	rlf	___lldiv@divisor+1,f
  1250  0358  0DF2               	rlf	___lldiv@divisor+2,f
  1251  0359  0DF3               	rlf	___lldiv@divisor+3,f
  1252  035A  0BF8               	decfsz	??___lldiv,f
  1253  035B  2B55               	goto	u2305
  1254  035C  3001               	movlw	1
  1255  035D  00F8               	movwf	??___lldiv
  1256  035E  0878               	movf	??___lldiv,w
  1257  035F  07FD               	addwf	___lldiv@counter,f
  1258  0360  2B51               	goto	l1852
  1259  0361                     l1854:	
  1260  0361  3001               	movlw	1
  1261  0362  00F8               	movwf	??___lldiv
  1262  0363                     u2325:	
  1263  0363  1003               	clrc
  1264  0364  0DF9               	rlf	___lldiv@quotient,f
  1265  0365  0DFA               	rlf	___lldiv@quotient+1,f
  1266  0366  0DFB               	rlf	___lldiv@quotient+2,f
  1267  0367  0DFC               	rlf	___lldiv@quotient+3,f
  1268  0368  0BF8               	decfsz	??___lldiv,f
  1269  0369  2B63               	goto	u2325
  1270  036A  0873               	movf	___lldiv@divisor+3,w
  1271  036B  0277               	subwf	___lldiv@dividend+3,w
  1272  036C  1D03               	skipz
  1273  036D  2B78               	goto	u2335
  1274  036E  0872               	movf	___lldiv@divisor+2,w
  1275  036F  0276               	subwf	___lldiv@dividend+2,w
  1276  0370  1D03               	skipz
  1277  0371  2B78               	goto	u2335
  1278  0372  0871               	movf	___lldiv@divisor+1,w
  1279  0373  0275               	subwf	___lldiv@dividend+1,w
  1280  0374  1D03               	skipz
  1281  0375  2B78               	goto	u2335
  1282  0376  0870               	movf	___lldiv@divisor,w
  1283  0377  0274               	subwf	___lldiv@dividend,w
  1284  0378                     u2335:	
  1285  0378  1C03               	skipc
  1286  0379  2B89               	goto	l1862
  1287  037A  0870               	movf	___lldiv@divisor,w
  1288  037B  02F4               	subwf	___lldiv@dividend,f
  1289  037C  0871               	movf	___lldiv@divisor+1,w
  1290  037D  1C03               	skipc
  1291  037E  0F71               	incfsz	___lldiv@divisor+1,w
  1292  037F  02F5               	subwf	___lldiv@dividend+1,f
  1293  0380  0872               	movf	___lldiv@divisor+2,w
  1294  0381  1C03               	skipc
  1295  0382  0F72               	incfsz	___lldiv@divisor+2,w
  1296  0383  02F6               	subwf	___lldiv@dividend+2,f
  1297  0384  0873               	movf	___lldiv@divisor+3,w
  1298  0385  1C03               	skipc
  1299  0386  0F73               	incfsz	___lldiv@divisor+3,w
  1300  0387  02F7               	subwf	___lldiv@dividend+3,f
  1301  0388  1479               	bsf	___lldiv@quotient,0
  1302  0389                     l1862:	
  1303  0389  3001               	movlw	1
  1304  038A                     u2345:	
  1305  038A  1003               	clrc
  1306  038B  0CF3               	rrf	___lldiv@divisor+3,f
  1307  038C  0CF2               	rrf	___lldiv@divisor+2,f
  1308  038D  0CF1               	rrf	___lldiv@divisor+1,f
  1309  038E  0CF0               	rrf	___lldiv@divisor,f
  1310  038F  3EFF               	addlw	-1
  1311  0390  1D03               	skipz
  1312  0391  2B8A               	goto	u2345
  1313  0392  3001               	movlw	1
  1314  0393  02FD               	subwf	___lldiv@counter,f
  1315  0394  1D03               	btfss	3,2
  1316  0395  2B61               	goto	l1854
  1317  0396                     l1866:	
  1318  0396  087C               	movf	___lldiv@quotient+3,w
  1319  0397  00F3               	movwf	?___lldiv+3
  1320  0398  087B               	movf	___lldiv@quotient+2,w
  1321  0399  00F2               	movwf	?___lldiv+2
  1322  039A  087A               	movf	___lldiv@quotient+1,w
  1323  039B  00F1               	movwf	?___lldiv+1
  1324  039C  0879               	movf	___lldiv@quotient,w
  1325  039D  00F0               	movwf	?___lldiv
  1326  039E  0008               	return
  1327  039F                     __end_of___lldiv:	
  1328                           
  1329                           	psect	text6
  1330  058A                     __ptext6:	
  1331 ;; *************** function _LCD_SetUp *****************
  1332 ;; Defined at:
  1333 ;;		line 129 in file "../00-libfiles/lcd.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  RS              1    wreg     enum E33
  1336 ;;  RW              1    0[BANK0 ] enum E33
  1337 ;;  EN              1    1[BANK0 ] enum E33
  1338 ;;  D0              1    2[BANK0 ] enum E33
  1339 ;;  D1              1    3[BANK0 ] enum E33
  1340 ;;  D2              1    4[BANK0 ] enum E33
  1341 ;;  D3              1    5[BANK0 ] enum E33
  1342 ;;  D4              1    6[BANK0 ] enum E33
  1343 ;;  D5              1    7[BANK0 ] enum E33
  1344 ;;  D6              1    8[BANK0 ] enum E33
  1345 ;;  D7              1    9[BANK0 ] enum E33
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  RS              1    6[COMMON] enum E33
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1357 ;;      Params:         0      10       0       0       0
  1358 ;;      Locals:         1       0       0       0       0
  1359 ;;      Temps:          1       0       0       0       0
  1360 ;;      Totals:         2      10       0       0       0
  1361 ;;Total ram usage:       12 bytes
  1362 ;; Hardware stack levels used:    1
  1363 ;; Hardware stack levels required when called:    1
  1364 ;; This function calls:
  1365 ;;		_GPIO_PinDirection
  1366 ;; This function is called by:
  1367 ;;		_main
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           
  1372                           ;psect for function _LCD_SetUp
  1373  058A                     _LCD_SetUp:	
  1374                           
  1375                           ;incstack = 0
  1376                           ; Regs used in _LCD_SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1377                           ;LCD_SetUp@RS stored from wreg
  1378  058A  00F6               	movwf	LCD_SetUp@RS
  1379                           
  1380                           ;lcd.c: 142: LCDConfig.RS = RS;
  1381  058B  0876               	movf	LCD_SetUp@RS,w
  1382  058C  00F5               	movwf	??_LCD_SetUp
  1383  058D  0875               	movf	??_LCD_SetUp,w
  1384  058E  1283               	bcf	3,5	;RP0=0, select bank0
  1385  058F  1303               	bcf	3,6	;RP1=0, select bank0
  1386  0590  00C2               	movwf	_LCDConfig+3
  1387                           
  1388                           ;lcd.c: 143: LCDConfig.RW = RW;
  1389  0591  0820               	movf	LCD_SetUp@RW,w
  1390  0592  00F5               	movwf	??_LCD_SetUp
  1391  0593  0875               	movf	??_LCD_SetUp,w
  1392  0594  00C3               	movwf	_LCDConfig+4
  1393                           
  1394                           ;lcd.c: 144: LCDConfig.EN = EN;
  1395  0595  0821               	movf	LCD_SetUp@EN,w
  1396  0596  00F5               	movwf	??_LCD_SetUp
  1397  0597  0875               	movf	??_LCD_SetUp,w
  1398  0598  00C4               	movwf	_LCDConfig+5
  1399                           
  1400                           ;lcd.c: 146: LCDConfig.D0 = D0;
  1401  0599  0822               	movf	LCD_SetUp@D0,w
  1402  059A  00F5               	movwf	??_LCD_SetUp
  1403  059B  0875               	movf	??_LCD_SetUp,w
  1404  059C  00C5               	movwf	_LCDConfig+6
  1405                           
  1406                           ;lcd.c: 147: LCDConfig.D1 = D1;
  1407  059D  0823               	movf	LCD_SetUp@D1,w
  1408  059E  00F5               	movwf	??_LCD_SetUp
  1409  059F  0875               	movf	??_LCD_SetUp,w
  1410  05A0  00C6               	movwf	_LCDConfig+7
  1411                           
  1412                           ;lcd.c: 148: LCDConfig.D2 = D2;
  1413  05A1  0824               	movf	LCD_SetUp@D2,w
  1414  05A2  00F5               	movwf	??_LCD_SetUp
  1415  05A3  0875               	movf	??_LCD_SetUp,w
  1416  05A4  00C7               	movwf	_LCDConfig+8
  1417                           
  1418                           ;lcd.c: 149: LCDConfig.D3 = D3;
  1419  05A5  0825               	movf	LCD_SetUp@D3,w
  1420  05A6  00F5               	movwf	??_LCD_SetUp
  1421  05A7  0875               	movf	??_LCD_SetUp,w
  1422  05A8  00C8               	movwf	_LCDConfig+9
  1423                           
  1424                           ;lcd.c: 150: LCDConfig.D4 = D4;
  1425  05A9  0826               	movf	LCD_SetUp@D4,w
  1426  05AA  00F5               	movwf	??_LCD_SetUp
  1427  05AB  0875               	movf	??_LCD_SetUp,w
  1428  05AC  00C9               	movwf	_LCDConfig+10
  1429                           
  1430                           ;lcd.c: 151: LCDConfig.D5 = D5;
  1431  05AD  0827               	movf	LCD_SetUp@D5,w
  1432  05AE  00F5               	movwf	??_LCD_SetUp
  1433  05AF  0875               	movf	??_LCD_SetUp,w
  1434  05B0  00CA               	movwf	_LCDConfig+11
  1435                           
  1436                           ;lcd.c: 152: LCDConfig.D6 = D6;
  1437  05B1  0828               	movf	LCD_SetUp@D6,w
  1438  05B2  00F5               	movwf	??_LCD_SetUp
  1439  05B3  0875               	movf	??_LCD_SetUp,w
  1440  05B4  00CB               	movwf	_LCDConfig+12
  1441                           
  1442                           ;lcd.c: 153: LCDConfig.D7 = D7;
  1443  05B5  0829               	movf	LCD_SetUp@D7,w
  1444  05B6  00F5               	movwf	??_LCD_SetUp
  1445  05B7  0875               	movf	??_LCD_SetUp,w
  1446  05B8  00CC               	movwf	_LCDConfig+13
  1447                           
  1448                           ;lcd.c: 156: if((D0 == P_NC) || (D1 == P_NC) || (D2 == P_NC) || (D3 == P_NC))
  1449  05B9  0A22               	incf	LCD_SetUp@D0,w
  1450  05BA  1903               	btfsc	3,2
  1451  05BB  2DC4               	goto	l2000
  1452  05BC  0A23               	incf	LCD_SetUp@D1,w
  1453  05BD  1903               	btfsc	3,2
  1454  05BE  2DC4               	goto	l2000
  1455  05BF  0A24               	incf	LCD_SetUp@D2,w
  1456  05C0  1D03               	btfss	3,2
  1457  05C1  0A25               	incf	LCD_SetUp@D3,w
  1458  05C2  1D03               	btfss	3,2
  1459  05C3  2DC9               	goto	l2002
  1460  05C4                     l2000:	
  1461                           
  1462                           ;lcd.c: 157: {
  1463                           ;lcd.c: 158: LCDConfig.v_LcdMode_U8 = 4;
  1464  05C4  3004               	movlw	4
  1465  05C5  00F5               	movwf	??_LCD_SetUp
  1466  05C6  0875               	movf	??_LCD_SetUp,w
  1467  05C7  00C1               	movwf	_LCDConfig+2
  1468                           
  1469                           ;lcd.c: 159: }
  1470  05C8  2DEF               	goto	l2012
  1471  05C9                     l2002:	
  1472                           
  1473                           ;lcd.c: 160: else
  1474                           ;lcd.c: 161: {
  1475                           ;lcd.c: 162: LCDConfig.v_LcdMode_U8 = 8;
  1476  05C9  3008               	movlw	8
  1477  05CA  00F5               	movwf	??_LCD_SetUp
  1478  05CB  0875               	movf	??_LCD_SetUp,w
  1479  05CC  00C1               	movwf	_LCDConfig+2
  1480                           
  1481                           ;lcd.c: 163: GPIO_PinDirection(D0,0x00u);
  1482  05CD  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1483  05CE  0822               	movf	LCD_SetUp@D0,w
  1484  05CF  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
  1485                           
  1486                           ;lcd.c: 164: GPIO_PinDirection(D1,0x00u);
  1487  05D4  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1488  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1489  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1490  05D7  0823               	movf	LCD_SetUp@D1,w
  1491  05D8  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
  1492                           
  1493                           ;lcd.c: 165: GPIO_PinDirection(D2,0x00u);
  1494  05DD  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1495  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1496  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1497  05E0  0824               	movf	LCD_SetUp@D2,w
  1498  05E1  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
  1499                           
  1500                           ;lcd.c: 166: GPIO_PinDirection(D3,0x00u);
  1501  05E6  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1502  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1503  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1504  05E9  0825               	movf	LCD_SetUp@D3,w
  1505  05EA  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
  1506  05EF                     l2012:	
  1507                           
  1508                           ;lcd.c: 167: }
  1509                           ;lcd.c: 170: GPIO_PinDirection(RS,0x00u);
  1510  05EF  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1511  05F0  0876               	movf	LCD_SetUp@RS,w
  1512  05F1  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
  1513                           
  1514                           ;lcd.c: 171: GPIO_PinDirection(RW,0x00u);
  1515  05F6  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1516  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1517  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1518  05F9  0820               	movf	LCD_SetUp@RW,w
  1519  05FA  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
  1520                           
  1521                           ;lcd.c: 172: GPIO_PinDirection(EN,0x00u);
  1522  05FF  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1523  0600  1283               	bcf	3,5	;RP0=0, select bank0
  1524  0601  1303               	bcf	3,6	;RP1=0, select bank0
  1525  0602  0821               	movf	LCD_SetUp@EN,w
  1526  0603  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
  1527                           
  1528                           ;lcd.c: 174: GPIO_PinDirection(D4,0x00u);
  1529  0608  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1530  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1531  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1532  060B  0826               	movf	LCD_SetUp@D4,w
  1533  060C  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
  1534                           
  1535                           ;lcd.c: 175: GPIO_PinDirection(D5,0x00u);
  1536  0611  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1537  0612  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0613  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0614  0827               	movf	LCD_SetUp@D5,w
  1540  0615  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
  1541                           
  1542                           ;lcd.c: 176: GPIO_PinDirection(D6,0x00u);
  1543  061A  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1544  061B  1283               	bcf	3,5	;RP0=0, select bank0
  1545  061C  1303               	bcf	3,6	;RP1=0, select bank0
  1546  061D  0828               	movf	LCD_SetUp@D6,w
  1547  061E  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
  1548                           
  1549                           ;lcd.c: 177: GPIO_PinDirection(D7,0x00u);
  1550  0623  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1551  0624  1283               	bcf	3,5	;RP0=0, select bank0
  1552  0625  1303               	bcf	3,6	;RP1=0, select bank0
  1553  0626  0829               	movf	LCD_SetUp@D7,w
  1554  0627  120A  118A  262B   	fcall	_GPIO_PinDirection
  1555  062A  0008               	return
  1556  062B                     __end_of_LCD_SetUp:	
  1557                           
  1558                           	psect	text7
  1559  02AB                     __ptext7:	
  1560 ;; *************** function _LCD_Init *****************
  1561 ;; Defined at:
  1562 ;;		line 192 in file "../00-libfiles/lcd.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  v_lcdNoOfLin    1    wreg     unsigned char 
  1565 ;;  v_MaxCharsPe    1   12[COMMON] unsigned char 
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;  v_lcdNoOfLin    1    0[BANK0 ] unsigned char 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  1    wreg      void 
  1570 ;; Registers used:
  1571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1577 ;;      Params:         1       0       0       0       0
  1578 ;;      Locals:         0       1       0       0       0
  1579 ;;      Temps:          1       0       0       0       0
  1580 ;;      Totals:         2       1       0       0       0
  1581 ;;Total ram usage:        3 bytes
  1582 ;; Hardware stack levels used:    1
  1583 ;; Hardware stack levels required when called:    6
  1584 ;; This function calls:
  1585 ;;		_DELAY_ms
  1586 ;;		_LCD_Clear
  1587 ;;		_LCD_CmdWrite
  1588 ;;		_lcd_Reset
  1589 ;; This function is called by:
  1590 ;;		_main
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           
  1595                           ;psect for function _LCD_Init
  1596  02AB                     _LCD_Init:	
  1597                           
  1598                           ;incstack = 0
  1599                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1600                           ;LCD_Init@v_lcdNoOfLines_u8 stored from wreg
  1601  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1602  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  1603  02AD  00A0               	movwf	LCD_Init@v_lcdNoOfLines_u8
  1604                           
  1605                           ;lcd.c: 196: LCDConfig.v_MaxSupportedChars_U8 = v_MaxCharsPerLine_u8;
  1606  02AE  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  1607  02AF  00FD               	movwf	??_LCD_Init
  1608  02B0  087D               	movf	??_LCD_Init,w
  1609  02B1  00C0               	movwf	_LCDConfig+1
  1610                           
  1611                           ;lcd.c: 197: LCDConfig.v_MaxSupportedLines_U8 = v_lcdNoOfLines_u8;
  1612  02B2  0820               	movf	LCD_Init@v_lcdNoOfLines_u8,w
  1613  02B3  00FD               	movwf	??_LCD_Init
  1614  02B4  087D               	movf	??_LCD_Init,w
  1615  02B5  00BF               	movwf	_LCDConfig
  1616                           
  1617                           ;lcd.c: 198: if(v_lcdNoOfLines_u8 > 0x02)
  1618  02B6  3003               	movlw	3
  1619  02B7  0220               	subwf	LCD_Init@v_lcdNoOfLines_u8,w
  1620  02B8  1C03               	skipc
  1621  02B9  2AC6               	goto	l2030
  1622                           
  1623                           ;lcd.c: 199: {
  1624                           ;lcd.c: 200: ARR_LcdLineNumAddress_U8[0x02] = 0x90 + (v_MaxCharsPerLine_u8 & 0x0fu);
  1625  02BA  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  1626  02BB  390F               	andlw	15
  1627  02BC  3E90               	addlw	144
  1628  02BD  00FD               	movwf	??_LCD_Init
  1629  02BE  087D               	movf	??_LCD_Init,w
  1630  02BF  00D1               	movwf	_ARR_LcdLineNumAddress_U8+2
  1631                           
  1632                           ;lcd.c: 201: ARR_LcdLineNumAddress_U8[0x03] = 0xd0 + (v_MaxCharsPerLine_u8 & 0x0fu);
  1633  02C0  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  1634  02C1  390F               	andlw	15
  1635  02C2  3ED0               	addlw	208
  1636  02C3  00FD               	movwf	??_LCD_Init
  1637  02C4  087D               	movf	??_LCD_Init,w
  1638  02C5  00D2               	movwf	_ARR_LcdLineNumAddress_U8+3
  1639  02C6                     l2030:	
  1640                           
  1641                           ;lcd.c: 202: }
  1642                           ;lcd.c: 204: DELAY_ms(100);
  1643  02C6  3064               	movlw	100
  1644  02C7  00F2               	movwf	DELAY_ms@ms_count
  1645  02C8  3000               	movlw	0
  1646  02C9  00F3               	movwf	DELAY_ms@ms_count+1
  1647  02CA  120A  118A  20D4  120A  118A  	fcall	_DELAY_ms
  1648                           
  1649                           ;lcd.c: 206: if(LCDConfig.v_LcdMode_U8 == 8u)
  1650  02CF  3008               	movlw	8
  1651  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1652  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1653  02D2  0641               	xorwf	_LCDConfig+2,w
  1654  02D3  1D03               	btfss	3,2
  1655  02D4  2AD7               	goto	l2036
  1656                           
  1657                           ;lcd.c: 207: {
  1658                           ;lcd.c: 208: LCD_CmdWrite(0x38u);
  1659  02D5  3038               	movlw	56
  1660  02D6  2AE3               	goto	L2
  1661  02D7                     l2036:	
  1662                           ;lcd.c: 209: }
  1663                           
  1664                           
  1665                           ;lcd.c: 210: else if(LCDConfig.v_LcdMode_U8 == 4u)
  1666  02D7  3004               	movlw	4
  1667  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1668  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1669  02DA  0641               	xorwf	_LCDConfig+2,w
  1670  02DB  1D03               	btfss	3,2
  1671  02DC  2AE8               	goto	l169
  1672                           
  1673                           ;lcd.c: 211: {
  1674                           ;lcd.c: 212: lcd_Reset();
  1675  02DD  120A  118A  22F2  120A  118A  	fcall	_lcd_Reset
  1676                           
  1677                           ;lcd.c: 213: LCD_CmdWrite(0x28u);
  1678  02E2  3028               	movlw	40
  1679  02E3                     L2:	
  1680  02E3  120A  118A  21C1  120A  118A  	fcall	_LCD_CmdWrite
  1681  02E8                     l169:	
  1682                           
  1683                           ;lcd.c: 214: }
  1684                           ;lcd.c: 216: LCD_CmdWrite(0x0Eu);
  1685  02E8  300E               	movlw	14
  1686  02E9  120A  118A  21C1  120A  118A  	fcall	_LCD_CmdWrite
  1687                           
  1688                           ;lcd.c: 217: LCD_Clear();
  1689  02EE  120A  118A  20C9   	fcall	_LCD_Clear
  1690  02F1  0008               	return
  1691  02F2                     __end_of_LCD_Init:	
  1692                           
  1693                           	psect	text8
  1694  02F2                     __ptext8:	
  1695 ;; *************** function _lcd_Reset *****************
  1696 ;; Defined at:
  1697 ;;		line 906 in file "../00-libfiles/lcd.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1711 ;;      Params:         0       0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0
  1714 ;;      Totals:         0       0       0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    2
  1718 ;; This function calls:
  1719 ;;		_DELAY_ms
  1720 ;;		_DELAY_us
  1721 ;;		_lcd_SendCmdSignals
  1722 ;;		_lcd_SendHigherNibble
  1723 ;; This function is called by:
  1724 ;;		_LCD_Init
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           
  1729                           ;psect for function _lcd_Reset
  1730  02F2                     _lcd_Reset:	
  1731                           
  1732                           ;lcd.c: 909: lcd_SendHigherNibble(0x30);
  1733                           
  1734                           ;incstack = 0
  1735                           ; Regs used in _lcd_Reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1736  02F2  3030               	movlw	48
  1737  02F3  120A  118A  222B  120A  118A  	fcall	_lcd_SendHigherNibble
  1738                           
  1739                           ;lcd.c: 910: lcd_SendCmdSignals();
  1740  02F8  120A  118A  2166  120A  118A  	fcall	_lcd_SendCmdSignals
  1741                           
  1742                           ;lcd.c: 911: DELAY_ms(100);
  1743  02FD  3064               	movlw	100
  1744  02FE  00F2               	movwf	DELAY_ms@ms_count
  1745  02FF  3000               	movlw	0
  1746  0300  00F3               	movwf	DELAY_ms@ms_count+1
  1747  0301  120A  118A  20D4  120A  118A  	fcall	_DELAY_ms
  1748                           
  1749                           ;lcd.c: 912: lcd_SendHigherNibble(0x30);
  1750  0306  3030               	movlw	48
  1751  0307  120A  118A  222B  120A  118A  	fcall	_lcd_SendHigherNibble
  1752                           
  1753                           ;lcd.c: 913: lcd_SendCmdSignals();
  1754  030C  120A  118A  2166  120A  118A  	fcall	_lcd_SendCmdSignals
  1755                           
  1756                           ;lcd.c: 914: DELAY_us(200);
  1757  0311  30C8               	movlw	200
  1758  0312  00F0               	movwf	DELAY_us@us_count
  1759  0313  3000               	movlw	0
  1760  0314  00F1               	movwf	DELAY_us@us_count+1
  1761  0315  120A  118A  20BE  120A  118A  	fcall	_DELAY_us
  1762                           
  1763                           ;lcd.c: 915: lcd_SendHigherNibble(0x30);
  1764  031A  3030               	movlw	48
  1765  031B  120A  118A  222B  120A  118A  	fcall	_lcd_SendHigherNibble
  1766                           
  1767                           ;lcd.c: 916: lcd_SendCmdSignals();
  1768  0320  120A  118A  2166  120A  118A  	fcall	_lcd_SendCmdSignals
  1769                           
  1770                           ;lcd.c: 917: DELAY_us(200);
  1771  0325  30C8               	movlw	200
  1772  0326  00F0               	movwf	DELAY_us@us_count
  1773  0327  3000               	movlw	0
  1774  0328  00F1               	movwf	DELAY_us@us_count+1
  1775  0329  120A  118A  20BE  120A  118A  	fcall	_DELAY_us
  1776                           
  1777                           ;lcd.c: 918: lcd_SendHigherNibble(0x20);
  1778  032E  3020               	movlw	32
  1779  032F  120A  118A  222B  120A  118A  	fcall	_lcd_SendHigherNibble
  1780                           
  1781                           ;lcd.c: 919: lcd_SendCmdSignals();
  1782  0334  120A  118A  2166  120A  118A  	fcall	_lcd_SendCmdSignals
  1783                           
  1784                           ;lcd.c: 920: DELAY_us(200);
  1785  0339  30C8               	movlw	200
  1786  033A  00F0               	movwf	DELAY_us@us_count
  1787  033B  3000               	movlw	0
  1788  033C  00F1               	movwf	DELAY_us@us_count+1
  1789  033D  120A  118A  20BE   	fcall	_DELAY_us
  1790  0340  0008               	return
  1791  0341                     __end_of_lcd_Reset:	
  1792                           
  1793                           	psect	text9
  1794  00C9                     __ptext9:	
  1795 ;; *************** function _LCD_Clear *****************
  1796 ;; Defined at:
  1797 ;;		line 231 in file "../00-libfiles/lcd.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1811 ;;      Params:         0       0       0       0       0
  1812 ;;      Locals:         0       0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0
  1814 ;;      Totals:         0       0       0       0       0
  1815 ;;Total ram usage:        0 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    5
  1818 ;; This function calls:
  1819 ;;		_LCD_CmdWrite
  1820 ;;		_LCD_GoToLine
  1821 ;; This function is called by:
  1822 ;;		_LCD_Init
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           
  1827                           ;psect for function _LCD_Clear
  1828  00C9                     _LCD_Clear:	
  1829                           
  1830                           ;lcd.c: 233: LCD_CmdWrite(0x01u);
  1831                           
  1832                           ;incstack = 0
  1833                           ; Regs used in _LCD_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1834  00C9  3001               	movlw	1
  1835  00CA  120A  118A  21C1  120A  118A  	fcall	_LCD_CmdWrite
  1836                           
  1837                           ;lcd.c: 234: LCD_GoToLine(0x00);
  1838  00CF  3000               	movlw	0
  1839  00D0  120A  118A  20FC   	fcall	_LCD_GoToLine
  1840  00D3  0008               	return
  1841  00D4                     __end_of_LCD_Clear:	
  1842                           
  1843                           	psect	text10
  1844  00FC                     __ptext10:	
  1845 ;; *************** function _LCD_GoToLine *****************
  1846 ;; Defined at:
  1847 ;;		line 259 in file "../00-libfiles/lcd.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  v_lineNumber    1    wreg     unsigned char 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  v_lineNumber    1   11[COMMON] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1861 ;;      Params:         0       0       0       0       0
  1862 ;;      Locals:         1       0       0       0       0
  1863 ;;      Temps:          1       0       0       0       0
  1864 ;;      Totals:         2       0       0       0       0
  1865 ;;Total ram usage:        2 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    4
  1868 ;; This function calls:
  1869 ;;		_LCD_CmdWrite
  1870 ;; This function is called by:
  1871 ;;		_LCD_Clear
  1872 ;;		_main
  1873 ;;		_LCD_ScrollMessage
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           
  1878                           ;psect for function _LCD_GoToLine
  1879  00FC                     _LCD_GoToLine:	
  1880                           
  1881                           ;incstack = 0
  1882                           ; Regs used in _LCD_GoToLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1883                           ;LCD_GoToLine@v_lineNumber_u8 stored from wreg
  1884  00FC  00FB               	movwf	LCD_GoToLine@v_lineNumber_u8
  1885                           
  1886                           ;lcd.c: 261: if(v_lineNumber_u8 < LCDConfig.v_MaxSupportedLines_U8)
  1887  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1888  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1889  00FF  083F               	movf	_LCDConfig,w
  1890  0100  027B               	subwf	LCD_GoToLine@v_lineNumber_u8,w
  1891  0101  1803               	skipnc
  1892  0102  0008               	return
  1893                           
  1894                           ;lcd.c: 262: {
  1895                           ;lcd.c: 265: v_LcdTrackCursorPos_U8 = 0x00;
  1896  0103  01CD               	clrf	_v_LcdTrackCursorPos_U8
  1897                           
  1898                           ;lcd.c: 266: v_LcdTrackLineNum_U8 = v_lineNumber_u8;
  1899  0104  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  1900  0105  00FA               	movwf	??_LCD_GoToLine
  1901  0106  087A               	movf	??_LCD_GoToLine,w
  1902  0107  00CE               	movwf	_v_LcdTrackLineNum_U8
  1903                           
  1904                           ;lcd.c: 267: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_lineNumber_u8]);
  1905  0108  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  1906  0109  3E4F               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  1907  010A  0084               	movwf	4
  1908  010B  1383               	bcf	3,7	;select IRP bank0
  1909  010C  0800               	movf	0,w
  1910  010D  120A  118A  21C1   	fcall	_LCD_CmdWrite
  1911  0110  0008               	return
  1912  0111                     __end_of_LCD_GoToLine:	
  1913                           
  1914                           	psect	text11
  1915  0146                     __ptext11:	
  1916 ;; *************** function _LCD_DisplayString *****************
  1917 ;; Defined at:
  1918 ;;		line 421 in file "../00-libfiles/lcd.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  ptr_stringPo    1    wreg     PTR const unsigned char 
  1921 ;;		 -> STR_1(32), 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  ptr_stringPo    1    0[BANK0 ] PTR const unsigned char 
  1924 ;;		 -> STR_1(32), 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1934 ;;      Params:         0       0       0       0       0
  1935 ;;      Locals:         0       1       0       0       0
  1936 ;;      Temps:          1       0       0       0       0
  1937 ;;      Totals:         1       1       0       0       0
  1938 ;;Total ram usage:        2 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    6
  1941 ;; This function calls:
  1942 ;;		_LCD_DisplayChar
  1943 ;; This function is called by:
  1944 ;;		_main
  1945 ;;		_LCD_Printf
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           
  1950                           ;psect for function _LCD_DisplayString
  1951  0146                     _LCD_DisplayString:	
  1952                           
  1953                           ;incstack = 0
  1954                           ; Regs used in _LCD_DisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1955                           ;LCD_DisplayString@ptr_stringPointer_u8 stored from wreg
  1956  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1957  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1958  0148  00A0               	movwf	LCD_DisplayString@ptr_stringPointer_u8
  1959  0149                     l2046:	
  1960                           ;lcd.c: 423: while((*ptr_stringPointer_u8)!=0)
  1961                           
  1962  0149  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  1963  014A  0084               	movwf	4
  1964  014B  120A  118A  2003  120A  118A  	fcall	stringdir
  1965  0150  3A00               	xorlw	0
  1966  0151  1903               	btfsc	3,2
  1967  0152  0008               	return
  1968                           
  1969                           ;lcd.c: 424: LCD_DisplayChar(*ptr_stringPointer_u8++);
  1970  0153  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  1971  0154  0084               	movwf	4
  1972  0155  120A  118A  2003  120A  118A  	fcall	stringdir
  1973  015A  120A  118A  2127  120A  118A  	fcall	_LCD_DisplayChar
  1974  015F  3001               	movlw	1
  1975  0160  00FD               	movwf	??_LCD_DisplayString
  1976  0161  087D               	movf	??_LCD_DisplayString,w
  1977  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1978  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1979  0164  07A0               	addwf	LCD_DisplayString@ptr_stringPointer_u8,f
  1980  0165  2949               	goto	l2046
  1981  0166                     __end_of_LCD_DisplayString:	
  1982                           
  1983                           	psect	text12
  1984  0127                     __ptext12:	
  1985 ;; *************** function _LCD_DisplayChar *****************
  1986 ;; Defined at:
  1987 ;;		line 386 in file "../00-libfiles/lcd.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;  v_lcdData_u8    1    wreg     unsigned char 
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;  v_lcdData_u8    1   12[COMMON] unsigned char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2001 ;;      Params:         0       0       0       0       0
  2002 ;;      Locals:         1       0       0       0       0
  2003 ;;      Temps:          1       0       0       0       0
  2004 ;;      Totals:         2       0       0       0       0
  2005 ;;Total ram usage:        2 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    5
  2008 ;; This function calls:
  2009 ;;		_LCD_GoToNextLine
  2010 ;;		_lcd_DataWrite
  2011 ;; This function is called by:
  2012 ;;		_LCD_DisplayString
  2013 ;;		_main
  2014 ;;		_LCD_ScrollMessage
  2015 ;;		_LCD_DisplayNumber
  2016 ;;		_LCD_Printf
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           
  2021                           ;psect for function _LCD_DisplayChar
  2022  0127                     _LCD_DisplayChar:	
  2023                           
  2024                           ;incstack = 0
  2025                           ; Regs used in _LCD_DisplayChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2026                           ;LCD_DisplayChar@v_lcdData_u8 stored from wreg
  2027  0127  00FC               	movwf	LCD_DisplayChar@v_lcdData_u8
  2028                           
  2029                           ;lcd.c: 388: if((v_LcdTrackCursorPos_U8>=LCDConfig.v_MaxSupportedChars_U8) || (v_lcdData
      +                          _u8=='\n'))
  2030  0128  1283               	bcf	3,5	;RP0=0, select bank0
  2031  0129  1303               	bcf	3,6	;RP1=0, select bank0
  2032  012A  0840               	movf	_LCDConfig+1,w
  2033  012B  024D               	subwf	_v_LcdTrackCursorPos_U8,w
  2034  012C  1803               	skipnc
  2035  012D  2932               	goto	l1902
  2036  012E  300A               	movlw	10
  2037  012F  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  2038  0130  1D03               	btfss	3,2
  2039  0131  2937               	goto	l1904
  2040  0132                     l1902:	
  2041                           
  2042                           ;lcd.c: 389: {
  2043                           ;lcd.c: 392: LCD_GoToNextLine();
  2044  0132  120A  118A  20E8  120A  118A  	fcall	_LCD_GoToNextLine
  2045  0137                     l1904:	
  2046                           
  2047                           ;lcd.c: 393: }
  2048                           ;lcd.c: 394: if(v_lcdData_u8!='\n')
  2049  0137  300A               	movlw	10
  2050  0138  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  2051  0139  1903               	btfsc	3,2
  2052  013A  0008               	return
  2053                           
  2054                           ;lcd.c: 395: {
  2055                           ;lcd.c: 397: lcd_DataWrite(v_lcdData_u8);
  2056  013B  087C               	movf	LCD_DisplayChar@v_lcdData_u8,w
  2057  013C  120A  118A  21F6   	fcall	_lcd_DataWrite
  2058                           
  2059                           ;lcd.c: 398: v_LcdTrackCursorPos_U8++;
  2060  013F  3001               	movlw	1
  2061  0140  00FB               	movwf	??_LCD_DisplayChar
  2062  0141  087B               	movf	??_LCD_DisplayChar,w
  2063  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2064  0143  1303               	bcf	3,6	;RP1=0, select bank0
  2065  0144  07CD               	addwf	_v_LcdTrackCursorPos_U8,f
  2066  0145  0008               	return
  2067  0146                     __end_of_LCD_DisplayChar:	
  2068                           
  2069                           	psect	text13
  2070  01F6                     __ptext13:	
  2071 ;; *************** function _lcd_DataWrite *****************
  2072 ;; Defined at:
  2073 ;;		line 819 in file "../00-libfiles/lcd.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  dataByte        1    wreg     unsigned char 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  dataByte        1    9[COMMON] unsigned char 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2087 ;;      Params:         0       0       0       0       0
  2088 ;;      Locals:         1       0       0       0       0
  2089 ;;      Temps:          2       0       0       0       0
  2090 ;;      Totals:         3       0       0       0       0
  2091 ;;Total ram usage:        3 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    3
  2094 ;; This function calls:
  2095 ;;		_lcd_BusyCheck
  2096 ;;		_lcd_SendDataSignals
  2097 ;;		_lcd_SendHigherNibble
  2098 ;;		_lcd_SendLowerNibble
  2099 ;; This function is called by:
  2100 ;;		_LCD_DisplayChar
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           
  2105                           ;psect for function _lcd_DataWrite
  2106  01F6                     _lcd_DataWrite:	
  2107                           
  2108                           ;incstack = 0
  2109                           ; Regs used in _lcd_DataWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2110                           ;lcd_DataWrite@dataByte stored from wreg
  2111  01F6  00F9               	movwf	lcd_DataWrite@dataByte
  2112                           
  2113                           ;lcd.c: 821: lcd_BusyCheck();
  2114  01F7  120A  118A  24FE  120A  118A  	fcall	_lcd_BusyCheck
  2115                           
  2116                           ;lcd.c: 822: if(LCDConfig.v_LcdMode_U8 == 8u)
  2117  01FC  3008               	movlw	8
  2118  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  2119  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  2120  01FF  0641               	xorwf	_LCDConfig+2,w
  2121  0200  1D03               	btfss	3,2
  2122  0201  2A09               	goto	l1838
  2123                           
  2124                           ;lcd.c: 823: {
  2125                           ;lcd.c: 824: lcd_SendLowerNibble(dataByte);
  2126  0202  0879               	movf	lcd_DataWrite@dataByte,w
  2127  0203  120A  118A  226B  120A  118A  	fcall	_lcd_SendLowerNibble
  2128                           
  2129                           ;lcd.c: 825: }
  2130  0208  2A21               	goto	l1842
  2131  0209                     l1838:	
  2132                           
  2133                           ;lcd.c: 826: else
  2134                           ;lcd.c: 827: {
  2135                           ;lcd.c: 828: lcd_SendHigherNibble(dataByte);
  2136  0209  0879               	movf	lcd_DataWrite@dataByte,w
  2137  020A  120A  118A  222B  120A  118A  	fcall	_lcd_SendHigherNibble
  2138                           
  2139                           ;lcd.c: 829: lcd_SendDataSignals();
  2140  020F  120A  118A  2193  120A  118A  	fcall	_lcd_SendDataSignals
  2141                           
  2142                           ;lcd.c: 830: dataByte = dataByte << 4;
  2143  0214  0879               	movf	lcd_DataWrite@dataByte,w
  2144  0215  00F7               	movwf	??_lcd_DataWrite
  2145  0216  3003               	movlw	3
  2146  0217                     u2285:	
  2147  0217  1003               	clrc
  2148  0218  0DF7               	rlf	??_lcd_DataWrite,f
  2149  0219  3EFF               	addlw	-1
  2150  021A  1D03               	skipz
  2151  021B  2A17               	goto	u2285
  2152  021C  1003               	clrc
  2153  021D  0D77               	rlf	??_lcd_DataWrite,w
  2154  021E  00F8               	movwf	??_lcd_DataWrite+1
  2155  021F  0878               	movf	??_lcd_DataWrite+1,w
  2156  0220  00F9               	movwf	lcd_DataWrite@dataByte
  2157  0221                     l1842:	
  2158                           
  2159                           ;lcd.c: 831: }
  2160                           ;lcd.c: 833: lcd_SendHigherNibble(dataByte);
  2161  0221  0879               	movf	lcd_DataWrite@dataByte,w
  2162  0222  120A  118A  222B  120A  118A  	fcall	_lcd_SendHigherNibble
  2163                           
  2164                           ;lcd.c: 834: lcd_SendDataSignals();
  2165  0227  120A  118A  2193   	fcall	_lcd_SendDataSignals
  2166  022A  0008               	return
  2167  022B                     __end_of_lcd_DataWrite:	
  2168                           
  2169                           	psect	text14
  2170  0193                     __ptext14:	
  2171 ;; *************** function _lcd_SendDataSignals *****************
  2172 ;; Defined at:
  2173 ;;		line 995 in file "../00-libfiles/lcd.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2187 ;;      Params:         0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0
  2190 ;;      Totals:         0       0       0       0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    1
  2194 ;; This function calls:
  2195 ;;		_DELAY_us
  2196 ;;		_GPIO_PinWrite
  2197 ;; This function is called by:
  2198 ;;		_lcd_DataWrite
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           
  2203                           ;psect for function _lcd_SendDataSignals
  2204  0193                     _lcd_SendDataSignals:	
  2205                           
  2206                           ;lcd.c: 997: GPIO_PinWrite(LCDConfig.RS,1);
  2207                           
  2208                           ;incstack = 0
  2209                           ; Regs used in _lcd_SendDataSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2210  0193  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2211  0194  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  2212  0195  1283               	bcf	3,5	;RP0=0, select bank0
  2213  0196  1303               	bcf	3,6	;RP1=0, select bank0
  2214  0197  0842               	movf	_LCDConfig+3,w
  2215  0198  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2216                           
  2217                           ;lcd.c: 998: GPIO_PinWrite(LCDConfig.RW,0);
  2218  019D  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2219  019E  1283               	bcf	3,5	;RP0=0, select bank0
  2220  019F  1303               	bcf	3,6	;RP1=0, select bank0
  2221  01A0  0843               	movf	_LCDConfig+4,w
  2222  01A1  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2223                           
  2224                           ;lcd.c: 999: GPIO_PinWrite(LCDConfig.EN,1);
  2225  01A6  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2226  01A7  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  2227  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2228  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2229  01AA  0844               	movf	_LCDConfig+5,w
  2230  01AB  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2231                           
  2232                           ;lcd.c: 1000: DELAY_us(10);
  2233  01B0  300A               	movlw	10
  2234  01B1  00F0               	movwf	DELAY_us@us_count
  2235  01B2  3000               	movlw	0
  2236  01B3  00F1               	movwf	DELAY_us@us_count+1
  2237  01B4  120A  118A  20BE  120A  118A  	fcall	_DELAY_us
  2238                           
  2239                           ;lcd.c: 1001: GPIO_PinWrite(LCDConfig.EN,0);
  2240  01B9  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2241  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2242  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2243  01BC  0844               	movf	_LCDConfig+5,w
  2244  01BD  120A  118A  2704   	fcall	_GPIO_PinWrite
  2245  01C0  0008               	return
  2246  01C1                     __end_of_lcd_SendDataSignals:	
  2247                           
  2248                           	psect	text15
  2249  00E8                     __ptext15:	
  2250 ;; *************** function _LCD_GoToNextLine *****************
  2251 ;; Defined at:
  2252 ;;		line 286 in file "../00-libfiles/lcd.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2266 ;;      Params:         0       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0
  2268 ;;      Temps:          1       0       0       0       0
  2269 ;;      Totals:         1       0       0       0       0
  2270 ;;Total ram usage:        1 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    4
  2273 ;; This function calls:
  2274 ;;		_LCD_CmdWrite
  2275 ;; This function is called by:
  2276 ;;		_LCD_DisplayChar
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           
  2281                           ;psect for function _LCD_GoToNextLine
  2282  00E8                     _LCD_GoToNextLine:	
  2283                           
  2284                           ;lcd.c: 290: v_LcdTrackLineNum_U8++;
  2285                           
  2286                           ;incstack = 0
  2287                           ; Regs used in _LCD_GoToNextLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2288  00E8  3001               	movlw	1
  2289  00E9  00FA               	movwf	??_LCD_GoToNextLine
  2290  00EA  087A               	movf	??_LCD_GoToNextLine,w
  2291  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  2292  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  2293  00ED  07CE               	addwf	_v_LcdTrackLineNum_U8,f
  2294                           
  2295                           ;lcd.c: 291: v_LcdTrackCursorPos_U8 = 0x00;
  2296  00EE  01CD               	clrf	_v_LcdTrackCursorPos_U8
  2297                           
  2298                           ;lcd.c: 292: if(v_LcdTrackLineNum_U8 >= LCDConfig.v_MaxSupportedLines_U8)
  2299  00EF  083F               	movf	_LCDConfig,w
  2300  00F0  024E               	subwf	_v_LcdTrackLineNum_U8,w
  2301  00F1  1803               	btfsc	3,0
  2302                           
  2303                           ;lcd.c: 293: v_LcdTrackLineNum_U8 = 0x00;
  2304  00F2  01CE               	clrf	_v_LcdTrackLineNum_U8
  2305                           
  2306                           ;lcd.c: 294: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_LcdTrackLineNum_U8]);
  2307  00F3  084E               	movf	_v_LcdTrackLineNum_U8,w
  2308  00F4  3E4F               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  2309  00F5  0084               	movwf	4
  2310  00F6  1383               	bcf	3,7	;select IRP bank0
  2311  00F7  0800               	movf	0,w
  2312  00F8  120A  118A  21C1   	fcall	_LCD_CmdWrite
  2313  00FB  0008               	return
  2314  00FC                     __end_of_LCD_GoToNextLine:	
  2315                           
  2316                           	psect	text16
  2317  01C1                     __ptext16:	
  2318 ;; *************** function _LCD_CmdWrite *****************
  2319 ;; Defined at:
  2320 ;;		line 352 in file "../00-libfiles/lcd.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  v_lcdCmd_u8     1    wreg     unsigned char 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  v_lcdCmd_u8     1    9[COMMON] unsigned char 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2334 ;;      Params:         0       0       0       0       0
  2335 ;;      Locals:         1       0       0       0       0
  2336 ;;      Temps:          2       0       0       0       0
  2337 ;;      Totals:         3       0       0       0       0
  2338 ;;Total ram usage:        3 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:    3
  2341 ;; This function calls:
  2342 ;;		_lcd_BusyCheck
  2343 ;;		_lcd_SendCmdSignals
  2344 ;;		_lcd_SendHigherNibble
  2345 ;;		_lcd_SendLowerNibble
  2346 ;; This function is called by:
  2347 ;;		_LCD_Init
  2348 ;;		_LCD_Clear
  2349 ;;		_LCD_GoToLine
  2350 ;;		_LCD_GoToNextLine
  2351 ;;		_LCD_ScrollMessage
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           
  2356                           ;psect for function _LCD_CmdWrite
  2357  01C1                     _LCD_CmdWrite:	
  2358                           
  2359                           ;incstack = 0
  2360                           ; Regs used in _LCD_CmdWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2361                           ;LCD_CmdWrite@v_lcdCmd_u8 stored from wreg
  2362  01C1  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  2363                           
  2364                           ;lcd.c: 354: lcd_BusyCheck();
  2365  01C2  120A  118A  24FE  120A  118A  	fcall	_lcd_BusyCheck
  2366                           
  2367                           ;lcd.c: 355: if(LCDConfig.v_LcdMode_U8 == 8u)
  2368  01C7  3008               	movlw	8
  2369  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  2370  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  2371  01CA  0641               	xorwf	_LCDConfig+2,w
  2372  01CB  1D03               	btfss	3,2
  2373  01CC  29D4               	goto	l1800
  2374                           
  2375                           ;lcd.c: 356: {
  2376                           ;lcd.c: 357: lcd_SendLowerNibble(v_lcdCmd_u8);
  2377  01CD  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  2378  01CE  120A  118A  226B  120A  118A  	fcall	_lcd_SendLowerNibble
  2379                           
  2380                           ;lcd.c: 358: }
  2381  01D3  29EC               	goto	l1804
  2382  01D4                     l1800:	
  2383                           
  2384                           ;lcd.c: 359: else
  2385                           ;lcd.c: 360: {
  2386                           ;lcd.c: 361: lcd_SendHigherNibble(v_lcdCmd_u8);
  2387  01D4  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  2388  01D5  120A  118A  222B  120A  118A  	fcall	_lcd_SendHigherNibble
  2389                           
  2390                           ;lcd.c: 362: lcd_SendCmdSignals();
  2391  01DA  120A  118A  2166  120A  118A  	fcall	_lcd_SendCmdSignals
  2392                           
  2393                           ;lcd.c: 363: v_lcdCmd_u8 = v_lcdCmd_u8 << 4;
  2394  01DF  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  2395  01E0  00F7               	movwf	??_LCD_CmdWrite
  2396  01E1  3003               	movlw	3
  2397  01E2                     u2245:	
  2398  01E2  1003               	clrc
  2399  01E3  0DF7               	rlf	??_LCD_CmdWrite,f
  2400  01E4  3EFF               	addlw	-1
  2401  01E5  1D03               	skipz
  2402  01E6  29E2               	goto	u2245
  2403  01E7  1003               	clrc
  2404  01E8  0D77               	rlf	??_LCD_CmdWrite,w
  2405  01E9  00F8               	movwf	??_LCD_CmdWrite+1
  2406  01EA  0878               	movf	??_LCD_CmdWrite+1,w
  2407  01EB  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  2408  01EC                     l1804:	
  2409                           
  2410                           ;lcd.c: 364: }
  2411                           ;lcd.c: 366: lcd_SendHigherNibble(v_lcdCmd_u8);
  2412  01EC  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  2413  01ED  120A  118A  222B  120A  118A  	fcall	_lcd_SendHigherNibble
  2414                           
  2415                           ;lcd.c: 367: lcd_SendCmdSignals();
  2416  01F2  120A  118A  2166   	fcall	_lcd_SendCmdSignals
  2417  01F5  0008               	return
  2418  01F6                     __end_of_LCD_CmdWrite:	
  2419                           
  2420                           	psect	text17
  2421  026B                     __ptext17:	
  2422 ;; *************** function _lcd_SendLowerNibble *****************
  2423 ;; Defined at:
  2424 ;;		line 955 in file "../00-libfiles/lcd.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  dataByte        1    wreg     unsigned char 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  dataByte        1    6[COMMON] unsigned char 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2438 ;;      Params:         0       0       0       0       0
  2439 ;;      Locals:         1       0       0       0       0
  2440 ;;      Temps:          1       0       0       0       0
  2441 ;;      Totals:         2       0       0       0       0
  2442 ;;Total ram usage:        2 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; Hardware stack levels required when called:    1
  2445 ;; This function calls:
  2446 ;;		_GPIO_PinWrite
  2447 ;; This function is called by:
  2448 ;;		_LCD_CmdWrite
  2449 ;;		_lcd_DataWrite
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           
  2454                           ;psect for function _lcd_SendLowerNibble
  2455  026B                     _lcd_SendLowerNibble:	
  2456                           
  2457                           ;incstack = 0
  2458                           ; Regs used in _lcd_SendLowerNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2459                           ;lcd_SendLowerNibble@dataByte stored from wreg
  2460  026B  00F6               	movwf	lcd_SendLowerNibble@dataByte
  2461                           
  2462                           ;lcd.c: 957: GPIO_PinWrite(LCDConfig.D0,(((dataByte)&((1<<(0))))!=0u));
  2463  026C  1C76               	btfss	lcd_SendLowerNibble@dataByte,0
  2464  026D  2A70               	goto	u2070
  2465  026E  3001               	movlw	1
  2466  026F  2A71               	goto	u2080
  2467  0270                     u2070:	
  2468  0270  3000               	movlw	0
  2469  0271                     u2080:	
  2470  0271  00F5               	movwf	??_lcd_SendLowerNibble
  2471  0272  0875               	movf	??_lcd_SendLowerNibble,w
  2472  0273  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  2473  0274  1283               	bcf	3,5	;RP0=0, select bank0
  2474  0275  1303               	bcf	3,6	;RP1=0, select bank0
  2475  0276  0845               	movf	_LCDConfig+6,w
  2476  0277  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2477                           
  2478                           ;lcd.c: 958: GPIO_PinWrite(LCDConfig.D1,(((dataByte)&((1<<(1))))!=0u));
  2479  027C  1CF6               	btfss	lcd_SendLowerNibble@dataByte,1
  2480  027D  2A80               	goto	u2090
  2481  027E  3001               	movlw	1
  2482  027F  2A81               	goto	u2100
  2483  0280                     u2090:	
  2484  0280  3000               	movlw	0
  2485  0281                     u2100:	
  2486  0281  00F5               	movwf	??_lcd_SendLowerNibble
  2487  0282  0875               	movf	??_lcd_SendLowerNibble,w
  2488  0283  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  2489  0284  1283               	bcf	3,5	;RP0=0, select bank0
  2490  0285  1303               	bcf	3,6	;RP1=0, select bank0
  2491  0286  0846               	movf	_LCDConfig+7,w
  2492  0287  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2493                           
  2494                           ;lcd.c: 959: GPIO_PinWrite(LCDConfig.D2,(((dataByte)&((1<<(2))))!=0u));
  2495  028C  1D76               	btfss	lcd_SendLowerNibble@dataByte,2
  2496  028D  2A90               	goto	u2110
  2497  028E  3001               	movlw	1
  2498  028F  2A91               	goto	u2120
  2499  0290                     u2110:	
  2500  0290  3000               	movlw	0
  2501  0291                     u2120:	
  2502  0291  00F5               	movwf	??_lcd_SendLowerNibble
  2503  0292  0875               	movf	??_lcd_SendLowerNibble,w
  2504  0293  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  2505  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2506  0295  1303               	bcf	3,6	;RP1=0, select bank0
  2507  0296  0847               	movf	_LCDConfig+8,w
  2508  0297  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2509                           
  2510                           ;lcd.c: 960: GPIO_PinWrite(LCDConfig.D3,(((dataByte)&((1<<(3))))!=0u));
  2511  029C  1DF6               	btfss	lcd_SendLowerNibble@dataByte,3
  2512  029D  2AA0               	goto	u2130
  2513  029E  3001               	movlw	1
  2514  029F  2AA1               	goto	u2140
  2515  02A0                     u2130:	
  2516  02A0  3000               	movlw	0
  2517  02A1                     u2140:	
  2518  02A1  00F5               	movwf	??_lcd_SendLowerNibble
  2519  02A2  0875               	movf	??_lcd_SendLowerNibble,w
  2520  02A3  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  2521  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  2522  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  2523  02A6  0848               	movf	_LCDConfig+9,w
  2524  02A7  120A  118A  2704   	fcall	_GPIO_PinWrite
  2525  02AA  0008               	return
  2526  02AB                     __end_of_lcd_SendLowerNibble:	
  2527                           
  2528                           	psect	text18
  2529  022B                     __ptext18:	
  2530 ;; *************** function _lcd_SendHigherNibble *****************
  2531 ;; Defined at:
  2532 ;;		line 936 in file "../00-libfiles/lcd.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  dataByte        1    wreg     unsigned char 
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  dataByte        1    6[COMMON] unsigned char 
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2546 ;;      Params:         0       0       0       0       0
  2547 ;;      Locals:         1       0       0       0       0
  2548 ;;      Temps:          1       0       0       0       0
  2549 ;;      Totals:         2       0       0       0       0
  2550 ;;Total ram usage:        2 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    1
  2553 ;; This function calls:
  2554 ;;		_GPIO_PinWrite
  2555 ;; This function is called by:
  2556 ;;		_LCD_CmdWrite
  2557 ;;		_lcd_DataWrite
  2558 ;;		_lcd_Reset
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           
  2563                           ;psect for function _lcd_SendHigherNibble
  2564  022B                     _lcd_SendHigherNibble:	
  2565                           
  2566                           ;incstack = 0
  2567                           ; Regs used in _lcd_SendHigherNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2568                           ;lcd_SendHigherNibble@dataByte stored from wreg
  2569  022B  00F6               	movwf	lcd_SendHigherNibble@dataByte
  2570                           
  2571                           ;lcd.c: 938: GPIO_PinWrite(LCDConfig.D4,(((dataByte)&((1<<(4))))!=0u));
  2572  022C  1E76               	btfss	lcd_SendHigherNibble@dataByte,4
  2573  022D  2A30               	goto	u2150
  2574  022E  3001               	movlw	1
  2575  022F  2A31               	goto	u2160
  2576  0230                     u2150:	
  2577  0230  3000               	movlw	0
  2578  0231                     u2160:	
  2579  0231  00F5               	movwf	??_lcd_SendHigherNibble
  2580  0232  0875               	movf	??_lcd_SendHigherNibble,w
  2581  0233  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  2582  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2583  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2584  0236  0849               	movf	_LCDConfig+10,w
  2585  0237  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2586                           
  2587                           ;lcd.c: 939: GPIO_PinWrite(LCDConfig.D5,(((dataByte)&((1<<(5))))!=0u));
  2588  023C  1EF6               	btfss	lcd_SendHigherNibble@dataByte,5
  2589  023D  2A40               	goto	u2170
  2590  023E  3001               	movlw	1
  2591  023F  2A41               	goto	u2180
  2592  0240                     u2170:	
  2593  0240  3000               	movlw	0
  2594  0241                     u2180:	
  2595  0241  00F5               	movwf	??_lcd_SendHigherNibble
  2596  0242  0875               	movf	??_lcd_SendHigherNibble,w
  2597  0243  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  2598  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0245  1303               	bcf	3,6	;RP1=0, select bank0
  2600  0246  084A               	movf	_LCDConfig+11,w
  2601  0247  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2602                           
  2603                           ;lcd.c: 940: GPIO_PinWrite(LCDConfig.D6,(((dataByte)&((1<<(6))))!=0u));
  2604  024C  1F76               	btfss	lcd_SendHigherNibble@dataByte,6
  2605  024D  2A50               	goto	u2190
  2606  024E  3001               	movlw	1
  2607  024F  2A51               	goto	u2200
  2608  0250                     u2190:	
  2609  0250  3000               	movlw	0
  2610  0251                     u2200:	
  2611  0251  00F5               	movwf	??_lcd_SendHigherNibble
  2612  0252  0875               	movf	??_lcd_SendHigherNibble,w
  2613  0253  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  2614  0254  1283               	bcf	3,5	;RP0=0, select bank0
  2615  0255  1303               	bcf	3,6	;RP1=0, select bank0
  2616  0256  084B               	movf	_LCDConfig+12,w
  2617  0257  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2618                           
  2619                           ;lcd.c: 941: GPIO_PinWrite(LCDConfig.D7,(((dataByte)&((1<<(7))))!=0u));
  2620  025C  1FF6               	btfss	lcd_SendHigherNibble@dataByte,7
  2621  025D  2A60               	goto	u2210
  2622  025E  3001               	movlw	1
  2623  025F  2A61               	goto	u2220
  2624  0260                     u2210:	
  2625  0260  3000               	movlw	0
  2626  0261                     u2220:	
  2627  0261  00F5               	movwf	??_lcd_SendHigherNibble
  2628  0262  0875               	movf	??_lcd_SendHigherNibble,w
  2629  0263  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  2630  0264  1283               	bcf	3,5	;RP0=0, select bank0
  2631  0265  1303               	bcf	3,6	;RP1=0, select bank0
  2632  0266  084C               	movf	_LCDConfig+13,w
  2633  0267  120A  118A  2704   	fcall	_GPIO_PinWrite
  2634  026A  0008               	return
  2635  026B                     __end_of_lcd_SendHigherNibble:	
  2636                           
  2637                           	psect	text19
  2638  0166                     __ptext19:	
  2639 ;; *************** function _lcd_SendCmdSignals *****************
  2640 ;; Defined at:
  2641 ;;		line 974 in file "../00-libfiles/lcd.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;		None
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;		None
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      void 
  2648 ;; Registers used:
  2649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2655 ;;      Params:         0       0       0       0       0
  2656 ;;      Locals:         0       0       0       0       0
  2657 ;;      Temps:          0       0       0       0       0
  2658 ;;      Totals:         0       0       0       0       0
  2659 ;;Total ram usage:        0 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; Hardware stack levels required when called:    1
  2662 ;; This function calls:
  2663 ;;		_DELAY_us
  2664 ;;		_GPIO_PinWrite
  2665 ;; This function is called by:
  2666 ;;		_LCD_CmdWrite
  2667 ;;		_lcd_Reset
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function _lcd_SendCmdSignals
  2673  0166                     _lcd_SendCmdSignals:	
  2674                           
  2675                           ;lcd.c: 976: GPIO_PinWrite(LCDConfig.RS,0);
  2676                           
  2677                           ;incstack = 0
  2678                           ; Regs used in _lcd_SendCmdSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2679  0166  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2680  0167  1283               	bcf	3,5	;RP0=0, select bank0
  2681  0168  1303               	bcf	3,6	;RP1=0, select bank0
  2682  0169  0842               	movf	_LCDConfig+3,w
  2683  016A  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2684                           
  2685                           ;lcd.c: 977: GPIO_PinWrite(LCDConfig.RW,0);
  2686  016F  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2687  0170  1283               	bcf	3,5	;RP0=0, select bank0
  2688  0171  1303               	bcf	3,6	;RP1=0, select bank0
  2689  0172  0843               	movf	_LCDConfig+4,w
  2690  0173  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2691                           
  2692                           ;lcd.c: 978: GPIO_PinWrite(LCDConfig.EN,1);
  2693  0178  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2694  0179  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  2695  017A  1283               	bcf	3,5	;RP0=0, select bank0
  2696  017B  1303               	bcf	3,6	;RP1=0, select bank0
  2697  017C  0844               	movf	_LCDConfig+5,w
  2698  017D  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2699                           
  2700                           ;lcd.c: 979: DELAY_us(10);
  2701  0182  300A               	movlw	10
  2702  0183  00F0               	movwf	DELAY_us@us_count
  2703  0184  3000               	movlw	0
  2704  0185  00F1               	movwf	DELAY_us@us_count+1
  2705  0186  120A  118A  20BE  120A  118A  	fcall	_DELAY_us
  2706                           
  2707                           ;lcd.c: 980: GPIO_PinWrite(LCDConfig.EN,0);
  2708  018B  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2709  018C  1283               	bcf	3,5	;RP0=0, select bank0
  2710  018D  1303               	bcf	3,6	;RP1=0, select bank0
  2711  018E  0844               	movf	_LCDConfig+5,w
  2712  018F  120A  118A  2704   	fcall	_GPIO_PinWrite
  2713  0192  0008               	return
  2714  0193                     __end_of_lcd_SendCmdSignals:	
  2715                           
  2716                           	psect	text20
  2717  04FE                     __ptext20:	
  2718 ;; *************** function _lcd_BusyCheck *****************
  2719 ;; Defined at:
  2720 ;;		line 853 in file "../00-libfiles/lcd.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;		None
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  busyflag        1    6[COMMON] unsigned char 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2734 ;;      Params:         0       0       0       0       0
  2735 ;;      Locals:         1       0       0       0       0
  2736 ;;      Temps:          1       0       0       0       0
  2737 ;;      Totals:         2       0       0       0       0
  2738 ;;Total ram usage:        2 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:    2
  2741 ;; This function calls:
  2742 ;;		_DELAY_ms
  2743 ;;		_DELAY_us
  2744 ;;		_GPIO_PinDirection
  2745 ;;		_GPIO_PinRead
  2746 ;;		_GPIO_PinWrite
  2747 ;; This function is called by:
  2748 ;;		_LCD_CmdWrite
  2749 ;;		_lcd_DataWrite
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           
  2754                           ;psect for function _lcd_BusyCheck
  2755  04FE                     _lcd_BusyCheck:	
  2756                           
  2757                           ;lcd.c: 855: uint8_t busyflag;
  2758                           ;lcd.c: 857: if(LCDConfig.RW == P_NC)
  2759                           
  2760                           ;incstack = 0
  2761                           ; Regs used in _lcd_BusyCheck: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2762  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2763  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  2764  0500  0A43               	incf	_LCDConfig+4,w
  2765  0501  1D03               	btfss	3,2
  2766  0502  2D82               	goto	l1782
  2767                           
  2768                           ;lcd.c: 858: {
  2769                           ;lcd.c: 859: GPIO_PinDirection(LCDConfig.D7,0x01u);
  2770  0503  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2771  0504  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  2772  0505  084C               	movf	_LCDConfig+13,w
  2773  0506  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
  2774                           
  2775                           ;lcd.c: 860: GPIO_PinWrite(LCDConfig.RS,0);
  2776  050B  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2777  050C  1283               	bcf	3,5	;RP0=0, select bank0
  2778  050D  1303               	bcf	3,6	;RP1=0, select bank0
  2779  050E  0842               	movf	_LCDConfig+3,w
  2780  050F  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2781                           
  2782                           ;lcd.c: 861: GPIO_PinWrite(LCDConfig.RW,1);
  2783  0514  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2784  0515  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  2785  0516  1283               	bcf	3,5	;RP0=0, select bank0
  2786  0517  1303               	bcf	3,6	;RP1=0, select bank0
  2787  0518  0843               	movf	_LCDConfig+4,w
  2788  0519  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2789  051E                     l291:	
  2790                           ;lcd.c: 862: do
  2791                           
  2792                           
  2793                           ;lcd.c: 863: {
  2794                           ;lcd.c: 865: GPIO_PinWrite(LCDConfig.EN,0);
  2795  051E  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2796  051F  1283               	bcf	3,5	;RP0=0, select bank0
  2797  0520  1303               	bcf	3,6	;RP1=0, select bank0
  2798  0521  0844               	movf	_LCDConfig+5,w
  2799  0522  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2800                           
  2801                           ;lcd.c: 866: DELAY_us(10);
  2802  0527  300A               	movlw	10
  2803  0528  00F0               	movwf	DELAY_us@us_count
  2804  0529  3000               	movlw	0
  2805  052A  00F1               	movwf	DELAY_us@us_count+1
  2806  052B  120A  118A  20BE  120A  118A  	fcall	_DELAY_us
  2807                           
  2808                           ;lcd.c: 867: GPIO_PinWrite(LCDConfig.EN,1);
  2809  0530  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2810  0531  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  2811  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2812  0533  1303               	bcf	3,6	;RP1=0, select bank0
  2813  0534  0844               	movf	_LCDConfig+5,w
  2814  0535  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2815                           
  2816                           ;lcd.c: 868: DELAY_us(10);
  2817  053A  300A               	movlw	10
  2818  053B  00F0               	movwf	DELAY_us@us_count
  2819  053C  3000               	movlw	0
  2820  053D  00F1               	movwf	DELAY_us@us_count+1
  2821  053E  120A  118A  20BE  120A  118A  	fcall	_DELAY_us
  2822                           
  2823                           ;lcd.c: 869: busyflag = GPIO_PinRead(LCDConfig.D7);
  2824  0543  1283               	bcf	3,5	;RP0=0, select bank0
  2825  0544  1303               	bcf	3,6	;RP1=0, select bank0
  2826  0545  084C               	movf	_LCDConfig+13,w
  2827  0546  120A  118A  240F  120A  118A  	fcall	_GPIO_PinRead
  2828  054B  00F5               	movwf	??_lcd_BusyCheck
  2829  054C  0875               	movf	??_lcd_BusyCheck,w
  2830  054D  00F6               	movwf	lcd_BusyCheck@busyflag
  2831                           
  2832                           ;lcd.c: 872: if(LCDConfig.v_LcdMode_U8 == 4)
  2833  054E  3004               	movlw	4
  2834  054F  1283               	bcf	3,5	;RP0=0, select bank0
  2835  0550  1303               	bcf	3,6	;RP1=0, select bank0
  2836  0551  0641               	xorwf	_LCDConfig+2,w
  2837  0552  1D03               	btfss	3,2
  2838  0553  2D77               	goto	l1778
  2839                           
  2840                           ;lcd.c: 873: {
  2841                           ;lcd.c: 875: GPIO_PinWrite(LCDConfig.EN,0);
  2842  0554  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2843  0555  0844               	movf	_LCDConfig+5,w
  2844  0556  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2845                           
  2846                           ;lcd.c: 876: DELAY_us(10);
  2847  055B  300A               	movlw	10
  2848  055C  00F0               	movwf	DELAY_us@us_count
  2849  055D  3000               	movlw	0
  2850  055E  00F1               	movwf	DELAY_us@us_count+1
  2851  055F  120A  118A  20BE  120A  118A  	fcall	_DELAY_us
  2852                           
  2853                           ;lcd.c: 877: GPIO_PinWrite(LCDConfig.EN,1);
  2854  0564  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2855  0565  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  2856  0566  1283               	bcf	3,5	;RP0=0, select bank0
  2857  0567  1303               	bcf	3,6	;RP1=0, select bank0
  2858  0568  0844               	movf	_LCDConfig+5,w
  2859  0569  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2860                           
  2861                           ;lcd.c: 878: DELAY_us(10);
  2862  056E  300A               	movlw	10
  2863  056F  00F0               	movwf	DELAY_us@us_count
  2864  0570  3000               	movlw	0
  2865  0571  00F1               	movwf	DELAY_us@us_count+1
  2866  0572  120A  118A  20BE  120A  118A  	fcall	_DELAY_us
  2867  0577                     l1778:	
  2868                           
  2869                           ;lcd.c: 879: }
  2870                           ;lcd.c: 880: }while(busyflag!=0);
  2871  0577  0876               	movf	lcd_BusyCheck@busyflag,w
  2872  0578  1D03               	btfss	3,2
  2873  0579  2D1E               	goto	l291
  2874                           
  2875                           ;lcd.c: 882: GPIO_PinDirection(LCDConfig.D7,0x00u);
  2876  057A  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2877  057B  1283               	bcf	3,5	;RP0=0, select bank0
  2878  057C  1303               	bcf	3,6	;RP1=0, select bank0
  2879  057D  084C               	movf	_LCDConfig+13,w
  2880  057E  120A  118A  262B   	fcall	_GPIO_PinDirection
  2881                           
  2882                           ;lcd.c: 883: }
  2883  0581  0008               	return
  2884  0582                     l1782:	
  2885                           
  2886                           ;lcd.c: 884: else
  2887                           ;lcd.c: 885: {
  2888                           ;lcd.c: 888: DELAY_ms(1);
  2889  0582  3001               	movlw	1
  2890  0583  00F2               	movwf	DELAY_ms@ms_count
  2891  0584  3000               	movlw	0
  2892  0585  00F3               	movwf	DELAY_ms@ms_count+1
  2893  0586  120A  118A  20D4   	fcall	_DELAY_ms
  2894  0589  0008               	return
  2895  058A                     __end_of_lcd_BusyCheck:	
  2896                           
  2897                           	psect	text21
  2898  0704                     __ptext21:	
  2899 ;; *************** function _GPIO_PinWrite *****************
  2900 ;; Defined at:
  2901 ;;		line 127 in file "../00-libfiles/gpio.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  enm_pinNumbe    1    wreg     enum E1088
  2904 ;;  var_pinValue    1    0[COMMON] unsigned char 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  2907 ;;  var_portNumb    1    3[COMMON] unsigned char 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      void 
  2910 ;; Registers used:
  2911 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2917 ;;      Params:         1       0       0       0       0
  2918 ;;      Locals:         2       0       0       0       0
  2919 ;;      Temps:          2       0       0       0       0
  2920 ;;      Totals:         5       0       0       0       0
  2921 ;;Total ram usage:        5 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_lcd_BusyCheck
  2927 ;;		_lcd_SendHigherNibble
  2928 ;;		_lcd_SendLowerNibble
  2929 ;;		_lcd_SendCmdSignals
  2930 ;;		_lcd_SendDataSignals
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           
  2935                           ;psect for function _GPIO_PinWrite
  2936  0704                     _GPIO_PinWrite:	
  2937                           
  2938                           ;incstack = 0
  2939                           ; Regs used in _GPIO_PinWrite: [wreg-fsr0h+status,2+status,0]
  2940                           ;GPIO_PinWrite@enm_pinNumber stored from wreg
  2941  0704  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  2942                           
  2943                           ;gpio.c: 130: uint8_t var_portNumber_u8;
  2944                           ;gpio.c: 133: var_portNumber_u8 = (enm_pinNumber>>3);
  2945  0705  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  2946  0706  00F1               	movwf	??_GPIO_PinWrite
  2947  0707  3003               	movlw	3
  2948  0708                     u1725:	
  2949  0708  1003               	clrc
  2950  0709  0CF1               	rrf	??_GPIO_PinWrite,f
  2951  070A  3EFF               	addlw	-1
  2952  070B  1D03               	skipz
  2953  070C  2F08               	goto	u1725
  2954  070D  0871               	movf	??_GPIO_PinWrite,w
  2955  070E  00F2               	movwf	??_GPIO_PinWrite+1
  2956  070F  0872               	movf	??_GPIO_PinWrite+1,w
  2957  0710  00F3               	movwf	GPIO_PinWrite@var_portNumber_u8
  2958                           
  2959                           ;gpio.c: 134: enm_pinNumber = enm_pinNumber & 0x07;
  2960  0711  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  2961  0712  3907               	andlw	7
  2962  0713  00F1               	movwf	??_GPIO_PinWrite
  2963  0714  0871               	movf	??_GPIO_PinWrite,w
  2964  0715  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  2965                           
  2966                           ;gpio.c: 138: switch(var_portNumber_u8)
  2967  0716  2FCB               	goto	l1734
  2968  0717                     l1702:	
  2969                           ;gpio.c: 139: {
  2970                           ;gpio.c: 141: case 0:
  2971                           
  2972                           
  2973                           ;gpio.c: 142: ((var_pinValue_u8)? ((PORTA) |= (1<<(enm_pinNumber))): ((PORTA) &= ~(1<<(e
      +                          nm_pinNumber))));
  2974  0717  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  2975  0718  1903               	btfsc	3,2
  2976  0719  2F2A               	goto	l1706
  2977  071A  3001               	movlw	1
  2978  071B  00F1               	movwf	??_GPIO_PinWrite
  2979  071C  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2980  071D  2F20               	goto	u1744
  2981  071E                     u1745:	
  2982  071E  1003               	clrc
  2983  071F  0DF1               	rlf	??_GPIO_PinWrite,f
  2984  0720                     u1744:	
  2985  0720  3EFF               	addlw	-1
  2986  0721  1D03               	skipz
  2987  0722  2F1E               	goto	u1745
  2988  0723  0871               	movf	??_GPIO_PinWrite,w
  2989  0724  00F2               	movwf	??_GPIO_PinWrite+1
  2990  0725  0872               	movf	??_GPIO_PinWrite+1,w
  2991  0726  1283               	bcf	3,5	;RP0=0, select bank0
  2992  0727  1303               	bcf	3,6	;RP1=0, select bank0
  2993  0728  0485               	iorwf	5,f	;volatile
  2994  0729  0008               	return
  2995  072A                     l1706:	
  2996  072A  3001               	movlw	1
  2997  072B  00F1               	movwf	??_GPIO_PinWrite
  2998  072C  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2999  072D  2F30               	goto	u1754
  3000  072E                     u1755:	
  3001  072E  1003               	clrc
  3002  072F  0DF1               	rlf	??_GPIO_PinWrite,f
  3003  0730                     u1754:	
  3004  0730  3EFF               	addlw	-1
  3005  0731  1D03               	skipz
  3006  0732  2F2E               	goto	u1755
  3007  0733  0871               	movf	??_GPIO_PinWrite,w
  3008  0734  3AFF               	xorlw	255
  3009  0735  00F2               	movwf	??_GPIO_PinWrite+1
  3010  0736  0872               	movf	??_GPIO_PinWrite+1,w
  3011  0737  1283               	bcf	3,5	;RP0=0, select bank0
  3012  0738  1303               	bcf	3,6	;RP1=0, select bank0
  3013  0739  0585               	andwf	5,f	;volatile
  3014                           
  3015                           ;gpio.c: 143: break;
  3016  073A  0008               	return
  3017  073B                     l1708:	
  3018                           ;gpio.c: 147: case 1:
  3019                           
  3020                           
  3021                           ;gpio.c: 148: ((var_pinValue_u8)? ((PORTB) |= (1<<(enm_pinNumber))): ((PORTB) &= ~(1<<(e
      +                          nm_pinNumber))));
  3022  073B  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3023  073C  1903               	btfsc	3,2
  3024  073D  2F4E               	goto	l1712
  3025  073E  3001               	movlw	1
  3026  073F  00F1               	movwf	??_GPIO_PinWrite
  3027  0740  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  3028  0741  2F44               	goto	u1774
  3029  0742                     u1775:	
  3030  0742  1003               	clrc
  3031  0743  0DF1               	rlf	??_GPIO_PinWrite,f
  3032  0744                     u1774:	
  3033  0744  3EFF               	addlw	-1
  3034  0745  1D03               	skipz
  3035  0746  2F42               	goto	u1775
  3036  0747  0871               	movf	??_GPIO_PinWrite,w
  3037  0748  00F2               	movwf	??_GPIO_PinWrite+1
  3038  0749  0872               	movf	??_GPIO_PinWrite+1,w
  3039  074A  1283               	bcf	3,5	;RP0=0, select bank0
  3040  074B  1303               	bcf	3,6	;RP1=0, select bank0
  3041  074C  0486               	iorwf	6,f	;volatile
  3042  074D  0008               	return
  3043  074E                     l1712:	
  3044  074E  3001               	movlw	1
  3045  074F  00F1               	movwf	??_GPIO_PinWrite
  3046  0750  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  3047  0751  2F54               	goto	u1784
  3048  0752                     u1785:	
  3049  0752  1003               	clrc
  3050  0753  0DF1               	rlf	??_GPIO_PinWrite,f
  3051  0754                     u1784:	
  3052  0754  3EFF               	addlw	-1
  3053  0755  1D03               	skipz
  3054  0756  2F52               	goto	u1785
  3055  0757  0871               	movf	??_GPIO_PinWrite,w
  3056  0758  3AFF               	xorlw	255
  3057  0759  00F2               	movwf	??_GPIO_PinWrite+1
  3058  075A  0872               	movf	??_GPIO_PinWrite+1,w
  3059  075B  1283               	bcf	3,5	;RP0=0, select bank0
  3060  075C  1303               	bcf	3,6	;RP1=0, select bank0
  3061  075D  0586               	andwf	6,f	;volatile
  3062                           
  3063                           ;gpio.c: 149: break;
  3064  075E  0008               	return
  3065  075F                     l1714:	
  3066                           ;gpio.c: 153: case 2:
  3067                           
  3068                           
  3069                           ;gpio.c: 154: ((var_pinValue_u8)? ((PORTC) |= (1<<(enm_pinNumber))): ((PORTC) &= ~(1<<(e
      +                          nm_pinNumber))));
  3070  075F  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3071  0760  1903               	btfsc	3,2
  3072  0761  2F72               	goto	l1718
  3073  0762  3001               	movlw	1
  3074  0763  00F1               	movwf	??_GPIO_PinWrite
  3075  0764  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  3076  0765  2F68               	goto	u1804
  3077  0766                     u1805:	
  3078  0766  1003               	clrc
  3079  0767  0DF1               	rlf	??_GPIO_PinWrite,f
  3080  0768                     u1804:	
  3081  0768  3EFF               	addlw	-1
  3082  0769  1D03               	skipz
  3083  076A  2F66               	goto	u1805
  3084  076B  0871               	movf	??_GPIO_PinWrite,w
  3085  076C  00F2               	movwf	??_GPIO_PinWrite+1
  3086  076D  0872               	movf	??_GPIO_PinWrite+1,w
  3087  076E  1283               	bcf	3,5	;RP0=0, select bank0
  3088  076F  1303               	bcf	3,6	;RP1=0, select bank0
  3089  0770  0487               	iorwf	7,f	;volatile
  3090  0771  0008               	return
  3091  0772                     l1718:	
  3092  0772  3001               	movlw	1
  3093  0773  00F1               	movwf	??_GPIO_PinWrite
  3094  0774  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  3095  0775  2F78               	goto	u1814
  3096  0776                     u1815:	
  3097  0776  1003               	clrc
  3098  0777  0DF1               	rlf	??_GPIO_PinWrite,f
  3099  0778                     u1814:	
  3100  0778  3EFF               	addlw	-1
  3101  0779  1D03               	skipz
  3102  077A  2F76               	goto	u1815
  3103  077B  0871               	movf	??_GPIO_PinWrite,w
  3104  077C  3AFF               	xorlw	255
  3105  077D  00F2               	movwf	??_GPIO_PinWrite+1
  3106  077E  0872               	movf	??_GPIO_PinWrite+1,w
  3107  077F  1283               	bcf	3,5	;RP0=0, select bank0
  3108  0780  1303               	bcf	3,6	;RP1=0, select bank0
  3109  0781  0587               	andwf	7,f	;volatile
  3110                           
  3111                           ;gpio.c: 155: break;
  3112  0782  0008               	return
  3113  0783                     l1720:	
  3114                           ;gpio.c: 159: case 3:
  3115                           
  3116                           
  3117                           ;gpio.c: 160: ((var_pinValue_u8)? ((PORTD) |= (1<<(enm_pinNumber))): ((PORTD) &= ~(1<<(e
      +                          nm_pinNumber))));
  3118  0783  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3119  0784  1903               	btfsc	3,2
  3120  0785  2F96               	goto	l1724
  3121  0786  3001               	movlw	1
  3122  0787  00F1               	movwf	??_GPIO_PinWrite
  3123  0788  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  3124  0789  2F8C               	goto	u1834
  3125  078A                     u1835:	
  3126  078A  1003               	clrc
  3127  078B  0DF1               	rlf	??_GPIO_PinWrite,f
  3128  078C                     u1834:	
  3129  078C  3EFF               	addlw	-1
  3130  078D  1D03               	skipz
  3131  078E  2F8A               	goto	u1835
  3132  078F  0871               	movf	??_GPIO_PinWrite,w
  3133  0790  00F2               	movwf	??_GPIO_PinWrite+1
  3134  0791  0872               	movf	??_GPIO_PinWrite+1,w
  3135  0792  1283               	bcf	3,5	;RP0=0, select bank0
  3136  0793  1303               	bcf	3,6	;RP1=0, select bank0
  3137  0794  0488               	iorwf	8,f	;volatile
  3138  0795  0008               	return
  3139  0796                     l1724:	
  3140  0796  3001               	movlw	1
  3141  0797  00F1               	movwf	??_GPIO_PinWrite
  3142  0798  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  3143  0799  2F9C               	goto	u1844
  3144  079A                     u1845:	
  3145  079A  1003               	clrc
  3146  079B  0DF1               	rlf	??_GPIO_PinWrite,f
  3147  079C                     u1844:	
  3148  079C  3EFF               	addlw	-1
  3149  079D  1D03               	skipz
  3150  079E  2F9A               	goto	u1845
  3151  079F  0871               	movf	??_GPIO_PinWrite,w
  3152  07A0  3AFF               	xorlw	255
  3153  07A1  00F2               	movwf	??_GPIO_PinWrite+1
  3154  07A2  0872               	movf	??_GPIO_PinWrite+1,w
  3155  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  3156  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  3157  07A5  0588               	andwf	8,f	;volatile
  3158                           
  3159                           ;gpio.c: 161: break;
  3160  07A6  0008               	return
  3161  07A7                     l1726:	
  3162                           ;gpio.c: 165: case 4:
  3163                           
  3164                           
  3165                           ;gpio.c: 166: ((var_pinValue_u8)? ((PORTE) |= (1<<(enm_pinNumber))): ((PORTE) &= ~(1<<(e
      +                          nm_pinNumber))));
  3166  07A7  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3167  07A8  1903               	btfsc	3,2
  3168  07A9  2FBA               	goto	l1730
  3169  07AA  3001               	movlw	1
  3170  07AB  00F1               	movwf	??_GPIO_PinWrite
  3171  07AC  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  3172  07AD  2FB0               	goto	u1864
  3173  07AE                     u1865:	
  3174  07AE  1003               	clrc
  3175  07AF  0DF1               	rlf	??_GPIO_PinWrite,f
  3176  07B0                     u1864:	
  3177  07B0  3EFF               	addlw	-1
  3178  07B1  1D03               	skipz
  3179  07B2  2FAE               	goto	u1865
  3180  07B3  0871               	movf	??_GPIO_PinWrite,w
  3181  07B4  00F2               	movwf	??_GPIO_PinWrite+1
  3182  07B5  0872               	movf	??_GPIO_PinWrite+1,w
  3183  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  3184  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  3185  07B8  0489               	iorwf	9,f	;volatile
  3186  07B9  0008               	return
  3187  07BA                     l1730:	
  3188  07BA  3001               	movlw	1
  3189  07BB  00F1               	movwf	??_GPIO_PinWrite
  3190  07BC  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  3191  07BD  2FC0               	goto	u1874
  3192  07BE                     u1875:	
  3193  07BE  1003               	clrc
  3194  07BF  0DF1               	rlf	??_GPIO_PinWrite,f
  3195  07C0                     u1874:	
  3196  07C0  3EFF               	addlw	-1
  3197  07C1  1D03               	skipz
  3198  07C2  2FBE               	goto	u1875
  3199  07C3  0871               	movf	??_GPIO_PinWrite,w
  3200  07C4  3AFF               	xorlw	255
  3201  07C5  00F2               	movwf	??_GPIO_PinWrite+1
  3202  07C6  0872               	movf	??_GPIO_PinWrite+1,w
  3203  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  3204  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  3205  07C9  0589               	andwf	9,f	;volatile
  3206                           
  3207                           ;gpio.c: 169: }
  3208                           
  3209                           ;gpio.c: 167: break;
  3210  07CA  0008               	return
  3211  07CB                     l1734:	
  3212  07CB  0873               	movf	GPIO_PinWrite@var_portNumber_u8,w
  3213                           
  3214                           ; Switch size 1, requested type "space"
  3215                           ; Number of cases is 5, Range of values is 0 to 4
  3216                           ; switch strategies available:
  3217                           ; Name         Instructions Cycles
  3218                           ; simple_byte           16     9 (average)
  3219                           ; direct_byte           23     8 (fixed)
  3220                           ; jumptable            260     6 (fixed)
  3221                           ;	Chosen strategy is simple_byte
  3222  07CC  3A00               	xorlw	0	; case 0
  3223  07CD  1903               	skipnz
  3224  07CE  2F17               	goto	l1702
  3225  07CF  3A01               	xorlw	1	; case 1
  3226  07D0  1903               	skipnz
  3227  07D1  2F3B               	goto	l1708
  3228  07D2  3A03               	xorlw	3	; case 2
  3229  07D3  1903               	skipnz
  3230  07D4  2F5F               	goto	l1714
  3231  07D5  3A01               	xorlw	1	; case 3
  3232  07D6  1903               	skipnz
  3233  07D7  2F83               	goto	l1720
  3234  07D8  3A07               	xorlw	7	; case 4
  3235  07D9  1903               	skipnz
  3236  07DA  2FA7               	goto	l1726
  3237  07DB  2FDC               	goto	l390
  3238  07DC                     l390:	
  3239  07DC  0008               	return
  3240  07DD                     __end_of_GPIO_PinWrite:	
  3241                           
  3242                           	psect	text22
  3243  040F                     __ptext22:	
  3244 ;; *************** function _GPIO_PinRead *****************
  3245 ;; Defined at:
  3246 ;;		line 192 in file "../00-libfiles/gpio.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;  enm_pinNumbe    1    wreg     enum E1088
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  3251 ;;  returnStatus    1    3[COMMON] unsigned char 
  3252 ;;  var_portNumb    1    2[COMMON] unsigned char 
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  1    wreg      unsigned char 
  3255 ;; Registers used:
  3256 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3262 ;;      Params:         0       0       0       0       0
  3263 ;;      Locals:         3       0       0       0       0
  3264 ;;      Temps:          2       0       0       0       0
  3265 ;;      Totals:         5       0       0       0       0
  3266 ;;Total ram usage:        5 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_lcd_BusyCheck
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           
  3276                           ;psect for function _GPIO_PinRead
  3277  040F                     _GPIO_PinRead:	
  3278                           
  3279                           ;incstack = 0
  3280                           ; Regs used in _GPIO_PinRead: [wreg-fsr0h+status,2+status,0]
  3281                           ;GPIO_PinRead@enm_pinNumber stored from wreg
  3282  040F  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  3283                           
  3284                           ;gpio.c: 194: uint8_t var_portNumber_u8;
  3285                           ;gpio.c: 195: uint8_t returnStatus = 0;
  3286  0410  01F3               	clrf	GPIO_PinRead@returnStatus
  3287                           
  3288                           ;gpio.c: 197: var_portNumber_u8 = (enm_pinNumber>>3);
  3289  0411  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  3290  0412  00F0               	movwf	??_GPIO_PinRead
  3291  0413  3003               	movlw	3
  3292  0414                     u1885:	
  3293  0414  1003               	clrc
  3294  0415  0CF0               	rrf	??_GPIO_PinRead,f
  3295  0416  3EFF               	addlw	-1
  3296  0417  1D03               	skipz
  3297  0418  2C14               	goto	u1885
  3298  0419  0870               	movf	??_GPIO_PinRead,w
  3299  041A  00F1               	movwf	??_GPIO_PinRead+1
  3300  041B  0871               	movf	??_GPIO_PinRead+1,w
  3301  041C  00F2               	movwf	GPIO_PinRead@var_portNumber_u8
  3302                           
  3303                           ;gpio.c: 198: enm_pinNumber = enm_pinNumber & 0x07;
  3304  041D  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  3305  041E  3907               	andlw	7
  3306  041F  00F0               	movwf	??_GPIO_PinRead
  3307  0420  0870               	movf	??_GPIO_PinRead,w
  3308  0421  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  3309                           
  3310                           ;gpio.c: 201: switch(var_portNumber_u8)
  3311  0422  2C71               	goto	l1754
  3312  0423                     l1742:	
  3313                           ;gpio.c: 202: {
  3314                           ;gpio.c: 204: case 0:
  3315                           
  3316                           
  3317                           ;gpio.c: 205: returnStatus = (((PORTA)&((1<<(enm_pinNumber))))!=0u);
  3318  0423  3001               	movlw	1
  3319  0424  00F0               	movwf	??_GPIO_PinRead
  3320  0425  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  3321  0426  2C29               	goto	u1894
  3322  0427                     u1895:	
  3323  0427  1003               	clrc
  3324  0428  0DF0               	rlf	??_GPIO_PinRead,f
  3325  0429                     u1894:	
  3326  0429  3EFF               	addlw	-1
  3327  042A  1D03               	skipz
  3328  042B  2C27               	goto	u1895
  3329  042C  0870               	movf	??_GPIO_PinRead,w
  3330  042D  1283               	bcf	3,5	;RP0=0, select bank0
  3331  042E  1303               	bcf	3,6	;RP1=0, select bank0
  3332  042F  0505               	andwf	5,w	;volatile
  3333  0430  2C68               	goto	L6
  3334  0431                     l1744:	
  3335                           ;gpio.c: 209: case 1:
  3336                           
  3337                           ;gpio.c: 206: break;
  3338                           
  3339                           
  3340                           ;gpio.c: 210: returnStatus = (((PORTB)&((1<<(enm_pinNumber))))!=0u);
  3341  0431  3001               	movlw	1
  3342  0432  00F0               	movwf	??_GPIO_PinRead
  3343  0433  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  3344  0434  2C37               	goto	u1924
  3345  0435                     u1925:	
  3346  0435  1003               	clrc
  3347  0436  0DF0               	rlf	??_GPIO_PinRead,f
  3348  0437                     u1924:	
  3349  0437  3EFF               	addlw	-1
  3350  0438  1D03               	skipz
  3351  0439  2C35               	goto	u1925
  3352  043A  0870               	movf	??_GPIO_PinRead,w
  3353  043B  1283               	bcf	3,5	;RP0=0, select bank0
  3354  043C  1303               	bcf	3,6	;RP1=0, select bank0
  3355  043D  0506               	andwf	6,w	;volatile
  3356  043E  2C68               	goto	L6
  3357  043F                     l1746:	
  3358                           ;gpio.c: 214: case 2:
  3359                           
  3360                           ;gpio.c: 211: break;
  3361                           
  3362                           
  3363                           ;gpio.c: 215: returnStatus = (((PORTC)&((1<<(enm_pinNumber))))!=0u);
  3364  043F  3001               	movlw	1
  3365  0440  00F0               	movwf	??_GPIO_PinRead
  3366  0441  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  3367  0442  2C45               	goto	u1954
  3368  0443                     u1955:	
  3369  0443  1003               	clrc
  3370  0444  0DF0               	rlf	??_GPIO_PinRead,f
  3371  0445                     u1954:	
  3372  0445  3EFF               	addlw	-1
  3373  0446  1D03               	skipz
  3374  0447  2C43               	goto	u1955
  3375  0448  0870               	movf	??_GPIO_PinRead,w
  3376  0449  1283               	bcf	3,5	;RP0=0, select bank0
  3377  044A  1303               	bcf	3,6	;RP1=0, select bank0
  3378  044B  0507               	andwf	7,w	;volatile
  3379  044C  2C68               	goto	L6
  3380  044D                     l1748:	
  3381                           ;gpio.c: 220: case 3:
  3382                           
  3383                           ;gpio.c: 216: break;
  3384                           
  3385                           
  3386                           ;gpio.c: 221: returnStatus = (((PORTD)&((1<<(enm_pinNumber))))!=0u);
  3387  044D  3001               	movlw	1
  3388  044E  00F0               	movwf	??_GPIO_PinRead
  3389  044F  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  3390  0450  2C53               	goto	u1984
  3391  0451                     u1985:	
  3392  0451  1003               	clrc
  3393  0452  0DF0               	rlf	??_GPIO_PinRead,f
  3394  0453                     u1984:	
  3395  0453  3EFF               	addlw	-1
  3396  0454  1D03               	skipz
  3397  0455  2C51               	goto	u1985
  3398  0456  0870               	movf	??_GPIO_PinRead,w
  3399  0457  1283               	bcf	3,5	;RP0=0, select bank0
  3400  0458  1303               	bcf	3,6	;RP1=0, select bank0
  3401  0459  0508               	andwf	8,w	;volatile
  3402  045A  2C68               	goto	L6
  3403  045B                     l1750:	
  3404                           ;gpio.c: 226: case 4:
  3405                           
  3406                           ;gpio.c: 222: break;
  3407                           
  3408                           
  3409                           ;gpio.c: 227: returnStatus = (((PORTE)&((1<<(enm_pinNumber))))!=0u);
  3410  045B  3001               	movlw	1
  3411  045C  00F0               	movwf	??_GPIO_PinRead
  3412  045D  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  3413  045E  2C61               	goto	u2014
  3414  045F                     u2015:	
  3415  045F  1003               	clrc
  3416  0460  0DF0               	rlf	??_GPIO_PinRead,f
  3417  0461                     u2014:	
  3418  0461  3EFF               	addlw	-1
  3419  0462  1D03               	skipz
  3420  0463  2C5F               	goto	u2015
  3421  0464  0870               	movf	??_GPIO_PinRead,w
  3422  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3423  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3424  0467  0509               	andwf	9,w	;volatile
  3425  0468                     L6:	
  3426  0468  1903               	btfsc	3,2
  3427  0469  2C6C               	goto	u2020
  3428  046A  3001               	movlw	1
  3429  046B  2C6D               	goto	u2030
  3430  046C                     u2020:	
  3431  046C  3000               	movlw	0
  3432  046D                     u2030:	
  3433  046D  00F1               	movwf	??_GPIO_PinRead+1
  3434  046E  0871               	movf	??_GPIO_PinRead+1,w
  3435  046F  00F3               	movwf	GPIO_PinRead@returnStatus
  3436                           
  3437                           ;gpio.c: 229: }
  3438                           
  3439                           ;gpio.c: 228: break;
  3440  0470  2C82               	goto	l1756
  3441  0471                     l1754:	
  3442  0471  0872               	movf	GPIO_PinRead@var_portNumber_u8,w
  3443                           
  3444                           ; Switch size 1, requested type "space"
  3445                           ; Number of cases is 5, Range of values is 0 to 4
  3446                           ; switch strategies available:
  3447                           ; Name         Instructions Cycles
  3448                           ; simple_byte           16     9 (average)
  3449                           ; direct_byte           23     8 (fixed)
  3450                           ; jumptable            260     6 (fixed)
  3451                           ;	Chosen strategy is simple_byte
  3452  0472  3A00               	xorlw	0	; case 0
  3453  0473  1903               	skipnz
  3454  0474  2C23               	goto	l1742
  3455  0475  3A01               	xorlw	1	; case 1
  3456  0476  1903               	skipnz
  3457  0477  2C31               	goto	l1744
  3458  0478  3A03               	xorlw	3	; case 2
  3459  0479  1903               	skipnz
  3460  047A  2C3F               	goto	l1746
  3461  047B  3A01               	xorlw	1	; case 3
  3462  047C  1903               	skipnz
  3463  047D  2C4D               	goto	l1748
  3464  047E  3A07               	xorlw	7	; case 4
  3465  047F  1903               	skipnz
  3466  0480  2C5B               	goto	l1750
  3467  0481  2C82               	goto	l1756
  3468  0482                     l1756:	
  3469                           
  3470                           ;gpio.c: 230: return returnStatus;
  3471  0482  0873               	movf	GPIO_PinRead@returnStatus,w
  3472  0483  0008               	return
  3473  0484                     __end_of_GPIO_PinRead:	
  3474                           
  3475                           	psect	text23
  3476  062B                     __ptext23:	
  3477 ;; *************** function _GPIO_PinDirection *****************
  3478 ;; Defined at:
  3479 ;;		line 60 in file "../00-libfiles/gpio.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  enm_pinNumbe    1    wreg     enum E1088
  3482 ;;  var_pinDirn_    1    0[COMMON] unsigned char 
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  3485 ;;  var_portNumb    1    3[COMMON] unsigned char 
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  1    wreg      void 
  3488 ;; Registers used:
  3489 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3495 ;;      Params:         1       0       0       0       0
  3496 ;;      Locals:         2       0       0       0       0
  3497 ;;      Temps:          2       0       0       0       0
  3498 ;;      Totals:         5       0       0       0       0
  3499 ;;Total ram usage:        5 bytes
  3500 ;; Hardware stack levels used:    1
  3501 ;; This function calls:
  3502 ;;		Nothing
  3503 ;; This function is called by:
  3504 ;;		_LCD_SetUp
  3505 ;;		_lcd_BusyCheck
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           
  3510                           ;psect for function _GPIO_PinDirection
  3511  062B                     _GPIO_PinDirection:	
  3512                           
  3513                           ;incstack = 0
  3514                           ; Regs used in _GPIO_PinDirection: [wreg-fsr0h+status,2+status,0]
  3515                           ;GPIO_PinDirection@enm_pinNumber stored from wreg
  3516  062B  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  3517                           
  3518                           ;gpio.c: 63: uint8_t var_portNumber_u8;
  3519                           ;gpio.c: 66: var_portNumber_u8 = (enm_pinNumber>>3);
  3520  062C  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  3521  062D  00F1               	movwf	??_GPIO_PinDirection
  3522  062E  3003               	movlw	3
  3523  062F                     u1555:	
  3524  062F  1003               	clrc
  3525  0630  0CF1               	rrf	??_GPIO_PinDirection,f
  3526  0631  3EFF               	addlw	-1
  3527  0632  1D03               	skipz
  3528  0633  2E2F               	goto	u1555
  3529  0634  0871               	movf	??_GPIO_PinDirection,w
  3530  0635  00F2               	movwf	??_GPIO_PinDirection+1
  3531  0636  0872               	movf	??_GPIO_PinDirection+1,w
  3532  0637  00F3               	movwf	GPIO_PinDirection@var_portNumber_u8
  3533                           
  3534                           ;gpio.c: 67: enm_pinNumber = enm_pinNumber & 0x07;
  3535  0638  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  3536  0639  3907               	andlw	7
  3537  063A  00F1               	movwf	??_GPIO_PinDirection
  3538  063B  0871               	movf	??_GPIO_PinDirection,w
  3539  063C  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  3540                           
  3541                           ;gpio.c: 71: switch(var_portNumber_u8)
  3542  063D  2EF2               	goto	l1688
  3543  063E                     l1656:	
  3544                           ;gpio.c: 72: {
  3545                           ;gpio.c: 74: case 0:
  3546                           
  3547                           
  3548                           ;gpio.c: 75: ((var_pinDirn_u8)? ((TRISA) |= (1<<(enm_pinNumber))): ((TRISA) &= ~(1<<(enm
      +                          _pinNumber))));
  3549  063E  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  3550  063F  1903               	btfsc	3,2
  3551  0640  2E51               	goto	l1660
  3552  0641  3001               	movlw	1
  3553  0642  00F1               	movwf	??_GPIO_PinDirection
  3554  0643  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  3555  0644  2E47               	goto	u1574
  3556  0645                     u1575:	
  3557  0645  1003               	clrc
  3558  0646  0DF1               	rlf	??_GPIO_PinDirection,f
  3559  0647                     u1574:	
  3560  0647  3EFF               	addlw	-1
  3561  0648  1D03               	skipz
  3562  0649  2E45               	goto	u1575
  3563  064A  0871               	movf	??_GPIO_PinDirection,w
  3564  064B  00F2               	movwf	??_GPIO_PinDirection+1
  3565  064C  0872               	movf	??_GPIO_PinDirection+1,w
  3566  064D  1683               	bsf	3,5	;RP0=1, select bank1
  3567  064E  1303               	bcf	3,6	;RP1=0, select bank1
  3568  064F  0485               	iorwf	5,f	;volatile
  3569  0650  0008               	return
  3570  0651                     l1660:	
  3571  0651  3001               	movlw	1
  3572  0652  00F1               	movwf	??_GPIO_PinDirection
  3573  0653  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  3574  0654  2E57               	goto	u1584
  3575  0655                     u1585:	
  3576  0655  1003               	clrc
  3577  0656  0DF1               	rlf	??_GPIO_PinDirection,f
  3578  0657                     u1584:	
  3579  0657  3EFF               	addlw	-1
  3580  0658  1D03               	skipz
  3581  0659  2E55               	goto	u1585
  3582  065A  0871               	movf	??_GPIO_PinDirection,w
  3583  065B  3AFF               	xorlw	255
  3584  065C  00F2               	movwf	??_GPIO_PinDirection+1
  3585  065D  0872               	movf	??_GPIO_PinDirection+1,w
  3586  065E  1683               	bsf	3,5	;RP0=1, select bank1
  3587  065F  1303               	bcf	3,6	;RP1=0, select bank1
  3588  0660  0585               	andwf	5,f	;volatile
  3589                           
  3590                           ;gpio.c: 76: break;
  3591  0661  0008               	return
  3592  0662                     l1662:	
  3593                           ;gpio.c: 80: case 1:
  3594                           
  3595                           
  3596                           ;gpio.c: 81: ((var_pinDirn_u8)? ((TRISB) |= (1<<(enm_pinNumber))): ((TRISB) &= ~(1<<(enm
      +                          _pinNumber))));
  3597  0662  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  3598  0663  1903               	btfsc	3,2
  3599  0664  2E75               	goto	l1666
  3600  0665  3001               	movlw	1
  3601  0666  00F1               	movwf	??_GPIO_PinDirection
  3602  0667  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  3603  0668  2E6B               	goto	u1604
  3604  0669                     u1605:	
  3605  0669  1003               	clrc
  3606  066A  0DF1               	rlf	??_GPIO_PinDirection,f
  3607  066B                     u1604:	
  3608  066B  3EFF               	addlw	-1
  3609  066C  1D03               	skipz
  3610  066D  2E69               	goto	u1605
  3611  066E  0871               	movf	??_GPIO_PinDirection,w
  3612  066F  00F2               	movwf	??_GPIO_PinDirection+1
  3613  0670  0872               	movf	??_GPIO_PinDirection+1,w
  3614  0671  1683               	bsf	3,5	;RP0=1, select bank1
  3615  0672  1303               	bcf	3,6	;RP1=0, select bank1
  3616  0673  0486               	iorwf	6,f	;volatile
  3617  0674  0008               	return
  3618  0675                     l1666:	
  3619  0675  3001               	movlw	1
  3620  0676  00F1               	movwf	??_GPIO_PinDirection
  3621  0677  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  3622  0678  2E7B               	goto	u1614
  3623  0679                     u1615:	
  3624  0679  1003               	clrc
  3625  067A  0DF1               	rlf	??_GPIO_PinDirection,f
  3626  067B                     u1614:	
  3627  067B  3EFF               	addlw	-1
  3628  067C  1D03               	skipz
  3629  067D  2E79               	goto	u1615
  3630  067E  0871               	movf	??_GPIO_PinDirection,w
  3631  067F  3AFF               	xorlw	255
  3632  0680  00F2               	movwf	??_GPIO_PinDirection+1
  3633  0681  0872               	movf	??_GPIO_PinDirection+1,w
  3634  0682  1683               	bsf	3,5	;RP0=1, select bank1
  3635  0683  1303               	bcf	3,6	;RP1=0, select bank1
  3636  0684  0586               	andwf	6,f	;volatile
  3637                           
  3638                           ;gpio.c: 82: break;
  3639  0685  0008               	return
  3640  0686                     l1668:	
  3641                           ;gpio.c: 86: case 2:
  3642                           
  3643                           
  3644                           ;gpio.c: 87: ((var_pinDirn_u8)? ((TRISC) |= (1<<(enm_pinNumber))): ((TRISC) &= ~(1<<(enm
      +                          _pinNumber))));
  3645  0686  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  3646  0687  1903               	btfsc	3,2
  3647  0688  2E99               	goto	l1672
  3648  0689  3001               	movlw	1
  3649  068A  00F1               	movwf	??_GPIO_PinDirection
  3650  068B  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  3651  068C  2E8F               	goto	u1634
  3652  068D                     u1635:	
  3653  068D  1003               	clrc
  3654  068E  0DF1               	rlf	??_GPIO_PinDirection,f
  3655  068F                     u1634:	
  3656  068F  3EFF               	addlw	-1
  3657  0690  1D03               	skipz
  3658  0691  2E8D               	goto	u1635
  3659  0692  0871               	movf	??_GPIO_PinDirection,w
  3660  0693  00F2               	movwf	??_GPIO_PinDirection+1
  3661  0694  0872               	movf	??_GPIO_PinDirection+1,w
  3662  0695  1683               	bsf	3,5	;RP0=1, select bank1
  3663  0696  1303               	bcf	3,6	;RP1=0, select bank1
  3664  0697  0487               	iorwf	7,f	;volatile
  3665  0698  0008               	return
  3666  0699                     l1672:	
  3667  0699  3001               	movlw	1
  3668  069A  00F1               	movwf	??_GPIO_PinDirection
  3669  069B  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  3670  069C  2E9F               	goto	u1644
  3671  069D                     u1645:	
  3672  069D  1003               	clrc
  3673  069E  0DF1               	rlf	??_GPIO_PinDirection,f
  3674  069F                     u1644:	
  3675  069F  3EFF               	addlw	-1
  3676  06A0  1D03               	skipz
  3677  06A1  2E9D               	goto	u1645
  3678  06A2  0871               	movf	??_GPIO_PinDirection,w
  3679  06A3  3AFF               	xorlw	255
  3680  06A4  00F2               	movwf	??_GPIO_PinDirection+1
  3681  06A5  0872               	movf	??_GPIO_PinDirection+1,w
  3682  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  3683  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  3684  06A8  0587               	andwf	7,f	;volatile
  3685                           
  3686                           ;gpio.c: 88: break;
  3687  06A9  0008               	return
  3688  06AA                     l1674:	
  3689                           ;gpio.c: 92: case 3:
  3690                           
  3691                           
  3692                           ;gpio.c: 93: ((var_pinDirn_u8)? ((TRISD) |= (1<<(enm_pinNumber))): ((TRISD) &= ~(1<<(enm
      +                          _pinNumber))));
  3693  06AA  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  3694  06AB  1903               	btfsc	3,2
  3695  06AC  2EBD               	goto	l1678
  3696  06AD  3001               	movlw	1
  3697  06AE  00F1               	movwf	??_GPIO_PinDirection
  3698  06AF  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  3699  06B0  2EB3               	goto	u1664
  3700  06B1                     u1665:	
  3701  06B1  1003               	clrc
  3702  06B2  0DF1               	rlf	??_GPIO_PinDirection,f
  3703  06B3                     u1664:	
  3704  06B3  3EFF               	addlw	-1
  3705  06B4  1D03               	skipz
  3706  06B5  2EB1               	goto	u1665
  3707  06B6  0871               	movf	??_GPIO_PinDirection,w
  3708  06B7  00F2               	movwf	??_GPIO_PinDirection+1
  3709  06B8  0872               	movf	??_GPIO_PinDirection+1,w
  3710  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  3711  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  3712  06BB  0488               	iorwf	8,f	;volatile
  3713  06BC  0008               	return
  3714  06BD                     l1678:	
  3715  06BD  3001               	movlw	1
  3716  06BE  00F1               	movwf	??_GPIO_PinDirection
  3717  06BF  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  3718  06C0  2EC3               	goto	u1674
  3719  06C1                     u1675:	
  3720  06C1  1003               	clrc
  3721  06C2  0DF1               	rlf	??_GPIO_PinDirection,f
  3722  06C3                     u1674:	
  3723  06C3  3EFF               	addlw	-1
  3724  06C4  1D03               	skipz
  3725  06C5  2EC1               	goto	u1675
  3726  06C6  0871               	movf	??_GPIO_PinDirection,w
  3727  06C7  3AFF               	xorlw	255
  3728  06C8  00F2               	movwf	??_GPIO_PinDirection+1
  3729  06C9  0872               	movf	??_GPIO_PinDirection+1,w
  3730  06CA  1683               	bsf	3,5	;RP0=1, select bank1
  3731  06CB  1303               	bcf	3,6	;RP1=0, select bank1
  3732  06CC  0588               	andwf	8,f	;volatile
  3733                           
  3734                           ;gpio.c: 94: break;
  3735  06CD  0008               	return
  3736  06CE                     l1680:	
  3737                           ;gpio.c: 97: case 4:
  3738                           
  3739                           
  3740                           ;gpio.c: 98: ((var_pinDirn_u8)? ((TRISE) |= (1<<(enm_pinNumber))): ((TRISE) &= ~(1<<(enm
      +                          _pinNumber))));
  3741  06CE  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  3742  06CF  1903               	btfsc	3,2
  3743  06D0  2EE1               	goto	l1684
  3744  06D1  3001               	movlw	1
  3745  06D2  00F1               	movwf	??_GPIO_PinDirection
  3746  06D3  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  3747  06D4  2ED7               	goto	u1694
  3748  06D5                     u1695:	
  3749  06D5  1003               	clrc
  3750  06D6  0DF1               	rlf	??_GPIO_PinDirection,f
  3751  06D7                     u1694:	
  3752  06D7  3EFF               	addlw	-1
  3753  06D8  1D03               	skipz
  3754  06D9  2ED5               	goto	u1695
  3755  06DA  0871               	movf	??_GPIO_PinDirection,w
  3756  06DB  00F2               	movwf	??_GPIO_PinDirection+1
  3757  06DC  0872               	movf	??_GPIO_PinDirection+1,w
  3758  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  3759  06DE  1303               	bcf	3,6	;RP1=0, select bank1
  3760  06DF  0489               	iorwf	9,f	;volatile
  3761  06E0  0008               	return
  3762  06E1                     l1684:	
  3763  06E1  3001               	movlw	1
  3764  06E2  00F1               	movwf	??_GPIO_PinDirection
  3765  06E3  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  3766  06E4  2EE7               	goto	u1704
  3767  06E5                     u1705:	
  3768  06E5  1003               	clrc
  3769  06E6  0DF1               	rlf	??_GPIO_PinDirection,f
  3770  06E7                     u1704:	
  3771  06E7  3EFF               	addlw	-1
  3772  06E8  1D03               	skipz
  3773  06E9  2EE5               	goto	u1705
  3774  06EA  0871               	movf	??_GPIO_PinDirection,w
  3775  06EB  3AFF               	xorlw	255
  3776  06EC  00F2               	movwf	??_GPIO_PinDirection+1
  3777  06ED  0872               	movf	??_GPIO_PinDirection+1,w
  3778  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  3779  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  3780  06F0  0589               	andwf	9,f	;volatile
  3781                           
  3782                           ;gpio.c: 101: }
  3783                           
  3784                           ;gpio.c: 99: break;
  3785  06F1  0008               	return
  3786  06F2                     l1688:	
  3787  06F2  0873               	movf	GPIO_PinDirection@var_portNumber_u8,w
  3788                           
  3789                           ; Switch size 1, requested type "space"
  3790                           ; Number of cases is 5, Range of values is 0 to 4
  3791                           ; switch strategies available:
  3792                           ; Name         Instructions Cycles
  3793                           ; simple_byte           16     9 (average)
  3794                           ; direct_byte           23     8 (fixed)
  3795                           ; jumptable            260     6 (fixed)
  3796                           ;	Chosen strategy is simple_byte
  3797  06F3  3A00               	xorlw	0	; case 0
  3798  06F4  1903               	skipnz
  3799  06F5  2E3E               	goto	l1656
  3800  06F6  3A01               	xorlw	1	; case 1
  3801  06F7  1903               	skipnz
  3802  06F8  2E62               	goto	l1662
  3803  06F9  3A03               	xorlw	3	; case 2
  3804  06FA  1903               	skipnz
  3805  06FB  2E86               	goto	l1668
  3806  06FC  3A01               	xorlw	1	; case 3
  3807  06FD  1903               	skipnz
  3808  06FE  2EAA               	goto	l1674
  3809  06FF  3A07               	xorlw	7	; case 4
  3810  0700  1903               	skipnz
  3811  0701  2ECE               	goto	l1680
  3812  0702  2F03               	goto	l360
  3813  0703                     l360:	
  3814  0703  0008               	return
  3815  0704                     __end_of_GPIO_PinDirection:	
  3816                           
  3817                           	psect	text24
  3818  00D4                     __ptext24:	
  3819 ;; *************** function _DELAY_ms *****************
  3820 ;; Defined at:
  3821 ;;		line 75 in file "../00-libfiles/delay.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  ms_count        2    2[COMMON] unsigned int 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;		None
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		wreg, status,2, status,0, pclath, cstack
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3835 ;;      Params:         2       0       0       0       0
  3836 ;;      Locals:         0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0
  3838 ;;      Totals:         2       0       0       0       0
  3839 ;;Total ram usage:        2 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    1
  3842 ;; This function calls:
  3843 ;;		_DELAY_us
  3844 ;; This function is called by:
  3845 ;;		_LCD_Init
  3846 ;;		_lcd_BusyCheck
  3847 ;;		_lcd_Reset
  3848 ;;		_LCD_ScrollMessage
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           
  3853                           ;psect for function _DELAY_ms
  3854  00D4                     _DELAY_ms:	
  3855  00D4                     l1696:	
  3856                           ;delay.c: 77: while (ms_count != 0)
  3857                           
  3858                           ;incstack = 0
  3859                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  3860                           
  3861  00D4  0872               	movf	DELAY_ms@ms_count,w
  3862  00D5  0473               	iorwf	DELAY_ms@ms_count+1,w
  3863  00D6  1903               	btfsc	3,2
  3864  00D7  0008               	return
  3865                           
  3866                           ;delay.c: 78: {
  3867                           ;delay.c: 79: DELAY_us(300u);
  3868  00D8  302C               	movlw	44
  3869  00D9  00F0               	movwf	DELAY_us@us_count
  3870  00DA  3001               	movlw	1
  3871  00DB  00F1               	movwf	DELAY_us@us_count+1
  3872  00DC  120A  118A  20BE  120A  118A  	fcall	_DELAY_us
  3873                           
  3874                           ;delay.c: 80: ms_count--;
  3875  00E1  3001               	movlw	1
  3876  00E2  02F2               	subwf	DELAY_ms@ms_count,f
  3877  00E3  3000               	movlw	0
  3878  00E4  1C03               	skipc
  3879  00E5  03F3               	decf	DELAY_ms@ms_count+1,f
  3880  00E6  02F3               	subwf	DELAY_ms@ms_count+1,f
  3881  00E7  28D4               	goto	l1696
  3882  00E8                     __end_of_DELAY_ms:	
  3883                           
  3884                           	psect	text25
  3885  00BE                     __ptext25:	
  3886 ;; *************** function _DELAY_us *****************
  3887 ;; Defined at:
  3888 ;;		line 56 in file "../00-libfiles/delay.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  us_count        2    0[COMMON] unsigned int 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;		None
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      void 
  3895 ;; Registers used:
  3896 ;;		wreg, status,2, status,0
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3902 ;;      Params:         2       0       0       0       0
  3903 ;;      Locals:         0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0
  3905 ;;      Totals:         2       0       0       0       0
  3906 ;;Total ram usage:        2 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_lcd_BusyCheck
  3912 ;;		_lcd_Reset
  3913 ;;		_lcd_SendCmdSignals
  3914 ;;		_lcd_SendDataSignals
  3915 ;;		_DELAY_ms
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           
  3920                           ;psect for function _DELAY_us
  3921  00BE                     _DELAY_us:	
  3922  00BE                     l1650:	
  3923                           ;delay.c: 58: while (us_count != 0)
  3924                           
  3925                           ;incstack = 0
  3926                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  3927                           
  3928  00BE  0870               	movf	DELAY_us@us_count,w
  3929  00BF  0471               	iorwf	DELAY_us@us_count+1,w
  3930  00C0  1903               	btfsc	3,2
  3931  00C1  0008               	return
  3932                           
  3933                           ;delay.c: 59: {
  3934                           ;delay.c: 60: us_count--;
  3935  00C2  3001               	movlw	1
  3936  00C3  02F0               	subwf	DELAY_us@us_count,f
  3937  00C4  3000               	movlw	0
  3938  00C5  1C03               	skipc
  3939  00C6  03F1               	decf	DELAY_us@us_count+1,f
  3940  00C7  02F1               	subwf	DELAY_us@us_count+1,f
  3941  00C8  28BE               	goto	l1650
  3942  00C9                     __end_of_DELAY_us:	
  3943  007E                     btemp	set	126	;btemp
  3944  007E                     wtemp	set	126
  3945  007E                     wtemp0	set	126
  3946  0080                     wtemp1	set	128
  3947  0082                     wtemp2	set	130
  3948  0084                     wtemp3	set	132
  3949  0086                     wtemp4	set	134
  3950  0088                     wtemp5	set	136
  3951  007F                     wtemp6	set	127
  3952  007E                     ttemp	set	126
  3953  007E                     ttemp0	set	126
  3954  0081                     ttemp1	set	129
  3955  0084                     ttemp2	set	132
  3956  0087                     ttemp3	set	135
  3957  007F                     ttemp4	set	127
  3958  007E                     ltemp	set	126
  3959  007E                     ltemp0	set	126
  3960  0082                     ltemp1	set	130
  3961  0086                     ltemp2	set	134
  3962  0080                     ltemp3	set	128


Data Sizes:
    Strings     32
    Constant    0
    Data        4
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_DisplayString@ptr_stringPointer_u8	PTR const unsigned char  size(1) Largest target is 32
		 -> STR_1(CODE[32]), 


Critical Paths under _main in COMMON

    _main->_LCD_DisplayString
    _main->_LCD_Init
    _UART_SetBaudRate->___lldiv
    _LCD_SetUp->_GPIO_PinDirection
    _lcd_Reset->_lcd_SendHigherNibble
    _LCD_Clear->_LCD_GoToLine
    _LCD_GoToLine->_LCD_CmdWrite
    _LCD_DisplayString->_LCD_DisplayChar
    _LCD_DisplayChar->_LCD_GoToNextLine
    _lcd_DataWrite->_lcd_BusyCheck
    _lcd_DataWrite->_lcd_SendHigherNibble
    _lcd_DataWrite->_lcd_SendLowerNibble
    _lcd_SendDataSignals->_GPIO_PinWrite
    _LCD_GoToNextLine->_LCD_CmdWrite
    _LCD_CmdWrite->_lcd_BusyCheck
    _LCD_CmdWrite->_lcd_SendHigherNibble
    _LCD_CmdWrite->_lcd_SendLowerNibble
    _lcd_SendLowerNibble->_GPIO_PinWrite
    _lcd_SendHigherNibble->_GPIO_PinWrite
    _lcd_SendCmdSignals->_GPIO_PinWrite
    _lcd_BusyCheck->_GPIO_PinDirection
    _lcd_BusyCheck->_GPIO_PinRead
    _lcd_BusyCheck->_GPIO_PinWrite
    _DELAY_ms->_DELAY_us

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->_UART_SetBaudRate

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   87438
                                             20 BANK0     11    11      0
                    _LCD_DisplayChar
                  _LCD_DisplayString
                       _LCD_GoToLine
                           _LCD_Init
                          _LCD_SetUp
                          _UART_Init
                        _UART_RxChar
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (1) _UART_TxChar                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_RxChar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4     910
                                             16 BANK0      4     0      4
                   _UART_SetBaudRate
 ---------------------------------------------------------------------------------
 (2) _UART_SetBaudRate                                    16    12      4     835
                                              0 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     692
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _LCD_SetUp                                           12     2     10    2189
                                              5 COMMON     2     2      0
                                              0 BANK0     10     0     10
                  _GPIO_PinDirection
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     2      1   35320
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                           _DELAY_ms
                          _LCD_Clear
                       _LCD_CmdWrite
                          _lcd_Reset
 ---------------------------------------------------------------------------------
 (2) _lcd_Reset                                            0     0      0    5110
                           _DELAY_ms
                           _DELAY_us
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0   19528
                       _LCD_CmdWrite
                       _LCD_GoToLine
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToLine                                         2     2      0    9797
                                             10 COMMON     2     2      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_DisplayString                                    2     2      0   19627
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                    _LCD_DisplayChar
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayChar                                      2     2      0   19528
                                             11 COMMON     2     2      0
                   _LCD_GoToNextLine
                      _lcd_DataWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_DataWrite                                        3     3      0    9731
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                _lcd_SendDataSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (4) _lcd_SendDataSignals                                  0     0      0    2117
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToNextLine                                     1     1      0    9731
                                             10 COMMON     1     1      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (2) _LCD_CmdWrite                                         3     3      0    9731
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (3) _lcd_SendLowerNibble                                  2     2      0    1652
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_SendHigherNibble                                 2     2      0    1652
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_SendCmdSignals                                   0     0      0    2117
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_BusyCheck                                        2     2      0    4221
                                              5 COMMON     2     2      0
                           _DELAY_ms
                           _DELAY_us
                  _GPIO_PinDirection
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _GPIO_PinWrite                                        5     4      1    1564
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (4) _GPIO_PinRead                                         5     5      0     206
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinDirection                                    5     4      1    1087
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (3) _DELAY_ms                                             2     0      2     788
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (4) _DELAY_us                                             2     0      2     553
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_DisplayChar
     _LCD_GoToNextLine
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
     _lcd_DataWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendDataSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
   _LCD_DisplayString
     _LCD_DisplayChar
       _LCD_GoToNextLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _lcd_DataWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendDataSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
   _LCD_GoToLine
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
   _LCD_Init
     _DELAY_ms
       _DELAY_us
     _LCD_Clear
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
       _LCD_GoToLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
     _lcd_Reset
       _DELAY_ms
         _DELAY_us
       _DELAY_us
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
   _LCD_SetUp
     _GPIO_PinDirection
   _UART_Init
     _UART_SetBaudRate
       ___lldiv
   _UART_RxChar
   _UART_TxChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1F      33       5       63.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      41      12        0.0%
ABS                  0      0      41       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Feb 20 15:18:30 2016

     UART_SetBaudRate@var_baudRate_u32 0020                                      pc 0002  
                          __CFG_CP$OFF 0000                          ?_LCD_CmdWrite 0070  
                                   l33 00A6                                     l39 00B6  
                                   fsr 0004                          ?_LCD_GoToLine 0070  
                          __CFG_LVP$ON 0000                                    l360 0703  
                                  l169 02E8                                    l291 051E  
                                  l390 07DC                           __CFG_CPD$OFF 0000  
                                  fsr0 0004                                    indf 0000  
                         __CFG_FOSC$HS 0000                __end_of_LCD_DisplayChar 0146  
                                 l2000 05C4                                   l2002 05C9  
                                 l2012 05EF                                   l2030 02C6  
                                 l2036 02D7                                   l2046 0149  
                                 l1702 0717                                   l1720 0783  
                                 l1712 074E                                   l1800 01D4  
                                 l1650 00BE                                   l1730 07BA  
                                 l1714 075F                                   l1706 072A  
                                 l1660 0651                                   l1724 0796  
                                 l1708 073B                                   l1804 01EC  
                                 l1662 0662                                   l1750 045B  
                                 l1742 0423                                   l1726 07A7  
                                 l1718 0772                                   l1734 07CB  
                                 l1902 0132                                   l1680 06CE  
                                 l1672 0699                                   l1656 063E  
                                 l1744 0431                                   l1904 0137  
                                 l2392 03F6                                   l1674 06AA  
                                 l1666 0675                                   l1746 043F  
                                 l1754 0471                                   l1842 0221  
                                 l1684 06E1                                   l1668 0686  
                                 l1748 044D                                   l1756 0482  
                                 l1852 0351                                   l1678 06BD  
                                 l1782 0582                                   l1838 0209  
                                 l1862 0389                                   l1854 0361  
                                 l1696 00D4                                   l1688 06F2  
                                 l1872 0496                                   l1778 0577  
                                 l1866 0396                                   l1876 04F1  
                                 STR_1 0009                                   u2020 046C  
                                 u2100 0281                                   u2030 046D  
                                 u2014 0461                                   u2110 0290  
                                 u2015 045F                                   u2200 0251  
                                 u2120 0291                                   u2210 0260  
                                 u2130 02A0                                   u2220 0261  
                                 u2140 02A1                                   u2150 0230  
                                 u2070 0270                                   u2160 0231  
                                 u2080 0271                                   u2305 0355  
                                 u2170 0240                                   u2090 0280  
                                 u1604 066B                                   u2180 0241  
                                 u1605 0669                                   u2245 01E2  
                                 u2325 0363                                   u1614 067B  
                                 u2190 0250                                   u1615 0679  
                                 u2335 0378                                   u1704 06E7  
                                 u1705 06E5                                   u2345 038A  
                                 u1634 068F                                   u1635 068D  
                                 u1555 062F                                   u2363 0494  
                                 u1644 069F                                   u1804 0768  
                                 u1645 069D                                   u1805 0766  
                                 u1725 0708                                   u2285 0217  
                                 u2373 04A5                                   u1574 0647  
                                 u1814 0778                                   u2390 04DE  
                                 u1575 0645                                   u1815 0776  
                                 u2391 04DF                                   u1664 06B3  
                                 u1584 0657                                   u1744 0720  
                                 u2392 04E4                                   u1665 06B1  
                                 u1585 0655                                   u1745 071E  
                                 u2393 04E5                                   u2385 04B8  
                                 u1674 06C3                                   u1834 078C  
                                 u1754 0730                                   u1675 06C1  
                                 u1835 078A                                   u1755 072E  
                                 u1924 0437                                   u1844 079C  
                                 u1925 0435                                   u1845 079A  
                                 u1694 06D7                                   u1774 0744  
                                 u1695 06D5                                   u1775 0742  
                                 u1864 07B0                                   u1784 0754  
                                 u1865 07AE                                   u1785 0752  
                                 u1954 0445                                   u1874 07C0  
                                 u1955 0443                                   u1875 07BE  
                                 u1885 0414                                   u1894 0429  
                                 u1895 0427                                   u1984 0453  
                                 u1985 0451                                   _RCIF 0065  
                                 _TXIF 0064                           __CFG_WRT$OFF 0000  
                                 _main 039F                     __size_of_LCD_Clear 000B  
                                 btemp 007E                                   ltemp 007E  
                   __size_of_LCD_SetUp 00A1                                   start 0000  
                                 ttemp 007E                                   wtemp 007E  
                     __end_of_DELAY_ms 00E8                       __end_of_DELAY_us 00C9  
                        ?_GPIO_PinRead 0070                         ??_LCD_CmdWrite 0077  
                          LCD_SetUp@D0 0022                            LCD_SetUp@D1 0023  
                          LCD_SetUp@D2 0024                            LCD_SetUp@D3 0025  
                          LCD_SetUp@D4 0026                            LCD_SetUp@D5 0027  
                          LCD_SetUp@D6 0028                            LCD_SetUp@D7 0029  
                          LCD_SetUp@EN 0021                            LCD_SetUp@RS 0076  
                          LCD_SetUp@RW 0020                         ??_LCD_GoToLine 007A  
                        _GPIO_PinWrite 0704                       __end_of_LCD_Init 02F2  
              LCD_CmdWrite@v_lcdCmd_u8 0079                                  ?_main 0070  
                        __CFG_WDTE$OFF 0000                        __end_of___lldiv 039F  
                                _RCREG 001A                                  _RCSTA 0018  
                                _SPBRG 0099                                  _PORTA 0005  
                                _PORTB 0006                                  _PORTC 0007  
                                _PORTD 0008                                  _PORTE 0009  
                                _TRISA 0085                                  _TRISB 0086  
                                _TRISC 0087                                  _TRISD 0088  
                                _TRISE 0089                                  _TXREG 0019  
                                _TXSTA 0098                     __size_of_UART_Init 0016  
LCD_DisplayString@ptr_stringPointer_u8 0020                         __CFG_BOREN$OFF 0000  
                                pclath 000A                                  ltemp0 007E  
                                ltemp1 0082                                  ltemp2 0086  
                                ltemp3 0080           __end_of_lcd_SendHigherNibble 026B  
                                ttemp0 007E                                  ttemp1 0081  
                                ttemp2 0084                                  ttemp3 0087  
                                ttemp4 007F                                  status 0003  
                                wtemp0 007E                                  wtemp1 0080  
                                wtemp2 0082                                  wtemp3 0084  
                                wtemp4 0086                                  wtemp5 0088  
                                wtemp6 007F                         ??_GPIO_PinRead 0070  
                      __initialization 07DD             GPIO_PinWrite@enm_pinNumber 0074  
                         __end_of_main 040F                         ?_GPIO_PinWrite 0070  
                    _GPIO_PinDirection 062B                                 ??_main 0034  
          __size_of_lcd_SendCmdSignals 002D                      __end_of_LCD_Clear 00D4  
                   ?_GPIO_PinDirection 0070                      __end_of_LCD_SetUp 062B  
                     ?_LCD_DisplayChar 0070            LCD_DisplayChar@v_lcdData_u8 007C  
                  ??_GPIO_PinDirection 0071                      ?_UART_SetBaudRate 0020  
                lcd_BusyCheck@busyflag 0076                     ??_UART_SetBaudRate 0024  
                         ?_UART_RxChar 0070                         __CFG_PWRTE$OFF 0000  
                         ?_UART_TxChar 0070              GPIO_PinRead@enm_pinNumber 0074  
                    __end_of_UART_Init 0127                              ??___lldiv 0078  
            __end_of_GPIO_PinDirection 0704         GPIO_PinDirection@enm_pinNumber 0074  
                               main@ch 003E                       DELAY_ms@ms_count 0072  
                    ?_LCD_GoToNextLine 0070                              ?_DELAY_ms 0072  
                            ?_DELAY_us 0070            __end_of_lcd_SendLowerNibble 02AB  
                   ??_LCD_GoToNextLine 007A                   __end_of_LCD_CmdWrite 01F6  
                 __end_of_LCD_GoToLine 0111            lcd_SendLowerNibble@dataByte 0076  
              __end_of__initialization 07FC                              ?_LCD_Init 007C  
                      ??_GPIO_PinWrite 0071                         __pcstackCOMMON 0070  
                         __pidataBANK0 00A2                  __end_of_lcd_DataWrite 022B  
                 _lcd_SendHigherNibble 022B                     __size_of_lcd_Reset 004F  
         __size_of_lcd_SendDataSignals 002E                             ??_DELAY_ms 0074  
                           ??_DELAY_us 0072                   __end_of_GPIO_PinRead 0484  
       GPIO_PinWrite@var_portNumber_u8 0073                             __pbssBANK0 003F  
                __end_of_lcd_BusyCheck 058A           lcd_SendHigherNibble@dataByte 0076  
         GPIO_PinWrite@var_pinValue_u8 0070                             ??_LCD_Init 007D  
                           __pmaintext 039F             __size_of_GPIO_PinDirection 00D9  
                ?_lcd_SendHigherNibble 0070                       DELAY_us@us_count 0070  
                           __stringtab 0003                      __end_of_lcd_Reset 0341  
                 __size_of_UART_RxChar 0007                   __size_of_UART_TxChar 0009  
            LCD_Init@v_lcdNoOfLines_u8 0020                                ___lldiv 0341  
                              __ptext1 00B5                                __ptext2 00A6  
                              __ptext3 0111                                __ptext4 0484  
                              __ptext5 0341                                __ptext6 058A  
                              __ptext7 02AB                                __ptext8 02F2  
                              __ptext9 00C9                  __size_of_LCD_CmdWrite 0035  
                            _LCDConfig 003F                  __size_of_LCD_GoToLine 0015  
                            _LCD_Clear 00C9                              _LCD_SetUp 058A  
                              clrloop0 00AE                   end_of_initialization 07FC  
         LCD_Init@v_MaxCharsPerLine_u8 007C             UART_TxChar@var_uartData_u8 0070  
                      ___lldiv@divisor 0070                        ___lldiv@counter 007D  
               ??_lcd_SendHigherNibble 0075             __end_of_lcd_SendCmdSignals 0193  
                         _LCD_CmdWrite 01C1                              _UART_Init 0111  
            __size_of_UART_SetBaudRate 007A                           _LCD_GoToLine 00FC  
                __size_of_GPIO_PinRead 0075                             ?_LCD_Clear 0070  
                           ?_LCD_SetUp 0020                      __size_of_DELAY_ms 0014  
                    __size_of_DELAY_us 000B               __size_of_LCD_DisplayChar 001F  
                    __size_of_LCD_Init 0047              __size_of_LCD_GoToNextLine 0014  
                  _lcd_SendDataSignals 0193     GPIO_PinDirection@var_portNumber_u8 0073  
                         _GPIO_PinRead 040F                             ?_UART_Init 0030  
             _ARR_LcdLineNumAddress_U8 004F                    start_initialization 07DD  
                 ?_lcd_SendDataSignals 0070                 _v_LcdTrackCursorPos_U8 004D  
        GPIO_PinRead@var_portNumber_u8 0072           __size_of_lcd_SendLowerNibble 0040  
      GPIO_PinDirection@var_pinDirn_u8 0070                  __end_of_GPIO_PinWrite 07DD  
                          __pdataBANK0 004F                  ??_lcd_SendDataSignals 0075  
                 _v_LcdTrackLineNum_U8 004E                              ___latbits 0002  
                lcd_DataWrite@dataByte 0079                          __pcstackBANK0 0020  
                          ??_LCD_Clear 007C                            ??_LCD_SetUp 0075  
               __size_of_lcd_DataWrite 0035            LCD_GoToLine@v_lineNumber_u8 007B  
            UART_Init@var_baudRate_u32 0030                               ?___lldiv 0070  
                            _lcd_Reset 02F2                      ??_LCD_DisplayChar 007B  
                          ??_UART_Init 007E                       _UART_SetBaudRate 0484  
                            __pstrings 0003                 __size_of_lcd_BusyCheck 008C  
                    _LCD_DisplayString 0146                               _DELAY_ms 00D4  
                             _DELAY_us 00BE                     ?_LCD_DisplayString 0070  
                             _LCD_Init 02AB                    ??_LCD_DisplayString 007D  
                            clear_ram0 00AD                          ??_UART_RxChar 0070  
                        ??_UART_TxChar 0070                       _LCD_GoToNextLine 00E8  
                           ?_lcd_Reset 0070                          _lcd_DataWrite 01F6  
             GPIO_PinRead@returnStatus 0073                            __stringbase 0008  
            __end_of_LCD_DisplayString 0166                     _lcd_SendCmdSignals 0166  
                        _lcd_BusyCheck 04FE                    ?_lcd_SendCmdSignals 0070  
                       ?_lcd_DataWrite 0070                    __end_of_UART_RxChar 00AD  
                  __end_of_UART_TxChar 00BE                       __size_of___lldiv 005E  
                   __end_of__stringtab 0009                   ??_lcd_SendCmdSignals 0075  
        __size_of_lcd_SendHigherNibble 0040                    _lcd_SendLowerNibble 026B  
                             __ptext10 00FC                               __ptext11 0146  
                             __ptext20 04FE                               __ptext12 0127  
                             __ptext21 0704                               __ptext13 01F6  
                             __ptext22 040F                               __ptext14 0193  
                             __ptext23 062B                               __ptext15 00E8  
                             __ptext24 00D4                               __ptext16 01C1  
                             __ptext25 00BE                               __ptext17 026B  
                             __ptext18 022B                               __ptext19 0166  
                       ?_lcd_BusyCheck 0070                          __size_of_main 0070  
                 ?_lcd_SendLowerNibble 0070                            ??_lcd_Reset 0077  
             UART_SetBaudRate@RegValue 002C             __size_of_LCD_DisplayString 0020  
             __end_of_UART_SetBaudRate 04FE                  ??_lcd_SendLowerNibble 0075  
                     ___lldiv@dividend 0074                        _LCD_DisplayChar 0127  
                          _UART_RxChar 00A6                              stringcode 0003  
                          _UART_TxChar 00B5                        ??_lcd_DataWrite 0077  
          __end_of_lcd_SendDataSignals 01C1                       ___lldiv@quotient 0079  
             __end_of_LCD_GoToNextLine 00FC                               stringdir 0003  
                             stringtab 0003                        ??_lcd_BusyCheck 0075  
               __size_of_GPIO_PinWrite 00D9  
