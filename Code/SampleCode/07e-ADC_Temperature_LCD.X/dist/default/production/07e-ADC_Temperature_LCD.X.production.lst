

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Feb 20 20:52:16 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  009F                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230                           
   231                           	psect	idataBANK1
   232  08DE                     __pidataBANK1:	
   233                           
   234                           ;initializer for _ARR_LcdLineNumAddress_U8
   235  08DE  3480               	retlw	128
   236  08DF  34C0               	retlw	192
   237  08E0  3490               	retlw	144
   238  08E1  34D0               	retlw	208
   239  001F                     _ADCON0	set	31
   240  001E                     _ADRESH	set	30
   241  0005                     _PORTA	set	5
   242  0006                     _PORTB	set	6
   243  0007                     _PORTC	set	7
   244  0008                     _PORTD	set	8
   245  0009                     _PORTE	set	9
   246  00F8                     _ADON	set	248
   247  00FA                     _GO	set	250
   248  00FA                     _GO_DONE	set	250
   249  009F                     _ADCON1	set	159
   250  009E                     _ADRESL	set	158
   251  0085                     _TRISA	set	133
   252  0086                     _TRISB	set	134
   253  0087                     _TRISC	set	135
   254  0088                     _TRISD	set	136
   255  0089                     _TRISE	set	137
   256                           
   257                           	psect	strings
   258  0800                     __pstrings:	
   259  0800                     stringtab:	
   260  0800                     __stringtab:	
   261  0800                     stringcode:	
   262                           ;	String table - string pointers are 1 byte each
   263                           
   264  0800                     stringdir:	
   265  0800  3008               	movlw	high stringdir
   266  0801  008A               	movwf	10
   267  0802  0804               	movf	4,w
   268  0803  0A84               	incf	4,f
   269  0804  0782               	addwf	2,f
   270  0805                     __stringbase:	
   271  0805  3400               	retlw	0
   272  0806                     __end_of__stringtab:	
   273  0806                     STR_1:	
   274  0806  3441               	retlw	65	;'A'
   275  0807  3444               	retlw	68	;'D'
   276  0808  3443               	retlw	67	;'C'
   277  0809  3430               	retlw	48	;'0'
   278  080A  3420               	retlw	32	;' '
   279  080B  3456               	retlw	86	;'V'
   280  080C  3461               	retlw	97	;'a'
   281  080D  346C               	retlw	108	;'l'
   282  080E  3475               	retlw	117	;'u'
   283  080F  3465               	retlw	101	;'e'
   284  0810  343A               	retlw	58	;':'
   285  0811  3425               	retlw	37	;'%'
   286  0812  3434               	retlw	52	;'4'
   287  0813  3464               	retlw	100	;'d'
   288  0814  3420               	retlw	32	;' '
   289  0815  340A               	retlw	10
   290  0816  3454               	retlw	84	;'T'
   291  0817  3465               	retlw	101	;'e'
   292  0818  346D               	retlw	109	;'m'
   293  0819  3470               	retlw	112	;'p'
   294  081A  343A               	retlw	58	;':'
   295  081B  3425               	retlw	37	;'%'
   296  081C  3466               	retlw	102	;'f'
   297  081D  340A               	retlw	10
   298  081E  340D               	retlw	13
   299  081F  3400               	retlw	0
   300                           
   301                           ; #config settings
   302  0000                     
   303                           	psect	cinit
   304  07D4                     start_initialization:	
   305  07D4                     __initialization:	
   306                           
   307                           ; Clear objects allocated to BANK0
   308  07D4  01EC               	clrf	__pbssBANK0& (0+127)
   309  07D5  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   310                           
   311                           ; Clear objects allocated to BANK1
   312  07D6  1683               	bsf	3,5	;RP0=1, select bank1
   313  07D7  1303               	bcf	3,6	;RP1=0, select bank1
   314  07D8  01A0               	clrf	__pbssBANK1& (0+127)
   315  07D9  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   316  07DA  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   317  07DB  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   318  07DC  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   319  07DD  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   320  07DE  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   321  07DF  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   322  07E0  01A8               	clrf	(__pbssBANK1+8)& (0+127)
   323  07E1  01A9               	clrf	(__pbssBANK1+9)& (0+127)
   324  07E2  01AA               	clrf	(__pbssBANK1+10)& (0+127)
   325  07E3  01AB               	clrf	(__pbssBANK1+11)& (0+127)
   326  07E4  01AC               	clrf	(__pbssBANK1+12)& (0+127)
   327  07E5  01AD               	clrf	(__pbssBANK1+13)& (0+127)
   328                           
   329                           ; Initialize objects allocated to BANK1
   330  07E6  120A  158A  20DE  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   331  07EB  00B8               	movwf	__pdataBANK1& (0+127)
   332  07EC  120A  158A  20DF  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   333  07F1  00B9               	movwf	(__pdataBANK1+1)& (0+127)
   334  07F2  120A  158A  20E0  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   335  07F7  00BA               	movwf	(__pdataBANK1+2)& (0+127)
   336  07F8  120A  158A  20E1   	fcall	__pidataBANK1+3	;fetch initializer
   337  07FB  00BB               	movwf	(__pdataBANK1+3)& (0+127)
   338  07FC                     end_of_initialization:	
   339                           ;End of C runtime variable initialization code
   340                           
   341  07FC                     __end_of__initialization:	
   342  07FC  0183               	clrf	3
   343  07FD  120A  158A  2E98   	ljmp	_main	;jump to C main() function
   344                           
   345                           	psect	bssBANK0
   346  006C                     __pbssBANK0:	
   347  006C                     _v_LcdTrackCursorPos_U8:	
   348  006C                     	ds	1
   349  006D                     _v_LcdTrackLineNum_U8:	
   350  006D                     	ds	1
   351                           
   352                           	psect	bssBANK1
   353  00A0                     __pbssBANK1:	
   354  00A0                     _LCDConfig:	
   355  00A0                     	ds	14
   356                           
   357                           	psect	dataBANK1
   358  00B8                     __pdataBANK1:	
   359  00B8                     _ARR_LcdLineNumAddress_U8:	
   360  00B8                     	ds	4
   361                           
   362                           	psect	cstackBANK1
   363  00AE                     __pcstackBANK1:	
   364  00AE                     ??_main:	
   365                           
   366                           ; 1 bytes @ 0x0
   367  00AE                     	ds	10
   368                           
   369                           	psect	cstackCOMMON
   370  0070                     __pcstackCOMMON:	
   371  0070                     ?_GPIO_PinDirection:	
   372  0070                     ?_LCD_CmdWrite:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_lcd_Reset:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ?_LCD_Clear:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_LCD_GoToLine:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_lcd_BusyCheck:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ?_lcd_SendLowerNibble:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ?_lcd_SendHigherNibble:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ?_lcd_SendCmdSignals:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ?_lcd_DataWrite:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_lcd_SendDataSignals:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_GPIO_PinWrite:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_DELAY_us:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_GPIO_PinRead:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ??_GPIO_PinRead:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_LCD_GoToNextLine:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_LCD_DisplayChar:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_LCD_DisplayString:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_ADC_Init:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ??_ADC_Init:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_main:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?___ftpack:	
   433                           ; 2 bytes @ 0x0
   434                           
   435  0070                     ?___lldiv:	
   436                           ; 3 bytes @ 0x0
   437                           
   438  0070                     GPIO_PinDirection@var_pinDirn_u8:	
   439                           ; 4 bytes @ 0x0
   440                           
   441  0070                     GPIO_PinWrite@var_pinValue_u8:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     DELAY_us@us_count:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ___ftpack@arg:	
   448                           ; 2 bytes @ 0x0
   449                           
   450  0070                     ___lldiv@divisor:	
   451                           ; 3 bytes @ 0x0
   452                           
   453                           
   454                           ; 4 bytes @ 0x0
   455  0070                     	ds	1
   456  0071                     ??_GPIO_PinDirection:	
   457  0071                     ??_GPIO_PinWrite:	
   458                           ; 1 bytes @ 0x1
   459                           
   460                           
   461                           ; 1 bytes @ 0x1
   462  0071                     	ds	1
   463  0072                     ?_DELAY_ms:	
   464  0072                     ??_DELAY_us:	
   465                           ; 1 bytes @ 0x2
   466                           
   467  0072                     ?_ADC_GetAdcValue:	
   468                           ; 1 bytes @ 0x2
   469                           
   470  0072                     GPIO_PinRead@var_portNumber_u8:	
   471                           ; 2 bytes @ 0x2
   472                           
   473  0072                     DELAY_ms@ms_count:	
   474                           ; 1 bytes @ 0x2
   475                           
   476                           
   477                           ; 2 bytes @ 0x2
   478  0072                     	ds	1
   479  0073                     GPIO_PinDirection@var_portNumber_u8:	
   480  0073                     GPIO_PinWrite@var_portNumber_u8:	
   481                           ; 1 bytes @ 0x3
   482                           
   483  0073                     GPIO_PinRead@returnStatus:	
   484                           ; 1 bytes @ 0x3
   485                           
   486  0073                     ___ftpack@exp:	
   487                           ; 1 bytes @ 0x3
   488                           
   489                           
   490                           ; 1 bytes @ 0x3
   491  0073                     	ds	1
   492  0074                     ??_DELAY_ms:	
   493  0074                     ??_ADC_GetAdcValue:	
   494                           ; 1 bytes @ 0x4
   495                           
   496  0074                     GPIO_PinDirection@enm_pinNumber:	
   497                           ; 1 bytes @ 0x4
   498                           
   499  0074                     GPIO_PinWrite@enm_pinNumber:	
   500                           ; 1 bytes @ 0x4
   501                           
   502  0074                     GPIO_PinRead@enm_pinNumber:	
   503                           ; 1 bytes @ 0x4
   504                           
   505  0074                     ___ftpack@sign:	
   506                           ; 1 bytes @ 0x4
   507                           
   508  0074                     ___lldiv@dividend:	
   509                           ; 1 bytes @ 0x4
   510                           
   511                           
   512                           ; 4 bytes @ 0x4
   513  0074                     	ds	1
   514  0075                     ??_lcd_BusyCheck:	
   515  0075                     ??_lcd_SendLowerNibble:	
   516                           ; 1 bytes @ 0x5
   517                           
   518  0075                     ??_lcd_SendHigherNibble:	
   519                           ; 1 bytes @ 0x5
   520                           
   521  0075                     ??_lcd_SendCmdSignals:	
   522                           ; 1 bytes @ 0x5
   523                           
   524  0075                     ??_lcd_SendDataSignals:	
   525                           ; 1 bytes @ 0x5
   526                           
   527  0075                     ??___ftpack:	
   528                           ; 1 bytes @ 0x5
   529                           
   530  0075                     ??_LCD_SetUp:	
   531                           ; 1 bytes @ 0x5
   532                           
   533  0075                     ADC_GetAdcValue@var_adcChannel_u8:	
   534                           ; 1 bytes @ 0x5
   535                           
   536                           
   537                           ; 1 bytes @ 0x5
   538  0075                     	ds	1
   539  0076                     LCD_SetUp@RS:	
   540  0076                     lcd_BusyCheck@busyflag:	
   541                           ; 1 bytes @ 0x6
   542                           
   543  0076                     lcd_SendHigherNibble@dataByte:	
   544                           ; 1 bytes @ 0x6
   545                           
   546  0076                     lcd_SendLowerNibble@dataByte:	
   547                           ; 1 bytes @ 0x6
   548                           
   549                           
   550                           ; 1 bytes @ 0x6
   551  0076                     	ds	1
   552  0077                     ??_LCD_CmdWrite:	
   553  0077                     ??_lcd_Reset:	
   554                           ; 1 bytes @ 0x7
   555                           
   556  0077                     ??_lcd_DataWrite:	
   557                           ; 1 bytes @ 0x7
   558                           
   559                           
   560                           ; 1 bytes @ 0x7
   561  0077                     	ds	1
   562  0078                     ??___lldiv:	
   563  0078                     ?___awtoft:	
   564                           ; 1 bytes @ 0x8
   565                           
   566  0078                     ?___ftmul:	
   567                           ; 3 bytes @ 0x8
   568                           
   569  0078                     ?___lltoft:	
   570                           ; 3 bytes @ 0x8
   571                           
   572  0078                     ___awtoft@c:	
   573                           ; 3 bytes @ 0x8
   574                           
   575  0078                     ___ftmul@f1:	
   576                           ; 2 bytes @ 0x8
   577                           
   578  0078                     ___lltoft@c:	
   579                           ; 3 bytes @ 0x8
   580                           
   581                           
   582                           ; 4 bytes @ 0x8
   583  0078                     	ds	1
   584  0079                     LCD_CmdWrite@v_lcdCmd_u8:	
   585  0079                     lcd_DataWrite@dataByte:	
   586                           ; 1 bytes @ 0x9
   587                           
   588  0079                     ___lldiv@quotient:	
   589                           ; 1 bytes @ 0x9
   590                           
   591                           
   592                           ; 4 bytes @ 0x9
   593  0079                     	ds	1
   594  007A                     ??_LCD_GoToLine:	
   595  007A                     ??_LCD_GoToNextLine:	
   596                           ; 1 bytes @ 0xA
   597                           
   598                           
   599                           ; 1 bytes @ 0xA
   600  007A                     	ds	1
   601  007B                     ??_LCD_DisplayChar:	
   602  007B                     ??___awtoft:	
   603                           ; 1 bytes @ 0xB
   604                           
   605  007B                     LCD_GoToLine@v_lineNumber_u8:	
   606                           ; 1 bytes @ 0xB
   607                           
   608  007B                     ___ftmul@f2:	
   609                           ; 1 bytes @ 0xB
   610                           
   611                           
   612                           ; 3 bytes @ 0xB
   613  007B                     	ds	1
   614  007C                     ??_LCD_Clear:	
   615  007C                     ?_LCD_Init:	
   616                           ; 1 bytes @ 0xC
   617                           
   618  007C                     ??___lltoft:	
   619                           ; 1 bytes @ 0xC
   620                           
   621  007C                     LCD_Init@v_MaxCharsPerLine_u8:	
   622                           ; 1 bytes @ 0xC
   623                           
   624  007C                     LCD_DisplayChar@v_lcdData_u8:	
   625                           ; 1 bytes @ 0xC
   626                           
   627                           
   628                           ; 1 bytes @ 0xC
   629  007C                     	ds	1
   630  007D                     ??_LCD_Init:	
   631  007D                     ??_LCD_DisplayString:	
   632                           ; 1 bytes @ 0xD
   633                           
   634  007D                     ___awtoft@sign:	
   635                           ; 1 bytes @ 0xD
   636                           
   637  007D                     ___lldiv@counter:	
   638                           ; 1 bytes @ 0xD
   639                           
   640  007D                     ___lltoft@exp:	
   641                           ; 1 bytes @ 0xD
   642                           
   643                           
   644                           ; 1 bytes @ 0xD
   645  007D                     	ds	1
   646  007E                     ??___ftneg:	
   647                           
   648                           	psect	cstackBANK0
   649  0020                     __pcstackBANK0:	
   650                           ; 1 bytes @ 0xE
   651                           
   652  0020                     ?_LCD_SetUp:	
   653  0020                     ?___bmul:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0020                     ??___ftmul:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0020                     ?___ftdiv:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0020                     ?___ftneg:	
   663                           ; 3 bytes @ 0x0
   664                           
   665  0020                     LCD_SetUp@RW:	
   666                           ; 3 bytes @ 0x0
   667                           
   668  0020                     LCD_Init@v_lcdNoOfLines_u8:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0020                     LCD_DisplayString@ptr_stringPointer_u8:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0020                     ___bmul@multiplicand:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0020                     ___ftdiv@f2:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0020                     ___ftneg@f1:	
   681                           ; 3 bytes @ 0x0
   682                           
   683                           
   684                           ; 3 bytes @ 0x0
   685  0020                     	ds	1
   686  0021                     ??___bmul:	
   687  0021                     LCD_SetUp@EN:	
   688                           ; 1 bytes @ 0x1
   689                           
   690                           
   691                           ; 1 bytes @ 0x1
   692  0021                     	ds	1
   693  0022                     LCD_SetUp@D0:	
   694  0022                     ___bmul@product:	
   695                           ; 1 bytes @ 0x2
   696                           
   697                           
   698                           ; 1 bytes @ 0x2
   699  0022                     	ds	1
   700  0023                     ?___ftadd:	
   701  0023                     LCD_SetUp@D1:	
   702                           ; 3 bytes @ 0x3
   703                           
   704  0023                     ___bmul@multiplier:	
   705                           ; 1 bytes @ 0x3
   706                           
   707  0023                     ___ftadd@f1:	
   708                           ; 1 bytes @ 0x3
   709                           
   710  0023                     ___ftdiv@f1:	
   711                           ; 3 bytes @ 0x3
   712                           
   713                           
   714                           ; 3 bytes @ 0x3
   715  0023                     	ds	1
   716  0024                     ?_LCD_DisplayNumber:	
   717  0024                     LCD_SetUp@D2:	
   718                           ; 1 bytes @ 0x4
   719                           
   720  0024                     ___ftmul@exp:	
   721                           ; 1 bytes @ 0x4
   722                           
   723  0024                     LCD_DisplayNumber@v_number_u32:	
   724                           ; 1 bytes @ 0x4
   725                           
   726                           
   727                           ; 4 bytes @ 0x4
   728  0024                     	ds	1
   729  0025                     LCD_SetUp@D3:	
   730  0025                     ___ftmul@f3_as_product:	
   731                           ; 1 bytes @ 0x5
   732                           
   733                           
   734                           ; 3 bytes @ 0x5
   735  0025                     	ds	1
   736  0026                     ??___ftdiv:	
   737  0026                     LCD_SetUp@D4:	
   738                           ; 1 bytes @ 0x6
   739                           
   740  0026                     ___ftadd@f2:	
   741                           ; 1 bytes @ 0x6
   742                           
   743                           
   744                           ; 3 bytes @ 0x6
   745  0026                     	ds	1
   746  0027                     LCD_SetUp@D5:	
   747                           
   748                           ; 1 bytes @ 0x7
   749  0027                     	ds	1
   750  0028                     LCD_SetUp@D6:	
   751  0028                     LCD_DisplayNumber@v_numOfDigitsToDisplay_u8:	
   752                           ; 1 bytes @ 0x8
   753                           
   754  0028                     ___ftmul@cntr:	
   755                           ; 1 bytes @ 0x8
   756                           
   757                           
   758                           ; 1 bytes @ 0x8
   759  0028                     	ds	1
   760  0029                     ??_LCD_DisplayNumber:	
   761  0029                     ??___ftadd:	
   762                           ; 1 bytes @ 0x9
   763                           
   764  0029                     LCD_SetUp@D7:	
   765                           ; 1 bytes @ 0x9
   766                           
   767  0029                     ___ftmul@sign:	
   768                           ; 1 bytes @ 0x9
   769                           
   770                           
   771                           ; 1 bytes @ 0x9
   772  0029                     	ds	1
   773  002A                     ?___fttol:	
   774  002A                     ___ftdiv@cntr:	
   775                           ; 4 bytes @ 0xA
   776                           
   777  002A                     ___fttol@f1:	
   778                           ; 1 bytes @ 0xA
   779                           
   780                           
   781                           ; 3 bytes @ 0xA
   782  002A                     	ds	1
   783  002B                     ___ftdiv@f3:	
   784                           
   785                           ; 3 bytes @ 0xB
   786  002B                     	ds	2
   787  002D                     ___ftadd@sign:	
   788                           
   789                           ; 1 bytes @ 0xD
   790  002D                     	ds	1
   791  002E                     ??___fttol:	
   792  002E                     ___ftadd@exp2:	
   793                           ; 1 bytes @ 0xE
   794                           
   795  002E                     ___ftdiv@exp:	
   796                           ; 1 bytes @ 0xE
   797                           
   798                           
   799                           ; 1 bytes @ 0xE
   800  002E                     	ds	1
   801  002F                     ___ftadd@exp1:	
   802  002F                     ___ftdiv@sign:	
   803                           ; 1 bytes @ 0xF
   804                           
   805                           
   806                           ; 1 bytes @ 0xF
   807  002F                     	ds	3
   808  0032                     ___fttol@sign1:	
   809                           
   810                           ; 1 bytes @ 0x12
   811  0032                     	ds	1
   812  0033                     ___fttol@lval:	
   813                           
   814                           ; 4 bytes @ 0x13
   815  0033                     	ds	2
   816  0035                     LCD_DisplayNumber@a:	
   817                           
   818                           ; 10 bytes @ 0x15
   819  0035                     	ds	2
   820  0037                     ___fttol@exp1:	
   821                           
   822                           ; 1 bytes @ 0x17
   823  0037                     	ds	8
   824  003F                     _LCD_DisplayNumber$213:	
   825                           
   826                           ; 2 bytes @ 0x1F
   827  003F                     	ds	2
   828  0041                     LCD_DisplayNumber@v_numericSystem_u8:	
   829                           
   830                           ; 1 bytes @ 0x21
   831  0041                     	ds	1
   832  0042                     LCD_DisplayNumber@i:	
   833                           
   834                           ; 1 bytes @ 0x22
   835  0042                     	ds	1
   836  0043                     ?_LCD_DisplayFloatNumber:	
   837  0043                     LCD_DisplayFloatNumber@v_floatNum_f32:	
   838                           ; 1 bytes @ 0x23
   839                           
   840                           
   841                           ; 3 bytes @ 0x23
   842  0043                     	ds	3
   843  0046                     ??_LCD_DisplayFloatNumber:	
   844                           
   845                           ; 1 bytes @ 0x26
   846  0046                     	ds	1
   847  0047                     LCD_DisplayFloatNumber@v_temp_u32:	
   848                           
   849                           ; 4 bytes @ 0x27
   850  0047                     	ds	4
   851  004B                     ?_LCD_Printf:	
   852                           
   853                           ; 1 bytes @ 0x2B
   854  004B                     	ds	5
   855  0050                     ??_LCD_Printf:	
   856                           
   857                           ; 1 bytes @ 0x30
   858  0050                     	ds	2
   859  0052                     LCD_Printf@v_floatNum_f32:	
   860                           
   861                           ; 3 bytes @ 0x32
   862  0052                     	ds	3
   863  0055                     LCD_Printf@str:	
   864                           
   865                           ; 1 bytes @ 0x35
   866  0055                     	ds	1
   867  0056                     LCD_Printf@argList:	
   868                           
   869                           ; 1 bytes @ 0x36
   870  0056                     	ds	1
   871  0057                     LCD_Printf@v_num_s32:	
   872                           
   873                           ; 4 bytes @ 0x37
   874  0057                     	ds	4
   875  005B                     LCD_Printf@v_num_s16:	
   876                           
   877                           ; 2 bytes @ 0x3B
   878  005B                     	ds	2
   879  005D                     LCD_Printf@v_num_u32:	
   880                           
   881                           ; 4 bytes @ 0x3D
   882  005D                     	ds	4
   883  0061                     LCD_Printf@v_num_u16:	
   884                           
   885                           ; 2 bytes @ 0x41
   886  0061                     	ds	2
   887  0063                     LCD_Printf@ptr:	
   888                           
   889                           ; 1 bytes @ 0x43
   890  0063                     	ds	1
   891  0064                     LCD_Printf@ch:	
   892                           
   893                           ; 1 bytes @ 0x44
   894  0064                     	ds	1
   895  0065                     LCD_Printf@v_numOfDigitsToDisp_u8:	
   896                           
   897                           ; 1 bytes @ 0x45
   898  0065                     	ds	1
   899  0066                     LCD_Printf@argp:	
   900                           
   901                           ; 1 bytes @ 0x46
   902  0066                     	ds	1
   903  0067                     main@temp:	
   904                           
   905                           ; 3 bytes @ 0x47
   906  0067                     	ds	3
   907  006A                     main@adcValue:	
   908                           
   909                           ; 2 bytes @ 0x4A
   910  006A                     	ds	2
   911                           
   912                           	psect	maintext
   913  0E98                     __pmaintext:	
   914 ;;
   915 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   916 ;;
   917 ;; *************** function _main *****************
   918 ;; Defined at:
   919 ;;		line 41 in file "main.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  temp            3   71[BANK0 ] float 
   924 ;;  adcValue        2   74[BANK0 ] int 
   925 ;; Return value:  Size  Location     Type
   926 ;;                  2  244[None  ] int 
   927 ;; Registers used:
   928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : B00/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   934 ;;      Params:         0       0       0       0       0
   935 ;;      Locals:         0       5       0       0       0
   936 ;;      Temps:          0       0      10       0       0
   937 ;;      Totals:         0       5      10       0       0
   938 ;;Total ram usage:       15 bytes
   939 ;; Hardware stack levels required when called:    9
   940 ;; This function calls:
   941 ;;		_ADC_GetAdcValue
   942 ;;		_ADC_Init
   943 ;;		_LCD_GoToLine
   944 ;;		_LCD_Init
   945 ;;		_LCD_Printf
   946 ;;		_LCD_SetUp
   947 ;;		___awtoft
   948 ;;		___ftdiv
   949 ;; This function is called by:
   950 ;;		Startup code after reset
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           
   955                           ;psect for function _main
   956  0E98                     _main:	
   957                           
   958                           ;main.c: 43: int adcValue;
   959                           ;main.c: 44: float temp;
   960                           ;main.c: 46: ADC_Init();
   961                           
   962                           ;incstack = 0
   963 ;; hardware stack exceeded
   964                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   965  0E98  120A  158A  20E2  120A  158A  	fcall	_ADC_Init
   966                           
   967                           ;main.c: 49: LCD_SetUp(PB_0,PB_1,PB_2,P_NC,P_NC,P_NC,P_NC,PB_4,PB_5,PB_6,PB_7);
   968  0E9D  3009               	movlw	9
   969  0E9E  1683               	bsf	3,5	;RP0=1, select bank1
   970  0E9F  1303               	bcf	3,6	;RP1=0, select bank1
   971  0EA0  00AE               	movwf	??_main^(0+128)
   972  0EA1  082E               	movf	??_main^(0+128),w
   973  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
   974  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
   975  0EA4  00A0               	movwf	LCD_SetUp@RW
   976  0EA5  300A               	movlw	10
   977  0EA6  1683               	bsf	3,5	;RP0=1, select bank1
   978  0EA7  1303               	bcf	3,6	;RP1=0, select bank1
   979  0EA8  00AF               	movwf	(??_main+1)^(0+128)
   980  0EA9  082F               	movf	(??_main+1)^(0+128),w
   981  0EAA  1283               	bcf	3,5	;RP0=0, select bank0
   982  0EAB  1303               	bcf	3,6	;RP1=0, select bank0
   983  0EAC  00A1               	movwf	LCD_SetUp@EN
   984  0EAD  30FF               	movlw	255
   985  0EAE  1683               	bsf	3,5	;RP0=1, select bank1
   986  0EAF  1303               	bcf	3,6	;RP1=0, select bank1
   987  0EB0  00B0               	movwf	(??_main+2)^(0+128)
   988  0EB1  0830               	movf	(??_main+2)^(0+128),w
   989  0EB2  1283               	bcf	3,5	;RP0=0, select bank0
   990  0EB3  1303               	bcf	3,6	;RP1=0, select bank0
   991  0EB4  00A2               	movwf	LCD_SetUp@D0
   992  0EB5  30FF               	movlw	255
   993  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
   994  0EB7  1303               	bcf	3,6	;RP1=0, select bank1
   995  0EB8  00B1               	movwf	(??_main+3)^(0+128)
   996  0EB9  0831               	movf	(??_main+3)^(0+128),w
   997  0EBA  1283               	bcf	3,5	;RP0=0, select bank0
   998  0EBB  1303               	bcf	3,6	;RP1=0, select bank0
   999  0EBC  00A3               	movwf	LCD_SetUp@D1
  1000  0EBD  30FF               	movlw	255
  1001  0EBE  1683               	bsf	3,5	;RP0=1, select bank1
  1002  0EBF  1303               	bcf	3,6	;RP1=0, select bank1
  1003  0EC0  00B2               	movwf	(??_main+4)^(0+128)
  1004  0EC1  0832               	movf	(??_main+4)^(0+128),w
  1005  0EC2  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0EC3  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0EC4  00A4               	movwf	LCD_SetUp@D2
  1008  0EC5  30FF               	movlw	255
  1009  0EC6  1683               	bsf	3,5	;RP0=1, select bank1
  1010  0EC7  1303               	bcf	3,6	;RP1=0, select bank1
  1011  0EC8  00B3               	movwf	(??_main+5)^(0+128)
  1012  0EC9  0833               	movf	(??_main+5)^(0+128),w
  1013  0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0ECC  00A5               	movwf	LCD_SetUp@D3
  1016  0ECD  300C               	movlw	12
  1017  0ECE  1683               	bsf	3,5	;RP0=1, select bank1
  1018  0ECF  1303               	bcf	3,6	;RP1=0, select bank1
  1019  0ED0  00B4               	movwf	(??_main+6)^(0+128)
  1020  0ED1  0834               	movf	(??_main+6)^(0+128),w
  1021  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0ED4  00A6               	movwf	LCD_SetUp@D4
  1024  0ED5  300D               	movlw	13
  1025  0ED6  1683               	bsf	3,5	;RP0=1, select bank1
  1026  0ED7  1303               	bcf	3,6	;RP1=0, select bank1
  1027  0ED8  00B5               	movwf	(??_main+7)^(0+128)
  1028  0ED9  0835               	movf	(??_main+7)^(0+128),w
  1029  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  1030  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  1031  0EDC  00A7               	movwf	LCD_SetUp@D5
  1032  0EDD  300E               	movlw	14
  1033  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  1034  0EDF  1303               	bcf	3,6	;RP1=0, select bank1
  1035  0EE0  00B6               	movwf	(??_main+8)^(0+128)
  1036  0EE1  0836               	movf	(??_main+8)^(0+128),w
  1037  0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0EE4  00A8               	movwf	LCD_SetUp@D6
  1040  0EE5  300F               	movlw	15
  1041  0EE6  1683               	bsf	3,5	;RP0=1, select bank1
  1042  0EE7  1303               	bcf	3,6	;RP1=0, select bank1
  1043  0EE8  00B7               	movwf	(??_main+9)^(0+128)
  1044  0EE9  0837               	movf	(??_main+9)^(0+128),w
  1045  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  1046  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  1047  0EEC  00A9               	movwf	LCD_SetUp@D7
  1048  0EED  3008               	movlw	8
  1049  0EEE  120A  118A  2124  120A  158A  	fcall	_LCD_SetUp
  1050                           
  1051                           ;main.c: 50: LCD_Init(2,16);
  1052  0EF3  3010               	movlw	16
  1053  0EF4  1683               	bsf	3,5	;RP0=1, select bank1
  1054  0EF5  1303               	bcf	3,6	;RP1=0, select bank1
  1055  0EF6  00AE               	movwf	??_main^(0+128)
  1056  0EF7  082E               	movf	??_main^(0+128),w
  1057  0EF8  00FC               	movwf	LCD_Init@v_MaxCharsPerLine_u8
  1058  0EF9  3002               	movlw	2
  1059  0EFA  120A  158A  234F  120A  158A  	fcall	_LCD_Init
  1060  0EFF                     l245:	
  1061                           ;main.c: 52: while(1)
  1062                           
  1063                           
  1064                           ;main.c: 53: {
  1065                           ;main.c: 54: adcValue = ADC_GetAdcValue(0);
  1066  0EFF  3000               	movlw	0
  1067  0F00  120A  158A  21BB  120A  158A  	fcall	_ADC_GetAdcValue
  1068  0F05  0873               	movf	?_ADC_GetAdcValue+1,w
  1069  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0F08  00EB               	movwf	main@adcValue+1
  1072  0F09  0872               	movf	?_ADC_GetAdcValue,w
  1073  0F0A  00EA               	movwf	main@adcValue
  1074                           
  1075                           ;main.c: 61: temp = adcValue/2.0;
  1076  0F0B  3000               	movlw	0
  1077  0F0C  00A0               	movwf	___ftdiv@f2
  1078  0F0D  3000               	movlw	0
  1079  0F0E  00A1               	movwf	___ftdiv@f2+1
  1080  0F0F  3040               	movlw	64
  1081  0F10  00A2               	movwf	___ftdiv@f2+2
  1082  0F11  086B               	movf	main@adcValue+1,w
  1083  0F12  00F9               	movwf	___awtoft@c+1
  1084  0F13  086A               	movf	main@adcValue,w
  1085  0F14  00F8               	movwf	___awtoft@c
  1086  0F15  120A  158A  219A  120A  158A  	fcall	___awtoft
  1087  0F1A  0878               	movf	?___awtoft,w
  1088  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  1089  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0F1D  00A3               	movwf	___ftdiv@f1
  1091  0F1E  0879               	movf	?___awtoft+1,w
  1092  0F1F  00A4               	movwf	___ftdiv@f1+1
  1093  0F20  087A               	movf	?___awtoft+2,w
  1094  0F21  00A5               	movwf	___ftdiv@f1+2
  1095  0F22  120A  158A  2748  120A  158A  	fcall	___ftdiv
  1096  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  1097  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  1098  0F29  0820               	movf	?___ftdiv,w
  1099  0F2A  00E7               	movwf	main@temp
  1100  0F2B  0821               	movf	?___ftdiv+1,w
  1101  0F2C  00E8               	movwf	main@temp+1
  1102  0F2D  0822               	movf	?___ftdiv+2,w
  1103  0F2E  00E9               	movwf	main@temp+2
  1104                           
  1105                           ;main.c: 62: LCD_GoToLine(0);
  1106  0F2F  3000               	movlw	0
  1107  0F30  120A  158A  2131  120A  158A  	fcall	_LCD_GoToLine
  1108                           
  1109                           ;main.c: 63: LCD_Printf("ADC0 Value:%4d \nTemp:%f\n\r",adcValue,temp);
  1110  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0F36  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0F37  086B               	movf	main@adcValue+1,w
  1113  0F38  00CC               	movwf	?_LCD_Printf+1
  1114  0F39  086A               	movf	main@adcValue,w
  1115  0F3A  00CB               	movwf	?_LCD_Printf
  1116  0F3B  0867               	movf	main@temp,w
  1117  0F3C  00CD               	movwf	?_LCD_Printf+2
  1118  0F3D  0868               	movf	main@temp+1,w
  1119  0F3E  00CE               	movwf	?_LCD_Printf+3
  1120  0F3F  0869               	movf	main@temp+2,w
  1121  0F40  00CF               	movwf	?_LCD_Printf+4
  1122  0F41  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1123  0F42  120A  118A  25A2  120A  158A  	fcall	_LCD_Printf
  1124  0F47  2EFF               	goto	l245
  1125  0F48                     __end_of_main:	
  1126                           ;main.c: 64: }
  1127                           ;main.c: 66: return (0);
  1128                           ;	Return value of _main is never used
  1129                           
  1130                           
  1131                           	psect	text1
  1132  0F48                     __ptext1:	
  1133 ;; *************** function ___ftdiv *****************
  1134 ;; Defined at:
  1135 ;;		line 56 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftdiv.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;  f2              3    0[BANK0 ] float 
  1138 ;;  f1              3    3[BANK0 ] float 
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;  f3              3   11[BANK0 ] float 
  1141 ;;  sign            1   15[BANK0 ] unsigned char 
  1142 ;;  exp             1   14[BANK0 ] unsigned char 
  1143 ;;  cntr            1   10[BANK0 ] unsigned char 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  3    0[BANK0 ] float 
  1146 ;; Registers used:
  1147 ;;		wreg, status,2, status,0, pclath, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1153 ;;      Params:         0       6       0       0       0
  1154 ;;      Locals:         0       6       0       0       0
  1155 ;;      Temps:          0       4       0       0       0
  1156 ;;      Totals:         0      16       0       0       0
  1157 ;;Total ram usage:       16 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    1
  1160 ;; This function calls:
  1161 ;;		___ftpack
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           
  1168                           ;psect for function ___ftdiv
  1169  0F48                     ___ftdiv:	
  1170                           
  1171                           ;incstack = 0
  1172                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1173  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  1174  0F49  1303               	bcf	3,6	;RP1=0, select bank0
  1175  0F4A  0823               	movf	___ftdiv@f1,w
  1176  0F4B  00A6               	movwf	??___ftdiv
  1177  0F4C  0824               	movf	___ftdiv@f1+1,w
  1178  0F4D  00A7               	movwf	??___ftdiv+1
  1179  0F4E  0825               	movf	___ftdiv@f1+2,w
  1180  0F4F  00A8               	movwf	??___ftdiv+2
  1181  0F50  1003               	clrc
  1182  0F51  0D27               	rlf	??___ftdiv+1,w
  1183  0F52  0D28               	rlf	??___ftdiv+2,w
  1184  0F53  00A9               	movwf	??___ftdiv+3
  1185  0F54  0829               	movf	??___ftdiv+3,w
  1186  0F55  00AE               	movwf	___ftdiv@exp
  1187  0F56  082E               	movf	___ftdiv@exp,w
  1188  0F57  1D03               	btfss	3,2
  1189  0F58  2F60               	goto	l2390
  1190  0F59  3000               	movlw	0
  1191  0F5A  00A0               	movwf	?___ftdiv
  1192  0F5B  3000               	movlw	0
  1193  0F5C  00A1               	movwf	?___ftdiv+1
  1194  0F5D  3000               	movlw	0
  1195  0F5E  00A2               	movwf	?___ftdiv+2
  1196  0F5F  0008               	return
  1197  0F60                     l2390:	
  1198  0F60  0820               	movf	___ftdiv@f2,w
  1199  0F61  00A6               	movwf	??___ftdiv
  1200  0F62  0821               	movf	___ftdiv@f2+1,w
  1201  0F63  00A7               	movwf	??___ftdiv+1
  1202  0F64  0822               	movf	___ftdiv@f2+2,w
  1203  0F65  00A8               	movwf	??___ftdiv+2
  1204  0F66  1003               	clrc
  1205  0F67  0D27               	rlf	??___ftdiv+1,w
  1206  0F68  0D28               	rlf	??___ftdiv+2,w
  1207  0F69  00A9               	movwf	??___ftdiv+3
  1208  0F6A  0829               	movf	??___ftdiv+3,w
  1209  0F6B  00AF               	movwf	___ftdiv@sign
  1210  0F6C  082F               	movf	___ftdiv@sign,w
  1211  0F6D  1D03               	btfss	3,2
  1212  0F6E  2F76               	goto	l2396
  1213  0F6F  3000               	movlw	0
  1214  0F70  00A0               	movwf	?___ftdiv
  1215  0F71  3000               	movlw	0
  1216  0F72  00A1               	movwf	?___ftdiv+1
  1217  0F73  3000               	movlw	0
  1218  0F74  00A2               	movwf	?___ftdiv+2
  1219  0F75  0008               	return
  1220  0F76                     l2396:	
  1221  0F76  3000               	movlw	0
  1222  0F77  00AB               	movwf	___ftdiv@f3
  1223  0F78  3000               	movlw	0
  1224  0F79  00AC               	movwf	___ftdiv@f3+1
  1225  0F7A  3000               	movlw	0
  1226  0F7B  00AD               	movwf	___ftdiv@f3+2
  1227  0F7C  3089               	movlw	137
  1228  0F7D  072F               	addwf	___ftdiv@sign,w
  1229  0F7E  00A6               	movwf	??___ftdiv
  1230  0F7F  0826               	movf	??___ftdiv,w
  1231  0F80  02AE               	subwf	___ftdiv@exp,f
  1232  0F81  0823               	movf	___ftdiv@f1,w
  1233  0F82  00A6               	movwf	??___ftdiv
  1234  0F83  0824               	movf	___ftdiv@f1+1,w
  1235  0F84  00A7               	movwf	??___ftdiv+1
  1236  0F85  0825               	movf	___ftdiv@f1+2,w
  1237  0F86  00A8               	movwf	??___ftdiv+2
  1238  0F87  3010               	movlw	16
  1239  0F88                     u3825:	
  1240  0F88  1003               	clrc
  1241  0F89  0CA8               	rrf	??___ftdiv+2,f
  1242  0F8A  0CA7               	rrf	??___ftdiv+1,f
  1243  0F8B  0CA6               	rrf	??___ftdiv,f
  1244  0F8C  3EFF               	addlw	-1
  1245  0F8D  1D03               	skipz
  1246  0F8E  2F88               	goto	u3825
  1247  0F8F  0826               	movf	??___ftdiv,w
  1248  0F90  00A9               	movwf	??___ftdiv+3
  1249  0F91  0829               	movf	??___ftdiv+3,w
  1250  0F92  00AF               	movwf	___ftdiv@sign
  1251  0F93  0820               	movf	___ftdiv@f2,w
  1252  0F94  00A6               	movwf	??___ftdiv
  1253  0F95  0821               	movf	___ftdiv@f2+1,w
  1254  0F96  00A7               	movwf	??___ftdiv+1
  1255  0F97  0822               	movf	___ftdiv@f2+2,w
  1256  0F98  00A8               	movwf	??___ftdiv+2
  1257  0F99  3010               	movlw	16
  1258  0F9A                     u3835:	
  1259  0F9A  1003               	clrc
  1260  0F9B  0CA8               	rrf	??___ftdiv+2,f
  1261  0F9C  0CA7               	rrf	??___ftdiv+1,f
  1262  0F9D  0CA6               	rrf	??___ftdiv,f
  1263  0F9E  3EFF               	addlw	-1
  1264  0F9F  1D03               	skipz
  1265  0FA0  2F9A               	goto	u3835
  1266  0FA1  0826               	movf	??___ftdiv,w
  1267  0FA2  00A9               	movwf	??___ftdiv+3
  1268  0FA3  0829               	movf	??___ftdiv+3,w
  1269  0FA4  06AF               	xorwf	___ftdiv@sign,f
  1270  0FA5  3080               	movlw	128
  1271  0FA6  00A6               	movwf	??___ftdiv
  1272  0FA7  0826               	movf	??___ftdiv,w
  1273  0FA8  05AF               	andwf	___ftdiv@sign,f
  1274  0FA9  17A4               	bsf	___ftdiv@f1+1,7
  1275  0FAA  30FF               	movlw	255
  1276  0FAB  05A3               	andwf	___ftdiv@f1,f
  1277  0FAC  30FF               	movlw	255
  1278  0FAD  05A4               	andwf	___ftdiv@f1+1,f
  1279  0FAE  3000               	movlw	0
  1280  0FAF  05A5               	andwf	___ftdiv@f1+2,f
  1281  0FB0  17A1               	bsf	___ftdiv@f2+1,7
  1282  0FB1  30FF               	movlw	255
  1283  0FB2  05A0               	andwf	___ftdiv@f2,f
  1284  0FB3  30FF               	movlw	255
  1285  0FB4  05A1               	andwf	___ftdiv@f2+1,f
  1286  0FB5  3000               	movlw	0
  1287  0FB6  05A2               	andwf	___ftdiv@f2+2,f
  1288  0FB7  3018               	movlw	24
  1289  0FB8  00A6               	movwf	??___ftdiv
  1290  0FB9  0826               	movf	??___ftdiv,w
  1291  0FBA  00AA               	movwf	___ftdiv@cntr
  1292  0FBB                     l2410:	
  1293  0FBB  3001               	movlw	1
  1294  0FBC                     u3845:	
  1295  0FBC  1003               	clrc
  1296  0FBD  0DAB               	rlf	___ftdiv@f3,f
  1297  0FBE  0DAC               	rlf	___ftdiv@f3+1,f
  1298  0FBF  0DAD               	rlf	___ftdiv@f3+2,f
  1299  0FC0  3EFF               	addlw	-1
  1300  0FC1  1D03               	skipz
  1301  0FC2  2FBC               	goto	u3845
  1302  0FC3  0822               	movf	___ftdiv@f2+2,w
  1303  0FC4  0225               	subwf	___ftdiv@f1+2,w
  1304  0FC5  1D03               	skipz
  1305  0FC6  2FCD               	goto	u3855
  1306  0FC7  0821               	movf	___ftdiv@f2+1,w
  1307  0FC8  0224               	subwf	___ftdiv@f1+1,w
  1308  0FC9  1D03               	skipz
  1309  0FCA  2FCD               	goto	u3855
  1310  0FCB  0820               	movf	___ftdiv@f2,w
  1311  0FCC  0223               	subwf	___ftdiv@f1,w
  1312  0FCD                     u3855:	
  1313  0FCD  1C03               	skipc
  1314  0FCE  2FDA               	goto	l2418
  1315  0FCF  0820               	movf	___ftdiv@f2,w
  1316  0FD0  02A3               	subwf	___ftdiv@f1,f
  1317  0FD1  0821               	movf	___ftdiv@f2+1,w
  1318  0FD2  1C03               	skipc
  1319  0FD3  0F21               	incfsz	___ftdiv@f2+1,w
  1320  0FD4  02A4               	subwf	___ftdiv@f1+1,f
  1321  0FD5  0822               	movf	___ftdiv@f2+2,w
  1322  0FD6  1C03               	skipc
  1323  0FD7  0A22               	incf	___ftdiv@f2+2,w
  1324  0FD8  02A5               	subwf	___ftdiv@f1+2,f
  1325  0FD9  142B               	bsf	___ftdiv@f3,0
  1326  0FDA                     l2418:	
  1327  0FDA  3001               	movlw	1
  1328  0FDB                     u3865:	
  1329  0FDB  1003               	clrc
  1330  0FDC  0DA3               	rlf	___ftdiv@f1,f
  1331  0FDD  0DA4               	rlf	___ftdiv@f1+1,f
  1332  0FDE  0DA5               	rlf	___ftdiv@f1+2,f
  1333  0FDF  3EFF               	addlw	-1
  1334  0FE0  1D03               	skipz
  1335  0FE1  2FDB               	goto	u3865
  1336  0FE2  3001               	movlw	1
  1337  0FE3  02AA               	subwf	___ftdiv@cntr,f
  1338  0FE4  1D03               	btfss	3,2
  1339  0FE5  2FBB               	goto	l2410
  1340  0FE6  082B               	movf	___ftdiv@f3,w
  1341  0FE7  00F0               	movwf	___ftpack@arg
  1342  0FE8  082C               	movf	___ftdiv@f3+1,w
  1343  0FE9  00F1               	movwf	___ftpack@arg+1
  1344  0FEA  082D               	movf	___ftdiv@f3+2,w
  1345  0FEB  00F2               	movwf	___ftpack@arg+2
  1346  0FEC  082E               	movf	___ftdiv@exp,w
  1347  0FED  00A6               	movwf	??___ftdiv
  1348  0FEE  0826               	movf	??___ftdiv,w
  1349  0FEF  00F3               	movwf	___ftpack@exp
  1350  0FF0  082F               	movf	___ftdiv@sign,w
  1351  0FF1  00A7               	movwf	??___ftdiv+1
  1352  0FF2  0827               	movf	??___ftdiv+1,w
  1353  0FF3  00F4               	movwf	___ftpack@sign
  1354  0FF4  120A  158A  23FE   	fcall	___ftpack
  1355  0FF7  0870               	movf	?___ftpack,w
  1356  0FF8  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0FF9  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0FFA  00A0               	movwf	?___ftdiv
  1359  0FFB  0871               	movf	?___ftpack+1,w
  1360  0FFC  00A1               	movwf	?___ftdiv+1
  1361  0FFD  0872               	movf	?___ftpack+2,w
  1362  0FFE  00A2               	movwf	?___ftdiv+2
  1363  0FFF  0008               	return
  1364  1000                     __end_of___ftdiv:	
  1365                           
  1366                           	psect	text2
  1367  099A                     __ptext2:	
  1368 ;; *************** function ___awtoft *****************
  1369 ;; Defined at:
  1370 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\awtoft.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  c               2    8[COMMON] int 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  sign            1   13[COMMON] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  3    8[COMMON] float 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0, pclath, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1384 ;;      Params:         3       0       0       0       0
  1385 ;;      Locals:         1       0       0       0       0
  1386 ;;      Temps:          2       0       0       0       0
  1387 ;;      Totals:         6       0       0       0       0
  1388 ;;Total ram usage:        6 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    1
  1391 ;; This function calls:
  1392 ;;		___ftpack
  1393 ;; This function is called by:
  1394 ;;		_main
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           
  1399                           ;psect for function ___awtoft
  1400  099A                     ___awtoft:	
  1401                           
  1402                           ;incstack = 0
  1403                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1404  099A  01FD               	clrf	___awtoft@sign
  1405  099B  1FF9               	btfss	___awtoft@c+1,7
  1406  099C  29A4               	goto	l2380
  1407  099D  09F8               	comf	___awtoft@c,f
  1408  099E  09F9               	comf	___awtoft@c+1,f
  1409  099F  0AF8               	incf	___awtoft@c,f
  1410  09A0  1903               	skipnz
  1411  09A1  0AF9               	incf	___awtoft@c+1,f
  1412  09A2  01FD               	clrf	___awtoft@sign
  1413  09A3  0AFD               	incf	___awtoft@sign,f
  1414  09A4                     l2380:	
  1415  09A4  0878               	movf	___awtoft@c,w
  1416  09A5  00F0               	movwf	___ftpack@arg
  1417  09A6  0879               	movf	___awtoft@c+1,w
  1418  09A7  00F1               	movwf	___ftpack@arg+1
  1419  09A8  01F2               	clrf	___ftpack@arg+2
  1420  09A9  308E               	movlw	142
  1421  09AA  00FB               	movwf	??___awtoft
  1422  09AB  087B               	movf	??___awtoft,w
  1423  09AC  00F3               	movwf	___ftpack@exp
  1424  09AD  087D               	movf	___awtoft@sign,w
  1425  09AE  00FC               	movwf	??___awtoft+1
  1426  09AF  087C               	movf	??___awtoft+1,w
  1427  09B0  00F4               	movwf	___ftpack@sign
  1428  09B1  120A  158A  23FE   	fcall	___ftpack
  1429  09B4  0870               	movf	?___ftpack,w
  1430  09B5  00F8               	movwf	?___awtoft
  1431  09B6  0871               	movf	?___ftpack+1,w
  1432  09B7  00F9               	movwf	?___awtoft+1
  1433  09B8  0872               	movf	?___ftpack+2,w
  1434  09B9  00FA               	movwf	?___awtoft+2
  1435  09BA  0008               	return
  1436  09BB                     __end_of___awtoft:	
  1437                           
  1438                           	psect	text3
  1439  0124                     __ptext3:	
  1440 ;; *************** function _LCD_SetUp *****************
  1441 ;; Defined at:
  1442 ;;		line 135 in file "../00-libfiles/lcd.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;  RS              1    wreg     enum E33
  1445 ;;  RW              1    0[BANK0 ] enum E33
  1446 ;;  EN              1    1[BANK0 ] enum E33
  1447 ;;  D0              1    2[BANK0 ] enum E33
  1448 ;;  D1              1    3[BANK0 ] enum E33
  1449 ;;  D2              1    4[BANK0 ] enum E33
  1450 ;;  D3              1    5[BANK0 ] enum E33
  1451 ;;  D4              1    6[BANK0 ] enum E33
  1452 ;;  D5              1    7[BANK0 ] enum E33
  1453 ;;  D6              1    8[BANK0 ] enum E33
  1454 ;;  D7              1    9[BANK0 ] enum E33
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  RS              1    6[COMMON] enum E33
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1466 ;;      Params:         0      10       0       0       0
  1467 ;;      Locals:         1       0       0       0       0
  1468 ;;      Temps:          1       0       0       0       0
  1469 ;;      Totals:         2      10       0       0       0
  1470 ;;Total ram usage:       12 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    1
  1473 ;; This function calls:
  1474 ;;		_GPIO_PinDirection
  1475 ;; This function is called by:
  1476 ;;		_main
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           
  1481                           ;psect for function _LCD_SetUp
  1482  0124                     _LCD_SetUp:	
  1483                           
  1484                           ;incstack = 0
  1485                           ; Regs used in _LCD_SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1486                           ;LCD_SetUp@RS stored from wreg
  1487  0124  00F6               	movwf	LCD_SetUp@RS
  1488                           
  1489                           ;lcd.c: 148: LCDConfig.RS = RS;
  1490  0125  0876               	movf	LCD_SetUp@RS,w
  1491  0126  00F5               	movwf	??_LCD_SetUp
  1492  0127  0875               	movf	??_LCD_SetUp,w
  1493  0128  1683               	bsf	3,5	;RP0=1, select bank1
  1494  0129  1303               	bcf	3,6	;RP1=0, select bank1
  1495  012A  00A3               	movwf	(_LCDConfig^(0+128)+3)
  1496                           
  1497                           ;lcd.c: 149: LCDConfig.RW = RW;
  1498  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1499  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1500  012D  0820               	movf	LCD_SetUp@RW,w
  1501  012E  00F5               	movwf	??_LCD_SetUp
  1502  012F  0875               	movf	??_LCD_SetUp,w
  1503  0130  1683               	bsf	3,5	;RP0=1, select bank1
  1504  0131  1303               	bcf	3,6	;RP1=0, select bank1
  1505  0132  00A4               	movwf	(_LCDConfig^(0+128)+4)
  1506                           
  1507                           ;lcd.c: 150: LCDConfig.EN = EN;
  1508  0133  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0134  1303               	bcf	3,6	;RP1=0, select bank0
  1510  0135  0821               	movf	LCD_SetUp@EN,w
  1511  0136  00F5               	movwf	??_LCD_SetUp
  1512  0137  0875               	movf	??_LCD_SetUp,w
  1513  0138  1683               	bsf	3,5	;RP0=1, select bank1
  1514  0139  1303               	bcf	3,6	;RP1=0, select bank1
  1515  013A  00A5               	movwf	(_LCDConfig^(0+128)+5)
  1516                           
  1517                           ;lcd.c: 152: LCDConfig.D0 = D0;
  1518  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1519  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1520  013D  0822               	movf	LCD_SetUp@D0,w
  1521  013E  00F5               	movwf	??_LCD_SetUp
  1522  013F  0875               	movf	??_LCD_SetUp,w
  1523  0140  1683               	bsf	3,5	;RP0=1, select bank1
  1524  0141  1303               	bcf	3,6	;RP1=0, select bank1
  1525  0142  00A6               	movwf	(_LCDConfig^(0+128)+6)
  1526                           
  1527                           ;lcd.c: 153: LCDConfig.D1 = D1;
  1528  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0145  0823               	movf	LCD_SetUp@D1,w
  1531  0146  00F5               	movwf	??_LCD_SetUp
  1532  0147  0875               	movf	??_LCD_SetUp,w
  1533  0148  1683               	bsf	3,5	;RP0=1, select bank1
  1534  0149  1303               	bcf	3,6	;RP1=0, select bank1
  1535  014A  00A7               	movwf	(_LCDConfig^(0+128)+7)
  1536                           
  1537                           ;lcd.c: 154: LCDConfig.D2 = D2;
  1538  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1539  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1540  014D  0824               	movf	LCD_SetUp@D2,w
  1541  014E  00F5               	movwf	??_LCD_SetUp
  1542  014F  0875               	movf	??_LCD_SetUp,w
  1543  0150  1683               	bsf	3,5	;RP0=1, select bank1
  1544  0151  1303               	bcf	3,6	;RP1=0, select bank1
  1545  0152  00A8               	movwf	(_LCDConfig^(0+128)+8)
  1546                           
  1547                           ;lcd.c: 155: LCDConfig.D3 = D3;
  1548  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0155  0825               	movf	LCD_SetUp@D3,w
  1551  0156  00F5               	movwf	??_LCD_SetUp
  1552  0157  0875               	movf	??_LCD_SetUp,w
  1553  0158  1683               	bsf	3,5	;RP0=1, select bank1
  1554  0159  1303               	bcf	3,6	;RP1=0, select bank1
  1555  015A  00A9               	movwf	(_LCDConfig^(0+128)+9)
  1556                           
  1557                           ;lcd.c: 156: LCDConfig.D4 = D4;
  1558  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1559  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1560  015D  0826               	movf	LCD_SetUp@D4,w
  1561  015E  00F5               	movwf	??_LCD_SetUp
  1562  015F  0875               	movf	??_LCD_SetUp,w
  1563  0160  1683               	bsf	3,5	;RP0=1, select bank1
  1564  0161  1303               	bcf	3,6	;RP1=0, select bank1
  1565  0162  00AA               	movwf	(_LCDConfig^(0+128)+10)
  1566                           
  1567                           ;lcd.c: 157: LCDConfig.D5 = D5;
  1568  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1569  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1570  0165  0827               	movf	LCD_SetUp@D5,w
  1571  0166  00F5               	movwf	??_LCD_SetUp
  1572  0167  0875               	movf	??_LCD_SetUp,w
  1573  0168  1683               	bsf	3,5	;RP0=1, select bank1
  1574  0169  1303               	bcf	3,6	;RP1=0, select bank1
  1575  016A  00AB               	movwf	(_LCDConfig^(0+128)+11)
  1576                           
  1577                           ;lcd.c: 158: LCDConfig.D6 = D6;
  1578  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1579  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1580  016D  0828               	movf	LCD_SetUp@D6,w
  1581  016E  00F5               	movwf	??_LCD_SetUp
  1582  016F  0875               	movf	??_LCD_SetUp,w
  1583  0170  1683               	bsf	3,5	;RP0=1, select bank1
  1584  0171  1303               	bcf	3,6	;RP1=0, select bank1
  1585  0172  00AC               	movwf	(_LCDConfig^(0+128)+12)
  1586                           
  1587                           ;lcd.c: 159: LCDConfig.D7 = D7;
  1588  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1589  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1590  0175  0829               	movf	LCD_SetUp@D7,w
  1591  0176  00F5               	movwf	??_LCD_SetUp
  1592  0177  0875               	movf	??_LCD_SetUp,w
  1593  0178  1683               	bsf	3,5	;RP0=1, select bank1
  1594  0179  1303               	bcf	3,6	;RP1=0, select bank1
  1595  017A  00AD               	movwf	(_LCDConfig^(0+128)+13)
  1596                           
  1597                           ;lcd.c: 162: if((D0 == P_NC) || (D1 == P_NC) || (D2 == P_NC) || (D3 == P_NC))
  1598  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1599  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1600  017D  0A22               	incf	LCD_SetUp@D0,w
  1601  017E  1903               	btfsc	3,2
  1602  017F  2988               	goto	l2192
  1603  0180  0A23               	incf	LCD_SetUp@D1,w
  1604  0181  1903               	btfsc	3,2
  1605  0182  2988               	goto	l2192
  1606  0183  0A24               	incf	LCD_SetUp@D2,w
  1607  0184  1D03               	btfss	3,2
  1608  0185  0A25               	incf	LCD_SetUp@D3,w
  1609  0186  1D03               	btfss	3,2
  1610  0187  298F               	goto	l2194
  1611  0188                     l2192:	
  1612                           
  1613                           ;lcd.c: 163: {
  1614                           ;lcd.c: 164: LCDConfig.v_LcdMode_U8 = 4;
  1615  0188  3004               	movlw	4
  1616  0189  00F5               	movwf	??_LCD_SetUp
  1617  018A  0875               	movf	??_LCD_SetUp,w
  1618  018B  1683               	bsf	3,5	;RP0=1, select bank1
  1619  018C  1303               	bcf	3,6	;RP1=0, select bank1
  1620  018D  00A2               	movwf	(_LCDConfig^(0+128)+2)
  1621                           
  1622                           ;lcd.c: 165: }
  1623  018E  29B9               	goto	l2204
  1624  018F                     l2194:	
  1625                           
  1626                           ;lcd.c: 166: else
  1627                           ;lcd.c: 167: {
  1628                           ;lcd.c: 168: LCDConfig.v_LcdMode_U8 = 8;
  1629  018F  3008               	movlw	8
  1630  0190  00F5               	movwf	??_LCD_SetUp
  1631  0191  0875               	movf	??_LCD_SetUp,w
  1632  0192  1683               	bsf	3,5	;RP0=1, select bank1
  1633  0193  1303               	bcf	3,6	;RP1=0, select bank1
  1634  0194  00A2               	movwf	(_LCDConfig^(0+128)+2)
  1635                           
  1636                           ;lcd.c: 169: GPIO_PinDirection(D0,0x00u);
  1637  0195  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1638  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1639  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1640  0198  0822               	movf	LCD_SetUp@D0,w
  1641  0199  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1642                           
  1643                           ;lcd.c: 170: GPIO_PinDirection(D1,0x00u);
  1644  019E  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1645  019F  1283               	bcf	3,5	;RP0=0, select bank0
  1646  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1647  01A1  0823               	movf	LCD_SetUp@D1,w
  1648  01A2  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1649                           
  1650                           ;lcd.c: 171: GPIO_PinDirection(D2,0x00u);
  1651  01A7  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1652  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1653  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1654  01AA  0824               	movf	LCD_SetUp@D2,w
  1655  01AB  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1656                           
  1657                           ;lcd.c: 172: GPIO_PinDirection(D3,0x00u);
  1658  01B0  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1659  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1660  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1661  01B3  0825               	movf	LCD_SetUp@D3,w
  1662  01B4  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1663  01B9                     l2204:	
  1664                           
  1665                           ;lcd.c: 173: }
  1666                           ;lcd.c: 176: GPIO_PinDirection(RS,0x00u);
  1667  01B9  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1668  01BA  0876               	movf	LCD_SetUp@RS,w
  1669  01BB  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1670                           
  1671                           ;lcd.c: 177: GPIO_PinDirection(RW,0x00u);
  1672  01C0  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1673  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1674  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1675  01C3  0820               	movf	LCD_SetUp@RW,w
  1676  01C4  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1677                           
  1678                           ;lcd.c: 178: GPIO_PinDirection(EN,0x00u);
  1679  01C9  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1680  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1681  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1682  01CC  0821               	movf	LCD_SetUp@EN,w
  1683  01CD  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1684                           
  1685                           ;lcd.c: 180: GPIO_PinDirection(D4,0x00u);
  1686  01D2  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1687  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1688  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1689  01D5  0826               	movf	LCD_SetUp@D4,w
  1690  01D6  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1691                           
  1692                           ;lcd.c: 181: GPIO_PinDirection(D5,0x00u);
  1693  01DB  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1694  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1695  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1696  01DE  0827               	movf	LCD_SetUp@D5,w
  1697  01DF  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1698                           
  1699                           ;lcd.c: 182: GPIO_PinDirection(D6,0x00u);
  1700  01E4  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1701  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1702  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1703  01E7  0828               	movf	LCD_SetUp@D6,w
  1704  01E8  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1705                           
  1706                           ;lcd.c: 183: GPIO_PinDirection(D7,0x00u);
  1707  01ED  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1708  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1709  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1710  01F0  0829               	movf	LCD_SetUp@D7,w
  1711  01F1  120A  118A  21F5   	fcall	_GPIO_PinDirection
  1712  01F4  0008               	return
  1713  01F5                     __end_of_LCD_SetUp:	
  1714                           
  1715                           	psect	text4
  1716  05A2                     __ptext4:	
  1717 ;; *************** function _LCD_Printf *****************
  1718 ;; Defined at:
  1719 ;;		line 675 in file "../00-libfiles/lcd.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  argList         1    wreg     PTR const unsigned char 
  1722 ;;		 -> STR_1(26), 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  argList         1   54[BANK0 ] PTR const unsigned char 
  1725 ;;		 -> STR_1(26), 
  1726 ;;  v_num_u32       4   61[BANK0 ] unsigned long 
  1727 ;;  v_num_s32       4   55[BANK0 ] long 
  1728 ;;  v_floatNum_f    3   50[BANK0 ] long 
  1729 ;;  v_num_u16       2   65[BANK0 ] unsigned int 
  1730 ;;  v_num_s16       2   59[BANK0 ] int 
  1731 ;;  argp            1   70[BANK0 ] PTR void [1]
  1732 ;;		 -> ?_LCD_Printf(1), 
  1733 ;;  v_numOfDigit    1   69[BANK0 ] unsigned char 
  1734 ;;  ch              1   68[BANK0 ] unsigned char 
  1735 ;;  ptr             1   67[BANK0 ] PTR const unsigned char 
  1736 ;;		 -> STR_1(26), 
  1737 ;;  str             1   53[BANK0 ] PTR unsigned char 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       5       0       0       0
  1748 ;;      Locals:         0      21       0       0       0
  1749 ;;      Temps:          0       2       0       0       0
  1750 ;;      Totals:         0      28       0       0       0
  1751 ;;Total ram usage:       28 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    8
  1754 ;; This function calls:
  1755 ;;		_LCD_DisplayChar
  1756 ;;		_LCD_DisplayFloatNumber
  1757 ;;		_LCD_DisplayNumber
  1758 ;;		_LCD_DisplayString
  1759 ;;		___bmul
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function _LCD_Printf
  1767  05A2                     _LCD_Printf:	
  1768                           
  1769                           ;incstack = 0
  1770 ;; hardware stack exceeded
  1771                           ; Regs used in _LCD_Printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1772                           ;LCD_Printf@argList stored from wreg
  1773  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  1774  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  1775  05A4  00D6               	movwf	LCD_Printf@argList
  1776                           
  1777                           ;lcd.c: 677: const char *ptr;
  1778                           ;lcd.c: 678: va_list argp;
  1779                           ;lcd.c: 679: sint16_t v_num_s16;
  1780                           ;lcd.c: 680: sint32_t v_num_s32;
  1781                           ;lcd.c: 681: uint16_t v_num_u16;
  1782                           ;lcd.c: 682: uint32_t v_num_u32;
  1783                           ;lcd.c: 683: char *str;
  1784                           ;lcd.c: 684: char ch;
  1785                           ;lcd.c: 685: uint8_t v_numOfDigitsToDisp_u8;
  1786                           ;lcd.c: 687: double v_floatNum_f32;
  1787                           ;lcd.c: 690: *argp = __va_start();
  1788  05A5  304B               	movlw	(low (?_LCD_Printf| 0))& (0+255)
  1789  05A6  00D0               	movwf	??_LCD_Printf
  1790  05A7  0850               	movf	??_LCD_Printf,w
  1791  05A8  00E6               	movwf	LCD_Printf@argp
  1792                           
  1793                           ;lcd.c: 693: for(ptr = argList; *ptr != '\0'; ptr++)
  1794  05A9  0856               	movf	LCD_Printf@argList,w
  1795  05AA  00D0               	movwf	??_LCD_Printf
  1796  05AB  0850               	movf	??_LCD_Printf,w
  1797  05AC  00E3               	movwf	LCD_Printf@ptr
  1798  05AD                     l2354:	
  1799  05AD  0863               	movf	LCD_Printf@ptr,w
  1800  05AE  0084               	movwf	4
  1801  05AF  120A  158A  2000  120A  118A  	fcall	stringdir
  1802  05B4  3A00               	xorlw	0
  1803  05B5  1903               	btfsc	3,2
  1804  05B6  0008               	return
  1805                           
  1806                           ;lcd.c: 694: {
  1807                           ;lcd.c: 696: ch= *ptr;
  1808  05B7  0863               	movf	LCD_Printf@ptr,w
  1809  05B8  0084               	movwf	4
  1810  05B9  120A  158A  2000  120A  118A  	fcall	stringdir
  1811  05BE  00D0               	movwf	??_LCD_Printf
  1812  05BF  0850               	movf	??_LCD_Printf,w
  1813  05C0  00E4               	movwf	LCD_Printf@ch
  1814                           
  1815                           ;lcd.c: 697: if(ch == '%')
  1816  05C1  3025               	movlw	37
  1817  05C2  0664               	xorwf	LCD_Printf@ch,w
  1818  05C3  1D03               	btfss	3,2
  1819  05C4  2FC7               	goto	l2350
  1820                           
  1821                           ;lcd.c: 698: {
  1822                           ;lcd.c: 699: ptr++;
  1823  05C5  3001               	movlw	1
  1824  05C6  00D0               	movwf	??_LCD_Printf
  1825  05C7  0850               	movf	??_LCD_Printf,w
  1826  05C8  07E3               	addwf	LCD_Printf@ptr,f
  1827                           
  1828                           ;lcd.c: 700: ch = *ptr;
  1829  05C9  0863               	movf	LCD_Printf@ptr,w
  1830  05CA  0084               	movwf	4
  1831  05CB  120A  158A  2000  120A  118A  	fcall	stringdir
  1832  05D0  00D0               	movwf	??_LCD_Printf
  1833  05D1  0850               	movf	??_LCD_Printf,w
  1834  05D2  00E4               	movwf	LCD_Printf@ch
  1835                           
  1836                           ;lcd.c: 701: if((ch>=0x30) && (ch<=0x39))
  1837  05D3  3030               	movlw	48
  1838  05D4  0264               	subwf	LCD_Printf@ch,w
  1839  05D5  1C03               	skipc
  1840  05D6  2E04               	goto	l2258
  1841  05D7  303A               	movlw	58
  1842  05D8  0264               	subwf	LCD_Printf@ch,w
  1843  05D9  1803               	skipnc
  1844  05DA  2E04               	goto	l2258
  1845                           
  1846                           ;lcd.c: 702: {
  1847                           ;lcd.c: 703: v_numOfDigitsToDisp_u8 = 0;
  1848  05DB  01E5               	clrf	LCD_Printf@v_numOfDigitsToDisp_u8
  1849  05DC                     l2254:	
  1850                           ;lcd.c: 704: while((ch>=0x30) && (ch<=0x39))
  1851                           
  1852  05DC  3030               	movlw	48
  1853  05DD  0264               	subwf	LCD_Printf@ch,w
  1854  05DE  1C03               	skipc
  1855  05DF  2F95               	goto	l2348
  1856  05E0  303A               	movlw	58
  1857  05E1  0264               	subwf	LCD_Printf@ch,w
  1858  05E2  1803               	btfsc	3,0
  1859  05E3  2F95               	goto	l2348
  1860                           
  1861                           ;lcd.c: 705: {
  1862                           ;lcd.c: 706: v_numOfDigitsToDisp_u8 = (v_numOfDigitsToDisp_u8 * 10) + (ch-0x30);
  1863  05E4  300A               	movlw	10
  1864  05E5  00D0               	movwf	??_LCD_Printf
  1865  05E6  0850               	movf	??_LCD_Printf,w
  1866  05E7  00A0               	movwf	___bmul@multiplicand
  1867  05E8  0865               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1868  05E9  120A  158A  210A  120A  118A  	fcall	___bmul
  1869  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  1870  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  1871  05F0  0764               	addwf	LCD_Printf@ch,w
  1872  05F1  3ED0               	addlw	208
  1873  05F2  00D1               	movwf	??_LCD_Printf+1
  1874  05F3  0851               	movf	??_LCD_Printf+1,w
  1875  05F4  00E5               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  1876                           
  1877                           ;lcd.c: 707: ptr++;
  1878  05F5  3001               	movlw	1
  1879  05F6  00D0               	movwf	??_LCD_Printf
  1880  05F7  0850               	movf	??_LCD_Printf,w
  1881  05F8  07E3               	addwf	LCD_Printf@ptr,f
  1882                           
  1883                           ;lcd.c: 708: ch = *ptr;
  1884  05F9  0863               	movf	LCD_Printf@ptr,w
  1885  05FA  0084               	movwf	4
  1886  05FB  120A  158A  2000  120A  118A  	fcall	stringdir
  1887  0600  00D0               	movwf	??_LCD_Printf
  1888  0601  0850               	movf	??_LCD_Printf,w
  1889  0602  00E4               	movwf	LCD_Printf@ch
  1890  0603  2DDC               	goto	l2254
  1891  0604                     l2258:	
  1892                           ;lcd.c: 709: }
  1893                           ;lcd.c: 710: }
  1894                           
  1895                           
  1896                           ;lcd.c: 711: else
  1897                           ;lcd.c: 712: {
  1898                           ;lcd.c: 713: v_numOfDigitsToDisp_u8 = 0xffu;
  1899  0604  30FF               	movlw	255
  1900  0605  00D0               	movwf	??_LCD_Printf
  1901  0606  0850               	movf	??_LCD_Printf,w
  1902  0607  00E5               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  1903                           
  1904                           ;lcd.c: 714: }
  1905                           ;lcd.c: 717: switch(ch)
  1906  0608  2F95               	goto	l2348
  1907  0609                     l2260:	
  1908                           ;lcd.c: 718: {
  1909                           ;lcd.c: 719: case 'C':
  1910                           
  1911                           
  1912                           ;lcd.c: 720: case 'c':
  1913                           ;lcd.c: 721: ch = (*(int *)__va_arg((*(int **)argp), (int)0));
  1914  0609  0866               	movf	LCD_Printf@argp,w
  1915  060A  0084               	movwf	4
  1916  060B  1383               	bcf	3,7	;select IRP bank0
  1917  060C  0800               	movf	0,w
  1918  060D  00D0               	movwf	??_LCD_Printf
  1919  060E  0850               	movf	??_LCD_Printf,w
  1920  060F  00E4               	movwf	LCD_Printf@ch
  1921  0610  3002               	movlw	2
  1922  0611  00D0               	movwf	??_LCD_Printf
  1923  0612  0850               	movf	??_LCD_Printf,w
  1924  0613  07E6               	addwf	LCD_Printf@argp,f
  1925  0614  2FC7               	goto	l2350
  1926  0615                     l2266:	
  1927                           ;lcd.c: 725: case 'd':
  1928                           
  1929                           ;lcd.c: 723: break;
  1930                           
  1931                           ;lcd.c: 722: LCD_DisplayChar(ch);
  1932                           
  1933                           
  1934                           ;lcd.c: 726: v_num_s16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  1935  0615  1283               	bcf	3,5	;RP0=0, select bank0
  1936  0616  1303               	bcf	3,6	;RP1=0, select bank0
  1937  0617  0866               	movf	LCD_Printf@argp,w
  1938  0618  0084               	movwf	4
  1939  0619  1383               	bcf	3,7	;select IRP bank0
  1940  061A  0800               	movf	0,w
  1941  061B  00DB               	movwf	LCD_Printf@v_num_s16
  1942  061C  0A84               	incf	4,f
  1943  061D  0800               	movf	0,w
  1944  061E  00DC               	movwf	LCD_Printf@v_num_s16+1
  1945  061F  3002               	movlw	2
  1946  0620  00D0               	movwf	??_LCD_Printf
  1947  0621  0850               	movf	??_LCD_Printf,w
  1948  0622  07E6               	addwf	LCD_Printf@argp,f
  1949                           
  1950                           ;lcd.c: 727: if(v_num_s16<0)
  1951  0623  1FDC               	btfss	LCD_Printf@v_num_s16+1,7
  1952  0624  2E30               	goto	l2276
  1953                           
  1954                           ;lcd.c: 728: {
  1955                           ;lcd.c: 729: v_num_s16 = -v_num_s16;
  1956  0625  09DB               	comf	LCD_Printf@v_num_s16,f
  1957  0626  09DC               	comf	LCD_Printf@v_num_s16+1,f
  1958  0627  0ADB               	incf	LCD_Printf@v_num_s16,f
  1959  0628  1903               	skipnz
  1960  0629  0ADC               	incf	LCD_Printf@v_num_s16+1,f
  1961                           
  1962                           ;lcd.c: 730: LCD_DisplayChar('-');
  1963  062A  302D               	movlw	45
  1964  062B  120A  158A  2179  120A  118A  	fcall	_LCD_DisplayChar
  1965  0630                     l2276:	
  1966                           
  1967                           ;lcd.c: 731: }
  1968                           ;lcd.c: 732: LCD_DisplayNumber(10u,v_num_s16,v_numOfDigitsToDisp_u8);
  1969  0630  1283               	bcf	3,5	;RP0=0, select bank0
  1970  0631  1303               	bcf	3,6	;RP1=0, select bank0
  1971  0632  085B               	movf	LCD_Printf@v_num_s16,w
  1972  0633  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1973  0634  085C               	movf	LCD_Printf@v_num_s16+1,w
  1974  0635  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1975  0636  3000               	movlw	0
  1976  0637  1BA5               	btfsc	LCD_DisplayNumber@v_number_u32+1,7
  1977  0638  30FF               	movlw	255
  1978  0639  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  1979  063A  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  1980  063B  0865               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1981  063C  00D0               	movwf	??_LCD_Printf
  1982  063D  0850               	movf	??_LCD_Printf,w
  1983  063E  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1984  063F  300A               	movlw	10
  1985  0640  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  1986                           
  1987                           ;lcd.c: 733: break;
  1988  0645  2FCD               	goto	l2352
  1989  0646                     l2278:	
  1990                           ;lcd.c: 735: case 'D':
  1991                           
  1992                           
  1993                           ;lcd.c: 736: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
  1994  0646  1283               	bcf	3,5	;RP0=0, select bank0
  1995  0647  1303               	bcf	3,6	;RP1=0, select bank0
  1996  0648  0866               	movf	LCD_Printf@argp,w
  1997  0649  0084               	movwf	4
  1998  064A  1383               	bcf	3,7	;select IRP bank0
  1999  064B  0800               	movf	0,w
  2000  064C  00D7               	movwf	LCD_Printf@v_num_s32
  2001  064D  0A84               	incf	4,f
  2002  064E  0800               	movf	0,w
  2003  064F  00D8               	movwf	LCD_Printf@v_num_s32+1
  2004  0650  0A84               	incf	4,f
  2005  0651  0800               	movf	0,w
  2006  0652  00D9               	movwf	LCD_Printf@v_num_s32+2
  2007  0653  0A84               	incf	4,f
  2008  0654  0800               	movf	0,w
  2009  0655  00DA               	movwf	LCD_Printf@v_num_s32+3
  2010  0656  3004               	movlw	4
  2011  0657  00D0               	movwf	??_LCD_Printf
  2012  0658  0850               	movf	??_LCD_Printf,w
  2013  0659  07E6               	addwf	LCD_Printf@argp,f
  2014                           
  2015                           ;lcd.c: 737: if(v_num_s32<0)
  2016  065A  1FDA               	btfss	LCD_Printf@v_num_s32+3,7
  2017  065B  2E6D               	goto	l149
  2018                           
  2019                           ;lcd.c: 738: {
  2020                           ;lcd.c: 739: v_num_s32 = -v_num_s32;
  2021  065C  09D7               	comf	LCD_Printf@v_num_s32,f
  2022  065D  09D8               	comf	LCD_Printf@v_num_s32+1,f
  2023  065E  09D9               	comf	LCD_Printf@v_num_s32+2,f
  2024  065F  09DA               	comf	LCD_Printf@v_num_s32+3,f
  2025  0660  0AD7               	incf	LCD_Printf@v_num_s32,f
  2026  0661  1903               	skipnz
  2027  0662  0AD8               	incf	LCD_Printf@v_num_s32+1,f
  2028  0663  1903               	skipnz
  2029  0664  0AD9               	incf	LCD_Printf@v_num_s32+2,f
  2030  0665  1903               	skipnz
  2031  0666  0ADA               	incf	LCD_Printf@v_num_s32+3,f
  2032                           
  2033                           ;lcd.c: 740: LCD_DisplayChar('-');
  2034  0667  302D               	movlw	45
  2035  0668  120A  158A  2179  120A  118A  	fcall	_LCD_DisplayChar
  2036  066D                     l149:	
  2037                           
  2038                           ;lcd.c: 741: }
  2039                           ;lcd.c: 742: LCD_DisplayNumber(10u,v_num_s32,v_numOfDigitsToDisp_u8);
  2040  066D  1283               	bcf	3,5	;RP0=0, select bank0
  2041  066E  1303               	bcf	3,6	;RP1=0, select bank0
  2042  066F  085A               	movf	LCD_Printf@v_num_s32+3,w
  2043  0670  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2044  0671  0859               	movf	LCD_Printf@v_num_s32+2,w
  2045  0672  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2046  0673  0858               	movf	LCD_Printf@v_num_s32+1,w
  2047  0674  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2048  0675  0857               	movf	LCD_Printf@v_num_s32,w
  2049  0676  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2050  0677  0865               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2051  0678  00D0               	movwf	??_LCD_Printf
  2052  0679  0850               	movf	??_LCD_Printf,w
  2053  067A  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2054  067B  300A               	movlw	10
  2055  067C  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2056                           
  2057                           ;lcd.c: 743: break;
  2058  0681  2FCD               	goto	l2352
  2059  0682                     l2288:	
  2060                           ;lcd.c: 745: case 'u':
  2061                           
  2062                           
  2063                           ;lcd.c: 746: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  2064  0682  1283               	bcf	3,5	;RP0=0, select bank0
  2065  0683  1303               	bcf	3,6	;RP1=0, select bank0
  2066  0684  0866               	movf	LCD_Printf@argp,w
  2067  0685  0084               	movwf	4
  2068  0686  1383               	bcf	3,7	;select IRP bank0
  2069  0687  0800               	movf	0,w
  2070  0688  00E1               	movwf	LCD_Printf@v_num_u16
  2071  0689  0A84               	incf	4,f
  2072  068A  0800               	movf	0,w
  2073  068B  00E2               	movwf	LCD_Printf@v_num_u16+1
  2074  068C  3002               	movlw	2
  2075  068D  00D0               	movwf	??_LCD_Printf
  2076  068E  0850               	movf	??_LCD_Printf,w
  2077  068F  07E6               	addwf	LCD_Printf@argp,f
  2078                           
  2079                           ;lcd.c: 747: LCD_DisplayNumber(10u,v_num_u16,v_numOfDigitsToDisp_u8);
  2080  0690  0861               	movf	LCD_Printf@v_num_u16,w
  2081  0691  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2082  0692  0862               	movf	LCD_Printf@v_num_u16+1,w
  2083  0693  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2084  0694  01A6               	clrf	LCD_DisplayNumber@v_number_u32+2
  2085  0695  01A7               	clrf	LCD_DisplayNumber@v_number_u32+3
  2086  0696  0865               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2087  0697  00D0               	movwf	??_LCD_Printf
  2088  0698  0850               	movf	??_LCD_Printf,w
  2089  0699  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2090  069A  300A               	movlw	10
  2091  069B  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2092                           
  2093                           ;lcd.c: 748: break;
  2094  06A0  2FCD               	goto	l2352
  2095  06A1                     l2294:	
  2096                           ;lcd.c: 750: case 'U':
  2097                           
  2098                           
  2099                           ;lcd.c: 751: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  2100  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  2101  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  2102  06A3  0866               	movf	LCD_Printf@argp,w
  2103  06A4  0084               	movwf	4
  2104  06A5  1383               	bcf	3,7	;select IRP bank0
  2105  06A6  0800               	movf	0,w
  2106  06A7  00DD               	movwf	LCD_Printf@v_num_u32
  2107  06A8  0A84               	incf	4,f
  2108  06A9  0800               	movf	0,w
  2109  06AA  00DE               	movwf	LCD_Printf@v_num_u32+1
  2110  06AB  0A84               	incf	4,f
  2111  06AC  0800               	movf	0,w
  2112  06AD  00DF               	movwf	LCD_Printf@v_num_u32+2
  2113  06AE  0A84               	incf	4,f
  2114  06AF  0800               	movf	0,w
  2115  06B0  00E0               	movwf	LCD_Printf@v_num_u32+3
  2116  06B1  3004               	movlw	4
  2117  06B2  00D0               	movwf	??_LCD_Printf
  2118  06B3  0850               	movf	??_LCD_Printf,w
  2119  06B4  07E6               	addwf	LCD_Printf@argp,f
  2120                           
  2121                           ;lcd.c: 752: LCD_DisplayNumber(10u,v_num_u32,v_numOfDigitsToDisp_u8);
  2122  06B5  0860               	movf	LCD_Printf@v_num_u32+3,w
  2123  06B6  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2124  06B7  085F               	movf	LCD_Printf@v_num_u32+2,w
  2125  06B8  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2126  06B9  085E               	movf	LCD_Printf@v_num_u32+1,w
  2127  06BA  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2128  06BB  085D               	movf	LCD_Printf@v_num_u32,w
  2129  06BC  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2130  06BD  0865               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2131  06BE  00D0               	movwf	??_LCD_Printf
  2132  06BF  0850               	movf	??_LCD_Printf,w
  2133  06C0  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2134  06C1  300A               	movlw	10
  2135  06C2  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2136                           
  2137                           ;lcd.c: 753: break;
  2138  06C7  2FCD               	goto	l2352
  2139  06C8                     l2300:	
  2140                           ;lcd.c: 755: case 'x':
  2141                           
  2142                           
  2143                           ;lcd.c: 756: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  2144  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2145  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2146  06CA  0866               	movf	LCD_Printf@argp,w
  2147  06CB  0084               	movwf	4
  2148  06CC  1383               	bcf	3,7	;select IRP bank0
  2149  06CD  0800               	movf	0,w
  2150  06CE  00E1               	movwf	LCD_Printf@v_num_u16
  2151  06CF  0A84               	incf	4,f
  2152  06D0  0800               	movf	0,w
  2153  06D1  00E2               	movwf	LCD_Printf@v_num_u16+1
  2154  06D2  3002               	movlw	2
  2155  06D3  00D0               	movwf	??_LCD_Printf
  2156  06D4  0850               	movf	??_LCD_Printf,w
  2157  06D5  07E6               	addwf	LCD_Printf@argp,f
  2158                           
  2159                           ;lcd.c: 757: LCD_DisplayNumber(16u,v_num_u16,v_numOfDigitsToDisp_u8);
  2160  06D6  0861               	movf	LCD_Printf@v_num_u16,w
  2161  06D7  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2162  06D8  0862               	movf	LCD_Printf@v_num_u16+1,w
  2163  06D9  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2164  06DA  01A6               	clrf	LCD_DisplayNumber@v_number_u32+2
  2165  06DB  01A7               	clrf	LCD_DisplayNumber@v_number_u32+3
  2166  06DC  0865               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2167  06DD  00D0               	movwf	??_LCD_Printf
  2168  06DE  0850               	movf	??_LCD_Printf,w
  2169  06DF  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2170  06E0  3010               	movlw	16
  2171  06E1  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2172                           
  2173                           ;lcd.c: 758: break;
  2174  06E6  2FCD               	goto	l2352
  2175  06E7                     l2306:	
  2176                           ;lcd.c: 760: case 'X':
  2177                           
  2178                           
  2179                           ;lcd.c: 761: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  2180  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  2181  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  2182  06E9  0866               	movf	LCD_Printf@argp,w
  2183  06EA  0084               	movwf	4
  2184  06EB  1383               	bcf	3,7	;select IRP bank0
  2185  06EC  0800               	movf	0,w
  2186  06ED  00DD               	movwf	LCD_Printf@v_num_u32
  2187  06EE  0A84               	incf	4,f
  2188  06EF  0800               	movf	0,w
  2189  06F0  00DE               	movwf	LCD_Printf@v_num_u32+1
  2190  06F1  0A84               	incf	4,f
  2191  06F2  0800               	movf	0,w
  2192  06F3  00DF               	movwf	LCD_Printf@v_num_u32+2
  2193  06F4  0A84               	incf	4,f
  2194  06F5  0800               	movf	0,w
  2195  06F6  00E0               	movwf	LCD_Printf@v_num_u32+3
  2196  06F7  3004               	movlw	4
  2197  06F8  00D0               	movwf	??_LCD_Printf
  2198  06F9  0850               	movf	??_LCD_Printf,w
  2199  06FA  07E6               	addwf	LCD_Printf@argp,f
  2200                           
  2201                           ;lcd.c: 762: LCD_DisplayNumber(16u,v_num_u32,v_numOfDigitsToDisp_u8);
  2202  06FB  0860               	movf	LCD_Printf@v_num_u32+3,w
  2203  06FC  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2204  06FD  085F               	movf	LCD_Printf@v_num_u32+2,w
  2205  06FE  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2206  06FF  085E               	movf	LCD_Printf@v_num_u32+1,w
  2207  0700  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2208  0701  085D               	movf	LCD_Printf@v_num_u32,w
  2209  0702  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2210  0703  0865               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2211  0704  00D0               	movwf	??_LCD_Printf
  2212  0705  0850               	movf	??_LCD_Printf,w
  2213  0706  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2214  0707  3010               	movlw	16
  2215  0708  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2216                           
  2217                           ;lcd.c: 763: break;
  2218  070D  2FCD               	goto	l2352
  2219  070E                     l2312:	
  2220                           ;lcd.c: 766: case 'b':
  2221                           
  2222                           
  2223                           ;lcd.c: 767: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  2224  070E  1283               	bcf	3,5	;RP0=0, select bank0
  2225  070F  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0710  0866               	movf	LCD_Printf@argp,w
  2227  0711  0084               	movwf	4
  2228  0712  1383               	bcf	3,7	;select IRP bank0
  2229  0713  0800               	movf	0,w
  2230  0714  00E1               	movwf	LCD_Printf@v_num_u16
  2231  0715  0A84               	incf	4,f
  2232  0716  0800               	movf	0,w
  2233  0717  00E2               	movwf	LCD_Printf@v_num_u16+1
  2234  0718  3002               	movlw	2
  2235  0719  00D0               	movwf	??_LCD_Printf
  2236  071A  0850               	movf	??_LCD_Printf,w
  2237  071B  07E6               	addwf	LCD_Printf@argp,f
  2238                           
  2239                           ;lcd.c: 768: if(v_numOfDigitsToDisp_u8 == 0xffu)
  2240  071C  0A65               	incf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2241  071D  1D03               	btfss	3,2
  2242  071E  2F23               	goto	l2320
  2243                           
  2244                           ;lcd.c: 769: v_numOfDigitsToDisp_u8 = 16;
  2245  071F  3010               	movlw	16
  2246  0720  00D0               	movwf	??_LCD_Printf
  2247  0721  0850               	movf	??_LCD_Printf,w
  2248  0722  00E5               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  2249  0723                     l2320:	
  2250                           
  2251                           ;lcd.c: 770: LCD_DisplayNumber(2u,v_num_u16,v_numOfDigitsToDisp_u8);
  2252  0723  0861               	movf	LCD_Printf@v_num_u16,w
  2253  0724  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2254  0725  0862               	movf	LCD_Printf@v_num_u16+1,w
  2255  0726  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2256  0727  01A6               	clrf	LCD_DisplayNumber@v_number_u32+2
  2257  0728  01A7               	clrf	LCD_DisplayNumber@v_number_u32+3
  2258  0729  0865               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2259  072A  00D0               	movwf	??_LCD_Printf
  2260  072B  0850               	movf	??_LCD_Printf,w
  2261  072C  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2262  072D  3002               	movlw	2
  2263  072E  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2264                           
  2265                           ;lcd.c: 771: break;
  2266  0733  2FCD               	goto	l2352
  2267  0734                     l2322:	
  2268                           ;lcd.c: 773: case 'B':
  2269                           
  2270                           
  2271                           ;lcd.c: 774: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  2272  0734  1283               	bcf	3,5	;RP0=0, select bank0
  2273  0735  1303               	bcf	3,6	;RP1=0, select bank0
  2274  0736  0866               	movf	LCD_Printf@argp,w
  2275  0737  0084               	movwf	4
  2276  0738  1383               	bcf	3,7	;select IRP bank0
  2277  0739  0800               	movf	0,w
  2278  073A  00DD               	movwf	LCD_Printf@v_num_u32
  2279  073B  0A84               	incf	4,f
  2280  073C  0800               	movf	0,w
  2281  073D  00DE               	movwf	LCD_Printf@v_num_u32+1
  2282  073E  0A84               	incf	4,f
  2283  073F  0800               	movf	0,w
  2284  0740  00DF               	movwf	LCD_Printf@v_num_u32+2
  2285  0741  0A84               	incf	4,f
  2286  0742  0800               	movf	0,w
  2287  0743  00E0               	movwf	LCD_Printf@v_num_u32+3
  2288  0744  3004               	movlw	4
  2289  0745  00D0               	movwf	??_LCD_Printf
  2290  0746  0850               	movf	??_LCD_Printf,w
  2291  0747  07E6               	addwf	LCD_Printf@argp,f
  2292                           
  2293                           ;lcd.c: 775: if(v_numOfDigitsToDisp_u8 == 0xffu)
  2294  0748  0A65               	incf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2295  0749  1D03               	btfss	3,2
  2296  074A  2F4F               	goto	l2330
  2297                           
  2298                           ;lcd.c: 776: v_numOfDigitsToDisp_u8 = 16;
  2299  074B  3010               	movlw	16
  2300  074C  00D0               	movwf	??_LCD_Printf
  2301  074D  0850               	movf	??_LCD_Printf,w
  2302  074E  00E5               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  2303  074F                     l2330:	
  2304                           
  2305                           ;lcd.c: 777: LCD_DisplayNumber(2u,v_num_u32,v_numOfDigitsToDisp_u8);
  2306  074F  0860               	movf	LCD_Printf@v_num_u32+3,w
  2307  0750  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2308  0751  085F               	movf	LCD_Printf@v_num_u32+2,w
  2309  0752  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2310  0753  085E               	movf	LCD_Printf@v_num_u32+1,w
  2311  0754  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2312  0755  085D               	movf	LCD_Printf@v_num_u32,w
  2313  0756  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2314  0757  0865               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2315  0758  00D0               	movwf	??_LCD_Printf
  2316  0759  0850               	movf	??_LCD_Printf,w
  2317  075A  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2318  075B  3002               	movlw	2
  2319  075C  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2320                           
  2321                           ;lcd.c: 778: break;
  2322  0761  2FCD               	goto	l2352
  2323  0762                     l2332:	
  2324                           ;lcd.c: 781: case 'F':
  2325                           
  2326                           
  2327                           ;lcd.c: 782: case 'f':
  2328                           ;lcd.c: 784: v_floatNum_f32 = (*(double *)__va_arg((*(double **)argp), (double)0));
  2329  0762  1283               	bcf	3,5	;RP0=0, select bank0
  2330  0763  1303               	bcf	3,6	;RP1=0, select bank0
  2331  0764  0866               	movf	LCD_Printf@argp,w
  2332  0765  0084               	movwf	4
  2333  0766  1383               	bcf	3,7	;select IRP bank0
  2334  0767  0800               	movf	0,w
  2335  0768  00D2               	movwf	LCD_Printf@v_floatNum_f32
  2336  0769  0A84               	incf	4,f
  2337  076A  0800               	movf	0,w
  2338  076B  00D3               	movwf	LCD_Printf@v_floatNum_f32+1
  2339  076C  0A84               	incf	4,f
  2340  076D  0800               	movf	0,w
  2341  076E  00D4               	movwf	LCD_Printf@v_floatNum_f32+2
  2342  076F  3003               	movlw	3
  2343  0770  00D0               	movwf	??_LCD_Printf
  2344  0771  0850               	movf	??_LCD_Printf,w
  2345  0772  07E6               	addwf	LCD_Printf@argp,f
  2346                           
  2347                           ;lcd.c: 785: LCD_DisplayFloatNumber(v_floatNum_f32);
  2348  0773  0852               	movf	LCD_Printf@v_floatNum_f32,w
  2349  0774  00C3               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32
  2350  0775  0853               	movf	LCD_Printf@v_floatNum_f32+1,w
  2351  0776  00C4               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+1
  2352  0777  0854               	movf	LCD_Printf@v_floatNum_f32+2,w
  2353  0778  00C5               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+2
  2354  0779  120A  158A  25F9  120A  118A  	fcall	_LCD_DisplayFloatNumber
  2355                           
  2356                           ;lcd.c: 787: break;
  2357  077E  2FCD               	goto	l2352
  2358  077F                     l2338:	
  2359                           ;lcd.c: 790: case 'S':
  2360                           
  2361                           
  2362                           ;lcd.c: 791: case 's':
  2363                           ;lcd.c: 792: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  2364  077F  1283               	bcf	3,5	;RP0=0, select bank0
  2365  0780  1303               	bcf	3,6	;RP1=0, select bank0
  2366  0781  0866               	movf	LCD_Printf@argp,w
  2367  0782  0084               	movwf	4
  2368  0783  1383               	bcf	3,7	;select IRP bank0
  2369  0784  0800               	movf	0,w
  2370  0785  00D0               	movwf	??_LCD_Printf
  2371  0786  0850               	movf	??_LCD_Printf,w
  2372  0787  00D5               	movwf	LCD_Printf@str
  2373  0788  3001               	movlw	1
  2374  0789  00D0               	movwf	??_LCD_Printf
  2375  078A  0850               	movf	??_LCD_Printf,w
  2376  078B  07E6               	addwf	LCD_Printf@argp,f
  2377                           
  2378                           ;lcd.c: 793: LCD_DisplayString(str);
  2379  078C  0855               	movf	LCD_Printf@str,w
  2380  078D  120A  158A  2160  120A  118A  	fcall	_LCD_DisplayString
  2381                           
  2382                           ;lcd.c: 794: break;
  2383  0792  2FCD               	goto	l2352
  2384  0793                     l2344:	
  2385                           ;lcd.c: 796: case '%':
  2386                           
  2387                           
  2388                           ;lcd.c: 797: LCD_DisplayChar('%');
  2389  0793  3025               	movlw	37
  2390  0794  2FC8               	goto	L1
  2391  0795                     l2348:	
  2392                           ;lcd.c: 799: }
  2393                           
  2394                           ;lcd.c: 798: break;
  2395                           
  2396  0795  1283               	bcf	3,5	;RP0=0, select bank0
  2397  0796  1303               	bcf	3,6	;RP1=0, select bank0
  2398  0797  0864               	movf	LCD_Printf@ch,w
  2399                           
  2400                           ; Switch size 1, requested type "space"
  2401                           ; Number of cases is 15, Range of values is 37 to 120
  2402                           ; switch strategies available:
  2403                           ; Name         Instructions Cycles
  2404                           ; simple_byte           46    24 (average)
  2405                           ; direct_byte          263    11 (fixed)
  2406                           ; jumptable            263     9 (fixed)
  2407                           ;	Chosen strategy is simple_byte
  2408  0798  3A25               	xorlw	37	; case 37
  2409  0799  1903               	skipnz
  2410  079A  2F93               	goto	l2344
  2411  079B  3A67               	xorlw	103	; case 66
  2412  079C  1903               	skipnz
  2413  079D  2F34               	goto	l2322
  2414  079E  3A01               	xorlw	1	; case 67
  2415  079F  1903               	skipnz
  2416  07A0  2E09               	goto	l2260
  2417  07A1  3A07               	xorlw	7	; case 68
  2418  07A2  1903               	skipnz
  2419  07A3  2E46               	goto	l2278
  2420  07A4  3A02               	xorlw	2	; case 70
  2421  07A5  1903               	skipnz
  2422  07A6  2F62               	goto	l2332
  2423  07A7  3A15               	xorlw	21	; case 83
  2424  07A8  1903               	skipnz
  2425  07A9  2F7F               	goto	l2338
  2426  07AA  3A06               	xorlw	6	; case 85
  2427  07AB  1903               	skipnz
  2428  07AC  2EA1               	goto	l2294
  2429  07AD  3A0D               	xorlw	13	; case 88
  2430  07AE  1903               	skipnz
  2431  07AF  2EE7               	goto	l2306
  2432  07B0  3A3A               	xorlw	58	; case 98
  2433  07B1  1903               	skipnz
  2434  07B2  2F0E               	goto	l2312
  2435  07B3  3A01               	xorlw	1	; case 99
  2436  07B4  1903               	skipnz
  2437  07B5  2E09               	goto	l2260
  2438  07B6  3A07               	xorlw	7	; case 100
  2439  07B7  1903               	skipnz
  2440  07B8  2E15               	goto	l2266
  2441  07B9  3A02               	xorlw	2	; case 102
  2442  07BA  1903               	skipnz
  2443  07BB  2F62               	goto	l2332
  2444  07BC  3A15               	xorlw	21	; case 115
  2445  07BD  1903               	skipnz
  2446  07BE  2F7F               	goto	l2338
  2447  07BF  3A06               	xorlw	6	; case 117
  2448  07C0  1903               	skipnz
  2449  07C1  2E82               	goto	l2288
  2450  07C2  3A0D               	xorlw	13	; case 120
  2451  07C3  1903               	skipnz
  2452  07C4  2EC8               	goto	l2300
  2453  07C5  2FCD               	goto	l2352
  2454                           
  2455                           ;lcd.c: 800: }
  2456  07C6  2FCD               	goto	l2352
  2457  07C7                     l2350:	
  2458                           
  2459                           ;lcd.c: 801: else
  2460                           ;lcd.c: 802: {
  2461                           ;lcd.c: 804: LCD_DisplayChar(ch);
  2462  07C7  0864               	movf	LCD_Printf@ch,w
  2463  07C8                     L1:	
  2464  07C8  120A  158A  2179  120A  118A  	fcall	_LCD_DisplayChar
  2465  07CD                     l2352:	
  2466  07CD  3001               	movlw	1
  2467  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  2468  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  2469  07D0  00D0               	movwf	??_LCD_Printf
  2470  07D1  0850               	movf	??_LCD_Printf,w
  2471  07D2  07E3               	addwf	LCD_Printf@ptr,f
  2472  07D3  2DAD               	goto	l2354
  2473  07D4                     __end_of_LCD_Printf:	
  2474                           
  2475                           	psect	text5
  2476  0960                     __ptext5:	
  2477 ;; *************** function _LCD_DisplayString *****************
  2478 ;; Defined at:
  2479 ;;		line 427 in file "../00-libfiles/lcd.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  ptr_stringPo    1    wreg     PTR const unsigned char 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  ptr_stringPo    1    0[BANK0 ] PTR const unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2493 ;;      Params:         0       0       0       0       0
  2494 ;;      Locals:         0       1       0       0       0
  2495 ;;      Temps:          1       0       0       0       0
  2496 ;;      Totals:         1       1       0       0       0
  2497 ;;Total ram usage:        2 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:    6
  2500 ;; This function calls:
  2501 ;;		_LCD_DisplayChar
  2502 ;; This function is called by:
  2503 ;;		_LCD_Printf
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           
  2508                           ;psect for function _LCD_DisplayString
  2509  0960                     _LCD_DisplayString:	
  2510                           
  2511                           ;incstack = 0
  2512                           ; Regs used in _LCD_DisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2513                           ;LCD_DisplayString@ptr_stringPointer_u8 stored from wreg
  2514  0960  1283               	bcf	3,5	;RP0=0, select bank0
  2515  0961  1303               	bcf	3,6	;RP1=0, select bank0
  2516  0962  00A0               	movwf	LCD_DisplayString@ptr_stringPointer_u8
  2517  0963                     l2172:	
  2518                           ;lcd.c: 429: while((*ptr_stringPointer_u8)!=0)
  2519                           
  2520  0963  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  2521  0964  0084               	movwf	4
  2522  0965  1383               	bcf	3,7	;select IRP bank0
  2523  0966  0800               	movf	0,w
  2524  0967  1903               	btfsc	3,2
  2525  0968  0008               	return
  2526                           
  2527                           ;lcd.c: 430: LCD_DisplayChar(*ptr_stringPointer_u8++);
  2528  0969  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  2529  096A  0084               	movwf	4
  2530  096B  1383               	bcf	3,7	;select IRP bank0
  2531  096C  0800               	movf	0,w
  2532  096D  120A  158A  2179  120A  158A  	fcall	_LCD_DisplayChar
  2533  0972  3001               	movlw	1
  2534  0973  00FD               	movwf	??_LCD_DisplayString
  2535  0974  087D               	movf	??_LCD_DisplayString,w
  2536  0975  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0976  1303               	bcf	3,6	;RP1=0, select bank0
  2538  0977  07A0               	addwf	LCD_DisplayString@ptr_stringPointer_u8,f
  2539  0978  2963               	goto	l2172
  2540  0979                     __end_of_LCD_DisplayString:	
  2541                           
  2542                           	psect	text6
  2543  0DF9                     __ptext6:	
  2544 ;; *************** function _LCD_DisplayFloatNumber *****************
  2545 ;; Defined at:
  2546 ;;		line 615 in file "../00-libfiles/lcd.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  v_floatNum_f    3   35[BANK0 ] void 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  v_temp_u32      4   39[BANK0 ] unsigned long 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2560 ;;      Params:         0       3       0       0       0
  2561 ;;      Locals:         0       4       0       0       0
  2562 ;;      Temps:          0       1       0       0       0
  2563 ;;      Totals:         0       8       0       0       0
  2564 ;;Total ram usage:        8 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    7
  2567 ;; This function calls:
  2568 ;;		_LCD_DisplayChar
  2569 ;;		_LCD_DisplayNumber
  2570 ;;		___ftadd
  2571 ;;		___ftmul
  2572 ;;		___ftneg
  2573 ;;		___fttol
  2574 ;;		___lltoft
  2575 ;; This function is called by:
  2576 ;;		_LCD_Printf
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           
  2581                           ;psect for function _LCD_DisplayFloatNumber
  2582  0DF9                     _LCD_DisplayFloatNumber:	
  2583                           
  2584                           ;lcd.c: 617: uint32_t v_temp_u32;
  2585                           ;lcd.c: 624: v_temp_u32 = (uint32_t) v_floatNum_f32;
  2586                           
  2587                           ;incstack = 0
  2588 ;; hardware stack exceeded
  2589                           ; Regs used in _LCD_DisplayFloatNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2590  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  2591  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  2592  0DFB  0843               	movf	LCD_DisplayFloatNumber@v_floatNum_f32,w
  2593  0DFC  00AA               	movwf	___fttol@f1
  2594  0DFD  0844               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+1,w
  2595  0DFE  00AB               	movwf	___fttol@f1+1
  2596  0DFF  0845               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+2,w
  2597  0E00  00AC               	movwf	___fttol@f1+2
  2598  0E01  120A  158A  256B  120A  158A  	fcall	___fttol
  2599  0E06  1283               	bcf	3,5	;RP0=0, select bank0
  2600  0E07  1303               	bcf	3,6	;RP1=0, select bank0
  2601  0E08  082D               	movf	?___fttol+3,w
  2602  0E09  00CA               	movwf	LCD_DisplayFloatNumber@v_temp_u32+3
  2603  0E0A  082C               	movf	?___fttol+2,w
  2604  0E0B  00C9               	movwf	LCD_DisplayFloatNumber@v_temp_u32+2
  2605  0E0C  082B               	movf	?___fttol+1,w
  2606  0E0D  00C8               	movwf	LCD_DisplayFloatNumber@v_temp_u32+1
  2607  0E0E  082A               	movf	?___fttol,w
  2608  0E0F  00C7               	movwf	LCD_DisplayFloatNumber@v_temp_u32
  2609                           
  2610                           ;lcd.c: 625: LCD_DisplayNumber(10u,v_temp_u32,0xffu);
  2611  0E10  084A               	movf	LCD_DisplayFloatNumber@v_temp_u32+3,w
  2612  0E11  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2613  0E12  0849               	movf	LCD_DisplayFloatNumber@v_temp_u32+2,w
  2614  0E13  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2615  0E14  0848               	movf	LCD_DisplayFloatNumber@v_temp_u32+1,w
  2616  0E15  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2617  0E16  0847               	movf	LCD_DisplayFloatNumber@v_temp_u32,w
  2618  0E17  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2619  0E18  30FF               	movlw	255
  2620  0E19  00C6               	movwf	??_LCD_DisplayFloatNumber
  2621  0E1A  0846               	movf	??_LCD_DisplayFloatNumber,w
  2622  0E1B  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2623  0E1C  300A               	movlw	10
  2624  0E1D  120A  118A  23A7  120A  158A  	fcall	_LCD_DisplayNumber
  2625                           
  2626                           ;lcd.c: 627: LCD_DisplayChar('.');
  2627  0E22  302E               	movlw	46
  2628  0E23  120A  158A  2179  120A  158A  	fcall	_LCD_DisplayChar
  2629                           
  2630                           ;lcd.c: 629: v_floatNum_f32 = v_floatNum_f32 - v_temp_u32;
  2631  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  2632  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  2633  0E2A  0843               	movf	LCD_DisplayFloatNumber@v_floatNum_f32,w
  2634  0E2B  00A3               	movwf	___ftadd@f1
  2635  0E2C  0844               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+1,w
  2636  0E2D  00A4               	movwf	___ftadd@f1+1
  2637  0E2E  0845               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+2,w
  2638  0E2F  00A5               	movwf	___ftadd@f1+2
  2639  0E30  084A               	movf	LCD_DisplayFloatNumber@v_temp_u32+3,w
  2640  0E31  00FB               	movwf	___lltoft@c+3
  2641  0E32  0849               	movf	LCD_DisplayFloatNumber@v_temp_u32+2,w
  2642  0E33  00FA               	movwf	___lltoft@c+2
  2643  0E34  0848               	movf	LCD_DisplayFloatNumber@v_temp_u32+1,w
  2644  0E35  00F9               	movwf	___lltoft@c+1
  2645  0E36  0847               	movf	LCD_DisplayFloatNumber@v_temp_u32,w
  2646  0E37  00F8               	movwf	___lltoft@c
  2647  0E38  120A  158A  21DF  120A  158A  	fcall	___lltoft
  2648  0E3D  0878               	movf	?___lltoft,w
  2649  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  2650  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  2651  0E40  00A0               	movwf	___ftneg@f1
  2652  0E41  0879               	movf	?___lltoft+1,w
  2653  0E42  00A1               	movwf	___ftneg@f1+1
  2654  0E43  087A               	movf	?___lltoft+2,w
  2655  0E44  00A2               	movwf	___ftneg@f1+2
  2656  0E45  120A  158A  20EA  120A  158A  	fcall	___ftneg
  2657  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  2658  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  2659  0E4C  0820               	movf	?___ftneg,w
  2660  0E4D  00A6               	movwf	___ftadd@f2
  2661  0E4E  0821               	movf	?___ftneg+1,w
  2662  0E4F  00A7               	movwf	___ftadd@f2+1
  2663  0E50  0822               	movf	?___ftneg+2,w
  2664  0E51  00A8               	movwf	___ftadd@f2+2
  2665  0E52  120A  118A  2499  120A  158A  	fcall	___ftadd
  2666  0E57  1283               	bcf	3,5	;RP0=0, select bank0
  2667  0E58  1303               	bcf	3,6	;RP1=0, select bank0
  2668  0E59  0823               	movf	?___ftadd,w
  2669  0E5A  00C3               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32
  2670  0E5B  0824               	movf	?___ftadd+1,w
  2671  0E5C  00C4               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+1
  2672  0E5D  0825               	movf	?___ftadd+2,w
  2673  0E5E  00C5               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+2
  2674                           
  2675                           ;lcd.c: 630: v_temp_u32 = v_floatNum_f32 * 1000000;
  2676  0E5F  0843               	movf	LCD_DisplayFloatNumber@v_floatNum_f32,w
  2677  0E60  00FB               	movwf	___ftmul@f2
  2678  0E61  0844               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+1,w
  2679  0E62  00FC               	movwf	___ftmul@f2+1
  2680  0E63  0845               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+2,w
  2681  0E64  00FD               	movwf	___ftmul@f2+2
  2682  0E65  3024               	movlw	36
  2683  0E66  00F8               	movwf	___ftmul@f1
  2684  0E67  3074               	movlw	116
  2685  0E68  00F9               	movwf	___ftmul@f1+1
  2686  0E69  3049               	movlw	73
  2687  0E6A  00FA               	movwf	___ftmul@f1+2
  2688  0E6B  120A  118A  2053  120A  158A  	fcall	___ftmul
  2689  0E70  0878               	movf	?___ftmul,w
  2690  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  2691  0E72  1303               	bcf	3,6	;RP1=0, select bank0
  2692  0E73  00AA               	movwf	___fttol@f1
  2693  0E74  0879               	movf	?___ftmul+1,w
  2694  0E75  00AB               	movwf	___fttol@f1+1
  2695  0E76  087A               	movf	?___ftmul+2,w
  2696  0E77  00AC               	movwf	___fttol@f1+2
  2697  0E78  120A  158A  256B  120A  158A  	fcall	___fttol
  2698  0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  2699  0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  2700  0E7F  082D               	movf	?___fttol+3,w
  2701  0E80  00CA               	movwf	LCD_DisplayFloatNumber@v_temp_u32+3
  2702  0E81  082C               	movf	?___fttol+2,w
  2703  0E82  00C9               	movwf	LCD_DisplayFloatNumber@v_temp_u32+2
  2704  0E83  082B               	movf	?___fttol+1,w
  2705  0E84  00C8               	movwf	LCD_DisplayFloatNumber@v_temp_u32+1
  2706  0E85  082A               	movf	?___fttol,w
  2707  0E86  00C7               	movwf	LCD_DisplayFloatNumber@v_temp_u32
  2708                           
  2709                           ;lcd.c: 631: LCD_DisplayNumber(10u,v_temp_u32,0xffu);
  2710  0E87  084A               	movf	LCD_DisplayFloatNumber@v_temp_u32+3,w
  2711  0E88  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2712  0E89  0849               	movf	LCD_DisplayFloatNumber@v_temp_u32+2,w
  2713  0E8A  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2714  0E8B  0848               	movf	LCD_DisplayFloatNumber@v_temp_u32+1,w
  2715  0E8C  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2716  0E8D  0847               	movf	LCD_DisplayFloatNumber@v_temp_u32,w
  2717  0E8E  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2718  0E8F  30FF               	movlw	255
  2719  0E90  00C6               	movwf	??_LCD_DisplayFloatNumber
  2720  0E91  0846               	movf	??_LCD_DisplayFloatNumber,w
  2721  0E92  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2722  0E93  300A               	movlw	10
  2723  0E94  120A  118A  23A7   	fcall	_LCD_DisplayNumber
  2724  0E97  0008               	return
  2725  0E98                     __end_of_LCD_DisplayFloatNumber:	
  2726                           
  2727                           	psect	text7
  2728  09DF                     __ptext7:	
  2729 ;; *************** function ___lltoft *****************
  2730 ;; Defined at:
  2731 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lltoft.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  c               4    8[COMMON] unsigned long 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  exp             1   13[COMMON] unsigned char 
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  3    8[COMMON] float 
  2738 ;; Registers used:
  2739 ;;		wreg, status,2, status,0, pclath, cstack
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2745 ;;      Params:         4       0       0       0       0
  2746 ;;      Locals:         1       0       0       0       0
  2747 ;;      Temps:          1       0       0       0       0
  2748 ;;      Totals:         6       0       0       0       0
  2749 ;;Total ram usage:        6 bytes
  2750 ;; Hardware stack levels used:    1
  2751 ;; Hardware stack levels required when called:    1
  2752 ;; This function calls:
  2753 ;;		___ftpack
  2754 ;; This function is called by:
  2755 ;;		_LCD_DisplayFloatNumber
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           
  2760                           ;psect for function ___lltoft
  2761  09DF                     ___lltoft:	
  2762                           
  2763                           ;incstack = 0
  2764                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  2765  09DF  308E               	movlw	142
  2766  09E0  00FC               	movwf	??___lltoft
  2767  09E1  087C               	movf	??___lltoft,w
  2768  09E2  00FD               	movwf	___lltoft@exp
  2769  09E3                     l2140:	
  2770  09E3  30FF               	movlw	255
  2771  09E4  057B               	andwf	___lltoft@c+3,w
  2772  09E5  1903               	btfsc	3,2
  2773  09E6  29F5               	goto	l2142
  2774  09E7  3001               	movlw	1
  2775  09E8                     u3575:	
  2776  09E8  1003               	clrc
  2777  09E9  0CFB               	rrf	___lltoft@c+3,f
  2778  09EA  0CFA               	rrf	___lltoft@c+2,f
  2779  09EB  0CF9               	rrf	___lltoft@c+1,f
  2780  09EC  0CF8               	rrf	___lltoft@c,f
  2781  09ED  3EFF               	addlw	-1
  2782  09EE  1D03               	skipz
  2783  09EF  29E8               	goto	u3575
  2784  09F0  3001               	movlw	1
  2785  09F1  00FC               	movwf	??___lltoft
  2786  09F2  087C               	movf	??___lltoft,w
  2787  09F3  07FD               	addwf	___lltoft@exp,f
  2788  09F4  29E3               	goto	l2140
  2789  09F5                     l2142:	
  2790  09F5  0878               	movf	___lltoft@c,w
  2791  09F6  00F0               	movwf	___ftpack@arg
  2792  09F7  0879               	movf	___lltoft@c+1,w
  2793  09F8  00F1               	movwf	___ftpack@arg+1
  2794  09F9  087A               	movf	___lltoft@c+2,w
  2795  09FA  00F2               	movwf	___ftpack@arg+2
  2796  09FB  087D               	movf	___lltoft@exp,w
  2797  09FC  00FC               	movwf	??___lltoft
  2798  09FD  087C               	movf	??___lltoft,w
  2799  09FE  00F3               	movwf	___ftpack@exp
  2800  09FF  01F4               	clrf	___ftpack@sign
  2801  0A00  120A  158A  23FE   	fcall	___ftpack
  2802  0A03  0870               	movf	?___ftpack,w
  2803  0A04  00F8               	movwf	?___lltoft
  2804  0A05  0871               	movf	?___ftpack+1,w
  2805  0A06  00F9               	movwf	?___lltoft+1
  2806  0A07  0872               	movf	?___ftpack+2,w
  2807  0A08  00FA               	movwf	?___lltoft+2
  2808  0A09  0008               	return
  2809  0A0A                     __end_of___lltoft:	
  2810                           
  2811                           	psect	text8
  2812  0D6B                     __ptext8:	
  2813 ;; *************** function ___fttol *****************
  2814 ;; Defined at:
  2815 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\fttol.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;  f1              3   10[BANK0 ] float 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  lval            4   19[BANK0 ] unsigned long 
  2820 ;;  exp1            1   23[BANK0 ] unsigned char 
  2821 ;;  sign1           1   18[BANK0 ] unsigned char 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  4   10[BANK0 ] long 
  2824 ;; Registers used:
  2825 ;;		wreg, status,2, status,0
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2831 ;;      Params:         0       4       0       0       0
  2832 ;;      Locals:         0       6       0       0       0
  2833 ;;      Temps:          0       4       0       0       0
  2834 ;;      Totals:         0      14       0       0       0
  2835 ;;Total ram usage:       14 bytes
  2836 ;; Hardware stack levels used:    1
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_LCD_DisplayFloatNumber
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           
  2845                           ;psect for function ___fttol
  2846  0D6B                     ___fttol:	
  2847                           
  2848                           ;incstack = 0
  2849                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2850  0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0D6C  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0D6D  082A               	movf	___fttol@f1,w
  2853  0D6E  00AE               	movwf	??___fttol
  2854  0D6F  082B               	movf	___fttol@f1+1,w
  2855  0D70  00AF               	movwf	??___fttol+1
  2856  0D71  082C               	movf	___fttol@f1+2,w
  2857  0D72  00B0               	movwf	??___fttol+2
  2858  0D73  1003               	clrc
  2859  0D74  0D2F               	rlf	??___fttol+1,w
  2860  0D75  0D30               	rlf	??___fttol+2,w
  2861  0D76  00B1               	movwf	??___fttol+3
  2862  0D77  0831               	movf	??___fttol+3,w
  2863  0D78  00B7               	movwf	___fttol@exp1
  2864  0D79  0837               	movf	___fttol@exp1,w
  2865  0D7A  1D03               	btfss	3,2
  2866  0D7B  2D85               	goto	l2100
  2867  0D7C  3000               	movlw	0
  2868  0D7D  00AD               	movwf	?___fttol+3
  2869  0D7E  3000               	movlw	0
  2870  0D7F  00AC               	movwf	?___fttol+2
  2871  0D80  3000               	movlw	0
  2872  0D81  00AB               	movwf	?___fttol+1
  2873  0D82  3000               	movlw	0
  2874  0D83  00AA               	movwf	?___fttol
  2875  0D84  0008               	return
  2876  0D85                     l2100:	
  2877  0D85  082A               	movf	___fttol@f1,w
  2878  0D86  00AE               	movwf	??___fttol
  2879  0D87  082B               	movf	___fttol@f1+1,w
  2880  0D88  00AF               	movwf	??___fttol+1
  2881  0D89  082C               	movf	___fttol@f1+2,w
  2882  0D8A  00B0               	movwf	??___fttol+2
  2883  0D8B  3017               	movlw	23
  2884  0D8C                     u3485:	
  2885  0D8C  1003               	clrc
  2886  0D8D  0CB0               	rrf	??___fttol+2,f
  2887  0D8E  0CAF               	rrf	??___fttol+1,f
  2888  0D8F  0CAE               	rrf	??___fttol,f
  2889  0D90  3EFF               	addlw	-1
  2890  0D91  1D03               	skipz
  2891  0D92  2D8C               	goto	u3485
  2892  0D93  082E               	movf	??___fttol,w
  2893  0D94  00B1               	movwf	??___fttol+3
  2894  0D95  0831               	movf	??___fttol+3,w
  2895  0D96  00B2               	movwf	___fttol@sign1
  2896  0D97  17AB               	bsf	___fttol@f1+1,7
  2897  0D98  30FF               	movlw	255
  2898  0D99  05AA               	andwf	___fttol@f1,f
  2899  0D9A  30FF               	movlw	255
  2900  0D9B  05AB               	andwf	___fttol@f1+1,f
  2901  0D9C  3000               	movlw	0
  2902  0D9D  05AC               	andwf	___fttol@f1+2,f
  2903  0D9E  082A               	movf	___fttol@f1,w
  2904  0D9F  00B3               	movwf	___fttol@lval
  2905  0DA0  082B               	movf	___fttol@f1+1,w
  2906  0DA1  00B4               	movwf	___fttol@lval+1
  2907  0DA2  082C               	movf	___fttol@f1+2,w
  2908  0DA3  00B5               	movwf	___fttol@lval+2
  2909  0DA4  01B6               	clrf	___fttol@lval+3
  2910  0DA5  308E               	movlw	142
  2911  0DA6  02B7               	subwf	___fttol@exp1,f
  2912  0DA7  1FB7               	btfss	___fttol@exp1,7
  2913  0DA8  2DC7               	goto	l2120
  2914  0DA9  0837               	movf	___fttol@exp1,w
  2915  0DAA  3A80               	xorlw	128
  2916  0DAB  3E8F               	addlw	143
  2917  0DAC  1803               	skipnc
  2918  0DAD  2DB7               	goto	l2118
  2919  0DAE  3000               	movlw	0
  2920  0DAF  00AD               	movwf	?___fttol+3
  2921  0DB0  3000               	movlw	0
  2922  0DB1  00AC               	movwf	?___fttol+2
  2923  0DB2  3000               	movlw	0
  2924  0DB3  00AB               	movwf	?___fttol+1
  2925  0DB4  3000               	movlw	0
  2926  0DB5  00AA               	movwf	?___fttol
  2927  0DB6  0008               	return
  2928  0DB7                     l2118:	
  2929  0DB7  3001               	movlw	1
  2930  0DB8                     u3515:	
  2931  0DB8  1003               	clrc
  2932  0DB9  0CB6               	rrf	___fttol@lval+3,f
  2933  0DBA  0CB5               	rrf	___fttol@lval+2,f
  2934  0DBB  0CB4               	rrf	___fttol@lval+1,f
  2935  0DBC  0CB3               	rrf	___fttol@lval,f
  2936  0DBD  3EFF               	addlw	-1
  2937  0DBE  1D03               	skipz
  2938  0DBF  2DB8               	goto	u3515
  2939  0DC0  3001               	movlw	1
  2940  0DC1  00AE               	movwf	??___fttol
  2941  0DC2  082E               	movf	??___fttol,w
  2942  0DC3  07B7               	addwf	___fttol@exp1,f
  2943  0DC4  1903               	btfsc	3,2
  2944  0DC5  2DE2               	goto	l2128
  2945  0DC6  2DB7               	goto	l2118
  2946  0DC7                     l2120:	
  2947  0DC7  3018               	movlw	24
  2948  0DC8  0237               	subwf	___fttol@exp1,w
  2949  0DC9  1C03               	skipc
  2950  0DCA  2DDF               	goto	l674
  2951  0DCB  3000               	movlw	0
  2952  0DCC  00AD               	movwf	?___fttol+3
  2953  0DCD  3000               	movlw	0
  2954  0DCE  00AC               	movwf	?___fttol+2
  2955  0DCF  3000               	movlw	0
  2956  0DD0  00AB               	movwf	?___fttol+1
  2957  0DD1  3000               	movlw	0
  2958  0DD2  00AA               	movwf	?___fttol
  2959  0DD3  0008               	return
  2960  0DD4                     l2126:	
  2961  0DD4  3001               	movlw	1
  2962  0DD5  00AE               	movwf	??___fttol
  2963  0DD6                     u3545:	
  2964  0DD6  1003               	clrc
  2965  0DD7  0DB3               	rlf	___fttol@lval,f
  2966  0DD8  0DB4               	rlf	___fttol@lval+1,f
  2967  0DD9  0DB5               	rlf	___fttol@lval+2,f
  2968  0DDA  0DB6               	rlf	___fttol@lval+3,f
  2969  0DDB  0BAE               	decfsz	??___fttol,f
  2970  0DDC  2DD6               	goto	u3545
  2971  0DDD  3001               	movlw	1
  2972  0DDE  02B7               	subwf	___fttol@exp1,f
  2973  0DDF                     l674:	
  2974  0DDF  0837               	movf	___fttol@exp1,w
  2975  0DE0  1D03               	btfss	3,2
  2976  0DE1  2DD4               	goto	l2126
  2977  0DE2                     l2128:	
  2978  0DE2  0832               	movf	___fttol@sign1,w
  2979  0DE3  1903               	btfsc	3,2
  2980  0DE4  2DF0               	goto	l2132
  2981  0DE5  09B3               	comf	___fttol@lval,f
  2982  0DE6  09B4               	comf	___fttol@lval+1,f
  2983  0DE7  09B5               	comf	___fttol@lval+2,f
  2984  0DE8  09B6               	comf	___fttol@lval+3,f
  2985  0DE9  0AB3               	incf	___fttol@lval,f
  2986  0DEA  1903               	skipnz
  2987  0DEB  0AB4               	incf	___fttol@lval+1,f
  2988  0DEC  1903               	skipnz
  2989  0DED  0AB5               	incf	___fttol@lval+2,f
  2990  0DEE  1903               	skipnz
  2991  0DEF  0AB6               	incf	___fttol@lval+3,f
  2992  0DF0                     l2132:	
  2993  0DF0  0836               	movf	___fttol@lval+3,w
  2994  0DF1  00AD               	movwf	?___fttol+3
  2995  0DF2  0835               	movf	___fttol@lval+2,w
  2996  0DF3  00AC               	movwf	?___fttol+2
  2997  0DF4  0834               	movf	___fttol@lval+1,w
  2998  0DF5  00AB               	movwf	?___fttol+1
  2999  0DF6  0833               	movf	___fttol@lval,w
  3000  0DF7  00AA               	movwf	?___fttol
  3001  0DF8  0008               	return
  3002  0DF9                     __end_of___fttol:	
  3003                           
  3004                           	psect	text9
  3005  08EA                     __ptext9:	
  3006 ;; *************** function ___ftneg *****************
  3007 ;; Defined at:
  3008 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftneg.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  f1              3    0[BANK0 ] float 
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  3    0[BANK0 ] float 
  3015 ;; Registers used:
  3016 ;;		wreg
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3022 ;;      Params:         0       3       0       0       0
  3023 ;;      Locals:         0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0
  3025 ;;      Totals:         0       3       0       0       0
  3026 ;;Total ram usage:        3 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; This function calls:
  3029 ;;		Nothing
  3030 ;; This function is called by:
  3031 ;;		_LCD_DisplayFloatNumber
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function ___ftneg
  3037  08EA                     ___ftneg:	
  3038                           
  3039                           ;incstack = 0
  3040                           ; Regs used in ___ftneg: [wreg]
  3041  08EA  1283               	bcf	3,5	;RP0=0, select bank0
  3042  08EB  1303               	bcf	3,6	;RP1=0, select bank0
  3043  08EC  0822               	movf	___ftneg@f1+2,w
  3044  08ED  0421               	iorwf	___ftneg@f1+1,w
  3045  08EE  0420               	iorwf	___ftneg@f1,w
  3046  08EF  1903               	skipnz
  3047  08F0  0008               	return
  3048  08F1  3080               	movlw	128
  3049  08F2  06A2               	xorwf	___ftneg@f1+2,f
  3050  08F3  0008               	return
  3051  08F4                     __end_of___ftneg:	
  3052                           
  3053                           	psect	text10
  3054  0053                     __ptext10:	
  3055 ;; *************** function ___ftmul *****************
  3056 ;; Defined at:
  3057 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftmul.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  f1              3    8[COMMON] float 
  3060 ;;  f2              3   11[COMMON] float 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  3063 ;;  sign            1    9[BANK0 ] unsigned char 
  3064 ;;  cntr            1    8[BANK0 ] unsigned char 
  3065 ;;  exp             1    4[BANK0 ] unsigned char 
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  3    8[COMMON] float 
  3068 ;; Registers used:
  3069 ;;		wreg, status,2, status,0, pclath, cstack
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3075 ;;      Params:         6       0       0       0       0
  3076 ;;      Locals:         0       6       0       0       0
  3077 ;;      Temps:          0       4       0       0       0
  3078 ;;      Totals:         6      10       0       0       0
  3079 ;;Total ram usage:       16 bytes
  3080 ;; Hardware stack levels used:    1
  3081 ;; Hardware stack levels required when called:    1
  3082 ;; This function calls:
  3083 ;;		___ftpack
  3084 ;; This function is called by:
  3085 ;;		_LCD_DisplayFloatNumber
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           
  3090                           ;psect for function ___ftmul
  3091  0053                     ___ftmul:	
  3092                           
  3093                           ;incstack = 0
  3094                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3095  0053  0878               	movf	___ftmul@f1,w
  3096  0054  1283               	bcf	3,5	;RP0=0, select bank0
  3097  0055  1303               	bcf	3,6	;RP1=0, select bank0
  3098  0056  00A0               	movwf	??___ftmul
  3099  0057  0879               	movf	___ftmul@f1+1,w
  3100  0058  00A1               	movwf	??___ftmul+1
  3101  0059  087A               	movf	___ftmul@f1+2,w
  3102  005A  00A2               	movwf	??___ftmul+2
  3103  005B  1003               	clrc
  3104  005C  0D21               	rlf	??___ftmul+1,w
  3105  005D  0D22               	rlf	??___ftmul+2,w
  3106  005E  00A3               	movwf	??___ftmul+3
  3107  005F  0823               	movf	??___ftmul+3,w
  3108  0060  00A4               	movwf	___ftmul@exp
  3109  0061  0824               	movf	___ftmul@exp,w
  3110  0062  1D03               	btfss	3,2
  3111  0063  286B               	goto	l2042
  3112  0064  3000               	movlw	0
  3113  0065  00F8               	movwf	?___ftmul
  3114  0066  3000               	movlw	0
  3115  0067  00F9               	movwf	?___ftmul+1
  3116  0068  3000               	movlw	0
  3117  0069  00FA               	movwf	?___ftmul+2
  3118  006A  0008               	return
  3119  006B                     l2042:	
  3120  006B  087B               	movf	___ftmul@f2,w
  3121  006C  00A0               	movwf	??___ftmul
  3122  006D  087C               	movf	___ftmul@f2+1,w
  3123  006E  00A1               	movwf	??___ftmul+1
  3124  006F  087D               	movf	___ftmul@f2+2,w
  3125  0070  00A2               	movwf	??___ftmul+2
  3126  0071  1003               	clrc
  3127  0072  0D21               	rlf	??___ftmul+1,w
  3128  0073  0D22               	rlf	??___ftmul+2,w
  3129  0074  00A3               	movwf	??___ftmul+3
  3130  0075  0823               	movf	??___ftmul+3,w
  3131  0076  00A9               	movwf	___ftmul@sign
  3132  0077  0829               	movf	___ftmul@sign,w
  3133  0078  1D03               	btfss	3,2
  3134  0079  2881               	goto	l2048
  3135  007A  3000               	movlw	0
  3136  007B  00F8               	movwf	?___ftmul
  3137  007C  3000               	movlw	0
  3138  007D  00F9               	movwf	?___ftmul+1
  3139  007E  3000               	movlw	0
  3140  007F  00FA               	movwf	?___ftmul+2
  3141  0080  0008               	return
  3142  0081                     l2048:	
  3143  0081  0829               	movf	___ftmul@sign,w
  3144  0082  3E7B               	addlw	123
  3145  0083  00A0               	movwf	??___ftmul
  3146  0084  0820               	movf	??___ftmul,w
  3147  0085  07A4               	addwf	___ftmul@exp,f
  3148  0086  0878               	movf	___ftmul@f1,w
  3149  0087  00A0               	movwf	??___ftmul
  3150  0088  0879               	movf	___ftmul@f1+1,w
  3151  0089  00A1               	movwf	??___ftmul+1
  3152  008A  087A               	movf	___ftmul@f1+2,w
  3153  008B  00A2               	movwf	??___ftmul+2
  3154  008C  3010               	movlw	16
  3155  008D                     u3345:	
  3156  008D  1003               	clrc
  3157  008E  0CA2               	rrf	??___ftmul+2,f
  3158  008F  0CA1               	rrf	??___ftmul+1,f
  3159  0090  0CA0               	rrf	??___ftmul,f
  3160  0091  3EFF               	addlw	-1
  3161  0092  1D03               	skipz
  3162  0093  288D               	goto	u3345
  3163  0094  0820               	movf	??___ftmul,w
  3164  0095  00A3               	movwf	??___ftmul+3
  3165  0096  0823               	movf	??___ftmul+3,w
  3166  0097  00A9               	movwf	___ftmul@sign
  3167  0098  087B               	movf	___ftmul@f2,w
  3168  0099  00A0               	movwf	??___ftmul
  3169  009A  087C               	movf	___ftmul@f2+1,w
  3170  009B  00A1               	movwf	??___ftmul+1
  3171  009C  087D               	movf	___ftmul@f2+2,w
  3172  009D  00A2               	movwf	??___ftmul+2
  3173  009E  3010               	movlw	16
  3174  009F                     u3355:	
  3175  009F  1003               	clrc
  3176  00A0  0CA2               	rrf	??___ftmul+2,f
  3177  00A1  0CA1               	rrf	??___ftmul+1,f
  3178  00A2  0CA0               	rrf	??___ftmul,f
  3179  00A3  3EFF               	addlw	-1
  3180  00A4  1D03               	skipz
  3181  00A5  289F               	goto	u3355
  3182  00A6  0820               	movf	??___ftmul,w
  3183  00A7  00A3               	movwf	??___ftmul+3
  3184  00A8  0823               	movf	??___ftmul+3,w
  3185  00A9  06A9               	xorwf	___ftmul@sign,f
  3186  00AA  3080               	movlw	128
  3187  00AB  00A0               	movwf	??___ftmul
  3188  00AC  0820               	movf	??___ftmul,w
  3189  00AD  05A9               	andwf	___ftmul@sign,f
  3190  00AE  17F9               	bsf	___ftmul@f1+1,7
  3191  00AF  17FC               	bsf	___ftmul@f2+1,7
  3192  00B0  30FF               	movlw	255
  3193  00B1  05FB               	andwf	___ftmul@f2,f
  3194  00B2  30FF               	movlw	255
  3195  00B3  05FC               	andwf	___ftmul@f2+1,f
  3196  00B4  3000               	movlw	0
  3197  00B5  05FD               	andwf	___ftmul@f2+2,f
  3198  00B6  3000               	movlw	0
  3199  00B7  00A5               	movwf	___ftmul@f3_as_product
  3200  00B8  3000               	movlw	0
  3201  00B9  00A6               	movwf	___ftmul@f3_as_product+1
  3202  00BA  3000               	movlw	0
  3203  00BB  00A7               	movwf	___ftmul@f3_as_product+2
  3204  00BC  3007               	movlw	7
  3205  00BD  00A0               	movwf	??___ftmul
  3206  00BE  0820               	movf	??___ftmul,w
  3207  00BF  00A8               	movwf	___ftmul@cntr
  3208  00C0                     l2060:	
  3209  00C0  1C78               	btfss	___ftmul@f1,0
  3210  00C1  28D0               	goto	l2064
  3211  00C2  087B               	movf	___ftmul@f2,w
  3212  00C3  07A5               	addwf	___ftmul@f3_as_product,f
  3213  00C4  087C               	movf	___ftmul@f2+1,w
  3214  00C5  1103               	clrz
  3215  00C6  1803               	skipnc
  3216  00C7  0A7C               	incf	___ftmul@f2+1,w
  3217  00C8  1D03               	btfss	3,2
  3218  00C9  07A6               	addwf	___ftmul@f3_as_product+1,f
  3219  00CA  087D               	movf	___ftmul@f2+2,w
  3220  00CB  1103               	clrz
  3221  00CC  1803               	skipnc
  3222  00CD  0A7D               	incf	___ftmul@f2+2,w
  3223  00CE  1D03               	btfss	3,2
  3224  00CF  07A7               	addwf	___ftmul@f3_as_product+2,f
  3225  00D0                     l2064:	
  3226  00D0  3001               	movlw	1
  3227  00D1                     u3385:	
  3228  00D1  1003               	clrc
  3229  00D2  0CFA               	rrf	___ftmul@f1+2,f
  3230  00D3  0CF9               	rrf	___ftmul@f1+1,f
  3231  00D4  0CF8               	rrf	___ftmul@f1,f
  3232  00D5  3EFF               	addlw	-1
  3233  00D6  1D03               	skipz
  3234  00D7  28D1               	goto	u3385
  3235  00D8  3001               	movlw	1
  3236  00D9                     u3395:	
  3237  00D9  1003               	clrc
  3238  00DA  0DFB               	rlf	___ftmul@f2,f
  3239  00DB  0DFC               	rlf	___ftmul@f2+1,f
  3240  00DC  0DFD               	rlf	___ftmul@f2+2,f
  3241  00DD  3EFF               	addlw	-1
  3242  00DE  1D03               	skipz
  3243  00DF  28D9               	goto	u3395
  3244  00E0  3001               	movlw	1
  3245  00E1  02A8               	subwf	___ftmul@cntr,f
  3246  00E2  1D03               	btfss	3,2
  3247  00E3  28C0               	goto	l2060
  3248  00E4  3009               	movlw	9
  3249  00E5  00A0               	movwf	??___ftmul
  3250  00E6  0820               	movf	??___ftmul,w
  3251  00E7  00A8               	movwf	___ftmul@cntr
  3252  00E8                     l2072:	
  3253  00E8  1C78               	btfss	___ftmul@f1,0
  3254  00E9  28F8               	goto	l2076
  3255  00EA  087B               	movf	___ftmul@f2,w
  3256  00EB  07A5               	addwf	___ftmul@f3_as_product,f
  3257  00EC  087C               	movf	___ftmul@f2+1,w
  3258  00ED  1103               	clrz
  3259  00EE  1803               	skipnc
  3260  00EF  0A7C               	incf	___ftmul@f2+1,w
  3261  00F0  1D03               	btfss	3,2
  3262  00F1  07A6               	addwf	___ftmul@f3_as_product+1,f
  3263  00F2  087D               	movf	___ftmul@f2+2,w
  3264  00F3  1103               	clrz
  3265  00F4  1803               	skipnc
  3266  00F5  0A7D               	incf	___ftmul@f2+2,w
  3267  00F6  1D03               	btfss	3,2
  3268  00F7  07A7               	addwf	___ftmul@f3_as_product+2,f
  3269  00F8                     l2076:	
  3270  00F8  3001               	movlw	1
  3271  00F9                     u3435:	
  3272  00F9  1003               	clrc
  3273  00FA  0CFA               	rrf	___ftmul@f1+2,f
  3274  00FB  0CF9               	rrf	___ftmul@f1+1,f
  3275  00FC  0CF8               	rrf	___ftmul@f1,f
  3276  00FD  3EFF               	addlw	-1
  3277  00FE  1D03               	skipz
  3278  00FF  28F9               	goto	u3435
  3279  0100  3001               	movlw	1
  3280  0101                     u3445:	
  3281  0101  1003               	clrc
  3282  0102  0CA7               	rrf	___ftmul@f3_as_product+2,f
  3283  0103  0CA6               	rrf	___ftmul@f3_as_product+1,f
  3284  0104  0CA5               	rrf	___ftmul@f3_as_product,f
  3285  0105  3EFF               	addlw	-1
  3286  0106  1D03               	skipz
  3287  0107  2901               	goto	u3445
  3288  0108  3001               	movlw	1
  3289  0109  02A8               	subwf	___ftmul@cntr,f
  3290  010A  1D03               	btfss	3,2
  3291  010B  28E8               	goto	l2072
  3292  010C  0825               	movf	___ftmul@f3_as_product,w
  3293  010D  00F0               	movwf	___ftpack@arg
  3294  010E  0826               	movf	___ftmul@f3_as_product+1,w
  3295  010F  00F1               	movwf	___ftpack@arg+1
  3296  0110  0827               	movf	___ftmul@f3_as_product+2,w
  3297  0111  00F2               	movwf	___ftpack@arg+2
  3298  0112  0824               	movf	___ftmul@exp,w
  3299  0113  00A0               	movwf	??___ftmul
  3300  0114  0820               	movf	??___ftmul,w
  3301  0115  00F3               	movwf	___ftpack@exp
  3302  0116  0829               	movf	___ftmul@sign,w
  3303  0117  00A1               	movwf	??___ftmul+1
  3304  0118  0821               	movf	??___ftmul+1,w
  3305  0119  00F4               	movwf	___ftpack@sign
  3306  011A  120A  158A  23FE   	fcall	___ftpack
  3307  011D  0870               	movf	?___ftpack,w
  3308  011E  00F8               	movwf	?___ftmul
  3309  011F  0871               	movf	?___ftpack+1,w
  3310  0120  00F9               	movwf	?___ftmul+1
  3311  0121  0872               	movf	?___ftpack+2,w
  3312  0122  00FA               	movwf	?___ftmul+2
  3313  0123  0008               	return
  3314  0124                     __end_of___ftmul:	
  3315                           
  3316                           	psect	text11
  3317  0499                     __ptext11:	
  3318 ;; *************** function ___ftadd *****************
  3319 ;; Defined at:
  3320 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftadd.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  f1              3    3[BANK0 ] float 
  3323 ;;  f2              3    6[BANK0 ] float 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  exp1            1   15[BANK0 ] unsigned char 
  3326 ;;  exp2            1   14[BANK0 ] unsigned char 
  3327 ;;  sign            1   13[BANK0 ] unsigned char 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  3    3[BANK0 ] float 
  3330 ;; Registers used:
  3331 ;;		wreg, status,2, status,0, pclath, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3337 ;;      Params:         0       6       0       0       0
  3338 ;;      Locals:         0       3       0       0       0
  3339 ;;      Temps:          0       4       0       0       0
  3340 ;;      Totals:         0      13       0       0       0
  3341 ;;Total ram usage:       13 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    1
  3344 ;; This function calls:
  3345 ;;		___ftpack
  3346 ;; This function is called by:
  3347 ;;		_LCD_DisplayFloatNumber
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           
  3352                           ;psect for function ___ftadd
  3353  0499                     ___ftadd:	
  3354                           
  3355                           ;incstack = 0
  3356                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3357  0499  1283               	bcf	3,5	;RP0=0, select bank0
  3358  049A  1303               	bcf	3,6	;RP1=0, select bank0
  3359  049B  0823               	movf	___ftadd@f1,w
  3360  049C  00A9               	movwf	??___ftadd
  3361  049D  0824               	movf	___ftadd@f1+1,w
  3362  049E  00AA               	movwf	??___ftadd+1
  3363  049F  0825               	movf	___ftadd@f1+2,w
  3364  04A0  00AB               	movwf	??___ftadd+2
  3365  04A1  1003               	clrc
  3366  04A2  0D2A               	rlf	??___ftadd+1,w
  3367  04A3  0D2B               	rlf	??___ftadd+2,w
  3368  04A4  00AC               	movwf	??___ftadd+3
  3369  04A5  082C               	movf	??___ftadd+3,w
  3370  04A6  00AF               	movwf	___ftadd@exp1
  3371  04A7  0826               	movf	___ftadd@f2,w
  3372  04A8  00A9               	movwf	??___ftadd
  3373  04A9  0827               	movf	___ftadd@f2+1,w
  3374  04AA  00AA               	movwf	??___ftadd+1
  3375  04AB  0828               	movf	___ftadd@f2+2,w
  3376  04AC  00AB               	movwf	??___ftadd+2
  3377  04AD  1003               	clrc
  3378  04AE  0D2A               	rlf	??___ftadd+1,w
  3379  04AF  0D2B               	rlf	??___ftadd+2,w
  3380  04B0  00AC               	movwf	??___ftadd+3
  3381  04B1  082C               	movf	??___ftadd+3,w
  3382  04B2  00AE               	movwf	___ftadd@exp2
  3383  04B3  082F               	movf	___ftadd@exp1,w
  3384  04B4  1903               	btfsc	3,2
  3385  04B5  2CC2               	goto	l1972
  3386  04B6  082E               	movf	___ftadd@exp2,w
  3387  04B7  022F               	subwf	___ftadd@exp1,w
  3388  04B8  1803               	skipnc
  3389  04B9  2CC9               	goto	l1976
  3390  04BA  032F               	decf	___ftadd@exp1,w
  3391  04BB  3AFF               	xorlw	255
  3392  04BC  072E               	addwf	___ftadd@exp2,w
  3393  04BD  00A9               	movwf	??___ftadd
  3394  04BE  3019               	movlw	25
  3395  04BF  0229               	subwf	??___ftadd,w
  3396  04C0  1C03               	skipc
  3397  04C1  2CC9               	goto	l1976
  3398  04C2                     l1972:	
  3399  04C2  0826               	movf	___ftadd@f2,w
  3400  04C3  00A3               	movwf	?___ftadd
  3401  04C4  0827               	movf	___ftadd@f2+1,w
  3402  04C5  00A4               	movwf	?___ftadd+1
  3403  04C6  0828               	movf	___ftadd@f2+2,w
  3404  04C7  00A5               	movwf	?___ftadd+2
  3405  04C8  0008               	return
  3406  04C9                     l1976:	
  3407  04C9  082E               	movf	___ftadd@exp2,w
  3408  04CA  1903               	btfsc	3,2
  3409  04CB  0008               	return
  3410  04CC  082F               	movf	___ftadd@exp1,w
  3411  04CD  022E               	subwf	___ftadd@exp2,w
  3412  04CE  1803               	skipnc
  3413  04CF  2CD8               	goto	l1982
  3414  04D0  032E               	decf	___ftadd@exp2,w
  3415  04D1  3AFF               	xorlw	255
  3416  04D2  072F               	addwf	___ftadd@exp1,w
  3417  04D3  00A9               	movwf	??___ftadd
  3418  04D4  3019               	movlw	25
  3419  04D5  0229               	subwf	??___ftadd,w
  3420  04D6  1803               	btfsc	3,0
  3421  04D7  0008               	return
  3422  04D8                     l1982:	
  3423  04D8  3006               	movlw	6
  3424  04D9  00A9               	movwf	??___ftadd
  3425  04DA  0829               	movf	??___ftadd,w
  3426  04DB  00AD               	movwf	___ftadd@sign
  3427  04DC  1BA5               	btfsc	___ftadd@f1+2,7
  3428  04DD  17AD               	bsf	___ftadd@sign,7
  3429  04DE  1BA8               	btfsc	___ftadd@f2+2,7
  3430  04DF  172D               	bsf	___ftadd@sign,6
  3431  04E0  17A4               	bsf	___ftadd@f1+1,7
  3432  04E1  30FF               	movlw	255
  3433  04E2  05A3               	andwf	___ftadd@f1,f
  3434  04E3  30FF               	movlw	255
  3435  04E4  05A4               	andwf	___ftadd@f1+1,f
  3436  04E5  3000               	movlw	0
  3437  04E6  05A5               	andwf	___ftadd@f1+2,f
  3438  04E7  17A7               	bsf	___ftadd@f2+1,7
  3439  04E8  30FF               	movlw	255
  3440  04E9  05A6               	andwf	___ftadd@f2,f
  3441  04EA  30FF               	movlw	255
  3442  04EB  05A7               	andwf	___ftadd@f2+1,f
  3443  04EC  3000               	movlw	0
  3444  04ED  05A8               	andwf	___ftadd@f2+2,f
  3445  04EE  082E               	movf	___ftadd@exp2,w
  3446  04EF  022F               	subwf	___ftadd@exp1,w
  3447  04F0  1803               	skipnc
  3448  04F1  2D18               	goto	l2004
  3449  04F2                     l1994:	
  3450  04F2  3001               	movlw	1
  3451  04F3                     u3175:	
  3452  04F3  1003               	clrc
  3453  04F4  0DA6               	rlf	___ftadd@f2,f
  3454  04F5  0DA7               	rlf	___ftadd@f2+1,f
  3455  04F6  0DA8               	rlf	___ftadd@f2+2,f
  3456  04F7  3EFF               	addlw	-1
  3457  04F8  1D03               	skipz
  3458  04F9  2CF3               	goto	u3175
  3459  04FA  3001               	movlw	1
  3460  04FB  02AE               	subwf	___ftadd@exp2,f
  3461  04FC  082E               	movf	___ftadd@exp2,w
  3462  04FD  062F               	xorwf	___ftadd@exp1,w
  3463  04FE  1903               	skipnz
  3464  04FF  2D13               	goto	l2002
  3465  0500  3001               	movlw	1
  3466  0501  02AD               	subwf	___ftadd@sign,f
  3467  0502  082D               	movf	___ftadd@sign,w
  3468  0503  3907               	andlw	7
  3469  0504  1903               	btfsc	3,2
  3470  0505  2D13               	goto	l2002
  3471  0506  2CF2               	goto	l1994
  3472  0507                     l2000:	
  3473  0507  3001               	movlw	1
  3474  0508                     u3205:	
  3475  0508  1003               	clrc
  3476  0509  0CA5               	rrf	___ftadd@f1+2,f
  3477  050A  0CA4               	rrf	___ftadd@f1+1,f
  3478  050B  0CA3               	rrf	___ftadd@f1,f
  3479  050C  3EFF               	addlw	-1
  3480  050D  1D03               	skipz
  3481  050E  2D08               	goto	u3205
  3482  050F  3001               	movlw	1
  3483  0510  00A9               	movwf	??___ftadd
  3484  0511  0829               	movf	??___ftadd,w
  3485  0512  07AF               	addwf	___ftadd@exp1,f
  3486  0513                     l2002:	
  3487  0513  082F               	movf	___ftadd@exp1,w
  3488  0514  062E               	xorwf	___ftadd@exp2,w
  3489  0515  1903               	btfsc	3,2
  3490  0516  2D41               	goto	l614
  3491  0517  2D07               	goto	l2000
  3492  0518                     l2004:	
  3493  0518  082F               	movf	___ftadd@exp1,w
  3494  0519  022E               	subwf	___ftadd@exp2,w
  3495  051A  1803               	skipnc
  3496  051B  2D41               	goto	l614
  3497  051C                     l2006:	
  3498  051C  3001               	movlw	1
  3499  051D                     u3235:	
  3500  051D  1003               	clrc
  3501  051E  0DA3               	rlf	___ftadd@f1,f
  3502  051F  0DA4               	rlf	___ftadd@f1+1,f
  3503  0520  0DA5               	rlf	___ftadd@f1+2,f
  3504  0521  3EFF               	addlw	-1
  3505  0522  1D03               	skipz
  3506  0523  2D1D               	goto	u3235
  3507  0524  3001               	movlw	1
  3508  0525  02AF               	subwf	___ftadd@exp1,f
  3509  0526  082E               	movf	___ftadd@exp2,w
  3510  0527  062F               	xorwf	___ftadd@exp1,w
  3511  0528  1903               	skipnz
  3512  0529  2D3D               	goto	l2014
  3513  052A  3001               	movlw	1
  3514  052B  02AD               	subwf	___ftadd@sign,f
  3515  052C  082D               	movf	___ftadd@sign,w
  3516  052D  3907               	andlw	7
  3517  052E  1903               	btfsc	3,2
  3518  052F  2D3D               	goto	l2014
  3519  0530  2D1C               	goto	l2006
  3520  0531                     l2012:	
  3521  0531  3001               	movlw	1
  3522  0532                     u3265:	
  3523  0532  1003               	clrc
  3524  0533  0CA8               	rrf	___ftadd@f2+2,f
  3525  0534  0CA7               	rrf	___ftadd@f2+1,f
  3526  0535  0CA6               	rrf	___ftadd@f2,f
  3527  0536  3EFF               	addlw	-1
  3528  0537  1D03               	skipz
  3529  0538  2D32               	goto	u3265
  3530  0539  3001               	movlw	1
  3531  053A  00A9               	movwf	??___ftadd
  3532  053B  0829               	movf	??___ftadd,w
  3533  053C  07AE               	addwf	___ftadd@exp2,f
  3534  053D                     l2014:	
  3535  053D  082F               	movf	___ftadd@exp1,w
  3536  053E  062E               	xorwf	___ftadd@exp2,w
  3537  053F  1D03               	skipz
  3538  0540  2D31               	goto	l2012
  3539  0541                     l614:	
  3540  0541  1FAD               	btfss	___ftadd@sign,7
  3541  0542  2D53               	goto	l2018
  3542  0543  30FF               	movlw	255
  3543  0544  06A3               	xorwf	___ftadd@f1,f
  3544  0545  30FF               	movlw	255
  3545  0546  06A4               	xorwf	___ftadd@f1+1,f
  3546  0547  30FF               	movlw	255
  3547  0548  06A5               	xorwf	___ftadd@f1+2,f
  3548  0549  3001               	movlw	1
  3549  054A  07A3               	addwf	___ftadd@f1,f
  3550  054B  3000               	movlw	0
  3551  054C  1803               	skipnc
  3552  054D  3001               	movlw	1
  3553  054E  07A4               	addwf	___ftadd@f1+1,f
  3554  054F  3000               	movlw	0
  3555  0550  1803               	skipnc
  3556  0551  3001               	movlw	1
  3557  0552  07A5               	addwf	___ftadd@f1+2,f
  3558  0553                     l2018:	
  3559  0553  1F2D               	btfss	___ftadd@sign,6
  3560  0554  2D65               	goto	l2022
  3561  0555  30FF               	movlw	255
  3562  0556  06A6               	xorwf	___ftadd@f2,f
  3563  0557  30FF               	movlw	255
  3564  0558  06A7               	xorwf	___ftadd@f2+1,f
  3565  0559  30FF               	movlw	255
  3566  055A  06A8               	xorwf	___ftadd@f2+2,f
  3567  055B  3001               	movlw	1
  3568  055C  07A6               	addwf	___ftadd@f2,f
  3569  055D  3000               	movlw	0
  3570  055E  1803               	skipnc
  3571  055F  3001               	movlw	1
  3572  0560  07A7               	addwf	___ftadd@f2+1,f
  3573  0561  3000               	movlw	0
  3574  0562  1803               	skipnc
  3575  0563  3001               	movlw	1
  3576  0564  07A8               	addwf	___ftadd@f2+2,f
  3577  0565                     l2022:	
  3578  0565  01AD               	clrf	___ftadd@sign
  3579  0566  0823               	movf	___ftadd@f1,w
  3580  0567  07A6               	addwf	___ftadd@f2,f
  3581  0568  0824               	movf	___ftadd@f1+1,w
  3582  0569  1103               	clrz
  3583  056A  1803               	skipnc
  3584  056B  0A24               	incf	___ftadd@f1+1,w
  3585  056C  1D03               	btfss	3,2
  3586  056D  07A7               	addwf	___ftadd@f2+1,f
  3587  056E  0825               	movf	___ftadd@f1+2,w
  3588  056F  1103               	clrz
  3589  0570  1803               	skipnc
  3590  0571  0A25               	incf	___ftadd@f1+2,w
  3591  0572  1D03               	btfss	3,2
  3592  0573  07A8               	addwf	___ftadd@f2+2,f
  3593  0574  1FA8               	btfss	___ftadd@f2+2,7
  3594  0575  2D88               	goto	l2032
  3595  0576  30FF               	movlw	255
  3596  0577  06A6               	xorwf	___ftadd@f2,f
  3597  0578  30FF               	movlw	255
  3598  0579  06A7               	xorwf	___ftadd@f2+1,f
  3599  057A  30FF               	movlw	255
  3600  057B  06A8               	xorwf	___ftadd@f2+2,f
  3601  057C  3001               	movlw	1
  3602  057D  07A6               	addwf	___ftadd@f2,f
  3603  057E  3000               	movlw	0
  3604  057F  1803               	skipnc
  3605  0580  3001               	movlw	1
  3606  0581  07A7               	addwf	___ftadd@f2+1,f
  3607  0582  3000               	movlw	0
  3608  0583  1803               	skipnc
  3609  0584  3001               	movlw	1
  3610  0585  07A8               	addwf	___ftadd@f2+2,f
  3611  0586  01AD               	clrf	___ftadd@sign
  3612  0587  0AAD               	incf	___ftadd@sign,f
  3613  0588                     l2032:	
  3614  0588  0826               	movf	___ftadd@f2,w
  3615  0589  00F0               	movwf	___ftpack@arg
  3616  058A  0827               	movf	___ftadd@f2+1,w
  3617  058B  00F1               	movwf	___ftpack@arg+1
  3618  058C  0828               	movf	___ftadd@f2+2,w
  3619  058D  00F2               	movwf	___ftpack@arg+2
  3620  058E  082F               	movf	___ftadd@exp1,w
  3621  058F  00A9               	movwf	??___ftadd
  3622  0590  0829               	movf	??___ftadd,w
  3623  0591  00F3               	movwf	___ftpack@exp
  3624  0592  082D               	movf	___ftadd@sign,w
  3625  0593  00AA               	movwf	??___ftadd+1
  3626  0594  082A               	movf	??___ftadd+1,w
  3627  0595  00F4               	movwf	___ftpack@sign
  3628  0596  120A  158A  23FE   	fcall	___ftpack
  3629  0599  0870               	movf	?___ftpack,w
  3630  059A  1283               	bcf	3,5	;RP0=0, select bank0
  3631  059B  1303               	bcf	3,6	;RP1=0, select bank0
  3632  059C  00A3               	movwf	?___ftadd
  3633  059D  0871               	movf	?___ftpack+1,w
  3634  059E  00A4               	movwf	?___ftadd+1
  3635  059F  0872               	movf	?___ftpack+2,w
  3636  05A0  00A5               	movwf	?___ftadd+2
  3637  05A1  0008               	return
  3638  05A2                     __end_of___ftadd:	
  3639                           
  3640                           	psect	text12
  3641  0BFE                     __ptext12:	
  3642 ;; *************** function ___ftpack *****************
  3643 ;; Defined at:
  3644 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\float.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;  arg             3    0[COMMON] unsigned um
  3647 ;;  exp             1    3[COMMON] unsigned char 
  3648 ;;  sign            1    4[COMMON] unsigned char 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  3    0[COMMON] float 
  3653 ;; Registers used:
  3654 ;;		wreg, status,2, status,0
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3660 ;;      Params:         5       0       0       0       0
  3661 ;;      Locals:         0       0       0       0       0
  3662 ;;      Temps:          3       0       0       0       0
  3663 ;;      Totals:         8       0       0       0       0
  3664 ;;Total ram usage:        8 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		___awtoft
  3670 ;;		___ftadd
  3671 ;;		___ftdiv
  3672 ;;		___ftmul
  3673 ;;		___lltoft
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           
  3678                           ;psect for function ___ftpack
  3679  0BFE                     ___ftpack:	
  3680                           
  3681                           ;incstack = 0
  3682                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3683  0BFE  0873               	movf	___ftpack@exp,w
  3684  0BFF  1903               	btfsc	3,2
  3685  0C00  2C06               	goto	l1856
  3686  0C01  0872               	movf	___ftpack@arg+2,w
  3687  0C02  0471               	iorwf	___ftpack@arg+1,w
  3688  0C03  0470               	iorwf	___ftpack@arg,w
  3689  0C04  1D03               	skipz
  3690  0C05  2C19               	goto	l1862
  3691  0C06                     l1856:	
  3692  0C06  3000               	movlw	0
  3693  0C07  00F0               	movwf	?___ftpack
  3694  0C08  3000               	movlw	0
  3695  0C09  00F1               	movwf	?___ftpack+1
  3696  0C0A  3000               	movlw	0
  3697  0C0B  00F2               	movwf	?___ftpack+2
  3698  0C0C  0008               	return
  3699  0C0D                     l1860:	
  3700  0C0D  3001               	movlw	1
  3701  0C0E  00F5               	movwf	??___ftpack
  3702  0C0F  0875               	movf	??___ftpack,w
  3703  0C10  07F3               	addwf	___ftpack@exp,f
  3704  0C11  3001               	movlw	1
  3705  0C12                     u2785:	
  3706  0C12  1003               	clrc
  3707  0C13  0CF2               	rrf	___ftpack@arg+2,f
  3708  0C14  0CF1               	rrf	___ftpack@arg+1,f
  3709  0C15  0CF0               	rrf	___ftpack@arg,f
  3710  0C16  3EFF               	addlw	-1
  3711  0C17  1D03               	skipz
  3712  0C18  2C12               	goto	u2785
  3713  0C19                     l1862:	
  3714  0C19  30FE               	movlw	254
  3715  0C1A  0572               	andwf	___ftpack@arg+2,w
  3716  0C1B  1903               	btfsc	3,2
  3717  0C1C  2C34               	goto	l583
  3718  0C1D  2C0D               	goto	l1860
  3719  0C1E                     l1864:	
  3720  0C1E  3001               	movlw	1
  3721  0C1F  00F5               	movwf	??___ftpack
  3722  0C20  0875               	movf	??___ftpack,w
  3723  0C21  07F3               	addwf	___ftpack@exp,f
  3724  0C22  3001               	movlw	1
  3725  0C23  07F0               	addwf	___ftpack@arg,f
  3726  0C24  3000               	movlw	0
  3727  0C25  1803               	skipnc
  3728  0C26  3001               	movlw	1
  3729  0C27  07F1               	addwf	___ftpack@arg+1,f
  3730  0C28  3000               	movlw	0
  3731  0C29  1803               	skipnc
  3732  0C2A  3001               	movlw	1
  3733  0C2B  07F2               	addwf	___ftpack@arg+2,f
  3734  0C2C  3001               	movlw	1
  3735  0C2D                     u2805:	
  3736  0C2D  1003               	clrc
  3737  0C2E  0CF2               	rrf	___ftpack@arg+2,f
  3738  0C2F  0CF1               	rrf	___ftpack@arg+1,f
  3739  0C30  0CF0               	rrf	___ftpack@arg,f
  3740  0C31  3EFF               	addlw	-1
  3741  0C32  1D03               	skipz
  3742  0C33  2C2D               	goto	u2805
  3743  0C34                     l583:	
  3744  0C34  30FF               	movlw	255
  3745  0C35  0572               	andwf	___ftpack@arg+2,w
  3746  0C36  1903               	btfsc	3,2
  3747  0C37  2C43               	goto	l1872
  3748  0C38  2C1E               	goto	l1864
  3749  0C39                     l1870:	
  3750  0C39  3001               	movlw	1
  3751  0C3A  02F3               	subwf	___ftpack@exp,f
  3752  0C3B  3001               	movlw	1
  3753  0C3C                     u2825:	
  3754  0C3C  1003               	clrc
  3755  0C3D  0DF0               	rlf	___ftpack@arg,f
  3756  0C3E  0DF1               	rlf	___ftpack@arg+1,f
  3757  0C3F  0DF2               	rlf	___ftpack@arg+2,f
  3758  0C40  3EFF               	addlw	-1
  3759  0C41  1D03               	skipz
  3760  0C42  2C3C               	goto	u2825
  3761  0C43                     l1872:	
  3762  0C43  1BF1               	btfsc	___ftpack@arg+1,7
  3763  0C44  2C49               	goto	l590
  3764  0C45  3002               	movlw	2
  3765  0C46  0273               	subwf	___ftpack@exp,w
  3766  0C47  1803               	skipnc
  3767  0C48  2C39               	goto	l1870
  3768  0C49                     l590:	
  3769  0C49  1873               	btfsc	___ftpack@exp,0
  3770  0C4A  2C51               	goto	l591
  3771  0C4B  30FF               	movlw	255
  3772  0C4C  05F0               	andwf	___ftpack@arg,f
  3773  0C4D  307F               	movlw	127
  3774  0C4E  05F1               	andwf	___ftpack@arg+1,f
  3775  0C4F  30FF               	movlw	255
  3776  0C50  05F2               	andwf	___ftpack@arg+2,f
  3777  0C51                     l591:	
  3778  0C51  1003               	clrc
  3779  0C52  0CF3               	rrf	___ftpack@exp,f
  3780  0C53  0873               	movf	___ftpack@exp,w
  3781  0C54  00F5               	movwf	??___ftpack
  3782  0C55  01F6               	clrf	??___ftpack+1
  3783  0C56  01F7               	clrf	??___ftpack+2
  3784  0C57  3010               	movlw	16
  3785  0C58                     u2865:	
  3786  0C58  1003               	clrc
  3787  0C59  0DF5               	rlf	??___ftpack,f
  3788  0C5A  0DF6               	rlf	??___ftpack+1,f
  3789  0C5B  0DF7               	rlf	??___ftpack+2,f
  3790  0C5C  3EFF               	addlw	-1
  3791  0C5D  1D03               	skipz
  3792  0C5E  2C58               	goto	u2865
  3793  0C5F  0875               	movf	??___ftpack,w
  3794  0C60  04F0               	iorwf	___ftpack@arg,f
  3795  0C61  0876               	movf	??___ftpack+1,w
  3796  0C62  04F1               	iorwf	___ftpack@arg+1,f
  3797  0C63  0877               	movf	??___ftpack+2,w
  3798  0C64  04F2               	iorwf	___ftpack@arg+2,f
  3799  0C65  0874               	movf	___ftpack@sign,w
  3800  0C66  1903               	btfsc	3,2
  3801  0C67  0008               	return
  3802  0C68  17F2               	bsf	___ftpack@arg+2,7
  3803  0C69  0008               	return
  3804  0C6A                     __end_of___ftpack:	
  3805                           
  3806                           	psect	text13
  3807  03A7                     __ptext13:	
  3808 ;; *************** function _LCD_DisplayNumber *****************
  3809 ;; Defined at:
  3810 ;;		line 529 in file "../00-libfiles/lcd.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;  v_numericSys    1    wreg     unsigned char 
  3813 ;;  v_number_u32    4    4[BANK0 ] unsigned long 
  3814 ;;  v_numOfDigit    1    8[BANK0 ] unsigned char 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;  v_numericSys    1   33[BANK0 ] unsigned char 
  3817 ;;  a              10   21[BANK0 ] unsigned char [10]
  3818 ;;  i               1   34[BANK0 ] unsigned char 
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3828 ;;      Params:         0       5       0       0       0
  3829 ;;      Locals:         0      14       0       0       0
  3830 ;;      Temps:          0      12       0       0       0
  3831 ;;      Totals:         0      31       0       0       0
  3832 ;;Total ram usage:       31 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; Hardware stack levels required when called:    6
  3835 ;; This function calls:
  3836 ;;		_LCD_DisplayChar
  3837 ;;		___bmul
  3838 ;;		___lldiv
  3839 ;; This function is called by:
  3840 ;;		_LCD_DisplayFloatNumber
  3841 ;;		_LCD_Printf
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           
  3846                           ;psect for function _LCD_DisplayNumber
  3847  03A7                     _LCD_DisplayNumber:	
  3848                           
  3849                           ;incstack = 0
  3850                           ; Regs used in _LCD_DisplayNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3851                           ;LCD_DisplayNumber@v_numericSystem_u8 stored from wreg
  3852  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  3853  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  3854  03A9  00C1               	movwf	LCD_DisplayNumber@v_numericSystem_u8
  3855                           
  3856                           ;lcd.c: 531: uint8_t i=0,a[10];
  3857  03AA  01C2               	clrf	LCD_DisplayNumber@i
  3858                           
  3859                           ;lcd.c: 533: if(2u == v_numericSystem_u8)
  3860  03AB  3002               	movlw	2
  3861  03AC  0641               	xorwf	LCD_DisplayNumber@v_numericSystem_u8,w
  3862  03AD  1903               	btfsc	3,2
  3863  03AE  2BEE               	goto	l1928
  3864  03AF  2BF2               	goto	l1930
  3865  03B0                     l1922:	
  3866                           ;lcd.c: 534: {
  3867                           ;lcd.c: 535: while(v_numOfDigitsToDisplay_u8!=0)
  3868                           
  3869                           
  3870                           ;lcd.c: 536: {
  3871                           ;lcd.c: 539: i = (((v_number_u32)&((1<<((v_numOfDigitsToDisplay_u8-1)))))!=0u);
  3872  03B0  0824               	movf	LCD_DisplayNumber@v_number_u32,w
  3873  03B1  00A9               	movwf	??_LCD_DisplayNumber
  3874  03B2  0825               	movf	LCD_DisplayNumber@v_number_u32+1,w
  3875  03B3  00AA               	movwf	??_LCD_DisplayNumber+1
  3876  03B4  0826               	movf	LCD_DisplayNumber@v_number_u32+2,w
  3877  03B5  00AB               	movwf	??_LCD_DisplayNumber+2
  3878  03B6  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  3879  03B7  00AC               	movwf	??_LCD_DisplayNumber+3
  3880  03B8  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  3881  03B9  3EFF               	addlw	-1
  3882  03BA  00AD               	movwf	??_LCD_DisplayNumber+4
  3883  03BB  0AAD               	incf	??_LCD_DisplayNumber+4,f
  3884  03BC  3001               	movlw	1
  3885  03BD  00AE               	movwf	??_LCD_DisplayNumber+5
  3886  03BE  3000               	movlw	0
  3887  03BF  00AF               	movwf	??_LCD_DisplayNumber+6
  3888  03C0  2BC4               	goto	u2974
  3889  03C1                     u2975:	
  3890  03C1  1003               	clrc
  3891  03C2  0DAE               	rlf	??_LCD_DisplayNumber+5,f
  3892  03C3  0DAF               	rlf	??_LCD_DisplayNumber+6,f
  3893  03C4                     u2974:	
  3894  03C4  0BAD               	decfsz	??_LCD_DisplayNumber+4,f
  3895  03C5  2BC1               	goto	u2975
  3896  03C6  082E               	movf	??_LCD_DisplayNumber+5,w
  3897  03C7  00B0               	movwf	??_LCD_DisplayNumber+7
  3898  03C8  082F               	movf	??_LCD_DisplayNumber+6,w
  3899  03C9  00B1               	movwf	??_LCD_DisplayNumber+8
  3900  03CA  3000               	movlw	0
  3901  03CB  1BB1               	btfsc	??_LCD_DisplayNumber+8,7
  3902  03CC  30FF               	movlw	255
  3903  03CD  00B2               	movwf	??_LCD_DisplayNumber+9
  3904  03CE  00B3               	movwf	??_LCD_DisplayNumber+10
  3905  03CF  0830               	movf	??_LCD_DisplayNumber+7,w
  3906  03D0  05A9               	andwf	??_LCD_DisplayNumber,f
  3907  03D1  0831               	movf	??_LCD_DisplayNumber+8,w
  3908  03D2  05AA               	andwf	??_LCD_DisplayNumber+1,f
  3909  03D3  0832               	movf	??_LCD_DisplayNumber+9,w
  3910  03D4  05AB               	andwf	??_LCD_DisplayNumber+2,f
  3911  03D5  0833               	movf	??_LCD_DisplayNumber+10,w
  3912  03D6  05AC               	andwf	??_LCD_DisplayNumber+3,f
  3913  03D7  082C               	movf	??_LCD_DisplayNumber+3,w
  3914  03D8  042B               	iorwf	??_LCD_DisplayNumber+2,w
  3915  03D9  042A               	iorwf	??_LCD_DisplayNumber+1,w
  3916  03DA  0429               	iorwf	??_LCD_DisplayNumber,w
  3917  03DB  1903               	btfsc	3,2
  3918  03DC  2BDF               	goto	u2980
  3919  03DD  3001               	movlw	1
  3920  03DE  2BE0               	goto	u2990
  3921  03DF                     u2980:	
  3922  03DF  3000               	movlw	0
  3923  03E0                     u2990:	
  3924  03E0  00B4               	movwf	??_LCD_DisplayNumber+11
  3925  03E1  0834               	movf	??_LCD_DisplayNumber+11,w
  3926  03E2  00C2               	movwf	LCD_DisplayNumber@i
  3927                           
  3928                           ;lcd.c: 540: LCD_DisplayChar(((i)+0x30));
  3929  03E3  0842               	movf	LCD_DisplayNumber@i,w
  3930  03E4  3E30               	addlw	48
  3931  03E5  120A  158A  2179  120A  118A  	fcall	_LCD_DisplayChar
  3932                           
  3933                           ;lcd.c: 541: v_numOfDigitsToDisplay_u8--;
  3934  03EA  3001               	movlw	1
  3935  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  3936  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  3937  03ED  02A8               	subwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,f
  3938  03EE                     l1928:	
  3939  03EE  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  3940  03EF  1903               	btfsc	3,2
  3941  03F0  0008               	return
  3942  03F1  2BB0               	goto	l1922
  3943  03F2                     l1930:	
  3944                           ;lcd.c: 542: }
  3945                           ;lcd.c: 543: }
  3946                           
  3947                           
  3948                           ;lcd.c: 544: else if(v_number_u32==0)
  3949  03F2  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  3950  03F3  0426               	iorwf	LCD_DisplayNumber@v_number_u32+2,w
  3951  03F4  0425               	iorwf	LCD_DisplayNumber@v_number_u32+1,w
  3952  03F5  0424               	iorwf	LCD_DisplayNumber@v_number_u32,w
  3953  03F6  1D03               	skipz
  3954  03F7  2BFD               	goto	l1934
  3955                           
  3956                           ;lcd.c: 545: {
  3957                           ;lcd.c: 548: LCD_DisplayChar('0');
  3958  03F8  3030               	movlw	48
  3959  03F9  120A  158A  2179   	fcall	_LCD_DisplayChar
  3960                           
  3961                           ;lcd.c: 549: }
  3962  03FC  0008               	return
  3963  03FD                     l1934:	
  3964                           
  3965                           ;lcd.c: 550: else
  3966                           ;lcd.c: 551: {
  3967                           ;lcd.c: 552: for(i=0;i<v_numOfDigitsToDisplay_u8;i++)
  3968  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  3969  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  3970  03FF  01C2               	clrf	LCD_DisplayNumber@i
  3971  0400                     l1952:	
  3972  0400  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  3973  0401  0242               	subwf	LCD_DisplayNumber@i,w
  3974  0402  1803               	btfsc	3,0
  3975  0403  2C95               	goto	l1964
  3976                           
  3977                           ;lcd.c: 553: {
  3978                           ;lcd.c: 556: if(v_number_u32!=0)
  3979  0404  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  3980  0405  0426               	iorwf	LCD_DisplayNumber@v_number_u32+2,w
  3981  0406  0425               	iorwf	LCD_DisplayNumber@v_number_u32+1,w
  3982  0407  0424               	iorwf	LCD_DisplayNumber@v_number_u32,w
  3983  0408  1903               	skipnz
  3984  0409  2C5F               	goto	l1942
  3985                           
  3986                           ;lcd.c: 557: {
  3987                           ;lcd.c: 564: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u3
      +                          2/v_numericSystem_u8)));
  3988  040A  0841               	movf	LCD_DisplayNumber@v_numericSystem_u8,w
  3989  040B  00A9               	movwf	??_LCD_DisplayNumber
  3990  040C  0829               	movf	??_LCD_DisplayNumber,w
  3991  040D  00A0               	movwf	___bmul@multiplicand
  3992  040E  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  3993  040F  00F7               	movwf	___lldiv@dividend+3
  3994  0410  0826               	movf	LCD_DisplayNumber@v_number_u32+2,w
  3995  0411  00F6               	movwf	___lldiv@dividend+2
  3996  0412  0825               	movf	LCD_DisplayNumber@v_number_u32+1,w
  3997  0413  00F5               	movwf	___lldiv@dividend+1
  3998  0414  0824               	movf	LCD_DisplayNumber@v_number_u32,w
  3999  0415  00F4               	movwf	___lldiv@dividend
  4000  0416  0841               	movf	LCD_DisplayNumber@v_numericSystem_u8,w
  4001  0417  00AA               	movwf	??_LCD_DisplayNumber+1
  4002  0418  01AB               	clrf	??_LCD_DisplayNumber+2
  4003  0419  01AC               	clrf	??_LCD_DisplayNumber+3
  4004  041A  01AD               	clrf	??_LCD_DisplayNumber+4
  4005  041B  082D               	movf	??_LCD_DisplayNumber+4,w
  4006  041C  00F3               	movwf	___lldiv@divisor+3
  4007  041D  082C               	movf	??_LCD_DisplayNumber+3,w
  4008  041E  00F2               	movwf	___lldiv@divisor+2
  4009  041F  082B               	movf	??_LCD_DisplayNumber+2,w
  4010  0420  00F1               	movwf	___lldiv@divisor+1
  4011  0421  082A               	movf	??_LCD_DisplayNumber+1,w
  4012  0422  00F0               	movwf	___lldiv@divisor
  4013  0423  120A  158A  23A0  120A  118A  	fcall	___lldiv
  4014  0428  0870               	movf	?___lldiv,w
  4015  0429  120A  158A  210A  120A  118A  	fcall	___bmul
  4016  042E  3AFF               	xorlw	255
  4017  042F  3E01               	addlw	1
  4018  0430  1283               	bcf	3,5	;RP0=0, select bank0
  4019  0431  1303               	bcf	3,6	;RP1=0, select bank0
  4020  0432  0724               	addwf	LCD_DisplayNumber@v_number_u32,w
  4021  0433  00AE               	movwf	??_LCD_DisplayNumber+5
  4022  0434  0842               	movf	LCD_DisplayNumber@i,w
  4023  0435  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  4024  0436  0084               	movwf	4
  4025  0437  082E               	movf	??_LCD_DisplayNumber+5,w
  4026  0438  1383               	bcf	3,7	;select IRP bank0
  4027  0439  0080               	movwf	0
  4028                           
  4029                           ;lcd.c: 565: v_number_u32=v_number_u32/v_numericSystem_u8;
  4030  043A  0841               	movf	LCD_DisplayNumber@v_numericSystem_u8,w
  4031  043B  00A9               	movwf	??_LCD_DisplayNumber
  4032  043C  01AA               	clrf	??_LCD_DisplayNumber+1
  4033  043D  01AB               	clrf	??_LCD_DisplayNumber+2
  4034  043E  01AC               	clrf	??_LCD_DisplayNumber+3
  4035  043F  082C               	movf	??_LCD_DisplayNumber+3,w
  4036  0440  00F3               	movwf	___lldiv@divisor+3
  4037  0441  082B               	movf	??_LCD_DisplayNumber+2,w
  4038  0442  00F2               	movwf	___lldiv@divisor+2
  4039  0443  082A               	movf	??_LCD_DisplayNumber+1,w
  4040  0444  00F1               	movwf	___lldiv@divisor+1
  4041  0445  0829               	movf	??_LCD_DisplayNumber,w
  4042  0446  00F0               	movwf	___lldiv@divisor
  4043  0447  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  4044  0448  00F7               	movwf	___lldiv@dividend+3
  4045  0449  0826               	movf	LCD_DisplayNumber@v_number_u32+2,w
  4046  044A  00F6               	movwf	___lldiv@dividend+2
  4047  044B  0825               	movf	LCD_DisplayNumber@v_number_u32+1,w
  4048  044C  00F5               	movwf	___lldiv@dividend+1
  4049  044D  0824               	movf	LCD_DisplayNumber@v_number_u32,w
  4050  044E  00F4               	movwf	___lldiv@dividend
  4051  044F  120A  158A  23A0  120A  118A  	fcall	___lldiv
  4052  0454  0873               	movf	?___lldiv+3,w
  4053  0455  1283               	bcf	3,5	;RP0=0, select bank0
  4054  0456  1303               	bcf	3,6	;RP1=0, select bank0
  4055  0457  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  4056  0458  0872               	movf	?___lldiv+2,w
  4057  0459  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  4058  045A  0871               	movf	?___lldiv+1,w
  4059  045B  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  4060  045C  0870               	movf	?___lldiv,w
  4061  045D  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  4062                           
  4063                           ;lcd.c: 566: }
  4064  045E  2C6B               	goto	l1950
  4065  045F                     l1942:	
  4066                           
  4067                           ;lcd.c: 567: else if( (v_numOfDigitsToDisplay_u8 == 0xffu) ||
  4068                           ;lcd.c: 568: (v_numOfDigitsToDisplay_u8 > 10u))
  4069  045F  0A28               	incf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  4070  0460  1903               	btfsc	3,2
  4071  0461  2C95               	goto	l1964
  4072  0462  300B               	movlw	11
  4073  0463  0228               	subwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  4074  0464  1803               	btfsc	3,0
  4075  0465  2C95               	goto	l1964
  4076                           
  4077                           ;lcd.c: 574: else
  4078                           ;lcd.c: 575: {
  4079                           ;lcd.c: 579: a[i]=0;
  4080                           
  4081                           ;lcd.c: 573: }
  4082                           
  4083                           ;lcd.c: 569: {
  4084                           ;lcd.c: 572: break;
  4085  0466  0842               	movf	LCD_DisplayNumber@i,w
  4086  0467  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  4087  0468  0084               	movwf	4
  4088  0469  1383               	bcf	3,7	;select IRP bank0
  4089  046A  0180               	clrf	0
  4090  046B                     l1950:	
  4091  046B  3001               	movlw	1
  4092  046C  00A9               	movwf	??_LCD_DisplayNumber
  4093  046D  0829               	movf	??_LCD_DisplayNumber,w
  4094  046E  07C2               	addwf	LCD_DisplayNumber@i,f
  4095  046F  2C00               	goto	l1952
  4096  0470                     l1954:	
  4097                           ;lcd.c: 580: }
  4098                           ;lcd.c: 581: }
  4099                           ;lcd.c: 583: while(i!=0)
  4100                           
  4101                           
  4102                           ;lcd.c: 584: {
  4103                           ;lcd.c: 586: LCD_DisplayChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  4104  0470  0842               	movf	LCD_DisplayNumber@i,w
  4105  0471  3EFF               	addlw	255
  4106  0472  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  4107  0473  0084               	movwf	4
  4108  0474  300A               	movlw	10
  4109  0475  1383               	bcf	3,7	;select IRP bank0
  4110  0476  0200               	subwf	0,w
  4111  0477  1803               	skipnc
  4112  0478  2C80               	goto	l1958
  4113  0479  0842               	movf	LCD_DisplayNumber@i,w
  4114  047A  3EFF               	addlw	255
  4115  047B  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  4116  047C  0084               	movwf	4
  4117  047D  0800               	movf	0,w
  4118  047E  3E30               	addlw	48
  4119  047F  2C86               	goto	L2
  4120  0480                     l1958:	
  4121  0480  0842               	movf	LCD_DisplayNumber@i,w
  4122  0481  3EFF               	addlw	255
  4123  0482  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  4124  0483  0084               	movwf	4
  4125  0484  0800               	movf	0,w
  4126  0485  3E37               	addlw	55
  4127  0486                     L2:	
  4128  0486  00BF               	movwf	_LCD_DisplayNumber$213
  4129  0487  3000               	movlw	0
  4130  0488  1803               	skipnc
  4131  0489  3001               	movlw	1
  4132  048A  00C0               	movwf	_LCD_DisplayNumber$213+1
  4133  048B  083F               	movf	_LCD_DisplayNumber$213,w
  4134  048C  120A  158A  2179  120A  118A  	fcall	_LCD_DisplayChar
  4135                           
  4136                           ;lcd.c: 587: i--;
  4137  0491  3001               	movlw	1
  4138  0492  1283               	bcf	3,5	;RP0=0, select bank0
  4139  0493  1303               	bcf	3,6	;RP1=0, select bank0
  4140  0494  02C2               	subwf	LCD_DisplayNumber@i,f
  4141  0495                     l1964:	
  4142  0495  0842               	movf	LCD_DisplayNumber@i,w
  4143  0496  1903               	btfsc	3,2
  4144  0497  0008               	return
  4145  0498  2C70               	goto	l1954
  4146  0499                     __end_of_LCD_DisplayNumber:	
  4147                           
  4148                           	psect	text14
  4149  0BA0                     __ptext14:	
  4150 ;; *************** function ___lldiv *****************
  4151 ;; Defined at:
  4152 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  divisor         4    0[COMMON] unsigned long 
  4155 ;;  dividend        4    4[COMMON] unsigned long 
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;  quotient        4    9[COMMON] unsigned long 
  4158 ;;  counter         1   13[COMMON] unsigned char 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  4    0[COMMON] unsigned long 
  4161 ;; Registers used:
  4162 ;;		wreg, status,2, status,0
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4168 ;;      Params:         8       0       0       0       0
  4169 ;;      Locals:         5       0       0       0       0
  4170 ;;      Temps:          1       0       0       0       0
  4171 ;;      Totals:        14       0       0       0       0
  4172 ;;Total ram usage:       14 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; This function calls:
  4175 ;;		Nothing
  4176 ;; This function is called by:
  4177 ;;		_LCD_DisplayNumber
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           
  4181                           
  4182                           ;psect for function ___lldiv
  4183  0BA0                     ___lldiv:	
  4184                           
  4185                           ;incstack = 0
  4186                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4187  0BA0  3000               	movlw	0
  4188  0BA1  00FC               	movwf	___lldiv@quotient+3
  4189  0BA2  3000               	movlw	0
  4190  0BA3  00FB               	movwf	___lldiv@quotient+2
  4191  0BA4  3000               	movlw	0
  4192  0BA5  00FA               	movwf	___lldiv@quotient+1
  4193  0BA6  3000               	movlw	0
  4194  0BA7  00F9               	movwf	___lldiv@quotient
  4195  0BA8  0873               	movf	___lldiv@divisor+3,w
  4196  0BA9  0472               	iorwf	___lldiv@divisor+2,w
  4197  0BAA  0471               	iorwf	___lldiv@divisor+1,w
  4198  0BAB  0470               	iorwf	___lldiv@divisor,w
  4199  0BAC  1903               	skipnz
  4200  0BAD  2BF5               	goto	l1904
  4201  0BAE  01FD               	clrf	___lldiv@counter
  4202  0BAF  0AFD               	incf	___lldiv@counter,f
  4203  0BB0                     l1890:	
  4204  0BB0  1BF3               	btfsc	___lldiv@divisor+3,7
  4205  0BB1  2BC0               	goto	l1892
  4206  0BB2  3001               	movlw	1
  4207  0BB3  00F8               	movwf	??___lldiv
  4208  0BB4                     u2895:	
  4209  0BB4  1003               	clrc
  4210  0BB5  0DF0               	rlf	___lldiv@divisor,f
  4211  0BB6  0DF1               	rlf	___lldiv@divisor+1,f
  4212  0BB7  0DF2               	rlf	___lldiv@divisor+2,f
  4213  0BB8  0DF3               	rlf	___lldiv@divisor+3,f
  4214  0BB9  0BF8               	decfsz	??___lldiv,f
  4215  0BBA  2BB4               	goto	u2895
  4216  0BBB  3001               	movlw	1
  4217  0BBC  00F8               	movwf	??___lldiv
  4218  0BBD  0878               	movf	??___lldiv,w
  4219  0BBE  07FD               	addwf	___lldiv@counter,f
  4220  0BBF  2BB0               	goto	l1890
  4221  0BC0                     l1892:	
  4222  0BC0  3001               	movlw	1
  4223  0BC1  00F8               	movwf	??___lldiv
  4224  0BC2                     u2915:	
  4225  0BC2  1003               	clrc
  4226  0BC3  0DF9               	rlf	___lldiv@quotient,f
  4227  0BC4  0DFA               	rlf	___lldiv@quotient+1,f
  4228  0BC5  0DFB               	rlf	___lldiv@quotient+2,f
  4229  0BC6  0DFC               	rlf	___lldiv@quotient+3,f
  4230  0BC7  0BF8               	decfsz	??___lldiv,f
  4231  0BC8  2BC2               	goto	u2915
  4232  0BC9  0873               	movf	___lldiv@divisor+3,w
  4233  0BCA  0277               	subwf	___lldiv@dividend+3,w
  4234  0BCB  1D03               	skipz
  4235  0BCC  2BD7               	goto	u2925
  4236  0BCD  0872               	movf	___lldiv@divisor+2,w
  4237  0BCE  0276               	subwf	___lldiv@dividend+2,w
  4238  0BCF  1D03               	skipz
  4239  0BD0  2BD7               	goto	u2925
  4240  0BD1  0871               	movf	___lldiv@divisor+1,w
  4241  0BD2  0275               	subwf	___lldiv@dividend+1,w
  4242  0BD3  1D03               	skipz
  4243  0BD4  2BD7               	goto	u2925
  4244  0BD5  0870               	movf	___lldiv@divisor,w
  4245  0BD6  0274               	subwf	___lldiv@dividend,w
  4246  0BD7                     u2925:	
  4247  0BD7  1C03               	skipc
  4248  0BD8  2BE8               	goto	l1900
  4249  0BD9  0870               	movf	___lldiv@divisor,w
  4250  0BDA  02F4               	subwf	___lldiv@dividend,f
  4251  0BDB  0871               	movf	___lldiv@divisor+1,w
  4252  0BDC  1C03               	skipc
  4253  0BDD  0F71               	incfsz	___lldiv@divisor+1,w
  4254  0BDE  02F5               	subwf	___lldiv@dividend+1,f
  4255  0BDF  0872               	movf	___lldiv@divisor+2,w
  4256  0BE0  1C03               	skipc
  4257  0BE1  0F72               	incfsz	___lldiv@divisor+2,w
  4258  0BE2  02F6               	subwf	___lldiv@dividend+2,f
  4259  0BE3  0873               	movf	___lldiv@divisor+3,w
  4260  0BE4  1C03               	skipc
  4261  0BE5  0F73               	incfsz	___lldiv@divisor+3,w
  4262  0BE6  02F7               	subwf	___lldiv@dividend+3,f
  4263  0BE7  1479               	bsf	___lldiv@quotient,0
  4264  0BE8                     l1900:	
  4265  0BE8  3001               	movlw	1
  4266  0BE9                     u2935:	
  4267  0BE9  1003               	clrc
  4268  0BEA  0CF3               	rrf	___lldiv@divisor+3,f
  4269  0BEB  0CF2               	rrf	___lldiv@divisor+2,f
  4270  0BEC  0CF1               	rrf	___lldiv@divisor+1,f
  4271  0BED  0CF0               	rrf	___lldiv@divisor,f
  4272  0BEE  3EFF               	addlw	-1
  4273  0BEF  1D03               	skipz
  4274  0BF0  2BE9               	goto	u2935
  4275  0BF1  3001               	movlw	1
  4276  0BF2  02FD               	subwf	___lldiv@counter,f
  4277  0BF3  1D03               	btfss	3,2
  4278  0BF4  2BC0               	goto	l1892
  4279  0BF5                     l1904:	
  4280  0BF5  087C               	movf	___lldiv@quotient+3,w
  4281  0BF6  00F3               	movwf	?___lldiv+3
  4282  0BF7  087B               	movf	___lldiv@quotient+2,w
  4283  0BF8  00F2               	movwf	?___lldiv+2
  4284  0BF9  087A               	movf	___lldiv@quotient+1,w
  4285  0BFA  00F1               	movwf	?___lldiv+1
  4286  0BFB  0879               	movf	___lldiv@quotient,w
  4287  0BFC  00F0               	movwf	?___lldiv
  4288  0BFD  0008               	return
  4289  0BFE                     __end_of___lldiv:	
  4290                           
  4291                           	psect	text15
  4292  090A                     __ptext15:	
  4293 ;; *************** function ___bmul *****************
  4294 ;; Defined at:
  4295 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\Umul8.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  multiplier      1    wreg     unsigned char 
  4298 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;  multiplier      1    3[BANK0 ] unsigned char 
  4301 ;;  product         1    2[BANK0 ] unsigned char 
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  1    wreg      unsigned char 
  4304 ;; Registers used:
  4305 ;;		wreg, status,2, status,0
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4311 ;;      Params:         0       1       0       0       0
  4312 ;;      Locals:         0       2       0       0       0
  4313 ;;      Temps:          0       1       0       0       0
  4314 ;;      Totals:         0       4       0       0       0
  4315 ;;Total ram usage:        4 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; This function calls:
  4318 ;;		Nothing
  4319 ;; This function is called by:
  4320 ;;		_LCD_DisplayNumber
  4321 ;;		_LCD_Printf
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           
  4326                           ;psect for function ___bmul
  4327  090A                     ___bmul:	
  4328                           
  4329                           ;incstack = 0
  4330                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4331                           ;___bmul@multiplier stored from wreg
  4332  090A  1283               	bcf	3,5	;RP0=0, select bank0
  4333  090B  1303               	bcf	3,6	;RP1=0, select bank0
  4334  090C  00A3               	movwf	___bmul@multiplier
  4335  090D  01A2               	clrf	___bmul@product
  4336  090E                     l1840:	
  4337  090E  1C23               	btfss	___bmul@multiplier,0
  4338  090F  2914               	goto	l1844
  4339  0910  0820               	movf	___bmul@multiplicand,w
  4340  0911  00A1               	movwf	??___bmul
  4341  0912  0821               	movf	??___bmul,w
  4342  0913  07A2               	addwf	___bmul@product,f
  4343  0914                     l1844:	
  4344  0914  1003               	clrc
  4345  0915  0DA0               	rlf	___bmul@multiplicand,f
  4346  0916  1003               	clrc
  4347  0917  0CA3               	rrf	___bmul@multiplier,f
  4348  0918  0823               	movf	___bmul@multiplier,w
  4349  0919  1D03               	btfss	3,2
  4350  091A  290E               	goto	l1840
  4351  091B  0822               	movf	___bmul@product,w
  4352  091C  0008               	return
  4353  091D                     __end_of___bmul:	
  4354                           
  4355                           	psect	text16
  4356  0979                     __ptext16:	
  4357 ;; *************** function _LCD_DisplayChar *****************
  4358 ;; Defined at:
  4359 ;;		line 392 in file "../00-libfiles/lcd.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  v_lcdData_u8    1    wreg     unsigned char 
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;  v_lcdData_u8    1   12[COMMON] unsigned char 
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1    wreg      void 
  4366 ;; Registers used:
  4367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4373 ;;      Params:         0       0       0       0       0
  4374 ;;      Locals:         1       0       0       0       0
  4375 ;;      Temps:          1       0       0       0       0
  4376 ;;      Totals:         2       0       0       0       0
  4377 ;;Total ram usage:        2 bytes
  4378 ;; Hardware stack levels used:    1
  4379 ;; Hardware stack levels required when called:    5
  4380 ;; This function calls:
  4381 ;;		_LCD_GoToNextLine
  4382 ;;		_lcd_DataWrite
  4383 ;; This function is called by:
  4384 ;;		_LCD_DisplayString
  4385 ;;		_LCD_DisplayNumber
  4386 ;;		_LCD_DisplayFloatNumber
  4387 ;;		_LCD_Printf
  4388 ;;		_LCD_ScrollMessage
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           
  4393                           ;psect for function _LCD_DisplayChar
  4394  0979                     _LCD_DisplayChar:	
  4395                           
  4396                           ;incstack = 0
  4397                           ; Regs used in _LCD_DisplayChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4398                           ;LCD_DisplayChar@v_lcdData_u8 stored from wreg
  4399  0979  00FC               	movwf	LCD_DisplayChar@v_lcdData_u8
  4400                           
  4401                           ;lcd.c: 394: if((v_LcdTrackCursorPos_U8>=LCDConfig.v_MaxSupportedChars_U8) || (v_lcdData
      +                          _u8=='\n'))
  4402  097A  1683               	bsf	3,5	;RP0=1, select bank1
  4403  097B  1303               	bcf	3,6	;RP1=0, select bank1
  4404  097C  0821               	movf	(_LCDConfig^(0+128)+1),w
  4405  097D  1283               	bcf	3,5	;RP0=0, select bank0
  4406  097E  1303               	bcf	3,6	;RP1=0, select bank0
  4407  097F  026C               	subwf	_v_LcdTrackCursorPos_U8,w
  4408  0980  1803               	skipnc
  4409  0981  2986               	goto	l1830
  4410  0982  300A               	movlw	10
  4411  0983  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  4412  0984  1D03               	btfss	3,2
  4413  0985  298B               	goto	l1832
  4414  0986                     l1830:	
  4415                           
  4416                           ;lcd.c: 395: {
  4417                           ;lcd.c: 398: LCD_GoToNextLine();
  4418  0986  120A  158A  2148  120A  158A  	fcall	_LCD_GoToNextLine
  4419  098B                     l1832:	
  4420                           
  4421                           ;lcd.c: 399: }
  4422                           ;lcd.c: 400: if(v_lcdData_u8!='\n')
  4423  098B  300A               	movlw	10
  4424  098C  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  4425  098D  1903               	btfsc	3,2
  4426  098E  0008               	return
  4427                           
  4428                           ;lcd.c: 401: {
  4429                           ;lcd.c: 403: lcd_DataWrite(v_lcdData_u8);
  4430  098F  087C               	movf	LCD_DisplayChar@v_lcdData_u8,w
  4431  0990  120A  158A  229A   	fcall	_lcd_DataWrite
  4432                           
  4433                           ;lcd.c: 404: v_LcdTrackCursorPos_U8++;
  4434  0993  3001               	movlw	1
  4435  0994  00FB               	movwf	??_LCD_DisplayChar
  4436  0995  087B               	movf	??_LCD_DisplayChar,w
  4437  0996  1283               	bcf	3,5	;RP0=0, select bank0
  4438  0997  1303               	bcf	3,6	;RP1=0, select bank0
  4439  0998  07EC               	addwf	_v_LcdTrackCursorPos_U8,f
  4440  0999  0008               	return
  4441  099A                     __end_of_LCD_DisplayChar:	
  4442                           
  4443                           	psect	text17
  4444  0A9A                     __ptext17:	
  4445 ;; *************** function _lcd_DataWrite *****************
  4446 ;; Defined at:
  4447 ;;		line 825 in file "../00-libfiles/lcd.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  dataByte        1    wreg     unsigned char 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  dataByte        1    9[COMMON] unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4461 ;;      Params:         0       0       0       0       0
  4462 ;;      Locals:         1       0       0       0       0
  4463 ;;      Temps:          2       0       0       0       0
  4464 ;;      Totals:         3       0       0       0       0
  4465 ;;Total ram usage:        3 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    3
  4468 ;; This function calls:
  4469 ;;		_lcd_BusyCheck
  4470 ;;		_lcd_SendDataSignals
  4471 ;;		_lcd_SendHigherNibble
  4472 ;;		_lcd_SendLowerNibble
  4473 ;; This function is called by:
  4474 ;;		_LCD_DisplayChar
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           
  4479                           ;psect for function _lcd_DataWrite
  4480  0A9A                     _lcd_DataWrite:	
  4481                           
  4482                           ;incstack = 0
  4483                           ; Regs used in _lcd_DataWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4484                           ;lcd_DataWrite@dataByte stored from wreg
  4485  0A9A  00F9               	movwf	lcd_DataWrite@dataByte
  4486                           
  4487                           ;lcd.c: 827: lcd_BusyCheck();
  4488  0A9B  120A  158A  24DF  120A  158A  	fcall	_lcd_BusyCheck
  4489                           
  4490                           ;lcd.c: 828: if(LCDConfig.v_LcdMode_U8 == 8u)
  4491  0AA0  3008               	movlw	8
  4492  0AA1  1683               	bsf	3,5	;RP0=1, select bank1
  4493  0AA2  1303               	bcf	3,6	;RP1=0, select bank1
  4494  0AA3  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  4495  0AA4  1D03               	btfss	3,2
  4496  0AA5  2AAD               	goto	l1818
  4497                           
  4498                           ;lcd.c: 829: {
  4499                           ;lcd.c: 830: lcd_SendLowerNibble(dataByte);
  4500  0AA6  0879               	movf	lcd_DataWrite@dataByte,w
  4501  0AA7  120A  158A  230F  120A  158A  	fcall	_lcd_SendLowerNibble
  4502                           
  4503                           ;lcd.c: 831: }
  4504  0AAC  2AC5               	goto	l1822
  4505  0AAD                     l1818:	
  4506                           
  4507                           ;lcd.c: 832: else
  4508                           ;lcd.c: 833: {
  4509                           ;lcd.c: 834: lcd_SendHigherNibble(dataByte);
  4510  0AAD  0879               	movf	lcd_DataWrite@dataByte,w
  4511  0AAE  120A  158A  22CF  120A  158A  	fcall	_lcd_SendHigherNibble
  4512                           
  4513                           ;lcd.c: 835: lcd_SendDataSignals();
  4514  0AB3  120A  158A  2237  120A  158A  	fcall	_lcd_SendDataSignals
  4515                           
  4516                           ;lcd.c: 836: dataByte = dataByte << 4;
  4517  0AB8  0879               	movf	lcd_DataWrite@dataByte,w
  4518  0AB9  00F7               	movwf	??_lcd_DataWrite
  4519  0ABA  3003               	movlw	3
  4520  0ABB                     u2705:	
  4521  0ABB  1003               	clrc
  4522  0ABC  0DF7               	rlf	??_lcd_DataWrite,f
  4523  0ABD  3EFF               	addlw	-1
  4524  0ABE  1D03               	skipz
  4525  0ABF  2ABB               	goto	u2705
  4526  0AC0  1003               	clrc
  4527  0AC1  0D77               	rlf	??_lcd_DataWrite,w
  4528  0AC2  00F8               	movwf	??_lcd_DataWrite+1
  4529  0AC3  0878               	movf	??_lcd_DataWrite+1,w
  4530  0AC4  00F9               	movwf	lcd_DataWrite@dataByte
  4531  0AC5                     l1822:	
  4532                           
  4533                           ;lcd.c: 837: }
  4534                           ;lcd.c: 839: lcd_SendHigherNibble(dataByte);
  4535  0AC5  0879               	movf	lcd_DataWrite@dataByte,w
  4536  0AC6  120A  158A  22CF  120A  158A  	fcall	_lcd_SendHigherNibble
  4537                           
  4538                           ;lcd.c: 840: lcd_SendDataSignals();
  4539  0ACB  120A  158A  2237   	fcall	_lcd_SendDataSignals
  4540  0ACE  0008               	return
  4541  0ACF                     __end_of_lcd_DataWrite:	
  4542                           
  4543                           	psect	text18
  4544  0A37                     __ptext18:	
  4545 ;; *************** function _lcd_SendDataSignals *****************
  4546 ;; Defined at:
  4547 ;;		line 1001 in file "../00-libfiles/lcd.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;		None
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      void 
  4554 ;; Registers used:
  4555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4561 ;;      Params:         0       0       0       0       0
  4562 ;;      Locals:         0       0       0       0       0
  4563 ;;      Temps:          0       0       0       0       0
  4564 ;;      Totals:         0       0       0       0       0
  4565 ;;Total ram usage:        0 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    1
  4568 ;; This function calls:
  4569 ;;		_DELAY_us
  4570 ;;		_GPIO_PinWrite
  4571 ;; This function is called by:
  4572 ;;		_lcd_DataWrite
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           
  4577                           ;psect for function _lcd_SendDataSignals
  4578  0A37                     _lcd_SendDataSignals:	
  4579                           
  4580                           ;lcd.c: 1003: GPIO_PinWrite(LCDConfig.RS,1);
  4581                           
  4582                           ;incstack = 0
  4583                           ; Regs used in _lcd_SendDataSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4584  0A37  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4585  0A38  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  4586  0A39  1683               	bsf	3,5	;RP0=1, select bank1
  4587  0A3A  1303               	bcf	3,6	;RP1=0, select bank1
  4588  0A3B  0823               	movf	(_LCDConfig^(0+128)+3),w
  4589  0A3C  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  4590                           
  4591                           ;lcd.c: 1004: GPIO_PinWrite(LCDConfig.RW,0);
  4592  0A41  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4593  0A42  1683               	bsf	3,5	;RP0=1, select bank1
  4594  0A43  1303               	bcf	3,6	;RP1=0, select bank1
  4595  0A44  0824               	movf	(_LCDConfig^(0+128)+4),w
  4596  0A45  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  4597                           
  4598                           ;lcd.c: 1005: GPIO_PinWrite(LCDConfig.EN,1);
  4599  0A4A  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4600  0A4B  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  4601  0A4C  1683               	bsf	3,5	;RP0=1, select bank1
  4602  0A4D  1303               	bcf	3,6	;RP1=0, select bank1
  4603  0A4E  0825               	movf	(_LCDConfig^(0+128)+5),w
  4604  0A4F  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  4605                           
  4606                           ;lcd.c: 1006: DELAY_us(10);
  4607  0A54  300A               	movlw	10
  4608  0A55  00F0               	movwf	DELAY_us@us_count
  4609  0A56  3000               	movlw	0
  4610  0A57  00F1               	movwf	DELAY_us@us_count+1
  4611  0A58  120A  158A  20F4  120A  158A  	fcall	_DELAY_us
  4612                           
  4613                           ;lcd.c: 1007: GPIO_PinWrite(LCDConfig.EN,0);
  4614  0A5D  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4615  0A5E  1683               	bsf	3,5	;RP0=1, select bank1
  4616  0A5F  1303               	bcf	3,6	;RP1=0, select bank1
  4617  0A60  0825               	movf	(_LCDConfig^(0+128)+5),w
  4618  0A61  120A  118A  22CE   	fcall	_GPIO_PinWrite
  4619  0A64  0008               	return
  4620  0A65                     __end_of_lcd_SendDataSignals:	
  4621                           
  4622                           	psect	text19
  4623  0948                     __ptext19:	
  4624 ;; *************** function _LCD_GoToNextLine *****************
  4625 ;; Defined at:
  4626 ;;		line 292 in file "../00-libfiles/lcd.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;		None
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;		None
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      void 
  4633 ;; Registers used:
  4634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4640 ;;      Params:         0       0       0       0       0
  4641 ;;      Locals:         0       0       0       0       0
  4642 ;;      Temps:          1       0       0       0       0
  4643 ;;      Totals:         1       0       0       0       0
  4644 ;;Total ram usage:        1 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; Hardware stack levels required when called:    4
  4647 ;; This function calls:
  4648 ;;		_LCD_CmdWrite
  4649 ;; This function is called by:
  4650 ;;		_LCD_DisplayChar
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654                           
  4655                           ;psect for function _LCD_GoToNextLine
  4656  0948                     _LCD_GoToNextLine:	
  4657                           
  4658                           ;lcd.c: 296: v_LcdTrackLineNum_U8++;
  4659                           
  4660                           ;incstack = 0
  4661                           ; Regs used in _LCD_GoToNextLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4662  0948  3001               	movlw	1
  4663  0949  00FA               	movwf	??_LCD_GoToNextLine
  4664  094A  087A               	movf	??_LCD_GoToNextLine,w
  4665  094B  1283               	bcf	3,5	;RP0=0, select bank0
  4666  094C  1303               	bcf	3,6	;RP1=0, select bank0
  4667  094D  07ED               	addwf	_v_LcdTrackLineNum_U8,f
  4668                           
  4669                           ;lcd.c: 297: v_LcdTrackCursorPos_U8 = 0x00;
  4670  094E  01EC               	clrf	_v_LcdTrackCursorPos_U8
  4671                           
  4672                           ;lcd.c: 298: if(v_LcdTrackLineNum_U8 >= LCDConfig.v_MaxSupportedLines_U8)
  4673  094F  1683               	bsf	3,5	;RP0=1, select bank1
  4674  0950  1303               	bcf	3,6	;RP1=0, select bank1
  4675  0951  0820               	movf	_LCDConfig^(0+128),w
  4676  0952  1283               	bcf	3,5	;RP0=0, select bank0
  4677  0953  1303               	bcf	3,6	;RP1=0, select bank0
  4678  0954  026D               	subwf	_v_LcdTrackLineNum_U8,w
  4679  0955  1803               	btfsc	3,0
  4680                           
  4681                           ;lcd.c: 299: v_LcdTrackLineNum_U8 = 0x00;
  4682  0956  01ED               	clrf	_v_LcdTrackLineNum_U8
  4683                           
  4684                           ;lcd.c: 300: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_LcdTrackLineNum_U8]);
  4685  0957  086D               	movf	_v_LcdTrackLineNum_U8,w
  4686  0958  3EB8               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  4687  0959  0084               	movwf	4
  4688  095A  1383               	bcf	3,7	;select IRP bank1
  4689  095B  0800               	movf	0,w
  4690  095C  120A  158A  2265   	fcall	_LCD_CmdWrite
  4691  095F  0008               	return
  4692  0960                     __end_of_LCD_GoToNextLine:	
  4693                           
  4694                           	psect	text20
  4695  0B4F                     __ptext20:	
  4696 ;; *************** function _LCD_Init *****************
  4697 ;; Defined at:
  4698 ;;		line 198 in file "../00-libfiles/lcd.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  v_lcdNoOfLin    1    wreg     unsigned char 
  4701 ;;  v_MaxCharsPe    1   12[COMMON] unsigned char 
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;  v_lcdNoOfLin    1    0[BANK0 ] unsigned char 
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  1    wreg      void 
  4706 ;; Registers used:
  4707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4713 ;;      Params:         1       0       0       0       0
  4714 ;;      Locals:         0       1       0       0       0
  4715 ;;      Temps:          1       0       0       0       0
  4716 ;;      Totals:         2       1       0       0       0
  4717 ;;Total ram usage:        3 bytes
  4718 ;; Hardware stack levels used:    1
  4719 ;; Hardware stack levels required when called:    6
  4720 ;; This function calls:
  4721 ;;		_DELAY_ms
  4722 ;;		_LCD_Clear
  4723 ;;		_LCD_CmdWrite
  4724 ;;		_lcd_Reset
  4725 ;; This function is called by:
  4726 ;;		_main
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           
  4731                           ;psect for function _LCD_Init
  4732  0B4F                     _LCD_Init:	
  4733                           
  4734                           ;incstack = 0
  4735                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4736                           ;LCD_Init@v_lcdNoOfLines_u8 stored from wreg
  4737  0B4F  1283               	bcf	3,5	;RP0=0, select bank0
  4738  0B50  1303               	bcf	3,6	;RP1=0, select bank0
  4739  0B51  00A0               	movwf	LCD_Init@v_lcdNoOfLines_u8
  4740                           
  4741                           ;lcd.c: 202: LCDConfig.v_MaxSupportedChars_U8 = v_MaxCharsPerLine_u8;
  4742  0B52  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  4743  0B53  00FD               	movwf	??_LCD_Init
  4744  0B54  087D               	movf	??_LCD_Init,w
  4745  0B55  1683               	bsf	3,5	;RP0=1, select bank1
  4746  0B56  1303               	bcf	3,6	;RP1=0, select bank1
  4747  0B57  00A1               	movwf	(_LCDConfig^(0+128)+1)
  4748                           
  4749                           ;lcd.c: 203: LCDConfig.v_MaxSupportedLines_U8 = v_lcdNoOfLines_u8;
  4750  0B58  1283               	bcf	3,5	;RP0=0, select bank0
  4751  0B59  1303               	bcf	3,6	;RP1=0, select bank0
  4752  0B5A  0820               	movf	LCD_Init@v_lcdNoOfLines_u8,w
  4753  0B5B  00FD               	movwf	??_LCD_Init
  4754  0B5C  087D               	movf	??_LCD_Init,w
  4755  0B5D  1683               	bsf	3,5	;RP0=1, select bank1
  4756  0B5E  1303               	bcf	3,6	;RP1=0, select bank1
  4757  0B5F  00A0               	movwf	_LCDConfig^(0+128)
  4758                           
  4759                           ;lcd.c: 204: if(v_lcdNoOfLines_u8 > 0x02)
  4760  0B60  3003               	movlw	3
  4761  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  4762  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  4763  0B63  0220               	subwf	LCD_Init@v_lcdNoOfLines_u8,w
  4764  0B64  1C03               	skipc
  4765  0B65  2B74               	goto	l2222
  4766                           
  4767                           ;lcd.c: 205: {
  4768                           ;lcd.c: 206: ARR_LcdLineNumAddress_U8[0x02] = 0x90 + (v_MaxCharsPerLine_u8 & 0x0fu);
  4769  0B66  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  4770  0B67  390F               	andlw	15
  4771  0B68  3E90               	addlw	144
  4772  0B69  00FD               	movwf	??_LCD_Init
  4773  0B6A  087D               	movf	??_LCD_Init,w
  4774  0B6B  1683               	bsf	3,5	;RP0=1, select bank1
  4775  0B6C  1303               	bcf	3,6	;RP1=0, select bank1
  4776  0B6D  00BA               	movwf	(_ARR_LcdLineNumAddress_U8^(0+128)+2)
  4777                           
  4778                           ;lcd.c: 207: ARR_LcdLineNumAddress_U8[0x03] = 0xd0 + (v_MaxCharsPerLine_u8 & 0x0fu);
  4779  0B6E  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  4780  0B6F  390F               	andlw	15
  4781  0B70  3ED0               	addlw	208
  4782  0B71  00FD               	movwf	??_LCD_Init
  4783  0B72  087D               	movf	??_LCD_Init,w
  4784  0B73  00BB               	movwf	(_ARR_LcdLineNumAddress_U8^(0+128)+3)
  4785  0B74                     l2222:	
  4786                           
  4787                           ;lcd.c: 208: }
  4788                           ;lcd.c: 210: DELAY_ms(100);
  4789  0B74  3064               	movlw	100
  4790  0B75  00F2               	movwf	DELAY_ms@ms_count
  4791  0B76  3000               	movlw	0
  4792  0B77  00F3               	movwf	DELAY_ms@ms_count+1
  4793  0B78  120A  158A  211D  120A  158A  	fcall	_DELAY_ms
  4794                           
  4795                           ;lcd.c: 212: if(LCDConfig.v_LcdMode_U8 == 8u)
  4796  0B7D  3008               	movlw	8
  4797  0B7E  1683               	bsf	3,5	;RP0=1, select bank1
  4798  0B7F  1303               	bcf	3,6	;RP1=0, select bank1
  4799  0B80  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  4800  0B81  1D03               	btfss	3,2
  4801  0B82  2B85               	goto	l2228
  4802                           
  4803                           ;lcd.c: 213: {
  4804                           ;lcd.c: 214: LCD_CmdWrite(0x38u);
  4805  0B83  3038               	movlw	56
  4806  0B84  2B91               	goto	L3
  4807  0B85                     l2228:	
  4808                           ;lcd.c: 215: }
  4809                           
  4810                           
  4811                           ;lcd.c: 216: else if(LCDConfig.v_LcdMode_U8 == 4u)
  4812  0B85  3004               	movlw	4
  4813  0B86  1683               	bsf	3,5	;RP0=1, select bank1
  4814  0B87  1303               	bcf	3,6	;RP1=0, select bank1
  4815  0B88  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  4816  0B89  1D03               	btfss	3,2
  4817  0B8A  2B96               	goto	l54
  4818                           
  4819                           ;lcd.c: 217: {
  4820                           ;lcd.c: 218: lcd_Reset();
  4821  0B8B  120A  118A  2004  120A  158A  	fcall	_lcd_Reset
  4822                           
  4823                           ;lcd.c: 219: LCD_CmdWrite(0x28u);
  4824  0B90  3028               	movlw	40
  4825  0B91                     L3:	
  4826  0B91  120A  158A  2265  120A  158A  	fcall	_LCD_CmdWrite
  4827  0B96                     l54:	
  4828                           
  4829                           ;lcd.c: 220: }
  4830                           ;lcd.c: 222: LCD_CmdWrite(0x0Eu);
  4831  0B96  300E               	movlw	14
  4832  0B97  120A  158A  2265  120A  158A  	fcall	_LCD_CmdWrite
  4833                           
  4834                           ;lcd.c: 223: LCD_Clear();
  4835  0B9C  120A  158A  20FF   	fcall	_LCD_Clear
  4836  0B9F  0008               	return
  4837  0BA0                     __end_of_LCD_Init:	
  4838                           
  4839                           	psect	text21
  4840  0004                     __ptext21:	
  4841 ;; *************** function _lcd_Reset *****************
  4842 ;; Defined at:
  4843 ;;		line 912 in file "../00-libfiles/lcd.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;		None
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;		None
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  1    wreg      void 
  4850 ;; Registers used:
  4851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4857 ;;      Params:         0       0       0       0       0
  4858 ;;      Locals:         0       0       0       0       0
  4859 ;;      Temps:          0       0       0       0       0
  4860 ;;      Totals:         0       0       0       0       0
  4861 ;;Total ram usage:        0 bytes
  4862 ;; Hardware stack levels used:    1
  4863 ;; Hardware stack levels required when called:    2
  4864 ;; This function calls:
  4865 ;;		_DELAY_ms
  4866 ;;		_DELAY_us
  4867 ;;		_lcd_SendCmdSignals
  4868 ;;		_lcd_SendHigherNibble
  4869 ;; This function is called by:
  4870 ;;		_LCD_Init
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           
  4875                           ;psect for function _lcd_Reset
  4876  0004                     _lcd_Reset:	
  4877                           
  4878                           ;lcd.c: 915: lcd_SendHigherNibble(0x30);
  4879                           
  4880                           ;incstack = 0
  4881                           ; Regs used in _lcd_Reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4882  0004  3030               	movlw	48
  4883  0005  120A  158A  22CF  120A  118A  	fcall	_lcd_SendHigherNibble
  4884                           
  4885                           ;lcd.c: 916: lcd_SendCmdSignals();
  4886  000A  120A  158A  220A  120A  118A  	fcall	_lcd_SendCmdSignals
  4887                           
  4888                           ;lcd.c: 917: DELAY_ms(100);
  4889  000F  3064               	movlw	100
  4890  0010  00F2               	movwf	DELAY_ms@ms_count
  4891  0011  3000               	movlw	0
  4892  0012  00F3               	movwf	DELAY_ms@ms_count+1
  4893  0013  120A  158A  211D  120A  118A  	fcall	_DELAY_ms
  4894                           
  4895                           ;lcd.c: 918: lcd_SendHigherNibble(0x30);
  4896  0018  3030               	movlw	48
  4897  0019  120A  158A  22CF  120A  118A  	fcall	_lcd_SendHigherNibble
  4898                           
  4899                           ;lcd.c: 919: lcd_SendCmdSignals();
  4900  001E  120A  158A  220A  120A  118A  	fcall	_lcd_SendCmdSignals
  4901                           
  4902                           ;lcd.c: 920: DELAY_us(200);
  4903  0023  30C8               	movlw	200
  4904  0024  00F0               	movwf	DELAY_us@us_count
  4905  0025  3000               	movlw	0
  4906  0026  00F1               	movwf	DELAY_us@us_count+1
  4907  0027  120A  158A  20F4  120A  118A  	fcall	_DELAY_us
  4908                           
  4909                           ;lcd.c: 921: lcd_SendHigherNibble(0x30);
  4910  002C  3030               	movlw	48
  4911  002D  120A  158A  22CF  120A  118A  	fcall	_lcd_SendHigherNibble
  4912                           
  4913                           ;lcd.c: 922: lcd_SendCmdSignals();
  4914  0032  120A  158A  220A  120A  118A  	fcall	_lcd_SendCmdSignals
  4915                           
  4916                           ;lcd.c: 923: DELAY_us(200);
  4917  0037  30C8               	movlw	200
  4918  0038  00F0               	movwf	DELAY_us@us_count
  4919  0039  3000               	movlw	0
  4920  003A  00F1               	movwf	DELAY_us@us_count+1
  4921  003B  120A  158A  20F4  120A  118A  	fcall	_DELAY_us
  4922                           
  4923                           ;lcd.c: 924: lcd_SendHigherNibble(0x20);
  4924  0040  3020               	movlw	32
  4925  0041  120A  158A  22CF  120A  118A  	fcall	_lcd_SendHigherNibble
  4926                           
  4927                           ;lcd.c: 925: lcd_SendCmdSignals();
  4928  0046  120A  158A  220A  120A  118A  	fcall	_lcd_SendCmdSignals
  4929                           
  4930                           ;lcd.c: 926: DELAY_us(200);
  4931  004B  30C8               	movlw	200
  4932  004C  00F0               	movwf	DELAY_us@us_count
  4933  004D  3000               	movlw	0
  4934  004E  00F1               	movwf	DELAY_us@us_count+1
  4935  004F  120A  158A  20F4   	fcall	_DELAY_us
  4936  0052  0008               	return
  4937  0053                     __end_of_lcd_Reset:	
  4938                           
  4939                           	psect	text22
  4940  08FF                     __ptext22:	
  4941 ;; *************** function _LCD_Clear *****************
  4942 ;; Defined at:
  4943 ;;		line 237 in file "../00-libfiles/lcd.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;		None
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;		None
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  1    wreg      void 
  4950 ;; Registers used:
  4951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4952 ;; Tracked objects:
  4953 ;;		On entry : 0/0
  4954 ;;		On exit  : 0/0
  4955 ;;		Unchanged: 0/0
  4956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4957 ;;      Params:         0       0       0       0       0
  4958 ;;      Locals:         0       0       0       0       0
  4959 ;;      Temps:          0       0       0       0       0
  4960 ;;      Totals:         0       0       0       0       0
  4961 ;;Total ram usage:        0 bytes
  4962 ;; Hardware stack levels used:    1
  4963 ;; Hardware stack levels required when called:    5
  4964 ;; This function calls:
  4965 ;;		_LCD_CmdWrite
  4966 ;;		_LCD_GoToLine
  4967 ;; This function is called by:
  4968 ;;		_LCD_Init
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           
  4973                           ;psect for function _LCD_Clear
  4974  08FF                     _LCD_Clear:	
  4975                           
  4976                           ;lcd.c: 239: LCD_CmdWrite(0x01u);
  4977                           
  4978                           ;incstack = 0
  4979                           ; Regs used in _LCD_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4980  08FF  3001               	movlw	1
  4981  0900  120A  158A  2265  120A  158A  	fcall	_LCD_CmdWrite
  4982                           
  4983                           ;lcd.c: 240: LCD_GoToLine(0x00);
  4984  0905  3000               	movlw	0
  4985  0906  120A  158A  2131   	fcall	_LCD_GoToLine
  4986  0909  0008               	return
  4987  090A                     __end_of_LCD_Clear:	
  4988                           
  4989                           	psect	text23
  4990  0931                     __ptext23:	
  4991 ;; *************** function _LCD_GoToLine *****************
  4992 ;; Defined at:
  4993 ;;		line 265 in file "../00-libfiles/lcd.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  v_lineNumber    1    wreg     unsigned char 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  v_lineNumber    1   11[COMMON] unsigned char 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      void 
  5000 ;; Registers used:
  5001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5007 ;;      Params:         0       0       0       0       0
  5008 ;;      Locals:         1       0       0       0       0
  5009 ;;      Temps:          1       0       0       0       0
  5010 ;;      Totals:         2       0       0       0       0
  5011 ;;Total ram usage:        2 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    4
  5014 ;; This function calls:
  5015 ;;		_LCD_CmdWrite
  5016 ;; This function is called by:
  5017 ;;		_LCD_Clear
  5018 ;;		_main
  5019 ;;		_LCD_ScrollMessage
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           
  5024                           ;psect for function _LCD_GoToLine
  5025  0931                     _LCD_GoToLine:	
  5026                           
  5027                           ;incstack = 0
  5028                           ; Regs used in _LCD_GoToLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5029                           ;LCD_GoToLine@v_lineNumber_u8 stored from wreg
  5030  0931  00FB               	movwf	LCD_GoToLine@v_lineNumber_u8
  5031                           
  5032                           ;lcd.c: 267: if(v_lineNumber_u8 < LCDConfig.v_MaxSupportedLines_U8)
  5033  0932  1683               	bsf	3,5	;RP0=1, select bank1
  5034  0933  1303               	bcf	3,6	;RP1=0, select bank1
  5035  0934  0820               	movf	_LCDConfig^(0+128),w
  5036  0935  027B               	subwf	LCD_GoToLine@v_lineNumber_u8,w
  5037  0936  1803               	skipnc
  5038  0937  0008               	return
  5039                           
  5040                           ;lcd.c: 268: {
  5041                           ;lcd.c: 271: v_LcdTrackCursorPos_U8 = 0x00;
  5042  0938  1283               	bcf	3,5	;RP0=0, select bank0
  5043  0939  1303               	bcf	3,6	;RP1=0, select bank0
  5044  093A  01EC               	clrf	_v_LcdTrackCursorPos_U8
  5045                           
  5046                           ;lcd.c: 272: v_LcdTrackLineNum_U8 = v_lineNumber_u8;
  5047  093B  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  5048  093C  00FA               	movwf	??_LCD_GoToLine
  5049  093D  087A               	movf	??_LCD_GoToLine,w
  5050  093E  00ED               	movwf	_v_LcdTrackLineNum_U8
  5051                           
  5052                           ;lcd.c: 273: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_lineNumber_u8]);
  5053  093F  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  5054  0940  3EB8               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  5055  0941  0084               	movwf	4
  5056  0942  1383               	bcf	3,7	;select IRP bank1
  5057  0943  0800               	movf	0,w
  5058  0944  120A  158A  2265   	fcall	_LCD_CmdWrite
  5059  0947  0008               	return
  5060  0948                     __end_of_LCD_GoToLine:	
  5061                           
  5062                           	psect	text24
  5063  0A65                     __ptext24:	
  5064 ;; *************** function _LCD_CmdWrite *****************
  5065 ;; Defined at:
  5066 ;;		line 358 in file "../00-libfiles/lcd.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  v_lcdCmd_u8     1    wreg     unsigned char 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;  v_lcdCmd_u8     1    9[COMMON] unsigned char 
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1    wreg      void 
  5073 ;; Registers used:
  5074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5080 ;;      Params:         0       0       0       0       0
  5081 ;;      Locals:         1       0       0       0       0
  5082 ;;      Temps:          2       0       0       0       0
  5083 ;;      Totals:         3       0       0       0       0
  5084 ;;Total ram usage:        3 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:    3
  5087 ;; This function calls:
  5088 ;;		_lcd_BusyCheck
  5089 ;;		_lcd_SendCmdSignals
  5090 ;;		_lcd_SendHigherNibble
  5091 ;;		_lcd_SendLowerNibble
  5092 ;; This function is called by:
  5093 ;;		_LCD_Init
  5094 ;;		_LCD_Clear
  5095 ;;		_LCD_GoToLine
  5096 ;;		_LCD_GoToNextLine
  5097 ;;		_LCD_ScrollMessage
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           
  5102                           ;psect for function _LCD_CmdWrite
  5103  0A65                     _LCD_CmdWrite:	
  5104                           
  5105                           ;incstack = 0
  5106                           ; Regs used in _LCD_CmdWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5107                           ;LCD_CmdWrite@v_lcdCmd_u8 stored from wreg
  5108  0A65  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  5109                           
  5110                           ;lcd.c: 360: lcd_BusyCheck();
  5111  0A66  120A  158A  24DF  120A  158A  	fcall	_lcd_BusyCheck
  5112                           
  5113                           ;lcd.c: 361: if(LCDConfig.v_LcdMode_U8 == 8u)
  5114  0A6B  3008               	movlw	8
  5115  0A6C  1683               	bsf	3,5	;RP0=1, select bank1
  5116  0A6D  1303               	bcf	3,6	;RP1=0, select bank1
  5117  0A6E  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  5118  0A6F  1D03               	btfss	3,2
  5119  0A70  2A78               	goto	l1788
  5120                           
  5121                           ;lcd.c: 362: {
  5122                           ;lcd.c: 363: lcd_SendLowerNibble(v_lcdCmd_u8);
  5123  0A71  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  5124  0A72  120A  158A  230F  120A  158A  	fcall	_lcd_SendLowerNibble
  5125                           
  5126                           ;lcd.c: 364: }
  5127  0A77  2A90               	goto	l1792
  5128  0A78                     l1788:	
  5129                           
  5130                           ;lcd.c: 365: else
  5131                           ;lcd.c: 366: {
  5132                           ;lcd.c: 367: lcd_SendHigherNibble(v_lcdCmd_u8);
  5133  0A78  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  5134  0A79  120A  158A  22CF  120A  158A  	fcall	_lcd_SendHigherNibble
  5135                           
  5136                           ;lcd.c: 368: lcd_SendCmdSignals();
  5137  0A7E  120A  158A  220A  120A  158A  	fcall	_lcd_SendCmdSignals
  5138                           
  5139                           ;lcd.c: 369: v_lcdCmd_u8 = v_lcdCmd_u8 << 4;
  5140  0A83  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  5141  0A84  00F7               	movwf	??_LCD_CmdWrite
  5142  0A85  3003               	movlw	3
  5143  0A86                     u2675:	
  5144  0A86  1003               	clrc
  5145  0A87  0DF7               	rlf	??_LCD_CmdWrite,f
  5146  0A88  3EFF               	addlw	-1
  5147  0A89  1D03               	skipz
  5148  0A8A  2A86               	goto	u2675
  5149  0A8B  1003               	clrc
  5150  0A8C  0D77               	rlf	??_LCD_CmdWrite,w
  5151  0A8D  00F8               	movwf	??_LCD_CmdWrite+1
  5152  0A8E  0878               	movf	??_LCD_CmdWrite+1,w
  5153  0A8F  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  5154  0A90                     l1792:	
  5155                           
  5156                           ;lcd.c: 370: }
  5157                           ;lcd.c: 372: lcd_SendHigherNibble(v_lcdCmd_u8);
  5158  0A90  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  5159  0A91  120A  158A  22CF  120A  158A  	fcall	_lcd_SendHigherNibble
  5160                           
  5161                           ;lcd.c: 373: lcd_SendCmdSignals();
  5162  0A96  120A  158A  220A   	fcall	_lcd_SendCmdSignals
  5163  0A99  0008               	return
  5164  0A9A                     __end_of_LCD_CmdWrite:	
  5165                           
  5166                           	psect	text25
  5167  0B0F                     __ptext25:	
  5168 ;; *************** function _lcd_SendLowerNibble *****************
  5169 ;; Defined at:
  5170 ;;		line 961 in file "../00-libfiles/lcd.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;  dataByte        1    wreg     unsigned char 
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;  dataByte        1    6[COMMON] unsigned char 
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  1    wreg      void 
  5177 ;; Registers used:
  5178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5184 ;;      Params:         0       0       0       0       0
  5185 ;;      Locals:         1       0       0       0       0
  5186 ;;      Temps:          1       0       0       0       0
  5187 ;;      Totals:         2       0       0       0       0
  5188 ;;Total ram usage:        2 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; Hardware stack levels required when called:    1
  5191 ;; This function calls:
  5192 ;;		_GPIO_PinWrite
  5193 ;; This function is called by:
  5194 ;;		_LCD_CmdWrite
  5195 ;;		_lcd_DataWrite
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           
  5200                           ;psect for function _lcd_SendLowerNibble
  5201  0B0F                     _lcd_SendLowerNibble:	
  5202                           
  5203                           ;incstack = 0
  5204                           ; Regs used in _lcd_SendLowerNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5205                           ;lcd_SendLowerNibble@dataByte stored from wreg
  5206  0B0F  00F6               	movwf	lcd_SendLowerNibble@dataByte
  5207                           
  5208                           ;lcd.c: 963: GPIO_PinWrite(LCDConfig.D0,(((dataByte)&((1<<(0))))!=0u));
  5209  0B10  1C76               	btfss	lcd_SendLowerNibble@dataByte,0
  5210  0B11  2B14               	goto	u2500
  5211  0B12  3001               	movlw	1
  5212  0B13  2B15               	goto	u2510
  5213  0B14                     u2500:	
  5214  0B14  3000               	movlw	0
  5215  0B15                     u2510:	
  5216  0B15  00F5               	movwf	??_lcd_SendLowerNibble
  5217  0B16  0875               	movf	??_lcd_SendLowerNibble,w
  5218  0B17  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5219  0B18  1683               	bsf	3,5	;RP0=1, select bank1
  5220  0B19  1303               	bcf	3,6	;RP1=0, select bank1
  5221  0B1A  0826               	movf	(_LCDConfig^(0+128)+6),w
  5222  0B1B  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5223                           
  5224                           ;lcd.c: 964: GPIO_PinWrite(LCDConfig.D1,(((dataByte)&((1<<(1))))!=0u));
  5225  0B20  1CF6               	btfss	lcd_SendLowerNibble@dataByte,1
  5226  0B21  2B24               	goto	u2520
  5227  0B22  3001               	movlw	1
  5228  0B23  2B25               	goto	u2530
  5229  0B24                     u2520:	
  5230  0B24  3000               	movlw	0
  5231  0B25                     u2530:	
  5232  0B25  00F5               	movwf	??_lcd_SendLowerNibble
  5233  0B26  0875               	movf	??_lcd_SendLowerNibble,w
  5234  0B27  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5235  0B28  1683               	bsf	3,5	;RP0=1, select bank1
  5236  0B29  1303               	bcf	3,6	;RP1=0, select bank1
  5237  0B2A  0827               	movf	(_LCDConfig^(0+128)+7),w
  5238  0B2B  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5239                           
  5240                           ;lcd.c: 965: GPIO_PinWrite(LCDConfig.D2,(((dataByte)&((1<<(2))))!=0u));
  5241  0B30  1D76               	btfss	lcd_SendLowerNibble@dataByte,2
  5242  0B31  2B34               	goto	u2540
  5243  0B32  3001               	movlw	1
  5244  0B33  2B35               	goto	u2550
  5245  0B34                     u2540:	
  5246  0B34  3000               	movlw	0
  5247  0B35                     u2550:	
  5248  0B35  00F5               	movwf	??_lcd_SendLowerNibble
  5249  0B36  0875               	movf	??_lcd_SendLowerNibble,w
  5250  0B37  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5251  0B38  1683               	bsf	3,5	;RP0=1, select bank1
  5252  0B39  1303               	bcf	3,6	;RP1=0, select bank1
  5253  0B3A  0828               	movf	(_LCDConfig^(0+128)+8),w
  5254  0B3B  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5255                           
  5256                           ;lcd.c: 966: GPIO_PinWrite(LCDConfig.D3,(((dataByte)&((1<<(3))))!=0u));
  5257  0B40  1DF6               	btfss	lcd_SendLowerNibble@dataByte,3
  5258  0B41  2B44               	goto	u2560
  5259  0B42  3001               	movlw	1
  5260  0B43  2B45               	goto	u2570
  5261  0B44                     u2560:	
  5262  0B44  3000               	movlw	0
  5263  0B45                     u2570:	
  5264  0B45  00F5               	movwf	??_lcd_SendLowerNibble
  5265  0B46  0875               	movf	??_lcd_SendLowerNibble,w
  5266  0B47  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5267  0B48  1683               	bsf	3,5	;RP0=1, select bank1
  5268  0B49  1303               	bcf	3,6	;RP1=0, select bank1
  5269  0B4A  0829               	movf	(_LCDConfig^(0+128)+9),w
  5270  0B4B  120A  118A  22CE   	fcall	_GPIO_PinWrite
  5271  0B4E  0008               	return
  5272  0B4F                     __end_of_lcd_SendLowerNibble:	
  5273                           
  5274                           	psect	text26
  5275  0ACF                     __ptext26:	
  5276 ;; *************** function _lcd_SendHigherNibble *****************
  5277 ;; Defined at:
  5278 ;;		line 942 in file "../00-libfiles/lcd.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  dataByte        1    wreg     unsigned char 
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;  dataByte        1    6[COMMON] unsigned char 
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5292 ;;      Params:         0       0       0       0       0
  5293 ;;      Locals:         1       0       0       0       0
  5294 ;;      Temps:          1       0       0       0       0
  5295 ;;      Totals:         2       0       0       0       0
  5296 ;;Total ram usage:        2 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; Hardware stack levels required when called:    1
  5299 ;; This function calls:
  5300 ;;		_GPIO_PinWrite
  5301 ;; This function is called by:
  5302 ;;		_LCD_CmdWrite
  5303 ;;		_lcd_DataWrite
  5304 ;;		_lcd_Reset
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308                           
  5309                           ;psect for function _lcd_SendHigherNibble
  5310  0ACF                     _lcd_SendHigherNibble:	
  5311                           
  5312                           ;incstack = 0
  5313                           ; Regs used in _lcd_SendHigherNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5314                           ;lcd_SendHigherNibble@dataByte stored from wreg
  5315  0ACF  00F6               	movwf	lcd_SendHigherNibble@dataByte
  5316                           
  5317                           ;lcd.c: 944: GPIO_PinWrite(LCDConfig.D4,(((dataByte)&((1<<(4))))!=0u));
  5318  0AD0  1E76               	btfss	lcd_SendHigherNibble@dataByte,4
  5319  0AD1  2AD4               	goto	u2580
  5320  0AD2  3001               	movlw	1
  5321  0AD3  2AD5               	goto	u2590
  5322  0AD4                     u2580:	
  5323  0AD4  3000               	movlw	0
  5324  0AD5                     u2590:	
  5325  0AD5  00F5               	movwf	??_lcd_SendHigherNibble
  5326  0AD6  0875               	movf	??_lcd_SendHigherNibble,w
  5327  0AD7  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5328  0AD8  1683               	bsf	3,5	;RP0=1, select bank1
  5329  0AD9  1303               	bcf	3,6	;RP1=0, select bank1
  5330  0ADA  082A               	movf	(_LCDConfig^(0+128)+10),w
  5331  0ADB  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5332                           
  5333                           ;lcd.c: 945: GPIO_PinWrite(LCDConfig.D5,(((dataByte)&((1<<(5))))!=0u));
  5334  0AE0  1EF6               	btfss	lcd_SendHigherNibble@dataByte,5
  5335  0AE1  2AE4               	goto	u2600
  5336  0AE2  3001               	movlw	1
  5337  0AE3  2AE5               	goto	u2610
  5338  0AE4                     u2600:	
  5339  0AE4  3000               	movlw	0
  5340  0AE5                     u2610:	
  5341  0AE5  00F5               	movwf	??_lcd_SendHigherNibble
  5342  0AE6  0875               	movf	??_lcd_SendHigherNibble,w
  5343  0AE7  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5344  0AE8  1683               	bsf	3,5	;RP0=1, select bank1
  5345  0AE9  1303               	bcf	3,6	;RP1=0, select bank1
  5346  0AEA  082B               	movf	(_LCDConfig^(0+128)+11),w
  5347  0AEB  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5348                           
  5349                           ;lcd.c: 946: GPIO_PinWrite(LCDConfig.D6,(((dataByte)&((1<<(6))))!=0u));
  5350  0AF0  1F76               	btfss	lcd_SendHigherNibble@dataByte,6
  5351  0AF1  2AF4               	goto	u2620
  5352  0AF2  3001               	movlw	1
  5353  0AF3  2AF5               	goto	u2630
  5354  0AF4                     u2620:	
  5355  0AF4  3000               	movlw	0
  5356  0AF5                     u2630:	
  5357  0AF5  00F5               	movwf	??_lcd_SendHigherNibble
  5358  0AF6  0875               	movf	??_lcd_SendHigherNibble,w
  5359  0AF7  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5360  0AF8  1683               	bsf	3,5	;RP0=1, select bank1
  5361  0AF9  1303               	bcf	3,6	;RP1=0, select bank1
  5362  0AFA  082C               	movf	(_LCDConfig^(0+128)+12),w
  5363  0AFB  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5364                           
  5365                           ;lcd.c: 947: GPIO_PinWrite(LCDConfig.D7,(((dataByte)&((1<<(7))))!=0u));
  5366  0B00  1FF6               	btfss	lcd_SendHigherNibble@dataByte,7
  5367  0B01  2B04               	goto	u2640
  5368  0B02  3001               	movlw	1
  5369  0B03  2B05               	goto	u2650
  5370  0B04                     u2640:	
  5371  0B04  3000               	movlw	0
  5372  0B05                     u2650:	
  5373  0B05  00F5               	movwf	??_lcd_SendHigherNibble
  5374  0B06  0875               	movf	??_lcd_SendHigherNibble,w
  5375  0B07  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5376  0B08  1683               	bsf	3,5	;RP0=1, select bank1
  5377  0B09  1303               	bcf	3,6	;RP1=0, select bank1
  5378  0B0A  082D               	movf	(_LCDConfig^(0+128)+13),w
  5379  0B0B  120A  118A  22CE   	fcall	_GPIO_PinWrite
  5380  0B0E  0008               	return
  5381  0B0F                     __end_of_lcd_SendHigherNibble:	
  5382                           
  5383                           	psect	text27
  5384  0A0A                     __ptext27:	
  5385 ;; *************** function _lcd_SendCmdSignals *****************
  5386 ;; Defined at:
  5387 ;;		line 980 in file "../00-libfiles/lcd.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;		None
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;		None
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  1    wreg      void 
  5394 ;; Registers used:
  5395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5401 ;;      Params:         0       0       0       0       0
  5402 ;;      Locals:         0       0       0       0       0
  5403 ;;      Temps:          0       0       0       0       0
  5404 ;;      Totals:         0       0       0       0       0
  5405 ;;Total ram usage:        0 bytes
  5406 ;; Hardware stack levels used:    1
  5407 ;; Hardware stack levels required when called:    1
  5408 ;; This function calls:
  5409 ;;		_DELAY_us
  5410 ;;		_GPIO_PinWrite
  5411 ;; This function is called by:
  5412 ;;		_LCD_CmdWrite
  5413 ;;		_lcd_Reset
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           
  5418                           ;psect for function _lcd_SendCmdSignals
  5419  0A0A                     _lcd_SendCmdSignals:	
  5420                           
  5421                           ;lcd.c: 982: GPIO_PinWrite(LCDConfig.RS,0);
  5422                           
  5423                           ;incstack = 0
  5424                           ; Regs used in _lcd_SendCmdSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5425  0A0A  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5426  0A0B  1683               	bsf	3,5	;RP0=1, select bank1
  5427  0A0C  1303               	bcf	3,6	;RP1=0, select bank1
  5428  0A0D  0823               	movf	(_LCDConfig^(0+128)+3),w
  5429  0A0E  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5430                           
  5431                           ;lcd.c: 983: GPIO_PinWrite(LCDConfig.RW,0);
  5432  0A13  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5433  0A14  1683               	bsf	3,5	;RP0=1, select bank1
  5434  0A15  1303               	bcf	3,6	;RP1=0, select bank1
  5435  0A16  0824               	movf	(_LCDConfig^(0+128)+4),w
  5436  0A17  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5437                           
  5438                           ;lcd.c: 984: GPIO_PinWrite(LCDConfig.EN,1);
  5439  0A1C  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5440  0A1D  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  5441  0A1E  1683               	bsf	3,5	;RP0=1, select bank1
  5442  0A1F  1303               	bcf	3,6	;RP1=0, select bank1
  5443  0A20  0825               	movf	(_LCDConfig^(0+128)+5),w
  5444  0A21  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5445                           
  5446                           ;lcd.c: 985: DELAY_us(10);
  5447  0A26  300A               	movlw	10
  5448  0A27  00F0               	movwf	DELAY_us@us_count
  5449  0A28  3000               	movlw	0
  5450  0A29  00F1               	movwf	DELAY_us@us_count+1
  5451  0A2A  120A  158A  20F4  120A  158A  	fcall	_DELAY_us
  5452                           
  5453                           ;lcd.c: 986: GPIO_PinWrite(LCDConfig.EN,0);
  5454  0A2F  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5455  0A30  1683               	bsf	3,5	;RP0=1, select bank1
  5456  0A31  1303               	bcf	3,6	;RP1=0, select bank1
  5457  0A32  0825               	movf	(_LCDConfig^(0+128)+5),w
  5458  0A33  120A  118A  22CE   	fcall	_GPIO_PinWrite
  5459  0A36  0008               	return
  5460  0A37                     __end_of_lcd_SendCmdSignals:	
  5461                           
  5462                           	psect	text28
  5463  0CDF                     __ptext28:	
  5464 ;; *************** function _lcd_BusyCheck *****************
  5465 ;; Defined at:
  5466 ;;		line 859 in file "../00-libfiles/lcd.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;		None
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  busyflag        1    6[COMMON] unsigned char 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  1    wreg      void 
  5473 ;; Registers used:
  5474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5480 ;;      Params:         0       0       0       0       0
  5481 ;;      Locals:         1       0       0       0       0
  5482 ;;      Temps:          1       0       0       0       0
  5483 ;;      Totals:         2       0       0       0       0
  5484 ;;Total ram usage:        2 bytes
  5485 ;; Hardware stack levels used:    1
  5486 ;; Hardware stack levels required when called:    2
  5487 ;; This function calls:
  5488 ;;		_DELAY_ms
  5489 ;;		_DELAY_us
  5490 ;;		_GPIO_PinDirection
  5491 ;;		_GPIO_PinRead
  5492 ;;		_GPIO_PinWrite
  5493 ;; This function is called by:
  5494 ;;		_LCD_CmdWrite
  5495 ;;		_lcd_DataWrite
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           
  5500                           ;psect for function _lcd_BusyCheck
  5501  0CDF                     _lcd_BusyCheck:	
  5502                           
  5503                           ;lcd.c: 861: uint8_t busyflag;
  5504                           ;lcd.c: 863: if(LCDConfig.RW == P_NC)
  5505                           
  5506                           ;incstack = 0
  5507                           ; Regs used in _lcd_BusyCheck: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5508  0CDF  1683               	bsf	3,5	;RP0=1, select bank1
  5509  0CE0  1303               	bcf	3,6	;RP1=0, select bank1
  5510  0CE1  0A24               	incf	(_LCDConfig^(0+128)+4),w
  5511  0CE2  1D03               	btfss	3,2
  5512  0CE3  2D63               	goto	l1770
  5513                           
  5514                           ;lcd.c: 864: {
  5515                           ;lcd.c: 865: GPIO_PinDirection(LCDConfig.D7,0x01u);
  5516  0CE4  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  5517  0CE5  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  5518  0CE6  082D               	movf	(_LCDConfig^(0+128)+13),w
  5519  0CE7  120A  118A  21F5  120A  158A  	fcall	_GPIO_PinDirection
  5520                           
  5521                           ;lcd.c: 866: GPIO_PinWrite(LCDConfig.RS,0);
  5522  0CEC  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5523  0CED  1683               	bsf	3,5	;RP0=1, select bank1
  5524  0CEE  1303               	bcf	3,6	;RP1=0, select bank1
  5525  0CEF  0823               	movf	(_LCDConfig^(0+128)+3),w
  5526  0CF0  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5527                           
  5528                           ;lcd.c: 867: GPIO_PinWrite(LCDConfig.RW,1);
  5529  0CF5  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5530  0CF6  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  5531  0CF7  1683               	bsf	3,5	;RP0=1, select bank1
  5532  0CF8  1303               	bcf	3,6	;RP1=0, select bank1
  5533  0CF9  0824               	movf	(_LCDConfig^(0+128)+4),w
  5534  0CFA  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5535  0CFF                     l174:	
  5536                           ;lcd.c: 868: do
  5537                           
  5538                           
  5539                           ;lcd.c: 869: {
  5540                           ;lcd.c: 871: GPIO_PinWrite(LCDConfig.EN,0);
  5541  0CFF  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5542  0D00  1683               	bsf	3,5	;RP0=1, select bank1
  5543  0D01  1303               	bcf	3,6	;RP1=0, select bank1
  5544  0D02  0825               	movf	(_LCDConfig^(0+128)+5),w
  5545  0D03  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5546                           
  5547                           ;lcd.c: 872: DELAY_us(10);
  5548  0D08  300A               	movlw	10
  5549  0D09  00F0               	movwf	DELAY_us@us_count
  5550  0D0A  3000               	movlw	0
  5551  0D0B  00F1               	movwf	DELAY_us@us_count+1
  5552  0D0C  120A  158A  20F4  120A  158A  	fcall	_DELAY_us
  5553                           
  5554                           ;lcd.c: 873: GPIO_PinWrite(LCDConfig.EN,1);
  5555  0D11  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5556  0D12  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  5557  0D13  1683               	bsf	3,5	;RP0=1, select bank1
  5558  0D14  1303               	bcf	3,6	;RP1=0, select bank1
  5559  0D15  0825               	movf	(_LCDConfig^(0+128)+5),w
  5560  0D16  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5561                           
  5562                           ;lcd.c: 874: DELAY_us(10);
  5563  0D1B  300A               	movlw	10
  5564  0D1C  00F0               	movwf	DELAY_us@us_count
  5565  0D1D  3000               	movlw	0
  5566  0D1E  00F1               	movwf	DELAY_us@us_count+1
  5567  0D1F  120A  158A  20F4  120A  158A  	fcall	_DELAY_us
  5568                           
  5569                           ;lcd.c: 875: busyflag = GPIO_PinRead(LCDConfig.D7);
  5570  0D24  1683               	bsf	3,5	;RP0=1, select bank1
  5571  0D25  1303               	bcf	3,6	;RP1=0, select bank1
  5572  0D26  082D               	movf	(_LCDConfig^(0+128)+13),w
  5573  0D27  120A  158A  246A  120A  158A  	fcall	_GPIO_PinRead
  5574  0D2C  00F5               	movwf	??_lcd_BusyCheck
  5575  0D2D  0875               	movf	??_lcd_BusyCheck,w
  5576  0D2E  00F6               	movwf	lcd_BusyCheck@busyflag
  5577                           
  5578                           ;lcd.c: 878: if(LCDConfig.v_LcdMode_U8 == 4)
  5579  0D2F  3004               	movlw	4
  5580  0D30  1683               	bsf	3,5	;RP0=1, select bank1
  5581  0D31  1303               	bcf	3,6	;RP1=0, select bank1
  5582  0D32  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  5583  0D33  1D03               	btfss	3,2
  5584  0D34  2D58               	goto	l1766
  5585                           
  5586                           ;lcd.c: 879: {
  5587                           ;lcd.c: 881: GPIO_PinWrite(LCDConfig.EN,0);
  5588  0D35  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5589  0D36  0825               	movf	(_LCDConfig^(0+128)+5),w
  5590  0D37  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5591                           
  5592                           ;lcd.c: 882: DELAY_us(10);
  5593  0D3C  300A               	movlw	10
  5594  0D3D  00F0               	movwf	DELAY_us@us_count
  5595  0D3E  3000               	movlw	0
  5596  0D3F  00F1               	movwf	DELAY_us@us_count+1
  5597  0D40  120A  158A  20F4  120A  158A  	fcall	_DELAY_us
  5598                           
  5599                           ;lcd.c: 883: GPIO_PinWrite(LCDConfig.EN,1);
  5600  0D45  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5601  0D46  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  5602  0D47  1683               	bsf	3,5	;RP0=1, select bank1
  5603  0D48  1303               	bcf	3,6	;RP1=0, select bank1
  5604  0D49  0825               	movf	(_LCDConfig^(0+128)+5),w
  5605  0D4A  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5606                           
  5607                           ;lcd.c: 884: DELAY_us(10);
  5608  0D4F  300A               	movlw	10
  5609  0D50  00F0               	movwf	DELAY_us@us_count
  5610  0D51  3000               	movlw	0
  5611  0D52  00F1               	movwf	DELAY_us@us_count+1
  5612  0D53  120A  158A  20F4  120A  158A  	fcall	_DELAY_us
  5613  0D58                     l1766:	
  5614                           
  5615                           ;lcd.c: 885: }
  5616                           ;lcd.c: 886: }while(busyflag!=0);
  5617  0D58  0876               	movf	lcd_BusyCheck@busyflag,w
  5618  0D59  1D03               	btfss	3,2
  5619  0D5A  2CFF               	goto	l174
  5620                           
  5621                           ;lcd.c: 888: GPIO_PinDirection(LCDConfig.D7,0x00u);
  5622  0D5B  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  5623  0D5C  1683               	bsf	3,5	;RP0=1, select bank1
  5624  0D5D  1303               	bcf	3,6	;RP1=0, select bank1
  5625  0D5E  082D               	movf	(_LCDConfig^(0+128)+13),w
  5626  0D5F  120A  118A  21F5   	fcall	_GPIO_PinDirection
  5627                           
  5628                           ;lcd.c: 889: }
  5629  0D62  0008               	return
  5630  0D63                     l1770:	
  5631                           
  5632                           ;lcd.c: 890: else
  5633                           ;lcd.c: 891: {
  5634                           ;lcd.c: 894: DELAY_ms(1);
  5635  0D63  3001               	movlw	1
  5636  0D64  00F2               	movwf	DELAY_ms@ms_count
  5637  0D65  3000               	movlw	0
  5638  0D66  00F3               	movwf	DELAY_ms@ms_count+1
  5639  0D67  120A  158A  211D   	fcall	_DELAY_ms
  5640  0D6A  0008               	return
  5641  0D6B                     __end_of_lcd_BusyCheck:	
  5642                           
  5643                           	psect	text29
  5644  02CE                     __ptext29:	
  5645 ;; *************** function _GPIO_PinWrite *****************
  5646 ;; Defined at:
  5647 ;;		line 127 in file "../00-libfiles/gpio.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;  enm_pinNumbe    1    wreg     enum E1088
  5650 ;;  var_pinValue    1    0[COMMON] unsigned char 
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  5653 ;;  var_portNumb    1    3[COMMON] unsigned char 
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  1    wreg      void 
  5656 ;; Registers used:
  5657 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5663 ;;      Params:         1       0       0       0       0
  5664 ;;      Locals:         2       0       0       0       0
  5665 ;;      Temps:          2       0       0       0       0
  5666 ;;      Totals:         5       0       0       0       0
  5667 ;;Total ram usage:        5 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_lcd_BusyCheck
  5673 ;;		_lcd_SendHigherNibble
  5674 ;;		_lcd_SendLowerNibble
  5675 ;;		_lcd_SendCmdSignals
  5676 ;;		_lcd_SendDataSignals
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           
  5681                           ;psect for function _GPIO_PinWrite
  5682  02CE                     _GPIO_PinWrite:	
  5683                           
  5684                           ;incstack = 0
  5685                           ; Regs used in _GPIO_PinWrite: [wreg-fsr0h+status,2+status,0]
  5686                           ;GPIO_PinWrite@enm_pinNumber stored from wreg
  5687  02CE  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  5688                           
  5689                           ;gpio.c: 130: uint8_t var_portNumber_u8;
  5690                           ;gpio.c: 133: var_portNumber_u8 = (enm_pinNumber>>3);
  5691  02CF  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  5692  02D0  00F1               	movwf	??_GPIO_PinWrite
  5693  02D1  3003               	movlw	3
  5694  02D2                     u2155:	
  5695  02D2  1003               	clrc
  5696  02D3  0CF1               	rrf	??_GPIO_PinWrite,f
  5697  02D4  3EFF               	addlw	-1
  5698  02D5  1D03               	skipz
  5699  02D6  2AD2               	goto	u2155
  5700  02D7  0871               	movf	??_GPIO_PinWrite,w
  5701  02D8  00F2               	movwf	??_GPIO_PinWrite+1
  5702  02D9  0872               	movf	??_GPIO_PinWrite+1,w
  5703  02DA  00F3               	movwf	GPIO_PinWrite@var_portNumber_u8
  5704                           
  5705                           ;gpio.c: 134: enm_pinNumber = enm_pinNumber & 0x07;
  5706  02DB  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  5707  02DC  3907               	andlw	7
  5708  02DD  00F1               	movwf	??_GPIO_PinWrite
  5709  02DE  0871               	movf	??_GPIO_PinWrite,w
  5710  02DF  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  5711                           
  5712                           ;gpio.c: 138: switch(var_portNumber_u8)
  5713  02E0  2B95               	goto	l1722
  5714  02E1                     l1690:	
  5715                           ;gpio.c: 139: {
  5716                           ;gpio.c: 141: case 0:
  5717                           
  5718                           
  5719                           ;gpio.c: 142: ((var_pinValue_u8)? ((PORTA) |= (1<<(enm_pinNumber))): ((PORTA) &= ~(1<<(e
      +                          nm_pinNumber))));
  5720  02E1  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  5721  02E2  1903               	btfsc	3,2
  5722  02E3  2AF4               	goto	l1694
  5723  02E4  3001               	movlw	1
  5724  02E5  00F1               	movwf	??_GPIO_PinWrite
  5725  02E6  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5726  02E7  2AEA               	goto	u2174
  5727  02E8                     u2175:	
  5728  02E8  1003               	clrc
  5729  02E9  0DF1               	rlf	??_GPIO_PinWrite,f
  5730  02EA                     u2174:	
  5731  02EA  3EFF               	addlw	-1
  5732  02EB  1D03               	skipz
  5733  02EC  2AE8               	goto	u2175
  5734  02ED  0871               	movf	??_GPIO_PinWrite,w
  5735  02EE  00F2               	movwf	??_GPIO_PinWrite+1
  5736  02EF  0872               	movf	??_GPIO_PinWrite+1,w
  5737  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  5738  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  5739  02F2  0485               	iorwf	5,f	;volatile
  5740  02F3  0008               	return
  5741  02F4                     l1694:	
  5742  02F4  3001               	movlw	1
  5743  02F5  00F1               	movwf	??_GPIO_PinWrite
  5744  02F6  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5745  02F7  2AFA               	goto	u2184
  5746  02F8                     u2185:	
  5747  02F8  1003               	clrc
  5748  02F9  0DF1               	rlf	??_GPIO_PinWrite,f
  5749  02FA                     u2184:	
  5750  02FA  3EFF               	addlw	-1
  5751  02FB  1D03               	skipz
  5752  02FC  2AF8               	goto	u2185
  5753  02FD  0871               	movf	??_GPIO_PinWrite,w
  5754  02FE  3AFF               	xorlw	255
  5755  02FF  00F2               	movwf	??_GPIO_PinWrite+1
  5756  0300  0872               	movf	??_GPIO_PinWrite+1,w
  5757  0301  1283               	bcf	3,5	;RP0=0, select bank0
  5758  0302  1303               	bcf	3,6	;RP1=0, select bank0
  5759  0303  0585               	andwf	5,f	;volatile
  5760                           
  5761                           ;gpio.c: 143: break;
  5762  0304  0008               	return
  5763  0305                     l1696:	
  5764                           ;gpio.c: 147: case 1:
  5765                           
  5766                           
  5767                           ;gpio.c: 148: ((var_pinValue_u8)? ((PORTB) |= (1<<(enm_pinNumber))): ((PORTB) &= ~(1<<(e
      +                          nm_pinNumber))));
  5768  0305  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  5769  0306  1903               	btfsc	3,2
  5770  0307  2B18               	goto	l1700
  5771  0308  3001               	movlw	1
  5772  0309  00F1               	movwf	??_GPIO_PinWrite
  5773  030A  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5774  030B  2B0E               	goto	u2204
  5775  030C                     u2205:	
  5776  030C  1003               	clrc
  5777  030D  0DF1               	rlf	??_GPIO_PinWrite,f
  5778  030E                     u2204:	
  5779  030E  3EFF               	addlw	-1
  5780  030F  1D03               	skipz
  5781  0310  2B0C               	goto	u2205
  5782  0311  0871               	movf	??_GPIO_PinWrite,w
  5783  0312  00F2               	movwf	??_GPIO_PinWrite+1
  5784  0313  0872               	movf	??_GPIO_PinWrite+1,w
  5785  0314  1283               	bcf	3,5	;RP0=0, select bank0
  5786  0315  1303               	bcf	3,6	;RP1=0, select bank0
  5787  0316  0486               	iorwf	6,f	;volatile
  5788  0317  0008               	return
  5789  0318                     l1700:	
  5790  0318  3001               	movlw	1
  5791  0319  00F1               	movwf	??_GPIO_PinWrite
  5792  031A  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5793  031B  2B1E               	goto	u2214
  5794  031C                     u2215:	
  5795  031C  1003               	clrc
  5796  031D  0DF1               	rlf	??_GPIO_PinWrite,f
  5797  031E                     u2214:	
  5798  031E  3EFF               	addlw	-1
  5799  031F  1D03               	skipz
  5800  0320  2B1C               	goto	u2215
  5801  0321  0871               	movf	??_GPIO_PinWrite,w
  5802  0322  3AFF               	xorlw	255
  5803  0323  00F2               	movwf	??_GPIO_PinWrite+1
  5804  0324  0872               	movf	??_GPIO_PinWrite+1,w
  5805  0325  1283               	bcf	3,5	;RP0=0, select bank0
  5806  0326  1303               	bcf	3,6	;RP1=0, select bank0
  5807  0327  0586               	andwf	6,f	;volatile
  5808                           
  5809                           ;gpio.c: 149: break;
  5810  0328  0008               	return
  5811  0329                     l1702:	
  5812                           ;gpio.c: 153: case 2:
  5813                           
  5814                           
  5815                           ;gpio.c: 154: ((var_pinValue_u8)? ((PORTC) |= (1<<(enm_pinNumber))): ((PORTC) &= ~(1<<(e
      +                          nm_pinNumber))));
  5816  0329  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  5817  032A  1903               	btfsc	3,2
  5818  032B  2B3C               	goto	l1706
  5819  032C  3001               	movlw	1
  5820  032D  00F1               	movwf	??_GPIO_PinWrite
  5821  032E  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5822  032F  2B32               	goto	u2234
  5823  0330                     u2235:	
  5824  0330  1003               	clrc
  5825  0331  0DF1               	rlf	??_GPIO_PinWrite,f
  5826  0332                     u2234:	
  5827  0332  3EFF               	addlw	-1
  5828  0333  1D03               	skipz
  5829  0334  2B30               	goto	u2235
  5830  0335  0871               	movf	??_GPIO_PinWrite,w
  5831  0336  00F2               	movwf	??_GPIO_PinWrite+1
  5832  0337  0872               	movf	??_GPIO_PinWrite+1,w
  5833  0338  1283               	bcf	3,5	;RP0=0, select bank0
  5834  0339  1303               	bcf	3,6	;RP1=0, select bank0
  5835  033A  0487               	iorwf	7,f	;volatile
  5836  033B  0008               	return
  5837  033C                     l1706:	
  5838  033C  3001               	movlw	1
  5839  033D  00F1               	movwf	??_GPIO_PinWrite
  5840  033E  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5841  033F  2B42               	goto	u2244
  5842  0340                     u2245:	
  5843  0340  1003               	clrc
  5844  0341  0DF1               	rlf	??_GPIO_PinWrite,f
  5845  0342                     u2244:	
  5846  0342  3EFF               	addlw	-1
  5847  0343  1D03               	skipz
  5848  0344  2B40               	goto	u2245
  5849  0345  0871               	movf	??_GPIO_PinWrite,w
  5850  0346  3AFF               	xorlw	255
  5851  0347  00F2               	movwf	??_GPIO_PinWrite+1
  5852  0348  0872               	movf	??_GPIO_PinWrite+1,w
  5853  0349  1283               	bcf	3,5	;RP0=0, select bank0
  5854  034A  1303               	bcf	3,6	;RP1=0, select bank0
  5855  034B  0587               	andwf	7,f	;volatile
  5856                           
  5857                           ;gpio.c: 155: break;
  5858  034C  0008               	return
  5859  034D                     l1708:	
  5860                           ;gpio.c: 159: case 3:
  5861                           
  5862                           
  5863                           ;gpio.c: 160: ((var_pinValue_u8)? ((PORTD) |= (1<<(enm_pinNumber))): ((PORTD) &= ~(1<<(e
      +                          nm_pinNumber))));
  5864  034D  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  5865  034E  1903               	btfsc	3,2
  5866  034F  2B60               	goto	l1712
  5867  0350  3001               	movlw	1
  5868  0351  00F1               	movwf	??_GPIO_PinWrite
  5869  0352  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5870  0353  2B56               	goto	u2264
  5871  0354                     u2265:	
  5872  0354  1003               	clrc
  5873  0355  0DF1               	rlf	??_GPIO_PinWrite,f
  5874  0356                     u2264:	
  5875  0356  3EFF               	addlw	-1
  5876  0357  1D03               	skipz
  5877  0358  2B54               	goto	u2265
  5878  0359  0871               	movf	??_GPIO_PinWrite,w
  5879  035A  00F2               	movwf	??_GPIO_PinWrite+1
  5880  035B  0872               	movf	??_GPIO_PinWrite+1,w
  5881  035C  1283               	bcf	3,5	;RP0=0, select bank0
  5882  035D  1303               	bcf	3,6	;RP1=0, select bank0
  5883  035E  0488               	iorwf	8,f	;volatile
  5884  035F  0008               	return
  5885  0360                     l1712:	
  5886  0360  3001               	movlw	1
  5887  0361  00F1               	movwf	??_GPIO_PinWrite
  5888  0362  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5889  0363  2B66               	goto	u2274
  5890  0364                     u2275:	
  5891  0364  1003               	clrc
  5892  0365  0DF1               	rlf	??_GPIO_PinWrite,f
  5893  0366                     u2274:	
  5894  0366  3EFF               	addlw	-1
  5895  0367  1D03               	skipz
  5896  0368  2B64               	goto	u2275
  5897  0369  0871               	movf	??_GPIO_PinWrite,w
  5898  036A  3AFF               	xorlw	255
  5899  036B  00F2               	movwf	??_GPIO_PinWrite+1
  5900  036C  0872               	movf	??_GPIO_PinWrite+1,w
  5901  036D  1283               	bcf	3,5	;RP0=0, select bank0
  5902  036E  1303               	bcf	3,6	;RP1=0, select bank0
  5903  036F  0588               	andwf	8,f	;volatile
  5904                           
  5905                           ;gpio.c: 161: break;
  5906  0370  0008               	return
  5907  0371                     l1714:	
  5908                           ;gpio.c: 165: case 4:
  5909                           
  5910                           
  5911                           ;gpio.c: 166: ((var_pinValue_u8)? ((PORTE) |= (1<<(enm_pinNumber))): ((PORTE) &= ~(1<<(e
      +                          nm_pinNumber))));
  5912  0371  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  5913  0372  1903               	btfsc	3,2
  5914  0373  2B84               	goto	l1718
  5915  0374  3001               	movlw	1
  5916  0375  00F1               	movwf	??_GPIO_PinWrite
  5917  0376  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5918  0377  2B7A               	goto	u2294
  5919  0378                     u2295:	
  5920  0378  1003               	clrc
  5921  0379  0DF1               	rlf	??_GPIO_PinWrite,f
  5922  037A                     u2294:	
  5923  037A  3EFF               	addlw	-1
  5924  037B  1D03               	skipz
  5925  037C  2B78               	goto	u2295
  5926  037D  0871               	movf	??_GPIO_PinWrite,w
  5927  037E  00F2               	movwf	??_GPIO_PinWrite+1
  5928  037F  0872               	movf	??_GPIO_PinWrite+1,w
  5929  0380  1283               	bcf	3,5	;RP0=0, select bank0
  5930  0381  1303               	bcf	3,6	;RP1=0, select bank0
  5931  0382  0489               	iorwf	9,f	;volatile
  5932  0383  0008               	return
  5933  0384                     l1718:	
  5934  0384  3001               	movlw	1
  5935  0385  00F1               	movwf	??_GPIO_PinWrite
  5936  0386  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5937  0387  2B8A               	goto	u2304
  5938  0388                     u2305:	
  5939  0388  1003               	clrc
  5940  0389  0DF1               	rlf	??_GPIO_PinWrite,f
  5941  038A                     u2304:	
  5942  038A  3EFF               	addlw	-1
  5943  038B  1D03               	skipz
  5944  038C  2B88               	goto	u2305
  5945  038D  0871               	movf	??_GPIO_PinWrite,w
  5946  038E  3AFF               	xorlw	255
  5947  038F  00F2               	movwf	??_GPIO_PinWrite+1
  5948  0390  0872               	movf	??_GPIO_PinWrite+1,w
  5949  0391  1283               	bcf	3,5	;RP0=0, select bank0
  5950  0392  1303               	bcf	3,6	;RP1=0, select bank0
  5951  0393  0589               	andwf	9,f	;volatile
  5952                           
  5953                           ;gpio.c: 169: }
  5954                           
  5955                           ;gpio.c: 167: break;
  5956  0394  0008               	return
  5957  0395                     l1722:	
  5958  0395  0873               	movf	GPIO_PinWrite@var_portNumber_u8,w
  5959                           
  5960                           ; Switch size 1, requested type "space"
  5961                           ; Number of cases is 5, Range of values is 0 to 4
  5962                           ; switch strategies available:
  5963                           ; Name         Instructions Cycles
  5964                           ; simple_byte           16     9 (average)
  5965                           ; direct_byte           23     8 (fixed)
  5966                           ; jumptable            260     6 (fixed)
  5967                           ;	Chosen strategy is simple_byte
  5968  0396  3A00               	xorlw	0	; case 0
  5969  0397  1903               	skipnz
  5970  0398  2AE1               	goto	l1690
  5971  0399  3A01               	xorlw	1	; case 1
  5972  039A  1903               	skipnz
  5973  039B  2B05               	goto	l1696
  5974  039C  3A03               	xorlw	3	; case 2
  5975  039D  1903               	skipnz
  5976  039E  2B29               	goto	l1702
  5977  039F  3A01               	xorlw	1	; case 3
  5978  03A0  1903               	skipnz
  5979  03A1  2B4D               	goto	l1708
  5980  03A2  3A07               	xorlw	7	; case 4
  5981  03A3  1903               	skipnz
  5982  03A4  2B71               	goto	l1714
  5983  03A5  2BA6               	goto	l328
  5984  03A6                     l328:	
  5985  03A6  0008               	return
  5986  03A7                     __end_of_GPIO_PinWrite:	
  5987                           
  5988                           	psect	text30
  5989  0C6A                     __ptext30:	
  5990 ;; *************** function _GPIO_PinRead *****************
  5991 ;; Defined at:
  5992 ;;		line 192 in file "../00-libfiles/gpio.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;  enm_pinNumbe    1    wreg     enum E1088
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  5997 ;;  returnStatus    1    3[COMMON] unsigned char 
  5998 ;;  var_portNumb    1    2[COMMON] unsigned char 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      unsigned char 
  6001 ;; Registers used:
  6002 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6008 ;;      Params:         0       0       0       0       0
  6009 ;;      Locals:         3       0       0       0       0
  6010 ;;      Temps:          2       0       0       0       0
  6011 ;;      Totals:         5       0       0       0       0
  6012 ;;Total ram usage:        5 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; This function calls:
  6015 ;;		Nothing
  6016 ;; This function is called by:
  6017 ;;		_lcd_BusyCheck
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           
  6022                           ;psect for function _GPIO_PinRead
  6023  0C6A                     _GPIO_PinRead:	
  6024                           
  6025                           ;incstack = 0
  6026                           ; Regs used in _GPIO_PinRead: [wreg-fsr0h+status,2+status,0]
  6027                           ;GPIO_PinRead@enm_pinNumber stored from wreg
  6028  0C6A  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  6029                           
  6030                           ;gpio.c: 194: uint8_t var_portNumber_u8;
  6031                           ;gpio.c: 195: uint8_t returnStatus = 0;
  6032  0C6B  01F3               	clrf	GPIO_PinRead@returnStatus
  6033                           
  6034                           ;gpio.c: 197: var_portNumber_u8 = (enm_pinNumber>>3);
  6035  0C6C  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  6036  0C6D  00F0               	movwf	??_GPIO_PinRead
  6037  0C6E  3003               	movlw	3
  6038  0C6F                     u2315:	
  6039  0C6F  1003               	clrc
  6040  0C70  0CF0               	rrf	??_GPIO_PinRead,f
  6041  0C71  3EFF               	addlw	-1
  6042  0C72  1D03               	skipz
  6043  0C73  2C6F               	goto	u2315
  6044  0C74  0870               	movf	??_GPIO_PinRead,w
  6045  0C75  00F1               	movwf	??_GPIO_PinRead+1
  6046  0C76  0871               	movf	??_GPIO_PinRead+1,w
  6047  0C77  00F2               	movwf	GPIO_PinRead@var_portNumber_u8
  6048                           
  6049                           ;gpio.c: 198: enm_pinNumber = enm_pinNumber & 0x07;
  6050  0C78  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  6051  0C79  3907               	andlw	7
  6052  0C7A  00F0               	movwf	??_GPIO_PinRead
  6053  0C7B  0870               	movf	??_GPIO_PinRead,w
  6054  0C7C  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  6055                           
  6056                           ;gpio.c: 201: switch(var_portNumber_u8)
  6057  0C7D  2CCC               	goto	l1742
  6058  0C7E                     l1730:	
  6059                           ;gpio.c: 202: {
  6060                           ;gpio.c: 204: case 0:
  6061                           
  6062                           
  6063                           ;gpio.c: 205: returnStatus = (((PORTA)&((1<<(enm_pinNumber))))!=0u);
  6064  0C7E  3001               	movlw	1
  6065  0C7F  00F0               	movwf	??_GPIO_PinRead
  6066  0C80  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6067  0C81  2C84               	goto	u2324
  6068  0C82                     u2325:	
  6069  0C82  1003               	clrc
  6070  0C83  0DF0               	rlf	??_GPIO_PinRead,f
  6071  0C84                     u2324:	
  6072  0C84  3EFF               	addlw	-1
  6073  0C85  1D03               	skipz
  6074  0C86  2C82               	goto	u2325
  6075  0C87  0870               	movf	??_GPIO_PinRead,w
  6076  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  6077  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  6078  0C8A  0505               	andwf	5,w	;volatile
  6079  0C8B  2CC3               	goto	L7
  6080  0C8C                     l1732:	
  6081                           ;gpio.c: 209: case 1:
  6082                           
  6083                           ;gpio.c: 206: break;
  6084                           
  6085                           
  6086                           ;gpio.c: 210: returnStatus = (((PORTB)&((1<<(enm_pinNumber))))!=0u);
  6087  0C8C  3001               	movlw	1
  6088  0C8D  00F0               	movwf	??_GPIO_PinRead
  6089  0C8E  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6090  0C8F  2C92               	goto	u2354
  6091  0C90                     u2355:	
  6092  0C90  1003               	clrc
  6093  0C91  0DF0               	rlf	??_GPIO_PinRead,f
  6094  0C92                     u2354:	
  6095  0C92  3EFF               	addlw	-1
  6096  0C93  1D03               	skipz
  6097  0C94  2C90               	goto	u2355
  6098  0C95  0870               	movf	??_GPIO_PinRead,w
  6099  0C96  1283               	bcf	3,5	;RP0=0, select bank0
  6100  0C97  1303               	bcf	3,6	;RP1=0, select bank0
  6101  0C98  0506               	andwf	6,w	;volatile
  6102  0C99  2CC3               	goto	L7
  6103  0C9A                     l1734:	
  6104                           ;gpio.c: 214: case 2:
  6105                           
  6106                           ;gpio.c: 211: break;
  6107                           
  6108                           
  6109                           ;gpio.c: 215: returnStatus = (((PORTC)&((1<<(enm_pinNumber))))!=0u);
  6110  0C9A  3001               	movlw	1
  6111  0C9B  00F0               	movwf	??_GPIO_PinRead
  6112  0C9C  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6113  0C9D  2CA0               	goto	u2384
  6114  0C9E                     u2385:	
  6115  0C9E  1003               	clrc
  6116  0C9F  0DF0               	rlf	??_GPIO_PinRead,f
  6117  0CA0                     u2384:	
  6118  0CA0  3EFF               	addlw	-1
  6119  0CA1  1D03               	skipz
  6120  0CA2  2C9E               	goto	u2385
  6121  0CA3  0870               	movf	??_GPIO_PinRead,w
  6122  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  6123  0CA5  1303               	bcf	3,6	;RP1=0, select bank0
  6124  0CA6  0507               	andwf	7,w	;volatile
  6125  0CA7  2CC3               	goto	L7
  6126  0CA8                     l1736:	
  6127                           ;gpio.c: 220: case 3:
  6128                           
  6129                           ;gpio.c: 216: break;
  6130                           
  6131                           
  6132                           ;gpio.c: 221: returnStatus = (((PORTD)&((1<<(enm_pinNumber))))!=0u);
  6133  0CA8  3001               	movlw	1
  6134  0CA9  00F0               	movwf	??_GPIO_PinRead
  6135  0CAA  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6136  0CAB  2CAE               	goto	u2414
  6137  0CAC                     u2415:	
  6138  0CAC  1003               	clrc
  6139  0CAD  0DF0               	rlf	??_GPIO_PinRead,f
  6140  0CAE                     u2414:	
  6141  0CAE  3EFF               	addlw	-1
  6142  0CAF  1D03               	skipz
  6143  0CB0  2CAC               	goto	u2415
  6144  0CB1  0870               	movf	??_GPIO_PinRead,w
  6145  0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  6146  0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  6147  0CB4  0508               	andwf	8,w	;volatile
  6148  0CB5  2CC3               	goto	L7
  6149  0CB6                     l1738:	
  6150                           ;gpio.c: 226: case 4:
  6151                           
  6152                           ;gpio.c: 222: break;
  6153                           
  6154                           
  6155                           ;gpio.c: 227: returnStatus = (((PORTE)&((1<<(enm_pinNumber))))!=0u);
  6156  0CB6  3001               	movlw	1
  6157  0CB7  00F0               	movwf	??_GPIO_PinRead
  6158  0CB8  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6159  0CB9  2CBC               	goto	u2444
  6160  0CBA                     u2445:	
  6161  0CBA  1003               	clrc
  6162  0CBB  0DF0               	rlf	??_GPIO_PinRead,f
  6163  0CBC                     u2444:	
  6164  0CBC  3EFF               	addlw	-1
  6165  0CBD  1D03               	skipz
  6166  0CBE  2CBA               	goto	u2445
  6167  0CBF  0870               	movf	??_GPIO_PinRead,w
  6168  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  6169  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  6170  0CC2  0509               	andwf	9,w	;volatile
  6171  0CC3                     L7:	
  6172  0CC3  1903               	btfsc	3,2
  6173  0CC4  2CC7               	goto	u2450
  6174  0CC5  3001               	movlw	1
  6175  0CC6  2CC8               	goto	u2460
  6176  0CC7                     u2450:	
  6177  0CC7  3000               	movlw	0
  6178  0CC8                     u2460:	
  6179  0CC8  00F1               	movwf	??_GPIO_PinRead+1
  6180  0CC9  0871               	movf	??_GPIO_PinRead+1,w
  6181  0CCA  00F3               	movwf	GPIO_PinRead@returnStatus
  6182                           
  6183                           ;gpio.c: 229: }
  6184                           
  6185                           ;gpio.c: 228: break;
  6186  0CCB  2CDD               	goto	l1744
  6187  0CCC                     l1742:	
  6188  0CCC  0872               	movf	GPIO_PinRead@var_portNumber_u8,w
  6189                           
  6190                           ; Switch size 1, requested type "space"
  6191                           ; Number of cases is 5, Range of values is 0 to 4
  6192                           ; switch strategies available:
  6193                           ; Name         Instructions Cycles
  6194                           ; simple_byte           16     9 (average)
  6195                           ; direct_byte           23     8 (fixed)
  6196                           ; jumptable            260     6 (fixed)
  6197                           ;	Chosen strategy is simple_byte
  6198  0CCD  3A00               	xorlw	0	; case 0
  6199  0CCE  1903               	skipnz
  6200  0CCF  2C7E               	goto	l1730
  6201  0CD0  3A01               	xorlw	1	; case 1
  6202  0CD1  1903               	skipnz
  6203  0CD2  2C8C               	goto	l1732
  6204  0CD3  3A03               	xorlw	3	; case 2
  6205  0CD4  1903               	skipnz
  6206  0CD5  2C9A               	goto	l1734
  6207  0CD6  3A01               	xorlw	1	; case 3
  6208  0CD7  1903               	skipnz
  6209  0CD8  2CA8               	goto	l1736
  6210  0CD9  3A07               	xorlw	7	; case 4
  6211  0CDA  1903               	skipnz
  6212  0CDB  2CB6               	goto	l1738
  6213  0CDC  2CDD               	goto	l1744
  6214  0CDD                     l1744:	
  6215                           
  6216                           ;gpio.c: 230: return returnStatus;
  6217  0CDD  0873               	movf	GPIO_PinRead@returnStatus,w
  6218  0CDE  0008               	return
  6219  0CDF                     __end_of_GPIO_PinRead:	
  6220                           
  6221                           	psect	text31
  6222  01F5                     __ptext31:	
  6223 ;; *************** function _GPIO_PinDirection *****************
  6224 ;; Defined at:
  6225 ;;		line 60 in file "../00-libfiles/gpio.c"
  6226 ;; Parameters:    Size  Location     Type
  6227 ;;  enm_pinNumbe    1    wreg     enum E1088
  6228 ;;  var_pinDirn_    1    0[COMMON] unsigned char 
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  6231 ;;  var_portNumb    1    3[COMMON] unsigned char 
  6232 ;; Return value:  Size  Location     Type
  6233 ;;                  1    wreg      void 
  6234 ;; Registers used:
  6235 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6241 ;;      Params:         1       0       0       0       0
  6242 ;;      Locals:         2       0       0       0       0
  6243 ;;      Temps:          2       0       0       0       0
  6244 ;;      Totals:         5       0       0       0       0
  6245 ;;Total ram usage:        5 bytes
  6246 ;; Hardware stack levels used:    1
  6247 ;; This function calls:
  6248 ;;		Nothing
  6249 ;; This function is called by:
  6250 ;;		_LCD_SetUp
  6251 ;;		_lcd_BusyCheck
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           
  6256                           ;psect for function _GPIO_PinDirection
  6257  01F5                     _GPIO_PinDirection:	
  6258                           
  6259                           ;incstack = 0
  6260                           ; Regs used in _GPIO_PinDirection: [wreg-fsr0h+status,2+status,0]
  6261                           ;GPIO_PinDirection@enm_pinNumber stored from wreg
  6262  01F5  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  6263                           
  6264                           ;gpio.c: 63: uint8_t var_portNumber_u8;
  6265                           ;gpio.c: 66: var_portNumber_u8 = (enm_pinNumber>>3);
  6266  01F6  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  6267  01F7  00F1               	movwf	??_GPIO_PinDirection
  6268  01F8  3003               	movlw	3
  6269  01F9                     u1985:	
  6270  01F9  1003               	clrc
  6271  01FA  0CF1               	rrf	??_GPIO_PinDirection,f
  6272  01FB  3EFF               	addlw	-1
  6273  01FC  1D03               	skipz
  6274  01FD  29F9               	goto	u1985
  6275  01FE  0871               	movf	??_GPIO_PinDirection,w
  6276  01FF  00F2               	movwf	??_GPIO_PinDirection+1
  6277  0200  0872               	movf	??_GPIO_PinDirection+1,w
  6278  0201  00F3               	movwf	GPIO_PinDirection@var_portNumber_u8
  6279                           
  6280                           ;gpio.c: 67: enm_pinNumber = enm_pinNumber & 0x07;
  6281  0202  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  6282  0203  3907               	andlw	7
  6283  0204  00F1               	movwf	??_GPIO_PinDirection
  6284  0205  0871               	movf	??_GPIO_PinDirection,w
  6285  0206  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  6286                           
  6287                           ;gpio.c: 71: switch(var_portNumber_u8)
  6288  0207  2ABC               	goto	l1676
  6289  0208                     l1644:	
  6290                           ;gpio.c: 72: {
  6291                           ;gpio.c: 74: case 0:
  6292                           
  6293                           
  6294                           ;gpio.c: 75: ((var_pinDirn_u8)? ((TRISA) |= (1<<(enm_pinNumber))): ((TRISA) &= ~(1<<(enm
      +                          _pinNumber))));
  6295  0208  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  6296  0209  1903               	btfsc	3,2
  6297  020A  2A1B               	goto	l1648
  6298  020B  3001               	movlw	1
  6299  020C  00F1               	movwf	??_GPIO_PinDirection
  6300  020D  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6301  020E  2A11               	goto	u2004
  6302  020F                     u2005:	
  6303  020F  1003               	clrc
  6304  0210  0DF1               	rlf	??_GPIO_PinDirection,f
  6305  0211                     u2004:	
  6306  0211  3EFF               	addlw	-1
  6307  0212  1D03               	skipz
  6308  0213  2A0F               	goto	u2005
  6309  0214  0871               	movf	??_GPIO_PinDirection,w
  6310  0215  00F2               	movwf	??_GPIO_PinDirection+1
  6311  0216  0872               	movf	??_GPIO_PinDirection+1,w
  6312  0217  1683               	bsf	3,5	;RP0=1, select bank1
  6313  0218  1303               	bcf	3,6	;RP1=0, select bank1
  6314  0219  0485               	iorwf	5,f	;volatile
  6315  021A  0008               	return
  6316  021B                     l1648:	
  6317  021B  3001               	movlw	1
  6318  021C  00F1               	movwf	??_GPIO_PinDirection
  6319  021D  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6320  021E  2A21               	goto	u2014
  6321  021F                     u2015:	
  6322  021F  1003               	clrc
  6323  0220  0DF1               	rlf	??_GPIO_PinDirection,f
  6324  0221                     u2014:	
  6325  0221  3EFF               	addlw	-1
  6326  0222  1D03               	skipz
  6327  0223  2A1F               	goto	u2015
  6328  0224  0871               	movf	??_GPIO_PinDirection,w
  6329  0225  3AFF               	xorlw	255
  6330  0226  00F2               	movwf	??_GPIO_PinDirection+1
  6331  0227  0872               	movf	??_GPIO_PinDirection+1,w
  6332  0228  1683               	bsf	3,5	;RP0=1, select bank1
  6333  0229  1303               	bcf	3,6	;RP1=0, select bank1
  6334  022A  0585               	andwf	5,f	;volatile
  6335                           
  6336                           ;gpio.c: 76: break;
  6337  022B  0008               	return
  6338  022C                     l1650:	
  6339                           ;gpio.c: 80: case 1:
  6340                           
  6341                           
  6342                           ;gpio.c: 81: ((var_pinDirn_u8)? ((TRISB) |= (1<<(enm_pinNumber))): ((TRISB) &= ~(1<<(enm
      +                          _pinNumber))));
  6343  022C  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  6344  022D  1903               	btfsc	3,2
  6345  022E  2A3F               	goto	l1654
  6346  022F  3001               	movlw	1
  6347  0230  00F1               	movwf	??_GPIO_PinDirection
  6348  0231  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6349  0232  2A35               	goto	u2034
  6350  0233                     u2035:	
  6351  0233  1003               	clrc
  6352  0234  0DF1               	rlf	??_GPIO_PinDirection,f
  6353  0235                     u2034:	
  6354  0235  3EFF               	addlw	-1
  6355  0236  1D03               	skipz
  6356  0237  2A33               	goto	u2035
  6357  0238  0871               	movf	??_GPIO_PinDirection,w
  6358  0239  00F2               	movwf	??_GPIO_PinDirection+1
  6359  023A  0872               	movf	??_GPIO_PinDirection+1,w
  6360  023B  1683               	bsf	3,5	;RP0=1, select bank1
  6361  023C  1303               	bcf	3,6	;RP1=0, select bank1
  6362  023D  0486               	iorwf	6,f	;volatile
  6363  023E  0008               	return
  6364  023F                     l1654:	
  6365  023F  3001               	movlw	1
  6366  0240  00F1               	movwf	??_GPIO_PinDirection
  6367  0241  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6368  0242  2A45               	goto	u2044
  6369  0243                     u2045:	
  6370  0243  1003               	clrc
  6371  0244  0DF1               	rlf	??_GPIO_PinDirection,f
  6372  0245                     u2044:	
  6373  0245  3EFF               	addlw	-1
  6374  0246  1D03               	skipz
  6375  0247  2A43               	goto	u2045
  6376  0248  0871               	movf	??_GPIO_PinDirection,w
  6377  0249  3AFF               	xorlw	255
  6378  024A  00F2               	movwf	??_GPIO_PinDirection+1
  6379  024B  0872               	movf	??_GPIO_PinDirection+1,w
  6380  024C  1683               	bsf	3,5	;RP0=1, select bank1
  6381  024D  1303               	bcf	3,6	;RP1=0, select bank1
  6382  024E  0586               	andwf	6,f	;volatile
  6383                           
  6384                           ;gpio.c: 82: break;
  6385  024F  0008               	return
  6386  0250                     l1656:	
  6387                           ;gpio.c: 86: case 2:
  6388                           
  6389                           
  6390                           ;gpio.c: 87: ((var_pinDirn_u8)? ((TRISC) |= (1<<(enm_pinNumber))): ((TRISC) &= ~(1<<(enm
      +                          _pinNumber))));
  6391  0250  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  6392  0251  1903               	btfsc	3,2
  6393  0252  2A63               	goto	l1660
  6394  0253  3001               	movlw	1
  6395  0254  00F1               	movwf	??_GPIO_PinDirection
  6396  0255  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6397  0256  2A59               	goto	u2064
  6398  0257                     u2065:	
  6399  0257  1003               	clrc
  6400  0258  0DF1               	rlf	??_GPIO_PinDirection,f
  6401  0259                     u2064:	
  6402  0259  3EFF               	addlw	-1
  6403  025A  1D03               	skipz
  6404  025B  2A57               	goto	u2065
  6405  025C  0871               	movf	??_GPIO_PinDirection,w
  6406  025D  00F2               	movwf	??_GPIO_PinDirection+1
  6407  025E  0872               	movf	??_GPIO_PinDirection+1,w
  6408  025F  1683               	bsf	3,5	;RP0=1, select bank1
  6409  0260  1303               	bcf	3,6	;RP1=0, select bank1
  6410  0261  0487               	iorwf	7,f	;volatile
  6411  0262  0008               	return
  6412  0263                     l1660:	
  6413  0263  3001               	movlw	1
  6414  0264  00F1               	movwf	??_GPIO_PinDirection
  6415  0265  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6416  0266  2A69               	goto	u2074
  6417  0267                     u2075:	
  6418  0267  1003               	clrc
  6419  0268  0DF1               	rlf	??_GPIO_PinDirection,f
  6420  0269                     u2074:	
  6421  0269  3EFF               	addlw	-1
  6422  026A  1D03               	skipz
  6423  026B  2A67               	goto	u2075
  6424  026C  0871               	movf	??_GPIO_PinDirection,w
  6425  026D  3AFF               	xorlw	255
  6426  026E  00F2               	movwf	??_GPIO_PinDirection+1
  6427  026F  0872               	movf	??_GPIO_PinDirection+1,w
  6428  0270  1683               	bsf	3,5	;RP0=1, select bank1
  6429  0271  1303               	bcf	3,6	;RP1=0, select bank1
  6430  0272  0587               	andwf	7,f	;volatile
  6431                           
  6432                           ;gpio.c: 88: break;
  6433  0273  0008               	return
  6434  0274                     l1662:	
  6435                           ;gpio.c: 92: case 3:
  6436                           
  6437                           
  6438                           ;gpio.c: 93: ((var_pinDirn_u8)? ((TRISD) |= (1<<(enm_pinNumber))): ((TRISD) &= ~(1<<(enm
      +                          _pinNumber))));
  6439  0274  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  6440  0275  1903               	btfsc	3,2
  6441  0276  2A87               	goto	l1666
  6442  0277  3001               	movlw	1
  6443  0278  00F1               	movwf	??_GPIO_PinDirection
  6444  0279  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6445  027A  2A7D               	goto	u2094
  6446  027B                     u2095:	
  6447  027B  1003               	clrc
  6448  027C  0DF1               	rlf	??_GPIO_PinDirection,f
  6449  027D                     u2094:	
  6450  027D  3EFF               	addlw	-1
  6451  027E  1D03               	skipz
  6452  027F  2A7B               	goto	u2095
  6453  0280  0871               	movf	??_GPIO_PinDirection,w
  6454  0281  00F2               	movwf	??_GPIO_PinDirection+1
  6455  0282  0872               	movf	??_GPIO_PinDirection+1,w
  6456  0283  1683               	bsf	3,5	;RP0=1, select bank1
  6457  0284  1303               	bcf	3,6	;RP1=0, select bank1
  6458  0285  0488               	iorwf	8,f	;volatile
  6459  0286  0008               	return
  6460  0287                     l1666:	
  6461  0287  3001               	movlw	1
  6462  0288  00F1               	movwf	??_GPIO_PinDirection
  6463  0289  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6464  028A  2A8D               	goto	u2104
  6465  028B                     u2105:	
  6466  028B  1003               	clrc
  6467  028C  0DF1               	rlf	??_GPIO_PinDirection,f
  6468  028D                     u2104:	
  6469  028D  3EFF               	addlw	-1
  6470  028E  1D03               	skipz
  6471  028F  2A8B               	goto	u2105
  6472  0290  0871               	movf	??_GPIO_PinDirection,w
  6473  0291  3AFF               	xorlw	255
  6474  0292  00F2               	movwf	??_GPIO_PinDirection+1
  6475  0293  0872               	movf	??_GPIO_PinDirection+1,w
  6476  0294  1683               	bsf	3,5	;RP0=1, select bank1
  6477  0295  1303               	bcf	3,6	;RP1=0, select bank1
  6478  0296  0588               	andwf	8,f	;volatile
  6479                           
  6480                           ;gpio.c: 94: break;
  6481  0297  0008               	return
  6482  0298                     l1668:	
  6483                           ;gpio.c: 97: case 4:
  6484                           
  6485                           
  6486                           ;gpio.c: 98: ((var_pinDirn_u8)? ((TRISE) |= (1<<(enm_pinNumber))): ((TRISE) &= ~(1<<(enm
      +                          _pinNumber))));
  6487  0298  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  6488  0299  1903               	btfsc	3,2
  6489  029A  2AAB               	goto	l1672
  6490  029B  3001               	movlw	1
  6491  029C  00F1               	movwf	??_GPIO_PinDirection
  6492  029D  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6493  029E  2AA1               	goto	u2124
  6494  029F                     u2125:	
  6495  029F  1003               	clrc
  6496  02A0  0DF1               	rlf	??_GPIO_PinDirection,f
  6497  02A1                     u2124:	
  6498  02A1  3EFF               	addlw	-1
  6499  02A2  1D03               	skipz
  6500  02A3  2A9F               	goto	u2125
  6501  02A4  0871               	movf	??_GPIO_PinDirection,w
  6502  02A5  00F2               	movwf	??_GPIO_PinDirection+1
  6503  02A6  0872               	movf	??_GPIO_PinDirection+1,w
  6504  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  6505  02A8  1303               	bcf	3,6	;RP1=0, select bank1
  6506  02A9  0489               	iorwf	9,f	;volatile
  6507  02AA  0008               	return
  6508  02AB                     l1672:	
  6509  02AB  3001               	movlw	1
  6510  02AC  00F1               	movwf	??_GPIO_PinDirection
  6511  02AD  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6512  02AE  2AB1               	goto	u2134
  6513  02AF                     u2135:	
  6514  02AF  1003               	clrc
  6515  02B0  0DF1               	rlf	??_GPIO_PinDirection,f
  6516  02B1                     u2134:	
  6517  02B1  3EFF               	addlw	-1
  6518  02B2  1D03               	skipz
  6519  02B3  2AAF               	goto	u2135
  6520  02B4  0871               	movf	??_GPIO_PinDirection,w
  6521  02B5  3AFF               	xorlw	255
  6522  02B6  00F2               	movwf	??_GPIO_PinDirection+1
  6523  02B7  0872               	movf	??_GPIO_PinDirection+1,w
  6524  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  6525  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  6526  02BA  0589               	andwf	9,f	;volatile
  6527                           
  6528                           ;gpio.c: 101: }
  6529                           
  6530                           ;gpio.c: 99: break;
  6531  02BB  0008               	return
  6532  02BC                     l1676:	
  6533  02BC  0873               	movf	GPIO_PinDirection@var_portNumber_u8,w
  6534                           
  6535                           ; Switch size 1, requested type "space"
  6536                           ; Number of cases is 5, Range of values is 0 to 4
  6537                           ; switch strategies available:
  6538                           ; Name         Instructions Cycles
  6539                           ; simple_byte           16     9 (average)
  6540                           ; direct_byte           23     8 (fixed)
  6541                           ; jumptable            260     6 (fixed)
  6542                           ;	Chosen strategy is simple_byte
  6543  02BD  3A00               	xorlw	0	; case 0
  6544  02BE  1903               	skipnz
  6545  02BF  2A08               	goto	l1644
  6546  02C0  3A01               	xorlw	1	; case 1
  6547  02C1  1903               	skipnz
  6548  02C2  2A2C               	goto	l1650
  6549  02C3  3A03               	xorlw	3	; case 2
  6550  02C4  1903               	skipnz
  6551  02C5  2A50               	goto	l1656
  6552  02C6  3A01               	xorlw	1	; case 3
  6553  02C7  1903               	skipnz
  6554  02C8  2A74               	goto	l1662
  6555  02C9  3A07               	xorlw	7	; case 4
  6556  02CA  1903               	skipnz
  6557  02CB  2A98               	goto	l1668
  6558  02CC  2ACD               	goto	l298
  6559  02CD                     l298:	
  6560  02CD  0008               	return
  6561  02CE                     __end_of_GPIO_PinDirection:	
  6562                           
  6563                           	psect	text32
  6564  091D                     __ptext32:	
  6565 ;; *************** function _DELAY_ms *****************
  6566 ;; Defined at:
  6567 ;;		line 75 in file "../00-libfiles/delay.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;  ms_count        2    2[COMMON] unsigned int 
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;		None
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  1    wreg      void 
  6574 ;; Registers used:
  6575 ;;		wreg, status,2, status,0, pclath, cstack
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6581 ;;      Params:         2       0       0       0       0
  6582 ;;      Locals:         0       0       0       0       0
  6583 ;;      Temps:          0       0       0       0       0
  6584 ;;      Totals:         2       0       0       0       0
  6585 ;;Total ram usage:        2 bytes
  6586 ;; Hardware stack levels used:    1
  6587 ;; Hardware stack levels required when called:    1
  6588 ;; This function calls:
  6589 ;;		_DELAY_us
  6590 ;; This function is called by:
  6591 ;;		_LCD_Init
  6592 ;;		_lcd_BusyCheck
  6593 ;;		_lcd_Reset
  6594 ;;		_LCD_ScrollMessage
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           
  6599                           ;psect for function _DELAY_ms
  6600  091D                     _DELAY_ms:	
  6601  091D                     l1684:	
  6602                           ;delay.c: 77: while (ms_count != 0)
  6603                           
  6604                           ;incstack = 0
  6605                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  6606                           
  6607  091D  0872               	movf	DELAY_ms@ms_count,w
  6608  091E  0473               	iorwf	DELAY_ms@ms_count+1,w
  6609  091F  1903               	btfsc	3,2
  6610  0920  0008               	return
  6611                           
  6612                           ;delay.c: 78: {
  6613                           ;delay.c: 79: DELAY_us(300u);
  6614  0921  302C               	movlw	44
  6615  0922  00F0               	movwf	DELAY_us@us_count
  6616  0923  3001               	movlw	1
  6617  0924  00F1               	movwf	DELAY_us@us_count+1
  6618  0925  120A  158A  20F4  120A  158A  	fcall	_DELAY_us
  6619                           
  6620                           ;delay.c: 80: ms_count--;
  6621  092A  3001               	movlw	1
  6622  092B  02F2               	subwf	DELAY_ms@ms_count,f
  6623  092C  3000               	movlw	0
  6624  092D  1C03               	skipc
  6625  092E  03F3               	decf	DELAY_ms@ms_count+1,f
  6626  092F  02F3               	subwf	DELAY_ms@ms_count+1,f
  6627  0930  291D               	goto	l1684
  6628  0931                     __end_of_DELAY_ms:	
  6629                           
  6630                           	psect	text33
  6631  08E2                     __ptext33:	
  6632 ;; *************** function _ADC_Init *****************
  6633 ;; Defined at:
  6634 ;;		line 54 in file "../00-libfiles/adc.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;		None
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;		None
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  1    wreg      void 
  6641 ;; Registers used:
  6642 ;;		wreg, status,2
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6648 ;;      Params:         0       0       0       0       0
  6649 ;;      Locals:         0       0       0       0       0
  6650 ;;      Temps:          0       0       0       0       0
  6651 ;;      Totals:         0       0       0       0       0
  6652 ;;Total ram usage:        0 bytes
  6653 ;; Hardware stack levels used:    1
  6654 ;; This function calls:
  6655 ;;		Nothing
  6656 ;; This function is called by:
  6657 ;;		_main
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           
  6662                           ;psect for function _ADC_Init
  6663  08E2                     _ADC_Init:	
  6664                           
  6665                           ;adc.c: 56: ADCON0=0x00;
  6666                           
  6667                           ;incstack = 0
  6668                           ; Regs used in _ADC_Init: [wreg+status,2]
  6669  08E2  1283               	bcf	3,5	;RP0=0, select bank0
  6670  08E3  1303               	bcf	3,6	;RP1=0, select bank0
  6671  08E4  019F               	clrf	31	;volatile
  6672                           
  6673                           ;adc.c: 57: ADCON1=0x80;
  6674  08E5  3080               	movlw	128
  6675  08E6  1683               	bsf	3,5	;RP0=1, select bank1
  6676  08E7  1303               	bcf	3,6	;RP1=0, select bank1
  6677  08E8  009F               	movwf	31	;volatile
  6678  08E9  0008               	return
  6679  08EA                     __end_of_ADC_Init:	
  6680                           
  6681                           	psect	text34
  6682  09BB                     __ptext34:	
  6683 ;; *************** function _ADC_GetAdcValue *****************
  6684 ;; Defined at:
  6685 ;;		line 76 in file "../00-libfiles/adc.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  var_adcChann    1    wreg     unsigned char 
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;  var_adcChann    1    5[COMMON] unsigned char 
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  2    2[COMMON] unsigned int 
  6692 ;; Registers used:
  6693 ;;		wreg, status,2, status,0, pclath, cstack
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6699 ;;      Params:         2       0       0       0       0
  6700 ;;      Locals:         1       0       0       0       0
  6701 ;;      Temps:          1       0       0       0       0
  6702 ;;      Totals:         4       0       0       0       0
  6703 ;;Total ram usage:        4 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:    1
  6706 ;; This function calls:
  6707 ;;		_DELAY_us
  6708 ;; This function is called by:
  6709 ;;		_main
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           
  6714                           ;psect for function _ADC_GetAdcValue
  6715  09BB                     _ADC_GetAdcValue:	
  6716                           
  6717                           ;incstack = 0
  6718                           ; Regs used in _ADC_GetAdcValue: [wreg+status,2+status,0+pclath+cstack]
  6719                           ;ADC_GetAdcValue@var_adcChannel_u8 stored from wreg
  6720  09BB  00F5               	movwf	ADC_GetAdcValue@var_adcChannel_u8
  6721                           
  6722                           ;adc.c: 79: ADCON0= (var_adcChannel_u8<<3);
  6723  09BC  0875               	movf	ADC_GetAdcValue@var_adcChannel_u8,w
  6724  09BD  00F4               	movwf	??_ADC_GetAdcValue
  6725  09BE  3002               	movlw	2
  6726  09BF                     u3775:	
  6727  09BF  1003               	clrc
  6728  09C0  0DF4               	rlf	??_ADC_GetAdcValue,f
  6729  09C1  3EFF               	addlw	-1
  6730  09C2  1D03               	skipz
  6731  09C3  29BF               	goto	u3775
  6732  09C4  1003               	clrc
  6733  09C5  0D74               	rlf	??_ADC_GetAdcValue,w
  6734  09C6  1283               	bcf	3,5	;RP0=0, select bank0
  6735  09C7  1303               	bcf	3,6	;RP1=0, select bank0
  6736  09C8  009F               	movwf	31	;volatile
  6737                           
  6738                           ;adc.c: 80: ADON = 1;
  6739  09C9  141F               	bsf	31,0	;volatile
  6740                           
  6741                           ;adc.c: 81: DELAY_us(10);
  6742  09CA  300A               	movlw	10
  6743  09CB  00F0               	movwf	DELAY_us@us_count
  6744  09CC  3000               	movlw	0
  6745  09CD  00F1               	movwf	DELAY_us@us_count+1
  6746  09CE  120A  158A  20F4  120A  158A  	fcall	_DELAY_us
  6747                           
  6748                           ;adc.c: 83: GO=1;
  6749  09D3  1283               	bcf	3,5	;RP0=0, select bank0
  6750  09D4  1303               	bcf	3,6	;RP1=0, select bank0
  6751  09D5  151F               	bsf	31,2	;volatile
  6752  09D6                     l227:	
  6753                           ;adc.c: 84: while(GO_DONE==1);
  6754                           
  6755  09D6  191F               	btfsc	31,2	;volatile
  6756  09D7  29D6               	goto	l227
  6757                           
  6758                           ;adc.c: 87: return((ADRESH<<8) + ADRESL);
  6759  09D8  081E               	movf	30,w	;volatile
  6760  09D9  00F3               	movwf	?_ADC_GetAdcValue+1
  6761  09DA  1683               	bsf	3,5	;RP0=1, select bank1
  6762  09DB  1303               	bcf	3,6	;RP1=0, select bank1
  6763  09DC  081E               	movf	30,w	;volatile
  6764  09DD  00F2               	movwf	?_ADC_GetAdcValue
  6765  09DE  0008               	return
  6766  09DF                     __end_of_ADC_GetAdcValue:	
  6767                           
  6768                           	psect	text35
  6769  08F4                     __ptext35:	
  6770 ;; *************** function _DELAY_us *****************
  6771 ;; Defined at:
  6772 ;;		line 56 in file "../00-libfiles/delay.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;  us_count        2    0[COMMON] unsigned int 
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;		None
  6777 ;; Return value:  Size  Location     Type
  6778 ;;                  1    wreg      void 
  6779 ;; Registers used:
  6780 ;;		wreg, status,2, status,0
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/0
  6783 ;;		On exit  : 0/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6786 ;;      Params:         2       0       0       0       0
  6787 ;;      Locals:         0       0       0       0       0
  6788 ;;      Temps:          0       0       0       0       0
  6789 ;;      Totals:         2       0       0       0       0
  6790 ;;Total ram usage:        2 bytes
  6791 ;; Hardware stack levels used:    1
  6792 ;; This function calls:
  6793 ;;		Nothing
  6794 ;; This function is called by:
  6795 ;;		_lcd_BusyCheck
  6796 ;;		_lcd_Reset
  6797 ;;		_lcd_SendCmdSignals
  6798 ;;		_lcd_SendDataSignals
  6799 ;;		_DELAY_ms
  6800 ;;		_ADC_GetAdcValue
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804                           
  6805                           ;psect for function _DELAY_us
  6806  08F4                     _DELAY_us:	
  6807  08F4                     l1638:	
  6808                           ;delay.c: 58: while (us_count != 0)
  6809                           
  6810                           ;incstack = 0
  6811                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  6812                           
  6813  08F4  0870               	movf	DELAY_us@us_count,w
  6814  08F5  0471               	iorwf	DELAY_us@us_count+1,w
  6815  08F6  1903               	btfsc	3,2
  6816  08F7  0008               	return
  6817                           
  6818                           ;delay.c: 59: {
  6819                           ;delay.c: 60: us_count--;
  6820  08F8  3001               	movlw	1
  6821  08F9  02F0               	subwf	DELAY_us@us_count,f
  6822  08FA  3000               	movlw	0
  6823  08FB  1C03               	skipc
  6824  08FC  03F1               	decf	DELAY_us@us_count+1,f
  6825  08FD  02F1               	subwf	DELAY_us@us_count+1,f
  6826  08FE  28F4               	goto	l1638
  6827  08FF                     __end_of_DELAY_us:	
  6828  007E                     btemp	set	126	;btemp
  6829  007E                     wtemp	set	126
  6830  007E                     wtemp0	set	126
  6831  0080                     wtemp1	set	128
  6832  0082                     wtemp2	set	130
  6833  0084                     wtemp3	set	132
  6834  0086                     wtemp4	set	134
  6835  0088                     wtemp5	set	136
  6836  007F                     wtemp6	set	127
  6837  007E                     ttemp	set	126
  6838  007E                     ttemp0	set	126
  6839  0081                     ttemp1	set	129
  6840  0084                     ttemp2	set	132
  6841  0087                     ttemp3	set	135
  6842  007F                     ttemp4	set	127
  6843  007E                     ltemp	set	126
  6844  007E                     ltemp0	set	126
  6845  0082                     ltemp1	set	130
  6846  0086                     ltemp2	set	134
  6847  0080                     ltemp3	set	128


Data Sizes:
    Strings     26
    Constant    0
    Data        4
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      78
    BANK1            80     10      28
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Printf@str	PTR unsigned char  size(1) Largest target is 0

    LCD_Printf@argList	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), 

    LCD_Printf@ptr	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), 

    LCD_Printf@argp	PTR void [1] size(1) Largest target is 1
		 -> ?_LCD_Printf(BANK0[1]), 

    LCD_DisplayString@ptr_stringPointer_u8	PTR const unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _LCD_SetUp->_GPIO_PinDirection
    _LCD_Printf->_LCD_DisplayString
    _LCD_DisplayString->_LCD_DisplayChar
    _LCD_DisplayFloatNumber->___ftmul
    _LCD_DisplayFloatNumber->___lltoft
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftneg->___lltoft
    ___ftmul->___ftpack
    ___ftadd->___lltoft
    _LCD_DisplayNumber->___lldiv
    ___bmul->___lldiv
    _LCD_DisplayChar->_LCD_GoToNextLine
    _lcd_DataWrite->_lcd_BusyCheck
    _lcd_DataWrite->_lcd_SendHigherNibble
    _lcd_DataWrite->_lcd_SendLowerNibble
    _lcd_SendDataSignals->_GPIO_PinWrite
    _LCD_GoToNextLine->_LCD_CmdWrite
    _lcd_Reset->_lcd_SendHigherNibble
    _LCD_Clear->_LCD_GoToLine
    _LCD_GoToLine->_LCD_CmdWrite
    _LCD_CmdWrite->_lcd_BusyCheck
    _LCD_CmdWrite->_lcd_SendHigherNibble
    _LCD_CmdWrite->_lcd_SendLowerNibble
    _lcd_SendLowerNibble->_GPIO_PinWrite
    _lcd_SendHigherNibble->_GPIO_PinWrite
    _lcd_SendCmdSignals->_GPIO_PinWrite
    _lcd_BusyCheck->_GPIO_PinDirection
    _lcd_BusyCheck->_GPIO_PinRead
    _lcd_BusyCheck->_GPIO_PinWrite
    _DELAY_ms->_DELAY_us
    _ADC_GetAdcValue->_DELAY_us

Critical Paths under _main in BANK0

    _main->_LCD_Printf
    _LCD_Printf->_LCD_DisplayFloatNumber
    _LCD_DisplayFloatNumber->_LCD_DisplayNumber
    ___fttol->___ftmul
    ___ftadd->___ftneg
    _LCD_DisplayNumber->___bmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0  165570
                                             71 BANK0      5     5      0
                                              0 BANK1     10    10      0
                    _ADC_GetAdcValue
                           _ADC_Init
                       _LCD_GoToLine
                           _LCD_Init
                         _LCD_Printf
                          _LCD_SetUp
                           ___awtoft
                            ___ftdiv
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2132
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    1890
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _LCD_SetUp                                           12     2     10    2189
                                              5 COMMON     2     2      0
                                              0 BANK0     10     0     10
                  _GPIO_PinDirection
 ---------------------------------------------------------------------------------
 (1) _LCD_Printf                                          28    23      5  112698
                                             43 BANK0     28    23      5
                    _LCD_DisplayChar
             _LCD_DisplayFloatNumber
                  _LCD_DisplayNumber
                  _LCD_DisplayString
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayString                                    2     2      0   19918
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                    _LCD_DisplayChar
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayFloatNumber                               8     5      3   49440
                                             35 BANK0      8     5      3
                    _LCD_DisplayChar
                  _LCD_DisplayNumber
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    1868
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     358
                                             10 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                              0 BANK0      3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2178
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2772
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayNumber                                   31    26      5   22132
                                              4 BANK0     31    26      5
                    _LCD_DisplayChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_DisplayChar                                      2     2      0   19846
                                             11 COMMON     2     2      0
                   _LCD_GoToNextLine
                      _lcd_DataWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_DataWrite                                        3     3      0    9890
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                _lcd_SendDataSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendDataSignals                                  0     0      0    2170
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _LCD_GoToNextLine                                     1     1      0    9890
                                             10 COMMON     1     1      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     2      1   36009
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                           _DELAY_ms
                          _LCD_Clear
                       _LCD_CmdWrite
                          _lcd_Reset
 ---------------------------------------------------------------------------------
 (2) _lcd_Reset                                            0     0      0    5269
                           _DELAY_ms
                           _DELAY_us
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0   19846
                       _LCD_CmdWrite
                       _LCD_GoToLine
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToLine                                         2     2      0    9956
                                             10 COMMON     2     2      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (5) _LCD_CmdWrite                                         3     3      0    9890
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendLowerNibble                                  2     2      0    1652
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (5) _lcd_SendHigherNibble                                 2     2      0    1652
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (6) _lcd_SendCmdSignals                                   0     0      0    2170
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (5) _lcd_BusyCheck                                        2     2      0    4327
                                              5 COMMON     2     2      0
                           _DELAY_ms
                           _DELAY_us
                  _GPIO_PinDirection
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (6) _GPIO_PinWrite                                        5     4      1    1564
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (6) _GPIO_PinRead                                         5     5      0     206
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinDirection                                    5     4      1    1087
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (6) _DELAY_ms                                             2     0      2     841
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetAdcValue                                      4     2      2     628
                                              2 COMMON     4     2      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (6) _DELAY_us                                             2     0      2     606
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetAdcValue
     _DELAY_us
   _ADC_Init
   _LCD_GoToLine
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
   _LCD_Init
     _DELAY_ms
       _DELAY_us
     _LCD_Clear
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
       _LCD_GoToLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
     _lcd_Reset
       _DELAY_ms
         _DELAY_us
       _DELAY_us
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
   _LCD_Printf
     _LCD_DisplayChar
       _LCD_GoToNextLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _lcd_DataWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendDataSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
     _LCD_DisplayFloatNumber
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _LCD_DisplayNumber
         _LCD_DisplayChar
           _LCD_GoToNextLine
             _LCD_CmdWrite
               _lcd_BusyCheck
                 _DELAY_ms
                   _DELAY_us
                 _DELAY_us
                 _GPIO_PinDirection
                 _GPIO_PinRead
                 _GPIO_PinWrite
               _lcd_SendCmdSignals
                 _DELAY_us
                 _GPIO_PinWrite
               _lcd_SendHigherNibble
                 _GPIO_PinWrite
               _lcd_SendLowerNibble
                 _GPIO_PinWrite
           _lcd_DataWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendDataSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       ___ftadd
         ___ftneg (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
     _LCD_DisplayNumber
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       ___bmul
         ___lldiv (ARG)
       ___lldiv
     _LCD_DisplayString
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     ___bmul
       ___lldiv (ARG)
   _LCD_SetUp
     _GPIO_PinDirection
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      A      1C       7       35.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4C      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      78      12        0.0%
ABS                  0      0      78       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Feb 20 20:52:16 2016

                    _LCD_DisplayFloatNumber 0DF9                                           pc 0002  
                            ___bmul@product 0022                                 __CFG_CP$OFF 0000  
                             ?_LCD_CmdWrite 0070                                          l54 0B96  
                                        _GO 00FA                                 ?_LCD_Printf 004B  
                                        fsr 0004                               ?_LCD_GoToLine 0070  
                              ___ftadd@exp1 002F                                ___ftadd@exp2 002E  
                               __CFG_LVP$ON 0000                                ___ftadd@sign 002D  
                                       l227 09D6                                         l149 066D  
                                       l245 0EFF                                         l174 0CFF  
                                       l328 03A6                                         l614 0541  
                                       l298 02CD                                         l590 0C49  
                                       l591 0C51                                         l583 0C34  
                                       l674 0DDF                                __CFG_CPD$OFF 0000  
                                       fsr0 0004                                         indf 0000  
                              __CFG_FOSC$HS 0000                     __end_of_ADC_GetAdcValue 09DF  
                   __end_of_LCD_DisplayChar 099A                                ___ftdiv@cntr 002A  
                              ___ftdiv@sign 002F                                        l2000 0507  
                                      l2002 0513                                        l2012 0531  
                                      l2004 0518                                        l2100 0D85  
                                      l2022 0565                                        l2014 053D  
                                      l2006 051C                                        l2032 0588  
                                      l2120 0DC7                                        l2018 0553  
                                      l2042 006B                                        l2060 00C0  
                                      l2132 0DF0                                        l2140 09E3  
                                      l2300 06C8                                        l2204 01B9  
                                      l2222 0B74                                        l2126 0DD4  
                                      l2118 0DB7                                        l2142 09F5  
                                      l2072 00E8                                        l2064 00D0  
                                      l2048 0081                                        l2128 0DE2  
                                      l2320 0723                                        l2312 070E  
                                      l2330 074F                                        l2322 0734  
                                      l2306 06E7                                        l2410 0FBB  
                                      l1700 0318                                        l2228 0B85  
                                      l2076 00F8                                        l2172 0963  
                                      l2332 0762                                        l2260 0609  
                                      l1702 0329                                        l2254 05DC  
                                      l2350 07C7                                        l1712 0360  
                                      l2344 0793                                        l2352 07CD  
                                      l2192 0188                                        l1650 022C  
                                      l1730 0C7E                                        l1714 0371  
                                      l1706 033C                                        l1722 0395  
                                      l2338 077F                                        l2266 0615  
                                      l2258 0604                                        l2354 05AD  
                                      l2194 018F                                        l2418 0FDA  
                                      l1660 0263                                        l1644 0208  
                                      l1732 0C8C                                        l1708 034D  
                                      l1900 0BE8                                        l2276 0630  
                                      l2348 0795                                        l2380 09A4  
                                      l1638 08F4                                        l1662 0274  
                                      l1654 023F                                        l1734 0C9A  
                                      l1742 0CCC                                        l1718 0384  
                                      l1822 0AC5                                        l1830 0986  
                                      l2294 06A1                                        l2278 0646  
                                      l2390 0F60                                        l1672 02AB  
                                      l1656 0250                                        l1648 021B  
                                      l1736 0CA8                                        l1744 0CDD  
                                      l1832 098B                                        l1840 090E  
                                      l1904 0BF5                                        l2288 0682  
                                      l1666 0287                                        l1738 0CB6  
                                      l1690 02E1                                        l1770 0D63  
                                      l1818 0AAD                                        l1922 03B0  
                                      l1930 03F2                                        l1684 091D  
                                      l1668 0298                                        l1676 02BC  
                                      l1844 0914                                        l1860 0C0D  
                                      l2396 0F76                                        l1694 02F4  
                                      l1766 0D58                                        l1950 046B  
                                      l1942 045F                                        l1934 03FD  
                                      l1870 0C39                                        l1862 0C19  
                                      l1696 0305                                        l1792 0A90  
                                      l1952 0400                                        l1928 03EE  
                                      l1872 0C43                                        l1864 0C1E  
                                      l1856 0C06                                        l1890 0BB0  
                                      l1954 0470                                        l1788 0A78  
                                      l1892 0BC0                                        l1964 0495  
                                      l1972 04C2                                        l1958 0480  
                                      l1982 04D8                                        l1976 04C9  
                                      l1994 04F2                                        _ADON 00F8  
                                      STR_1 0806                                        u2004 0211  
                                      u2005 020F                                        u2014 0221  
                                      u2015 021F                                        u2104 028D  
                                      u2105 028B                                        u2034 0235  
                                      u2035 0233                                        u2124 02A1  
                                      u2044 0245                                        u2204 030E  
                                      u2125 029F                                        u2045 0243  
                                      u2205 030C                                        u2134 02B1  
                                      u2214 031E                                        u2135 02AF  
                                      u2215 031C                                        u2064 0259  
                                      u2304 038A                                        u2065 0257  
                                      u2305 0388                                        u2074 0269  
                                      u2234 0332                                        u2075 0267  
                                      u2315 0C6F                                        u2235 0330  
                                      u2155 02D2                                        u2324 0C84  
                                      u2244 0342                                        u2500 0B14  
                                      u2325 0C82                                        u2245 0340  
                                      u3205 0508                                        u2094 027D  
                                      u2414 0CAE                                        u2174 02EA  
                                      u2510 0B15                                        u2095 027B  
                                      u2415 0CAC                                        u2175 02E8  
                                      u2264 0356                                        u2184 02FA  
                                      u2600 0AE4                                        u2520 0B24  
                                      u2265 0354                                        u2185 02F8  
                                      u2450 0CC7                                        u2354 0C92  
                                      u2274 0366                                        u2610 0AE5  
                                      u2530 0B25                                        u2355 0C90  
                                      u2275 0364                                        u3235 051D  
                                      u2460 0CC8                                        u2444 0CBC  
                                      u2620 0AF4                                        u2540 0B34  
                                      u2445 0CBA                                        u2294 037A  
                                      u2630 0AF5                                        u2550 0B35  
                                      u2295 0378                                        u3175 04F3  
                                      u2384 0CA0                                        u2640 0B04  
                                      u2560 0B44                                        u2385 0C9E  
                                      u2705 0ABB                                        u3265 0532  
                                      u3345 008D                                        u2650 0B05  
                                      u2570 0B45                                        u3435 00F9  
                                      u3355 009F                                        u3515 0DB8  
                                      u2580 0AD4                                        u2805 0C2D  
                                      u3445 0101                                        u2590 0AD5  
                                      u2825 0C3C                                        u3385 00D1  
                                      u3545 0DD6                                        u2675 0A86  
                                      u2915 0BC2                                        u3395 00D9  
                                      u2925 0BD7                                        u3485 0D8C  
                                      u2935 0BE9                                        u3575 09E8  
                                      u1985 01F9                                        u2865 0C58  
                                      u2785 0C12                                        u3825 0F88  
                                      u3835 0F9A                                        u2980 03DF  
                                      u3845 0FBC                                        u2990 03E0  
                                      u2974 03C4                                        u3775 09BF  
                                      u2895 0BB4                                        u2975 03C1  
                                      u3855 0FCD                                        u3865 0FDB  
                              __CFG_WRT$OFF 0000                                        _main 0E98  
                              ___ftpack@arg 0070                          __size_of_LCD_Clear 000B  
                              ___ftpack@exp 0073                                        btemp 007E  
                          __end_of_ADC_Init 08EA                                main@adcValue 006A  
                                      ltemp 007E                          __size_of_LCD_SetUp 00D1  
                                      start 0000                                        ttemp 007E  
                                      wtemp 007E                            __end_of_DELAY_ms 0931  
                          __end_of_DELAY_us 08FF                           ___bmul@multiplier 0023  
                              ___ftmul@cntr 0028                               ?_GPIO_PinRead 0070  
                              ___ftmul@sign 0029                              ??_LCD_CmdWrite 0077  
                               LCD_SetUp@D0 0022                                 LCD_SetUp@D1 0023  
                               LCD_SetUp@D2 0024                                 LCD_SetUp@D3 0025  
                               LCD_SetUp@D4 0026                                 LCD_SetUp@D5 0027  
                               LCD_SetUp@D6 0028                                 LCD_SetUp@D7 0029  
                               LCD_SetUp@EN 0021                                ___fttol@exp1 0037  
                               LCD_SetUp@RS 0076                                 LCD_SetUp@RW 0020  
                              ___fttol@lval 0033                              ??_LCD_GoToLine 007A  
                             _GPIO_PinWrite 02CE                            __end_of_LCD_Init 0BA0  
          LCD_Printf@v_numOfDigitsToDisp_u8 0065                     LCD_CmdWrite@v_lcdCmd_u8 0079  
                                     ?_main 0070                             __end_of___ftadd 05A2  
                             __CFG_WDTE$OFF 0000                             __end_of___ftdiv 1000  
                           __end_of___ftneg 08F4                             __end_of___lldiv 0BFE  
                           __end_of___ftmul 0124                             __end_of___fttol 0DF9  
                     _LCD_DisplayNumber$213 003F                                       _PORTA 0005  
                                     _PORTB 0006                                       _PORTC 0007  
                                     _PORTD 0008                                       _PORTE 0009  
                                     _TRISA 0085                                       _TRISB 0086  
                                     _TRISC 0087                                       _TRISD 0088  
                                     _TRISE 0089                                ___lltoft@exp 007D  
                             ___awtoft@sign 007D       LCD_DisplayString@ptr_stringPointer_u8 0020  
                             ___ftpack@sign 0074                              __CFG_BOREN$OFF 0000  
                                     pclath 000A                                       ltemp0 007E  
                                     ltemp1 0082                                       ltemp2 0086  
                                     ltemp3 0080                __end_of_lcd_SendHigherNibble 0B0F  
                       __size_of_LCD_Printf 0232                                       ttemp0 007E  
                                     ttemp1 0081                                       ttemp2 0084  
                                     ttemp3 0087                                       ttemp4 007F  
                                     status 0003                                       wtemp0 007E  
                                     wtemp1 0080                                       wtemp2 0082  
                                     wtemp3 0084                                       wtemp4 0086  
                                     wtemp5 0088                                       wtemp6 007F  
                            ??_GPIO_PinRead 0070                             __initialization 07D4  
                GPIO_PinWrite@enm_pinNumber 0074                                __end_of_main 0F48  
                            ?_GPIO_PinWrite 0070                           _GPIO_PinDirection 01F5  
                                    ??_main 00AE                               ___fttol@sign1 0032  
               __size_of_lcd_SendCmdSignals 002D                           __end_of_LCD_Clear 090A  
                        ?_GPIO_PinDirection 0070                           __end_of_LCD_SetUp 01F5  
                          ?_ADC_GetAdcValue 0072                                      _ADCON0 001F  
                                    _ADCON1 009F                            ?_LCD_DisplayChar 0070  
               LCD_DisplayChar@v_lcdData_u8 007C                                LCD_Printf@ch 0064  
                                    _ADRESH 001E                                      _ADRESL 009E  
                       ??_GPIO_PinDirection 0071                            __end_of___awtoft 09BB  
                          __end_of___ftpack 0C6A                            __end_of___lltoft 0A0A  
                     lcd_BusyCheck@busyflag 0076                              __CFG_PWRTE$OFF 0000  
                 GPIO_PinRead@enm_pinNumber 0074                                      ___bmul 090A  
                                 ??___ftadd 0029                                   ??___ftdiv 0026  
                                 ??___ftneg 007E                                   ??___lldiv 0078  
                                 ??___ftmul 0020                                   ??___fttol 002E  
                 __end_of_GPIO_PinDirection 02CE              GPIO_PinDirection@enm_pinNumber 0074  
                          DELAY_ms@ms_count 0072                       ___ftmul@f3_as_product 0025  
                                 ?_ADC_Init 0070                           ?_LCD_GoToNextLine 0070  
                                 ?_DELAY_ms 0072                                   ?_DELAY_us 0070  
               __end_of_lcd_SendLowerNibble 0B4F                          ??_LCD_GoToNextLine 007A  
                      __end_of_LCD_CmdWrite 0A9A                        __end_of_LCD_GoToLine 0948  
               lcd_SendLowerNibble@dataByte 0076                     __end_of__initialization 07FC  
                                 ?_LCD_Init 007C                                  ___ftadd@f1 0023  
                                ___ftadd@f2 0026                                  ___ftdiv@f1 0023  
                                ___ftdiv@f2 0020                                  ___ftdiv@f3 002B  
                   ?_LCD_DisplayFloatNumber 0043                                  ___ftneg@f1 0020  
                                ___awtoft@c 0078                         ___bmul@multiplicand 0020  
                                ___ftmul@f1 0078                                  ___ftmul@f2 007B  
                           ??_GPIO_PinWrite 0071                                  ___fttol@f1 002A  
                            __pcstackCOMMON 0070                                __pidataBANK1 08DE  
                                ___lltoft@c 0078                       __end_of_lcd_DataWrite 0ACF  
                              ??_LCD_Printf 0050                        _lcd_SendHigherNibble 0ACF  
                       LCD_Printf@v_num_s16 005B                         LCD_Printf@v_num_s32 0057  
                       LCD_Printf@v_num_u16 0061                         LCD_Printf@v_num_u32 005D  
                        __size_of_lcd_Reset 004F                                  ??_ADC_Init 0070  
              __size_of_lcd_SendDataSignals 002E                                  ??_DELAY_ms 0074  
                                ??_DELAY_us 0072                        __end_of_GPIO_PinRead 0CDF  
            GPIO_PinWrite@var_portNumber_u8 0073                                  __pbssBANK0 006C  
                                __pbssBANK1 00A0                       __end_of_lcd_BusyCheck 0D6B  
              lcd_SendHigherNibble@dataByte 0076                GPIO_PinWrite@var_pinValue_u8 0070  
                                ??_LCD_Init 007D              __end_of_LCD_DisplayFloatNumber 0E98  
                        __end_of_LCD_Printf 07D4                                  __pmaintext 0E98  
                                   ?___bmul 0020                  __size_of_GPIO_PinDirection 00D9  
                             LCD_Printf@ptr 0063                               LCD_Printf@str 0055  
                                 ?___awtoft 0078                                   ?___ftpack 0070  
                     ?_lcd_SendHigherNibble 0070                                   ?___lltoft 0078  
                                   _GO_DONE 00FA                            DELAY_us@us_count 0070  
                                __stringtab 0800                           __end_of_lcd_Reset 0053  
                           __size_of___bmul 0013                   LCD_Init@v_lcdNoOfLines_u8 0020  
                                   ___ftadd 0499                                     ___ftdiv 0F48  
                                   ___ftneg 08EA                                     ___lldiv 0BA0  
                                   ___ftmul 0053                                     ___fttol 0D6B  
                                ??___awtoft 007B                                  ??___ftpack 0075  
                        LCD_DisplayNumber@a 0035                          LCD_DisplayNumber@i 0042  
                                ??___lltoft 007C                                     __ptext1 0F48  
                                   __ptext2 099A                                     __ptext3 0124  
                                   __ptext4 05A2                                     __ptext5 0960  
                                   __ptext6 0DF9                                     __ptext7 09DF  
                                   __ptext8 0D6B                                     __ptext9 08EA  
                     __size_of_LCD_CmdWrite 0035                                   _LCDConfig 00A0  
                     __size_of_LCD_GoToLine 0017                                   _LCD_Clear 08FF  
                                 _LCD_SetUp 0124                        end_of_initialization 07FC  
              LCD_Init@v_MaxCharsPerLine_u8 007C                             ___lldiv@divisor 0070  
                           ___lldiv@counter 007D            LCD_DisplayFloatNumber@v_temp_u32 0047  
                    ??_lcd_SendHigherNibble 0075                  __end_of_lcd_SendCmdSignals 0A37  
                              _LCD_CmdWrite 0A65                                _LCD_GoToLine 0931  
          ADC_GetAdcValue@var_adcChannel_u8 0075                       __size_of_GPIO_PinRead 0075  
                                ?_LCD_Clear 0070                                  ?_LCD_SetUp 0020  
                         __size_of_ADC_Init 0008                           __size_of_DELAY_ms 0014  
                         __size_of_DELAY_us 000B                                 ___ftdiv@exp 002E  
                  __size_of_ADC_GetAdcValue 0024                    __size_of_LCD_DisplayChar 0021  
                         __size_of_LCD_Init 0051                   __size_of_LCD_GoToNextLine 0018  
                       _lcd_SendDataSignals 0A37                                 ___ftmul@exp 0024  
        GPIO_PinDirection@var_portNumber_u8 0073                                _GPIO_PinRead 0C6A  
                            __end_of___bmul 091D                           LCD_Printf@argList 0056  
                  _ARR_LcdLineNumAddress_U8 00B8                         start_initialization 07D4  
                      ?_lcd_SendDataSignals 0070                      _v_LcdTrackCursorPos_U8 006C  
             GPIO_PinRead@var_portNumber_u8 0072                __size_of_lcd_SendLowerNibble 0040  
           GPIO_PinDirection@var_pinDirn_u8 0070                                    ??___bmul 0021  
                     __end_of_GPIO_PinWrite 03A7                                 __pdataBANK1 00B8  
      LCD_DisplayFloatNumber@v_floatNum_f32 0043                           __size_of___awtoft 0021  
                         __size_of___ftpack 006C                       ??_lcd_SendDataSignals 0075  
                      _v_LcdTrackLineNum_U8 006D                           __size_of___lltoft 002B  
                                 ___latbits 0002                       lcd_DataWrite@dataByte 0079  
                             __pcstackBANK0 0020                               __pcstackBANK1 00AE  
                               ??_LCD_Clear 007C                                 ??_LCD_SetUp 0075  
                    __size_of_lcd_DataWrite 0035                 LCD_GoToLine@v_lineNumber_u8 007B  
                                  ?___ftadd 0023                                    ?___ftdiv 0020  
                                  ?___ftneg 0020                                    ?___lldiv 0070  
                         ??_ADC_GetAdcValue 0074                                    ?___ftmul 0078  
                                  ?___fttol 002A                                   _lcd_Reset 0004  
                         ??_LCD_DisplayChar 007B                                   __pstrings 0800  
                    __size_of_lcd_BusyCheck 008C                           _LCD_DisplayNumber 03A7  
                            LCD_Printf@argp 0066                                    _ADC_Init 08E2  
                         _LCD_DisplayString 0960                                    _DELAY_ms 091D  
                                  _DELAY_us 08F4                          ?_LCD_DisplayNumber 0024  
                        ?_LCD_DisplayString 0070                         ??_LCD_DisplayNumber 0029  
                                  _LCD_Init 0B4F                         ??_LCD_DisplayString 007D  
                          _LCD_GoToNextLine 0948                                  ?_lcd_Reset 0070  
                             _lcd_DataWrite 0A9A                    GPIO_PinRead@returnStatus 0073  
                 __end_of_LCD_DisplayNumber 0499                                 __stringbase 0805  
                 __end_of_LCD_DisplayString 0979                          _lcd_SendCmdSignals 0A0A  
                  ??_LCD_DisplayFloatNumber 0046                               _lcd_BusyCheck 0CDF  
                       ?_lcd_SendCmdSignals 0070                              ?_lcd_DataWrite 0070  
                          __size_of___ftadd 0109                            __size_of___ftdiv 00B8  
                          __size_of___ftneg 000A                            __size_of___lldiv 005E  
                          __size_of___ftmul 00D1                            __size_of___fttol 008E  
                                  ___awtoft 099A                                    ___ftpack 0BFE  
                        __end_of__stringtab 0806                        ??_lcd_SendCmdSignals 0075  
                                  ___lltoft 09DF               __size_of_lcd_SendHigherNibble 0040  
                       _lcd_SendLowerNibble 0B0F                                    __ptext10 0053  
                                  __ptext11 0499                                    __ptext20 0B4F  
                                  __ptext12 0BFE                                    __ptext21 0004  
                                  __ptext13 03A7                                    __ptext30 0C6A  
                                  __ptext22 08FF                                    __ptext14 0BA0  
                                  __ptext31 01F5                                    __ptext23 0931  
                                  __ptext15 090A                                    __ptext32 091D  
                                  __ptext24 0A65                                    __ptext16 0979  
                                  __ptext33 08E2                                    __ptext25 0B0F  
                                  __ptext17 0A9A                                    __ptext34 09BB  
                                  __ptext26 0ACF                                    __ptext18 0A37  
                                  __ptext35 08F4                                    __ptext27 0A0A  
                                  __ptext19 0948                                    __ptext28 0CDF  
                                  __ptext29 02CE                              ?_lcd_BusyCheck 0070  
       LCD_DisplayNumber@v_numericSystem_u8 0041                               __size_of_main 00B0  
                      ?_lcd_SendLowerNibble 0070                                 ??_lcd_Reset 0077  
                                _LCD_Printf 05A2                                    main@temp 0067  
                __size_of_LCD_DisplayNumber 00F2                  __size_of_LCD_DisplayString 0019  
           __size_of_LCD_DisplayFloatNumber 009F                             _ADC_GetAdcValue 09BB  
                     ??_lcd_SendLowerNibble 0075                            ___lldiv@dividend 0074  
                           _LCD_DisplayChar 0979                                   stringcode 0800  
                           ??_lcd_DataWrite 0077                 __end_of_lcd_SendDataSignals 0A65  
                  LCD_Printf@v_floatNum_f32 0052                            ___lldiv@quotient 0079  
                  __end_of_LCD_GoToNextLine 0960                                    stringdir 0800  
                                  stringtab 0800  LCD_DisplayNumber@v_numOfDigitsToDisplay_u8 0028  
                           ??_lcd_BusyCheck 0075                      __size_of_GPIO_PinWrite 00D9  
             LCD_DisplayNumber@v_number_u32 0024  
