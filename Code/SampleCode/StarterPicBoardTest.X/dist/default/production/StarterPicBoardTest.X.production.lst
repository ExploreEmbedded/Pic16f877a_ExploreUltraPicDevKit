

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Wed Mar 16 14:23:01 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,delta=2
    56                           	psect	text43,local,class=CODE,merge=1,delta=2
    57                           	psect	text44,local,class=CODE,merge=1,delta=2
    58                           	psect	text45,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x7E,2
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  000E                     	;# 
   136  000F                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0015                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001B                     	;# 
   151  001C                     	;# 
   152  001D                     	;# 
   153  001E                     	;# 
   154  001F                     	;# 
   155  0081                     	;# 
   156  0085                     	;# 
   157  0086                     	;# 
   158  0087                     	;# 
   159  0088                     	;# 
   160  0089                     	;# 
   161  008C                     	;# 
   162  008D                     	;# 
   163  008E                     	;# 
   164  0091                     	;# 
   165  0092                     	;# 
   166  0093                     	;# 
   167  0094                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  010C                     	;# 
   175  010D                     	;# 
   176  010E                     	;# 
   177  010F                     	;# 
   178  018C                     	;# 
   179  018D                     	;# 
   180  0000                     	;# 
   181  0001                     	;# 
   182  0002                     	;# 
   183  0003                     	;# 
   184  0004                     	;# 
   185  0005                     	;# 
   186  0006                     	;# 
   187  0007                     	;# 
   188  0008                     	;# 
   189  0009                     	;# 
   190  000A                     	;# 
   191  000B                     	;# 
   192  000C                     	;# 
   193  000D                     	;# 
   194  000E                     	;# 
   195  000E                     	;# 
   196  000F                     	;# 
   197  0010                     	;# 
   198  0011                     	;# 
   199  0012                     	;# 
   200  0013                     	;# 
   201  0014                     	;# 
   202  0015                     	;# 
   203  0015                     	;# 
   204  0016                     	;# 
   205  0017                     	;# 
   206  0018                     	;# 
   207  0019                     	;# 
   208  001A                     	;# 
   209  001B                     	;# 
   210  001B                     	;# 
   211  001C                     	;# 
   212  001D                     	;# 
   213  001E                     	;# 
   214  001F                     	;# 
   215  0081                     	;# 
   216  0085                     	;# 
   217  0086                     	;# 
   218  0087                     	;# 
   219  0088                     	;# 
   220  0089                     	;# 
   221  008C                     	;# 
   222  008D                     	;# 
   223  008E                     	;# 
   224  0091                     	;# 
   225  0092                     	;# 
   226  0093                     	;# 
   227  0094                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  010C                     	;# 
   235  010D                     	;# 
   236  010E                     	;# 
   237  010F                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  000E                     	;# 
   256  000F                     	;# 
   257  0010                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0014                     	;# 
   262  0015                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  001D                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  0081                     	;# 
   276  0085                     	;# 
   277  0086                     	;# 
   278  0087                     	;# 
   279  0088                     	;# 
   280  0089                     	;# 
   281  008C                     	;# 
   282  008D                     	;# 
   283  008E                     	;# 
   284  0091                     	;# 
   285  0092                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  018C                     	;# 
   359  018D                     	;# 
   360                           
   361                           	psect	idataBANK1
   362  163C                     __pidataBANK1:	
   363                           
   364                           ;initializer for _ARR_LcdLineNumAddress_U8
   365  163C  3480               	retlw	128
   366  163D  34C0               	retlw	192
   367  163E  3490               	retlw	144
   368  163F  34D0               	retlw	208
   369  001F                     _ADCON0	set	31
   370  001E                     _ADRESH	set	30
   371  0005                     _PORTA	set	5
   372  0006                     _PORTB	set	6
   373  0007                     _PORTC	set	7
   374  0008                     _PORTD	set	8
   375  0009                     _PORTE	set	9
   376  001A                     _RCREG	set	26
   377  0018                     _RCSTA	set	24
   378  0019                     _TXREG	set	25
   379  00F8                     _ADON	set	248
   380  00FA                     _GO	set	250
   381  00FA                     _GO_DONE	set	250
   382  0065                     _RCIF	set	101
   383  0064                     _TXIF	set	100
   384  009F                     _ADCON1	set	159
   385  009E                     _ADRESL	set	158
   386  0099                     _SPBRG	set	153
   387  0085                     _TRISA	set	133
   388  0086                     _TRISB	set	134
   389  0087                     _TRISC	set	135
   390  0088                     _TRISD	set	136
   391  0089                     _TRISE	set	137
   392  0098                     _TXSTA	set	152
   393  010D                     _EEADR	set	269
   394  010C                     _EEDATA	set	268
   395  018D                     _EECON2	set	397
   396  0C60                     _RD	set	3168
   397  0C61                     _WR	set	3169
   398  0C62                     _WREN	set	3170
   399                           
   400                           	psect	strings
   401  1000                     __pstrings:	
   402  1000                     stringtab:	
   403  1000                     __stringtab:	
   404                           
   405                           ;	String table - string pointers are 2 bytes each
   406  1000  1BFF               	btfsc	btemp+1,7
   407  1001  280A               	ljmp	stringcode
   408  1002  1383               	bcf	3,7
   409  1003  187F               	btfsc	btemp+1,0
   410  1004  1783               	bsf	3,7
   411  1005  0800               	movf	0,w
   412  1006  0A84               	incf	4,f
   413  1007  1903               	skipnz
   414  1008  0AFF               	incf	btemp+1,f
   415  1009  0008               	return
   416  100A                     stringcode:	
   417  100A  087F               	movf	btemp+1,w
   418  100B  397F               	andlw	127
   419  100C  008A               	movwf	10
   420  100D  0804               	movf	4,w
   421  100E  0A84               	incf	4,f
   422  100F  1903               	skipnz
   423  1010  0AFF               	incf	btemp+1,f
   424  1011  0082               	movwf	2
   425  1012                     __stringbase:	
   426  1012                     __end_of__stringtab:	
   427                           
   428                           	psect	stringtext
   429  0800                     __pstringtext:	
   430  0800                     STR_1:	
   431  0800  340A               	retlw	10
   432  0801  340D               	retlw	13
   433  0802  340A               	retlw	10
   434  0803  340D               	retlw	13
   435  0804  3453               	retlw	83	;'S'
   436  0805  3474               	retlw	116	;'t'
   437  0806  3461               	retlw	97	;'a'
   438  0807  3472               	retlw	114	;'r'
   439  0808  3474               	retlw	116	;'t'
   440  0809  3465               	retlw	101	;'e'
   441  080A  3472               	retlw	114	;'r'
   442  080B  3420               	retlw	32	;' '
   443  080C  3450               	retlw	80	;'P'
   444  080D  3449               	retlw	73	;'I'
   445  080E  3443               	retlw	67	;'C'
   446  080F  3420               	retlw	32	;' '
   447  0810  3474               	retlw	116	;'t'
   448  0811  3465               	retlw	101	;'e'
   449  0812  3473               	retlw	115	;'s'
   450  0813  3474               	retlw	116	;'t'
   451  0814  3420               	retlw	32	;' '
   452  0815  344D               	retlw	77	;'M'
   453  0816  3465               	retlw	101	;'e'
   454  0817  346E               	retlw	110	;'n'
   455  0818  3475               	retlw	117	;'u'
   456  0819  340A               	retlw	10
   457  081A  340D               	retlw	13
   458  081B  3420               	retlw	32	;' '
   459  081C  3431               	retlw	49	;'1'
   460  081D  342E               	retlw	46	;'.'
   461  081E  344C               	retlw	76	;'L'
   462  081F  3465               	retlw	101	;'e'
   463  0820  3464               	retlw	100	;'d'
   464  0821  3420               	retlw	32	;' '
   465  0822  3474               	retlw	116	;'t'
   466  0823  3465               	retlw	101	;'e'
   467  0824  3473               	retlw	115	;'s'
   468  0825  3474               	retlw	116	;'t'
   469  0826  340A               	retlw	10
   470  0827  340D               	retlw	13
   471  0828  3420               	retlw	32	;' '
   472  0829  3432               	retlw	50	;'2'
   473  082A  342E               	retlw	46	;'.'
   474  082B  344C               	retlw	76	;'L'
   475  082C  3463               	retlw	99	;'c'
   476  082D  3464               	retlw	100	;'d'
   477  082E  3420               	retlw	32	;' '
   478  082F  3474               	retlw	116	;'t'
   479  0830  3465               	retlw	101	;'e'
   480  0831  3473               	retlw	115	;'s'
   481  0832  3474               	retlw	116	;'t'
   482  0833  340A               	retlw	10
   483  0834  340D               	retlw	13
   484  0835  3420               	retlw	32	;' '
   485  0836  3433               	retlw	51	;'3'
   486  0837  342E               	retlw	46	;'.'
   487  0838  3453               	retlw	83	;'S'
   488  0839  3477               	retlw	119	;'w'
   489  083A  3469               	retlw	105	;'i'
   490  083B  3474               	retlw	116	;'t'
   491  083C  3463               	retlw	99	;'c'
   492  083D  3468               	retlw	104	;'h'
   493  083E  3420               	retlw	32	;' '
   494  083F  3474               	retlw	116	;'t'
   495  0840  3465               	retlw	101	;'e'
   496  0841  3473               	retlw	115	;'s'
   497  0842  3474               	retlw	116	;'t'
   498  0843  340A               	retlw	10
   499  0844  340D               	retlw	13
   500  0845  3420               	retlw	32	;' '
   501  0846  3434               	retlw	52	;'4'
   502  0847  342E               	retlw	46	;'.'
   503  0848  3441               	retlw	65	;'A'
   504  0849  3464               	retlw	100	;'d'
   505  084A  3463               	retlw	99	;'c'
   506  084B  3420               	retlw	32	;' '
   507  084C  3454               	retlw	84	;'T'
   508  084D  3465               	retlw	101	;'e'
   509  084E  3473               	retlw	115	;'s'
   510  084F  3474               	retlw	116	;'t'
   511  0850  340A               	retlw	10
   512  0851  340D               	retlw	13
   513  0852  3420               	retlw	32	;' '
   514  0853  3435               	retlw	53	;'5'
   515  0854  342E               	retlw	46	;'.'
   516  0855  3445               	retlw	69	;'E'
   517  0856  3465               	retlw	101	;'e'
   518  0857  3470               	retlw	112	;'p'
   519  0858  3472               	retlw	114	;'r'
   520  0859  346F               	retlw	111	;'o'
   521  085A  346D               	retlw	109	;'m'
   522  085B  3420               	retlw	32	;' '
   523  085C  3454               	retlw	84	;'T'
   524  085D  3465               	retlw	101	;'e'
   525  085E  3473               	retlw	115	;'s'
   526  085F  3474               	retlw	116	;'t'
   527  0860  3420               	retlw	32	;' '
   528  0861  340A               	retlw	10
   529  0862  340D               	retlw	13
   530  0863  3453               	retlw	83	;'S'
   531  0864  3465               	retlw	101	;'e'
   532  0865  346C               	retlw	108	;'l'
   533  0866  3465               	retlw	101	;'e'
   534  0867  3463               	retlw	99	;'c'
   535  0868  3474               	retlw	116	;'t'
   536  0869  3420               	retlw	32	;' '
   537  086A  344F               	retlw	79	;'O'
   538  086B  346E               	retlw	110	;'n'
   539  086C  3465               	retlw	101	;'e'
   540  086D  3420               	retlw	32	;' '
   541  086E  346F               	retlw	111	;'o'
   542  086F  3466               	retlw	102	;'f'
   543  0870  3420               	retlw	32	;' '
   544  0871  3474               	retlw	116	;'t'
   545  0872  3468               	retlw	104	;'h'
   546  0873  3465               	retlw	101	;'e'
   547  0874  3420               	retlw	32	;' '
   548  0875  3461               	retlw	97	;'a'
   549  0876  3462               	retlw	98	;'b'
   550  0877  346F               	retlw	111	;'o'
   551  0878  3476               	retlw	118	;'v'
   552  0879  3465               	retlw	101	;'e'
   553  087A  3420               	retlw	32	;' '
   554  087B  346F               	retlw	111	;'o'
   555  087C  3470               	retlw	112	;'p'
   556  087D  3474               	retlw	116	;'t'
   557  087E  3469               	retlw	105	;'i'
   558  087F  346F               	retlw	111	;'o'
   559  0880  346E               	retlw	110	;'n'
   560  0881  3473               	retlw	115	;'s'
   561  0882  3400               	retlw	0
   562  0883                     STR_5:	
   563  0883  340A               	retlw	10
   564  0884  340D               	retlw	13
   565  0885  340A               	retlw	10
   566  0886  340D               	retlw	13
   567  0887  3449               	retlw	73	;'I'
   568  0888  346E               	retlw	110	;'n'
   569  0889  3462               	retlw	98	;'b'
   570  088A  3475               	retlw	117	;'u'
   571  088B  3469               	retlw	105	;'i'
   572  088C  346C               	retlw	108	;'l'
   573  088D  3474               	retlw	116	;'t'
   574  088E  3420               	retlw	32	;' '
   575  088F  3445               	retlw	69	;'E'
   576  0890  3465               	retlw	101	;'e'
   577  0891  3470               	retlw	112	;'p'
   578  0892  3472               	retlw	114	;'r'
   579  0893  346F               	retlw	111	;'o'
   580  0894  346D               	retlw	109	;'m'
   581  0895  3420               	retlw	32	;' '
   582  0896  3454               	retlw	84	;'T'
   583  0897  3465               	retlw	101	;'e'
   584  0898  3473               	retlw	115	;'s'
   585  0899  3474               	retlw	116	;'t'
   586  089A  342E               	retlw	46	;'.'
   587  089B  3420               	retlw	32	;' '
   588  089C  3457               	retlw	87	;'W'
   589  089D  3472               	retlw	114	;'r'
   590  089E  3469               	retlw	105	;'i'
   591  089F  3474               	retlw	116	;'t'
   592  08A0  3469               	retlw	105	;'i'
   593  08A1  346E               	retlw	110	;'n'
   594  08A2  3467               	retlw	103	;'g'
   595  08A3  3420               	retlw	32	;' '
   596  08A4  3461               	retlw	97	;'a'
   597  08A5  346E               	retlw	110	;'n'
   598  08A6  3464               	retlw	100	;'d'
   599  08A7  3420               	retlw	32	;' '
   600  08A8  3472               	retlw	114	;'r'
   601  08A9  3465               	retlw	101	;'e'
   602  08AA  3461               	retlw	97	;'a'
   603  08AB  3464               	retlw	100	;'d'
   604  08AC  3469               	retlw	105	;'i'
   605  08AD  346E               	retlw	110	;'n'
   606  08AE  3467               	retlw	103	;'g'
   607  08AF  3420               	retlw	32	;' '
   608  08B0  3441               	retlw	65	;'A'
   609  08B1  342D               	retlw	45	;'-'
   610  08B2  345A               	retlw	90	;'Z'
   611  08B3  3420               	retlw	32	;' '
   612  08B4  3474               	retlw	116	;'t'
   613  08B5  346F               	retlw	111	;'o'
   614  08B6  3420               	retlw	32	;' '
   615  08B7  3461               	retlw	97	;'a'
   616  08B8  346E               	retlw	110	;'n'
   617  08B9  3464               	retlw	100	;'d'
   618  08BA  3420               	retlw	32	;' '
   619  08BB  3466               	retlw	102	;'f'
   620  08BC  3472               	retlw	114	;'r'
   621  08BD  346F               	retlw	111	;'o'
   622  08BE  346D               	retlw	109	;'m'
   623  08BF  3420               	retlw	32	;' '
   624  08C0  3445               	retlw	69	;'E'
   625  08C1  3465               	retlw	101	;'e'
   626  08C2  3470               	retlw	112	;'p'
   627  08C3  3472               	retlw	114	;'r'
   628  08C4  346F               	retlw	111	;'o'
   629  08C5  346D               	retlw	109	;'m'
   630  08C6  342E               	retlw	46	;'.'
   631  08C7  3400               	retlw	0
   632  08C8                     STR_3:	
   633  08C8  340A               	retlw	10
   634  08C9  340A               	retlw	10
   635  08CA  340A               	retlw	10
   636  08CB  340D               	retlw	13
   637  08CC  3450               	retlw	80	;'P'
   638  08CD  3472               	retlw	114	;'r'
   639  08CE  3465               	retlw	101	;'e'
   640  08CF  3473               	retlw	115	;'s'
   641  08D0  3473               	retlw	115	;'s'
   642  08D1  3420               	retlw	32	;' '
   643  08D2  3474               	retlw	116	;'t'
   644  08D3  3468               	retlw	104	;'h'
   645  08D4  3465               	retlw	101	;'e'
   646  08D5  3420               	retlw	32	;' '
   647  08D6  3473               	retlw	115	;'s'
   648  08D7  3477               	retlw	119	;'w'
   649  08D8  3469               	retlw	105	;'i'
   650  08D9  3474               	retlw	116	;'t'
   651  08DA  3463               	retlw	99	;'c'
   652  08DB  3468               	retlw	104	;'h'
   653  08DC  3465               	retlw	101	;'e'
   654  08DD  3473               	retlw	115	;'s'
   655  08DE  3420               	retlw	32	;' '
   656  08DF  3461               	retlw	97	;'a'
   657  08E0  346E               	retlw	110	;'n'
   658  08E1  3464               	retlw	100	;'d'
   659  08E2  3420               	retlw	32	;' '
   660  08E3  346F               	retlw	111	;'o'
   661  08E4  3462               	retlw	98	;'b'
   662  08E5  3473               	retlw	115	;'s'
   663  08E6  3465               	retlw	101	;'e'
   664  08E7  3472               	retlw	114	;'r'
   665  08E8  3476               	retlw	118	;'v'
   666  08E9  3465               	retlw	101	;'e'
   667  08EA  3420               	retlw	32	;' '
   668  08EB  3474               	retlw	116	;'t'
   669  08EC  3468               	retlw	104	;'h'
   670  08ED  3465               	retlw	101	;'e'
   671  08EE  3420               	retlw	32	;' '
   672  08EF  346F               	retlw	111	;'o'
   673  08F0  3475               	retlw	117	;'u'
   674  08F1  3474               	retlw	116	;'t'
   675  08F2  3470               	retlw	112	;'p'
   676  08F3  3475               	retlw	117	;'u'
   677  08F4  3474               	retlw	116	;'t'
   678  08F5  3420               	retlw	32	;' '
   679  08F6  346F               	retlw	111	;'o'
   680  08F7  346E               	retlw	110	;'n'
   681  08F8  3420               	retlw	32	;' '
   682  08F9  344C               	retlw	76	;'L'
   683  08FA  3465               	retlw	101	;'e'
   684  08FB  3464               	retlw	100	;'d'
   685  08FC  3473               	retlw	115	;'s'
   686  08FD  3400               	retlw	0
   687  08FE                     STR_2:	
   688  08FE  3445               	retlw	69	;'E'
   689  08FF  3478               	retlw	120	;'x'
   690  0900  3470               	retlw	112	;'p'
   691  0901  346C               	retlw	108	;'l'
   692  0902  346F               	retlw	111	;'o'
   693  0903  3472               	retlw	114	;'r'
   694  0904  3465               	retlw	101	;'e'
   695  0905  340A               	retlw	10
   696  0906  3420               	retlw	32	;' '
   697  0907  3453               	retlw	83	;'S'
   698  0908  3474               	retlw	116	;'t'
   699  0909  3461               	retlw	97	;'a'
   700  090A  3472               	retlw	114	;'r'
   701  090B  3474               	retlw	116	;'t'
   702  090C  3465               	retlw	101	;'e'
   703  090D  3472               	retlw	114	;'r'
   704  090E  3420               	retlw	32	;' '
   705  090F  3450               	retlw	80	;'P'
   706  0910  3469               	retlw	105	;'i'
   707  0911  3463               	retlw	99	;'c'
   708  0912  342E               	retlw	46	;'.'
   709  0913  342E               	retlw	46	;'.'
   710  0914  342E               	retlw	46	;'.'
   711  0915  3400               	retlw	0
   712  0916                     STR_6:	
   713  0916  340A               	retlw	10
   714  0917  340D               	retlw	13
   715  0918  3445               	retlw	69	;'E'
   716  0919  3465               	retlw	101	;'e'
   717  091A  3470               	retlw	112	;'p'
   718  091B  3472               	retlw	114	;'r'
   719  091C  346F               	retlw	111	;'o'
   720  091D  346D               	retlw	109	;'m'
   721  091E  3420               	retlw	32	;' '
   722  091F  3457               	retlw	87	;'W'
   723  0920  3472               	retlw	114	;'r'
   724  0921  3469               	retlw	105	;'i'
   725  0922  3474               	retlw	116	;'t'
   726  0923  3465               	retlw	101	;'e'
   727  0924  343A               	retlw	58	;':'
   728  0925  3420               	retlw	32	;' '
   729  0926  3425               	retlw	37	;'%'
   730  0927  3463               	retlw	99	;'c'
   731  0928  3420               	retlw	32	;' '
   732  0929  3420               	retlw	32	;' '
   733  092A  3420               	retlw	32	;' '
   734  092B  3420               	retlw	32	;' '
   735  092C  3400               	retlw	0
   736  092D                     STR_4:	
   737  092D  340A               	retlw	10
   738  092E  340D               	retlw	13
   739  092F  3441               	retlw	65	;'A'
   740  0930  3444               	retlw	68	;'D'
   741  0931  3443               	retlw	67	;'C'
   742  0932  3430               	retlw	48	;'0'
   743  0933  3420               	retlw	32	;' '
   744  0934  3476               	retlw	118	;'v'
   745  0935  3461               	retlw	97	;'a'
   746  0936  346C               	retlw	108	;'l'
   747  0937  3475               	retlw	117	;'u'
   748  0938  3465               	retlw	101	;'e'
   749  0939  343D               	retlw	61	;'='
   750  093A  3420               	retlw	32	;' '
   751  093B  3425               	retlw	37	;'%'
   752  093C  3434               	retlw	52	;'4'
   753  093D  3464               	retlw	100	;'d'
   754  093E  3400               	retlw	0
   755  093F                     STR_7:	
   756  093F  3445               	retlw	69	;'E'
   757  0940  3465               	retlw	101	;'e'
   758  0941  3470               	retlw	112	;'p'
   759  0942  3472               	retlw	114	;'r'
   760  0943  346F               	retlw	111	;'o'
   761  0944  346D               	retlw	109	;'m'
   762  0945  3420               	retlw	32	;' '
   763  0946  3452               	retlw	82	;'R'
   764  0947  3465               	retlw	101	;'e'
   765  0948  3461               	retlw	97	;'a'
   766  0949  3464               	retlw	100	;'d'
   767  094A  343A               	retlw	58	;':'
   768  094B  3420               	retlw	32	;' '
   769  094C  3425               	retlw	37	;'%'
   770  094D  3463               	retlw	99	;'c'
   771  094E  3400               	retlw	0
   772                           
   773                           ; #config settings
   774  0000                     
   775                           	psect	cinit
   776  07D4                     start_initialization:	
   777  07D4                     __initialization:	
   778                           
   779                           ; Clear objects allocated to BANK0
   780  07D4  01EE               	clrf	__pbssBANK0& (0+127)
   781  07D5  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   782                           
   783                           ; Clear objects allocated to BANK1
   784  07D6  1683               	bsf	3,5	;RP0=1, select bank1
   785  07D7  1303               	bcf	3,6	;RP1=0, select bank1
   786  07D8  01A0               	clrf	__pbssBANK1& (0+127)
   787  07D9  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   788  07DA  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   789  07DB  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   790  07DC  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   791  07DD  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   792  07DE  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   793  07DF  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   794  07E0  01A8               	clrf	(__pbssBANK1+8)& (0+127)
   795  07E1  01A9               	clrf	(__pbssBANK1+9)& (0+127)
   796  07E2  01AA               	clrf	(__pbssBANK1+10)& (0+127)
   797  07E3  01AB               	clrf	(__pbssBANK1+11)& (0+127)
   798  07E4  01AC               	clrf	(__pbssBANK1+12)& (0+127)
   799  07E5  01AD               	clrf	(__pbssBANK1+13)& (0+127)
   800                           
   801                           ; Initialize objects allocated to BANK1
   802  07E6  160A  118A  263C  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   803  07EB  00AE               	movwf	__pdataBANK1& (0+127)
   804  07EC  160A  118A  263D  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   805  07F1  00AF               	movwf	(__pdataBANK1+1)& (0+127)
   806  07F2  160A  118A  263E  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   807  07F7  00B0               	movwf	(__pdataBANK1+2)& (0+127)
   808  07F8  160A  118A  263F   	fcall	__pidataBANK1+3	;fetch initializer
   809  07FB  00B1               	movwf	(__pdataBANK1+3)& (0+127)
   810  07FC                     end_of_initialization:	
   811                           ;End of C runtime variable initialization code
   812                           
   813  07FC                     __end_of__initialization:	
   814  07FC  0183               	clrf	3
   815  07FD  120A  158A  2B90   	ljmp	_main	;jump to C main() function
   816                           
   817                           	psect	bssBANK0
   818  006E                     __pbssBANK0:	
   819  006E                     _v_LcdTrackCursorPos_U8:	
   820  006E                     	ds	1
   821  006F                     _v_LcdTrackLineNum_U8:	
   822  006F                     	ds	1
   823                           
   824                           	psect	bssBANK1
   825  00A0                     __pbssBANK1:	
   826  00A0                     _LCDConfig:	
   827  00A0                     	ds	14
   828                           
   829                           	psect	dataBANK1
   830  00AE                     __pdataBANK1:	
   831  00AE                     _ARR_LcdLineNumAddress_U8:	
   832  00AE                     	ds	4
   833                           
   834                           	psect	cstackCOMMON
   835  0070                     __pcstackCOMMON:	
   836  0070                     ?_DELAY_us:	
   837  0070                     ?_LCD_CmdWrite:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_lcd_Reset:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?_LCD_Clear:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ?_LCD_GoToLine:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     ?_lcd_BusyCheck:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ?_lcd_SendLowerNibble:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ?_lcd_SendHigherNibble:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ?_lcd_SendCmdSignals:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0070                     ?_lcd_DataWrite:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0070                     ?_lcd_SendDataSignals:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0070                     ?_led_Test:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     ?_lcd_Test:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     ?_switch_Test:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0070                     ?_adc_Test:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0070                     ?_eeprom_Test:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0070                     ?_ADC_Init:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0070                     ??_ADC_Init:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0070                     ?_GPIO_PinDirection:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0070                     ?_GPIO_PinRead:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0070                     ??_GPIO_PinRead:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  0070                     ?_LCD_GoToNextLine:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0070                     ?_LCD_DisplayChar:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0070                     ?_UART_RxChar:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0070                     ??_UART_RxChar:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0070                     ?_UART_TxChar:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0070                     ??_UART_TxChar:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0070                     ?_main:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ?___ftpack:	
   919                           ; 2 bytes @ 0x0
   920                           
   921  0070                     ?___lldiv:	
   922                           ; 3 bytes @ 0x0
   923                           
   924  0070                     GPIO_PinDirection@var_pinDirn_u8:	
   925                           ; 4 bytes @ 0x0
   926                           
   927  0070                     UART_TxChar@v_uartData_u8:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0070                     DELAY_us@us_count:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0070                     ___ftpack@arg:	
   934                           ; 2 bytes @ 0x0
   935                           
   936  0070                     ___lldiv@divisor:	
   937                           ; 3 bytes @ 0x0
   938                           
   939                           
   940                           ; 4 bytes @ 0x0
   941  0070                     	ds	1
   942  0071                     ??_GPIO_PinDirection:	
   943  0071                     ?_UART_TxString:	
   944                           ; 1 bytes @ 0x1
   945                           
   946  0071                     UART_TxString@ptr_string:	
   947                           ; 1 bytes @ 0x1
   948                           
   949                           
   950                           ; 2 bytes @ 0x1
   951  0071                     	ds	1
   952  0072                     ??_DELAY_us:	
   953  0072                     ?_DELAY_ms:	
   954                           ; 1 bytes @ 0x2
   955                           
   956  0072                     ?_EEPROM_WriteByte:	
   957                           ; 1 bytes @ 0x2
   958                           
   959  0072                     ?_EEPROM_ReadByte:	
   960                           ; 1 bytes @ 0x2
   961                           
   962  0072                     ?_ADC_GetAdcValue:	
   963                           ; 1 bytes @ 0x2
   964                           
   965  0072                     GPIO_PinRead@var_portNumber_u8:	
   966                           ; 2 bytes @ 0x2
   967                           
   968  0072                     DELAY_ms@ms_count:	
   969                           ; 1 bytes @ 0x2
   970                           
   971  0072                     EEPROM_WriteByte@v_eepromAddress_u16:	
   972                           ; 2 bytes @ 0x2
   973                           
   974  0072                     EEPROM_ReadByte@v_eepromAddress_u16:	
   975                           ; 2 bytes @ 0x2
   976                           
   977                           
   978                           ; 2 bytes @ 0x2
   979  0072                     	ds	1
   980  0073                     ??_UART_TxString:	
   981  0073                     GPIO_PinDirection@var_portNumber_u8:	
   982                           ; 1 bytes @ 0x3
   983                           
   984  0073                     GPIO_PinRead@returnStatus:	
   985                           ; 1 bytes @ 0x3
   986                           
   987  0073                     ___ftpack@exp:	
   988                           ; 1 bytes @ 0x3
   989                           
   990                           
   991                           ; 1 bytes @ 0x3
   992  0073                     	ds	1
   993  0074                     ??_led_Test:	
   994  0074                     ??_ADC_GetAdcValue:	
   995                           ; 1 bytes @ 0x4
   996                           
   997  0074                     ??_DELAY_ms:	
   998                           ; 1 bytes @ 0x4
   999                           
  1000  0074                     ??_EEPROM_ReadByte:	
  1001                           ; 1 bytes @ 0x4
  1002                           
  1003  0074                     EEPROM_WriteByte@v_eepromData_u8:	
  1004                           ; 1 bytes @ 0x4
  1005                           
  1006  0074                     GPIO_PinDirection@enm_pinNumber:	
  1007                           ; 1 bytes @ 0x4
  1008                           
  1009  0074                     GPIO_PinRead@enm_pinNumber:	
  1010                           ; 1 bytes @ 0x4
  1011                           
  1012  0074                     ___ftpack@sign:	
  1013                           ; 1 bytes @ 0x4
  1014                           
  1015  0074                     led_Test@i:	
  1016                           ; 1 bytes @ 0x4
  1017                           
  1018  0074                     ___lldiv@dividend:	
  1019                           ; 2 bytes @ 0x4
  1020                           
  1021                           
  1022                           ; 4 bytes @ 0x4
  1023  0074                     	ds	1
  1024  0075                     ??___ftpack:	
  1025  0075                     ??_EEPROM_WriteByte:	
  1026                           ; 1 bytes @ 0x5
  1027                           
  1028  0075                     ?_GPIO_PinWrite:	
  1029                           ; 1 bytes @ 0x5
  1030                           
  1031  0075                     ??_LCD_SetUp:	
  1032                           ; 1 bytes @ 0x5
  1033                           
  1034  0075                     ADC_GetAdcValue@var_adcChannel_u8:	
  1035                           ; 1 bytes @ 0x5
  1036                           
  1037  0075                     GPIO_PinWrite@var_pinValue_u8:	
  1038                           ; 1 bytes @ 0x5
  1039                           
  1040                           
  1041                           ; 1 bytes @ 0x5
  1042  0075                     	ds	1
  1043  0076                     ??_GPIO_PinWrite:	
  1044  0076                     LCD_SetUp@RS:	
  1045                           ; 1 bytes @ 0x6
  1046                           
  1047  0076                     led_Test@pattern:	
  1048                           ; 1 bytes @ 0x6
  1049                           
  1050                           
  1051                           ; 2 bytes @ 0x6
  1052  0076                     	ds	2
  1053  0078                     ??___lldiv:	
  1054  0078                     ?___ftmul:	
  1055                           ; 1 bytes @ 0x8
  1056                           
  1057  0078                     ?___lltoft:	
  1058                           ; 3 bytes @ 0x8
  1059                           
  1060  0078                     GPIO_PinWrite@var_portNumber_u8:	
  1061                           ; 3 bytes @ 0x8
  1062                           
  1063  0078                     ___ftmul@f1:	
  1064                           ; 1 bytes @ 0x8
  1065                           
  1066  0078                     ___lltoft@c:	
  1067                           ; 3 bytes @ 0x8
  1068                           
  1069                           
  1070                           ; 4 bytes @ 0x8
  1071  0078                     	ds	1
  1072  0079                     GPIO_PinWrite@enm_pinNumber:	
  1073  0079                     ___lldiv@quotient:	
  1074                           ; 1 bytes @ 0x9
  1075                           
  1076                           
  1077                           ; 4 bytes @ 0x9
  1078  0079                     	ds	1
  1079  007A                     ??_lcd_BusyCheck:	
  1080  007A                     ??_lcd_SendLowerNibble:	
  1081                           ; 1 bytes @ 0xA
  1082                           
  1083  007A                     ??_lcd_SendHigherNibble:	
  1084                           ; 1 bytes @ 0xA
  1085                           
  1086  007A                     ??_lcd_SendCmdSignals:	
  1087                           ; 1 bytes @ 0xA
  1088                           
  1089  007A                     ??_lcd_SendDataSignals:	
  1090                           ; 1 bytes @ 0xA
  1091                           
  1092  007A                     ??_switch_Test:	
  1093                           ; 1 bytes @ 0xA
  1094                           
  1095                           
  1096                           ; 1 bytes @ 0xA
  1097  007A                     	ds	1
  1098  007B                     lcd_BusyCheck@busyflag:	
  1099  007B                     lcd_SendHigherNibble@dataByte:	
  1100                           ; 1 bytes @ 0xB
  1101                           
  1102  007B                     lcd_SendLowerNibble@dataByte:	
  1103                           ; 1 bytes @ 0xB
  1104                           
  1105  007B                     ___ftmul@f2:	
  1106                           ; 1 bytes @ 0xB
  1107                           
  1108                           
  1109                           ; 3 bytes @ 0xB
  1110  007B                     	ds	1
  1111  007C                     ??_LCD_CmdWrite:	
  1112  007C                     ??_lcd_Reset:	
  1113                           ; 1 bytes @ 0xC
  1114                           
  1115  007C                     ??_lcd_DataWrite:	
  1116                           ; 1 bytes @ 0xC
  1117                           
  1118  007C                     ??___lltoft:	
  1119                           ; 1 bytes @ 0xC
  1120                           
  1121                           
  1122                           ; 1 bytes @ 0xC
  1123  007C                     	ds	1
  1124  007D                     ___lldiv@counter:	
  1125  007D                     ___lltoft@exp:	
  1126                           ; 1 bytes @ 0xD
  1127                           
  1128                           
  1129                           ; 1 bytes @ 0xD
  1130  007D                     	ds	1
  1131  007E                     ??_LCD_Clear:	
  1132  007E                     ??_adc_Test:	
  1133                           ; 1 bytes @ 0xE
  1134                           
  1135  007E                     ??_LCD_DisplayString:	
  1136                           ; 1 bytes @ 0xE
  1137                           
  1138  007E                     ??_UART_Init:	
  1139                           ; 1 bytes @ 0xE
  1140                           
  1141  007E                     ??___ftneg:	
  1142                           ; 1 bytes @ 0xE
  1143                           
  1144                           
  1145                           	psect	cstackBANK0
  1146  0020                     __pcstackBANK0:	
  1147                           ; 1 bytes @ 0xE
  1148                           
  1149  0020                     ?_UART_SetBaudRate:	
  1150  0020                     ?_LCD_SetUp:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0020                     ?___bmul:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0020                     ??___ftmul:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0020                     ?___ftneg:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0020                     LCD_SetUp@RW:	
  1163                           ; 3 bytes @ 0x0
  1164                           
  1165  0020                     LCD_CmdWrite@v_lcdCmd_u8:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0020                     lcd_DataWrite@dataByte:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  0020                     ___bmul@multiplicand:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0020                     ___ftneg@f1:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0020                     UART_SetBaudRate@v_baudRate_u32:	
  1178                           ; 3 bytes @ 0x0
  1179                           
  1180                           
  1181                           ; 4 bytes @ 0x0
  1182  0020                     	ds	1
  1183  0021                     ??_LCD_GoToLine:	
  1184  0021                     ??_LCD_GoToNextLine:	
  1185                           ; 1 bytes @ 0x1
  1186                           
  1187  0021                     ??___bmul:	
  1188                           ; 1 bytes @ 0x1
  1189                           
  1190  0021                     LCD_SetUp@EN:	
  1191                           ; 1 bytes @ 0x1
  1192                           
  1193                           
  1194                           ; 1 bytes @ 0x1
  1195  0021                     	ds	1
  1196  0022                     ??_LCD_DisplayChar:	
  1197  0022                     LCD_SetUp@D0:	
  1198                           ; 1 bytes @ 0x2
  1199                           
  1200  0022                     LCD_GoToLine@v_lineNumber_u8:	
  1201                           ; 1 bytes @ 0x2
  1202                           
  1203  0022                     ___bmul@product:	
  1204                           ; 1 bytes @ 0x2
  1205                           
  1206                           
  1207                           ; 1 bytes @ 0x2
  1208  0022                     	ds	1
  1209  0023                     ?_LCD_Init:	
  1210  0023                     ?___ftadd:	
  1211                           ; 1 bytes @ 0x3
  1212                           
  1213  0023                     LCD_SetUp@D1:	
  1214                           ; 3 bytes @ 0x3
  1215                           
  1216  0023                     LCD_Init@v_MaxCharsPerLine_u8:	
  1217                           ; 1 bytes @ 0x3
  1218                           
  1219  0023                     LCD_DisplayChar@v_lcdData_u8:	
  1220                           ; 1 bytes @ 0x3
  1221                           
  1222  0023                     ___bmul@multiplier:	
  1223                           ; 1 bytes @ 0x3
  1224                           
  1225  0023                     ___ftadd@f1:	
  1226                           ; 1 bytes @ 0x3
  1227                           
  1228                           
  1229                           ; 3 bytes @ 0x3
  1230  0023                     	ds	1
  1231  0024                     ??_UART_SetBaudRate:	
  1232  0024                     ??_LCD_Init:	
  1233                           ; 1 bytes @ 0x4
  1234                           
  1235  0024                     ?_LCD_DisplayString:	
  1236                           ; 1 bytes @ 0x4
  1237                           
  1238  0024                     ?_UART_TxNumber:	
  1239                           ; 1 bytes @ 0x4
  1240                           
  1241  0024                     LCD_SetUp@D2:	
  1242                           ; 1 bytes @ 0x4
  1243                           
  1244  0024                     ___ftmul@exp:	
  1245                           ; 1 bytes @ 0x4
  1246                           
  1247  0024                     LCD_DisplayString@ptr_stringPointer_u8:	
  1248                           ; 1 bytes @ 0x4
  1249                           
  1250  0024                     UART_TxNumber@v_number_u32:	
  1251                           ; 2 bytes @ 0x4
  1252                           
  1253                           
  1254                           ; 4 bytes @ 0x4
  1255  0024                     	ds	1
  1256  0025                     LCD_SetUp@D3:	
  1257  0025                     LCD_Init@v_lcdNoOfLines_u8:	
  1258                           ; 1 bytes @ 0x5
  1259                           
  1260  0025                     ___ftmul@f3_as_product:	
  1261                           ; 1 bytes @ 0x5
  1262                           
  1263                           
  1264                           ; 3 bytes @ 0x5
  1265  0025                     	ds	1
  1266  0026                     LCD_SetUp@D4:	
  1267  0026                     ___ftadd@f2:	
  1268                           ; 1 bytes @ 0x6
  1269                           
  1270                           
  1271                           ; 3 bytes @ 0x6
  1272  0026                     	ds	1
  1273  0027                     LCD_SetUp@D5:	
  1274                           
  1275                           ; 1 bytes @ 0x7
  1276  0027                     	ds	1
  1277  0028                     LCD_SetUp@D6:	
  1278  0028                     UART_TxNumber@v_numOfDigitsToTransmit_u8:	
  1279                           ; 1 bytes @ 0x8
  1280                           
  1281  0028                     ___ftmul@cntr:	
  1282                           ; 1 bytes @ 0x8
  1283                           
  1284                           
  1285                           ; 1 bytes @ 0x8
  1286  0028                     	ds	1
  1287  0029                     ??_UART_TxNumber:	
  1288  0029                     ??___ftadd:	
  1289                           ; 1 bytes @ 0x9
  1290                           
  1291  0029                     LCD_SetUp@D7:	
  1292                           ; 1 bytes @ 0x9
  1293                           
  1294  0029                     UART_SetBaudRate@RegValue:	
  1295                           ; 1 bytes @ 0x9
  1296                           
  1297  0029                     ___ftmul@sign:	
  1298                           ; 1 bytes @ 0x9
  1299                           
  1300                           
  1301                           ; 1 bytes @ 0x9
  1302  0029                     	ds	1
  1303  002A                     ??_lcd_Test:	
  1304  002A                     ?_UART_Init:	
  1305                           ; 1 bytes @ 0xA
  1306                           
  1307  002A                     ?___fttol:	
  1308                           ; 1 bytes @ 0xA
  1309                           
  1310  002A                     ___fttol@f1:	
  1311                           ; 4 bytes @ 0xA
  1312                           
  1313  002A                     UART_Init@v_baudRate_u32:	
  1314                           ; 3 bytes @ 0xA
  1315                           
  1316                           
  1317                           ; 4 bytes @ 0xA
  1318  002A                     	ds	3
  1319  002D                     ___ftadd@sign:	
  1320                           
  1321                           ; 1 bytes @ 0xD
  1322  002D                     	ds	1
  1323  002E                     ??___fttol:	
  1324  002E                     ___ftadd@exp2:	
  1325                           ; 1 bytes @ 0xE
  1326                           
  1327                           
  1328                           ; 1 bytes @ 0xE
  1329  002E                     	ds	1
  1330  002F                     ___ftadd@exp1:	
  1331                           
  1332                           ; 1 bytes @ 0xF
  1333  002F                     	ds	3
  1334  0032                     ___fttol@sign1:	
  1335                           
  1336                           ; 1 bytes @ 0x12
  1337  0032                     	ds	1
  1338  0033                     ___fttol@lval:	
  1339                           
  1340                           ; 4 bytes @ 0x13
  1341  0033                     	ds	2
  1342  0035                     UART_TxNumber@a:	
  1343                           
  1344                           ; 10 bytes @ 0x15
  1345  0035                     	ds	2
  1346  0037                     ___fttol@exp1:	
  1347                           
  1348                           ; 1 bytes @ 0x17
  1349  0037                     	ds	8
  1350  003F                     _UART_TxNumber$370:	
  1351                           
  1352                           ; 2 bytes @ 0x1F
  1353  003F                     	ds	2
  1354  0041                     UART_TxNumber@v_numericSystem_u8:	
  1355                           
  1356                           ; 1 bytes @ 0x21
  1357  0041                     	ds	1
  1358  0042                     UART_TxNumber@i:	
  1359                           
  1360                           ; 1 bytes @ 0x22
  1361  0042                     	ds	1
  1362  0043                     ?_UART_TxFloatNumber:	
  1363  0043                     UART_TxFloatNumber@v_floatNumber_f32:	
  1364                           ; 1 bytes @ 0x23
  1365                           
  1366                           
  1367                           ; 3 bytes @ 0x23
  1368  0043                     	ds	3
  1369  0046                     ??_UART_TxFloatNumber:	
  1370                           
  1371                           ; 1 bytes @ 0x26
  1372  0046                     	ds	1
  1373  0047                     UART_TxFloatNumber@v_decNumber_u32:	
  1374                           
  1375                           ; 4 bytes @ 0x27
  1376  0047                     	ds	4
  1377  004B                     ?_UART_Printf:	
  1378  004B                     UART_Printf@argList:	
  1379                           ; 1 bytes @ 0x2B
  1380                           
  1381                           
  1382                           ; 2 bytes @ 0x2B
  1383  004B                     	ds	4
  1384  004F                     ??_UART_Printf:	
  1385                           
  1386                           ; 1 bytes @ 0x2F
  1387  004F                     	ds	2
  1388  0051                     UART_Printf@v_floatNum_f32:	
  1389                           
  1390                           ; 3 bytes @ 0x31
  1391  0051                     	ds	3
  1392  0054                     UART_Printf@str:	
  1393                           
  1394                           ; 1 bytes @ 0x34
  1395  0054                     	ds	1
  1396  0055                     UART_Printf@v_num_s32:	
  1397                           
  1398                           ; 4 bytes @ 0x35
  1399  0055                     	ds	4
  1400  0059                     UART_Printf@v_num_s16:	
  1401                           
  1402                           ; 2 bytes @ 0x39
  1403  0059                     	ds	2
  1404  005B                     UART_Printf@v_num_u32:	
  1405                           
  1406                           ; 4 bytes @ 0x3B
  1407  005B                     	ds	4
  1408  005F                     UART_Printf@v_num_u16:	
  1409                           
  1410                           ; 2 bytes @ 0x3F
  1411  005F                     	ds	2
  1412  0061                     UART_Printf@ptr:	
  1413                           
  1414                           ; 2 bytes @ 0x41
  1415  0061                     	ds	2
  1416  0063                     UART_Printf@ch:	
  1417                           
  1418                           ; 1 bytes @ 0x43
  1419  0063                     	ds	1
  1420  0064                     UART_Printf@v_numOfDigitsToTransmit_u8:	
  1421                           
  1422                           ; 1 bytes @ 0x44
  1423  0064                     	ds	1
  1424  0065                     UART_Printf@argp:	
  1425                           
  1426                           ; 1 bytes @ 0x45
  1427  0065                     	ds	1
  1428  0066                     ??_eeprom_Test:	
  1429                           
  1430                           ; 1 bytes @ 0x46
  1431  0066                     	ds	3
  1432  0069                     eeprom_Test@read_char:	
  1433                           
  1434                           ; 1 bytes @ 0x49
  1435  0069                     	ds	1
  1436  006A                     eeprom_Test@eeprom_address:	
  1437                           
  1438                           ; 1 bytes @ 0x4A
  1439  006A                     	ds	1
  1440  006B                     eeprom_Test@write_char:	
  1441                           
  1442                           ; 1 bytes @ 0x4B
  1443  006B                     	ds	1
  1444  006C                     ??_main:	
  1445                           
  1446                           ; 1 bytes @ 0x4C
  1447  006C                     	ds	1
  1448  006D                     main@option:	
  1449                           
  1450                           ; 1 bytes @ 0x4D
  1451  006D                     	ds	1
  1452                           
  1453                           	psect	maintext
  1454  0B90                     __pmaintext:	
  1455 ;;
  1456 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1457 ;;
  1458 ;; *************** function _main *****************
  1459 ;; Defined at:
  1460 ;;		line 59 in file "main.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  option          1   77[BANK0 ] unsigned char 
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  2  543[None  ] int 
  1467 ;; Registers used:
  1468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : B00/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1474 ;;      Params:         0       0       0       0       0
  1475 ;;      Locals:         0       1       0       0       0
  1476 ;;      Temps:          0       1       0       0       0
  1477 ;;      Totals:         0       2       0       0       0
  1478 ;;Total ram usage:        2 bytes
  1479 ;; Hardware stack levels required when called:    8
  1480 ;; This function calls:
  1481 ;;		_UART_Init
  1482 ;;		_UART_Printf
  1483 ;;		_UART_RxChar
  1484 ;;		_adc_Test
  1485 ;;		_eeprom_Test
  1486 ;;		_lcd_Test
  1487 ;;		_led_Test
  1488 ;;		_switch_Test
  1489 ;; This function is called by:
  1490 ;;		Startup code after reset
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           
  1495                           ;psect for function _main
  1496  0B90                     _main:	
  1497                           
  1498                           ;main.c: 62: char option;
  1499                           ;main.c: 64: UART_Init(9600);
  1500                           
  1501                           ;incstack = 0
  1502                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1503  0B90  3000               	movlw	0
  1504  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0B93  00AD               	movwf	UART_Init@v_baudRate_u32+3
  1507  0B94  3000               	movlw	0
  1508  0B95  00AC               	movwf	UART_Init@v_baudRate_u32+2
  1509  0B96  3025               	movlw	37
  1510  0B97  00AB               	movwf	UART_Init@v_baudRate_u32+1
  1511  0B98  3080               	movlw	128
  1512  0B99  00AA               	movwf	UART_Init@v_baudRate_u32
  1513  0B9A  160A  118A  269F  120A  158A  	fcall	_UART_Init
  1514                           
  1515                           ;main.c: 65: UART_Printf("\n\r\n\rStarter PIC test Menu\n\r 1.Led test\n\r 2.Lcd test\n\
      +                          r 3.Switch test\n\r 4.Adc Test\n\r 5.Eeprom Test \n\rSelect One of the above options");
  1516  0B9F  3000               	movlw	low (STR_1| (0+32768))
  1517  0BA0  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0BA1  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0BA2  00CB               	movwf	UART_Printf@argList
  1520  0BA3  3088               	movlw	high (STR_1| (0+32768))
  1521  0BA4  00CC               	movwf	UART_Printf@argList+1
  1522  0BA5  120A  118A  2592  120A  158A  	fcall	_UART_Printf
  1523                           
  1524                           ;main.c: 70: switch(option)
  1525  0BAA  2BC8               	goto	l3341
  1526  0BAB                     l3343:	
  1527                           ;main.c: 71: {
  1528                           ;main.c: 72: case '1':
  1529                           
  1530                           
  1531                           ;main.c: 73: led_Test();
  1532  0BAB  120A  158A  249D  120A  158A  	fcall	_led_Test
  1533                           
  1534                           ;main.c: 74: break;
  1535  0BB0  2BC8               	goto	l3341
  1536  0BB1                     l3345:	
  1537                           ;main.c: 76: case '2':
  1538                           
  1539                           
  1540                           ;main.c: 77: lcd_Test();
  1541  0BB1  120A  158A  22A4  120A  158A  	fcall	_lcd_Test
  1542                           
  1543                           ;main.c: 78: break;
  1544  0BB6  2BC8               	goto	l3341
  1545  0BB7                     l3347:	
  1546                           ;main.c: 80: case '3':
  1547                           
  1548                           
  1549                           ;main.c: 81: switch_Test();
  1550  0BB7  120A  158A  225E  120A  158A  	fcall	_switch_Test
  1551                           
  1552                           ;main.c: 82: break;
  1553  0BBC  2BC8               	goto	l3341
  1554  0BBD                     l3349:	
  1555                           ;main.c: 84: case '4':
  1556                           
  1557                           
  1558                           ;main.c: 85: adc_Test();
  1559  0BBD  160A  118A  26FE  120A  158A  	fcall	_adc_Test
  1560                           
  1561                           ;main.c: 86: break;
  1562  0BC2  2BC8               	goto	l3341
  1563  0BC3                     l3351:	
  1564                           ;main.c: 88: case '5':
  1565                           
  1566                           
  1567                           ;main.c: 89: eeprom_Test();
  1568  0BC3  120A  158A  24FC  120A  158A  	fcall	_eeprom_Test
  1569  0BC8                     l3341:	
  1570                           ;main.c: 67: while(1)
  1571                           
  1572                           ;main.c: 94: }
  1573                           
  1574                           ;main.c: 93: break;
  1575                           
  1576                           ;main.c: 92: default:
  1577                           
  1578                           ;main.c: 90: break;
  1579                           
  1580                           
  1581                           ;main.c: 68: {
  1582                           ;main.c: 69: option = UART_RxChar();
  1583  0BC8  160A  118A  2640  120A  158A  	fcall	_UART_RxChar
  1584  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  1585  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  1586  0BCF  00EC               	movwf	??_main
  1587  0BD0  086C               	movf	??_main,w
  1588  0BD1  00ED               	movwf	main@option
  1589  0BD2  1283               	bcf	3,5	;RP0=0, select bank0
  1590  0BD3  1303               	bcf	3,6	;RP1=0, select bank0
  1591  0BD4  086D               	movf	main@option,w
  1592                           
  1593                           ; Switch size 1, requested type "space"
  1594                           ; Number of cases is 5, Range of values is 49 to 53
  1595                           ; switch strategies available:
  1596                           ; Name         Instructions Cycles
  1597                           ; simple_byte           16     9 (average)
  1598                           ; direct_byte           26    11 (fixed)
  1599                           ; jumptable            263     9 (fixed)
  1600                           ;	Chosen strategy is simple_byte
  1601  0BD5  3A31               	xorlw	49	; case 49
  1602  0BD6  1903               	skipnz
  1603  0BD7  2BAB               	goto	l3343
  1604  0BD8  3A03               	xorlw	3	; case 50
  1605  0BD9  1903               	skipnz
  1606  0BDA  2BB1               	goto	l3345
  1607  0BDB  3A01               	xorlw	1	; case 51
  1608  0BDC  1903               	skipnz
  1609  0BDD  2BB7               	goto	l3347
  1610  0BDE  3A07               	xorlw	7	; case 52
  1611  0BDF  1903               	skipnz
  1612  0BE0  2BBD               	goto	l3349
  1613  0BE1  3A01               	xorlw	1	; case 53
  1614  0BE2  1903               	skipnz
  1615  0BE3  2BC3               	goto	l3351
  1616  0BE4  2BC8               	goto	l3341
  1617  0BE5  2BC8               	goto	l3341
  1618  0BE6                     __end_of_main:	
  1619                           ;main.c: 95: }
  1620                           ;main.c: 96: return (0);
  1621                           ;	Return value of _main is never used
  1622                           
  1623                           
  1624                           	psect	text1
  1625  0A5E                     __ptext1:	
  1626 ;; *************** function _switch_Test *****************
  1627 ;; Defined at:
  1628 ;;		line 156 in file "main.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;		None
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;		None
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1642 ;;      Params:         0       0       0       0       0
  1643 ;;      Locals:         0       0       0       0       0
  1644 ;;      Temps:          1       0       0       0       0
  1645 ;;      Totals:         1       0       0       0       0
  1646 ;;Total ram usage:        1 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:    2
  1649 ;; This function calls:
  1650 ;;		_GPIO_PinDirection
  1651 ;;		_GPIO_PinRead
  1652 ;;		_GPIO_PinWrite
  1653 ;;		_UART_TxString
  1654 ;; This function is called by:
  1655 ;;		_main
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           
  1660                           ;psect for function _switch_Test
  1661  0A5E                     _switch_Test:	
  1662                           
  1663                           ;main.c: 158: GPIO_PinDirection(PD_0,0x00u);
  1664                           
  1665                           ;incstack = 0
  1666                           ; Regs used in _switch_Test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1667  0A5E  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1668  0A5F  3018               	movlw	24
  1669  0A60  120A  118A  21E5  120A  158A  	fcall	_GPIO_PinDirection
  1670                           
  1671                           ;main.c: 159: GPIO_PinDirection(PD_1,0x00u);
  1672  0A65  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1673  0A66  3019               	movlw	25
  1674  0A67  120A  118A  21E5  120A  158A  	fcall	_GPIO_PinDirection
  1675                           
  1676                           ;main.c: 160: GPIO_PinDirection(PD_2,0x01u);
  1677  0A6C  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1678  0A6D  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  1679  0A6E  301A               	movlw	26
  1680  0A6F  120A  118A  21E5  120A  158A  	fcall	_GPIO_PinDirection
  1681                           
  1682                           ;main.c: 161: GPIO_PinDirection(PD_3,0x01u);
  1683  0A74  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1684  0A75  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  1685  0A76  301B               	movlw	27
  1686  0A77  120A  118A  21E5  120A  158A  	fcall	_GPIO_PinDirection
  1687                           
  1688                           ;main.c: 162: UART_TxString("\n\n\n\rPress the switches and observe the output on Leds")
      +                          ;
  1689  0A7C  30C8               	movlw	low (STR_3| (0+32768))
  1690  0A7D  00F1               	movwf	UART_TxString@ptr_string
  1691  0A7E  3088               	movlw	high (STR_3| (0+32768))
  1692  0A7F  00F2               	movwf	UART_TxString@ptr_string+1
  1693  0A80  120A  158A  214F  120A  158A  	fcall	_UART_TxString
  1694  0A85                     l3113:	
  1695                           ;main.c: 164: while(1)
  1696                           
  1697                           
  1698                           ;main.c: 165: {
  1699                           ;main.c: 166: GPIO_PinWrite(PD_0,GPIO_PinRead(PD_2));
  1700  0A85  301A               	movlw	26
  1701  0A86  120A  158A  25D2  120A  158A  	fcall	_GPIO_PinRead
  1702  0A8B  00FA               	movwf	??_switch_Test
  1703  0A8C  087A               	movf	??_switch_Test,w
  1704  0A8D  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  1705  0A8E  3018               	movlw	24
  1706  0A8F  120A  118A  22BE  120A  158A  	fcall	_GPIO_PinWrite
  1707                           
  1708                           ;main.c: 167: GPIO_PinWrite(PD_1,GPIO_PinRead(PD_3));
  1709  0A94  301B               	movlw	27
  1710  0A95  120A  158A  25D2  120A  158A  	fcall	_GPIO_PinRead
  1711  0A9A  00FA               	movwf	??_switch_Test
  1712  0A9B  087A               	movf	??_switch_Test,w
  1713  0A9C  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  1714  0A9D  3019               	movlw	25
  1715  0A9E  120A  118A  22BE  120A  158A  	fcall	_GPIO_PinWrite
  1716  0AA3  2A85               	goto	l3113
  1717  0AA4                     __end_of_switch_Test:	
  1718                           
  1719                           	psect	text2
  1720  0C9D                     __ptext2:	
  1721 ;; *************** function _led_Test *****************
  1722 ;; Defined at:
  1723 ;;		line 100 in file "main.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  pattern         2    6[COMMON] int 
  1728 ;;  i               2    4[COMMON] int 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1738 ;;      Params:         0       0       0       0       0
  1739 ;;      Locals:         4       0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0
  1741 ;;      Totals:         4       0       0       0       0
  1742 ;;Total ram usage:        4 bytes
  1743 ;; Hardware stack levels used:    1
  1744 ;; Hardware stack levels required when called:    2
  1745 ;; This function calls:
  1746 ;;		_DELAY_ms
  1747 ;; This function is called by:
  1748 ;;		_main
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           
  1753                           ;psect for function _led_Test
  1754  0C9D                     _led_Test:	
  1755                           
  1756                           ;main.c: 102: int i,pattern;
  1757                           ;main.c: 103: TRISA = 0x00u;
  1758                           
  1759                           ;incstack = 0
  1760                           ; Regs used in _led_Test: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1761  0C9D  1683               	bsf	3,5	;RP0=1, select bank1
  1762  0C9E  1303               	bcf	3,6	;RP1=0, select bank1
  1763  0C9F  0185               	clrf	5	;volatile
  1764                           
  1765                           ;main.c: 104: TRISB = 0x00u;
  1766  0CA0  0186               	clrf	6	;volatile
  1767                           
  1768                           ;main.c: 105: TRISC = 0x00u;
  1769  0CA1  0187               	clrf	7	;volatile
  1770                           
  1771                           ;main.c: 106: TRISD = 0x00u;
  1772  0CA2  0188               	clrf	8	;volatile
  1773                           
  1774                           ;main.c: 107: TRISE = 0x00u;
  1775  0CA3  0189               	clrf	9	;volatile
  1776  0CA4                     l3065:	
  1777                           ;main.c: 109: while(1)
  1778                           
  1779                           
  1780                           ;main.c: 110: {
  1781                           ;main.c: 112: PORTA = 0xff;
  1782  0CA4  30FF               	movlw	255
  1783  0CA5  1283               	bcf	3,5	;RP0=0, select bank0
  1784  0CA6  1303               	bcf	3,6	;RP1=0, select bank0
  1785  0CA7  0085               	movwf	5	;volatile
  1786                           
  1787                           ;main.c: 113: PORTB = 0xff;
  1788  0CA8  30FF               	movlw	255
  1789  0CA9  0086               	movwf	6	;volatile
  1790                           
  1791                           ;main.c: 114: PORTC = 0xff;
  1792  0CAA  30FF               	movlw	255
  1793  0CAB  0087               	movwf	7	;volatile
  1794                           
  1795                           ;main.c: 115: PORTD = 0xff;
  1796  0CAC  30FF               	movlw	255
  1797  0CAD  0088               	movwf	8	;volatile
  1798                           
  1799                           ;main.c: 116: PORTE = 0xff;
  1800  0CAE  30FF               	movlw	255
  1801  0CAF  0089               	movwf	9	;volatile
  1802                           
  1803                           ;main.c: 117: DELAY_ms(500);
  1804  0CB0  30F4               	movlw	244
  1805  0CB1  00F2               	movwf	DELAY_ms@ms_count
  1806  0CB2  3001               	movlw	1
  1807  0CB3  00F3               	movwf	DELAY_ms@ms_count+1
  1808  0CB4  160A  118A  268B  120A  158A  	fcall	_DELAY_ms
  1809                           
  1810                           ;main.c: 119: PORTA = 0x00;
  1811  0CB9  1283               	bcf	3,5	;RP0=0, select bank0
  1812  0CBA  1303               	bcf	3,6	;RP1=0, select bank0
  1813  0CBB  0185               	clrf	5	;volatile
  1814                           
  1815                           ;main.c: 120: PORTB = 0x00;
  1816  0CBC  0186               	clrf	6	;volatile
  1817                           
  1818                           ;main.c: 121: PORTC = 0x00;
  1819  0CBD  0187               	clrf	7	;volatile
  1820                           
  1821                           ;main.c: 122: PORTD = 0x00;
  1822  0CBE  0188               	clrf	8	;volatile
  1823                           
  1824                           ;main.c: 123: PORTE = 0xff;
  1825  0CBF  30FF               	movlw	255
  1826  0CC0  0089               	movwf	9	;volatile
  1827                           
  1828                           ;main.c: 124: DELAY_ms(500);
  1829  0CC1  30F4               	movlw	244
  1830  0CC2  00F2               	movwf	DELAY_ms@ms_count
  1831  0CC3  3001               	movlw	1
  1832  0CC4  00F3               	movwf	DELAY_ms@ms_count+1
  1833  0CC5  160A  118A  268B  120A  158A  	fcall	_DELAY_ms
  1834                           
  1835                           ;main.c: 126: pattern=0x01;
  1836  0CCA  3001               	movlw	1
  1837  0CCB  00F6               	movwf	led_Test@pattern
  1838  0CCC  3000               	movlw	0
  1839  0CCD  00F7               	movwf	led_Test@pattern+1
  1840                           
  1841                           ;main.c: 127: for(i=0;i<8;i++)
  1842  0CCE  01F4               	clrf	led_Test@i
  1843  0CCF  01F5               	clrf	led_Test@i+1
  1844  0CD0                     L1:	
  1845  0CD0  0875               	movf	led_Test@i+1,w
  1846  0CD1  3A80               	xorlw	128
  1847  0CD2  00FF               	movwf	127
  1848  0CD3  3080               	movlw	128
  1849  0CD4  027F               	subwf	127,w
  1850  0CD5  1D03               	skipz
  1851  0CD6  2CD9               	goto	u4345
  1852  0CD7  3008               	movlw	8
  1853  0CD8  0274               	subwf	led_Test@i,w
  1854  0CD9                     u4345:	
  1855  0CD9  1803               	btfsc	3,0
  1856  0CDA  2CA4               	goto	l3065
  1857                           
  1858                           ;main.c: 128: {
  1859                           ;main.c: 129: PORTA = pattern;
  1860  0CDB  0876               	movf	led_Test@pattern,w
  1861  0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  1862  0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  1863  0CDE  0085               	movwf	5	;volatile
  1864                           
  1865                           ;main.c: 130: PORTB = pattern;
  1866  0CDF  0876               	movf	led_Test@pattern,w
  1867  0CE0  0086               	movwf	6	;volatile
  1868                           
  1869                           ;main.c: 131: PORTC = pattern;
  1870  0CE1  0876               	movf	led_Test@pattern,w
  1871  0CE2  0087               	movwf	7	;volatile
  1872                           
  1873                           ;main.c: 132: PORTD = pattern;
  1874  0CE3  0876               	movf	led_Test@pattern,w
  1875  0CE4  0088               	movwf	8	;volatile
  1876                           
  1877                           ;main.c: 133: PORTE = pattern;
  1878  0CE5  0876               	movf	led_Test@pattern,w
  1879  0CE6  0089               	movwf	9	;volatile
  1880                           
  1881                           ;main.c: 134: pattern = pattern<<1;
  1882  0CE7  1003               	clrc
  1883  0CE8  0D76               	rlf	led_Test@pattern,w
  1884  0CE9  00F6               	movwf	led_Test@pattern
  1885  0CEA  0D77               	rlf	led_Test@pattern+1,w
  1886  0CEB  00F7               	movwf	led_Test@pattern+1
  1887                           
  1888                           ;main.c: 135: DELAY_ms(200);
  1889  0CEC  30C8               	movlw	200
  1890  0CED  00F2               	movwf	DELAY_ms@ms_count
  1891  0CEE  3000               	movlw	0
  1892  0CEF  00F3               	movwf	DELAY_ms@ms_count+1
  1893  0CF0  160A  118A  268B  120A  158A  	fcall	_DELAY_ms
  1894  0CF5  3001               	movlw	1
  1895  0CF6  07F4               	addwf	led_Test@i,f
  1896  0CF7  1803               	skipnc
  1897  0CF8  0AF5               	incf	led_Test@i+1,f
  1898  0CF9  3000               	movlw	0
  1899  0CFA  07F5               	addwf	led_Test@i+1,f
  1900  0CFB  2CD0               	goto	L1
  1901  0CFC                     __end_of_led_Test:	
  1902                           
  1903                           	psect	text3
  1904  0AA4                     __ptext3:	
  1905 ;; *************** function _lcd_Test *****************
  1906 ;; Defined at:
  1907 ;;		line 143 in file "main.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1921 ;;      Params:         0       0       0       0       0
  1922 ;;      Locals:         0       0       0       0       0
  1923 ;;      Temps:          0      10       0       0       0
  1924 ;;      Totals:         0      10       0       0       0
  1925 ;;Total ram usage:       10 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:    7
  1928 ;; This function calls:
  1929 ;;		_LCD_DisplayString
  1930 ;;		_LCD_Init
  1931 ;;		_LCD_SetUp
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function _lcd_Test
  1939  0AA4                     _lcd_Test:	
  1940                           
  1941                           ;main.c: 145: LCD_SetUp(PB_0,PB_1,PB_2,P_NC,P_NC,P_NC,P_NC,PB_4,PB_5,PB_6,PB_7);
  1942                           
  1943                           ;incstack = 0
  1944                           ; Regs used in _lcd_Test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1945  0AA4  3009               	movlw	9
  1946  0AA5  1283               	bcf	3,5	;RP0=0, select bank0
  1947  0AA6  1303               	bcf	3,6	;RP1=0, select bank0
  1948  0AA7  00AA               	movwf	??_lcd_Test
  1949  0AA8  082A               	movf	??_lcd_Test,w
  1950  0AA9  00A0               	movwf	LCD_SetUp@RW
  1951  0AAA  300A               	movlw	10
  1952  0AAB  00AB               	movwf	??_lcd_Test+1
  1953  0AAC  082B               	movf	??_lcd_Test+1,w
  1954  0AAD  00A1               	movwf	LCD_SetUp@EN
  1955  0AAE  30FF               	movlw	255
  1956  0AAF  00AC               	movwf	??_lcd_Test+2
  1957  0AB0  082C               	movf	??_lcd_Test+2,w
  1958  0AB1  00A2               	movwf	LCD_SetUp@D0
  1959  0AB2  30FF               	movlw	255
  1960  0AB3  00AD               	movwf	??_lcd_Test+3
  1961  0AB4  082D               	movf	??_lcd_Test+3,w
  1962  0AB5  00A3               	movwf	LCD_SetUp@D1
  1963  0AB6  30FF               	movlw	255
  1964  0AB7  00AE               	movwf	??_lcd_Test+4
  1965  0AB8  082E               	movf	??_lcd_Test+4,w
  1966  0AB9  00A4               	movwf	LCD_SetUp@D2
  1967  0ABA  30FF               	movlw	255
  1968  0ABB  00AF               	movwf	??_lcd_Test+5
  1969  0ABC  082F               	movf	??_lcd_Test+5,w
  1970  0ABD  00A5               	movwf	LCD_SetUp@D3
  1971  0ABE  300C               	movlw	12
  1972  0ABF  00B0               	movwf	??_lcd_Test+6
  1973  0AC0  0830               	movf	??_lcd_Test+6,w
  1974  0AC1  00A6               	movwf	LCD_SetUp@D4
  1975  0AC2  300D               	movlw	13
  1976  0AC3  00B1               	movwf	??_lcd_Test+7
  1977  0AC4  0831               	movf	??_lcd_Test+7,w
  1978  0AC5  00A7               	movwf	LCD_SetUp@D5
  1979  0AC6  300E               	movlw	14
  1980  0AC7  00B2               	movwf	??_lcd_Test+8
  1981  0AC8  0832               	movf	??_lcd_Test+8,w
  1982  0AC9  00A8               	movwf	LCD_SetUp@D6
  1983  0ACA  300F               	movlw	15
  1984  0ACB  00B3               	movwf	??_lcd_Test+9
  1985  0ACC  0833               	movf	??_lcd_Test+9,w
  1986  0ACD  00A9               	movwf	LCD_SetUp@D7
  1987  0ACE  3008               	movlw	8
  1988  0ACF  120A  118A  2114  120A  158A  	fcall	_LCD_SetUp
  1989                           
  1990                           ;main.c: 146: LCD_Init(2,16);
  1991  0AD4  3010               	movlw	16
  1992  0AD5  1283               	bcf	3,5	;RP0=0, select bank0
  1993  0AD6  1303               	bcf	3,6	;RP1=0, select bank0
  1994  0AD7  00AA               	movwf	??_lcd_Test
  1995  0AD8  082A               	movf	??_lcd_Test,w
  1996  0AD9  00A3               	movwf	LCD_Init@v_MaxCharsPerLine_u8
  1997  0ADA  3002               	movlw	2
  1998  0ADB  120A  158A  233B  120A  158A  	fcall	_LCD_Init
  1999                           
  2000                           ;main.c: 147: LCD_DisplayString("Explore\n Starter Pic...");
  2001  0AE0  30FE               	movlw	low (STR_2| (0+32768))
  2002  0AE1  1283               	bcf	3,5	;RP0=0, select bank0
  2003  0AE2  1303               	bcf	3,6	;RP1=0, select bank0
  2004  0AE3  00A4               	movwf	LCD_DisplayString@ptr_stringPointer_u8
  2005  0AE4  3088               	movlw	high (STR_2| (0+32768))
  2006  0AE5  00A5               	movwf	LCD_DisplayString@ptr_stringPointer_u8+1
  2007  0AE6  160A  118A  2783  120A  158A  	fcall	_LCD_DisplayString
  2008  0AEB                     l566:	
  2009                           ;main.c: 149: while(1);
  2010                           
  2011  0AEB  2AEB               	goto	l566
  2012  0AEC                     __end_of_lcd_Test:	
  2013                           
  2014                           	psect	text4
  2015  0114                     __ptext4:	
  2016 ;; *************** function _LCD_SetUp *****************
  2017 ;; Defined at:
  2018 ;;		line 135 in file "../00-libfiles/lcd.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  RS              1    wreg     enum E33
  2021 ;;  RW              1    0[BANK0 ] enum E33
  2022 ;;  EN              1    1[BANK0 ] enum E33
  2023 ;;  D0              1    2[BANK0 ] enum E33
  2024 ;;  D1              1    3[BANK0 ] enum E33
  2025 ;;  D2              1    4[BANK0 ] enum E33
  2026 ;;  D3              1    5[BANK0 ] enum E33
  2027 ;;  D4              1    6[BANK0 ] enum E33
  2028 ;;  D5              1    7[BANK0 ] enum E33
  2029 ;;  D6              1    8[BANK0 ] enum E33
  2030 ;;  D7              1    9[BANK0 ] enum E33
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  RS              1    6[COMMON] enum E33
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2042 ;;      Params:         0      10       0       0       0
  2043 ;;      Locals:         1       0       0       0       0
  2044 ;;      Temps:          1       0       0       0       0
  2045 ;;      Totals:         2      10       0       0       0
  2046 ;;Total ram usage:       12 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    1
  2049 ;; This function calls:
  2050 ;;		_GPIO_PinDirection
  2051 ;; This function is called by:
  2052 ;;		_lcd_Test
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           
  2057                           ;psect for function _LCD_SetUp
  2058  0114                     _LCD_SetUp:	
  2059                           
  2060                           ;incstack = 0
  2061                           ; Regs used in _LCD_SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2062                           ;LCD_SetUp@RS stored from wreg
  2063  0114  00F6               	movwf	LCD_SetUp@RS
  2064                           
  2065                           ;lcd.c: 148: LCDConfig.RS = RS;
  2066  0115  0876               	movf	LCD_SetUp@RS,w
  2067  0116  00F5               	movwf	??_LCD_SetUp
  2068  0117  0875               	movf	??_LCD_SetUp,w
  2069  0118  1683               	bsf	3,5	;RP0=1, select bank1
  2070  0119  1303               	bcf	3,6	;RP1=0, select bank1
  2071  011A  00A3               	movwf	(_LCDConfig^(0+128)+3)
  2072                           
  2073                           ;lcd.c: 149: LCDConfig.RW = RW;
  2074  011B  1283               	bcf	3,5	;RP0=0, select bank0
  2075  011C  1303               	bcf	3,6	;RP1=0, select bank0
  2076  011D  0820               	movf	LCD_SetUp@RW,w
  2077  011E  00F5               	movwf	??_LCD_SetUp
  2078  011F  0875               	movf	??_LCD_SetUp,w
  2079  0120  1683               	bsf	3,5	;RP0=1, select bank1
  2080  0121  1303               	bcf	3,6	;RP1=0, select bank1
  2081  0122  00A4               	movwf	(_LCDConfig^(0+128)+4)
  2082                           
  2083                           ;lcd.c: 150: LCDConfig.EN = EN;
  2084  0123  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0124  1303               	bcf	3,6	;RP1=0, select bank0
  2086  0125  0821               	movf	LCD_SetUp@EN,w
  2087  0126  00F5               	movwf	??_LCD_SetUp
  2088  0127  0875               	movf	??_LCD_SetUp,w
  2089  0128  1683               	bsf	3,5	;RP0=1, select bank1
  2090  0129  1303               	bcf	3,6	;RP1=0, select bank1
  2091  012A  00A5               	movwf	(_LCDConfig^(0+128)+5)
  2092                           
  2093                           ;lcd.c: 152: LCDConfig.D0 = D0;
  2094  012B  1283               	bcf	3,5	;RP0=0, select bank0
  2095  012C  1303               	bcf	3,6	;RP1=0, select bank0
  2096  012D  0822               	movf	LCD_SetUp@D0,w
  2097  012E  00F5               	movwf	??_LCD_SetUp
  2098  012F  0875               	movf	??_LCD_SetUp,w
  2099  0130  1683               	bsf	3,5	;RP0=1, select bank1
  2100  0131  1303               	bcf	3,6	;RP1=0, select bank1
  2101  0132  00A6               	movwf	(_LCDConfig^(0+128)+6)
  2102                           
  2103                           ;lcd.c: 153: LCDConfig.D1 = D1;
  2104  0133  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0134  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0135  0823               	movf	LCD_SetUp@D1,w
  2107  0136  00F5               	movwf	??_LCD_SetUp
  2108  0137  0875               	movf	??_LCD_SetUp,w
  2109  0138  1683               	bsf	3,5	;RP0=1, select bank1
  2110  0139  1303               	bcf	3,6	;RP1=0, select bank1
  2111  013A  00A7               	movwf	(_LCDConfig^(0+128)+7)
  2112                           
  2113                           ;lcd.c: 154: LCDConfig.D2 = D2;
  2114  013B  1283               	bcf	3,5	;RP0=0, select bank0
  2115  013C  1303               	bcf	3,6	;RP1=0, select bank0
  2116  013D  0824               	movf	LCD_SetUp@D2,w
  2117  013E  00F5               	movwf	??_LCD_SetUp
  2118  013F  0875               	movf	??_LCD_SetUp,w
  2119  0140  1683               	bsf	3,5	;RP0=1, select bank1
  2120  0141  1303               	bcf	3,6	;RP1=0, select bank1
  2121  0142  00A8               	movwf	(_LCDConfig^(0+128)+8)
  2122                           
  2123                           ;lcd.c: 155: LCDConfig.D3 = D3;
  2124  0143  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0144  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0145  0825               	movf	LCD_SetUp@D3,w
  2127  0146  00F5               	movwf	??_LCD_SetUp
  2128  0147  0875               	movf	??_LCD_SetUp,w
  2129  0148  1683               	bsf	3,5	;RP0=1, select bank1
  2130  0149  1303               	bcf	3,6	;RP1=0, select bank1
  2131  014A  00A9               	movwf	(_LCDConfig^(0+128)+9)
  2132                           
  2133                           ;lcd.c: 156: LCDConfig.D4 = D4;
  2134  014B  1283               	bcf	3,5	;RP0=0, select bank0
  2135  014C  1303               	bcf	3,6	;RP1=0, select bank0
  2136  014D  0826               	movf	LCD_SetUp@D4,w
  2137  014E  00F5               	movwf	??_LCD_SetUp
  2138  014F  0875               	movf	??_LCD_SetUp,w
  2139  0150  1683               	bsf	3,5	;RP0=1, select bank1
  2140  0151  1303               	bcf	3,6	;RP1=0, select bank1
  2141  0152  00AA               	movwf	(_LCDConfig^(0+128)+10)
  2142                           
  2143                           ;lcd.c: 157: LCDConfig.D5 = D5;
  2144  0153  1283               	bcf	3,5	;RP0=0, select bank0
  2145  0154  1303               	bcf	3,6	;RP1=0, select bank0
  2146  0155  0827               	movf	LCD_SetUp@D5,w
  2147  0156  00F5               	movwf	??_LCD_SetUp
  2148  0157  0875               	movf	??_LCD_SetUp,w
  2149  0158  1683               	bsf	3,5	;RP0=1, select bank1
  2150  0159  1303               	bcf	3,6	;RP1=0, select bank1
  2151  015A  00AB               	movwf	(_LCDConfig^(0+128)+11)
  2152                           
  2153                           ;lcd.c: 158: LCDConfig.D6 = D6;
  2154  015B  1283               	bcf	3,5	;RP0=0, select bank0
  2155  015C  1303               	bcf	3,6	;RP1=0, select bank0
  2156  015D  0828               	movf	LCD_SetUp@D6,w
  2157  015E  00F5               	movwf	??_LCD_SetUp
  2158  015F  0875               	movf	??_LCD_SetUp,w
  2159  0160  1683               	bsf	3,5	;RP0=1, select bank1
  2160  0161  1303               	bcf	3,6	;RP1=0, select bank1
  2161  0162  00AC               	movwf	(_LCDConfig^(0+128)+12)
  2162                           
  2163                           ;lcd.c: 159: LCDConfig.D7 = D7;
  2164  0163  1283               	bcf	3,5	;RP0=0, select bank0
  2165  0164  1303               	bcf	3,6	;RP1=0, select bank0
  2166  0165  0829               	movf	LCD_SetUp@D7,w
  2167  0166  00F5               	movwf	??_LCD_SetUp
  2168  0167  0875               	movf	??_LCD_SetUp,w
  2169  0168  1683               	bsf	3,5	;RP0=1, select bank1
  2170  0169  1303               	bcf	3,6	;RP1=0, select bank1
  2171  016A  00AD               	movwf	(_LCDConfig^(0+128)+13)
  2172                           
  2173                           ;lcd.c: 162: if((D0 == P_NC) || (D1 == P_NC) || (D2 == P_NC) || (D3 == P_NC))
  2174  016B  1283               	bcf	3,5	;RP0=0, select bank0
  2175  016C  1303               	bcf	3,6	;RP1=0, select bank0
  2176  016D  0A22               	incf	LCD_SetUp@D0,w
  2177  016E  1903               	btfsc	3,2
  2178  016F  2978               	goto	l2811
  2179  0170  0A23               	incf	LCD_SetUp@D1,w
  2180  0171  1903               	btfsc	3,2
  2181  0172  2978               	goto	l2811
  2182  0173  0A24               	incf	LCD_SetUp@D2,w
  2183  0174  1D03               	btfss	3,2
  2184  0175  0A25               	incf	LCD_SetUp@D3,w
  2185  0176  1D03               	btfss	3,2
  2186  0177  297F               	goto	l2813
  2187  0178                     l2811:	
  2188                           
  2189                           ;lcd.c: 163: {
  2190                           ;lcd.c: 164: LCDConfig.v_LcdMode_U8 = 4;
  2191  0178  3004               	movlw	4
  2192  0179  00F5               	movwf	??_LCD_SetUp
  2193  017A  0875               	movf	??_LCD_SetUp,w
  2194  017B  1683               	bsf	3,5	;RP0=1, select bank1
  2195  017C  1303               	bcf	3,6	;RP1=0, select bank1
  2196  017D  00A2               	movwf	(_LCDConfig^(0+128)+2)
  2197                           
  2198                           ;lcd.c: 165: }
  2199  017E  29A9               	goto	l2823
  2200  017F                     l2813:	
  2201                           
  2202                           ;lcd.c: 166: else
  2203                           ;lcd.c: 167: {
  2204                           ;lcd.c: 168: LCDConfig.v_LcdMode_U8 = 8;
  2205  017F  3008               	movlw	8
  2206  0180  00F5               	movwf	??_LCD_SetUp
  2207  0181  0875               	movf	??_LCD_SetUp,w
  2208  0182  1683               	bsf	3,5	;RP0=1, select bank1
  2209  0183  1303               	bcf	3,6	;RP1=0, select bank1
  2210  0184  00A2               	movwf	(_LCDConfig^(0+128)+2)
  2211                           
  2212                           ;lcd.c: 169: GPIO_PinDirection(D0,0x00u);
  2213  0185  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2214  0186  1283               	bcf	3,5	;RP0=0, select bank0
  2215  0187  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0188  0822               	movf	LCD_SetUp@D0,w
  2217  0189  120A  118A  21E5  120A  118A  	fcall	_GPIO_PinDirection
  2218                           
  2219                           ;lcd.c: 170: GPIO_PinDirection(D1,0x00u);
  2220  018E  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2221  018F  1283               	bcf	3,5	;RP0=0, select bank0
  2222  0190  1303               	bcf	3,6	;RP1=0, select bank0
  2223  0191  0823               	movf	LCD_SetUp@D1,w
  2224  0192  120A  118A  21E5  120A  118A  	fcall	_GPIO_PinDirection
  2225                           
  2226                           ;lcd.c: 171: GPIO_PinDirection(D2,0x00u);
  2227  0197  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2228  0198  1283               	bcf	3,5	;RP0=0, select bank0
  2229  0199  1303               	bcf	3,6	;RP1=0, select bank0
  2230  019A  0824               	movf	LCD_SetUp@D2,w
  2231  019B  120A  118A  21E5  120A  118A  	fcall	_GPIO_PinDirection
  2232                           
  2233                           ;lcd.c: 172: GPIO_PinDirection(D3,0x00u);
  2234  01A0  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2235  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  2236  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  2237  01A3  0825               	movf	LCD_SetUp@D3,w
  2238  01A4  120A  118A  21E5  120A  118A  	fcall	_GPIO_PinDirection
  2239  01A9                     l2823:	
  2240                           
  2241                           ;lcd.c: 173: }
  2242                           ;lcd.c: 176: GPIO_PinDirection(RS,0x00u);
  2243  01A9  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2244  01AA  0876               	movf	LCD_SetUp@RS,w
  2245  01AB  120A  118A  21E5  120A  118A  	fcall	_GPIO_PinDirection
  2246                           
  2247                           ;lcd.c: 177: GPIO_PinDirection(RW,0x00u);
  2248  01B0  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2249  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2250  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2251  01B3  0820               	movf	LCD_SetUp@RW,w
  2252  01B4  120A  118A  21E5  120A  118A  	fcall	_GPIO_PinDirection
  2253                           
  2254                           ;lcd.c: 178: GPIO_PinDirection(EN,0x00u);
  2255  01B9  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2256  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2257  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2258  01BC  0821               	movf	LCD_SetUp@EN,w
  2259  01BD  120A  118A  21E5  120A  118A  	fcall	_GPIO_PinDirection
  2260                           
  2261                           ;lcd.c: 180: GPIO_PinDirection(D4,0x00u);
  2262  01C2  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2263  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2264  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2265  01C5  0826               	movf	LCD_SetUp@D4,w
  2266  01C6  120A  118A  21E5  120A  118A  	fcall	_GPIO_PinDirection
  2267                           
  2268                           ;lcd.c: 181: GPIO_PinDirection(D5,0x00u);
  2269  01CB  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2270  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  2271  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  2272  01CE  0827               	movf	LCD_SetUp@D5,w
  2273  01CF  120A  118A  21E5  120A  118A  	fcall	_GPIO_PinDirection
  2274                           
  2275                           ;lcd.c: 182: GPIO_PinDirection(D6,0x00u);
  2276  01D4  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2277  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2278  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2279  01D7  0828               	movf	LCD_SetUp@D6,w
  2280  01D8  120A  118A  21E5  120A  118A  	fcall	_GPIO_PinDirection
  2281                           
  2282                           ;lcd.c: 183: GPIO_PinDirection(D7,0x00u);
  2283  01DD  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2284  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  2285  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  2286  01E0  0829               	movf	LCD_SetUp@D7,w
  2287  01E1  120A  118A  21E5   	fcall	_GPIO_PinDirection
  2288  01E4  0008               	return
  2289  01E5                     __end_of_LCD_SetUp:	
  2290                           
  2291                           	psect	text5
  2292  0B3B                     __ptext5:	
  2293 ;; *************** function _LCD_Init *****************
  2294 ;; Defined at:
  2295 ;;		line 198 in file "../00-libfiles/lcd.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  v_lcdNoOfLin    1    wreg     unsigned char 
  2298 ;;  v_MaxCharsPe    1    3[BANK0 ] unsigned char 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  v_lcdNoOfLin    1    5[BANK0 ] unsigned char 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2310 ;;      Params:         0       1       0       0       0
  2311 ;;      Locals:         0       1       0       0       0
  2312 ;;      Temps:          0       1       0       0       0
  2313 ;;      Totals:         0       3       0       0       0
  2314 ;;Total ram usage:        3 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:    6
  2317 ;; This function calls:
  2318 ;;		_DELAY_ms
  2319 ;;		_LCD_Clear
  2320 ;;		_LCD_CmdWrite
  2321 ;;		_lcd_Reset
  2322 ;; This function is called by:
  2323 ;;		_lcd_Test
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           
  2328                           ;psect for function _LCD_Init
  2329  0B3B                     _LCD_Init:	
  2330                           
  2331                           ;incstack = 0
  2332                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2333                           ;LCD_Init@v_lcdNoOfLines_u8 stored from wreg
  2334  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  2335  0B3C  1303               	bcf	3,6	;RP1=0, select bank0
  2336  0B3D  00A5               	movwf	LCD_Init@v_lcdNoOfLines_u8
  2337                           
  2338                           ;lcd.c: 202: LCDConfig.v_MaxSupportedChars_U8 = v_MaxCharsPerLine_u8;
  2339  0B3E  0823               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  2340  0B3F  00A4               	movwf	??_LCD_Init
  2341  0B40  0824               	movf	??_LCD_Init,w
  2342  0B41  1683               	bsf	3,5	;RP0=1, select bank1
  2343  0B42  1303               	bcf	3,6	;RP1=0, select bank1
  2344  0B43  00A1               	movwf	(_LCDConfig^(0+128)+1)
  2345                           
  2346                           ;lcd.c: 203: LCDConfig.v_MaxSupportedLines_U8 = v_lcdNoOfLines_u8;
  2347  0B44  1283               	bcf	3,5	;RP0=0, select bank0
  2348  0B45  1303               	bcf	3,6	;RP1=0, select bank0
  2349  0B46  0825               	movf	LCD_Init@v_lcdNoOfLines_u8,w
  2350  0B47  00A4               	movwf	??_LCD_Init
  2351  0B48  0824               	movf	??_LCD_Init,w
  2352  0B49  1683               	bsf	3,5	;RP0=1, select bank1
  2353  0B4A  1303               	bcf	3,6	;RP1=0, select bank1
  2354  0B4B  00A0               	movwf	_LCDConfig^(0+128)
  2355                           
  2356                           ;lcd.c: 204: if(v_lcdNoOfLines_u8 > 0x02)
  2357  0B4C  3003               	movlw	3
  2358  0B4D  1283               	bcf	3,5	;RP0=0, select bank0
  2359  0B4E  1303               	bcf	3,6	;RP1=0, select bank0
  2360  0B4F  0225               	subwf	LCD_Init@v_lcdNoOfLines_u8,w
  2361  0B50  1C03               	skipc
  2362  0B51  2B64               	goto	l2841
  2363                           
  2364                           ;lcd.c: 205: {
  2365                           ;lcd.c: 206: ARR_LcdLineNumAddress_U8[0x02] = 0x90 + (v_MaxCharsPerLine_u8 & 0x0fu);
  2366  0B52  0823               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  2367  0B53  390F               	andlw	15
  2368  0B54  3E90               	addlw	144
  2369  0B55  00A4               	movwf	??_LCD_Init
  2370  0B56  0824               	movf	??_LCD_Init,w
  2371  0B57  1683               	bsf	3,5	;RP0=1, select bank1
  2372  0B58  1303               	bcf	3,6	;RP1=0, select bank1
  2373  0B59  00B0               	movwf	(_ARR_LcdLineNumAddress_U8^(0+128)+2)
  2374                           
  2375                           ;lcd.c: 207: ARR_LcdLineNumAddress_U8[0x03] = 0xd0 + (v_MaxCharsPerLine_u8 & 0x0fu);
  2376  0B5A  1283               	bcf	3,5	;RP0=0, select bank0
  2377  0B5B  1303               	bcf	3,6	;RP1=0, select bank0
  2378  0B5C  0823               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  2379  0B5D  390F               	andlw	15
  2380  0B5E  3ED0               	addlw	208
  2381  0B5F  00A4               	movwf	??_LCD_Init
  2382  0B60  0824               	movf	??_LCD_Init,w
  2383  0B61  1683               	bsf	3,5	;RP0=1, select bank1
  2384  0B62  1303               	bcf	3,6	;RP1=0, select bank1
  2385  0B63  00B1               	movwf	(_ARR_LcdLineNumAddress_U8^(0+128)+3)
  2386  0B64                     l2841:	
  2387                           
  2388                           ;lcd.c: 208: }
  2389                           ;lcd.c: 210: DELAY_ms(100);
  2390  0B64  3064               	movlw	100
  2391  0B65  00F2               	movwf	DELAY_ms@ms_count
  2392  0B66  3000               	movlw	0
  2393  0B67  00F3               	movwf	DELAY_ms@ms_count+1
  2394  0B68  160A  118A  268B  120A  158A  	fcall	_DELAY_ms
  2395                           
  2396                           ;lcd.c: 212: if(LCDConfig.v_LcdMode_U8 == 8u)
  2397  0B6D  3008               	movlw	8
  2398  0B6E  1683               	bsf	3,5	;RP0=1, select bank1
  2399  0B6F  1303               	bcf	3,6	;RP1=0, select bank1
  2400  0B70  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  2401  0B71  1D03               	btfss	3,2
  2402  0B72  2B75               	goto	l2847
  2403                           
  2404                           ;lcd.c: 213: {
  2405                           ;lcd.c: 214: LCD_CmdWrite(0x38u);
  2406  0B73  3038               	movlw	56
  2407  0B74  2B81               	goto	L2
  2408  0B75                     l2847:	
  2409                           ;lcd.c: 215: }
  2410                           
  2411                           
  2412                           ;lcd.c: 216: else if(LCDConfig.v_LcdMode_U8 == 4u)
  2413  0B75  3004               	movlw	4
  2414  0B76  1683               	bsf	3,5	;RP0=1, select bank1
  2415  0B77  1303               	bcf	3,6	;RP1=0, select bank1
  2416  0B78  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  2417  0B79  1D03               	btfss	3,2
  2418  0B7A  2B86               	goto	l217
  2419                           
  2420                           ;lcd.c: 217: {
  2421                           ;lcd.c: 218: lcd_Reset();
  2422  0B7B  120A  158A  22EC  120A  158A  	fcall	_lcd_Reset
  2423                           
  2424                           ;lcd.c: 219: LCD_CmdWrite(0x28u);
  2425  0B80  3028               	movlw	40
  2426  0B81                     L2:	
  2427  0B81  120A  158A  21A0  120A  158A  	fcall	_LCD_CmdWrite
  2428  0B86                     l217:	
  2429                           
  2430                           ;lcd.c: 220: }
  2431                           ;lcd.c: 222: LCD_CmdWrite(0x0Eu);
  2432  0B86  300E               	movlw	14
  2433  0B87  120A  158A  21A0  120A  158A  	fcall	_LCD_CmdWrite
  2434                           
  2435                           ;lcd.c: 223: LCD_Clear();
  2436  0B8C  160A  118A  266D   	fcall	_LCD_Clear
  2437  0B8F  0008               	return
  2438  0B90                     __end_of_LCD_Init:	
  2439                           
  2440                           	psect	text6
  2441  0AEC                     __ptext6:	
  2442 ;; *************** function _lcd_Reset *****************
  2443 ;; Defined at:
  2444 ;;		line 913 in file "../00-libfiles/lcd.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;		None
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2458 ;;      Params:         0       0       0       0       0
  2459 ;;      Locals:         0       0       0       0       0
  2460 ;;      Temps:          0       0       0       0       0
  2461 ;;      Totals:         0       0       0       0       0
  2462 ;;Total ram usage:        0 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    2
  2465 ;; This function calls:
  2466 ;;		_DELAY_ms
  2467 ;;		_DELAY_us
  2468 ;;		_lcd_SendCmdSignals
  2469 ;;		_lcd_SendHigherNibble
  2470 ;; This function is called by:
  2471 ;;		_LCD_Init
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           
  2476                           ;psect for function _lcd_Reset
  2477  0AEC                     _lcd_Reset:	
  2478                           
  2479                           ;lcd.c: 916: lcd_SendHigherNibble(0x30);
  2480                           
  2481                           ;incstack = 0
  2482                           ; Regs used in _lcd_Reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2483  0AEC  3030               	movlw	48
  2484  0AED  120A  158A  221E  120A  158A  	fcall	_lcd_SendHigherNibble
  2485                           
  2486                           ;lcd.c: 917: lcd_SendCmdSignals();
  2487  0AF2  160A  118A  27D3  120A  158A  	fcall	_lcd_SendCmdSignals
  2488                           
  2489                           ;lcd.c: 918: DELAY_ms(100);
  2490  0AF7  3064               	movlw	100
  2491  0AF8  00F2               	movwf	DELAY_ms@ms_count
  2492  0AF9  3000               	movlw	0
  2493  0AFA  00F3               	movwf	DELAY_ms@ms_count+1
  2494  0AFB  160A  118A  268B  120A  158A  	fcall	_DELAY_ms
  2495                           
  2496                           ;lcd.c: 919: lcd_SendHigherNibble(0x30);
  2497  0B00  3030               	movlw	48
  2498  0B01  120A  158A  221E  120A  158A  	fcall	_lcd_SendHigherNibble
  2499                           
  2500                           ;lcd.c: 920: lcd_SendCmdSignals();
  2501  0B06  160A  118A  27D3  120A  158A  	fcall	_lcd_SendCmdSignals
  2502                           
  2503                           ;lcd.c: 921: DELAY_us(200);
  2504  0B0B  30C8               	movlw	200
  2505  0B0C  00F0               	movwf	DELAY_us@us_count
  2506  0B0D  3000               	movlw	0
  2507  0B0E  00F1               	movwf	DELAY_us@us_count+1
  2508  0B0F  160A  118A  2662  120A  158A  	fcall	_DELAY_us
  2509                           
  2510                           ;lcd.c: 922: lcd_SendHigherNibble(0x30);
  2511  0B14  3030               	movlw	48
  2512  0B15  120A  158A  221E  120A  158A  	fcall	_lcd_SendHigherNibble
  2513                           
  2514                           ;lcd.c: 923: lcd_SendCmdSignals();
  2515  0B1A  160A  118A  27D3  120A  158A  	fcall	_lcd_SendCmdSignals
  2516                           
  2517                           ;lcd.c: 924: DELAY_us(200);
  2518  0B1F  30C8               	movlw	200
  2519  0B20  00F0               	movwf	DELAY_us@us_count
  2520  0B21  3000               	movlw	0
  2521  0B22  00F1               	movwf	DELAY_us@us_count+1
  2522  0B23  160A  118A  2662  120A  158A  	fcall	_DELAY_us
  2523                           
  2524                           ;lcd.c: 925: lcd_SendHigherNibble(0x20);
  2525  0B28  3020               	movlw	32
  2526  0B29  120A  158A  221E  120A  158A  	fcall	_lcd_SendHigherNibble
  2527                           
  2528                           ;lcd.c: 926: lcd_SendCmdSignals();
  2529  0B2E  160A  118A  27D3  120A  158A  	fcall	_lcd_SendCmdSignals
  2530                           
  2531                           ;lcd.c: 927: DELAY_us(200);
  2532  0B33  30C8               	movlw	200
  2533  0B34  00F0               	movwf	DELAY_us@us_count
  2534  0B35  3000               	movlw	0
  2535  0B36  00F1               	movwf	DELAY_us@us_count+1
  2536  0B37  160A  118A  2662   	fcall	_DELAY_us
  2537  0B3A  0008               	return
  2538  0B3B                     __end_of_lcd_Reset:	
  2539                           
  2540                           	psect	text7
  2541  166D                     __ptext7:	
  2542 ;; *************** function _LCD_Clear *****************
  2543 ;; Defined at:
  2544 ;;		line 237 in file "../00-libfiles/lcd.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;		None
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;		None
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2558 ;;      Params:         0       0       0       0       0
  2559 ;;      Locals:         0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0
  2561 ;;      Totals:         0       0       0       0       0
  2562 ;;Total ram usage:        0 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    5
  2565 ;; This function calls:
  2566 ;;		_LCD_CmdWrite
  2567 ;;		_LCD_GoToLine
  2568 ;; This function is called by:
  2569 ;;		_LCD_Init
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           
  2574                           ;psect for function _LCD_Clear
  2575  166D                     _LCD_Clear:	
  2576                           
  2577                           ;lcd.c: 239: LCD_CmdWrite(0x01u);
  2578                           
  2579                           ;incstack = 0
  2580                           ; Regs used in _LCD_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2581  166D  3001               	movlw	1
  2582  166E  120A  158A  21A0  160A  118A  	fcall	_LCD_CmdWrite
  2583                           
  2584                           ;lcd.c: 240: LCD_GoToLine(0x00);
  2585  1673  3000               	movlw	0
  2586  1674  160A  118A  26E5   	fcall	_LCD_GoToLine
  2587  1677  0008               	return
  2588  1678                     __end_of_LCD_Clear:	
  2589                           
  2590                           	psect	text8
  2591  16E5                     __ptext8:	
  2592 ;; *************** function _LCD_GoToLine *****************
  2593 ;; Defined at:
  2594 ;;		line 265 in file "../00-libfiles/lcd.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  v_lineNumber    1    wreg     unsigned char 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  v_lineNumber    1    2[BANK0 ] unsigned char 
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1    wreg      void 
  2601 ;; Registers used:
  2602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2608 ;;      Params:         0       0       0       0       0
  2609 ;;      Locals:         0       1       0       0       0
  2610 ;;      Temps:          0       1       0       0       0
  2611 ;;      Totals:         0       2       0       0       0
  2612 ;;Total ram usage:        2 bytes
  2613 ;; Hardware stack levels used:    1
  2614 ;; Hardware stack levels required when called:    4
  2615 ;; This function calls:
  2616 ;;		_LCD_CmdWrite
  2617 ;; This function is called by:
  2618 ;;		_LCD_Clear
  2619 ;;		_LCD_ScrollMessage
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           
  2624                           ;psect for function _LCD_GoToLine
  2625  16E5                     _LCD_GoToLine:	
  2626                           
  2627                           ;incstack = 0
  2628                           ; Regs used in _LCD_GoToLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2629                           ;LCD_GoToLine@v_lineNumber_u8 stored from wreg
  2630  16E5  1283               	bcf	3,5	;RP0=0, select bank0
  2631  16E6  1303               	bcf	3,6	;RP1=0, select bank0
  2632  16E7  00A2               	movwf	LCD_GoToLine@v_lineNumber_u8
  2633                           
  2634                           ;lcd.c: 267: if(v_lineNumber_u8 < LCDConfig.v_MaxSupportedLines_U8)
  2635  16E8  1683               	bsf	3,5	;RP0=1, select bank1
  2636  16E9  1303               	bcf	3,6	;RP1=0, select bank1
  2637  16EA  0820               	movf	_LCDConfig^(0+128),w
  2638  16EB  1283               	bcf	3,5	;RP0=0, select bank0
  2639  16EC  1303               	bcf	3,6	;RP1=0, select bank0
  2640  16ED  0222               	subwf	LCD_GoToLine@v_lineNumber_u8,w
  2641  16EE  1803               	skipnc
  2642  16EF  0008               	return
  2643                           
  2644                           ;lcd.c: 268: {
  2645                           ;lcd.c: 271: v_LcdTrackCursorPos_U8 = 0x00;
  2646  16F0  01EE               	clrf	_v_LcdTrackCursorPos_U8
  2647                           
  2648                           ;lcd.c: 272: v_LcdTrackLineNum_U8 = v_lineNumber_u8;
  2649  16F1  0822               	movf	LCD_GoToLine@v_lineNumber_u8,w
  2650  16F2  00A1               	movwf	??_LCD_GoToLine
  2651  16F3  0821               	movf	??_LCD_GoToLine,w
  2652  16F4  00EF               	movwf	_v_LcdTrackLineNum_U8
  2653                           
  2654                           ;lcd.c: 273: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_lineNumber_u8]);
  2655  16F5  0822               	movf	LCD_GoToLine@v_lineNumber_u8,w
  2656  16F6  3EAE               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  2657  16F7  0084               	movwf	4
  2658  16F8  1383               	bcf	3,7	;select IRP bank1
  2659  16F9  0800               	movf	0,w
  2660  16FA  120A  158A  21A0   	fcall	_LCD_CmdWrite
  2661  16FD  0008               	return
  2662  16FE                     __end_of_LCD_GoToLine:	
  2663                           
  2664                           	psect	text9
  2665  1783                     __ptext9:	
  2666 ;; *************** function _LCD_DisplayString *****************
  2667 ;; Defined at:
  2668 ;;		line 427 in file "../00-libfiles/lcd.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  ptr_stringPo    2    4[BANK0 ] PTR const unsigned char 
  2671 ;;		 -> STR_2(24), 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2683 ;;      Params:         0       2       0       0       0
  2684 ;;      Locals:         0       0       0       0       0
  2685 ;;      Temps:          0       0       0       0       0
  2686 ;;      Totals:         0       2       0       0       0
  2687 ;;Total ram usage:        2 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    6
  2690 ;; This function calls:
  2691 ;;		_LCD_DisplayChar
  2692 ;; This function is called by:
  2693 ;;		_lcd_Test
  2694 ;;		_LCD_Printf
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           
  2699                           ;psect for function _LCD_DisplayString
  2700  1783                     _LCD_DisplayString:	
  2701  1783                     l2857:	
  2702                           ;lcd.c: 429: while((*ptr_stringPointer_u8)!=0)
  2703                           
  2704                           ;incstack = 0
  2705 ;; using string table level
  2706                           ; Regs used in _LCD_DisplayString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2707                           
  2708  1783  1283               	bcf	3,5	;RP0=0, select bank0
  2709  1784  1303               	bcf	3,6	;RP1=0, select bank0
  2710  1785  0825               	movf	LCD_DisplayString@ptr_stringPointer_u8+1,w
  2711  1786  00FF               	movwf	127
  2712  1787  0824               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  2713  1788  0084               	movwf	4
  2714  1789  160A  118A  2000  160A  118A  	fcall	stringtab
  2715  178E  3A00               	xorlw	0
  2716  178F  1903               	btfsc	3,2
  2717  1790  0008               	return
  2718                           
  2719                           ;lcd.c: 430: LCD_DisplayChar(*ptr_stringPointer_u8++);
  2720  1791  1283               	bcf	3,5	;RP0=0, select bank0
  2721  1792  1303               	bcf	3,6	;RP1=0, select bank0
  2722  1793  0825               	movf	LCD_DisplayString@ptr_stringPointer_u8+1,w
  2723  1794  00FF               	movwf	127
  2724  1795  0824               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  2725  1796  0084               	movwf	4
  2726  1797  160A  118A  2000  160A  118A  	fcall	stringtab
  2727  179C  160A  118A  275E  160A  118A  	fcall	_LCD_DisplayChar
  2728  17A1  3001               	movlw	1
  2729  17A2  1283               	bcf	3,5	;RP0=0, select bank0
  2730  17A3  1303               	bcf	3,6	;RP1=0, select bank0
  2731  17A4  07A4               	addwf	LCD_DisplayString@ptr_stringPointer_u8,f
  2732  17A5  1803               	skipnc
  2733  17A6  0AA5               	incf	LCD_DisplayString@ptr_stringPointer_u8+1,f
  2734  17A7  2F83               	goto	l2857
  2735  17A8                     __end_of_LCD_DisplayString:	
  2736                           
  2737                           	psect	text10
  2738  175E                     __ptext10:	
  2739 ;; *************** function _LCD_DisplayChar *****************
  2740 ;; Defined at:
  2741 ;;		line 392 in file "../00-libfiles/lcd.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;  v_lcdData_u8    1    wreg     unsigned char 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  v_lcdData_u8    1    3[BANK0 ] unsigned char 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2755 ;;      Params:         0       0       0       0       0
  2756 ;;      Locals:         0       1       0       0       0
  2757 ;;      Temps:          0       1       0       0       0
  2758 ;;      Totals:         0       2       0       0       0
  2759 ;;Total ram usage:        2 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    5
  2762 ;; This function calls:
  2763 ;;		_LCD_GoToNextLine
  2764 ;;		_lcd_DataWrite
  2765 ;; This function is called by:
  2766 ;;		_LCD_DisplayString
  2767 ;;		_LCD_ScrollMessage
  2768 ;;		_LCD_DisplayNumber
  2769 ;;		_LCD_DisplayFloatNumber
  2770 ;;		_LCD_Printf
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           
  2775                           ;psect for function _LCD_DisplayChar
  2776  175E                     _LCD_DisplayChar:	
  2777                           
  2778                           ;incstack = 0
  2779                           ; Regs used in _LCD_DisplayChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2780                           ;LCD_DisplayChar@v_lcdData_u8 stored from wreg
  2781  175E  1283               	bcf	3,5	;RP0=0, select bank0
  2782  175F  1303               	bcf	3,6	;RP1=0, select bank0
  2783  1760  00A3               	movwf	LCD_DisplayChar@v_lcdData_u8
  2784                           
  2785                           ;lcd.c: 394: if((v_LcdTrackCursorPos_U8>=LCDConfig.v_MaxSupportedChars_U8) || (v_lcdData
      +                          _u8=='\n'))
  2786  1761  1683               	bsf	3,5	;RP0=1, select bank1
  2787  1762  1303               	bcf	3,6	;RP1=0, select bank1
  2788  1763  0821               	movf	(_LCDConfig^(0+128)+1),w
  2789  1764  1283               	bcf	3,5	;RP0=0, select bank0
  2790  1765  1303               	bcf	3,6	;RP1=0, select bank0
  2791  1766  026E               	subwf	_v_LcdTrackCursorPos_U8,w
  2792  1767  1803               	skipnc
  2793  1768  2F6D               	goto	l2731
  2794  1769  300A               	movlw	10
  2795  176A  0623               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  2796  176B  1D03               	btfss	3,2
  2797  176C  2F72               	goto	l2733
  2798  176D                     l2731:	
  2799                           
  2800                           ;lcd.c: 395: {
  2801                           ;lcd.c: 398: LCD_GoToNextLine();
  2802  176D  160A  118A  26CD  160A  118A  	fcall	_LCD_GoToNextLine
  2803  1772                     l2733:	
  2804                           
  2805                           ;lcd.c: 399: }
  2806                           ;lcd.c: 400: if(v_lcdData_u8!='\n')
  2807  1772  300A               	movlw	10
  2808  1773  1283               	bcf	3,5	;RP0=0, select bank0
  2809  1774  1303               	bcf	3,6	;RP1=0, select bank0
  2810  1775  0623               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  2811  1776  1903               	btfsc	3,2
  2812  1777  0008               	return
  2813                           
  2814                           ;lcd.c: 401: {
  2815                           ;lcd.c: 403: lcd_DataWrite(v_lcdData_u8);
  2816  1778  0823               	movf	LCD_DisplayChar@v_lcdData_u8,w
  2817  1779  120A  158A  21DF   	fcall	_lcd_DataWrite
  2818                           
  2819                           ;lcd.c: 404: v_LcdTrackCursorPos_U8++;
  2820  177C  3001               	movlw	1
  2821  177D  1283               	bcf	3,5	;RP0=0, select bank0
  2822  177E  1303               	bcf	3,6	;RP1=0, select bank0
  2823  177F  00A2               	movwf	??_LCD_DisplayChar
  2824  1780  0822               	movf	??_LCD_DisplayChar,w
  2825  1781  07EE               	addwf	_v_LcdTrackCursorPos_U8,f
  2826  1782  0008               	return
  2827  1783                     __end_of_LCD_DisplayChar:	
  2828                           
  2829                           	psect	text11
  2830  09DF                     __ptext11:	
  2831 ;; *************** function _lcd_DataWrite *****************
  2832 ;; Defined at:
  2833 ;;		line 826 in file "../00-libfiles/lcd.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  dataByte        1    wreg     unsigned char 
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;  dataByte        1    0[BANK0 ] unsigned char 
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      void 
  2840 ;; Registers used:
  2841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2847 ;;      Params:         0       0       0       0       0
  2848 ;;      Locals:         0       1       0       0       0
  2849 ;;      Temps:          2       0       0       0       0
  2850 ;;      Totals:         2       1       0       0       0
  2851 ;;Total ram usage:        3 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; Hardware stack levels required when called:    3
  2854 ;; This function calls:
  2855 ;;		_lcd_BusyCheck
  2856 ;;		_lcd_SendDataSignals
  2857 ;;		_lcd_SendHigherNibble
  2858 ;;		_lcd_SendLowerNibble
  2859 ;; This function is called by:
  2860 ;;		_LCD_DisplayChar
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           
  2865                           ;psect for function _lcd_DataWrite
  2866  09DF                     _lcd_DataWrite:	
  2867                           
  2868                           ;incstack = 0
  2869                           ; Regs used in _lcd_DataWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2870                           ;lcd_DataWrite@dataByte stored from wreg
  2871  09DF  1283               	bcf	3,5	;RP0=0, select bank0
  2872  09E0  1303               	bcf	3,6	;RP1=0, select bank0
  2873  09E1  00A0               	movwf	lcd_DataWrite@dataByte
  2874                           
  2875                           ;lcd.c: 828: lcd_BusyCheck();
  2876  09E2  120A  158A  2647  120A  158A  	fcall	_lcd_BusyCheck
  2877                           
  2878                           ;lcd.c: 829: if(LCDConfig.v_LcdMode_U8 == 8u)
  2879  09E7  3008               	movlw	8
  2880  09E8  1683               	bsf	3,5	;RP0=1, select bank1
  2881  09E9  1303               	bcf	3,6	;RP1=0, select bank1
  2882  09EA  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  2883  09EB  1D03               	btfss	3,2
  2884  09EC  29F6               	goto	l2469
  2885                           
  2886                           ;lcd.c: 830: {
  2887                           ;lcd.c: 831: lcd_SendLowerNibble(dataByte);
  2888  09ED  1283               	bcf	3,5	;RP0=0, select bank0
  2889  09EE  1303               	bcf	3,6	;RP1=0, select bank0
  2890  09EF  0820               	movf	lcd_DataWrite@dataByte,w
  2891  09F0  120A  118A  2003  120A  158A  	fcall	_lcd_SendLowerNibble
  2892                           
  2893                           ;lcd.c: 832: }
  2894  09F5  2A12               	goto	l2473
  2895  09F6                     l2469:	
  2896                           
  2897                           ;lcd.c: 833: else
  2898                           ;lcd.c: 834: {
  2899                           ;lcd.c: 835: lcd_SendHigherNibble(dataByte);
  2900  09F6  1283               	bcf	3,5	;RP0=0, select bank0
  2901  09F7  1303               	bcf	3,6	;RP1=0, select bank0
  2902  09F8  0820               	movf	lcd_DataWrite@dataByte,w
  2903  09F9  120A  158A  221E  120A  158A  	fcall	_lcd_SendHigherNibble
  2904                           
  2905                           ;lcd.c: 836: lcd_SendDataSignals();
  2906  09FE  120A  158A  2172  120A  158A  	fcall	_lcd_SendDataSignals
  2907                           
  2908                           ;lcd.c: 837: dataByte = dataByte << 4;
  2909  0A03  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0A04  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0A05  0820               	movf	lcd_DataWrite@dataByte,w
  2912  0A06  00FC               	movwf	??_lcd_DataWrite
  2913  0A07  3003               	movlw	3
  2914  0A08                     u3265:	
  2915  0A08  1003               	clrc
  2916  0A09  0DFC               	rlf	??_lcd_DataWrite,f
  2917  0A0A  3EFF               	addlw	-1
  2918  0A0B  1D03               	skipz
  2919  0A0C  2A08               	goto	u3265
  2920  0A0D  1003               	clrc
  2921  0A0E  0D7C               	rlf	??_lcd_DataWrite,w
  2922  0A0F  00FD               	movwf	??_lcd_DataWrite+1
  2923  0A10  087D               	movf	??_lcd_DataWrite+1,w
  2924  0A11  00A0               	movwf	lcd_DataWrite@dataByte
  2925  0A12                     l2473:	
  2926                           
  2927                           ;lcd.c: 838: }
  2928                           ;lcd.c: 840: lcd_SendHigherNibble(dataByte);
  2929  0A12  1283               	bcf	3,5	;RP0=0, select bank0
  2930  0A13  1303               	bcf	3,6	;RP1=0, select bank0
  2931  0A14  0820               	movf	lcd_DataWrite@dataByte,w
  2932  0A15  120A  158A  221E  120A  158A  	fcall	_lcd_SendHigherNibble
  2933                           
  2934                           ;lcd.c: 841: lcd_SendDataSignals();
  2935  0A1A  120A  158A  2172   	fcall	_lcd_SendDataSignals
  2936  0A1D  0008               	return
  2937  0A1E                     __end_of_lcd_DataWrite:	
  2938                           
  2939                           	psect	text12
  2940  0972                     __ptext12:	
  2941 ;; *************** function _lcd_SendDataSignals *****************
  2942 ;; Defined at:
  2943 ;;		line 1002 in file "../00-libfiles/lcd.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;		None
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;		None
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      void 
  2950 ;; Registers used:
  2951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2957 ;;      Params:         0       0       0       0       0
  2958 ;;      Locals:         0       0       0       0       0
  2959 ;;      Temps:          0       0       0       0       0
  2960 ;;      Totals:         0       0       0       0       0
  2961 ;;Total ram usage:        0 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:    1
  2964 ;; This function calls:
  2965 ;;		_DELAY_us
  2966 ;;		_GPIO_PinWrite
  2967 ;; This function is called by:
  2968 ;;		_lcd_DataWrite
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           
  2973                           ;psect for function _lcd_SendDataSignals
  2974  0972                     _lcd_SendDataSignals:	
  2975                           
  2976                           ;lcd.c: 1004: GPIO_PinWrite(LCDConfig.RS,1);
  2977                           
  2978                           ;incstack = 0
  2979                           ; Regs used in _lcd_SendDataSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2980  0972  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  2981  0973  0AF5               	incf	GPIO_PinWrite@var_pinValue_u8,f
  2982  0974  1683               	bsf	3,5	;RP0=1, select bank1
  2983  0975  1303               	bcf	3,6	;RP1=0, select bank1
  2984  0976  0823               	movf	(_LCDConfig^(0+128)+3),w
  2985  0977  120A  118A  22BE  120A  158A  	fcall	_GPIO_PinWrite
  2986                           
  2987                           ;lcd.c: 1005: GPIO_PinWrite(LCDConfig.RW,0);
  2988  097C  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  2989  097D  1683               	bsf	3,5	;RP0=1, select bank1
  2990  097E  1303               	bcf	3,6	;RP1=0, select bank1
  2991  097F  0824               	movf	(_LCDConfig^(0+128)+4),w
  2992  0980  120A  118A  22BE  120A  158A  	fcall	_GPIO_PinWrite
  2993                           
  2994                           ;lcd.c: 1006: GPIO_PinWrite(LCDConfig.EN,1);
  2995  0985  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  2996  0986  0AF5               	incf	GPIO_PinWrite@var_pinValue_u8,f
  2997  0987  1683               	bsf	3,5	;RP0=1, select bank1
  2998  0988  1303               	bcf	3,6	;RP1=0, select bank1
  2999  0989  0825               	movf	(_LCDConfig^(0+128)+5),w
  3000  098A  120A  118A  22BE  120A  158A  	fcall	_GPIO_PinWrite
  3001                           
  3002                           ;lcd.c: 1007: DELAY_us(10);
  3003  098F  300A               	movlw	10
  3004  0990  00F0               	movwf	DELAY_us@us_count
  3005  0991  3000               	movlw	0
  3006  0992  00F1               	movwf	DELAY_us@us_count+1
  3007  0993  160A  118A  2662  120A  158A  	fcall	_DELAY_us
  3008                           
  3009                           ;lcd.c: 1008: GPIO_PinWrite(LCDConfig.EN,0);
  3010  0998  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3011  0999  1683               	bsf	3,5	;RP0=1, select bank1
  3012  099A  1303               	bcf	3,6	;RP1=0, select bank1
  3013  099B  0825               	movf	(_LCDConfig^(0+128)+5),w
  3014  099C  120A  118A  22BE   	fcall	_GPIO_PinWrite
  3015  099F  0008               	return
  3016  09A0                     __end_of_lcd_SendDataSignals:	
  3017                           
  3018                           	psect	text13
  3019  16CD                     __ptext13:	
  3020 ;; *************** function _LCD_GoToNextLine *****************
  3021 ;; Defined at:
  3022 ;;		line 292 in file "../00-libfiles/lcd.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;		None
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      void 
  3029 ;; Registers used:
  3030 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3036 ;;      Params:         0       0       0       0       0
  3037 ;;      Locals:         0       0       0       0       0
  3038 ;;      Temps:          0       1       0       0       0
  3039 ;;      Totals:         0       1       0       0       0
  3040 ;;Total ram usage:        1 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    4
  3043 ;; This function calls:
  3044 ;;		_LCD_CmdWrite
  3045 ;; This function is called by:
  3046 ;;		_LCD_DisplayChar
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           
  3051                           ;psect for function _LCD_GoToNextLine
  3052  16CD                     _LCD_GoToNextLine:	
  3053                           
  3054                           ;lcd.c: 296: v_LcdTrackLineNum_U8++;
  3055                           
  3056                           ;incstack = 0
  3057                           ; Regs used in _LCD_GoToNextLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3058  16CD  3001               	movlw	1
  3059  16CE  1283               	bcf	3,5	;RP0=0, select bank0
  3060  16CF  1303               	bcf	3,6	;RP1=0, select bank0
  3061  16D0  00A1               	movwf	??_LCD_GoToNextLine
  3062  16D1  0821               	movf	??_LCD_GoToNextLine,w
  3063  16D2  07EF               	addwf	_v_LcdTrackLineNum_U8,f
  3064                           
  3065                           ;lcd.c: 297: v_LcdTrackCursorPos_U8 = 0x00;
  3066  16D3  01EE               	clrf	_v_LcdTrackCursorPos_U8
  3067                           
  3068                           ;lcd.c: 298: if(v_LcdTrackLineNum_U8 >= LCDConfig.v_MaxSupportedLines_U8)
  3069  16D4  1683               	bsf	3,5	;RP0=1, select bank1
  3070  16D5  1303               	bcf	3,6	;RP1=0, select bank1
  3071  16D6  0820               	movf	_LCDConfig^(0+128),w
  3072  16D7  1283               	bcf	3,5	;RP0=0, select bank0
  3073  16D8  1303               	bcf	3,6	;RP1=0, select bank0
  3074  16D9  026F               	subwf	_v_LcdTrackLineNum_U8,w
  3075  16DA  1803               	btfsc	3,0
  3076                           
  3077                           ;lcd.c: 299: v_LcdTrackLineNum_U8 = 0x00;
  3078  16DB  01EF               	clrf	_v_LcdTrackLineNum_U8
  3079                           
  3080                           ;lcd.c: 300: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_LcdTrackLineNum_U8]);
  3081  16DC  086F               	movf	_v_LcdTrackLineNum_U8,w
  3082  16DD  3EAE               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  3083  16DE  0084               	movwf	4
  3084  16DF  1383               	bcf	3,7	;select IRP bank1
  3085  16E0  0800               	movf	0,w
  3086  16E1  120A  158A  21A0   	fcall	_LCD_CmdWrite
  3087  16E4  0008               	return
  3088  16E5                     __end_of_LCD_GoToNextLine:	
  3089                           
  3090                           	psect	text14
  3091  09A0                     __ptext14:	
  3092 ;; *************** function _LCD_CmdWrite *****************
  3093 ;; Defined at:
  3094 ;;		line 358 in file "../00-libfiles/lcd.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  v_lcdCmd_u8     1    wreg     unsigned char 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  v_lcdCmd_u8     1    0[BANK0 ] unsigned char 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3108 ;;      Params:         0       0       0       0       0
  3109 ;;      Locals:         0       1       0       0       0
  3110 ;;      Temps:          2       0       0       0       0
  3111 ;;      Totals:         2       1       0       0       0
  3112 ;;Total ram usage:        3 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    3
  3115 ;; This function calls:
  3116 ;;		_lcd_BusyCheck
  3117 ;;		_lcd_SendCmdSignals
  3118 ;;		_lcd_SendHigherNibble
  3119 ;;		_lcd_SendLowerNibble
  3120 ;; This function is called by:
  3121 ;;		_LCD_Init
  3122 ;;		_LCD_Clear
  3123 ;;		_LCD_GoToLine
  3124 ;;		_LCD_GoToNextLine
  3125 ;;		_LCD_ScrollMessage
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           
  3130                           ;psect for function _LCD_CmdWrite
  3131  09A0                     _LCD_CmdWrite:	
  3132                           
  3133                           ;incstack = 0
  3134                           ; Regs used in _LCD_CmdWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3135                           ;LCD_CmdWrite@v_lcdCmd_u8 stored from wreg
  3136  09A0  1283               	bcf	3,5	;RP0=0, select bank0
  3137  09A1  1303               	bcf	3,6	;RP1=0, select bank0
  3138  09A2  00A0               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  3139                           
  3140                           ;lcd.c: 360: lcd_BusyCheck();
  3141  09A3  120A  158A  2647  120A  158A  	fcall	_lcd_BusyCheck
  3142                           
  3143                           ;lcd.c: 361: if(LCDConfig.v_LcdMode_U8 == 8u)
  3144  09A8  3008               	movlw	8
  3145  09A9  1683               	bsf	3,5	;RP0=1, select bank1
  3146  09AA  1303               	bcf	3,6	;RP1=0, select bank1
  3147  09AB  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  3148  09AC  1D03               	btfss	3,2
  3149  09AD  29B7               	goto	l2357
  3150                           
  3151                           ;lcd.c: 362: {
  3152                           ;lcd.c: 363: lcd_SendLowerNibble(v_lcdCmd_u8);
  3153  09AE  1283               	bcf	3,5	;RP0=0, select bank0
  3154  09AF  1303               	bcf	3,6	;RP1=0, select bank0
  3155  09B0  0820               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  3156  09B1  120A  118A  2003  120A  158A  	fcall	_lcd_SendLowerNibble
  3157                           
  3158                           ;lcd.c: 364: }
  3159  09B6  29D3               	goto	l2361
  3160  09B7                     l2357:	
  3161                           
  3162                           ;lcd.c: 365: else
  3163                           ;lcd.c: 366: {
  3164                           ;lcd.c: 367: lcd_SendHigherNibble(v_lcdCmd_u8);
  3165  09B7  1283               	bcf	3,5	;RP0=0, select bank0
  3166  09B8  1303               	bcf	3,6	;RP1=0, select bank0
  3167  09B9  0820               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  3168  09BA  120A  158A  221E  120A  158A  	fcall	_lcd_SendHigherNibble
  3169                           
  3170                           ;lcd.c: 368: lcd_SendCmdSignals();
  3171  09BF  160A  118A  27D3  120A  158A  	fcall	_lcd_SendCmdSignals
  3172                           
  3173                           ;lcd.c: 369: v_lcdCmd_u8 = v_lcdCmd_u8 << 4;
  3174  09C4  1283               	bcf	3,5	;RP0=0, select bank0
  3175  09C5  1303               	bcf	3,6	;RP1=0, select bank0
  3176  09C6  0820               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  3177  09C7  00FC               	movwf	??_LCD_CmdWrite
  3178  09C8  3003               	movlw	3
  3179  09C9                     u3005:	
  3180  09C9  1003               	clrc
  3181  09CA  0DFC               	rlf	??_LCD_CmdWrite,f
  3182  09CB  3EFF               	addlw	-1
  3183  09CC  1D03               	skipz
  3184  09CD  29C9               	goto	u3005
  3185  09CE  1003               	clrc
  3186  09CF  0D7C               	rlf	??_LCD_CmdWrite,w
  3187  09D0  00FD               	movwf	??_LCD_CmdWrite+1
  3188  09D1  087D               	movf	??_LCD_CmdWrite+1,w
  3189  09D2  00A0               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  3190  09D3                     l2361:	
  3191                           
  3192                           ;lcd.c: 370: }
  3193                           ;lcd.c: 372: lcd_SendHigherNibble(v_lcdCmd_u8);
  3194  09D3  1283               	bcf	3,5	;RP0=0, select bank0
  3195  09D4  1303               	bcf	3,6	;RP1=0, select bank0
  3196  09D5  0820               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  3197  09D6  120A  158A  221E  120A  158A  	fcall	_lcd_SendHigherNibble
  3198                           
  3199                           ;lcd.c: 373: lcd_SendCmdSignals();
  3200  09DB  160A  118A  27D3   	fcall	_lcd_SendCmdSignals
  3201  09DE  0008               	return
  3202  09DF                     __end_of_LCD_CmdWrite:	
  3203                           
  3204                           	psect	text15
  3205  0003                     __ptext15:	
  3206 ;; *************** function _lcd_SendLowerNibble *****************
  3207 ;; Defined at:
  3208 ;;		line 962 in file "../00-libfiles/lcd.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  dataByte        1    wreg     unsigned char 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  dataByte        1   11[COMMON] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  1    wreg      void 
  3215 ;; Registers used:
  3216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3222 ;;      Params:         0       0       0       0       0
  3223 ;;      Locals:         1       0       0       0       0
  3224 ;;      Temps:          1       0       0       0       0
  3225 ;;      Totals:         2       0       0       0       0
  3226 ;;Total ram usage:        2 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; Hardware stack levels required when called:    1
  3229 ;; This function calls:
  3230 ;;		_GPIO_PinWrite
  3231 ;; This function is called by:
  3232 ;;		_LCD_CmdWrite
  3233 ;;		_lcd_DataWrite
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           
  3238                           ;psect for function _lcd_SendLowerNibble
  3239  0003                     _lcd_SendLowerNibble:	
  3240                           
  3241                           ;incstack = 0
  3242                           ; Regs used in _lcd_SendLowerNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3243                           ;lcd_SendLowerNibble@dataByte stored from wreg
  3244  0003  00FB               	movwf	lcd_SendLowerNibble@dataByte
  3245                           
  3246                           ;lcd.c: 964: GPIO_PinWrite(LCDConfig.D0,(((dataByte)&((1<<(0))))!=0u));
  3247  0004  1C7B               	btfss	lcd_SendLowerNibble@dataByte,0
  3248  0005  2808               	goto	u2830
  3249  0006  3001               	movlw	1
  3250  0007  2809               	goto	u2840
  3251  0008                     u2830:	
  3252  0008  3000               	movlw	0
  3253  0009                     u2840:	
  3254  0009  00FA               	movwf	??_lcd_SendLowerNibble
  3255  000A  087A               	movf	??_lcd_SendLowerNibble,w
  3256  000B  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  3257  000C  1683               	bsf	3,5	;RP0=1, select bank1
  3258  000D  1303               	bcf	3,6	;RP1=0, select bank1
  3259  000E  0826               	movf	(_LCDConfig^(0+128)+6),w
  3260  000F  120A  118A  22BE  120A  118A  	fcall	_GPIO_PinWrite
  3261                           
  3262                           ;lcd.c: 965: GPIO_PinWrite(LCDConfig.D1,(((dataByte)&((1<<(1))))!=0u));
  3263  0014  1CFB               	btfss	lcd_SendLowerNibble@dataByte,1
  3264  0015  2818               	goto	u2850
  3265  0016  3001               	movlw	1
  3266  0017  2819               	goto	u2860
  3267  0018                     u2850:	
  3268  0018  3000               	movlw	0
  3269  0019                     u2860:	
  3270  0019  00FA               	movwf	??_lcd_SendLowerNibble
  3271  001A  087A               	movf	??_lcd_SendLowerNibble,w
  3272  001B  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  3273  001C  1683               	bsf	3,5	;RP0=1, select bank1
  3274  001D  1303               	bcf	3,6	;RP1=0, select bank1
  3275  001E  0827               	movf	(_LCDConfig^(0+128)+7),w
  3276  001F  120A  118A  22BE  120A  118A  	fcall	_GPIO_PinWrite
  3277                           
  3278                           ;lcd.c: 966: GPIO_PinWrite(LCDConfig.D2,(((dataByte)&((1<<(2))))!=0u));
  3279  0024  1D7B               	btfss	lcd_SendLowerNibble@dataByte,2
  3280  0025  2828               	goto	u2870
  3281  0026  3001               	movlw	1
  3282  0027  2829               	goto	u2880
  3283  0028                     u2870:	
  3284  0028  3000               	movlw	0
  3285  0029                     u2880:	
  3286  0029  00FA               	movwf	??_lcd_SendLowerNibble
  3287  002A  087A               	movf	??_lcd_SendLowerNibble,w
  3288  002B  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  3289  002C  1683               	bsf	3,5	;RP0=1, select bank1
  3290  002D  1303               	bcf	3,6	;RP1=0, select bank1
  3291  002E  0828               	movf	(_LCDConfig^(0+128)+8),w
  3292  002F  120A  118A  22BE  120A  118A  	fcall	_GPIO_PinWrite
  3293                           
  3294                           ;lcd.c: 967: GPIO_PinWrite(LCDConfig.D3,(((dataByte)&((1<<(3))))!=0u));
  3295  0034  1DFB               	btfss	lcd_SendLowerNibble@dataByte,3
  3296  0035  2838               	goto	u2890
  3297  0036  3001               	movlw	1
  3298  0037  2839               	goto	u2900
  3299  0038                     u2890:	
  3300  0038  3000               	movlw	0
  3301  0039                     u2900:	
  3302  0039  00FA               	movwf	??_lcd_SendLowerNibble
  3303  003A  087A               	movf	??_lcd_SendLowerNibble,w
  3304  003B  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  3305  003C  1683               	bsf	3,5	;RP0=1, select bank1
  3306  003D  1303               	bcf	3,6	;RP1=0, select bank1
  3307  003E  0829               	movf	(_LCDConfig^(0+128)+9),w
  3308  003F  120A  118A  22BE   	fcall	_GPIO_PinWrite
  3309  0042  0008               	return
  3310  0043                     __end_of_lcd_SendLowerNibble:	
  3311                           
  3312                           	psect	text16
  3313  0A1E                     __ptext16:	
  3314 ;; *************** function _lcd_SendHigherNibble *****************
  3315 ;; Defined at:
  3316 ;;		line 943 in file "../00-libfiles/lcd.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  dataByte        1    wreg     unsigned char 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  dataByte        1   11[COMMON] unsigned char 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  1    wreg      void 
  3323 ;; Registers used:
  3324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3330 ;;      Params:         0       0       0       0       0
  3331 ;;      Locals:         1       0       0       0       0
  3332 ;;      Temps:          1       0       0       0       0
  3333 ;;      Totals:         2       0       0       0       0
  3334 ;;Total ram usage:        2 bytes
  3335 ;; Hardware stack levels used:    1
  3336 ;; Hardware stack levels required when called:    1
  3337 ;; This function calls:
  3338 ;;		_GPIO_PinWrite
  3339 ;; This function is called by:
  3340 ;;		_LCD_CmdWrite
  3341 ;;		_lcd_DataWrite
  3342 ;;		_lcd_Reset
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           
  3347                           ;psect for function _lcd_SendHigherNibble
  3348  0A1E                     _lcd_SendHigherNibble:	
  3349                           
  3350                           ;incstack = 0
  3351                           ; Regs used in _lcd_SendHigherNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3352                           ;lcd_SendHigherNibble@dataByte stored from wreg
  3353  0A1E  00FB               	movwf	lcd_SendHigherNibble@dataByte
  3354                           
  3355                           ;lcd.c: 945: GPIO_PinWrite(LCDConfig.D4,(((dataByte)&((1<<(4))))!=0u));
  3356  0A1F  1E7B               	btfss	lcd_SendHigherNibble@dataByte,4
  3357  0A20  2A23               	goto	u2910
  3358  0A21  3001               	movlw	1
  3359  0A22  2A24               	goto	u2920
  3360  0A23                     u2910:	
  3361  0A23  3000               	movlw	0
  3362  0A24                     u2920:	
  3363  0A24  00FA               	movwf	??_lcd_SendHigherNibble
  3364  0A25  087A               	movf	??_lcd_SendHigherNibble,w
  3365  0A26  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  3366  0A27  1683               	bsf	3,5	;RP0=1, select bank1
  3367  0A28  1303               	bcf	3,6	;RP1=0, select bank1
  3368  0A29  082A               	movf	(_LCDConfig^(0+128)+10),w
  3369  0A2A  120A  118A  22BE  120A  158A  	fcall	_GPIO_PinWrite
  3370                           
  3371                           ;lcd.c: 946: GPIO_PinWrite(LCDConfig.D5,(((dataByte)&((1<<(5))))!=0u));
  3372  0A2F  1EFB               	btfss	lcd_SendHigherNibble@dataByte,5
  3373  0A30  2A33               	goto	u2930
  3374  0A31  3001               	movlw	1
  3375  0A32  2A34               	goto	u2940
  3376  0A33                     u2930:	
  3377  0A33  3000               	movlw	0
  3378  0A34                     u2940:	
  3379  0A34  00FA               	movwf	??_lcd_SendHigherNibble
  3380  0A35  087A               	movf	??_lcd_SendHigherNibble,w
  3381  0A36  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  3382  0A37  1683               	bsf	3,5	;RP0=1, select bank1
  3383  0A38  1303               	bcf	3,6	;RP1=0, select bank1
  3384  0A39  082B               	movf	(_LCDConfig^(0+128)+11),w
  3385  0A3A  120A  118A  22BE  120A  158A  	fcall	_GPIO_PinWrite
  3386                           
  3387                           ;lcd.c: 947: GPIO_PinWrite(LCDConfig.D6,(((dataByte)&((1<<(6))))!=0u));
  3388  0A3F  1F7B               	btfss	lcd_SendHigherNibble@dataByte,6
  3389  0A40  2A43               	goto	u2950
  3390  0A41  3001               	movlw	1
  3391  0A42  2A44               	goto	u2960
  3392  0A43                     u2950:	
  3393  0A43  3000               	movlw	0
  3394  0A44                     u2960:	
  3395  0A44  00FA               	movwf	??_lcd_SendHigherNibble
  3396  0A45  087A               	movf	??_lcd_SendHigherNibble,w
  3397  0A46  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  3398  0A47  1683               	bsf	3,5	;RP0=1, select bank1
  3399  0A48  1303               	bcf	3,6	;RP1=0, select bank1
  3400  0A49  082C               	movf	(_LCDConfig^(0+128)+12),w
  3401  0A4A  120A  118A  22BE  120A  158A  	fcall	_GPIO_PinWrite
  3402                           
  3403                           ;lcd.c: 948: GPIO_PinWrite(LCDConfig.D7,(((dataByte)&((1<<(7))))!=0u));
  3404  0A4F  1FFB               	btfss	lcd_SendHigherNibble@dataByte,7
  3405  0A50  2A53               	goto	u2970
  3406  0A51  3001               	movlw	1
  3407  0A52  2A54               	goto	u2980
  3408  0A53                     u2970:	
  3409  0A53  3000               	movlw	0
  3410  0A54                     u2980:	
  3411  0A54  00FA               	movwf	??_lcd_SendHigherNibble
  3412  0A55  087A               	movf	??_lcd_SendHigherNibble,w
  3413  0A56  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  3414  0A57  1683               	bsf	3,5	;RP0=1, select bank1
  3415  0A58  1303               	bcf	3,6	;RP1=0, select bank1
  3416  0A59  082D               	movf	(_LCDConfig^(0+128)+13),w
  3417  0A5A  120A  118A  22BE   	fcall	_GPIO_PinWrite
  3418  0A5D  0008               	return
  3419  0A5E                     __end_of_lcd_SendHigherNibble:	
  3420                           
  3421                           	psect	text17
  3422  17D3                     __ptext17:	
  3423 ;; *************** function _lcd_SendCmdSignals *****************
  3424 ;; Defined at:
  3425 ;;		line 981 in file "../00-libfiles/lcd.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;		None
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;		None
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      void 
  3432 ;; Registers used:
  3433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3439 ;;      Params:         0       0       0       0       0
  3440 ;;      Locals:         0       0       0       0       0
  3441 ;;      Temps:          0       0       0       0       0
  3442 ;;      Totals:         0       0       0       0       0
  3443 ;;Total ram usage:        0 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; Hardware stack levels required when called:    1
  3446 ;; This function calls:
  3447 ;;		_DELAY_us
  3448 ;;		_GPIO_PinWrite
  3449 ;; This function is called by:
  3450 ;;		_LCD_CmdWrite
  3451 ;;		_lcd_Reset
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           
  3456                           ;psect for function _lcd_SendCmdSignals
  3457  17D3                     _lcd_SendCmdSignals:	
  3458                           
  3459                           ;lcd.c: 983: GPIO_PinWrite(LCDConfig.RS,0);
  3460                           
  3461                           ;incstack = 0
  3462                           ; Regs used in _lcd_SendCmdSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3463  17D3  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3464  17D4  1683               	bsf	3,5	;RP0=1, select bank1
  3465  17D5  1303               	bcf	3,6	;RP1=0, select bank1
  3466  17D6  0823               	movf	(_LCDConfig^(0+128)+3),w
  3467  17D7  120A  118A  22BE  160A  118A  	fcall	_GPIO_PinWrite
  3468                           
  3469                           ;lcd.c: 984: GPIO_PinWrite(LCDConfig.RW,0);
  3470  17DC  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3471  17DD  1683               	bsf	3,5	;RP0=1, select bank1
  3472  17DE  1303               	bcf	3,6	;RP1=0, select bank1
  3473  17DF  0824               	movf	(_LCDConfig^(0+128)+4),w
  3474  17E0  120A  118A  22BE  160A  118A  	fcall	_GPIO_PinWrite
  3475                           
  3476                           ;lcd.c: 985: GPIO_PinWrite(LCDConfig.EN,1);
  3477  17E5  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3478  17E6  0AF5               	incf	GPIO_PinWrite@var_pinValue_u8,f
  3479  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  3480  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  3481  17E9  0825               	movf	(_LCDConfig^(0+128)+5),w
  3482  17EA  120A  118A  22BE  160A  118A  	fcall	_GPIO_PinWrite
  3483                           
  3484                           ;lcd.c: 986: DELAY_us(10);
  3485  17EF  300A               	movlw	10
  3486  17F0  00F0               	movwf	DELAY_us@us_count
  3487  17F1  3000               	movlw	0
  3488  17F2  00F1               	movwf	DELAY_us@us_count+1
  3489  17F3  160A  118A  2662  160A  118A  	fcall	_DELAY_us
  3490                           
  3491                           ;lcd.c: 987: GPIO_PinWrite(LCDConfig.EN,0);
  3492  17F8  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3493  17F9  1683               	bsf	3,5	;RP0=1, select bank1
  3494  17FA  1303               	bcf	3,6	;RP1=0, select bank1
  3495  17FB  0825               	movf	(_LCDConfig^(0+128)+5),w
  3496  17FC  120A  118A  22BE   	fcall	_GPIO_PinWrite
  3497  17FF  0008               	return
  3498  1800                     __end_of_lcd_SendCmdSignals:	
  3499                           
  3500                           	psect	text18
  3501  0E47                     __ptext18:	
  3502 ;; *************** function _lcd_BusyCheck *****************
  3503 ;; Defined at:
  3504 ;;		line 860 in file "../00-libfiles/lcd.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;		None
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;  busyflag        1   11[COMMON] unsigned char 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  1    wreg      void 
  3511 ;; Registers used:
  3512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3518 ;;      Params:         0       0       0       0       0
  3519 ;;      Locals:         1       0       0       0       0
  3520 ;;      Temps:          1       0       0       0       0
  3521 ;;      Totals:         2       0       0       0       0
  3522 ;;Total ram usage:        2 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    2
  3525 ;; This function calls:
  3526 ;;		_DELAY_ms
  3527 ;;		_DELAY_us
  3528 ;;		_GPIO_PinDirection
  3529 ;;		_GPIO_PinRead
  3530 ;;		_GPIO_PinWrite
  3531 ;; This function is called by:
  3532 ;;		_LCD_CmdWrite
  3533 ;;		_lcd_DataWrite
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           
  3538                           ;psect for function _lcd_BusyCheck
  3539  0E47                     _lcd_BusyCheck:	
  3540                           
  3541                           ;lcd.c: 862: uint8_t busyflag;
  3542                           ;lcd.c: 864: if(LCDConfig.RW != P_NC)
  3543                           
  3544                           ;incstack = 0
  3545                           ; Regs used in _lcd_BusyCheck: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3546  0E47  1683               	bsf	3,5	;RP0=1, select bank1
  3547  0E48  1303               	bcf	3,6	;RP1=0, select bank1
  3548  0E49  0A24               	incf	(_LCDConfig^(0+128)+4),w
  3549  0E4A  1903               	btfsc	3,2
  3550  0E4B  2ECB               	goto	l2339
  3551                           
  3552                           ;lcd.c: 865: {
  3553                           ;lcd.c: 866: GPIO_PinDirection(LCDConfig.D7,0x01u);
  3554  0E4C  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  3555  0E4D  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  3556  0E4E  082D               	movf	(_LCDConfig^(0+128)+13),w
  3557  0E4F  120A  118A  21E5  120A  158A  	fcall	_GPIO_PinDirection
  3558                           
  3559                           ;lcd.c: 867: GPIO_PinWrite(LCDConfig.RS,0);
  3560  0E54  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3561  0E55  1683               	bsf	3,5	;RP0=1, select bank1
  3562  0E56  1303               	bcf	3,6	;RP1=0, select bank1
  3563  0E57  0823               	movf	(_LCDConfig^(0+128)+3),w
  3564  0E58  120A  118A  22BE  120A  158A  	fcall	_GPIO_PinWrite
  3565                           
  3566                           ;lcd.c: 868: GPIO_PinWrite(LCDConfig.RW,1);
  3567  0E5D  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3568  0E5E  0AF5               	incf	GPIO_PinWrite@var_pinValue_u8,f
  3569  0E5F  1683               	bsf	3,5	;RP0=1, select bank1
  3570  0E60  1303               	bcf	3,6	;RP1=0, select bank1
  3571  0E61  0824               	movf	(_LCDConfig^(0+128)+4),w
  3572  0E62  120A  118A  22BE  120A  158A  	fcall	_GPIO_PinWrite
  3573  0E67                     l337:	
  3574                           ;lcd.c: 869: do
  3575                           
  3576                           
  3577                           ;lcd.c: 870: {
  3578                           ;lcd.c: 872: GPIO_PinWrite(LCDConfig.EN,0);
  3579  0E67  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3580  0E68  1683               	bsf	3,5	;RP0=1, select bank1
  3581  0E69  1303               	bcf	3,6	;RP1=0, select bank1
  3582  0E6A  0825               	movf	(_LCDConfig^(0+128)+5),w
  3583  0E6B  120A  118A  22BE  120A  158A  	fcall	_GPIO_PinWrite
  3584                           
  3585                           ;lcd.c: 873: DELAY_us(10);
  3586  0E70  300A               	movlw	10
  3587  0E71  00F0               	movwf	DELAY_us@us_count
  3588  0E72  3000               	movlw	0
  3589  0E73  00F1               	movwf	DELAY_us@us_count+1
  3590  0E74  160A  118A  2662  120A  158A  	fcall	_DELAY_us
  3591                           
  3592                           ;lcd.c: 874: GPIO_PinWrite(LCDConfig.EN,1);
  3593  0E79  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3594  0E7A  0AF5               	incf	GPIO_PinWrite@var_pinValue_u8,f
  3595  0E7B  1683               	bsf	3,5	;RP0=1, select bank1
  3596  0E7C  1303               	bcf	3,6	;RP1=0, select bank1
  3597  0E7D  0825               	movf	(_LCDConfig^(0+128)+5),w
  3598  0E7E  120A  118A  22BE  120A  158A  	fcall	_GPIO_PinWrite
  3599                           
  3600                           ;lcd.c: 875: DELAY_us(10);
  3601  0E83  300A               	movlw	10
  3602  0E84  00F0               	movwf	DELAY_us@us_count
  3603  0E85  3000               	movlw	0
  3604  0E86  00F1               	movwf	DELAY_us@us_count+1
  3605  0E87  160A  118A  2662  120A  158A  	fcall	_DELAY_us
  3606                           
  3607                           ;lcd.c: 876: busyflag = GPIO_PinRead(LCDConfig.D7);
  3608  0E8C  1683               	bsf	3,5	;RP0=1, select bank1
  3609  0E8D  1303               	bcf	3,6	;RP1=0, select bank1
  3610  0E8E  082D               	movf	(_LCDConfig^(0+128)+13),w
  3611  0E8F  120A  158A  25D2  120A  158A  	fcall	_GPIO_PinRead
  3612  0E94  00FA               	movwf	??_lcd_BusyCheck
  3613  0E95  087A               	movf	??_lcd_BusyCheck,w
  3614  0E96  00FB               	movwf	lcd_BusyCheck@busyflag
  3615                           
  3616                           ;lcd.c: 879: if(LCDConfig.v_LcdMode_U8 == 4)
  3617  0E97  3004               	movlw	4
  3618  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  3619  0E99  1303               	bcf	3,6	;RP1=0, select bank1
  3620  0E9A  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  3621  0E9B  1D03               	btfss	3,2
  3622  0E9C  2EC0               	goto	l2335
  3623                           
  3624                           ;lcd.c: 880: {
  3625                           ;lcd.c: 882: GPIO_PinWrite(LCDConfig.EN,0);
  3626  0E9D  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3627  0E9E  0825               	movf	(_LCDConfig^(0+128)+5),w
  3628  0E9F  120A  118A  22BE  120A  158A  	fcall	_GPIO_PinWrite
  3629                           
  3630                           ;lcd.c: 883: DELAY_us(10);
  3631  0EA4  300A               	movlw	10
  3632  0EA5  00F0               	movwf	DELAY_us@us_count
  3633  0EA6  3000               	movlw	0
  3634  0EA7  00F1               	movwf	DELAY_us@us_count+1
  3635  0EA8  160A  118A  2662  120A  158A  	fcall	_DELAY_us
  3636                           
  3637                           ;lcd.c: 884: GPIO_PinWrite(LCDConfig.EN,1);
  3638  0EAD  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3639  0EAE  0AF5               	incf	GPIO_PinWrite@var_pinValue_u8,f
  3640  0EAF  1683               	bsf	3,5	;RP0=1, select bank1
  3641  0EB0  1303               	bcf	3,6	;RP1=0, select bank1
  3642  0EB1  0825               	movf	(_LCDConfig^(0+128)+5),w
  3643  0EB2  120A  118A  22BE  120A  158A  	fcall	_GPIO_PinWrite
  3644                           
  3645                           ;lcd.c: 885: DELAY_us(10);
  3646  0EB7  300A               	movlw	10
  3647  0EB8  00F0               	movwf	DELAY_us@us_count
  3648  0EB9  3000               	movlw	0
  3649  0EBA  00F1               	movwf	DELAY_us@us_count+1
  3650  0EBB  160A  118A  2662  120A  158A  	fcall	_DELAY_us
  3651  0EC0                     l2335:	
  3652                           
  3653                           ;lcd.c: 886: }
  3654                           ;lcd.c: 887: }while(busyflag!=0);
  3655  0EC0  087B               	movf	lcd_BusyCheck@busyflag,w
  3656  0EC1  1D03               	btfss	3,2
  3657  0EC2  2E67               	goto	l337
  3658                           
  3659                           ;lcd.c: 889: GPIO_PinDirection(LCDConfig.D7,0x00u);
  3660  0EC3  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  3661  0EC4  1683               	bsf	3,5	;RP0=1, select bank1
  3662  0EC5  1303               	bcf	3,6	;RP1=0, select bank1
  3663  0EC6  082D               	movf	(_LCDConfig^(0+128)+13),w
  3664  0EC7  120A  118A  21E5   	fcall	_GPIO_PinDirection
  3665                           
  3666                           ;lcd.c: 890: }
  3667  0ECA  0008               	return
  3668  0ECB                     l2339:	
  3669                           
  3670                           ;lcd.c: 891: else
  3671                           ;lcd.c: 892: {
  3672                           ;lcd.c: 895: DELAY_ms(1);
  3673  0ECB  3001               	movlw	1
  3674  0ECC  00F2               	movwf	DELAY_ms@ms_count
  3675  0ECD  3000               	movlw	0
  3676  0ECE  00F3               	movwf	DELAY_ms@ms_count+1
  3677  0ECF  160A  118A  268B   	fcall	_DELAY_ms
  3678  0ED2  0008               	return
  3679  0ED3                     __end_of_lcd_BusyCheck:	
  3680                           
  3681                           	psect	text19
  3682  02BE                     __ptext19:	
  3683 ;; *************** function _GPIO_PinWrite *****************
  3684 ;; Defined at:
  3685 ;;		line 127 in file "../00-libfiles/gpio.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  enm_pinNumbe    1    wreg     enum E1088
  3688 ;;  var_pinValue    1    5[COMMON] unsigned char 
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;  enm_pinNumbe    1    9[COMMON] enum E1088
  3691 ;;  var_portNumb    1    8[COMMON] unsigned char 
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      void 
  3694 ;; Registers used:
  3695 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3701 ;;      Params:         1       0       0       0       0
  3702 ;;      Locals:         2       0       0       0       0
  3703 ;;      Temps:          2       0       0       0       0
  3704 ;;      Totals:         5       0       0       0       0
  3705 ;;Total ram usage:        5 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; This function calls:
  3708 ;;		Nothing
  3709 ;; This function is called by:
  3710 ;;		_lcd_BusyCheck
  3711 ;;		_lcd_SendHigherNibble
  3712 ;;		_lcd_SendLowerNibble
  3713 ;;		_lcd_SendCmdSignals
  3714 ;;		_lcd_SendDataSignals
  3715 ;;		_switch_Test
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           
  3720                           ;psect for function _GPIO_PinWrite
  3721  02BE                     _GPIO_PinWrite:	
  3722                           
  3723                           ;incstack = 0
  3724                           ; Regs used in _GPIO_PinWrite: [wreg-fsr0h+status,2+status,0]
  3725                           ;GPIO_PinWrite@enm_pinNumber stored from wreg
  3726  02BE  00F9               	movwf	GPIO_PinWrite@enm_pinNumber
  3727                           
  3728                           ;gpio.c: 130: uint8_t var_portNumber_u8;
  3729                           ;gpio.c: 133: var_portNumber_u8 = (enm_pinNumber>>3);
  3730  02BF  0879               	movf	GPIO_PinWrite@enm_pinNumber,w
  3731  02C0  00F6               	movwf	??_GPIO_PinWrite
  3732  02C1  3003               	movlw	3
  3733  02C2                     u2485:	
  3734  02C2  1003               	clrc
  3735  02C3  0CF6               	rrf	??_GPIO_PinWrite,f
  3736  02C4  3EFF               	addlw	-1
  3737  02C5  1D03               	skipz
  3738  02C6  2AC2               	goto	u2485
  3739  02C7  0876               	movf	??_GPIO_PinWrite,w
  3740  02C8  00F7               	movwf	??_GPIO_PinWrite+1
  3741  02C9  0877               	movf	??_GPIO_PinWrite+1,w
  3742  02CA  00F8               	movwf	GPIO_PinWrite@var_portNumber_u8
  3743                           
  3744                           ;gpio.c: 134: enm_pinNumber = enm_pinNumber & 0x07;
  3745  02CB  0879               	movf	GPIO_PinWrite@enm_pinNumber,w
  3746  02CC  3907               	andlw	7
  3747  02CD  00F6               	movwf	??_GPIO_PinWrite
  3748  02CE  0876               	movf	??_GPIO_PinWrite,w
  3749  02CF  00F9               	movwf	GPIO_PinWrite@enm_pinNumber
  3750                           
  3751                           ;gpio.c: 138: switch(var_portNumber_u8)
  3752  02D0  2B85               	goto	l2291
  3753  02D1                     l2259:	
  3754                           ;gpio.c: 139: {
  3755                           ;gpio.c: 141: case 0:
  3756                           
  3757                           
  3758                           ;gpio.c: 142: ((var_pinValue_u8)? ((PORTA) |= (1<<(enm_pinNumber))): ((PORTA) &= ~(1<<(e
      +                          nm_pinNumber))));
  3759  02D1  0875               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3760  02D2  1903               	btfsc	3,2
  3761  02D3  2AE4               	goto	l2263
  3762  02D4  3001               	movlw	1
  3763  02D5  00F6               	movwf	??_GPIO_PinWrite
  3764  02D6  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3765  02D7  2ADA               	goto	u2504
  3766  02D8                     u2505:	
  3767  02D8  1003               	clrc
  3768  02D9  0DF6               	rlf	??_GPIO_PinWrite,f
  3769  02DA                     u2504:	
  3770  02DA  3EFF               	addlw	-1
  3771  02DB  1D03               	skipz
  3772  02DC  2AD8               	goto	u2505
  3773  02DD  0876               	movf	??_GPIO_PinWrite,w
  3774  02DE  00F7               	movwf	??_GPIO_PinWrite+1
  3775  02DF  0877               	movf	??_GPIO_PinWrite+1,w
  3776  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  3777  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  3778  02E2  0485               	iorwf	5,f	;volatile
  3779  02E3  0008               	return
  3780  02E4                     l2263:	
  3781  02E4  3001               	movlw	1
  3782  02E5  00F6               	movwf	??_GPIO_PinWrite
  3783  02E6  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3784  02E7  2AEA               	goto	u2514
  3785  02E8                     u2515:	
  3786  02E8  1003               	clrc
  3787  02E9  0DF6               	rlf	??_GPIO_PinWrite,f
  3788  02EA                     u2514:	
  3789  02EA  3EFF               	addlw	-1
  3790  02EB  1D03               	skipz
  3791  02EC  2AE8               	goto	u2515
  3792  02ED  0876               	movf	??_GPIO_PinWrite,w
  3793  02EE  3AFF               	xorlw	255
  3794  02EF  00F7               	movwf	??_GPIO_PinWrite+1
  3795  02F0  0877               	movf	??_GPIO_PinWrite+1,w
  3796  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  3797  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  3798  02F3  0585               	andwf	5,f	;volatile
  3799                           
  3800                           ;gpio.c: 143: break;
  3801  02F4  0008               	return
  3802  02F5                     l2265:	
  3803                           ;gpio.c: 147: case 1:
  3804                           
  3805                           
  3806                           ;gpio.c: 148: ((var_pinValue_u8)? ((PORTB) |= (1<<(enm_pinNumber))): ((PORTB) &= ~(1<<(e
      +                          nm_pinNumber))));
  3807  02F5  0875               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3808  02F6  1903               	btfsc	3,2
  3809  02F7  2B08               	goto	l2269
  3810  02F8  3001               	movlw	1
  3811  02F9  00F6               	movwf	??_GPIO_PinWrite
  3812  02FA  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3813  02FB  2AFE               	goto	u2534
  3814  02FC                     u2535:	
  3815  02FC  1003               	clrc
  3816  02FD  0DF6               	rlf	??_GPIO_PinWrite,f
  3817  02FE                     u2534:	
  3818  02FE  3EFF               	addlw	-1
  3819  02FF  1D03               	skipz
  3820  0300  2AFC               	goto	u2535
  3821  0301  0876               	movf	??_GPIO_PinWrite,w
  3822  0302  00F7               	movwf	??_GPIO_PinWrite+1
  3823  0303  0877               	movf	??_GPIO_PinWrite+1,w
  3824  0304  1283               	bcf	3,5	;RP0=0, select bank0
  3825  0305  1303               	bcf	3,6	;RP1=0, select bank0
  3826  0306  0486               	iorwf	6,f	;volatile
  3827  0307  0008               	return
  3828  0308                     l2269:	
  3829  0308  3001               	movlw	1
  3830  0309  00F6               	movwf	??_GPIO_PinWrite
  3831  030A  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3832  030B  2B0E               	goto	u2544
  3833  030C                     u2545:	
  3834  030C  1003               	clrc
  3835  030D  0DF6               	rlf	??_GPIO_PinWrite,f
  3836  030E                     u2544:	
  3837  030E  3EFF               	addlw	-1
  3838  030F  1D03               	skipz
  3839  0310  2B0C               	goto	u2545
  3840  0311  0876               	movf	??_GPIO_PinWrite,w
  3841  0312  3AFF               	xorlw	255
  3842  0313  00F7               	movwf	??_GPIO_PinWrite+1
  3843  0314  0877               	movf	??_GPIO_PinWrite+1,w
  3844  0315  1283               	bcf	3,5	;RP0=0, select bank0
  3845  0316  1303               	bcf	3,6	;RP1=0, select bank0
  3846  0317  0586               	andwf	6,f	;volatile
  3847                           
  3848                           ;gpio.c: 149: break;
  3849  0318  0008               	return
  3850  0319                     l2271:	
  3851                           ;gpio.c: 153: case 2:
  3852                           
  3853                           
  3854                           ;gpio.c: 154: ((var_pinValue_u8)? ((PORTC) |= (1<<(enm_pinNumber))): ((PORTC) &= ~(1<<(e
      +                          nm_pinNumber))));
  3855  0319  0875               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3856  031A  1903               	btfsc	3,2
  3857  031B  2B2C               	goto	l2275
  3858  031C  3001               	movlw	1
  3859  031D  00F6               	movwf	??_GPIO_PinWrite
  3860  031E  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3861  031F  2B22               	goto	u2564
  3862  0320                     u2565:	
  3863  0320  1003               	clrc
  3864  0321  0DF6               	rlf	??_GPIO_PinWrite,f
  3865  0322                     u2564:	
  3866  0322  3EFF               	addlw	-1
  3867  0323  1D03               	skipz
  3868  0324  2B20               	goto	u2565
  3869  0325  0876               	movf	??_GPIO_PinWrite,w
  3870  0326  00F7               	movwf	??_GPIO_PinWrite+1
  3871  0327  0877               	movf	??_GPIO_PinWrite+1,w
  3872  0328  1283               	bcf	3,5	;RP0=0, select bank0
  3873  0329  1303               	bcf	3,6	;RP1=0, select bank0
  3874  032A  0487               	iorwf	7,f	;volatile
  3875  032B  0008               	return
  3876  032C                     l2275:	
  3877  032C  3001               	movlw	1
  3878  032D  00F6               	movwf	??_GPIO_PinWrite
  3879  032E  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3880  032F  2B32               	goto	u2574
  3881  0330                     u2575:	
  3882  0330  1003               	clrc
  3883  0331  0DF6               	rlf	??_GPIO_PinWrite,f
  3884  0332                     u2574:	
  3885  0332  3EFF               	addlw	-1
  3886  0333  1D03               	skipz
  3887  0334  2B30               	goto	u2575
  3888  0335  0876               	movf	??_GPIO_PinWrite,w
  3889  0336  3AFF               	xorlw	255
  3890  0337  00F7               	movwf	??_GPIO_PinWrite+1
  3891  0338  0877               	movf	??_GPIO_PinWrite+1,w
  3892  0339  1283               	bcf	3,5	;RP0=0, select bank0
  3893  033A  1303               	bcf	3,6	;RP1=0, select bank0
  3894  033B  0587               	andwf	7,f	;volatile
  3895                           
  3896                           ;gpio.c: 155: break;
  3897  033C  0008               	return
  3898  033D                     l2277:	
  3899                           ;gpio.c: 159: case 3:
  3900                           
  3901                           
  3902                           ;gpio.c: 160: ((var_pinValue_u8)? ((PORTD) |= (1<<(enm_pinNumber))): ((PORTD) &= ~(1<<(e
      +                          nm_pinNumber))));
  3903  033D  0875               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3904  033E  1903               	btfsc	3,2
  3905  033F  2B50               	goto	l2281
  3906  0340  3001               	movlw	1
  3907  0341  00F6               	movwf	??_GPIO_PinWrite
  3908  0342  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3909  0343  2B46               	goto	u2594
  3910  0344                     u2595:	
  3911  0344  1003               	clrc
  3912  0345  0DF6               	rlf	??_GPIO_PinWrite,f
  3913  0346                     u2594:	
  3914  0346  3EFF               	addlw	-1
  3915  0347  1D03               	skipz
  3916  0348  2B44               	goto	u2595
  3917  0349  0876               	movf	??_GPIO_PinWrite,w
  3918  034A  00F7               	movwf	??_GPIO_PinWrite+1
  3919  034B  0877               	movf	??_GPIO_PinWrite+1,w
  3920  034C  1283               	bcf	3,5	;RP0=0, select bank0
  3921  034D  1303               	bcf	3,6	;RP1=0, select bank0
  3922  034E  0488               	iorwf	8,f	;volatile
  3923  034F  0008               	return
  3924  0350                     l2281:	
  3925  0350  3001               	movlw	1
  3926  0351  00F6               	movwf	??_GPIO_PinWrite
  3927  0352  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3928  0353  2B56               	goto	u2604
  3929  0354                     u2605:	
  3930  0354  1003               	clrc
  3931  0355  0DF6               	rlf	??_GPIO_PinWrite,f
  3932  0356                     u2604:	
  3933  0356  3EFF               	addlw	-1
  3934  0357  1D03               	skipz
  3935  0358  2B54               	goto	u2605
  3936  0359  0876               	movf	??_GPIO_PinWrite,w
  3937  035A  3AFF               	xorlw	255
  3938  035B  00F7               	movwf	??_GPIO_PinWrite+1
  3939  035C  0877               	movf	??_GPIO_PinWrite+1,w
  3940  035D  1283               	bcf	3,5	;RP0=0, select bank0
  3941  035E  1303               	bcf	3,6	;RP1=0, select bank0
  3942  035F  0588               	andwf	8,f	;volatile
  3943                           
  3944                           ;gpio.c: 161: break;
  3945  0360  0008               	return
  3946  0361                     l2283:	
  3947                           ;gpio.c: 165: case 4:
  3948                           
  3949                           
  3950                           ;gpio.c: 166: ((var_pinValue_u8)? ((PORTE) |= (1<<(enm_pinNumber))): ((PORTE) &= ~(1<<(e
      +                          nm_pinNumber))));
  3951  0361  0875               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3952  0362  1903               	btfsc	3,2
  3953  0363  2B74               	goto	l2287
  3954  0364  3001               	movlw	1
  3955  0365  00F6               	movwf	??_GPIO_PinWrite
  3956  0366  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3957  0367  2B6A               	goto	u2624
  3958  0368                     u2625:	
  3959  0368  1003               	clrc
  3960  0369  0DF6               	rlf	??_GPIO_PinWrite,f
  3961  036A                     u2624:	
  3962  036A  3EFF               	addlw	-1
  3963  036B  1D03               	skipz
  3964  036C  2B68               	goto	u2625
  3965  036D  0876               	movf	??_GPIO_PinWrite,w
  3966  036E  00F7               	movwf	??_GPIO_PinWrite+1
  3967  036F  0877               	movf	??_GPIO_PinWrite+1,w
  3968  0370  1283               	bcf	3,5	;RP0=0, select bank0
  3969  0371  1303               	bcf	3,6	;RP1=0, select bank0
  3970  0372  0489               	iorwf	9,f	;volatile
  3971  0373  0008               	return
  3972  0374                     l2287:	
  3973  0374  3001               	movlw	1
  3974  0375  00F6               	movwf	??_GPIO_PinWrite
  3975  0376  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3976  0377  2B7A               	goto	u2634
  3977  0378                     u2635:	
  3978  0378  1003               	clrc
  3979  0379  0DF6               	rlf	??_GPIO_PinWrite,f
  3980  037A                     u2634:	
  3981  037A  3EFF               	addlw	-1
  3982  037B  1D03               	skipz
  3983  037C  2B78               	goto	u2635
  3984  037D  0876               	movf	??_GPIO_PinWrite,w
  3985  037E  3AFF               	xorlw	255
  3986  037F  00F7               	movwf	??_GPIO_PinWrite+1
  3987  0380  0877               	movf	??_GPIO_PinWrite+1,w
  3988  0381  1283               	bcf	3,5	;RP0=0, select bank0
  3989  0382  1303               	bcf	3,6	;RP1=0, select bank0
  3990  0383  0589               	andwf	9,f	;volatile
  3991                           
  3992                           ;gpio.c: 169: }
  3993                           
  3994                           ;gpio.c: 167: break;
  3995  0384  0008               	return
  3996  0385                     l2291:	
  3997  0385  0878               	movf	GPIO_PinWrite@var_portNumber_u8,w
  3998                           
  3999                           ; Switch size 1, requested type "space"
  4000                           ; Number of cases is 5, Range of values is 0 to 4
  4001                           ; switch strategies available:
  4002                           ; Name         Instructions Cycles
  4003                           ; simple_byte           16     9 (average)
  4004                           ; direct_byte           23     8 (fixed)
  4005                           ; jumptable            260     6 (fixed)
  4006                           ;	Chosen strategy is simple_byte
  4007  0386  3A00               	xorlw	0	; case 0
  4008  0387  1903               	skipnz
  4009  0388  2AD1               	goto	l2259
  4010  0389  3A01               	xorlw	1	; case 1
  4011  038A  1903               	skipnz
  4012  038B  2AF5               	goto	l2265
  4013  038C  3A03               	xorlw	3	; case 2
  4014  038D  1903               	skipnz
  4015  038E  2B19               	goto	l2271
  4016  038F  3A01               	xorlw	1	; case 3
  4017  0390  1903               	skipnz
  4018  0391  2B3D               	goto	l2277
  4019  0392  3A07               	xorlw	7	; case 4
  4020  0393  1903               	skipnz
  4021  0394  2B61               	goto	l2283
  4022  0395  2B96               	goto	l153
  4023  0396                     l153:	
  4024  0396  0008               	return
  4025  0397                     __end_of_GPIO_PinWrite:	
  4026                           
  4027                           	psect	text20
  4028  0DD2                     __ptext20:	
  4029 ;; *************** function _GPIO_PinRead *****************
  4030 ;; Defined at:
  4031 ;;		line 192 in file "../00-libfiles/gpio.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  enm_pinNumbe    1    wreg     enum E1088
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  4036 ;;  returnStatus    1    3[COMMON] unsigned char 
  4037 ;;  var_portNumb    1    2[COMMON] unsigned char 
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  1    wreg      unsigned char 
  4040 ;; Registers used:
  4041 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4047 ;;      Params:         0       0       0       0       0
  4048 ;;      Locals:         3       0       0       0       0
  4049 ;;      Temps:          2       0       0       0       0
  4050 ;;      Totals:         5       0       0       0       0
  4051 ;;Total ram usage:        5 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		_lcd_BusyCheck
  4057 ;;		_switch_Test
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           
  4062                           ;psect for function _GPIO_PinRead
  4063  0DD2                     _GPIO_PinRead:	
  4064                           
  4065                           ;incstack = 0
  4066                           ; Regs used in _GPIO_PinRead: [wreg-fsr0h+status,2+status,0]
  4067                           ;GPIO_PinRead@enm_pinNumber stored from wreg
  4068  0DD2  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  4069                           
  4070                           ;gpio.c: 194: uint8_t var_portNumber_u8;
  4071                           ;gpio.c: 195: uint8_t returnStatus = 0;
  4072  0DD3  01F3               	clrf	GPIO_PinRead@returnStatus
  4073                           
  4074                           ;gpio.c: 197: var_portNumber_u8 = (enm_pinNumber>>3);
  4075  0DD4  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  4076  0DD5  00F0               	movwf	??_GPIO_PinRead
  4077  0DD6  3003               	movlw	3
  4078  0DD7                     u2645:	
  4079  0DD7  1003               	clrc
  4080  0DD8  0CF0               	rrf	??_GPIO_PinRead,f
  4081  0DD9  3EFF               	addlw	-1
  4082  0DDA  1D03               	skipz
  4083  0DDB  2DD7               	goto	u2645
  4084  0DDC  0870               	movf	??_GPIO_PinRead,w
  4085  0DDD  00F1               	movwf	??_GPIO_PinRead+1
  4086  0DDE  0871               	movf	??_GPIO_PinRead+1,w
  4087  0DDF  00F2               	movwf	GPIO_PinRead@var_portNumber_u8
  4088                           
  4089                           ;gpio.c: 198: enm_pinNumber = enm_pinNumber & 0x07;
  4090  0DE0  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  4091  0DE1  3907               	andlw	7
  4092  0DE2  00F0               	movwf	??_GPIO_PinRead
  4093  0DE3  0870               	movf	??_GPIO_PinRead,w
  4094  0DE4  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  4095                           
  4096                           ;gpio.c: 201: switch(var_portNumber_u8)
  4097  0DE5  2E34               	goto	l2311
  4098  0DE6                     l2299:	
  4099                           ;gpio.c: 202: {
  4100                           ;gpio.c: 204: case 0:
  4101                           
  4102                           
  4103                           ;gpio.c: 205: returnStatus = (((PORTA)&((1<<(enm_pinNumber))))!=0u);
  4104  0DE6  3001               	movlw	1
  4105  0DE7  00F0               	movwf	??_GPIO_PinRead
  4106  0DE8  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  4107  0DE9  2DEC               	goto	u2654
  4108  0DEA                     u2655:	
  4109  0DEA  1003               	clrc
  4110  0DEB  0DF0               	rlf	??_GPIO_PinRead,f
  4111  0DEC                     u2654:	
  4112  0DEC  3EFF               	addlw	-1
  4113  0DED  1D03               	skipz
  4114  0DEE  2DEA               	goto	u2655
  4115  0DEF  0870               	movf	??_GPIO_PinRead,w
  4116  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  4117  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  4118  0DF2  0505               	andwf	5,w	;volatile
  4119  0DF3  2E2B               	goto	L6
  4120  0DF4                     l2301:	
  4121                           ;gpio.c: 209: case 1:
  4122                           
  4123                           ;gpio.c: 206: break;
  4124                           
  4125                           
  4126                           ;gpio.c: 210: returnStatus = (((PORTB)&((1<<(enm_pinNumber))))!=0u);
  4127  0DF4  3001               	movlw	1
  4128  0DF5  00F0               	movwf	??_GPIO_PinRead
  4129  0DF6  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  4130  0DF7  2DFA               	goto	u2684
  4131  0DF8                     u2685:	
  4132  0DF8  1003               	clrc
  4133  0DF9  0DF0               	rlf	??_GPIO_PinRead,f
  4134  0DFA                     u2684:	
  4135  0DFA  3EFF               	addlw	-1
  4136  0DFB  1D03               	skipz
  4137  0DFC  2DF8               	goto	u2685
  4138  0DFD  0870               	movf	??_GPIO_PinRead,w
  4139  0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  4140  0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  4141  0E00  0506               	andwf	6,w	;volatile
  4142  0E01  2E2B               	goto	L6
  4143  0E02                     l2303:	
  4144                           ;gpio.c: 214: case 2:
  4145                           
  4146                           ;gpio.c: 211: break;
  4147                           
  4148                           
  4149                           ;gpio.c: 215: returnStatus = (((PORTC)&((1<<(enm_pinNumber))))!=0u);
  4150  0E02  3001               	movlw	1
  4151  0E03  00F0               	movwf	??_GPIO_PinRead
  4152  0E04  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  4153  0E05  2E08               	goto	u2714
  4154  0E06                     u2715:	
  4155  0E06  1003               	clrc
  4156  0E07  0DF0               	rlf	??_GPIO_PinRead,f
  4157  0E08                     u2714:	
  4158  0E08  3EFF               	addlw	-1
  4159  0E09  1D03               	skipz
  4160  0E0A  2E06               	goto	u2715
  4161  0E0B  0870               	movf	??_GPIO_PinRead,w
  4162  0E0C  1283               	bcf	3,5	;RP0=0, select bank0
  4163  0E0D  1303               	bcf	3,6	;RP1=0, select bank0
  4164  0E0E  0507               	andwf	7,w	;volatile
  4165  0E0F  2E2B               	goto	L6
  4166  0E10                     l2305:	
  4167                           ;gpio.c: 220: case 3:
  4168                           
  4169                           ;gpio.c: 216: break;
  4170                           
  4171                           
  4172                           ;gpio.c: 221: returnStatus = (((PORTD)&((1<<(enm_pinNumber))))!=0u);
  4173  0E10  3001               	movlw	1
  4174  0E11  00F0               	movwf	??_GPIO_PinRead
  4175  0E12  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  4176  0E13  2E16               	goto	u2744
  4177  0E14                     u2745:	
  4178  0E14  1003               	clrc
  4179  0E15  0DF0               	rlf	??_GPIO_PinRead,f
  4180  0E16                     u2744:	
  4181  0E16  3EFF               	addlw	-1
  4182  0E17  1D03               	skipz
  4183  0E18  2E14               	goto	u2745
  4184  0E19  0870               	movf	??_GPIO_PinRead,w
  4185  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  4186  0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  4187  0E1C  0508               	andwf	8,w	;volatile
  4188  0E1D  2E2B               	goto	L6
  4189  0E1E                     l2307:	
  4190                           ;gpio.c: 226: case 4:
  4191                           
  4192                           ;gpio.c: 222: break;
  4193                           
  4194                           
  4195                           ;gpio.c: 227: returnStatus = (((PORTE)&((1<<(enm_pinNumber))))!=0u);
  4196  0E1E  3001               	movlw	1
  4197  0E1F  00F0               	movwf	??_GPIO_PinRead
  4198  0E20  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  4199  0E21  2E24               	goto	u2774
  4200  0E22                     u2775:	
  4201  0E22  1003               	clrc
  4202  0E23  0DF0               	rlf	??_GPIO_PinRead,f
  4203  0E24                     u2774:	
  4204  0E24  3EFF               	addlw	-1
  4205  0E25  1D03               	skipz
  4206  0E26  2E22               	goto	u2775
  4207  0E27  0870               	movf	??_GPIO_PinRead,w
  4208  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  4209  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  4210  0E2A  0509               	andwf	9,w	;volatile
  4211  0E2B                     L6:	
  4212  0E2B  1903               	btfsc	3,2
  4213  0E2C  2E2F               	goto	u2780
  4214  0E2D  3001               	movlw	1
  4215  0E2E  2E30               	goto	u2790
  4216  0E2F                     u2780:	
  4217  0E2F  3000               	movlw	0
  4218  0E30                     u2790:	
  4219  0E30  00F1               	movwf	??_GPIO_PinRead+1
  4220  0E31  0871               	movf	??_GPIO_PinRead+1,w
  4221  0E32  00F3               	movwf	GPIO_PinRead@returnStatus
  4222                           
  4223                           ;gpio.c: 229: }
  4224                           
  4225                           ;gpio.c: 228: break;
  4226  0E33  2E45               	goto	l2313
  4227  0E34                     l2311:	
  4228  0E34  0872               	movf	GPIO_PinRead@var_portNumber_u8,w
  4229                           
  4230                           ; Switch size 1, requested type "space"
  4231                           ; Number of cases is 5, Range of values is 0 to 4
  4232                           ; switch strategies available:
  4233                           ; Name         Instructions Cycles
  4234                           ; simple_byte           16     9 (average)
  4235                           ; direct_byte           23     8 (fixed)
  4236                           ; jumptable            260     6 (fixed)
  4237                           ;	Chosen strategy is simple_byte
  4238  0E35  3A00               	xorlw	0	; case 0
  4239  0E36  1903               	skipnz
  4240  0E37  2DE6               	goto	l2299
  4241  0E38  3A01               	xorlw	1	; case 1
  4242  0E39  1903               	skipnz
  4243  0E3A  2DF4               	goto	l2301
  4244  0E3B  3A03               	xorlw	3	; case 2
  4245  0E3C  1903               	skipnz
  4246  0E3D  2E02               	goto	l2303
  4247  0E3E  3A01               	xorlw	1	; case 3
  4248  0E3F  1903               	skipnz
  4249  0E40  2E10               	goto	l2305
  4250  0E41  3A07               	xorlw	7	; case 4
  4251  0E42  1903               	skipnz
  4252  0E43  2E1E               	goto	l2307
  4253  0E44  2E45               	goto	l2313
  4254  0E45                     l2313:	
  4255                           
  4256                           ;gpio.c: 230: return returnStatus;
  4257  0E45  0873               	movf	GPIO_PinRead@returnStatus,w
  4258  0E46  0008               	return
  4259  0E47                     __end_of_GPIO_PinRead:	
  4260                           
  4261                           	psect	text21
  4262  01E5                     __ptext21:	
  4263 ;; *************** function _GPIO_PinDirection *****************
  4264 ;; Defined at:
  4265 ;;		line 60 in file "../00-libfiles/gpio.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  enm_pinNumbe    1    wreg     enum E1088
  4268 ;;  var_pinDirn_    1    0[COMMON] unsigned char 
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  4271 ;;  var_portNumb    1    3[COMMON] unsigned char 
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  1    wreg      void 
  4274 ;; Registers used:
  4275 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4281 ;;      Params:         1       0       0       0       0
  4282 ;;      Locals:         2       0       0       0       0
  4283 ;;      Temps:          2       0       0       0       0
  4284 ;;      Totals:         5       0       0       0       0
  4285 ;;Total ram usage:        5 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; This function calls:
  4288 ;;		Nothing
  4289 ;; This function is called by:
  4290 ;;		_LCD_SetUp
  4291 ;;		_lcd_BusyCheck
  4292 ;;		_switch_Test
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           
  4297                           ;psect for function _GPIO_PinDirection
  4298  01E5                     _GPIO_PinDirection:	
  4299                           
  4300                           ;incstack = 0
  4301                           ; Regs used in _GPIO_PinDirection: [wreg-fsr0h+status,2+status,0]
  4302                           ;GPIO_PinDirection@enm_pinNumber stored from wreg
  4303  01E5  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  4304                           
  4305                           ;gpio.c: 63: uint8_t var_portNumber_u8;
  4306                           ;gpio.c: 66: var_portNumber_u8 = (enm_pinNumber>>3);
  4307  01E6  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  4308  01E7  00F1               	movwf	??_GPIO_PinDirection
  4309  01E8  3003               	movlw	3
  4310  01E9                     u2325:	
  4311  01E9  1003               	clrc
  4312  01EA  0CF1               	rrf	??_GPIO_PinDirection,f
  4313  01EB  3EFF               	addlw	-1
  4314  01EC  1D03               	skipz
  4315  01ED  29E9               	goto	u2325
  4316  01EE  0871               	movf	??_GPIO_PinDirection,w
  4317  01EF  00F2               	movwf	??_GPIO_PinDirection+1
  4318  01F0  0872               	movf	??_GPIO_PinDirection+1,w
  4319  01F1  00F3               	movwf	GPIO_PinDirection@var_portNumber_u8
  4320                           
  4321                           ;gpio.c: 67: enm_pinNumber = enm_pinNumber & 0x07;
  4322  01F2  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  4323  01F3  3907               	andlw	7
  4324  01F4  00F1               	movwf	??_GPIO_PinDirection
  4325  01F5  0871               	movf	??_GPIO_PinDirection,w
  4326  01F6  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  4327                           
  4328                           ;gpio.c: 71: switch(var_portNumber_u8)
  4329  01F7  2AAC               	goto	l2253
  4330  01F8                     l2221:	
  4331                           ;gpio.c: 72: {
  4332                           ;gpio.c: 74: case 0:
  4333                           
  4334                           
  4335                           ;gpio.c: 75: ((var_pinDirn_u8)? ((TRISA) |= (1<<(enm_pinNumber))): ((TRISA) &= ~(1<<(enm
      +                          _pinNumber))));
  4336  01F8  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4337  01F9  1903               	btfsc	3,2
  4338  01FA  2A0B               	goto	l2225
  4339  01FB  3001               	movlw	1
  4340  01FC  00F1               	movwf	??_GPIO_PinDirection
  4341  01FD  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4342  01FE  2A01               	goto	u2344
  4343  01FF                     u2345:	
  4344  01FF  1003               	clrc
  4345  0200  0DF1               	rlf	??_GPIO_PinDirection,f
  4346  0201                     u2344:	
  4347  0201  3EFF               	addlw	-1
  4348  0202  1D03               	skipz
  4349  0203  29FF               	goto	u2345
  4350  0204  0871               	movf	??_GPIO_PinDirection,w
  4351  0205  00F2               	movwf	??_GPIO_PinDirection+1
  4352  0206  0872               	movf	??_GPIO_PinDirection+1,w
  4353  0207  1683               	bsf	3,5	;RP0=1, select bank1
  4354  0208  1303               	bcf	3,6	;RP1=0, select bank1
  4355  0209  0485               	iorwf	5,f	;volatile
  4356  020A  0008               	return
  4357  020B                     l2225:	
  4358  020B  3001               	movlw	1
  4359  020C  00F1               	movwf	??_GPIO_PinDirection
  4360  020D  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4361  020E  2A11               	goto	u2354
  4362  020F                     u2355:	
  4363  020F  1003               	clrc
  4364  0210  0DF1               	rlf	??_GPIO_PinDirection,f
  4365  0211                     u2354:	
  4366  0211  3EFF               	addlw	-1
  4367  0212  1D03               	skipz
  4368  0213  2A0F               	goto	u2355
  4369  0214  0871               	movf	??_GPIO_PinDirection,w
  4370  0215  3AFF               	xorlw	255
  4371  0216  00F2               	movwf	??_GPIO_PinDirection+1
  4372  0217  0872               	movf	??_GPIO_PinDirection+1,w
  4373  0218  1683               	bsf	3,5	;RP0=1, select bank1
  4374  0219  1303               	bcf	3,6	;RP1=0, select bank1
  4375  021A  0585               	andwf	5,f	;volatile
  4376                           
  4377                           ;gpio.c: 76: break;
  4378  021B  0008               	return
  4379  021C                     l2227:	
  4380                           ;gpio.c: 80: case 1:
  4381                           
  4382                           
  4383                           ;gpio.c: 81: ((var_pinDirn_u8)? ((TRISB) |= (1<<(enm_pinNumber))): ((TRISB) &= ~(1<<(enm
      +                          _pinNumber))));
  4384  021C  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4385  021D  1903               	btfsc	3,2
  4386  021E  2A2F               	goto	l2231
  4387  021F  3001               	movlw	1
  4388  0220  00F1               	movwf	??_GPIO_PinDirection
  4389  0221  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4390  0222  2A25               	goto	u2374
  4391  0223                     u2375:	
  4392  0223  1003               	clrc
  4393  0224  0DF1               	rlf	??_GPIO_PinDirection,f
  4394  0225                     u2374:	
  4395  0225  3EFF               	addlw	-1
  4396  0226  1D03               	skipz
  4397  0227  2A23               	goto	u2375
  4398  0228  0871               	movf	??_GPIO_PinDirection,w
  4399  0229  00F2               	movwf	??_GPIO_PinDirection+1
  4400  022A  0872               	movf	??_GPIO_PinDirection+1,w
  4401  022B  1683               	bsf	3,5	;RP0=1, select bank1
  4402  022C  1303               	bcf	3,6	;RP1=0, select bank1
  4403  022D  0486               	iorwf	6,f	;volatile
  4404  022E  0008               	return
  4405  022F                     l2231:	
  4406  022F  3001               	movlw	1
  4407  0230  00F1               	movwf	??_GPIO_PinDirection
  4408  0231  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4409  0232  2A35               	goto	u2384
  4410  0233                     u2385:	
  4411  0233  1003               	clrc
  4412  0234  0DF1               	rlf	??_GPIO_PinDirection,f
  4413  0235                     u2384:	
  4414  0235  3EFF               	addlw	-1
  4415  0236  1D03               	skipz
  4416  0237  2A33               	goto	u2385
  4417  0238  0871               	movf	??_GPIO_PinDirection,w
  4418  0239  3AFF               	xorlw	255
  4419  023A  00F2               	movwf	??_GPIO_PinDirection+1
  4420  023B  0872               	movf	??_GPIO_PinDirection+1,w
  4421  023C  1683               	bsf	3,5	;RP0=1, select bank1
  4422  023D  1303               	bcf	3,6	;RP1=0, select bank1
  4423  023E  0586               	andwf	6,f	;volatile
  4424                           
  4425                           ;gpio.c: 82: break;
  4426  023F  0008               	return
  4427  0240                     l2233:	
  4428                           ;gpio.c: 86: case 2:
  4429                           
  4430                           
  4431                           ;gpio.c: 87: ((var_pinDirn_u8)? ((TRISC) |= (1<<(enm_pinNumber))): ((TRISC) &= ~(1<<(enm
      +                          _pinNumber))));
  4432  0240  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4433  0241  1903               	btfsc	3,2
  4434  0242  2A53               	goto	l2237
  4435  0243  3001               	movlw	1
  4436  0244  00F1               	movwf	??_GPIO_PinDirection
  4437  0245  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4438  0246  2A49               	goto	u2404
  4439  0247                     u2405:	
  4440  0247  1003               	clrc
  4441  0248  0DF1               	rlf	??_GPIO_PinDirection,f
  4442  0249                     u2404:	
  4443  0249  3EFF               	addlw	-1
  4444  024A  1D03               	skipz
  4445  024B  2A47               	goto	u2405
  4446  024C  0871               	movf	??_GPIO_PinDirection,w
  4447  024D  00F2               	movwf	??_GPIO_PinDirection+1
  4448  024E  0872               	movf	??_GPIO_PinDirection+1,w
  4449  024F  1683               	bsf	3,5	;RP0=1, select bank1
  4450  0250  1303               	bcf	3,6	;RP1=0, select bank1
  4451  0251  0487               	iorwf	7,f	;volatile
  4452  0252  0008               	return
  4453  0253                     l2237:	
  4454  0253  3001               	movlw	1
  4455  0254  00F1               	movwf	??_GPIO_PinDirection
  4456  0255  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4457  0256  2A59               	goto	u2414
  4458  0257                     u2415:	
  4459  0257  1003               	clrc
  4460  0258  0DF1               	rlf	??_GPIO_PinDirection,f
  4461  0259                     u2414:	
  4462  0259  3EFF               	addlw	-1
  4463  025A  1D03               	skipz
  4464  025B  2A57               	goto	u2415
  4465  025C  0871               	movf	??_GPIO_PinDirection,w
  4466  025D  3AFF               	xorlw	255
  4467  025E  00F2               	movwf	??_GPIO_PinDirection+1
  4468  025F  0872               	movf	??_GPIO_PinDirection+1,w
  4469  0260  1683               	bsf	3,5	;RP0=1, select bank1
  4470  0261  1303               	bcf	3,6	;RP1=0, select bank1
  4471  0262  0587               	andwf	7,f	;volatile
  4472                           
  4473                           ;gpio.c: 88: break;
  4474  0263  0008               	return
  4475  0264                     l2239:	
  4476                           ;gpio.c: 92: case 3:
  4477                           
  4478                           
  4479                           ;gpio.c: 93: ((var_pinDirn_u8)? ((TRISD) |= (1<<(enm_pinNumber))): ((TRISD) &= ~(1<<(enm
      +                          _pinNumber))));
  4480  0264  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4481  0265  1903               	btfsc	3,2
  4482  0266  2A77               	goto	l2243
  4483  0267  3001               	movlw	1
  4484  0268  00F1               	movwf	??_GPIO_PinDirection
  4485  0269  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4486  026A  2A6D               	goto	u2434
  4487  026B                     u2435:	
  4488  026B  1003               	clrc
  4489  026C  0DF1               	rlf	??_GPIO_PinDirection,f
  4490  026D                     u2434:	
  4491  026D  3EFF               	addlw	-1
  4492  026E  1D03               	skipz
  4493  026F  2A6B               	goto	u2435
  4494  0270  0871               	movf	??_GPIO_PinDirection,w
  4495  0271  00F2               	movwf	??_GPIO_PinDirection+1
  4496  0272  0872               	movf	??_GPIO_PinDirection+1,w
  4497  0273  1683               	bsf	3,5	;RP0=1, select bank1
  4498  0274  1303               	bcf	3,6	;RP1=0, select bank1
  4499  0275  0488               	iorwf	8,f	;volatile
  4500  0276  0008               	return
  4501  0277                     l2243:	
  4502  0277  3001               	movlw	1
  4503  0278  00F1               	movwf	??_GPIO_PinDirection
  4504  0279  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4505  027A  2A7D               	goto	u2444
  4506  027B                     u2445:	
  4507  027B  1003               	clrc
  4508  027C  0DF1               	rlf	??_GPIO_PinDirection,f
  4509  027D                     u2444:	
  4510  027D  3EFF               	addlw	-1
  4511  027E  1D03               	skipz
  4512  027F  2A7B               	goto	u2445
  4513  0280  0871               	movf	??_GPIO_PinDirection,w
  4514  0281  3AFF               	xorlw	255
  4515  0282  00F2               	movwf	??_GPIO_PinDirection+1
  4516  0283  0872               	movf	??_GPIO_PinDirection+1,w
  4517  0284  1683               	bsf	3,5	;RP0=1, select bank1
  4518  0285  1303               	bcf	3,6	;RP1=0, select bank1
  4519  0286  0588               	andwf	8,f	;volatile
  4520                           
  4521                           ;gpio.c: 94: break;
  4522  0287  0008               	return
  4523  0288                     l2245:	
  4524                           ;gpio.c: 97: case 4:
  4525                           
  4526                           
  4527                           ;gpio.c: 98: ((var_pinDirn_u8)? ((TRISE) |= (1<<(enm_pinNumber))): ((TRISE) &= ~(1<<(enm
      +                          _pinNumber))));
  4528  0288  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4529  0289  1903               	btfsc	3,2
  4530  028A  2A9B               	goto	l2249
  4531  028B  3001               	movlw	1
  4532  028C  00F1               	movwf	??_GPIO_PinDirection
  4533  028D  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4534  028E  2A91               	goto	u2464
  4535  028F                     u2465:	
  4536  028F  1003               	clrc
  4537  0290  0DF1               	rlf	??_GPIO_PinDirection,f
  4538  0291                     u2464:	
  4539  0291  3EFF               	addlw	-1
  4540  0292  1D03               	skipz
  4541  0293  2A8F               	goto	u2465
  4542  0294  0871               	movf	??_GPIO_PinDirection,w
  4543  0295  00F2               	movwf	??_GPIO_PinDirection+1
  4544  0296  0872               	movf	??_GPIO_PinDirection+1,w
  4545  0297  1683               	bsf	3,5	;RP0=1, select bank1
  4546  0298  1303               	bcf	3,6	;RP1=0, select bank1
  4547  0299  0489               	iorwf	9,f	;volatile
  4548  029A  0008               	return
  4549  029B                     l2249:	
  4550  029B  3001               	movlw	1
  4551  029C  00F1               	movwf	??_GPIO_PinDirection
  4552  029D  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4553  029E  2AA1               	goto	u2474
  4554  029F                     u2475:	
  4555  029F  1003               	clrc
  4556  02A0  0DF1               	rlf	??_GPIO_PinDirection,f
  4557  02A1                     u2474:	
  4558  02A1  3EFF               	addlw	-1
  4559  02A2  1D03               	skipz
  4560  02A3  2A9F               	goto	u2475
  4561  02A4  0871               	movf	??_GPIO_PinDirection,w
  4562  02A5  3AFF               	xorlw	255
  4563  02A6  00F2               	movwf	??_GPIO_PinDirection+1
  4564  02A7  0872               	movf	??_GPIO_PinDirection+1,w
  4565  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  4566  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  4567  02AA  0589               	andwf	9,f	;volatile
  4568                           
  4569                           ;gpio.c: 101: }
  4570                           
  4571                           ;gpio.c: 99: break;
  4572  02AB  0008               	return
  4573  02AC                     l2253:	
  4574  02AC  0873               	movf	GPIO_PinDirection@var_portNumber_u8,w
  4575                           
  4576                           ; Switch size 1, requested type "space"
  4577                           ; Number of cases is 5, Range of values is 0 to 4
  4578                           ; switch strategies available:
  4579                           ; Name         Instructions Cycles
  4580                           ; simple_byte           16     9 (average)
  4581                           ; direct_byte           23     8 (fixed)
  4582                           ; jumptable            260     6 (fixed)
  4583                           ;	Chosen strategy is simple_byte
  4584  02AD  3A00               	xorlw	0	; case 0
  4585  02AE  1903               	skipnz
  4586  02AF  29F8               	goto	l2221
  4587  02B0  3A01               	xorlw	1	; case 1
  4588  02B1  1903               	skipnz
  4589  02B2  2A1C               	goto	l2227
  4590  02B3  3A03               	xorlw	3	; case 2
  4591  02B4  1903               	skipnz
  4592  02B5  2A40               	goto	l2233
  4593  02B6  3A01               	xorlw	1	; case 3
  4594  02B7  1903               	skipnz
  4595  02B8  2A64               	goto	l2239
  4596  02B9  3A07               	xorlw	7	; case 4
  4597  02BA  1903               	skipnz
  4598  02BB  2A88               	goto	l2245
  4599  02BC  2ABD               	goto	l123
  4600  02BD                     l123:	
  4601  02BD  0008               	return
  4602  02BE                     __end_of_GPIO_PinDirection:	
  4603                           
  4604                           	psect	text22
  4605  168B                     __ptext22:	
  4606 ;; *************** function _DELAY_ms *****************
  4607 ;; Defined at:
  4608 ;;		line 75 in file "../00-libfiles/delay.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;  ms_count        2    2[COMMON] unsigned int 
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;		None
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  1    wreg      void 
  4615 ;; Registers used:
  4616 ;;		wreg, status,2, status,0, pclath, cstack
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4622 ;;      Params:         2       0       0       0       0
  4623 ;;      Locals:         0       0       0       0       0
  4624 ;;      Temps:          0       0       0       0       0
  4625 ;;      Totals:         2       0       0       0       0
  4626 ;;Total ram usage:        2 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; Hardware stack levels required when called:    1
  4629 ;; This function calls:
  4630 ;;		_DELAY_us
  4631 ;; This function is called by:
  4632 ;;		_LCD_Init
  4633 ;;		_lcd_BusyCheck
  4634 ;;		_lcd_Reset
  4635 ;;		_led_Test
  4636 ;;		_LCD_ScrollMessage
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           
  4641                           ;psect for function _DELAY_ms
  4642  168B                     _DELAY_ms:	
  4643  168B                     l2215:	
  4644                           ;delay.c: 77: while (ms_count != 0)
  4645                           
  4646                           ;incstack = 0
  4647                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  4648                           
  4649  168B  0872               	movf	DELAY_ms@ms_count,w
  4650  168C  0473               	iorwf	DELAY_ms@ms_count+1,w
  4651  168D  1903               	btfsc	3,2
  4652  168E  0008               	return
  4653                           
  4654                           ;delay.c: 78: {
  4655                           ;delay.c: 79: DELAY_us(300u);
  4656  168F  302C               	movlw	44
  4657  1690  00F0               	movwf	DELAY_us@us_count
  4658  1691  3001               	movlw	1
  4659  1692  00F1               	movwf	DELAY_us@us_count+1
  4660  1693  160A  118A  2662  160A  118A  	fcall	_DELAY_us
  4661                           
  4662                           ;delay.c: 80: ms_count--;
  4663  1698  3001               	movlw	1
  4664  1699  02F2               	subwf	DELAY_ms@ms_count,f
  4665  169A  3000               	movlw	0
  4666  169B  1C03               	skipc
  4667  169C  03F3               	decf	DELAY_ms@ms_count+1,f
  4668  169D  02F3               	subwf	DELAY_ms@ms_count+1,f
  4669  169E  2E8B               	goto	l2215
  4670  169F                     __end_of_DELAY_ms:	
  4671                           
  4672                           	psect	text23
  4673  0CFC                     __ptext23:	
  4674 ;; *************** function _eeprom_Test *****************
  4675 ;; Defined at:
  4676 ;;		line 185 in file "main.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;		None
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;  write_char      1   75[BANK0 ] unsigned char 
  4681 ;;  eeprom_addre    1   74[BANK0 ] unsigned char 
  4682 ;;  read_char       1   73[BANK0 ] unsigned char 
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4692 ;;      Params:         0       0       0       0       0
  4693 ;;      Locals:         0       3       0       0       0
  4694 ;;      Temps:          0       3       0       0       0
  4695 ;;      Totals:         0       6       0       0       0
  4696 ;;Total ram usage:        6 bytes
  4697 ;; Hardware stack levels used:    1
  4698 ;; Hardware stack levels required when called:    4
  4699 ;; This function calls:
  4700 ;;		_EEPROM_ReadByte
  4701 ;;		_EEPROM_WriteByte
  4702 ;;		_UART_Printf
  4703 ;; This function is called by:
  4704 ;;		_main
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           
  4709                           ;psect for function _eeprom_Test
  4710  0CFC                     _eeprom_Test:	
  4711                           
  4712                           ;main.c: 187: unsigned char eeprom_address = 0x00, write_char = 'X', read_char;
  4713                           
  4714                           ;incstack = 0
  4715                           ; Regs used in _eeprom_Test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4716  0CFC  1283               	bcf	3,5	;RP0=0, select bank0
  4717  0CFD  1303               	bcf	3,6	;RP1=0, select bank0
  4718  0CFE  01EA               	clrf	eeprom_Test@eeprom_address
  4719  0CFF  3058               	movlw	88
  4720  0D00  00E6               	movwf	??_eeprom_Test
  4721  0D01  0866               	movf	??_eeprom_Test,w
  4722  0D02  00EB               	movwf	eeprom_Test@write_char
  4723                           
  4724                           ;main.c: 189: UART_Printf("\n\r\n\rInbuilt Eeprom Test. Writing and reading A-Z to and f
      +                          rom Eeprom.");
  4725  0D03  3083               	movlw	low (STR_5| (0+32768))
  4726  0D04  00CB               	movwf	UART_Printf@argList
  4727  0D05  3088               	movlw	high (STR_5| (0+32768))
  4728  0D06  00CC               	movwf	UART_Printf@argList+1
  4729  0D07  120A  118A  2592  120A  158A  	fcall	_UART_Printf
  4730                           
  4731                           ;main.c: 191: for(write_char='A';write_char<='Z';write_char++)
  4732  0D0C  3041               	movlw	65
  4733  0D0D  1283               	bcf	3,5	;RP0=0, select bank0
  4734  0D0E  1303               	bcf	3,6	;RP1=0, select bank0
  4735  0D0F  00E6               	movwf	??_eeprom_Test
  4736  0D10  0866               	movf	??_eeprom_Test,w
  4737  0D11  00EB               	movwf	eeprom_Test@write_char
  4738  0D12  305B               	movlw	91
  4739  0D13  026B               	subwf	eeprom_Test@write_char,w
  4740  0D14  1803               	btfsc	3,0
  4741  0D15  2D65               	goto	l587
  4742  0D16                     l3133:	
  4743                           
  4744                           ;main.c: 192: {
  4745                           ;main.c: 193: UART_Printf("\n\rEeprom Write: %c    ",write_char);
  4746  0D16  3016               	movlw	low (STR_6| (0+32768))
  4747  0D17  00CB               	movwf	UART_Printf@argList
  4748  0D18  3089               	movlw	high (STR_6| (0+32768))
  4749  0D19  00CC               	movwf	UART_Printf@argList+1
  4750  0D1A  086B               	movf	eeprom_Test@write_char,w
  4751  0D1B  00E6               	movwf	??_eeprom_Test
  4752  0D1C  01E7               	clrf	??_eeprom_Test+1
  4753  0D1D  0866               	movf	??_eeprom_Test,w
  4754  0D1E  00CD               	movwf	?_UART_Printf+2
  4755  0D1F  0867               	movf	??_eeprom_Test+1,w
  4756  0D20  00CE               	movwf	?_UART_Printf+3
  4757  0D21  120A  118A  2592  120A  158A  	fcall	_UART_Printf
  4758                           
  4759                           ;main.c: 194: EEPROM_WriteByte(eeprom_address, write_char);
  4760  0D26  1283               	bcf	3,5	;RP0=0, select bank0
  4761  0D27  1303               	bcf	3,6	;RP1=0, select bank0
  4762  0D28  086A               	movf	eeprom_Test@eeprom_address,w
  4763  0D29  00E6               	movwf	??_eeprom_Test
  4764  0D2A  01E7               	clrf	??_eeprom_Test+1
  4765  0D2B  0866               	movf	??_eeprom_Test,w
  4766  0D2C  00F2               	movwf	EEPROM_WriteByte@v_eepromAddress_u16
  4767  0D2D  0867               	movf	??_eeprom_Test+1,w
  4768  0D2E  00F3               	movwf	EEPROM_WriteByte@v_eepromAddress_u16+1
  4769  0D2F  086B               	movf	eeprom_Test@write_char,w
  4770  0D30  00E8               	movwf	??_eeprom_Test+2
  4771  0D31  0868               	movf	??_eeprom_Test+2,w
  4772  0D32  00F4               	movwf	EEPROM_WriteByte@v_eepromData_u8
  4773  0D33  160A  118A  271B  120A  158A  	fcall	_EEPROM_WriteByte
  4774                           
  4775                           ;main.c: 197: read_char = EEPROM_ReadByte(eeprom_address);
  4776  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  4777  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  4778  0D3A  086A               	movf	eeprom_Test@eeprom_address,w
  4779  0D3B  00E6               	movwf	??_eeprom_Test
  4780  0D3C  01E7               	clrf	??_eeprom_Test+1
  4781  0D3D  0866               	movf	??_eeprom_Test,w
  4782  0D3E  00F2               	movwf	EEPROM_ReadByte@v_eepromAddress_u16
  4783  0D3F  0867               	movf	??_eeprom_Test+1,w
  4784  0D40  00F3               	movwf	EEPROM_ReadByte@v_eepromAddress_u16+1
  4785  0D41  160A  118A  26B5  120A  158A  	fcall	_EEPROM_ReadByte
  4786  0D46  1283               	bcf	3,5	;RP0=0, select bank0
  4787  0D47  1303               	bcf	3,6	;RP1=0, select bank0
  4788  0D48  00E8               	movwf	??_eeprom_Test+2
  4789  0D49  0868               	movf	??_eeprom_Test+2,w
  4790  0D4A  00E9               	movwf	eeprom_Test@read_char
  4791                           
  4792                           ;main.c: 198: UART_Printf("Eeprom Read: %c",read_char);
  4793  0D4B  303F               	movlw	low (STR_7| (0+32768))
  4794  0D4C  00CB               	movwf	UART_Printf@argList
  4795  0D4D  3089               	movlw	high (STR_7| (0+32768))
  4796  0D4E  00CC               	movwf	UART_Printf@argList+1
  4797  0D4F  0869               	movf	eeprom_Test@read_char,w
  4798  0D50  00E6               	movwf	??_eeprom_Test
  4799  0D51  01E7               	clrf	??_eeprom_Test+1
  4800  0D52  0866               	movf	??_eeprom_Test,w
  4801  0D53  00CD               	movwf	?_UART_Printf+2
  4802  0D54  0867               	movf	??_eeprom_Test+1,w
  4803  0D55  00CE               	movwf	?_UART_Printf+3
  4804  0D56  120A  118A  2592  120A  158A  	fcall	_UART_Printf
  4805  0D5B  3001               	movlw	1
  4806  0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  4807  0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  4808  0D5E  00E6               	movwf	??_eeprom_Test
  4809  0D5F  0866               	movf	??_eeprom_Test,w
  4810  0D60  07EB               	addwf	eeprom_Test@write_char,f
  4811  0D61  305B               	movlw	91
  4812  0D62  026B               	subwf	eeprom_Test@write_char,w
  4813  0D63  1C03               	skipc
  4814  0D64  2D16               	goto	l3133
  4815  0D65                     l587:	
  4816                           ;main.c: 199: }
  4817                           ;main.c: 201: while (1);
  4818                           
  4819  0D65  2D65               	goto	l587
  4820  0D66                     __end_of_eeprom_Test:	
  4821                           
  4822                           	psect	text24
  4823  171B                     __ptext24:	
  4824 ;; *************** function _EEPROM_WriteByte *****************
  4825 ;; Defined at:
  4826 ;;		line 57 in file "../00-libfiles/eeprom.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;  v_eepromAddr    2    2[COMMON] unsigned int 
  4829 ;;  v_eepromData    1    4[COMMON] unsigned char 
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;		None
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		wreg, status,2, status,0, pclath, cstack
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4841 ;;      Params:         3       0       0       0       0
  4842 ;;      Locals:         0       0       0       0       0
  4843 ;;      Temps:          0       0       0       0       0
  4844 ;;      Totals:         3       0       0       0       0
  4845 ;;Total ram usage:        3 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; Hardware stack levels required when called:    1
  4848 ;; This function calls:
  4849 ;;		_DELAY_us
  4850 ;; This function is called by:
  4851 ;;		_eeprom_Test
  4852 ;;		_EEPROM_WriteString
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           
  4857                           ;psect for function _EEPROM_WriteByte
  4858  171B                     _EEPROM_WriteByte:	
  4859  171B                     l54:	
  4860                           ;eeprom.c: 59: while(RD || WR);
  4861                           
  4862                           ;incstack = 0
  4863                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  4864                           
  4865  171B  1683               	bsf	3,5	;RP0=1, select bank3
  4866  171C  1703               	bsf	3,6	;RP1=1, select bank3
  4867  171D  180C               	btfsc	12,0	;volsfr
  4868  171E  2F1B               	goto	l54
  4869  171F  188C               	btfsc	12,1	;volsfr
  4870  1720  2F1B               	goto	l54
  4871                           
  4872                           ;eeprom.c: 60: EEADR=v_eepromAddress_u16;
  4873  1721  0872               	movf	EEPROM_WriteByte@v_eepromAddress_u16,w
  4874  1722  1283               	bcf	3,5	;RP0=0, select bank2
  4875  1723  1703               	bsf	3,6	;RP1=1, select bank2
  4876  1724  008D               	movwf	13	;volatile
  4877                           
  4878                           ;eeprom.c: 62: EEDATA=v_eepromData_u8;
  4879  1725  0874               	movf	EEPROM_WriteByte@v_eepromData_u8,w
  4880  1726  008C               	movwf	12	;volatile
  4881                           
  4882                           ;eeprom.c: 63: WREN=1;
  4883  1727  1683               	bsf	3,5	;RP0=1, select bank3
  4884  1728  1703               	bsf	3,6	;RP1=1, select bank3
  4885  1729  150C               	bsf	12,2	;volsfr
  4886                           
  4887                           ;eeprom.c: 64: EECON2=0x55;
  4888  172A  3055               	movlw	85
  4889  172B  008D               	movwf	13	;volsfr
  4890                           
  4891                           ;eeprom.c: 65: EECON2=0xaa;
  4892  172C  30AA               	movlw	170
  4893  172D  008D               	movwf	13	;volsfr
  4894                           
  4895                           ;eeprom.c: 66: WR=1;
  4896  172E  148C               	bsf	12,1	;volsfr
  4897                           
  4898                           ;eeprom.c: 67: DELAY_us(10);
  4899  172F  300A               	movlw	10
  4900  1730  00F0               	movwf	DELAY_us@us_count
  4901  1731  3000               	movlw	0
  4902  1732  00F1               	movwf	DELAY_us@us_count+1
  4903  1733  160A  118A  2662   	fcall	_DELAY_us
  4904                           
  4905                           ;eeprom.c: 68: WREN=0;
  4906  1736  1683               	bsf	3,5	;RP0=1, select bank3
  4907  1737  1703               	bsf	3,6	;RP1=1, select bank3
  4908  1738  110C               	bcf	12,2	;volsfr
  4909  1739  0008               	return
  4910  173A                     __end_of_EEPROM_WriteByte:	
  4911                           
  4912                           	psect	text25
  4913  16B5                     __ptext25:	
  4914 ;; *************** function _EEPROM_ReadByte *****************
  4915 ;; Defined at:
  4916 ;;		line 84 in file "../00-libfiles/eeprom.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;  v_eepromAddr    2    2[COMMON] unsigned int 
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;		None
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  1    wreg      unsigned char 
  4923 ;; Registers used:
  4924 ;;		wreg, status,2, status,0, pclath, cstack
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4930 ;;      Params:         2       0       0       0       0
  4931 ;;      Locals:         0       0       0       0       0
  4932 ;;      Temps:          0       0       0       0       0
  4933 ;;      Totals:         2       0       0       0       0
  4934 ;;Total ram usage:        2 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; Hardware stack levels required when called:    1
  4937 ;; This function calls:
  4938 ;;		_DELAY_us
  4939 ;; This function is called by:
  4940 ;;		_eeprom_Test
  4941 ;;		_EEPROM_ReadString
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           
  4946                           ;psect for function _EEPROM_ReadByte
  4947  16B5                     _EEPROM_ReadByte:	
  4948  16B5                     l60:	
  4949                           ;eeprom.c: 86: while(RD || WR);
  4950                           
  4951                           ;incstack = 0
  4952                           ; Regs used in _EEPROM_ReadByte: [wreg+status,2+status,0+pclath+cstack]
  4953                           
  4954  16B5  1683               	bsf	3,5	;RP0=1, select bank3
  4955  16B6  1703               	bsf	3,6	;RP1=1, select bank3
  4956  16B7  180C               	btfsc	12,0	;volsfr
  4957  16B8  2EB5               	goto	l60
  4958  16B9  188C               	btfsc	12,1	;volsfr
  4959  16BA  2EB5               	goto	l60
  4960                           
  4961                           ;eeprom.c: 87: EEADR=v_eepromAddress_u16;
  4962  16BB  0872               	movf	EEPROM_ReadByte@v_eepromAddress_u16,w
  4963  16BC  1283               	bcf	3,5	;RP0=0, select bank2
  4964  16BD  1703               	bsf	3,6	;RP1=1, select bank2
  4965  16BE  008D               	movwf	13	;volatile
  4966                           
  4967                           ;eeprom.c: 89: RD = 1;
  4968  16BF  1683               	bsf	3,5	;RP0=1, select bank3
  4969  16C0  1703               	bsf	3,6	;RP1=1, select bank3
  4970  16C1  140C               	bsf	12,0	;volsfr
  4971                           
  4972                           ;eeprom.c: 90: DELAY_us(50);
  4973  16C2  3032               	movlw	50
  4974  16C3  00F0               	movwf	DELAY_us@us_count
  4975  16C4  3000               	movlw	0
  4976  16C5  00F1               	movwf	DELAY_us@us_count+1
  4977  16C6  160A  118A  2662   	fcall	_DELAY_us
  4978                           
  4979                           ;eeprom.c: 91: return(EEDATA);
  4980  16C9  1283               	bcf	3,5	;RP0=0, select bank2
  4981  16CA  1703               	bsf	3,6	;RP1=1, select bank2
  4982  16CB  080C               	movf	12,w	;volatile
  4983  16CC  0008               	return
  4984  16CD                     __end_of_EEPROM_ReadByte:	
  4985                           
  4986                           	psect	text26
  4987  16FE                     __ptext26:	
  4988 ;; *************** function _adc_Test *****************
  4989 ;; Defined at:
  4990 ;;		line 174 in file "main.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;		None
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;		None
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  1    wreg      void 
  4997 ;; Registers used:
  4998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5004 ;;      Params:         0       0       0       0       0
  5005 ;;      Locals:         0       0       0       0       0
  5006 ;;      Temps:          0       0       0       0       0
  5007 ;;      Totals:         0       0       0       0       0
  5008 ;;Total ram usage:        0 bytes
  5009 ;; Hardware stack levels used:    1
  5010 ;; Hardware stack levels required when called:    4
  5011 ;; This function calls:
  5012 ;;		_ADC_GetAdcValue
  5013 ;;		_ADC_Init
  5014 ;;		_UART_Printf
  5015 ;; This function is called by:
  5016 ;;		_main
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           
  5021                           ;psect for function _adc_Test
  5022  16FE                     _adc_Test:	
  5023                           
  5024                           ;main.c: 176: ADC_Init();
  5025                           
  5026                           ;incstack = 0
  5027                           ; Regs used in _adc_Test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5028  16FE  160A  118A  2647  160A  118A  	fcall	_ADC_Init
  5029  1703                     l3119:	
  5030                           ;main.c: 178: while(1)
  5031                           
  5032                           
  5033                           ;main.c: 179: {
  5034                           ;main.c: 180: UART_Printf("\n\rADC0 value= %4d",ADC_GetAdcValue(0));
  5035  1703  302D               	movlw	low (STR_4| (0+32768))
  5036  1704  1283               	bcf	3,5	;RP0=0, select bank0
  5037  1705  1303               	bcf	3,6	;RP1=0, select bank0
  5038  1706  00CB               	movwf	UART_Printf@argList
  5039  1707  3089               	movlw	high (STR_4| (0+32768))
  5040  1708  00CC               	movwf	UART_Printf@argList+1
  5041  1709  3000               	movlw	0
  5042  170A  160A  118A  273A  160A  118A  	fcall	_ADC_GetAdcValue
  5043  170F  0873               	movf	?_ADC_GetAdcValue+1,w
  5044  1710  1283               	bcf	3,5	;RP0=0, select bank0
  5045  1711  1303               	bcf	3,6	;RP1=0, select bank0
  5046  1712  00CE               	movwf	?_UART_Printf+3
  5047  1713  0872               	movf	?_ADC_GetAdcValue,w
  5048  1714  00CD               	movwf	?_UART_Printf+2
  5049  1715  120A  118A  2592  160A  118A  	fcall	_UART_Printf
  5050  171A  2F03               	goto	l3119
  5051  171B                     __end_of_adc_Test:	
  5052                           
  5053                           	psect	text27
  5054  0592                     __ptext27:	
  5055 ;; *************** function _UART_Printf *****************
  5056 ;; Defined at:
  5057 ;;		line 413 in file "../00-libfiles/uart.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  argList         2   43[BANK0 ] PTR const unsigned char 
  5060 ;;		 -> STR_7(16), STR_6(23), STR_5(69), STR_4(18), 
  5061 ;;		 -> STR_1(131), 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  v_num_u32       4   59[BANK0 ] unsigned long 
  5064 ;;  v_num_s32       4   53[BANK0 ] long 
  5065 ;;  v_floatNum_f    3   49[BANK0 ] long 
  5066 ;;  ptr             2   65[BANK0 ] PTR const unsigned char 
  5067 ;;		 -> STR_7(16), STR_6(23), STR_5(69), STR_4(18), 
  5068 ;;		 -> STR_1(131), 
  5069 ;;  v_num_u16       2   63[BANK0 ] unsigned int 
  5070 ;;  v_num_s16       2   57[BANK0 ] int 
  5071 ;;  argp            1   69[BANK0 ] PTR void [1]
  5072 ;;		 -> ?_UART_Printf(1), 
  5073 ;;  v_numOfDigit    1   68[BANK0 ] unsigned char 
  5074 ;;  ch              1   67[BANK0 ] unsigned char 
  5075 ;;  str             1   52[BANK0 ] PTR unsigned char 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      void 
  5078 ;; Registers used:
  5079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5085 ;;      Params:         0       4       0       0       0
  5086 ;;      Locals:         0      21       0       0       0
  5087 ;;      Temps:          0       2       0       0       0
  5088 ;;      Totals:         0      27       0       0       0
  5089 ;;Total ram usage:       27 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    3
  5092 ;; This function calls:
  5093 ;;		_UART_TxChar
  5094 ;;		_UART_TxFloatNumber
  5095 ;;		_UART_TxNumber
  5096 ;;		_UART_TxString
  5097 ;;		___bmul
  5098 ;; This function is called by:
  5099 ;;		_main
  5100 ;;		_adc_Test
  5101 ;;		_eeprom_Test
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           
  5106                           ;psect for function _UART_Printf
  5107  0592                     _UART_Printf:	
  5108                           
  5109                           ;uart.c: 415: const char *ptr;
  5110                           ;uart.c: 416: va_list argp;
  5111                           ;uart.c: 417: sint16_t v_num_s16;
  5112                           ;uart.c: 418: sint32_t v_num_s32;
  5113                           ;uart.c: 419: uint16_t v_num_u16;
  5114                           ;uart.c: 420: uint32_t v_num_u32;
  5115                           ;uart.c: 421: char *str;
  5116                           ;uart.c: 422: char ch;
  5117                           ;uart.c: 423: uint8_t v_numOfDigitsToTransmit_u8;
  5118                           ;uart.c: 425: double v_floatNum_f32;
  5119                           ;uart.c: 429: *argp = __va_start();
  5120                           
  5121                           ;incstack = 0
  5122                           ; Regs used in _UART_Printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5123  0592  304D               	movlw	(low ((?_UART_Printf| 0+2)))& (0+255)
  5124  0593  1283               	bcf	3,5	;RP0=0, select bank0
  5125  0594  1303               	bcf	3,6	;RP1=0, select bank0
  5126  0595  00CF               	movwf	??_UART_Printf
  5127  0596  084F               	movf	??_UART_Printf,w
  5128  0597  00E5               	movwf	UART_Printf@argp
  5129                           
  5130                           ;uart.c: 432: for(ptr = argList; *ptr != '\0'; ptr++)
  5131  0598  084B               	movf	UART_Printf@argList,w
  5132  0599  00E1               	movwf	UART_Printf@ptr
  5133  059A  084C               	movf	UART_Printf@argList+1,w
  5134  059B  00E2               	movwf	UART_Printf@ptr+1
  5135  059C                     l3043:	
  5136  059C  0862               	movf	UART_Printf@ptr+1,w
  5137  059D  00FF               	movwf	127
  5138  059E  0861               	movf	UART_Printf@ptr,w
  5139  059F  0084               	movwf	4
  5140  05A0  160A  118A  2000  120A  118A  	fcall	stringtab
  5141  05A5  3A00               	xorlw	0
  5142  05A6  1903               	btfsc	3,2
  5143  05A7  0008               	return
  5144                           
  5145                           ;uart.c: 433: {
  5146                           ;uart.c: 435: ch= *ptr;
  5147  05A8  0862               	movf	UART_Printf@ptr+1,w
  5148  05A9  00FF               	movwf	127
  5149  05AA  0861               	movf	UART_Printf@ptr,w
  5150  05AB  0084               	movwf	4
  5151  05AC  160A  118A  2000  120A  118A  	fcall	stringtab
  5152  05B1  00CF               	movwf	??_UART_Printf
  5153  05B2  084F               	movf	??_UART_Printf,w
  5154  05B3  00E3               	movwf	UART_Printf@ch
  5155                           
  5156                           ;uart.c: 436: if(ch == '%')
  5157  05B4  3025               	movlw	37
  5158  05B5  0663               	xorwf	UART_Printf@ch,w
  5159  05B6  1D03               	btfss	3,2
  5160  05B7  2FC5               	goto	l3039
  5161                           
  5162                           ;uart.c: 437: {
  5163                           ;uart.c: 438: ptr++;
  5164  05B8  3001               	movlw	1
  5165  05B9  07E1               	addwf	UART_Printf@ptr,f
  5166  05BA  1803               	skipnc
  5167  05BB  0AE2               	incf	UART_Printf@ptr+1,f
  5168  05BC  3000               	movlw	0
  5169  05BD  07E2               	addwf	UART_Printf@ptr+1,f
  5170                           
  5171                           ;uart.c: 439: ch = *ptr;
  5172  05BE  0862               	movf	UART_Printf@ptr+1,w
  5173  05BF  00FF               	movwf	127
  5174  05C0  0861               	movf	UART_Printf@ptr,w
  5175  05C1  0084               	movwf	4
  5176  05C2  160A  118A  2000  120A  118A  	fcall	stringtab
  5177  05C7  00CF               	movwf	??_UART_Printf
  5178  05C8  084F               	movf	??_UART_Printf,w
  5179  05C9  00E3               	movwf	UART_Printf@ch
  5180                           
  5181                           ;uart.c: 440: if((ch>=0x30) && (ch<=0x39))
  5182  05CA  3030               	movlw	48
  5183  05CB  0263               	subwf	UART_Printf@ch,w
  5184  05CC  1C03               	skipc
  5185  05CD  2DFF               	goto	l2945
  5186  05CE  303A               	movlw	58
  5187  05CF  0263               	subwf	UART_Printf@ch,w
  5188  05D0  1803               	skipnc
  5189  05D1  2DFF               	goto	l2945
  5190                           
  5191                           ;uart.c: 441: {
  5192                           ;uart.c: 442: v_numOfDigitsToTransmit_u8 = 0;
  5193  05D2  01E4               	clrf	UART_Printf@v_numOfDigitsToTransmit_u8
  5194  05D3                     l2941:	
  5195                           ;uart.c: 443: while((ch>=0x30) && (ch<=0x39))
  5196                           
  5197  05D3  3030               	movlw	48
  5198  05D4  0263               	subwf	UART_Printf@ch,w
  5199  05D5  1C03               	skipc
  5200  05D6  2F93               	goto	l3037
  5201  05D7  303A               	movlw	58
  5202  05D8  0263               	subwf	UART_Printf@ch,w
  5203  05D9  1803               	btfsc	3,0
  5204  05DA  2F93               	goto	l3037
  5205                           
  5206                           ;uart.c: 444: {
  5207                           ;uart.c: 445: v_numOfDigitsToTransmit_u8 = (v_numOfDigitsToTransmit_u8 * 10) + (ch-0x30)
      +                          ;
  5208  05DB  300A               	movlw	10
  5209  05DC  00CF               	movwf	??_UART_Printf
  5210  05DD  084F               	movf	??_UART_Printf,w
  5211  05DE  00A0               	movwf	___bmul@multiplicand
  5212  05DF  0864               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5213  05E0  160A  118A  2678  120A  118A  	fcall	___bmul
  5214  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  5215  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  5216  05E7  0763               	addwf	UART_Printf@ch,w
  5217  05E8  3ED0               	addlw	208
  5218  05E9  00D0               	movwf	??_UART_Printf+1
  5219  05EA  0850               	movf	??_UART_Printf+1,w
  5220  05EB  00E4               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  5221                           
  5222                           ;uart.c: 446: ptr++;
  5223  05EC  3001               	movlw	1
  5224  05ED  07E1               	addwf	UART_Printf@ptr,f
  5225  05EE  1803               	skipnc
  5226  05EF  0AE2               	incf	UART_Printf@ptr+1,f
  5227  05F0  3000               	movlw	0
  5228  05F1  07E2               	addwf	UART_Printf@ptr+1,f
  5229                           
  5230                           ;uart.c: 447: ch = *ptr;
  5231  05F2  0862               	movf	UART_Printf@ptr+1,w
  5232  05F3  00FF               	movwf	127
  5233  05F4  0861               	movf	UART_Printf@ptr,w
  5234  05F5  0084               	movwf	4
  5235  05F6  160A  118A  2000  120A  118A  	fcall	stringtab
  5236  05FB  00CF               	movwf	??_UART_Printf
  5237  05FC  084F               	movf	??_UART_Printf,w
  5238  05FD  00E3               	movwf	UART_Printf@ch
  5239  05FE  2DD3               	goto	l2941
  5240  05FF                     l2945:	
  5241                           ;uart.c: 448: }
  5242                           ;uart.c: 449: }
  5243                           
  5244                           
  5245                           ;uart.c: 450: else
  5246                           ;uart.c: 451: {
  5247                           ;uart.c: 452: v_numOfDigitsToTransmit_u8 = 0xffu;
  5248  05FF  30FF               	movlw	255
  5249  0600  00CF               	movwf	??_UART_Printf
  5250  0601  084F               	movf	??_UART_Printf,w
  5251  0602  00E4               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  5252                           
  5253                           ;uart.c: 453: }
  5254                           ;uart.c: 456: switch(ch)
  5255  0603  2F93               	goto	l3037
  5256  0604                     l2947:	
  5257                           ;uart.c: 457: {
  5258                           ;uart.c: 458: case 'C':
  5259                           
  5260                           
  5261                           ;uart.c: 459: case 'c':
  5262                           ;uart.c: 460: ch = (*(uint8_t *)__va_arg((*(uint8_t **)argp), (uint8_t)0));
  5263  0604  0865               	movf	UART_Printf@argp,w
  5264  0605  0084               	movwf	4
  5265  0606  1383               	bcf	3,7	;select IRP bank0
  5266  0607  0800               	movf	0,w
  5267  0608  00CF               	movwf	??_UART_Printf
  5268  0609  084F               	movf	??_UART_Printf,w
  5269  060A  00E3               	movwf	UART_Printf@ch
  5270  060B  3002               	movlw	2
  5271  060C  00CF               	movwf	??_UART_Printf
  5272  060D  084F               	movf	??_UART_Printf,w
  5273  060E  07E5               	addwf	UART_Printf@argp,f
  5274  060F  2FC5               	goto	l3039
  5275  0610                     l2953:	
  5276                           ;uart.c: 464: case 'd':
  5277                           
  5278                           ;uart.c: 462: break;
  5279                           
  5280                           ;uart.c: 461: UART_TxChar(ch);
  5281                           
  5282                           
  5283                           ;uart.c: 465: v_num_s16 = (*(sint16_t *)__va_arg((*(sint16_t **)argp), (sint16_t)0));
  5284  0610  1283               	bcf	3,5	;RP0=0, select bank0
  5285  0611  1303               	bcf	3,6	;RP1=0, select bank0
  5286  0612  0865               	movf	UART_Printf@argp,w
  5287  0613  0084               	movwf	4
  5288  0614  1383               	bcf	3,7	;select IRP bank0
  5289  0615  0800               	movf	0,w
  5290  0616  00D9               	movwf	UART_Printf@v_num_s16
  5291  0617  0A84               	incf	4,f
  5292  0618  0800               	movf	0,w
  5293  0619  00DA               	movwf	UART_Printf@v_num_s16+1
  5294  061A  3002               	movlw	2
  5295  061B  00CF               	movwf	??_UART_Printf
  5296  061C  084F               	movf	??_UART_Printf,w
  5297  061D  07E5               	addwf	UART_Printf@argp,f
  5298                           
  5299                           ;uart.c: 466: if(v_num_s16<0)
  5300  061E  1FDA               	btfss	UART_Printf@v_num_s16+1,7
  5301  061F  2E2B               	goto	l2963
  5302                           
  5303                           ;uart.c: 467: {
  5304                           ;uart.c: 468: v_num_s16 = -v_num_s16;
  5305  0620  09D9               	comf	UART_Printf@v_num_s16,f
  5306  0621  09DA               	comf	UART_Printf@v_num_s16+1,f
  5307  0622  0AD9               	incf	UART_Printf@v_num_s16,f
  5308  0623  1903               	skipnz
  5309  0624  0ADA               	incf	UART_Printf@v_num_s16+1,f
  5310                           
  5311                           ;uart.c: 469: UART_TxChar('-');
  5312  0625  302D               	movlw	45
  5313  0626  160A  118A  264F  120A  118A  	fcall	_UART_TxChar
  5314  062B                     l2963:	
  5315                           
  5316                           ;uart.c: 470: }
  5317                           ;uart.c: 471: UART_TxNumber(10u,v_num_s16,v_numOfDigitsToTransmit_u8);
  5318  062B  1283               	bcf	3,5	;RP0=0, select bank0
  5319  062C  1303               	bcf	3,6	;RP1=0, select bank0
  5320  062D  0859               	movf	UART_Printf@v_num_s16,w
  5321  062E  00A4               	movwf	UART_TxNumber@v_number_u32
  5322  062F  085A               	movf	UART_Printf@v_num_s16+1,w
  5323  0630  00A5               	movwf	UART_TxNumber@v_number_u32+1
  5324  0631  3000               	movlw	0
  5325  0632  1BA5               	btfsc	UART_TxNumber@v_number_u32+1,7
  5326  0633  30FF               	movlw	255
  5327  0634  00A6               	movwf	UART_TxNumber@v_number_u32+2
  5328  0635  00A7               	movwf	UART_TxNumber@v_number_u32+3
  5329  0636  0864               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5330  0637  00CF               	movwf	??_UART_Printf
  5331  0638  084F               	movf	??_UART_Printf,w
  5332  0639  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  5333  063A  300A               	movlw	10
  5334  063B  120A  118A  2397  120A  118A  	fcall	_UART_TxNumber
  5335                           
  5336                           ;uart.c: 472: break;
  5337  0640  2FCB               	goto	l3041
  5338  0641                     l2965:	
  5339                           ;uart.c: 474: case 'D':
  5340                           
  5341                           
  5342                           ;uart.c: 475: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
  5343  0641  1283               	bcf	3,5	;RP0=0, select bank0
  5344  0642  1303               	bcf	3,6	;RP1=0, select bank0
  5345  0643  0865               	movf	UART_Printf@argp,w
  5346  0644  0084               	movwf	4
  5347  0645  1383               	bcf	3,7	;select IRP bank0
  5348  0646  0800               	movf	0,w
  5349  0647  00D5               	movwf	UART_Printf@v_num_s32
  5350  0648  0A84               	incf	4,f
  5351  0649  0800               	movf	0,w
  5352  064A  00D6               	movwf	UART_Printf@v_num_s32+1
  5353  064B  0A84               	incf	4,f
  5354  064C  0800               	movf	0,w
  5355  064D  00D7               	movwf	UART_Printf@v_num_s32+2
  5356  064E  0A84               	incf	4,f
  5357  064F  0800               	movf	0,w
  5358  0650  00D8               	movwf	UART_Printf@v_num_s32+3
  5359  0651  3004               	movlw	4
  5360  0652  00CF               	movwf	??_UART_Printf
  5361  0653  084F               	movf	??_UART_Printf,w
  5362  0654  07E5               	addwf	UART_Printf@argp,f
  5363                           
  5364                           ;uart.c: 476: if(v_num_s32<0)
  5365  0655  1FD8               	btfss	UART_Printf@v_num_s32+3,7
  5366  0656  2E68               	goto	l2975
  5367                           
  5368                           ;uart.c: 477: {
  5369                           ;uart.c: 478: v_num_s32 = -v_num_s32;
  5370  0657  09D5               	comf	UART_Printf@v_num_s32,f
  5371  0658  09D6               	comf	UART_Printf@v_num_s32+1,f
  5372  0659  09D7               	comf	UART_Printf@v_num_s32+2,f
  5373  065A  09D8               	comf	UART_Printf@v_num_s32+3,f
  5374  065B  0AD5               	incf	UART_Printf@v_num_s32,f
  5375  065C  1903               	skipnz
  5376  065D  0AD6               	incf	UART_Printf@v_num_s32+1,f
  5377  065E  1903               	skipnz
  5378  065F  0AD7               	incf	UART_Printf@v_num_s32+2,f
  5379  0660  1903               	skipnz
  5380  0661  0AD8               	incf	UART_Printf@v_num_s32+3,f
  5381                           
  5382                           ;uart.c: 479: UART_TxChar('-');
  5383  0662  302D               	movlw	45
  5384  0663  160A  118A  264F  120A  118A  	fcall	_UART_TxChar
  5385  0668                     l2975:	
  5386                           
  5387                           ;uart.c: 480: }
  5388                           ;uart.c: 481: UART_TxNumber(10u,v_num_s32,v_numOfDigitsToTransmit_u8);
  5389  0668  1283               	bcf	3,5	;RP0=0, select bank0
  5390  0669  1303               	bcf	3,6	;RP1=0, select bank0
  5391  066A  0858               	movf	UART_Printf@v_num_s32+3,w
  5392  066B  00A7               	movwf	UART_TxNumber@v_number_u32+3
  5393  066C  0857               	movf	UART_Printf@v_num_s32+2,w
  5394  066D  00A6               	movwf	UART_TxNumber@v_number_u32+2
  5395  066E  0856               	movf	UART_Printf@v_num_s32+1,w
  5396  066F  00A5               	movwf	UART_TxNumber@v_number_u32+1
  5397  0670  0855               	movf	UART_Printf@v_num_s32,w
  5398  0671  00A4               	movwf	UART_TxNumber@v_number_u32
  5399  0672  0864               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5400  0673  00CF               	movwf	??_UART_Printf
  5401  0674  084F               	movf	??_UART_Printf,w
  5402  0675  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  5403  0676  300A               	movlw	10
  5404  0677  120A  118A  2397  120A  118A  	fcall	_UART_TxNumber
  5405                           
  5406                           ;uart.c: 482: break;
  5407  067C  2FCB               	goto	l3041
  5408  067D                     l2977:	
  5409                           ;uart.c: 484: case 'u':
  5410                           
  5411                           
  5412                           ;uart.c: 485: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  5413  067D  1283               	bcf	3,5	;RP0=0, select bank0
  5414  067E  1303               	bcf	3,6	;RP1=0, select bank0
  5415  067F  0865               	movf	UART_Printf@argp,w
  5416  0680  0084               	movwf	4
  5417  0681  1383               	bcf	3,7	;select IRP bank0
  5418  0682  0800               	movf	0,w
  5419  0683  00DF               	movwf	UART_Printf@v_num_u16
  5420  0684  0A84               	incf	4,f
  5421  0685  0800               	movf	0,w
  5422  0686  00E0               	movwf	UART_Printf@v_num_u16+1
  5423  0687  3002               	movlw	2
  5424  0688  00CF               	movwf	??_UART_Printf
  5425  0689  084F               	movf	??_UART_Printf,w
  5426  068A  07E5               	addwf	UART_Printf@argp,f
  5427                           
  5428                           ;uart.c: 486: UART_TxNumber(10u,v_num_u16,v_numOfDigitsToTransmit_u8);
  5429  068B  085F               	movf	UART_Printf@v_num_u16,w
  5430  068C  00A4               	movwf	UART_TxNumber@v_number_u32
  5431  068D  0860               	movf	UART_Printf@v_num_u16+1,w
  5432  068E  00A5               	movwf	UART_TxNumber@v_number_u32+1
  5433  068F  01A6               	clrf	UART_TxNumber@v_number_u32+2
  5434  0690  01A7               	clrf	UART_TxNumber@v_number_u32+3
  5435  0691  0864               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5436  0692  00CF               	movwf	??_UART_Printf
  5437  0693  084F               	movf	??_UART_Printf,w
  5438  0694  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  5439  0695  300A               	movlw	10
  5440  0696  120A  118A  2397  120A  118A  	fcall	_UART_TxNumber
  5441                           
  5442                           ;uart.c: 487: break;
  5443  069B  2FCB               	goto	l3041
  5444  069C                     l2983:	
  5445                           ;uart.c: 489: case 'U':
  5446                           
  5447                           
  5448                           ;uart.c: 490: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  5449  069C  1283               	bcf	3,5	;RP0=0, select bank0
  5450  069D  1303               	bcf	3,6	;RP1=0, select bank0
  5451  069E  0865               	movf	UART_Printf@argp,w
  5452  069F  0084               	movwf	4
  5453  06A0  1383               	bcf	3,7	;select IRP bank0
  5454  06A1  0800               	movf	0,w
  5455  06A2  00DB               	movwf	UART_Printf@v_num_u32
  5456  06A3  0A84               	incf	4,f
  5457  06A4  0800               	movf	0,w
  5458  06A5  00DC               	movwf	UART_Printf@v_num_u32+1
  5459  06A6  0A84               	incf	4,f
  5460  06A7  0800               	movf	0,w
  5461  06A8  00DD               	movwf	UART_Printf@v_num_u32+2
  5462  06A9  0A84               	incf	4,f
  5463  06AA  0800               	movf	0,w
  5464  06AB  00DE               	movwf	UART_Printf@v_num_u32+3
  5465  06AC  3004               	movlw	4
  5466  06AD  00CF               	movwf	??_UART_Printf
  5467  06AE  084F               	movf	??_UART_Printf,w
  5468  06AF  07E5               	addwf	UART_Printf@argp,f
  5469                           
  5470                           ;uart.c: 491: UART_TxNumber(10u,v_num_u32,v_numOfDigitsToTransmit_u8);
  5471  06B0  085E               	movf	UART_Printf@v_num_u32+3,w
  5472  06B1  00A7               	movwf	UART_TxNumber@v_number_u32+3
  5473  06B2  085D               	movf	UART_Printf@v_num_u32+2,w
  5474  06B3  00A6               	movwf	UART_TxNumber@v_number_u32+2
  5475  06B4  085C               	movf	UART_Printf@v_num_u32+1,w
  5476  06B5  00A5               	movwf	UART_TxNumber@v_number_u32+1
  5477  06B6  085B               	movf	UART_Printf@v_num_u32,w
  5478  06B7  00A4               	movwf	UART_TxNumber@v_number_u32
  5479  06B8  0864               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5480  06B9  00CF               	movwf	??_UART_Printf
  5481  06BA  084F               	movf	??_UART_Printf,w
  5482  06BB  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  5483  06BC  300A               	movlw	10
  5484  06BD  120A  118A  2397  120A  118A  	fcall	_UART_TxNumber
  5485                           
  5486                           ;uart.c: 492: break;
  5487  06C2  2FCB               	goto	l3041
  5488  06C3                     l2989:	
  5489                           ;uart.c: 494: case 'x':
  5490                           
  5491                           
  5492                           ;uart.c: 495: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  5493  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  5494  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  5495  06C5  0865               	movf	UART_Printf@argp,w
  5496  06C6  0084               	movwf	4
  5497  06C7  1383               	bcf	3,7	;select IRP bank0
  5498  06C8  0800               	movf	0,w
  5499  06C9  00DF               	movwf	UART_Printf@v_num_u16
  5500  06CA  0A84               	incf	4,f
  5501  06CB  0800               	movf	0,w
  5502  06CC  00E0               	movwf	UART_Printf@v_num_u16+1
  5503  06CD  3002               	movlw	2
  5504  06CE  00CF               	movwf	??_UART_Printf
  5505  06CF  084F               	movf	??_UART_Printf,w
  5506  06D0  07E5               	addwf	UART_Printf@argp,f
  5507                           
  5508                           ;uart.c: 496: UART_TxNumber(16u,v_num_u16,v_numOfDigitsToTransmit_u8);
  5509  06D1  085F               	movf	UART_Printf@v_num_u16,w
  5510  06D2  00A4               	movwf	UART_TxNumber@v_number_u32
  5511  06D3  0860               	movf	UART_Printf@v_num_u16+1,w
  5512  06D4  00A5               	movwf	UART_TxNumber@v_number_u32+1
  5513  06D5  01A6               	clrf	UART_TxNumber@v_number_u32+2
  5514  06D6  01A7               	clrf	UART_TxNumber@v_number_u32+3
  5515  06D7  0864               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5516  06D8  00CF               	movwf	??_UART_Printf
  5517  06D9  084F               	movf	??_UART_Printf,w
  5518  06DA  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  5519  06DB  3010               	movlw	16
  5520  06DC  120A  118A  2397  120A  118A  	fcall	_UART_TxNumber
  5521                           
  5522                           ;uart.c: 497: break;
  5523  06E1  2FCB               	goto	l3041
  5524  06E2                     l2995:	
  5525                           ;uart.c: 499: case 'X':
  5526                           
  5527                           
  5528                           ;uart.c: 500: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  5529  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  5530  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  5531  06E4  0865               	movf	UART_Printf@argp,w
  5532  06E5  0084               	movwf	4
  5533  06E6  1383               	bcf	3,7	;select IRP bank0
  5534  06E7  0800               	movf	0,w
  5535  06E8  00DB               	movwf	UART_Printf@v_num_u32
  5536  06E9  0A84               	incf	4,f
  5537  06EA  0800               	movf	0,w
  5538  06EB  00DC               	movwf	UART_Printf@v_num_u32+1
  5539  06EC  0A84               	incf	4,f
  5540  06ED  0800               	movf	0,w
  5541  06EE  00DD               	movwf	UART_Printf@v_num_u32+2
  5542  06EF  0A84               	incf	4,f
  5543  06F0  0800               	movf	0,w
  5544  06F1  00DE               	movwf	UART_Printf@v_num_u32+3
  5545  06F2  3004               	movlw	4
  5546  06F3  00CF               	movwf	??_UART_Printf
  5547  06F4  084F               	movf	??_UART_Printf,w
  5548  06F5  07E5               	addwf	UART_Printf@argp,f
  5549                           
  5550                           ;uart.c: 501: UART_TxNumber(16u,v_num_u32,v_numOfDigitsToTransmit_u8);
  5551  06F6  085E               	movf	UART_Printf@v_num_u32+3,w
  5552  06F7  00A7               	movwf	UART_TxNumber@v_number_u32+3
  5553  06F8  085D               	movf	UART_Printf@v_num_u32+2,w
  5554  06F9  00A6               	movwf	UART_TxNumber@v_number_u32+2
  5555  06FA  085C               	movf	UART_Printf@v_num_u32+1,w
  5556  06FB  00A5               	movwf	UART_TxNumber@v_number_u32+1
  5557  06FC  085B               	movf	UART_Printf@v_num_u32,w
  5558  06FD  00A4               	movwf	UART_TxNumber@v_number_u32
  5559  06FE  0864               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5560  06FF  00CF               	movwf	??_UART_Printf
  5561  0700  084F               	movf	??_UART_Printf,w
  5562  0701  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  5563  0702  3010               	movlw	16
  5564  0703  120A  118A  2397  120A  118A  	fcall	_UART_TxNumber
  5565                           
  5566                           ;uart.c: 502: break;
  5567  0708  2FCB               	goto	l3041
  5568  0709                     l3001:	
  5569                           ;uart.c: 505: case 'b':
  5570                           
  5571                           
  5572                           ;uart.c: 506: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  5573  0709  1283               	bcf	3,5	;RP0=0, select bank0
  5574  070A  1303               	bcf	3,6	;RP1=0, select bank0
  5575  070B  0865               	movf	UART_Printf@argp,w
  5576  070C  0084               	movwf	4
  5577  070D  1383               	bcf	3,7	;select IRP bank0
  5578  070E  0800               	movf	0,w
  5579  070F  00DF               	movwf	UART_Printf@v_num_u16
  5580  0710  0A84               	incf	4,f
  5581  0711  0800               	movf	0,w
  5582  0712  00E0               	movwf	UART_Printf@v_num_u16+1
  5583  0713  3002               	movlw	2
  5584  0714  00CF               	movwf	??_UART_Printf
  5585  0715  084F               	movf	??_UART_Printf,w
  5586  0716  07E5               	addwf	UART_Printf@argp,f
  5587                           
  5588                           ;uart.c: 508: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  5589  0717  0A64               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5590  0718  1D03               	btfss	3,2
  5591  0719  2F1E               	goto	l3009
  5592                           
  5593                           ;uart.c: 509: v_numOfDigitsToTransmit_u8 = 16;
  5594  071A  3010               	movlw	16
  5595  071B  00CF               	movwf	??_UART_Printf
  5596  071C  084F               	movf	??_UART_Printf,w
  5597  071D  00E4               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  5598  071E                     l3009:	
  5599                           
  5600                           ;uart.c: 511: UART_TxNumber(2u,v_num_u16,v_numOfDigitsToTransmit_u8);
  5601  071E  085F               	movf	UART_Printf@v_num_u16,w
  5602  071F  00A4               	movwf	UART_TxNumber@v_number_u32
  5603  0720  0860               	movf	UART_Printf@v_num_u16+1,w
  5604  0721  00A5               	movwf	UART_TxNumber@v_number_u32+1
  5605  0722  01A6               	clrf	UART_TxNumber@v_number_u32+2
  5606  0723  01A7               	clrf	UART_TxNumber@v_number_u32+3
  5607  0724  0864               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5608  0725  00CF               	movwf	??_UART_Printf
  5609  0726  084F               	movf	??_UART_Printf,w
  5610  0727  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  5611  0728  3002               	movlw	2
  5612  0729  120A  118A  2397  120A  118A  	fcall	_UART_TxNumber
  5613                           
  5614                           ;uart.c: 512: break;
  5615  072E  2FCB               	goto	l3041
  5616  072F                     l3011:	
  5617                           ;uart.c: 514: case 'B':
  5618                           
  5619                           
  5620                           ;uart.c: 515: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  5621  072F  1283               	bcf	3,5	;RP0=0, select bank0
  5622  0730  1303               	bcf	3,6	;RP1=0, select bank0
  5623  0731  0865               	movf	UART_Printf@argp,w
  5624  0732  0084               	movwf	4
  5625  0733  1383               	bcf	3,7	;select IRP bank0
  5626  0734  0800               	movf	0,w
  5627  0735  00DB               	movwf	UART_Printf@v_num_u32
  5628  0736  0A84               	incf	4,f
  5629  0737  0800               	movf	0,w
  5630  0738  00DC               	movwf	UART_Printf@v_num_u32+1
  5631  0739  0A84               	incf	4,f
  5632  073A  0800               	movf	0,w
  5633  073B  00DD               	movwf	UART_Printf@v_num_u32+2
  5634  073C  0A84               	incf	4,f
  5635  073D  0800               	movf	0,w
  5636  073E  00DE               	movwf	UART_Printf@v_num_u32+3
  5637  073F  3004               	movlw	4
  5638  0740  00CF               	movwf	??_UART_Printf
  5639  0741  084F               	movf	??_UART_Printf,w
  5640  0742  07E5               	addwf	UART_Printf@argp,f
  5641                           
  5642                           ;uart.c: 517: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  5643  0743  0A64               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5644  0744  1D03               	btfss	3,2
  5645  0745  2F4A               	goto	l3019
  5646                           
  5647                           ;uart.c: 518: v_numOfDigitsToTransmit_u8 = 32;
  5648  0746  3020               	movlw	32
  5649  0747  00CF               	movwf	??_UART_Printf
  5650  0748  084F               	movf	??_UART_Printf,w
  5651  0749  00E4               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  5652  074A                     l3019:	
  5653                           
  5654                           ;uart.c: 520: UART_TxNumber(2u,v_num_u32,v_numOfDigitsToTransmit_u8);
  5655  074A  085E               	movf	UART_Printf@v_num_u32+3,w
  5656  074B  00A7               	movwf	UART_TxNumber@v_number_u32+3
  5657  074C  085D               	movf	UART_Printf@v_num_u32+2,w
  5658  074D  00A6               	movwf	UART_TxNumber@v_number_u32+2
  5659  074E  085C               	movf	UART_Printf@v_num_u32+1,w
  5660  074F  00A5               	movwf	UART_TxNumber@v_number_u32+1
  5661  0750  085B               	movf	UART_Printf@v_num_u32,w
  5662  0751  00A4               	movwf	UART_TxNumber@v_number_u32
  5663  0752  0864               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5664  0753  00CF               	movwf	??_UART_Printf
  5665  0754  084F               	movf	??_UART_Printf,w
  5666  0755  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  5667  0756  3002               	movlw	2
  5668  0757  120A  118A  2397  120A  118A  	fcall	_UART_TxNumber
  5669                           
  5670                           ;uart.c: 521: break;
  5671  075C  2FCB               	goto	l3041
  5672  075D                     l3021:	
  5673                           ;uart.c: 524: case 'F':
  5674                           
  5675                           
  5676                           ;uart.c: 525: case 'f':
  5677                           ;uart.c: 527: v_floatNum_f32 = (*(double *)__va_arg((*(double **)argp), (double)0));
  5678  075D  1283               	bcf	3,5	;RP0=0, select bank0
  5679  075E  1303               	bcf	3,6	;RP1=0, select bank0
  5680  075F  0865               	movf	UART_Printf@argp,w
  5681  0760  0084               	movwf	4
  5682  0761  1383               	bcf	3,7	;select IRP bank0
  5683  0762  0800               	movf	0,w
  5684  0763  00D1               	movwf	UART_Printf@v_floatNum_f32
  5685  0764  0A84               	incf	4,f
  5686  0765  0800               	movf	0,w
  5687  0766  00D2               	movwf	UART_Printf@v_floatNum_f32+1
  5688  0767  0A84               	incf	4,f
  5689  0768  0800               	movf	0,w
  5690  0769  00D3               	movwf	UART_Printf@v_floatNum_f32+2
  5691  076A  3003               	movlw	3
  5692  076B  00CF               	movwf	??_UART_Printf
  5693  076C  084F               	movf	??_UART_Printf,w
  5694  076D  07E5               	addwf	UART_Printf@argp,f
  5695                           
  5696                           ;uart.c: 528: UART_TxFloatNumber(v_floatNum_f32);
  5697  076E  0851               	movf	UART_Printf@v_floatNum_f32,w
  5698  076F  00C3               	movwf	UART_TxFloatNumber@v_floatNumber_f32
  5699  0770  0852               	movf	UART_Printf@v_floatNum_f32+1,w
  5700  0771  00C4               	movwf	UART_TxFloatNumber@v_floatNumber_f32+1
  5701  0772  0853               	movf	UART_Printf@v_floatNum_f32+2,w
  5702  0773  00C5               	movwf	UART_TxFloatNumber@v_floatNumber_f32+2
  5703  0774  120A  158A  2761  120A  118A  	fcall	_UART_TxFloatNumber
  5704                           
  5705                           ;uart.c: 530: break;
  5706  0779  2FCB               	goto	l3041
  5707  077A                     l3027:	
  5708                           ;uart.c: 533: case 'S':
  5709                           
  5710                           
  5711                           ;uart.c: 534: case 's':
  5712                           ;uart.c: 535: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  5713  077A  1283               	bcf	3,5	;RP0=0, select bank0
  5714  077B  1303               	bcf	3,6	;RP1=0, select bank0
  5715  077C  0865               	movf	UART_Printf@argp,w
  5716  077D  0084               	movwf	4
  5717  077E  1383               	bcf	3,7	;select IRP bank0
  5718  077F  0800               	movf	0,w
  5719  0780  00CF               	movwf	??_UART_Printf
  5720  0781  084F               	movf	??_UART_Printf,w
  5721  0782  00D4               	movwf	UART_Printf@str
  5722  0783  3001               	movlw	1
  5723  0784  00CF               	movwf	??_UART_Printf
  5724  0785  084F               	movf	??_UART_Printf,w
  5725  0786  07E5               	addwf	UART_Printf@argp,f
  5726                           
  5727                           ;uart.c: 536: UART_TxString(str);
  5728  0787  0854               	movf	UART_Printf@str,w
  5729  0788  00F1               	movwf	UART_TxString@ptr_string
  5730  0789  3000               	movlw	0
  5731  078A  00F2               	movwf	UART_TxString@ptr_string+1
  5732  078B  120A  158A  214F  120A  118A  	fcall	_UART_TxString
  5733                           
  5734                           ;uart.c: 537: break;
  5735  0790  2FCB               	goto	l3041
  5736  0791                     l3033:	
  5737                           ;uart.c: 539: case '%':
  5738                           
  5739                           
  5740                           ;uart.c: 540: UART_TxChar('%');
  5741  0791  3025               	movlw	37
  5742  0792  2FC6               	goto	L7
  5743  0793                     l3037:	
  5744                           ;uart.c: 542: }
  5745                           
  5746                           ;uart.c: 541: break;
  5747                           
  5748  0793  1283               	bcf	3,5	;RP0=0, select bank0
  5749  0794  1303               	bcf	3,6	;RP1=0, select bank0
  5750  0795  0863               	movf	UART_Printf@ch,w
  5751                           
  5752                           ; Switch size 1, requested type "space"
  5753                           ; Number of cases is 15, Range of values is 37 to 120
  5754                           ; switch strategies available:
  5755                           ; Name         Instructions Cycles
  5756                           ; simple_byte           46    24 (average)
  5757                           ; direct_byte          263    11 (fixed)
  5758                           ; jumptable            263     9 (fixed)
  5759                           ;	Chosen strategy is simple_byte
  5760  0796  3A25               	xorlw	37	; case 37
  5761  0797  1903               	skipnz
  5762  0798  2F91               	goto	l3033
  5763  0799  3A67               	xorlw	103	; case 66
  5764  079A  1903               	skipnz
  5765  079B  2F2F               	goto	l3011
  5766  079C  3A01               	xorlw	1	; case 67
  5767  079D  1903               	skipnz
  5768  079E  2E04               	goto	l2947
  5769  079F  3A07               	xorlw	7	; case 68
  5770  07A0  1903               	skipnz
  5771  07A1  2E41               	goto	l2965
  5772  07A2  3A02               	xorlw	2	; case 70
  5773  07A3  1903               	skipnz
  5774  07A4  2F5D               	goto	l3021
  5775  07A5  3A15               	xorlw	21	; case 83
  5776  07A6  1903               	skipnz
  5777  07A7  2F7A               	goto	l3027
  5778  07A8  3A06               	xorlw	6	; case 85
  5779  07A9  1903               	skipnz
  5780  07AA  2E9C               	goto	l2983
  5781  07AB  3A0D               	xorlw	13	; case 88
  5782  07AC  1903               	skipnz
  5783  07AD  2EE2               	goto	l2995
  5784  07AE  3A3A               	xorlw	58	; case 98
  5785  07AF  1903               	skipnz
  5786  07B0  2F09               	goto	l3001
  5787  07B1  3A01               	xorlw	1	; case 99
  5788  07B2  1903               	skipnz
  5789  07B3  2E04               	goto	l2947
  5790  07B4  3A07               	xorlw	7	; case 100
  5791  07B5  1903               	skipnz
  5792  07B6  2E10               	goto	l2953
  5793  07B7  3A02               	xorlw	2	; case 102
  5794  07B8  1903               	skipnz
  5795  07B9  2F5D               	goto	l3021
  5796  07BA  3A15               	xorlw	21	; case 115
  5797  07BB  1903               	skipnz
  5798  07BC  2F7A               	goto	l3027
  5799  07BD  3A06               	xorlw	6	; case 117
  5800  07BE  1903               	skipnz
  5801  07BF  2E7D               	goto	l2977
  5802  07C0  3A0D               	xorlw	13	; case 120
  5803  07C1  1903               	skipnz
  5804  07C2  2EC3               	goto	l2989
  5805  07C3  2FCB               	goto	l3041
  5806                           
  5807                           ;uart.c: 543: }
  5808  07C4  2FCB               	goto	l3041
  5809  07C5                     l3039:	
  5810                           
  5811                           ;uart.c: 544: else
  5812                           ;uart.c: 545: {
  5813                           ;uart.c: 547: UART_TxChar(ch);
  5814  07C5  0863               	movf	UART_Printf@ch,w
  5815  07C6                     L7:	
  5816  07C6  160A  118A  264F  120A  118A  	fcall	_UART_TxChar
  5817  07CB                     l3041:	
  5818  07CB  3001               	movlw	1
  5819  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  5820  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  5821  07CE  07E1               	addwf	UART_Printf@ptr,f
  5822  07CF  1803               	skipnc
  5823  07D0  0AE2               	incf	UART_Printf@ptr+1,f
  5824  07D1  3000               	movlw	0
  5825  07D2  07E2               	addwf	UART_Printf@ptr+1,f
  5826  07D3  2D9C               	goto	l3043
  5827  07D4                     __end_of_UART_Printf:	
  5828                           
  5829                           	psect	text28
  5830  094F                     __ptext28:	
  5831 ;; *************** function _UART_TxString *****************
  5832 ;; Defined at:
  5833 ;;		line 169 in file "../00-libfiles/uart.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;  ptr_string      2    1[COMMON] PTR const unsigned char 
  5836 ;;		 -> STR_3(54), 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;		None
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  1    wreg      void 
  5841 ;; Registers used:
  5842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5848 ;;      Params:         2       0       0       0       0
  5849 ;;      Locals:         0       0       0       0       0
  5850 ;;      Temps:          0       0       0       0       0
  5851 ;;      Totals:         2       0       0       0       0
  5852 ;;Total ram usage:        2 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    1
  5855 ;; This function calls:
  5856 ;;		_UART_TxChar
  5857 ;; This function is called by:
  5858 ;;		_UART_Printf
  5859 ;;		_switch_Test
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           
  5864                           ;psect for function _UART_TxString
  5865  094F                     _UART_TxString:	
  5866  094F                     l2745:	
  5867                           ;uart.c: 171: while(*ptr_string)
  5868                           
  5869                           ;incstack = 0
  5870                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5871                           
  5872  094F  0872               	movf	UART_TxString@ptr_string+1,w
  5873  0950  1283               	bcf	3,5	;RP0=0, select bank0
  5874  0951  1303               	bcf	3,6	;RP1=0, select bank0
  5875  0952  00FF               	movwf	127
  5876  0953  0871               	movf	UART_TxString@ptr_string,w
  5877  0954  0084               	movwf	4
  5878  0955  160A  118A  2000  120A  158A  	fcall	stringtab
  5879  095A  3A00               	xorlw	0
  5880  095B  1903               	btfsc	3,2
  5881  095C  0008               	return
  5882                           
  5883                           ;uart.c: 172: UART_TxChar(*ptr_string++);
  5884  095D  0872               	movf	UART_TxString@ptr_string+1,w
  5885  095E  1283               	bcf	3,5	;RP0=0, select bank0
  5886  095F  1303               	bcf	3,6	;RP1=0, select bank0
  5887  0960  00FF               	movwf	127
  5888  0961  0871               	movf	UART_TxString@ptr_string,w
  5889  0962  0084               	movwf	4
  5890  0963  160A  118A  2000  120A  158A  	fcall	stringtab
  5891  0968  160A  118A  264F  120A  158A  	fcall	_UART_TxChar
  5892  096D  3001               	movlw	1
  5893  096E  07F1               	addwf	UART_TxString@ptr_string,f
  5894  096F  1803               	skipnc
  5895  0970  0AF2               	incf	UART_TxString@ptr_string+1,f
  5896  0971  294F               	goto	l2745
  5897  0972                     __end_of_UART_TxString:	
  5898                           
  5899                           	psect	text29
  5900  0F61                     __ptext29:	
  5901 ;; *************** function _UART_TxFloatNumber *****************
  5902 ;; Defined at:
  5903 ;;		line 350 in file "../00-libfiles/uart.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;  v_floatNumbe    3   35[BANK0 ] float 
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;  v_decNumber_    4   39[BANK0 ] unsigned long 
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      void 
  5910 ;; Registers used:
  5911 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5917 ;;      Params:         0       3       0       0       0
  5918 ;;      Locals:         0       4       0       0       0
  5919 ;;      Temps:          0       1       0       0       0
  5920 ;;      Totals:         0       8       0       0       0
  5921 ;;Total ram usage:        8 bytes
  5922 ;; Hardware stack levels used:    1
  5923 ;; Hardware stack levels required when called:    2
  5924 ;; This function calls:
  5925 ;;		_UART_TxChar
  5926 ;;		_UART_TxNumber
  5927 ;;		___ftadd
  5928 ;;		___ftmul
  5929 ;;		___ftneg
  5930 ;;		___fttol
  5931 ;;		___lltoft
  5932 ;; This function is called by:
  5933 ;;		_UART_Printf
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           
  5938                           ;psect for function _UART_TxFloatNumber
  5939  0F61                     _UART_TxFloatNumber:	
  5940                           
  5941                           ;uart.c: 352: uint32_t v_decNumber_u32;
  5942                           ;uart.c: 359: v_decNumber_u32 = (uint32_t) v_floatNumber_f32;
  5943                           
  5944                           ;incstack = 0
  5945                           ; Regs used in _UART_TxFloatNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5946  0F61  1283               	bcf	3,5	;RP0=0, select bank0
  5947  0F62  1303               	bcf	3,6	;RP1=0, select bank0
  5948  0F63  0843               	movf	UART_TxFloatNumber@v_floatNumber_f32,w
  5949  0F64  00AA               	movwf	___fttol@f1
  5950  0F65  0844               	movf	UART_TxFloatNumber@v_floatNumber_f32+1,w
  5951  0F66  00AB               	movwf	___fttol@f1+1
  5952  0F67  0845               	movf	UART_TxFloatNumber@v_floatNumber_f32+2,w
  5953  0F68  00AC               	movwf	___fttol@f1+2
  5954  0F69  120A  158A  26D3  120A  158A  	fcall	___fttol
  5955  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  5956  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  5957  0F70  082D               	movf	?___fttol+3,w
  5958  0F71  00CA               	movwf	UART_TxFloatNumber@v_decNumber_u32+3
  5959  0F72  082C               	movf	?___fttol+2,w
  5960  0F73  00C9               	movwf	UART_TxFloatNumber@v_decNumber_u32+2
  5961  0F74  082B               	movf	?___fttol+1,w
  5962  0F75  00C8               	movwf	UART_TxFloatNumber@v_decNumber_u32+1
  5963  0F76  082A               	movf	?___fttol,w
  5964  0F77  00C7               	movwf	UART_TxFloatNumber@v_decNumber_u32
  5965                           
  5966                           ;uart.c: 360: UART_TxNumber(10u,v_decNumber_u32,0xffu);
  5967  0F78  084A               	movf	UART_TxFloatNumber@v_decNumber_u32+3,w
  5968  0F79  00A7               	movwf	UART_TxNumber@v_number_u32+3
  5969  0F7A  0849               	movf	UART_TxFloatNumber@v_decNumber_u32+2,w
  5970  0F7B  00A6               	movwf	UART_TxNumber@v_number_u32+2
  5971  0F7C  0848               	movf	UART_TxFloatNumber@v_decNumber_u32+1,w
  5972  0F7D  00A5               	movwf	UART_TxNumber@v_number_u32+1
  5973  0F7E  0847               	movf	UART_TxFloatNumber@v_decNumber_u32,w
  5974  0F7F  00A4               	movwf	UART_TxNumber@v_number_u32
  5975  0F80  30FF               	movlw	255
  5976  0F81  00C6               	movwf	??_UART_TxFloatNumber
  5977  0F82  0846               	movf	??_UART_TxFloatNumber,w
  5978  0F83  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  5979  0F84  300A               	movlw	10
  5980  0F85  120A  118A  2397  120A  158A  	fcall	_UART_TxNumber
  5981                           
  5982                           ;uart.c: 362: UART_TxChar('.');
  5983  0F8A  302E               	movlw	46
  5984  0F8B  160A  118A  264F  120A  158A  	fcall	_UART_TxChar
  5985                           
  5986                           ;uart.c: 364: v_floatNumber_f32 = v_floatNumber_f32 - v_decNumber_u32;
  5987  0F90  1283               	bcf	3,5	;RP0=0, select bank0
  5988  0F91  1303               	bcf	3,6	;RP1=0, select bank0
  5989  0F92  0843               	movf	UART_TxFloatNumber@v_floatNumber_f32,w
  5990  0F93  00A3               	movwf	___ftadd@f1
  5991  0F94  0844               	movf	UART_TxFloatNumber@v_floatNumber_f32+1,w
  5992  0F95  00A4               	movwf	___ftadd@f1+1
  5993  0F96  0845               	movf	UART_TxFloatNumber@v_floatNumber_f32+2,w
  5994  0F97  00A5               	movwf	___ftadd@f1+2
  5995  0F98  084A               	movf	UART_TxFloatNumber@v_decNumber_u32+3,w
  5996  0F99  00FB               	movwf	___lltoft@c+3
  5997  0F9A  0849               	movf	UART_TxFloatNumber@v_decNumber_u32+2,w
  5998  0F9B  00FA               	movwf	___lltoft@c+2
  5999  0F9C  0848               	movf	UART_TxFloatNumber@v_decNumber_u32+1,w
  6000  0F9D  00F9               	movwf	___lltoft@c+1
  6001  0F9E  0847               	movf	UART_TxFloatNumber@v_decNumber_u32,w
  6002  0F9F  00F8               	movwf	___lltoft@c
  6003  0FA0  160A  118A  27A8  120A  158A  	fcall	___lltoft
  6004  0FA5  0878               	movf	?___lltoft,w
  6005  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  6006  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  6007  0FA8  00A0               	movwf	___ftneg@f1
  6008  0FA9  0879               	movf	?___lltoft+1,w
  6009  0FAA  00A1               	movwf	___ftneg@f1+1
  6010  0FAB  087A               	movf	?___lltoft+2,w
  6011  0FAC  00A2               	movwf	___ftneg@f1+2
  6012  0FAD  160A  118A  2658  120A  158A  	fcall	___ftneg
  6013  0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  6014  0FB3  1303               	bcf	3,6	;RP1=0, select bank0
  6015  0FB4  0820               	movf	?___ftneg,w
  6016  0FB5  00A6               	movwf	___ftadd@f2
  6017  0FB6  0821               	movf	?___ftneg+1,w
  6018  0FB7  00A7               	movwf	___ftadd@f2+1
  6019  0FB8  0822               	movf	?___ftneg+2,w
  6020  0FB9  00A8               	movwf	___ftadd@f2+2
  6021  0FBA  120A  118A  2489  120A  158A  	fcall	___ftadd
  6022  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  6023  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  6024  0FC1  0823               	movf	?___ftadd,w
  6025  0FC2  00C3               	movwf	UART_TxFloatNumber@v_floatNumber_f32
  6026  0FC3  0824               	movf	?___ftadd+1,w
  6027  0FC4  00C4               	movwf	UART_TxFloatNumber@v_floatNumber_f32+1
  6028  0FC5  0825               	movf	?___ftadd+2,w
  6029  0FC6  00C5               	movwf	UART_TxFloatNumber@v_floatNumber_f32+2
  6030                           
  6031                           ;uart.c: 365: v_decNumber_u32 = v_floatNumber_f32 * 1000000;
  6032  0FC7  0843               	movf	UART_TxFloatNumber@v_floatNumber_f32,w
  6033  0FC8  00FB               	movwf	___ftmul@f2
  6034  0FC9  0844               	movf	UART_TxFloatNumber@v_floatNumber_f32+1,w
  6035  0FCA  00FC               	movwf	___ftmul@f2+1
  6036  0FCB  0845               	movf	UART_TxFloatNumber@v_floatNumber_f32+2,w
  6037  0FCC  00FD               	movwf	___ftmul@f2+2
  6038  0FCD  3024               	movlw	36
  6039  0FCE  00F8               	movwf	___ftmul@f1
  6040  0FCF  3074               	movlw	116
  6041  0FD0  00F9               	movwf	___ftmul@f1+1
  6042  0FD1  3049               	movlw	73
  6043  0FD2  00FA               	movwf	___ftmul@f1+2
  6044  0FD3  120A  118A  2043  120A  158A  	fcall	___ftmul
  6045  0FD8  0878               	movf	?___ftmul,w
  6046  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  6047  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  6048  0FDB  00AA               	movwf	___fttol@f1
  6049  0FDC  0879               	movf	?___ftmul+1,w
  6050  0FDD  00AB               	movwf	___fttol@f1+1
  6051  0FDE  087A               	movf	?___ftmul+2,w
  6052  0FDF  00AC               	movwf	___fttol@f1+2
  6053  0FE0  120A  158A  26D3  120A  158A  	fcall	___fttol
  6054  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  6055  0FE6  1303               	bcf	3,6	;RP1=0, select bank0
  6056  0FE7  082D               	movf	?___fttol+3,w
  6057  0FE8  00CA               	movwf	UART_TxFloatNumber@v_decNumber_u32+3
  6058  0FE9  082C               	movf	?___fttol+2,w
  6059  0FEA  00C9               	movwf	UART_TxFloatNumber@v_decNumber_u32+2
  6060  0FEB  082B               	movf	?___fttol+1,w
  6061  0FEC  00C8               	movwf	UART_TxFloatNumber@v_decNumber_u32+1
  6062  0FED  082A               	movf	?___fttol,w
  6063  0FEE  00C7               	movwf	UART_TxFloatNumber@v_decNumber_u32
  6064                           
  6065                           ;uart.c: 366: UART_TxNumber(10u,v_decNumber_u32,0xffu);
  6066  0FEF  084A               	movf	UART_TxFloatNumber@v_decNumber_u32+3,w
  6067  0FF0  00A7               	movwf	UART_TxNumber@v_number_u32+3
  6068  0FF1  0849               	movf	UART_TxFloatNumber@v_decNumber_u32+2,w
  6069  0FF2  00A6               	movwf	UART_TxNumber@v_number_u32+2
  6070  0FF3  0848               	movf	UART_TxFloatNumber@v_decNumber_u32+1,w
  6071  0FF4  00A5               	movwf	UART_TxNumber@v_number_u32+1
  6072  0FF5  0847               	movf	UART_TxFloatNumber@v_decNumber_u32,w
  6073  0FF6  00A4               	movwf	UART_TxNumber@v_number_u32
  6074  0FF7  30FF               	movlw	255
  6075  0FF8  00C6               	movwf	??_UART_TxFloatNumber
  6076  0FF9  0846               	movf	??_UART_TxFloatNumber,w
  6077  0FFA  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  6078  0FFB  300A               	movlw	10
  6079  0FFC  120A  118A  2397   	fcall	_UART_TxNumber
  6080  0FFF  0008               	return
  6081  1000                     __end_of_UART_TxFloatNumber:	
  6082                           
  6083                           	psect	text30
  6084  17A8                     __ptext30:	
  6085 ;; *************** function ___lltoft *****************
  6086 ;; Defined at:
  6087 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lltoft.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;  c               4    8[COMMON] unsigned long 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;  exp             1   13[COMMON] unsigned char 
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  3    8[COMMON] float 
  6094 ;; Registers used:
  6095 ;;		wreg, status,2, status,0, pclath, cstack
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6101 ;;      Params:         4       0       0       0       0
  6102 ;;      Locals:         1       0       0       0       0
  6103 ;;      Temps:          1       0       0       0       0
  6104 ;;      Totals:         6       0       0       0       0
  6105 ;;Total ram usage:        6 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:    1
  6108 ;; This function calls:
  6109 ;;		___ftpack
  6110 ;; This function is called by:
  6111 ;;		_UART_TxFloatNumber
  6112 ;;		_LCD_DisplayFloatNumber
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           
  6117                           ;psect for function ___lltoft
  6118  17A8                     ___lltoft:	
  6119                           
  6120                           ;incstack = 0
  6121                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  6122  17A8  308E               	movlw	142
  6123  17A9  00FC               	movwf	??___lltoft
  6124  17AA  087C               	movf	??___lltoft,w
  6125  17AB  00FD               	movwf	___lltoft@exp
  6126  17AC                     l2701:	
  6127  17AC  30FF               	movlw	255
  6128  17AD  057B               	andwf	___lltoft@c+3,w
  6129  17AE  1903               	btfsc	3,2
  6130  17AF  2FBE               	goto	l2703
  6131  17B0  3001               	movlw	1
  6132  17B1                     u3885:	
  6133  17B1  1003               	clrc
  6134  17B2  0CFB               	rrf	___lltoft@c+3,f
  6135  17B3  0CFA               	rrf	___lltoft@c+2,f
  6136  17B4  0CF9               	rrf	___lltoft@c+1,f
  6137  17B5  0CF8               	rrf	___lltoft@c,f
  6138  17B6  3EFF               	addlw	-1
  6139  17B7  1D03               	skipz
  6140  17B8  2FB1               	goto	u3885
  6141  17B9  3001               	movlw	1
  6142  17BA  00FC               	movwf	??___lltoft
  6143  17BB  087C               	movf	??___lltoft,w
  6144  17BC  07FD               	addwf	___lltoft@exp,f
  6145  17BD  2FAC               	goto	l2701
  6146  17BE                     l2703:	
  6147  17BE  0878               	movf	___lltoft@c,w
  6148  17BF  00F0               	movwf	___ftpack@arg
  6149  17C0  0879               	movf	___lltoft@c+1,w
  6150  17C1  00F1               	movwf	___ftpack@arg+1
  6151  17C2  087A               	movf	___lltoft@c+2,w
  6152  17C3  00F2               	movwf	___ftpack@arg+2
  6153  17C4  087D               	movf	___lltoft@exp,w
  6154  17C5  00FC               	movwf	??___lltoft
  6155  17C6  087C               	movf	??___lltoft,w
  6156  17C7  00F3               	movwf	___ftpack@exp
  6157  17C8  01F4               	clrf	___ftpack@sign
  6158  17C9  120A  158A  2566   	fcall	___ftpack
  6159  17CC  0870               	movf	?___ftpack,w
  6160  17CD  00F8               	movwf	?___lltoft
  6161  17CE  0871               	movf	?___ftpack+1,w
  6162  17CF  00F9               	movwf	?___lltoft+1
  6163  17D0  0872               	movf	?___ftpack+2,w
  6164  17D1  00FA               	movwf	?___lltoft+2
  6165  17D2  0008               	return
  6166  17D3                     __end_of___lltoft:	
  6167                           
  6168                           	psect	text31
  6169  0ED3                     __ptext31:	
  6170 ;; *************** function ___fttol *****************
  6171 ;; Defined at:
  6172 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\fttol.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;  f1              3   10[BANK0 ] float 
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;  lval            4   19[BANK0 ] unsigned long 
  6177 ;;  exp1            1   23[BANK0 ] unsigned char 
  6178 ;;  sign1           1   18[BANK0 ] unsigned char 
  6179 ;; Return value:  Size  Location     Type
  6180 ;;                  4   10[BANK0 ] long 
  6181 ;; Registers used:
  6182 ;;		wreg, status,2, status,0
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6188 ;;      Params:         0       4       0       0       0
  6189 ;;      Locals:         0       6       0       0       0
  6190 ;;      Temps:          0       4       0       0       0
  6191 ;;      Totals:         0      14       0       0       0
  6192 ;;Total ram usage:       14 bytes
  6193 ;; Hardware stack levels used:    1
  6194 ;; This function calls:
  6195 ;;		Nothing
  6196 ;; This function is called by:
  6197 ;;		_UART_TxFloatNumber
  6198 ;;		_LCD_DisplayFloatNumber
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           
  6203                           ;psect for function ___fttol
  6204  0ED3                     ___fttol:	
  6205                           
  6206                           ;incstack = 0
  6207                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6208  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  6209  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  6210  0ED5  082A               	movf	___fttol@f1,w
  6211  0ED6  00AE               	movwf	??___fttol
  6212  0ED7  082B               	movf	___fttol@f1+1,w
  6213  0ED8  00AF               	movwf	??___fttol+1
  6214  0ED9  082C               	movf	___fttol@f1+2,w
  6215  0EDA  00B0               	movwf	??___fttol+2
  6216  0EDB  1003               	clrc
  6217  0EDC  0D2F               	rlf	??___fttol+1,w
  6218  0EDD  0D30               	rlf	??___fttol+2,w
  6219  0EDE  00B1               	movwf	??___fttol+3
  6220  0EDF  0831               	movf	??___fttol+3,w
  6221  0EE0  00B7               	movwf	___fttol@exp1
  6222  0EE1  0837               	movf	___fttol@exp1,w
  6223  0EE2  1D03               	btfss	3,2
  6224  0EE3  2EED               	goto	l2661
  6225  0EE4  3000               	movlw	0
  6226  0EE5  00AD               	movwf	?___fttol+3
  6227  0EE6  3000               	movlw	0
  6228  0EE7  00AC               	movwf	?___fttol+2
  6229  0EE8  3000               	movlw	0
  6230  0EE9  00AB               	movwf	?___fttol+1
  6231  0EEA  3000               	movlw	0
  6232  0EEB  00AA               	movwf	?___fttol
  6233  0EEC  0008               	return
  6234  0EED                     l2661:	
  6235  0EED  082A               	movf	___fttol@f1,w
  6236  0EEE  00AE               	movwf	??___fttol
  6237  0EEF  082B               	movf	___fttol@f1+1,w
  6238  0EF0  00AF               	movwf	??___fttol+1
  6239  0EF1  082C               	movf	___fttol@f1+2,w
  6240  0EF2  00B0               	movwf	??___fttol+2
  6241  0EF3  3017               	movlw	23
  6242  0EF4                     u3795:	
  6243  0EF4  1003               	clrc
  6244  0EF5  0CB0               	rrf	??___fttol+2,f
  6245  0EF6  0CAF               	rrf	??___fttol+1,f
  6246  0EF7  0CAE               	rrf	??___fttol,f
  6247  0EF8  3EFF               	addlw	-1
  6248  0EF9  1D03               	skipz
  6249  0EFA  2EF4               	goto	u3795
  6250  0EFB  082E               	movf	??___fttol,w
  6251  0EFC  00B1               	movwf	??___fttol+3
  6252  0EFD  0831               	movf	??___fttol+3,w
  6253  0EFE  00B2               	movwf	___fttol@sign1
  6254  0EFF  17AB               	bsf	___fttol@f1+1,7
  6255  0F00  30FF               	movlw	255
  6256  0F01  05AA               	andwf	___fttol@f1,f
  6257  0F02  30FF               	movlw	255
  6258  0F03  05AB               	andwf	___fttol@f1+1,f
  6259  0F04  3000               	movlw	0
  6260  0F05  05AC               	andwf	___fttol@f1+2,f
  6261  0F06  082A               	movf	___fttol@f1,w
  6262  0F07  00B3               	movwf	___fttol@lval
  6263  0F08  082B               	movf	___fttol@f1+1,w
  6264  0F09  00B4               	movwf	___fttol@lval+1
  6265  0F0A  082C               	movf	___fttol@f1+2,w
  6266  0F0B  00B5               	movwf	___fttol@lval+2
  6267  0F0C  01B6               	clrf	___fttol@lval+3
  6268  0F0D  308E               	movlw	142
  6269  0F0E  02B7               	subwf	___fttol@exp1,f
  6270  0F0F  1FB7               	btfss	___fttol@exp1,7
  6271  0F10  2F2F               	goto	l2681
  6272  0F11  0837               	movf	___fttol@exp1,w
  6273  0F12  3A80               	xorlw	128
  6274  0F13  3E8F               	addlw	143
  6275  0F14  1803               	skipnc
  6276  0F15  2F1F               	goto	l2679
  6277  0F16  3000               	movlw	0
  6278  0F17  00AD               	movwf	?___fttol+3
  6279  0F18  3000               	movlw	0
  6280  0F19  00AC               	movwf	?___fttol+2
  6281  0F1A  3000               	movlw	0
  6282  0F1B  00AB               	movwf	?___fttol+1
  6283  0F1C  3000               	movlw	0
  6284  0F1D  00AA               	movwf	?___fttol
  6285  0F1E  0008               	return
  6286  0F1F                     l2679:	
  6287  0F1F  3001               	movlw	1
  6288  0F20                     u3825:	
  6289  0F20  1003               	clrc
  6290  0F21  0CB6               	rrf	___fttol@lval+3,f
  6291  0F22  0CB5               	rrf	___fttol@lval+2,f
  6292  0F23  0CB4               	rrf	___fttol@lval+1,f
  6293  0F24  0CB3               	rrf	___fttol@lval,f
  6294  0F25  3EFF               	addlw	-1
  6295  0F26  1D03               	skipz
  6296  0F27  2F20               	goto	u3825
  6297  0F28  3001               	movlw	1
  6298  0F29  00AE               	movwf	??___fttol
  6299  0F2A  082E               	movf	??___fttol,w
  6300  0F2B  07B7               	addwf	___fttol@exp1,f
  6301  0F2C  1903               	btfsc	3,2
  6302  0F2D  2F4A               	goto	l2689
  6303  0F2E  2F1F               	goto	l2679
  6304  0F2F                     l2681:	
  6305  0F2F  3018               	movlw	24
  6306  0F30  0237               	subwf	___fttol@exp1,w
  6307  0F31  1C03               	skipc
  6308  0F32  2F47               	goto	l925
  6309  0F33  3000               	movlw	0
  6310  0F34  00AD               	movwf	?___fttol+3
  6311  0F35  3000               	movlw	0
  6312  0F36  00AC               	movwf	?___fttol+2
  6313  0F37  3000               	movlw	0
  6314  0F38  00AB               	movwf	?___fttol+1
  6315  0F39  3000               	movlw	0
  6316  0F3A  00AA               	movwf	?___fttol
  6317  0F3B  0008               	return
  6318  0F3C                     l2687:	
  6319  0F3C  3001               	movlw	1
  6320  0F3D  00AE               	movwf	??___fttol
  6321  0F3E                     u3855:	
  6322  0F3E  1003               	clrc
  6323  0F3F  0DB3               	rlf	___fttol@lval,f
  6324  0F40  0DB4               	rlf	___fttol@lval+1,f
  6325  0F41  0DB5               	rlf	___fttol@lval+2,f
  6326  0F42  0DB6               	rlf	___fttol@lval+3,f
  6327  0F43  0BAE               	decfsz	??___fttol,f
  6328  0F44  2F3E               	goto	u3855
  6329  0F45  3001               	movlw	1
  6330  0F46  02B7               	subwf	___fttol@exp1,f
  6331  0F47                     l925:	
  6332  0F47  0837               	movf	___fttol@exp1,w
  6333  0F48  1D03               	btfss	3,2
  6334  0F49  2F3C               	goto	l2687
  6335  0F4A                     l2689:	
  6336  0F4A  0832               	movf	___fttol@sign1,w
  6337  0F4B  1903               	btfsc	3,2
  6338  0F4C  2F58               	goto	l2693
  6339  0F4D  09B3               	comf	___fttol@lval,f
  6340  0F4E  09B4               	comf	___fttol@lval+1,f
  6341  0F4F  09B5               	comf	___fttol@lval+2,f
  6342  0F50  09B6               	comf	___fttol@lval+3,f
  6343  0F51  0AB3               	incf	___fttol@lval,f
  6344  0F52  1903               	skipnz
  6345  0F53  0AB4               	incf	___fttol@lval+1,f
  6346  0F54  1903               	skipnz
  6347  0F55  0AB5               	incf	___fttol@lval+2,f
  6348  0F56  1903               	skipnz
  6349  0F57  0AB6               	incf	___fttol@lval+3,f
  6350  0F58                     l2693:	
  6351  0F58  0836               	movf	___fttol@lval+3,w
  6352  0F59  00AD               	movwf	?___fttol+3
  6353  0F5A  0835               	movf	___fttol@lval+2,w
  6354  0F5B  00AC               	movwf	?___fttol+2
  6355  0F5C  0834               	movf	___fttol@lval+1,w
  6356  0F5D  00AB               	movwf	?___fttol+1
  6357  0F5E  0833               	movf	___fttol@lval,w
  6358  0F5F  00AA               	movwf	?___fttol
  6359  0F60  0008               	return
  6360  0F61                     __end_of___fttol:	
  6361                           
  6362                           	psect	text32
  6363  1658                     __ptext32:	
  6364 ;; *************** function ___ftneg *****************
  6365 ;; Defined at:
  6366 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftneg.c"
  6367 ;; Parameters:    Size  Location     Type
  6368 ;;  f1              3    0[BANK0 ] float 
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;		None
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  3    0[BANK0 ] float 
  6373 ;; Registers used:
  6374 ;;		wreg
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6380 ;;      Params:         0       3       0       0       0
  6381 ;;      Locals:         0       0       0       0       0
  6382 ;;      Temps:          0       0       0       0       0
  6383 ;;      Totals:         0       3       0       0       0
  6384 ;;Total ram usage:        3 bytes
  6385 ;; Hardware stack levels used:    1
  6386 ;; This function calls:
  6387 ;;		Nothing
  6388 ;; This function is called by:
  6389 ;;		_UART_TxFloatNumber
  6390 ;;		_LCD_DisplayFloatNumber
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           
  6395                           ;psect for function ___ftneg
  6396  1658                     ___ftneg:	
  6397                           
  6398                           ;incstack = 0
  6399                           ; Regs used in ___ftneg: [wreg]
  6400  1658  1283               	bcf	3,5	;RP0=0, select bank0
  6401  1659  1303               	bcf	3,6	;RP1=0, select bank0
  6402  165A  0822               	movf	___ftneg@f1+2,w
  6403  165B  0421               	iorwf	___ftneg@f1+1,w
  6404  165C  0420               	iorwf	___ftneg@f1,w
  6405  165D  1903               	skipnz
  6406  165E  0008               	return
  6407  165F  3080               	movlw	128
  6408  1660  06A2               	xorwf	___ftneg@f1+2,f
  6409  1661  0008               	return
  6410  1662                     __end_of___ftneg:	
  6411                           
  6412                           	psect	text33
  6413  0043                     __ptext33:	
  6414 ;; *************** function ___ftmul *****************
  6415 ;; Defined at:
  6416 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftmul.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;  f1              3    8[COMMON] float 
  6419 ;;  f2              3   11[COMMON] float 
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  6422 ;;  sign            1    9[BANK0 ] unsigned char 
  6423 ;;  cntr            1    8[BANK0 ] unsigned char 
  6424 ;;  exp             1    4[BANK0 ] unsigned char 
  6425 ;; Return value:  Size  Location     Type
  6426 ;;                  3    8[COMMON] float 
  6427 ;; Registers used:
  6428 ;;		wreg, status,2, status,0, pclath, cstack
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6434 ;;      Params:         6       0       0       0       0
  6435 ;;      Locals:         0       6       0       0       0
  6436 ;;      Temps:          0       4       0       0       0
  6437 ;;      Totals:         6      10       0       0       0
  6438 ;;Total ram usage:       16 bytes
  6439 ;; Hardware stack levels used:    1
  6440 ;; Hardware stack levels required when called:    1
  6441 ;; This function calls:
  6442 ;;		___ftpack
  6443 ;; This function is called by:
  6444 ;;		_UART_TxFloatNumber
  6445 ;;		_LCD_DisplayFloatNumber
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           
  6450                           ;psect for function ___ftmul
  6451  0043                     ___ftmul:	
  6452                           
  6453                           ;incstack = 0
  6454                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6455  0043  0878               	movf	___ftmul@f1,w
  6456  0044  1283               	bcf	3,5	;RP0=0, select bank0
  6457  0045  1303               	bcf	3,6	;RP1=0, select bank0
  6458  0046  00A0               	movwf	??___ftmul
  6459  0047  0879               	movf	___ftmul@f1+1,w
  6460  0048  00A1               	movwf	??___ftmul+1
  6461  0049  087A               	movf	___ftmul@f1+2,w
  6462  004A  00A2               	movwf	??___ftmul+2
  6463  004B  1003               	clrc
  6464  004C  0D21               	rlf	??___ftmul+1,w
  6465  004D  0D22               	rlf	??___ftmul+2,w
  6466  004E  00A3               	movwf	??___ftmul+3
  6467  004F  0823               	movf	??___ftmul+3,w
  6468  0050  00A4               	movwf	___ftmul@exp
  6469  0051  0824               	movf	___ftmul@exp,w
  6470  0052  1D03               	btfss	3,2
  6471  0053  285B               	goto	l2603
  6472  0054  3000               	movlw	0
  6473  0055  00F8               	movwf	?___ftmul
  6474  0056  3000               	movlw	0
  6475  0057  00F9               	movwf	?___ftmul+1
  6476  0058  3000               	movlw	0
  6477  0059  00FA               	movwf	?___ftmul+2
  6478  005A  0008               	return
  6479  005B                     l2603:	
  6480  005B  087B               	movf	___ftmul@f2,w
  6481  005C  00A0               	movwf	??___ftmul
  6482  005D  087C               	movf	___ftmul@f2+1,w
  6483  005E  00A1               	movwf	??___ftmul+1
  6484  005F  087D               	movf	___ftmul@f2+2,w
  6485  0060  00A2               	movwf	??___ftmul+2
  6486  0061  1003               	clrc
  6487  0062  0D21               	rlf	??___ftmul+1,w
  6488  0063  0D22               	rlf	??___ftmul+2,w
  6489  0064  00A3               	movwf	??___ftmul+3
  6490  0065  0823               	movf	??___ftmul+3,w
  6491  0066  00A9               	movwf	___ftmul@sign
  6492  0067  0829               	movf	___ftmul@sign,w
  6493  0068  1D03               	btfss	3,2
  6494  0069  2871               	goto	l2609
  6495  006A  3000               	movlw	0
  6496  006B  00F8               	movwf	?___ftmul
  6497  006C  3000               	movlw	0
  6498  006D  00F9               	movwf	?___ftmul+1
  6499  006E  3000               	movlw	0
  6500  006F  00FA               	movwf	?___ftmul+2
  6501  0070  0008               	return
  6502  0071                     l2609:	
  6503  0071  0829               	movf	___ftmul@sign,w
  6504  0072  3E7B               	addlw	123
  6505  0073  00A0               	movwf	??___ftmul
  6506  0074  0820               	movf	??___ftmul,w
  6507  0075  07A4               	addwf	___ftmul@exp,f
  6508  0076  0878               	movf	___ftmul@f1,w
  6509  0077  00A0               	movwf	??___ftmul
  6510  0078  0879               	movf	___ftmul@f1+1,w
  6511  0079  00A1               	movwf	??___ftmul+1
  6512  007A  087A               	movf	___ftmul@f1+2,w
  6513  007B  00A2               	movwf	??___ftmul+2
  6514  007C  3010               	movlw	16
  6515  007D                     u3655:	
  6516  007D  1003               	clrc
  6517  007E  0CA2               	rrf	??___ftmul+2,f
  6518  007F  0CA1               	rrf	??___ftmul+1,f
  6519  0080  0CA0               	rrf	??___ftmul,f
  6520  0081  3EFF               	addlw	-1
  6521  0082  1D03               	skipz
  6522  0083  287D               	goto	u3655
  6523  0084  0820               	movf	??___ftmul,w
  6524  0085  00A3               	movwf	??___ftmul+3
  6525  0086  0823               	movf	??___ftmul+3,w
  6526  0087  00A9               	movwf	___ftmul@sign
  6527  0088  087B               	movf	___ftmul@f2,w
  6528  0089  00A0               	movwf	??___ftmul
  6529  008A  087C               	movf	___ftmul@f2+1,w
  6530  008B  00A1               	movwf	??___ftmul+1
  6531  008C  087D               	movf	___ftmul@f2+2,w
  6532  008D  00A2               	movwf	??___ftmul+2
  6533  008E  3010               	movlw	16
  6534  008F                     u3665:	
  6535  008F  1003               	clrc
  6536  0090  0CA2               	rrf	??___ftmul+2,f
  6537  0091  0CA1               	rrf	??___ftmul+1,f
  6538  0092  0CA0               	rrf	??___ftmul,f
  6539  0093  3EFF               	addlw	-1
  6540  0094  1D03               	skipz
  6541  0095  288F               	goto	u3665
  6542  0096  0820               	movf	??___ftmul,w
  6543  0097  00A3               	movwf	??___ftmul+3
  6544  0098  0823               	movf	??___ftmul+3,w
  6545  0099  06A9               	xorwf	___ftmul@sign,f
  6546  009A  3080               	movlw	128
  6547  009B  00A0               	movwf	??___ftmul
  6548  009C  0820               	movf	??___ftmul,w
  6549  009D  05A9               	andwf	___ftmul@sign,f
  6550  009E  17F9               	bsf	___ftmul@f1+1,7
  6551  009F  17FC               	bsf	___ftmul@f2+1,7
  6552  00A0  30FF               	movlw	255
  6553  00A1  05FB               	andwf	___ftmul@f2,f
  6554  00A2  30FF               	movlw	255
  6555  00A3  05FC               	andwf	___ftmul@f2+1,f
  6556  00A4  3000               	movlw	0
  6557  00A5  05FD               	andwf	___ftmul@f2+2,f
  6558  00A6  3000               	movlw	0
  6559  00A7  00A5               	movwf	___ftmul@f3_as_product
  6560  00A8  3000               	movlw	0
  6561  00A9  00A6               	movwf	___ftmul@f3_as_product+1
  6562  00AA  3000               	movlw	0
  6563  00AB  00A7               	movwf	___ftmul@f3_as_product+2
  6564  00AC  3007               	movlw	7
  6565  00AD  00A0               	movwf	??___ftmul
  6566  00AE  0820               	movf	??___ftmul,w
  6567  00AF  00A8               	movwf	___ftmul@cntr
  6568  00B0                     l2621:	
  6569  00B0  1C78               	btfss	___ftmul@f1,0
  6570  00B1  28C0               	goto	l2625
  6571  00B2  087B               	movf	___ftmul@f2,w
  6572  00B3  07A5               	addwf	___ftmul@f3_as_product,f
  6573  00B4  087C               	movf	___ftmul@f2+1,w
  6574  00B5  1103               	clrz
  6575  00B6  1803               	skipnc
  6576  00B7  0A7C               	incf	___ftmul@f2+1,w
  6577  00B8  1D03               	btfss	3,2
  6578  00B9  07A6               	addwf	___ftmul@f3_as_product+1,f
  6579  00BA  087D               	movf	___ftmul@f2+2,w
  6580  00BB  1103               	clrz
  6581  00BC  1803               	skipnc
  6582  00BD  0A7D               	incf	___ftmul@f2+2,w
  6583  00BE  1D03               	btfss	3,2
  6584  00BF  07A7               	addwf	___ftmul@f3_as_product+2,f
  6585  00C0                     l2625:	
  6586  00C0  3001               	movlw	1
  6587  00C1                     u3695:	
  6588  00C1  1003               	clrc
  6589  00C2  0CFA               	rrf	___ftmul@f1+2,f
  6590  00C3  0CF9               	rrf	___ftmul@f1+1,f
  6591  00C4  0CF8               	rrf	___ftmul@f1,f
  6592  00C5  3EFF               	addlw	-1
  6593  00C6  1D03               	skipz
  6594  00C7  28C1               	goto	u3695
  6595  00C8  3001               	movlw	1
  6596  00C9                     u3705:	
  6597  00C9  1003               	clrc
  6598  00CA  0DFB               	rlf	___ftmul@f2,f
  6599  00CB  0DFC               	rlf	___ftmul@f2+1,f
  6600  00CC  0DFD               	rlf	___ftmul@f2+2,f
  6601  00CD  3EFF               	addlw	-1
  6602  00CE  1D03               	skipz
  6603  00CF  28C9               	goto	u3705
  6604  00D0  3001               	movlw	1
  6605  00D1  02A8               	subwf	___ftmul@cntr,f
  6606  00D2  1D03               	btfss	3,2
  6607  00D3  28B0               	goto	l2621
  6608  00D4  3009               	movlw	9
  6609  00D5  00A0               	movwf	??___ftmul
  6610  00D6  0820               	movf	??___ftmul,w
  6611  00D7  00A8               	movwf	___ftmul@cntr
  6612  00D8                     l2633:	
  6613  00D8  1C78               	btfss	___ftmul@f1,0
  6614  00D9  28E8               	goto	l2637
  6615  00DA  087B               	movf	___ftmul@f2,w
  6616  00DB  07A5               	addwf	___ftmul@f3_as_product,f
  6617  00DC  087C               	movf	___ftmul@f2+1,w
  6618  00DD  1103               	clrz
  6619  00DE  1803               	skipnc
  6620  00DF  0A7C               	incf	___ftmul@f2+1,w
  6621  00E0  1D03               	btfss	3,2
  6622  00E1  07A6               	addwf	___ftmul@f3_as_product+1,f
  6623  00E2  087D               	movf	___ftmul@f2+2,w
  6624  00E3  1103               	clrz
  6625  00E4  1803               	skipnc
  6626  00E5  0A7D               	incf	___ftmul@f2+2,w
  6627  00E6  1D03               	btfss	3,2
  6628  00E7  07A7               	addwf	___ftmul@f3_as_product+2,f
  6629  00E8                     l2637:	
  6630  00E8  3001               	movlw	1
  6631  00E9                     u3745:	
  6632  00E9  1003               	clrc
  6633  00EA  0CFA               	rrf	___ftmul@f1+2,f
  6634  00EB  0CF9               	rrf	___ftmul@f1+1,f
  6635  00EC  0CF8               	rrf	___ftmul@f1,f
  6636  00ED  3EFF               	addlw	-1
  6637  00EE  1D03               	skipz
  6638  00EF  28E9               	goto	u3745
  6639  00F0  3001               	movlw	1
  6640  00F1                     u3755:	
  6641  00F1  1003               	clrc
  6642  00F2  0CA7               	rrf	___ftmul@f3_as_product+2,f
  6643  00F3  0CA6               	rrf	___ftmul@f3_as_product+1,f
  6644  00F4  0CA5               	rrf	___ftmul@f3_as_product,f
  6645  00F5  3EFF               	addlw	-1
  6646  00F6  1D03               	skipz
  6647  00F7  28F1               	goto	u3755
  6648  00F8  3001               	movlw	1
  6649  00F9  02A8               	subwf	___ftmul@cntr,f
  6650  00FA  1D03               	btfss	3,2
  6651  00FB  28D8               	goto	l2633
  6652  00FC  0825               	movf	___ftmul@f3_as_product,w
  6653  00FD  00F0               	movwf	___ftpack@arg
  6654  00FE  0826               	movf	___ftmul@f3_as_product+1,w
  6655  00FF  00F1               	movwf	___ftpack@arg+1
  6656  0100  0827               	movf	___ftmul@f3_as_product+2,w
  6657  0101  00F2               	movwf	___ftpack@arg+2
  6658  0102  0824               	movf	___ftmul@exp,w
  6659  0103  00A0               	movwf	??___ftmul
  6660  0104  0820               	movf	??___ftmul,w
  6661  0105  00F3               	movwf	___ftpack@exp
  6662  0106  0829               	movf	___ftmul@sign,w
  6663  0107  00A1               	movwf	??___ftmul+1
  6664  0108  0821               	movf	??___ftmul+1,w
  6665  0109  00F4               	movwf	___ftpack@sign
  6666  010A  120A  158A  2566   	fcall	___ftpack
  6667  010D  0870               	movf	?___ftpack,w
  6668  010E  00F8               	movwf	?___ftmul
  6669  010F  0871               	movf	?___ftpack+1,w
  6670  0110  00F9               	movwf	?___ftmul+1
  6671  0111  0872               	movf	?___ftpack+2,w
  6672  0112  00FA               	movwf	?___ftmul+2
  6673  0113  0008               	return
  6674  0114                     __end_of___ftmul:	
  6675                           
  6676                           	psect	text34
  6677  0489                     __ptext34:	
  6678 ;; *************** function ___ftadd *****************
  6679 ;; Defined at:
  6680 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftadd.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  f1              3    3[BANK0 ] float 
  6683 ;;  f2              3    6[BANK0 ] float 
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;  exp1            1   15[BANK0 ] unsigned char 
  6686 ;;  exp2            1   14[BANK0 ] unsigned char 
  6687 ;;  sign            1   13[BANK0 ] unsigned char 
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  3    3[BANK0 ] float 
  6690 ;; Registers used:
  6691 ;;		wreg, status,2, status,0, pclath, cstack
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6697 ;;      Params:         0       6       0       0       0
  6698 ;;      Locals:         0       3       0       0       0
  6699 ;;      Temps:          0       4       0       0       0
  6700 ;;      Totals:         0      13       0       0       0
  6701 ;;Total ram usage:       13 bytes
  6702 ;; Hardware stack levels used:    1
  6703 ;; Hardware stack levels required when called:    1
  6704 ;; This function calls:
  6705 ;;		___ftpack
  6706 ;; This function is called by:
  6707 ;;		_UART_TxFloatNumber
  6708 ;;		_LCD_DisplayFloatNumber
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           
  6713                           ;psect for function ___ftadd
  6714  0489                     ___ftadd:	
  6715                           
  6716                           ;incstack = 0
  6717                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6718  0489  1283               	bcf	3,5	;RP0=0, select bank0
  6719  048A  1303               	bcf	3,6	;RP1=0, select bank0
  6720  048B  0823               	movf	___ftadd@f1,w
  6721  048C  00A9               	movwf	??___ftadd
  6722  048D  0824               	movf	___ftadd@f1+1,w
  6723  048E  00AA               	movwf	??___ftadd+1
  6724  048F  0825               	movf	___ftadd@f1+2,w
  6725  0490  00AB               	movwf	??___ftadd+2
  6726  0491  1003               	clrc
  6727  0492  0D2A               	rlf	??___ftadd+1,w
  6728  0493  0D2B               	rlf	??___ftadd+2,w
  6729  0494  00AC               	movwf	??___ftadd+3
  6730  0495  082C               	movf	??___ftadd+3,w
  6731  0496  00AF               	movwf	___ftadd@exp1
  6732  0497  0826               	movf	___ftadd@f2,w
  6733  0498  00A9               	movwf	??___ftadd
  6734  0499  0827               	movf	___ftadd@f2+1,w
  6735  049A  00AA               	movwf	??___ftadd+1
  6736  049B  0828               	movf	___ftadd@f2+2,w
  6737  049C  00AB               	movwf	??___ftadd+2
  6738  049D  1003               	clrc
  6739  049E  0D2A               	rlf	??___ftadd+1,w
  6740  049F  0D2B               	rlf	??___ftadd+2,w
  6741  04A0  00AC               	movwf	??___ftadd+3
  6742  04A1  082C               	movf	??___ftadd+3,w
  6743  04A2  00AE               	movwf	___ftadd@exp2
  6744  04A3  082F               	movf	___ftadd@exp1,w
  6745  04A4  1903               	btfsc	3,2
  6746  04A5  2CB2               	goto	l2533
  6747  04A6  082E               	movf	___ftadd@exp2,w
  6748  04A7  022F               	subwf	___ftadd@exp1,w
  6749  04A8  1803               	skipnc
  6750  04A9  2CB9               	goto	l2537
  6751  04AA  032F               	decf	___ftadd@exp1,w
  6752  04AB  3AFF               	xorlw	255
  6753  04AC  072E               	addwf	___ftadd@exp2,w
  6754  04AD  00A9               	movwf	??___ftadd
  6755  04AE  3019               	movlw	25
  6756  04AF  0229               	subwf	??___ftadd,w
  6757  04B0  1C03               	skipc
  6758  04B1  2CB9               	goto	l2537
  6759  04B2                     l2533:	
  6760  04B2  0826               	movf	___ftadd@f2,w
  6761  04B3  00A3               	movwf	?___ftadd
  6762  04B4  0827               	movf	___ftadd@f2+1,w
  6763  04B5  00A4               	movwf	?___ftadd+1
  6764  04B6  0828               	movf	___ftadd@f2+2,w
  6765  04B7  00A5               	movwf	?___ftadd+2
  6766  04B8  0008               	return
  6767  04B9                     l2537:	
  6768  04B9  082E               	movf	___ftadd@exp2,w
  6769  04BA  1903               	btfsc	3,2
  6770  04BB  0008               	return
  6771  04BC  082F               	movf	___ftadd@exp1,w
  6772  04BD  022E               	subwf	___ftadd@exp2,w
  6773  04BE  1803               	skipnc
  6774  04BF  2CC8               	goto	l2543
  6775  04C0  032E               	decf	___ftadd@exp2,w
  6776  04C1  3AFF               	xorlw	255
  6777  04C2  072F               	addwf	___ftadd@exp1,w
  6778  04C3  00A9               	movwf	??___ftadd
  6779  04C4  3019               	movlw	25
  6780  04C5  0229               	subwf	??___ftadd,w
  6781  04C6  1803               	btfsc	3,0
  6782  04C7  0008               	return
  6783  04C8                     l2543:	
  6784  04C8  3006               	movlw	6
  6785  04C9  00A9               	movwf	??___ftadd
  6786  04CA  0829               	movf	??___ftadd,w
  6787  04CB  00AD               	movwf	___ftadd@sign
  6788  04CC  1BA5               	btfsc	___ftadd@f1+2,7
  6789  04CD  17AD               	bsf	___ftadd@sign,7
  6790  04CE  1BA8               	btfsc	___ftadd@f2+2,7
  6791  04CF  172D               	bsf	___ftadd@sign,6
  6792  04D0  17A4               	bsf	___ftadd@f1+1,7
  6793  04D1  30FF               	movlw	255
  6794  04D2  05A3               	andwf	___ftadd@f1,f
  6795  04D3  30FF               	movlw	255
  6796  04D4  05A4               	andwf	___ftadd@f1+1,f
  6797  04D5  3000               	movlw	0
  6798  04D6  05A5               	andwf	___ftadd@f1+2,f
  6799  04D7  17A7               	bsf	___ftadd@f2+1,7
  6800  04D8  30FF               	movlw	255
  6801  04D9  05A6               	andwf	___ftadd@f2,f
  6802  04DA  30FF               	movlw	255
  6803  04DB  05A7               	andwf	___ftadd@f2+1,f
  6804  04DC  3000               	movlw	0
  6805  04DD  05A8               	andwf	___ftadd@f2+2,f
  6806  04DE  082E               	movf	___ftadd@exp2,w
  6807  04DF  022F               	subwf	___ftadd@exp1,w
  6808  04E0  1803               	skipnc
  6809  04E1  2D08               	goto	l2565
  6810  04E2                     l2555:	
  6811  04E2  3001               	movlw	1
  6812  04E3                     u3485:	
  6813  04E3  1003               	clrc
  6814  04E4  0DA6               	rlf	___ftadd@f2,f
  6815  04E5  0DA7               	rlf	___ftadd@f2+1,f
  6816  04E6  0DA8               	rlf	___ftadd@f2+2,f
  6817  04E7  3EFF               	addlw	-1
  6818  04E8  1D03               	skipz
  6819  04E9  2CE3               	goto	u3485
  6820  04EA  3001               	movlw	1
  6821  04EB  02AE               	subwf	___ftadd@exp2,f
  6822  04EC  082E               	movf	___ftadd@exp2,w
  6823  04ED  062F               	xorwf	___ftadd@exp1,w
  6824  04EE  1903               	skipnz
  6825  04EF  2D03               	goto	l2563
  6826  04F0  3001               	movlw	1
  6827  04F1  02AD               	subwf	___ftadd@sign,f
  6828  04F2  082D               	movf	___ftadd@sign,w
  6829  04F3  3907               	andlw	7
  6830  04F4  1903               	btfsc	3,2
  6831  04F5  2D03               	goto	l2563
  6832  04F6  2CE2               	goto	l2555
  6833  04F7                     l2561:	
  6834  04F7  3001               	movlw	1
  6835  04F8                     u3515:	
  6836  04F8  1003               	clrc
  6837  04F9  0CA5               	rrf	___ftadd@f1+2,f
  6838  04FA  0CA4               	rrf	___ftadd@f1+1,f
  6839  04FB  0CA3               	rrf	___ftadd@f1,f
  6840  04FC  3EFF               	addlw	-1
  6841  04FD  1D03               	skipz
  6842  04FE  2CF8               	goto	u3515
  6843  04FF  3001               	movlw	1
  6844  0500  00A9               	movwf	??___ftadd
  6845  0501  0829               	movf	??___ftadd,w
  6846  0502  07AF               	addwf	___ftadd@exp1,f
  6847  0503                     l2563:	
  6848  0503  082F               	movf	___ftadd@exp1,w
  6849  0504  062E               	xorwf	___ftadd@exp2,w
  6850  0505  1903               	btfsc	3,2
  6851  0506  2D31               	goto	l865
  6852  0507  2CF7               	goto	l2561
  6853  0508                     l2565:	
  6854  0508  082F               	movf	___ftadd@exp1,w
  6855  0509  022E               	subwf	___ftadd@exp2,w
  6856  050A  1803               	skipnc
  6857  050B  2D31               	goto	l865
  6858  050C                     l2567:	
  6859  050C  3001               	movlw	1
  6860  050D                     u3545:	
  6861  050D  1003               	clrc
  6862  050E  0DA3               	rlf	___ftadd@f1,f
  6863  050F  0DA4               	rlf	___ftadd@f1+1,f
  6864  0510  0DA5               	rlf	___ftadd@f1+2,f
  6865  0511  3EFF               	addlw	-1
  6866  0512  1D03               	skipz
  6867  0513  2D0D               	goto	u3545
  6868  0514  3001               	movlw	1
  6869  0515  02AF               	subwf	___ftadd@exp1,f
  6870  0516  082E               	movf	___ftadd@exp2,w
  6871  0517  062F               	xorwf	___ftadd@exp1,w
  6872  0518  1903               	skipnz
  6873  0519  2D2D               	goto	l2575
  6874  051A  3001               	movlw	1
  6875  051B  02AD               	subwf	___ftadd@sign,f
  6876  051C  082D               	movf	___ftadd@sign,w
  6877  051D  3907               	andlw	7
  6878  051E  1903               	btfsc	3,2
  6879  051F  2D2D               	goto	l2575
  6880  0520  2D0C               	goto	l2567
  6881  0521                     l2573:	
  6882  0521  3001               	movlw	1
  6883  0522                     u3575:	
  6884  0522  1003               	clrc
  6885  0523  0CA8               	rrf	___ftadd@f2+2,f
  6886  0524  0CA7               	rrf	___ftadd@f2+1,f
  6887  0525  0CA6               	rrf	___ftadd@f2,f
  6888  0526  3EFF               	addlw	-1
  6889  0527  1D03               	skipz
  6890  0528  2D22               	goto	u3575
  6891  0529  3001               	movlw	1
  6892  052A  00A9               	movwf	??___ftadd
  6893  052B  0829               	movf	??___ftadd,w
  6894  052C  07AE               	addwf	___ftadd@exp2,f
  6895  052D                     l2575:	
  6896  052D  082F               	movf	___ftadd@exp1,w
  6897  052E  062E               	xorwf	___ftadd@exp2,w
  6898  052F  1D03               	skipz
  6899  0530  2D21               	goto	l2573
  6900  0531                     l865:	
  6901  0531  1FAD               	btfss	___ftadd@sign,7
  6902  0532  2D43               	goto	l2579
  6903  0533  30FF               	movlw	255
  6904  0534  06A3               	xorwf	___ftadd@f1,f
  6905  0535  30FF               	movlw	255
  6906  0536  06A4               	xorwf	___ftadd@f1+1,f
  6907  0537  30FF               	movlw	255
  6908  0538  06A5               	xorwf	___ftadd@f1+2,f
  6909  0539  3001               	movlw	1
  6910  053A  07A3               	addwf	___ftadd@f1,f
  6911  053B  3000               	movlw	0
  6912  053C  1803               	skipnc
  6913  053D  3001               	movlw	1
  6914  053E  07A4               	addwf	___ftadd@f1+1,f
  6915  053F  3000               	movlw	0
  6916  0540  1803               	skipnc
  6917  0541  3001               	movlw	1
  6918  0542  07A5               	addwf	___ftadd@f1+2,f
  6919  0543                     l2579:	
  6920  0543  1F2D               	btfss	___ftadd@sign,6
  6921  0544  2D55               	goto	l2583
  6922  0545  30FF               	movlw	255
  6923  0546  06A6               	xorwf	___ftadd@f2,f
  6924  0547  30FF               	movlw	255
  6925  0548  06A7               	xorwf	___ftadd@f2+1,f
  6926  0549  30FF               	movlw	255
  6927  054A  06A8               	xorwf	___ftadd@f2+2,f
  6928  054B  3001               	movlw	1
  6929  054C  07A6               	addwf	___ftadd@f2,f
  6930  054D  3000               	movlw	0
  6931  054E  1803               	skipnc
  6932  054F  3001               	movlw	1
  6933  0550  07A7               	addwf	___ftadd@f2+1,f
  6934  0551  3000               	movlw	0
  6935  0552  1803               	skipnc
  6936  0553  3001               	movlw	1
  6937  0554  07A8               	addwf	___ftadd@f2+2,f
  6938  0555                     l2583:	
  6939  0555  01AD               	clrf	___ftadd@sign
  6940  0556  0823               	movf	___ftadd@f1,w
  6941  0557  07A6               	addwf	___ftadd@f2,f
  6942  0558  0824               	movf	___ftadd@f1+1,w
  6943  0559  1103               	clrz
  6944  055A  1803               	skipnc
  6945  055B  0A24               	incf	___ftadd@f1+1,w
  6946  055C  1D03               	btfss	3,2
  6947  055D  07A7               	addwf	___ftadd@f2+1,f
  6948  055E  0825               	movf	___ftadd@f1+2,w
  6949  055F  1103               	clrz
  6950  0560  1803               	skipnc
  6951  0561  0A25               	incf	___ftadd@f1+2,w
  6952  0562  1D03               	btfss	3,2
  6953  0563  07A8               	addwf	___ftadd@f2+2,f
  6954  0564  1FA8               	btfss	___ftadd@f2+2,7
  6955  0565  2D78               	goto	l2593
  6956  0566  30FF               	movlw	255
  6957  0567  06A6               	xorwf	___ftadd@f2,f
  6958  0568  30FF               	movlw	255
  6959  0569  06A7               	xorwf	___ftadd@f2+1,f
  6960  056A  30FF               	movlw	255
  6961  056B  06A8               	xorwf	___ftadd@f2+2,f
  6962  056C  3001               	movlw	1
  6963  056D  07A6               	addwf	___ftadd@f2,f
  6964  056E  3000               	movlw	0
  6965  056F  1803               	skipnc
  6966  0570  3001               	movlw	1
  6967  0571  07A7               	addwf	___ftadd@f2+1,f
  6968  0572  3000               	movlw	0
  6969  0573  1803               	skipnc
  6970  0574  3001               	movlw	1
  6971  0575  07A8               	addwf	___ftadd@f2+2,f
  6972  0576  01AD               	clrf	___ftadd@sign
  6973  0577  0AAD               	incf	___ftadd@sign,f
  6974  0578                     l2593:	
  6975  0578  0826               	movf	___ftadd@f2,w
  6976  0579  00F0               	movwf	___ftpack@arg
  6977  057A  0827               	movf	___ftadd@f2+1,w
  6978  057B  00F1               	movwf	___ftpack@arg+1
  6979  057C  0828               	movf	___ftadd@f2+2,w
  6980  057D  00F2               	movwf	___ftpack@arg+2
  6981  057E  082F               	movf	___ftadd@exp1,w
  6982  057F  00A9               	movwf	??___ftadd
  6983  0580  0829               	movf	??___ftadd,w
  6984  0581  00F3               	movwf	___ftpack@exp
  6985  0582  082D               	movf	___ftadd@sign,w
  6986  0583  00AA               	movwf	??___ftadd+1
  6987  0584  082A               	movf	??___ftadd+1,w
  6988  0585  00F4               	movwf	___ftpack@sign
  6989  0586  120A  158A  2566   	fcall	___ftpack
  6990  0589  0870               	movf	?___ftpack,w
  6991  058A  1283               	bcf	3,5	;RP0=0, select bank0
  6992  058B  1303               	bcf	3,6	;RP1=0, select bank0
  6993  058C  00A3               	movwf	?___ftadd
  6994  058D  0871               	movf	?___ftpack+1,w
  6995  058E  00A4               	movwf	?___ftadd+1
  6996  058F  0872               	movf	?___ftpack+2,w
  6997  0590  00A5               	movwf	?___ftadd+2
  6998  0591  0008               	return
  6999  0592                     __end_of___ftadd:	
  7000                           
  7001                           	psect	text35
  7002  0D66                     __ptext35:	
  7003 ;; *************** function ___ftpack *****************
  7004 ;; Defined at:
  7005 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\float.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;  arg             3    0[COMMON] unsigned um
  7008 ;;  exp             1    3[COMMON] unsigned char 
  7009 ;;  sign            1    4[COMMON] unsigned char 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;		None
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  3    0[COMMON] float 
  7014 ;; Registers used:
  7015 ;;		wreg, status,2, status,0
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7021 ;;      Params:         5       0       0       0       0
  7022 ;;      Locals:         0       0       0       0       0
  7023 ;;      Temps:          3       0       0       0       0
  7024 ;;      Totals:         8       0       0       0       0
  7025 ;;Total ram usage:        8 bytes
  7026 ;; Hardware stack levels used:    1
  7027 ;; This function calls:
  7028 ;;		Nothing
  7029 ;; This function is called by:
  7030 ;;		___ftadd
  7031 ;;		___ftmul
  7032 ;;		___lltoft
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036                           
  7037                           ;psect for function ___ftpack
  7038  0D66                     ___ftpack:	
  7039                           
  7040                           ;incstack = 0
  7041                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7042  0D66  0873               	movf	___ftpack@exp,w
  7043  0D67  1903               	btfsc	3,2
  7044  0D68  2D6E               	goto	l2393
  7045  0D69  0872               	movf	___ftpack@arg+2,w
  7046  0D6A  0471               	iorwf	___ftpack@arg+1,w
  7047  0D6B  0470               	iorwf	___ftpack@arg,w
  7048  0D6C  1D03               	skipz
  7049  0D6D  2D81               	goto	l2399
  7050  0D6E                     l2393:	
  7051  0D6E  3000               	movlw	0
  7052  0D6F  00F0               	movwf	?___ftpack
  7053  0D70  3000               	movlw	0
  7054  0D71  00F1               	movwf	?___ftpack+1
  7055  0D72  3000               	movlw	0
  7056  0D73  00F2               	movwf	?___ftpack+2
  7057  0D74  0008               	return
  7058  0D75                     l2397:	
  7059  0D75  3001               	movlw	1
  7060  0D76  00F5               	movwf	??___ftpack
  7061  0D77  0875               	movf	??___ftpack,w
  7062  0D78  07F3               	addwf	___ftpack@exp,f
  7063  0D79  3001               	movlw	1
  7064  0D7A                     u3065:	
  7065  0D7A  1003               	clrc
  7066  0D7B  0CF2               	rrf	___ftpack@arg+2,f
  7067  0D7C  0CF1               	rrf	___ftpack@arg+1,f
  7068  0D7D  0CF0               	rrf	___ftpack@arg,f
  7069  0D7E  3EFF               	addlw	-1
  7070  0D7F  1D03               	skipz
  7071  0D80  2D7A               	goto	u3065
  7072  0D81                     l2399:	
  7073  0D81  30FE               	movlw	254
  7074  0D82  0572               	andwf	___ftpack@arg+2,w
  7075  0D83  1903               	btfsc	3,2
  7076  0D84  2D9C               	goto	l834
  7077  0D85  2D75               	goto	l2397
  7078  0D86                     l2401:	
  7079  0D86  3001               	movlw	1
  7080  0D87  00F5               	movwf	??___ftpack
  7081  0D88  0875               	movf	??___ftpack,w
  7082  0D89  07F3               	addwf	___ftpack@exp,f
  7083  0D8A  3001               	movlw	1
  7084  0D8B  07F0               	addwf	___ftpack@arg,f
  7085  0D8C  3000               	movlw	0
  7086  0D8D  1803               	skipnc
  7087  0D8E  3001               	movlw	1
  7088  0D8F  07F1               	addwf	___ftpack@arg+1,f
  7089  0D90  3000               	movlw	0
  7090  0D91  1803               	skipnc
  7091  0D92  3001               	movlw	1
  7092  0D93  07F2               	addwf	___ftpack@arg+2,f
  7093  0D94  3001               	movlw	1
  7094  0D95                     u3085:	
  7095  0D95  1003               	clrc
  7096  0D96  0CF2               	rrf	___ftpack@arg+2,f
  7097  0D97  0CF1               	rrf	___ftpack@arg+1,f
  7098  0D98  0CF0               	rrf	___ftpack@arg,f
  7099  0D99  3EFF               	addlw	-1
  7100  0D9A  1D03               	skipz
  7101  0D9B  2D95               	goto	u3085
  7102  0D9C                     l834:	
  7103  0D9C  30FF               	movlw	255
  7104  0D9D  0572               	andwf	___ftpack@arg+2,w
  7105  0D9E  1903               	btfsc	3,2
  7106  0D9F  2DAB               	goto	l2409
  7107  0DA0  2D86               	goto	l2401
  7108  0DA1                     l2407:	
  7109  0DA1  3001               	movlw	1
  7110  0DA2  02F3               	subwf	___ftpack@exp,f
  7111  0DA3  3001               	movlw	1
  7112  0DA4                     u3105:	
  7113  0DA4  1003               	clrc
  7114  0DA5  0DF0               	rlf	___ftpack@arg,f
  7115  0DA6  0DF1               	rlf	___ftpack@arg+1,f
  7116  0DA7  0DF2               	rlf	___ftpack@arg+2,f
  7117  0DA8  3EFF               	addlw	-1
  7118  0DA9  1D03               	skipz
  7119  0DAA  2DA4               	goto	u3105
  7120  0DAB                     l2409:	
  7121  0DAB  1BF1               	btfsc	___ftpack@arg+1,7
  7122  0DAC  2DB1               	goto	l841
  7123  0DAD  3002               	movlw	2
  7124  0DAE  0273               	subwf	___ftpack@exp,w
  7125  0DAF  1803               	skipnc
  7126  0DB0  2DA1               	goto	l2407
  7127  0DB1                     l841:	
  7128  0DB1  1873               	btfsc	___ftpack@exp,0
  7129  0DB2  2DB9               	goto	l842
  7130  0DB3  30FF               	movlw	255
  7131  0DB4  05F0               	andwf	___ftpack@arg,f
  7132  0DB5  307F               	movlw	127
  7133  0DB6  05F1               	andwf	___ftpack@arg+1,f
  7134  0DB7  30FF               	movlw	255
  7135  0DB8  05F2               	andwf	___ftpack@arg+2,f
  7136  0DB9                     l842:	
  7137  0DB9  1003               	clrc
  7138  0DBA  0CF3               	rrf	___ftpack@exp,f
  7139  0DBB  0873               	movf	___ftpack@exp,w
  7140  0DBC  00F5               	movwf	??___ftpack
  7141  0DBD  01F6               	clrf	??___ftpack+1
  7142  0DBE  01F7               	clrf	??___ftpack+2
  7143  0DBF  3010               	movlw	16
  7144  0DC0                     u3145:	
  7145  0DC0  1003               	clrc
  7146  0DC1  0DF5               	rlf	??___ftpack,f
  7147  0DC2  0DF6               	rlf	??___ftpack+1,f
  7148  0DC3  0DF7               	rlf	??___ftpack+2,f
  7149  0DC4  3EFF               	addlw	-1
  7150  0DC5  1D03               	skipz
  7151  0DC6  2DC0               	goto	u3145
  7152  0DC7  0875               	movf	??___ftpack,w
  7153  0DC8  04F0               	iorwf	___ftpack@arg,f
  7154  0DC9  0876               	movf	??___ftpack+1,w
  7155  0DCA  04F1               	iorwf	___ftpack@arg+1,f
  7156  0DCB  0877               	movf	??___ftpack+2,w
  7157  0DCC  04F2               	iorwf	___ftpack@arg+2,f
  7158  0DCD  0874               	movf	___ftpack@sign,w
  7159  0DCE  1903               	btfsc	3,2
  7160  0DCF  0008               	return
  7161  0DD0  17F2               	bsf	___ftpack@arg+2,7
  7162  0DD1  0008               	return
  7163  0DD2                     __end_of___ftpack:	
  7164                           
  7165                           	psect	text36
  7166  0397                     __ptext36:	
  7167 ;; *************** function _UART_TxNumber *****************
  7168 ;; Defined at:
  7169 ;;		line 260 in file "../00-libfiles/uart.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;  v_numericSys    1    wreg     unsigned char 
  7172 ;;  v_number_u32    4    4[BANK0 ] unsigned long 
  7173 ;;  v_numOfDigit    1    8[BANK0 ] unsigned char 
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;  v_numericSys    1   33[BANK0 ] unsigned char 
  7176 ;;  a              10   21[BANK0 ] unsigned char [10]
  7177 ;;  i               1   34[BANK0 ] unsigned char 
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  1    wreg      void 
  7180 ;; Registers used:
  7181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7187 ;;      Params:         0       5       0       0       0
  7188 ;;      Locals:         0      14       0       0       0
  7189 ;;      Temps:          0      12       0       0       0
  7190 ;;      Totals:         0      31       0       0       0
  7191 ;;Total ram usage:       31 bytes
  7192 ;; Hardware stack levels used:    1
  7193 ;; Hardware stack levels required when called:    1
  7194 ;; This function calls:
  7195 ;;		_UART_TxChar
  7196 ;;		___bmul
  7197 ;;		___lldiv
  7198 ;; This function is called by:
  7199 ;;		_UART_TxFloatNumber
  7200 ;;		_UART_Printf
  7201 ;; This function uses a non-reentrant model
  7202 ;;
  7203                           
  7204                           
  7205                           ;psect for function _UART_TxNumber
  7206  0397                     _UART_TxNumber:	
  7207                           
  7208                           ;incstack = 0
  7209                           ; Regs used in _UART_TxNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7210                           ;UART_TxNumber@v_numericSystem_u8 stored from wreg
  7211  0397  1283               	bcf	3,5	;RP0=0, select bank0
  7212  0398  1303               	bcf	3,6	;RP1=0, select bank0
  7213  0399  00C1               	movwf	UART_TxNumber@v_numericSystem_u8
  7214                           
  7215                           ;uart.c: 262: uint8_t i=0,a[10];
  7216  039A  01C2               	clrf	UART_TxNumber@i
  7217                           
  7218                           ;uart.c: 264: if(2u == v_numericSystem_u8)
  7219  039B  3002               	movlw	2
  7220  039C  0641               	xorwf	UART_TxNumber@v_numericSystem_u8,w
  7221  039D  1903               	btfsc	3,2
  7222  039E  2BDE               	goto	l2489
  7223  039F  2BE2               	goto	l2491
  7224  03A0                     l2483:	
  7225                           ;uart.c: 265: {
  7226                           ;uart.c: 266: while(v_numOfDigitsToTransmit_u8!=0)
  7227                           
  7228                           
  7229                           ;uart.c: 267: {
  7230                           ;uart.c: 270: i = (((v_number_u32)&((1<<((v_numOfDigitsToTransmit_u8-1)))))!=0u);
  7231  03A0  0824               	movf	UART_TxNumber@v_number_u32,w
  7232  03A1  00A9               	movwf	??_UART_TxNumber
  7233  03A2  0825               	movf	UART_TxNumber@v_number_u32+1,w
  7234  03A3  00AA               	movwf	??_UART_TxNumber+1
  7235  03A4  0826               	movf	UART_TxNumber@v_number_u32+2,w
  7236  03A5  00AB               	movwf	??_UART_TxNumber+2
  7237  03A6  0827               	movf	UART_TxNumber@v_number_u32+3,w
  7238  03A7  00AC               	movwf	??_UART_TxNumber+3
  7239  03A8  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  7240  03A9  3EFF               	addlw	-1
  7241  03AA  00AD               	movwf	??_UART_TxNumber+4
  7242  03AB  0AAD               	incf	??_UART_TxNumber+4,f
  7243  03AC  3001               	movlw	1
  7244  03AD  00AE               	movwf	??_UART_TxNumber+5
  7245  03AE  3000               	movlw	0
  7246  03AF  00AF               	movwf	??_UART_TxNumber+6
  7247  03B0  2BB4               	goto	u3284
  7248  03B1                     u3285:	
  7249  03B1  1003               	clrc
  7250  03B2  0DAE               	rlf	??_UART_TxNumber+5,f
  7251  03B3  0DAF               	rlf	??_UART_TxNumber+6,f
  7252  03B4                     u3284:	
  7253  03B4  0BAD               	decfsz	??_UART_TxNumber+4,f
  7254  03B5  2BB1               	goto	u3285
  7255  03B6  082E               	movf	??_UART_TxNumber+5,w
  7256  03B7  00B0               	movwf	??_UART_TxNumber+7
  7257  03B8  082F               	movf	??_UART_TxNumber+6,w
  7258  03B9  00B1               	movwf	??_UART_TxNumber+8
  7259  03BA  3000               	movlw	0
  7260  03BB  1BB1               	btfsc	??_UART_TxNumber+8,7
  7261  03BC  30FF               	movlw	255
  7262  03BD  00B2               	movwf	??_UART_TxNumber+9
  7263  03BE  00B3               	movwf	??_UART_TxNumber+10
  7264  03BF  0830               	movf	??_UART_TxNumber+7,w
  7265  03C0  05A9               	andwf	??_UART_TxNumber,f
  7266  03C1  0831               	movf	??_UART_TxNumber+8,w
  7267  03C2  05AA               	andwf	??_UART_TxNumber+1,f
  7268  03C3  0832               	movf	??_UART_TxNumber+9,w
  7269  03C4  05AB               	andwf	??_UART_TxNumber+2,f
  7270  03C5  0833               	movf	??_UART_TxNumber+10,w
  7271  03C6  05AC               	andwf	??_UART_TxNumber+3,f
  7272  03C7  082C               	movf	??_UART_TxNumber+3,w
  7273  03C8  042B               	iorwf	??_UART_TxNumber+2,w
  7274  03C9  042A               	iorwf	??_UART_TxNumber+1,w
  7275  03CA  0429               	iorwf	??_UART_TxNumber,w
  7276  03CB  1903               	btfsc	3,2
  7277  03CC  2BCF               	goto	u3290
  7278  03CD  3001               	movlw	1
  7279  03CE  2BD0               	goto	u3300
  7280  03CF                     u3290:	
  7281  03CF  3000               	movlw	0
  7282  03D0                     u3300:	
  7283  03D0  00B4               	movwf	??_UART_TxNumber+11
  7284  03D1  0834               	movf	??_UART_TxNumber+11,w
  7285  03D2  00C2               	movwf	UART_TxNumber@i
  7286                           
  7287                           ;uart.c: 271: UART_TxChar(((i)+0x30));
  7288  03D3  0842               	movf	UART_TxNumber@i,w
  7289  03D4  3E30               	addlw	48
  7290  03D5  160A  118A  264F  120A  118A  	fcall	_UART_TxChar
  7291                           
  7292                           ;uart.c: 272: v_numOfDigitsToTransmit_u8--;
  7293  03DA  3001               	movlw	1
  7294  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  7295  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  7296  03DD  02A8               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,f
  7297  03DE                     l2489:	
  7298  03DE  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  7299  03DF  1903               	btfsc	3,2
  7300  03E0  0008               	return
  7301  03E1  2BA0               	goto	l2483
  7302  03E2                     l2491:	
  7303                           ;uart.c: 273: }
  7304                           ;uart.c: 274: }
  7305                           
  7306                           
  7307                           ;uart.c: 275: else if(v_number_u32==0)
  7308  03E2  0827               	movf	UART_TxNumber@v_number_u32+3,w
  7309  03E3  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  7310  03E4  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  7311  03E5  0424               	iorwf	UART_TxNumber@v_number_u32,w
  7312  03E6  1D03               	skipz
  7313  03E7  2BED               	goto	l2495
  7314                           
  7315                           ;uart.c: 276: {
  7316                           ;uart.c: 280: UART_TxChar('0');
  7317  03E8  3030               	movlw	48
  7318  03E9  160A  118A  264F   	fcall	_UART_TxChar
  7319                           
  7320                           ;uart.c: 281: }
  7321  03EC  0008               	return
  7322  03ED                     l2495:	
  7323                           
  7324                           ;uart.c: 282: else
  7325                           ;uart.c: 283: {
  7326                           ;uart.c: 284: for(i=0;i<v_numOfDigitsToTransmit_u8;i++)
  7327  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  7328  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  7329  03EF  01C2               	clrf	UART_TxNumber@i
  7330  03F0                     l2513:	
  7331  03F0  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  7332  03F1  0242               	subwf	UART_TxNumber@i,w
  7333  03F2  1803               	btfsc	3,0
  7334  03F3  2C85               	goto	l2525
  7335                           
  7336                           ;uart.c: 285: {
  7337                           ;uart.c: 288: if(v_number_u32!=0)
  7338  03F4  0827               	movf	UART_TxNumber@v_number_u32+3,w
  7339  03F5  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  7340  03F6  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  7341  03F7  0424               	iorwf	UART_TxNumber@v_number_u32,w
  7342  03F8  1903               	skipnz
  7343  03F9  2C4F               	goto	l2503
  7344                           
  7345                           ;uart.c: 289: {
  7346                           ;uart.c: 296: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u
      +                          32/v_numericSystem_u8)));
  7347  03FA  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  7348  03FB  00A9               	movwf	??_UART_TxNumber
  7349  03FC  0829               	movf	??_UART_TxNumber,w
  7350  03FD  00A0               	movwf	___bmul@multiplicand
  7351  03FE  0827               	movf	UART_TxNumber@v_number_u32+3,w
  7352  03FF  00F7               	movwf	___lldiv@dividend+3
  7353  0400  0826               	movf	UART_TxNumber@v_number_u32+2,w
  7354  0401  00F6               	movwf	___lldiv@dividend+2
  7355  0402  0825               	movf	UART_TxNumber@v_number_u32+1,w
  7356  0403  00F5               	movwf	___lldiv@dividend+1
  7357  0404  0824               	movf	UART_TxNumber@v_number_u32,w
  7358  0405  00F4               	movwf	___lldiv@dividend
  7359  0406  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  7360  0407  00AA               	movwf	??_UART_TxNumber+1
  7361  0408  01AB               	clrf	??_UART_TxNumber+2
  7362  0409  01AC               	clrf	??_UART_TxNumber+3
  7363  040A  01AD               	clrf	??_UART_TxNumber+4
  7364  040B  082D               	movf	??_UART_TxNumber+4,w
  7365  040C  00F3               	movwf	___lldiv@divisor+3
  7366  040D  082C               	movf	??_UART_TxNumber+3,w
  7367  040E  00F2               	movwf	___lldiv@divisor+2
  7368  040F  082B               	movf	??_UART_TxNumber+2,w
  7369  0410  00F1               	movwf	___lldiv@divisor+1
  7370  0411  082A               	movf	??_UART_TxNumber+1,w
  7371  0412  00F0               	movwf	___lldiv@divisor
  7372  0413  120A  158A  243F  120A  118A  	fcall	___lldiv
  7373  0418  0870               	movf	?___lldiv,w
  7374  0419  160A  118A  2678  120A  118A  	fcall	___bmul
  7375  041E  3AFF               	xorlw	255
  7376  041F  3E01               	addlw	1
  7377  0420  1283               	bcf	3,5	;RP0=0, select bank0
  7378  0421  1303               	bcf	3,6	;RP1=0, select bank0
  7379  0422  0724               	addwf	UART_TxNumber@v_number_u32,w
  7380  0423  00AE               	movwf	??_UART_TxNumber+5
  7381  0424  0842               	movf	UART_TxNumber@i,w
  7382  0425  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  7383  0426  0084               	movwf	4
  7384  0427  082E               	movf	??_UART_TxNumber+5,w
  7385  0428  1383               	bcf	3,7	;select IRP bank0
  7386  0429  0080               	movwf	0
  7387                           
  7388                           ;uart.c: 297: v_number_u32=v_number_u32/v_numericSystem_u8;
  7389  042A  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  7390  042B  00A9               	movwf	??_UART_TxNumber
  7391  042C  01AA               	clrf	??_UART_TxNumber+1
  7392  042D  01AB               	clrf	??_UART_TxNumber+2
  7393  042E  01AC               	clrf	??_UART_TxNumber+3
  7394  042F  082C               	movf	??_UART_TxNumber+3,w
  7395  0430  00F3               	movwf	___lldiv@divisor+3
  7396  0431  082B               	movf	??_UART_TxNumber+2,w
  7397  0432  00F2               	movwf	___lldiv@divisor+2
  7398  0433  082A               	movf	??_UART_TxNumber+1,w
  7399  0434  00F1               	movwf	___lldiv@divisor+1
  7400  0435  0829               	movf	??_UART_TxNumber,w
  7401  0436  00F0               	movwf	___lldiv@divisor
  7402  0437  0827               	movf	UART_TxNumber@v_number_u32+3,w
  7403  0438  00F7               	movwf	___lldiv@dividend+3
  7404  0439  0826               	movf	UART_TxNumber@v_number_u32+2,w
  7405  043A  00F6               	movwf	___lldiv@dividend+2
  7406  043B  0825               	movf	UART_TxNumber@v_number_u32+1,w
  7407  043C  00F5               	movwf	___lldiv@dividend+1
  7408  043D  0824               	movf	UART_TxNumber@v_number_u32,w
  7409  043E  00F4               	movwf	___lldiv@dividend
  7410  043F  120A  158A  243F  120A  118A  	fcall	___lldiv
  7411  0444  0873               	movf	?___lldiv+3,w
  7412  0445  1283               	bcf	3,5	;RP0=0, select bank0
  7413  0446  1303               	bcf	3,6	;RP1=0, select bank0
  7414  0447  00A7               	movwf	UART_TxNumber@v_number_u32+3
  7415  0448  0872               	movf	?___lldiv+2,w
  7416  0449  00A6               	movwf	UART_TxNumber@v_number_u32+2
  7417  044A  0871               	movf	?___lldiv+1,w
  7418  044B  00A5               	movwf	UART_TxNumber@v_number_u32+1
  7419  044C  0870               	movf	?___lldiv,w
  7420  044D  00A4               	movwf	UART_TxNumber@v_number_u32
  7421                           
  7422                           ;uart.c: 298: }
  7423  044E  2C5B               	goto	l2511
  7424  044F                     l2503:	
  7425                           
  7426                           ;uart.c: 299: else if( (v_numOfDigitsToTransmit_u8 == 0xffu) ||
  7427                           ;uart.c: 300: (v_numOfDigitsToTransmit_u8 > 10u))
  7428  044F  0A28               	incf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  7429  0450  1903               	btfsc	3,2
  7430  0451  2C85               	goto	l2525
  7431  0452  300B               	movlw	11
  7432  0453  0228               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  7433  0454  1803               	btfsc	3,0
  7434  0455  2C85               	goto	l2525
  7435                           
  7436                           ;uart.c: 306: else
  7437                           ;uart.c: 307: {
  7438                           ;uart.c: 311: a[i]=0;
  7439                           
  7440                           ;uart.c: 305: }
  7441                           
  7442                           ;uart.c: 301: {
  7443                           ;uart.c: 304: break;
  7444  0456  0842               	movf	UART_TxNumber@i,w
  7445  0457  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  7446  0458  0084               	movwf	4
  7447  0459  1383               	bcf	3,7	;select IRP bank0
  7448  045A  0180               	clrf	0
  7449  045B                     l2511:	
  7450  045B  3001               	movlw	1
  7451  045C  00A9               	movwf	??_UART_TxNumber
  7452  045D  0829               	movf	??_UART_TxNumber,w
  7453  045E  07C2               	addwf	UART_TxNumber@i,f
  7454  045F  2BF0               	goto	l2513
  7455  0460                     l2515:	
  7456                           ;uart.c: 312: }
  7457                           ;uart.c: 313: }
  7458                           ;uart.c: 315: while(i)
  7459                           
  7460                           
  7461                           ;uart.c: 316: {
  7462                           ;uart.c: 318: UART_TxChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  7463  0460  0842               	movf	UART_TxNumber@i,w
  7464  0461  3EFF               	addlw	255
  7465  0462  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  7466  0463  0084               	movwf	4
  7467  0464  300A               	movlw	10
  7468  0465  1383               	bcf	3,7	;select IRP bank0
  7469  0466  0200               	subwf	0,w
  7470  0467  1803               	skipnc
  7471  0468  2C70               	goto	l2519
  7472  0469  0842               	movf	UART_TxNumber@i,w
  7473  046A  3EFF               	addlw	255
  7474  046B  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  7475  046C  0084               	movwf	4
  7476  046D  0800               	movf	0,w
  7477  046E  3E30               	addlw	48
  7478  046F  2C76               	goto	L8
  7479  0470                     l2519:	
  7480  0470  0842               	movf	UART_TxNumber@i,w
  7481  0471  3EFF               	addlw	255
  7482  0472  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  7483  0473  0084               	movwf	4
  7484  0474  0800               	movf	0,w
  7485  0475  3E37               	addlw	55
  7486  0476                     L8:	
  7487  0476  00BF               	movwf	_UART_TxNumber$370
  7488  0477  3000               	movlw	0
  7489  0478  1803               	skipnc
  7490  0479  3001               	movlw	1
  7491  047A  00C0               	movwf	_UART_TxNumber$370+1
  7492  047B  083F               	movf	_UART_TxNumber$370,w
  7493  047C  160A  118A  264F  120A  118A  	fcall	_UART_TxChar
  7494                           
  7495                           ;uart.c: 319: i--;
  7496  0481  3001               	movlw	1
  7497  0482  1283               	bcf	3,5	;RP0=0, select bank0
  7498  0483  1303               	bcf	3,6	;RP1=0, select bank0
  7499  0484  02C2               	subwf	UART_TxNumber@i,f
  7500  0485                     l2525:	
  7501  0485  0842               	movf	UART_TxNumber@i,w
  7502  0486  1903               	btfsc	3,2
  7503  0487  0008               	return
  7504  0488  2C60               	goto	l2515
  7505  0489                     __end_of_UART_TxNumber:	
  7506                           
  7507                           	psect	text37
  7508  1678                     __ptext37:	
  7509 ;; *************** function ___bmul *****************
  7510 ;; Defined at:
  7511 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\Umul8.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;  multiplier      1    wreg     unsigned char 
  7514 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;  multiplier      1    3[BANK0 ] unsigned char 
  7517 ;;  product         1    2[BANK0 ] unsigned char 
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  1    wreg      unsigned char 
  7520 ;; Registers used:
  7521 ;;		wreg, status,2, status,0
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7527 ;;      Params:         0       1       0       0       0
  7528 ;;      Locals:         0       2       0       0       0
  7529 ;;      Temps:          0       1       0       0       0
  7530 ;;      Totals:         0       4       0       0       0
  7531 ;;Total ram usage:        4 bytes
  7532 ;; Hardware stack levels used:    1
  7533 ;; This function calls:
  7534 ;;		Nothing
  7535 ;; This function is called by:
  7536 ;;		_UART_TxNumber
  7537 ;;		_UART_Printf
  7538 ;;		_LCD_DisplayNumber
  7539 ;;		_LCD_Printf
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543                           
  7544                           ;psect for function ___bmul
  7545  1678                     ___bmul:	
  7546                           
  7547                           ;incstack = 0
  7548                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7549                           ;___bmul@multiplier stored from wreg
  7550  1678  1283               	bcf	3,5	;RP0=0, select bank0
  7551  1679  1303               	bcf	3,6	;RP1=0, select bank0
  7552  167A  00A3               	movwf	___bmul@multiplier
  7553  167B  01A2               	clrf	___bmul@product
  7554  167C                     l2377:	
  7555  167C  1C23               	btfss	___bmul@multiplier,0
  7556  167D  2E82               	goto	l2381
  7557  167E  0820               	movf	___bmul@multiplicand,w
  7558  167F  00A1               	movwf	??___bmul
  7559  1680  0821               	movf	??___bmul,w
  7560  1681  07A2               	addwf	___bmul@product,f
  7561  1682                     l2381:	
  7562  1682  1003               	clrc
  7563  1683  0DA0               	rlf	___bmul@multiplicand,f
  7564  1684  1003               	clrc
  7565  1685  0CA3               	rrf	___bmul@multiplier,f
  7566  1686  0823               	movf	___bmul@multiplier,w
  7567  1687  1D03               	btfss	3,2
  7568  1688  2E7C               	goto	l2377
  7569  1689  0822               	movf	___bmul@product,w
  7570  168A  0008               	return
  7571  168B                     __end_of___bmul:	
  7572                           
  7573                           	psect	text38
  7574  164F                     __ptext38:	
  7575 ;; *************** function _UART_TxChar *****************
  7576 ;; Defined at:
  7577 ;;		line 145 in file "../00-libfiles/uart.c"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;  v_uartData_u    1    wreg     unsigned char 
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;  v_uartData_u    1    0[COMMON] unsigned char 
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  1    wreg      void 
  7584 ;; Registers used:
  7585 ;;		wreg
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7591 ;;      Params:         0       0       0       0       0
  7592 ;;      Locals:         1       0       0       0       0
  7593 ;;      Temps:          0       0       0       0       0
  7594 ;;      Totals:         1       0       0       0       0
  7595 ;;Total ram usage:        1 bytes
  7596 ;; Hardware stack levels used:    1
  7597 ;; This function calls:
  7598 ;;		Nothing
  7599 ;; This function is called by:
  7600 ;;		_UART_TxString
  7601 ;;		_UART_TxNumber
  7602 ;;		_UART_TxFloatNumber
  7603 ;;		_UART_Printf
  7604 ;;		_UART_RxString
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           
  7609                           ;psect for function _UART_TxChar
  7610  164F                     _UART_TxChar:	
  7611                           
  7612                           ;incstack = 0
  7613                           ; Regs used in _UART_TxChar: [wreg]
  7614                           ;UART_TxChar@v_uartData_u8 stored from wreg
  7615  164F  00F0               	movwf	UART_TxChar@v_uartData_u8
  7616  1650                     l395:	
  7617                           ;uart.c: 147: while(TXIF==0);
  7618                           
  7619  1650  1283               	bcf	3,5	;RP0=0, select bank0
  7620  1651  1303               	bcf	3,6	;RP1=0, select bank0
  7621  1652  1E0C               	btfss	12,4	;volatile
  7622  1653  2E50               	goto	l395
  7623                           
  7624                           ;uart.c: 148: TXIF=0;
  7625  1654  120C               	bcf	12,4	;volatile
  7626                           
  7627                           ;uart.c: 149: TXREG=v_uartData_u8;
  7628  1655  0870               	movf	UART_TxChar@v_uartData_u8,w
  7629  1656  0099               	movwf	25	;volatile
  7630  1657  0008               	return
  7631  1658                     __end_of_UART_TxChar:	
  7632                           
  7633                           	psect	text39
  7634  1647                     __ptext39:	
  7635 ;; *************** function _ADC_Init *****************
  7636 ;; Defined at:
  7637 ;;		line 54 in file "../00-libfiles/adc.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;		None
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;		None
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  1    wreg      void 
  7644 ;; Registers used:
  7645 ;;		wreg, status,2
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7651 ;;      Params:         0       0       0       0       0
  7652 ;;      Locals:         0       0       0       0       0
  7653 ;;      Temps:          0       0       0       0       0
  7654 ;;      Totals:         0       0       0       0       0
  7655 ;;Total ram usage:        0 bytes
  7656 ;; Hardware stack levels used:    1
  7657 ;; This function calls:
  7658 ;;		Nothing
  7659 ;; This function is called by:
  7660 ;;		_adc_Test
  7661 ;; This function uses a non-reentrant model
  7662 ;;
  7663                           
  7664                           
  7665                           ;psect for function _ADC_Init
  7666  1647                     _ADC_Init:	
  7667                           
  7668                           ;adc.c: 56: ADCON0=0x00;
  7669                           
  7670                           ;incstack = 0
  7671                           ; Regs used in _ADC_Init: [wreg+status,2]
  7672  1647  1283               	bcf	3,5	;RP0=0, select bank0
  7673  1648  1303               	bcf	3,6	;RP1=0, select bank0
  7674  1649  019F               	clrf	31	;volatile
  7675                           
  7676                           ;adc.c: 57: ADCON1=0x80;
  7677  164A  3080               	movlw	128
  7678  164B  1683               	bsf	3,5	;RP0=1, select bank1
  7679  164C  1303               	bcf	3,6	;RP1=0, select bank1
  7680  164D  009F               	movwf	31	;volatile
  7681  164E  0008               	return
  7682  164F                     __end_of_ADC_Init:	
  7683                           
  7684                           	psect	text40
  7685  173A                     __ptext40:	
  7686 ;; *************** function _ADC_GetAdcValue *****************
  7687 ;; Defined at:
  7688 ;;		line 76 in file "../00-libfiles/adc.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;  var_adcChann    1    wreg     unsigned char 
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;  var_adcChann    1    5[COMMON] unsigned char 
  7693 ;; Return value:  Size  Location     Type
  7694 ;;                  2    2[COMMON] unsigned int 
  7695 ;; Registers used:
  7696 ;;		wreg, status,2, status,0, pclath, cstack
  7697 ;; Tracked objects:
  7698 ;;		On entry : 0/0
  7699 ;;		On exit  : 0/0
  7700 ;;		Unchanged: 0/0
  7701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7702 ;;      Params:         2       0       0       0       0
  7703 ;;      Locals:         1       0       0       0       0
  7704 ;;      Temps:          1       0       0       0       0
  7705 ;;      Totals:         4       0       0       0       0
  7706 ;;Total ram usage:        4 bytes
  7707 ;; Hardware stack levels used:    1
  7708 ;; Hardware stack levels required when called:    1
  7709 ;; This function calls:
  7710 ;;		_DELAY_us
  7711 ;; This function is called by:
  7712 ;;		_adc_Test
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           
  7717                           ;psect for function _ADC_GetAdcValue
  7718  173A                     _ADC_GetAdcValue:	
  7719                           
  7720                           ;incstack = 0
  7721                           ; Regs used in _ADC_GetAdcValue: [wreg+status,2+status,0+pclath+cstack]
  7722                           ;ADC_GetAdcValue@var_adcChannel_u8 stored from wreg
  7723  173A  00F5               	movwf	ADC_GetAdcValue@var_adcChannel_u8
  7724                           
  7725                           ;adc.c: 79: ADCON0= (var_adcChannel_u8<<3);
  7726  173B  0875               	movf	ADC_GetAdcValue@var_adcChannel_u8,w
  7727  173C  00F4               	movwf	??_ADC_GetAdcValue
  7728  173D  3002               	movlw	2
  7729  173E                     u3945:	
  7730  173E  1003               	clrc
  7731  173F  0DF4               	rlf	??_ADC_GetAdcValue,f
  7732  1740  3EFF               	addlw	-1
  7733  1741  1D03               	skipz
  7734  1742  2F3E               	goto	u3945
  7735  1743  1003               	clrc
  7736  1744  0D74               	rlf	??_ADC_GetAdcValue,w
  7737  1745  1283               	bcf	3,5	;RP0=0, select bank0
  7738  1746  1303               	bcf	3,6	;RP1=0, select bank0
  7739  1747  009F               	movwf	31	;volatile
  7740                           
  7741                           ;adc.c: 80: ADON = 1;
  7742  1748  141F               	bsf	31,0	;volatile
  7743                           
  7744                           ;adc.c: 81: DELAY_us(10);
  7745  1749  300A               	movlw	10
  7746  174A  00F0               	movwf	DELAY_us@us_count
  7747  174B  3000               	movlw	0
  7748  174C  00F1               	movwf	DELAY_us@us_count+1
  7749  174D  160A  118A  2662  160A  118A  	fcall	_DELAY_us
  7750                           
  7751                           ;adc.c: 83: GO=1;
  7752  1752  1283               	bcf	3,5	;RP0=0, select bank0
  7753  1753  1303               	bcf	3,6	;RP1=0, select bank0
  7754  1754  151F               	bsf	31,2	;volatile
  7755  1755                     l22:	
  7756                           ;adc.c: 84: while(GO_DONE==1);
  7757                           
  7758  1755  191F               	btfsc	31,2	;volatile
  7759  1756  2F55               	goto	l22
  7760                           
  7761                           ;adc.c: 87: return((ADRESH<<8) + ADRESL);
  7762  1757  081E               	movf	30,w	;volatile
  7763  1758  00F3               	movwf	?_ADC_GetAdcValue+1
  7764  1759  1683               	bsf	3,5	;RP0=1, select bank1
  7765  175A  1303               	bcf	3,6	;RP1=0, select bank1
  7766  175B  081E               	movf	30,w	;volatile
  7767  175C  00F2               	movwf	?_ADC_GetAdcValue
  7768  175D  0008               	return
  7769  175E                     __end_of_ADC_GetAdcValue:	
  7770                           
  7771                           	psect	text41
  7772  1662                     __ptext41:	
  7773 ;; *************** function _DELAY_us *****************
  7774 ;; Defined at:
  7775 ;;		line 56 in file "../00-libfiles/delay.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;  us_count        2    0[COMMON] unsigned int 
  7778 ;; Auto vars:     Size  Location     Type
  7779 ;;		None
  7780 ;; Return value:  Size  Location     Type
  7781 ;;                  1    wreg      void 
  7782 ;; Registers used:
  7783 ;;		wreg, status,2, status,0
  7784 ;; Tracked objects:
  7785 ;;		On entry : 0/0
  7786 ;;		On exit  : 0/0
  7787 ;;		Unchanged: 0/0
  7788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7789 ;;      Params:         2       0       0       0       0
  7790 ;;      Locals:         0       0       0       0       0
  7791 ;;      Temps:          0       0       0       0       0
  7792 ;;      Totals:         2       0       0       0       0
  7793 ;;Total ram usage:        2 bytes
  7794 ;; Hardware stack levels used:    1
  7795 ;; This function calls:
  7796 ;;		Nothing
  7797 ;; This function is called by:
  7798 ;;		_ADC_GetAdcValue
  7799 ;;		_DELAY_ms
  7800 ;;		_EEPROM_WriteByte
  7801 ;;		_EEPROM_ReadByte
  7802 ;;		_lcd_BusyCheck
  7803 ;;		_lcd_Reset
  7804 ;;		_lcd_SendCmdSignals
  7805 ;;		_lcd_SendDataSignals
  7806 ;; This function uses a non-reentrant model
  7807 ;;
  7808                           
  7809                           
  7810                           ;psect for function _DELAY_us
  7811  1662                     _DELAY_us:	
  7812  1662                     l2207:	
  7813                           ;delay.c: 58: while (us_count != 0)
  7814                           
  7815                           ;incstack = 0
  7816                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  7817                           
  7818  1662  0870               	movf	DELAY_us@us_count,w
  7819  1663  0471               	iorwf	DELAY_us@us_count+1,w
  7820  1664  1903               	btfsc	3,2
  7821  1665  0008               	return
  7822                           
  7823                           ;delay.c: 59: {
  7824                           ;delay.c: 60: us_count--;
  7825  1666  3001               	movlw	1
  7826  1667  02F0               	subwf	DELAY_us@us_count,f
  7827  1668  3000               	movlw	0
  7828  1669  1C03               	skipc
  7829  166A  03F1               	decf	DELAY_us@us_count+1,f
  7830  166B  02F1               	subwf	DELAY_us@us_count+1,f
  7831  166C  2E62               	goto	l2207
  7832  166D                     __end_of_DELAY_us:	
  7833                           
  7834                           	psect	text42
  7835  1640                     __ptext42:	
  7836 ;; *************** function _UART_RxChar *****************
  7837 ;; Defined at:
  7838 ;;		line 123 in file "../00-libfiles/uart.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;		None
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;		None
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  1    wreg      unsigned char 
  7845 ;; Registers used:
  7846 ;;		wreg
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7852 ;;      Params:         0       0       0       0       0
  7853 ;;      Locals:         0       0       0       0       0
  7854 ;;      Temps:          0       0       0       0       0
  7855 ;;      Totals:         0       0       0       0       0
  7856 ;;Total ram usage:        0 bytes
  7857 ;; Hardware stack levels used:    1
  7858 ;; This function calls:
  7859 ;;		Nothing
  7860 ;; This function is called by:
  7861 ;;		_main
  7862 ;;		_UART_RxString
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866                           
  7867                           ;psect for function _UART_RxChar
  7868  1640                     _UART_RxChar:	
  7869  1640                     l389:	
  7870                           ;uart.c: 125: while(RCIF==0);
  7871                           
  7872                           ;incstack = 0
  7873                           ; Regs used in _UART_RxChar: [wreg]
  7874                           
  7875  1640  1283               	bcf	3,5	;RP0=0, select bank0
  7876  1641  1303               	bcf	3,6	;RP1=0, select bank0
  7877  1642  1E8C               	btfss	12,5	;volatile
  7878  1643  2E40               	goto	l389
  7879                           
  7880                           ;uart.c: 126: RCIF=0;
  7881  1644  128C               	bcf	12,5	;volatile
  7882                           
  7883                           ;uart.c: 127: return(RCREG);
  7884  1645  081A               	movf	26,w	;volatile
  7885  1646  0008               	return
  7886  1647                     __end_of_UART_RxChar:	
  7887                           
  7888                           	psect	text43
  7889  169F                     __ptext43:	
  7890 ;; *************** function _UART_Init *****************
  7891 ;; Defined at:
  7892 ;;		line 66 in file "../00-libfiles/uart.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;  v_baudRate_u    4   10[BANK0 ] unsigned long 
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;		None
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  1    wreg      void 
  7899 ;; Registers used:
  7900 ;;		wreg, status,2, status,0, pclath, cstack
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7906 ;;      Params:         0       4       0       0       0
  7907 ;;      Locals:         0       0       0       0       0
  7908 ;;      Temps:          0       0       0       0       0
  7909 ;;      Totals:         0       4       0       0       0
  7910 ;;Total ram usage:        4 bytes
  7911 ;; Hardware stack levels used:    1
  7912 ;; Hardware stack levels required when called:    2
  7913 ;; This function calls:
  7914 ;;		_UART_SetBaudRate
  7915 ;; This function is called by:
  7916 ;;		_main
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           
  7921                           ;psect for function _UART_Init
  7922  169F                     _UART_Init:	
  7923                           
  7924                           ;uart.c: 68: TRISC=0x80;
  7925                           
  7926                           ;incstack = 0
  7927                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  7928  169F  3080               	movlw	128
  7929  16A0  1683               	bsf	3,5	;RP0=1, select bank1
  7930  16A1  1303               	bcf	3,6	;RP1=0, select bank1
  7931  16A2  0087               	movwf	7	;volatile
  7932                           
  7933                           ;uart.c: 69: TXSTA=0x20;
  7934  16A3  3020               	movlw	32
  7935  16A4  0098               	movwf	24	;volatile
  7936                           
  7937                           ;uart.c: 70: RCSTA=0x90;
  7938  16A5  3090               	movlw	144
  7939  16A6  1283               	bcf	3,5	;RP0=0, select bank0
  7940  16A7  1303               	bcf	3,6	;RP1=0, select bank0
  7941  16A8  0098               	movwf	24	;volatile
  7942                           
  7943                           ;uart.c: 71: UART_SetBaudRate(v_baudRate_u32);
  7944  16A9  082D               	movf	UART_Init@v_baudRate_u32+3,w
  7945  16AA  00A3               	movwf	UART_SetBaudRate@v_baudRate_u32+3
  7946  16AB  082C               	movf	UART_Init@v_baudRate_u32+2,w
  7947  16AC  00A2               	movwf	UART_SetBaudRate@v_baudRate_u32+2
  7948  16AD  082B               	movf	UART_Init@v_baudRate_u32+1,w
  7949  16AE  00A1               	movwf	UART_SetBaudRate@v_baudRate_u32+1
  7950  16AF  082A               	movf	UART_Init@v_baudRate_u32,w
  7951  16B0  00A0               	movwf	UART_SetBaudRate@v_baudRate_u32
  7952  16B1  120A  158A  23E6   	fcall	_UART_SetBaudRate
  7953  16B4  0008               	return
  7954  16B5                     __end_of_UART_Init:	
  7955                           
  7956                           	psect	text44
  7957  0BE6                     __ptext44:	
  7958 ;; *************** function _UART_SetBaudRate *****************
  7959 ;; Defined at:
  7960 ;;		line 91 in file "../00-libfiles/uart.c"
  7961 ;; Parameters:    Size  Location     Type
  7962 ;;  v_baudRate_u    4    0[BANK0 ] unsigned long 
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;  RegValue        1    9[BANK0 ] unsigned char 
  7965 ;; Return value:  Size  Location     Type
  7966 ;;                  1    wreg      void 
  7967 ;; Registers used:
  7968 ;;		wreg, status,2, status,0, pclath, cstack
  7969 ;; Tracked objects:
  7970 ;;		On entry : 0/0
  7971 ;;		On exit  : 0/0
  7972 ;;		Unchanged: 0/0
  7973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7974 ;;      Params:         0       4       0       0       0
  7975 ;;      Locals:         0       1       0       0       0
  7976 ;;      Temps:          0       5       0       0       0
  7977 ;;      Totals:         0      10       0       0       0
  7978 ;;Total ram usage:       10 bytes
  7979 ;; Hardware stack levels used:    1
  7980 ;; Hardware stack levels required when called:    1
  7981 ;; This function calls:
  7982 ;;		___lldiv
  7983 ;; This function is called by:
  7984 ;;		_UART_Init
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988                           
  7989                           ;psect for function _UART_SetBaudRate
  7990  0BE6                     _UART_SetBaudRate:	
  7991                           
  7992                           ;uart.c: 93: uint8_t RegValue;
  7993                           ;uart.c: 95: if((v_baudRate_u32 >= 2400) && (v_baudRate_u32<=115200UL))
  7994                           
  7995                           ;incstack = 0
  7996                           ; Regs used in _UART_SetBaudRate: [wreg+status,2+status,0+pclath+cstack]
  7997  0BE6  1283               	bcf	3,5	;RP0=0, select bank0
  7998  0BE7  1303               	bcf	3,6	;RP1=0, select bank0
  7999  0BE8  0823               	movf	UART_SetBaudRate@v_baudRate_u32+3,w
  8000  0BE9  1D03               	btfss	3,2
  8001  0BEA  2BF8               	goto	l2911
  8002  0BEB  0822               	movf	UART_SetBaudRate@v_baudRate_u32+2,w
  8003  0BEC  1D03               	btfss	3,2
  8004  0BED  2BF8               	goto	l2911
  8005  0BEE  3009               	movlw	9
  8006  0BEF  0221               	subwf	UART_SetBaudRate@v_baudRate_u32+1,w
  8007  0BF0  1D03               	skipz
  8008  0BF1  2BF6               	goto	u4203
  8009  0BF2  3060               	movlw	96
  8010  0BF3  0220               	subwf	UART_SetBaudRate@v_baudRate_u32,w
  8011  0BF4  1D03               	skipz
  8012  0BF5  2BF6               	goto	u4203
  8013  0BF6                     u4203:	
  8014  0BF6  1C03               	btfss	3,0
  8015  0BF7  2C36               	goto	l2915
  8016  0BF8                     l2911:	
  8017  0BF8  0823               	movf	UART_SetBaudRate@v_baudRate_u32+3,w
  8018  0BF9  1D03               	btfss	3,2
  8019  0BFA  2C36               	goto	l2915
  8020  0BFB  3001               	movlw	1
  8021  0BFC  0222               	subwf	UART_SetBaudRate@v_baudRate_u32+2,w
  8022  0BFD  1D03               	skipz
  8023  0BFE  2C07               	goto	u4213
  8024  0BFF  30C2               	movlw	194
  8025  0C00  0221               	subwf	UART_SetBaudRate@v_baudRate_u32+1,w
  8026  0C01  1D03               	skipz
  8027  0C02  2C07               	goto	u4213
  8028  0C03  3001               	movlw	1
  8029  0C04  0220               	subwf	UART_SetBaudRate@v_baudRate_u32,w
  8030  0C05  1D03               	skipz
  8031  0C06  2C07               	goto	u4213
  8032  0C07                     u4213:	
  8033  0C07  1803               	btfsc	3,0
  8034  0C08  2C36               	goto	l2915
  8035                           
  8036                           ;uart.c: 96: {
  8037                           ;uart.c: 99: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)v_baudRate_u32))
      +                           - 1);
  8038  0C09  0820               	movf	UART_SetBaudRate@v_baudRate_u32,w
  8039  0C0A  00A4               	movwf	??_UART_SetBaudRate
  8040  0C0B  0821               	movf	UART_SetBaudRate@v_baudRate_u32+1,w
  8041  0C0C  00A5               	movwf	??_UART_SetBaudRate+1
  8042  0C0D  0822               	movf	UART_SetBaudRate@v_baudRate_u32+2,w
  8043  0C0E  00A6               	movwf	??_UART_SetBaudRate+2
  8044  0C0F  0823               	movf	UART_SetBaudRate@v_baudRate_u32+3,w
  8045  0C10  00A7               	movwf	??_UART_SetBaudRate+3
  8046  0C11  3006               	movlw	6
  8047  0C12                     u4225:	
  8048  0C12  1003               	clrc
  8049  0C13  0DA4               	rlf	??_UART_SetBaudRate,f
  8050  0C14  0DA5               	rlf	??_UART_SetBaudRate+1,f
  8051  0C15  0DA6               	rlf	??_UART_SetBaudRate+2,f
  8052  0C16  0DA7               	rlf	??_UART_SetBaudRate+3,f
  8053  0C17  3EFF               	addlw	-1
  8054  0C18  1D03               	skipz
  8055  0C19  2C12               	goto	u4225
  8056  0C1A  0827               	movf	??_UART_SetBaudRate+3,w
  8057  0C1B  00F3               	movwf	___lldiv@divisor+3
  8058  0C1C  0826               	movf	??_UART_SetBaudRate+2,w
  8059  0C1D  00F2               	movwf	___lldiv@divisor+2
  8060  0C1E  0825               	movf	??_UART_SetBaudRate+1,w
  8061  0C1F  00F1               	movwf	___lldiv@divisor+1
  8062  0C20  0824               	movf	??_UART_SetBaudRate,w
  8063  0C21  00F0               	movwf	___lldiv@divisor
  8064  0C22  3001               	movlw	1
  8065  0C23  00F7               	movwf	___lldiv@dividend+3
  8066  0C24  3031               	movlw	49
  8067  0C25  00F6               	movwf	___lldiv@dividend+2
  8068  0C26  302D               	movlw	45
  8069  0C27  00F5               	movwf	___lldiv@dividend+1
  8070  0C28  3000               	movlw	0
  8071  0C29  00F4               	movwf	___lldiv@dividend
  8072  0C2A  120A  158A  243F  120A  158A  	fcall	___lldiv
  8073  0C2F  0870               	movf	?___lldiv,w
  8074  0C30  3EFF               	addlw	255
  8075  0C31  1283               	bcf	3,5	;RP0=0, select bank0
  8076  0C32  1303               	bcf	3,6	;RP1=0, select bank0
  8077  0C33  00A8               	movwf	??_UART_SetBaudRate+4
  8078  0C34  0828               	movf	??_UART_SetBaudRate+4,w
  8079  0C35  2C39               	goto	L9
  8080  0C36                     l2915:	
  8081                           ;uart.c: 100: }
  8082                           
  8083                           
  8084                           ;uart.c: 101: else
  8085                           ;uart.c: 102: {
  8086                           ;uart.c: 104: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)9600)) - 1);
  8087  0C36  301F               	movlw	31
  8088  0C37  00A4               	movwf	??_UART_SetBaudRate
  8089  0C38  0824               	movf	??_UART_SetBaudRate,w
  8090  0C39                     L9:	
  8091  0C39  00A9               	movwf	UART_SetBaudRate@RegValue
  8092                           
  8093                           ;uart.c: 105: }
  8094                           ;uart.c: 107: SPBRG = RegValue;
  8095  0C3A  0829               	movf	UART_SetBaudRate@RegValue,w
  8096  0C3B  1683               	bsf	3,5	;RP0=1, select bank1
  8097  0C3C  1303               	bcf	3,6	;RP1=0, select bank1
  8098  0C3D  0099               	movwf	25	;volatile
  8099  0C3E  0008               	return
  8100  0C3F                     __end_of_UART_SetBaudRate:	
  8101                           
  8102                           	psect	text45
  8103  0C3F                     __ptext45:	
  8104 ;; *************** function ___lldiv *****************
  8105 ;; Defined at:
  8106 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;  divisor         4    0[COMMON] unsigned long 
  8109 ;;  dividend        4    4[COMMON] unsigned long 
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;  quotient        4    9[COMMON] unsigned long 
  8112 ;;  counter         1   13[COMMON] unsigned char 
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  4    0[COMMON] unsigned long 
  8115 ;; Registers used:
  8116 ;;		wreg, status,2, status,0
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8122 ;;      Params:         8       0       0       0       0
  8123 ;;      Locals:         5       0       0       0       0
  8124 ;;      Temps:          1       0       0       0       0
  8125 ;;      Totals:        14       0       0       0       0
  8126 ;;Total ram usage:       14 bytes
  8127 ;; Hardware stack levels used:    1
  8128 ;; This function calls:
  8129 ;;		Nothing
  8130 ;; This function is called by:
  8131 ;;		_UART_SetBaudRate
  8132 ;;		_UART_TxNumber
  8133 ;;		_LCD_DisplayNumber
  8134 ;; This function uses a non-reentrant model
  8135 ;;
  8136                           
  8137                           
  8138                           ;psect for function ___lldiv
  8139  0C3F                     ___lldiv:	
  8140                           
  8141                           ;incstack = 0
  8142                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8143  0C3F  3000               	movlw	0
  8144  0C40  00FC               	movwf	___lldiv@quotient+3
  8145  0C41  3000               	movlw	0
  8146  0C42  00FB               	movwf	___lldiv@quotient+2
  8147  0C43  3000               	movlw	0
  8148  0C44  00FA               	movwf	___lldiv@quotient+1
  8149  0C45  3000               	movlw	0
  8150  0C46  00F9               	movwf	___lldiv@quotient
  8151  0C47  0873               	movf	___lldiv@divisor+3,w
  8152  0C48  0472               	iorwf	___lldiv@divisor+2,w
  8153  0C49  0471               	iorwf	___lldiv@divisor+1,w
  8154  0C4A  0470               	iorwf	___lldiv@divisor,w
  8155  0C4B  1903               	skipnz
  8156  0C4C  2C94               	goto	l2441
  8157  0C4D  01FD               	clrf	___lldiv@counter
  8158  0C4E  0AFD               	incf	___lldiv@counter,f
  8159  0C4F                     l2427:	
  8160  0C4F  1BF3               	btfsc	___lldiv@divisor+3,7
  8161  0C50  2C5F               	goto	l2429
  8162  0C51  3001               	movlw	1
  8163  0C52  00F8               	movwf	??___lldiv
  8164  0C53                     u3175:	
  8165  0C53  1003               	clrc
  8166  0C54  0DF0               	rlf	___lldiv@divisor,f
  8167  0C55  0DF1               	rlf	___lldiv@divisor+1,f
  8168  0C56  0DF2               	rlf	___lldiv@divisor+2,f
  8169  0C57  0DF3               	rlf	___lldiv@divisor+3,f
  8170  0C58  0BF8               	decfsz	??___lldiv,f
  8171  0C59  2C53               	goto	u3175
  8172  0C5A  3001               	movlw	1
  8173  0C5B  00F8               	movwf	??___lldiv
  8174  0C5C  0878               	movf	??___lldiv,w
  8175  0C5D  07FD               	addwf	___lldiv@counter,f
  8176  0C5E  2C4F               	goto	l2427
  8177  0C5F                     l2429:	
  8178  0C5F  3001               	movlw	1
  8179  0C60  00F8               	movwf	??___lldiv
  8180  0C61                     u3195:	
  8181  0C61  1003               	clrc
  8182  0C62  0DF9               	rlf	___lldiv@quotient,f
  8183  0C63  0DFA               	rlf	___lldiv@quotient+1,f
  8184  0C64  0DFB               	rlf	___lldiv@quotient+2,f
  8185  0C65  0DFC               	rlf	___lldiv@quotient+3,f
  8186  0C66  0BF8               	decfsz	??___lldiv,f
  8187  0C67  2C61               	goto	u3195
  8188  0C68  0873               	movf	___lldiv@divisor+3,w
  8189  0C69  0277               	subwf	___lldiv@dividend+3,w
  8190  0C6A  1D03               	skipz
  8191  0C6B  2C76               	goto	u3205
  8192  0C6C  0872               	movf	___lldiv@divisor+2,w
  8193  0C6D  0276               	subwf	___lldiv@dividend+2,w
  8194  0C6E  1D03               	skipz
  8195  0C6F  2C76               	goto	u3205
  8196  0C70  0871               	movf	___lldiv@divisor+1,w
  8197  0C71  0275               	subwf	___lldiv@dividend+1,w
  8198  0C72  1D03               	skipz
  8199  0C73  2C76               	goto	u3205
  8200  0C74  0870               	movf	___lldiv@divisor,w
  8201  0C75  0274               	subwf	___lldiv@dividend,w
  8202  0C76                     u3205:	
  8203  0C76  1C03               	skipc
  8204  0C77  2C87               	goto	l2437
  8205  0C78  0870               	movf	___lldiv@divisor,w
  8206  0C79  02F4               	subwf	___lldiv@dividend,f
  8207  0C7A  0871               	movf	___lldiv@divisor+1,w
  8208  0C7B  1C03               	skipc
  8209  0C7C  0F71               	incfsz	___lldiv@divisor+1,w
  8210  0C7D  02F5               	subwf	___lldiv@dividend+1,f
  8211  0C7E  0872               	movf	___lldiv@divisor+2,w
  8212  0C7F  1C03               	skipc
  8213  0C80  0F72               	incfsz	___lldiv@divisor+2,w
  8214  0C81  02F6               	subwf	___lldiv@dividend+2,f
  8215  0C82  0873               	movf	___lldiv@divisor+3,w
  8216  0C83  1C03               	skipc
  8217  0C84  0F73               	incfsz	___lldiv@divisor+3,w
  8218  0C85  02F7               	subwf	___lldiv@dividend+3,f
  8219  0C86  1479               	bsf	___lldiv@quotient,0
  8220  0C87                     l2437:	
  8221  0C87  3001               	movlw	1
  8222  0C88                     u3215:	
  8223  0C88  1003               	clrc
  8224  0C89  0CF3               	rrf	___lldiv@divisor+3,f
  8225  0C8A  0CF2               	rrf	___lldiv@divisor+2,f
  8226  0C8B  0CF1               	rrf	___lldiv@divisor+1,f
  8227  0C8C  0CF0               	rrf	___lldiv@divisor,f
  8228  0C8D  3EFF               	addlw	-1
  8229  0C8E  1D03               	skipz
  8230  0C8F  2C88               	goto	u3215
  8231  0C90  3001               	movlw	1
  8232  0C91  02FD               	subwf	___lldiv@counter,f
  8233  0C92  1D03               	btfss	3,2
  8234  0C93  2C5F               	goto	l2429
  8235  0C94                     l2441:	
  8236  0C94  087C               	movf	___lldiv@quotient+3,w
  8237  0C95  00F3               	movwf	?___lldiv+3
  8238  0C96  087B               	movf	___lldiv@quotient+2,w
  8239  0C97  00F2               	movwf	?___lldiv+2
  8240  0C98  087A               	movf	___lldiv@quotient+1,w
  8241  0C99  00F1               	movwf	?___lldiv+1
  8242  0C9A  0879               	movf	___lldiv@quotient,w
  8243  0C9B  00F0               	movwf	?___lldiv
  8244  0C9C  0008               	return
  8245  0C9D                     __end_of___lldiv:	
  8246  007E                     btemp	set	126	;btemp
  8247  007E                     wtemp	set	126
  8248  007E                     wtemp0	set	126
  8249  0080                     wtemp1	set	128
  8250  0082                     wtemp2	set	130
  8251  0084                     wtemp3	set	132
  8252  0086                     wtemp4	set	134
  8253  0088                     wtemp5	set	136
  8254  007F                     wtemp6	set	127
  8255  007E                     ttemp	set	126
  8256  007E                     ttemp0	set	126
  8257  0081                     ttemp1	set	129
  8258  0084                     ttemp2	set	132
  8259  0087                     ttemp3	set	135
  8260  007F                     ttemp4	set	127
  8261  007E                     ltemp	set	126
  8262  007E                     ltemp0	set	126
  8263  0082                     ltemp1	set	130
  8264  0086                     ltemp2	set	134
  8265  0080                     ltemp3	set	128


Data Sizes:
    Strings     335
    Constant    0
    Data        4
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80      0      18
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Printf@str	PTR unsigned char  size(1) Largest target is 0

    UART_Printf@argList	PTR const unsigned char  size(2) Largest target is 131
		 -> STR_7(CODE[16]), STR_6(CODE[23]), STR_5(CODE[69]), STR_4(CODE[18]), 
		 -> STR_1(CODE[131]), 

    UART_Printf@ptr	PTR const unsigned char  size(2) Largest target is 131
		 -> STR_7(CODE[16]), STR_6(CODE[23]), STR_5(CODE[69]), STR_4(CODE[18]), 
		 -> STR_1(CODE[131]), 

    UART_Printf@argp	PTR void [1] size(1) Largest target is 1
		 -> ?_UART_Printf(BANK0[1]), 

    UART_TxString@ptr_string	PTR const unsigned char  size(2) Largest target is 54
		 -> STR_3(CODE[54]), 

    LCD_DisplayString@ptr_stringPointer_u8	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_2(CODE[24]), 


Critical Paths under _main in COMMON

    _switch_Test->_GPIO_PinWrite
    _led_Test->_DELAY_ms
    _LCD_SetUp->_GPIO_PinDirection
    _LCD_Init->_LCD_CmdWrite
    _lcd_Reset->_lcd_SendHigherNibble
    _LCD_Clear->_LCD_CmdWrite
    _LCD_GoToLine->_LCD_CmdWrite
    _LCD_DisplayChar->_lcd_DataWrite
    _lcd_DataWrite->_lcd_BusyCheck
    _lcd_DataWrite->_lcd_SendHigherNibble
    _lcd_DataWrite->_lcd_SendLowerNibble
    _lcd_SendDataSignals->_GPIO_PinWrite
    _LCD_GoToNextLine->_LCD_CmdWrite
    _LCD_CmdWrite->_lcd_BusyCheck
    _LCD_CmdWrite->_lcd_SendHigherNibble
    _LCD_CmdWrite->_lcd_SendLowerNibble
    _lcd_SendLowerNibble->_GPIO_PinWrite
    _lcd_SendHigherNibble->_GPIO_PinWrite
    _lcd_SendCmdSignals->_GPIO_PinWrite
    _lcd_BusyCheck->_GPIO_PinWrite
    _GPIO_PinWrite->_GPIO_PinRead
    _DELAY_ms->_DELAY_us
    _EEPROM_WriteByte->_DELAY_us
    _EEPROM_ReadByte->_DELAY_us
    _UART_TxString->_UART_TxChar
    _UART_TxFloatNumber->___ftmul
    _UART_TxFloatNumber->___lltoft
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftneg->___lltoft
    ___ftmul->___ftpack
    ___ftadd->___lltoft
    _UART_TxNumber->___lldiv
    ___bmul->___lldiv
    _ADC_GetAdcValue->_DELAY_us
    _UART_SetBaudRate->___lldiv

Critical Paths under _main in BANK0

    _main->_eeprom_Test
    _lcd_Test->_LCD_SetUp
    _LCD_Clear->_LCD_GoToLine
    _LCD_GoToLine->_LCD_CmdWrite
    _LCD_DisplayString->_LCD_DisplayChar
    _LCD_DisplayChar->_LCD_GoToNextLine
    _LCD_GoToNextLine->_LCD_CmdWrite
    _eeprom_Test->_UART_Printf
    _adc_Test->_UART_Printf
    _UART_Printf->_UART_TxFloatNumber
    _UART_TxFloatNumber->_UART_TxNumber
    ___fttol->___ftmul
    ___ftadd->___ftneg
    _UART_TxNumber->___bmul
    _UART_Init->_UART_SetBaudRate

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  118311
                                             76 BANK0      2     2      0
                          _UART_Init
                        _UART_Printf
                        _UART_RxChar
                           _adc_Test
                        _eeprom_Test
                           _lcd_Test
                           _led_Test
                        _switch_Test
 ---------------------------------------------------------------------------------
 (1) _switch_Test                                          1     1      0    3348
                                             10 COMMON     1     1      0
                  _GPIO_PinDirection
                       _GPIO_PinRead
                      _GPIO_PinWrite
                      _UART_TxString
 ---------------------------------------------------------------------------------
 (1) _led_Test                                             4     4      0    1286
                                              4 COMMON     4     4      0
                           _DELAY_ms
 ---------------------------------------------------------------------------------
 (1) _lcd_Test                                            10    10      0   64926
                                             10 BANK0     10    10      0
                  _LCD_DisplayString
                           _LCD_Init
                          _LCD_SetUp
 ---------------------------------------------------------------------------------
 (2) _LCD_SetUp                                           12     2     10    2401
                                              5 COMMON     2     2      0
                                              0 BANK0     10     0     10
                  _GPIO_PinDirection
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     2      1   40302
                                              3 BANK0      3     2      1
                           _DELAY_ms
                          _LCD_Clear
                       _LCD_CmdWrite
                          _lcd_Reset
 ---------------------------------------------------------------------------------
 (3) _lcd_Reset                                            0     0      0    5958
                           _DELAY_ms
                           _DELAY_us
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            0     0      0   22072
                       _LCD_CmdWrite
                       _LCD_GoToLine
 ---------------------------------------------------------------------------------
 (4) _LCD_GoToLine                                         2     2      0   11069
                                              1 BANK0      2     2      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayString                                    2     0      2   22223
                                              4 BANK0      2     0      2
                    _LCD_DisplayChar
 ---------------------------------------------------------------------------------
 (3) _LCD_DisplayChar                                      2     2      0   22072
                                              2 BANK0      2     2      0
                   _LCD_GoToNextLine
                      _lcd_DataWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_DataWrite                                        3     3      0   11003
                                             12 COMMON     2     2      0
                                              0 BANK0      1     1      0
                      _lcd_BusyCheck
                _lcd_SendDataSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendDataSignals                                  0     0      0    2382
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _LCD_GoToNextLine                                     1     1      0   11003
                                              1 BANK0      1     1      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (3) _LCD_CmdWrite                                         3     3      0   11003
                                             12 COMMON     2     2      0
                                              0 BANK0      1     1      0
                      _lcd_BusyCheck
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (4) _lcd_SendLowerNibble                                  2     2      0    1758
                                             10 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_SendHigherNibble                                 2     2      0    1758
                                             10 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_SendCmdSignals                                   0     0      0    2382
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_BusyCheck                                        2     2      0    5016
                                             10 COMMON     2     2      0
                           _DELAY_ms
                           _DELAY_us
                  _GPIO_PinDirection
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinWrite                                        5     4      1    1670
                                              5 COMMON     5     4      1
                       _GPIO_PinRead (ARG)
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinRead                                         5     5      0     206
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinDirection                                    5     4      1    1299
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _DELAY_ms                                             2     0      2    1106
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (1) _eeprom_Test                                          6     6      0   17006
                                             70 BANK0      6     6      0
                    _EEPROM_ReadByte
                   _EEPROM_WriteByte
                        _UART_Printf
 ---------------------------------------------------------------------------------
 (2) _EEPROM_WriteByte                                     3     0      3     968
                                              2 COMMON     3     0      3
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (2) _EEPROM_ReadByte                                      2     0      2     840
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (1) _adc_Test                                             0     0      0   15773
                    _ADC_GetAdcValue
                           _ADC_Init
                        _UART_Printf
 ---------------------------------------------------------------------------------
 (2) _UART_Printf                                         27    23      4   15039
                                             43 BANK0     27    23      4
                    _ADC_GetAdcValue (ARG)
                        _UART_TxChar
                 _UART_TxFloatNumber
                      _UART_TxNumber
                      _UART_TxString
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _UART_TxString                                        2     0      2     173
                                              1 COMMON     2     0      2
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (3) _UART_TxFloatNumber                                   8     5      3   10406
                                             35 BANK0      8     5      3
                        _UART_TxChar
                      _UART_TxNumber
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             6     2      4    1843
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     464
                                             10 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     151
                                              0 BANK0      3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2206
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    2800
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (3) _UART_TxNumber                                       31    26      5    2732
                                              4 BANK0     31    26      5
                        _UART_TxChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     304
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetAdcValue                                      4     2      2     734
                                              2 COMMON     4     2      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (3) _DELAY_us                                             2     0      2     712
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART_RxChar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4     910
                                             10 BANK0      4     0      4
                   _UART_SetBaudRate
 ---------------------------------------------------------------------------------
 (2) _UART_SetBaudRate                                    10     6      4     835
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     692
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     _UART_SetBaudRate
       ___lldiv
   _UART_Printf
     _ADC_GetAdcValue (ARG)
       _DELAY_us
     _UART_TxChar (ARG)
     _UART_TxFloatNumber (ARG)
       _UART_TxChar
       _UART_TxNumber
         _UART_TxChar
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       ___ftadd
         ___ftneg (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
     _UART_TxNumber (ARG)
       _UART_TxChar
       ___bmul
         ___lldiv (ARG)
       ___lldiv
     _UART_TxString (ARG)
       _UART_TxChar
     ___bmul (ARG)
       ___lldiv (ARG)
   _UART_RxChar
   _adc_Test
     _ADC_GetAdcValue
       _DELAY_us
     _ADC_Init
     _UART_Printf
       _ADC_GetAdcValue (ARG)
         _DELAY_us
       _UART_TxChar (ARG)
       _UART_TxFloatNumber (ARG)
         _UART_TxChar
         _UART_TxNumber
           _UART_TxChar
           ___bmul
             ___lldiv (ARG)
           ___lldiv
         ___ftadd
           ___ftneg (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
         ___ftneg
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
         ___lltoft
           ___ftpack
       _UART_TxNumber (ARG)
         _UART_TxChar
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       _UART_TxString (ARG)
         _UART_TxChar
       ___bmul (ARG)
         ___lldiv (ARG)
   _eeprom_Test
     _EEPROM_ReadByte
       _DELAY_us
     _EEPROM_WriteByte
       _DELAY_us
     _UART_Printf
       _ADC_GetAdcValue (ARG)
         _DELAY_us
       _UART_TxChar (ARG)
       _UART_TxFloatNumber (ARG)
         _UART_TxChar
         _UART_TxNumber
           _UART_TxChar
           ___bmul
             ___lldiv (ARG)
           ___lldiv
         ___ftadd
           ___ftneg (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
         ___ftneg
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
         ___lltoft
           ___ftpack
       _UART_TxNumber (ARG)
         _UART_TxChar
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       _UART_TxString (ARG)
         _UART_TxChar
       ___bmul (ARG)
         ___lldiv (ARG)
   _lcd_Test
     _LCD_DisplayString
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
                 _GPIO_PinRead (ARG)
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
                 _GPIO_PinRead (ARG)
             _lcd_SendHigherNibble
               _GPIO_PinWrite
                 _GPIO_PinRead (ARG)
             _lcd_SendLowerNibble
               _GPIO_PinWrite
                 _GPIO_PinRead (ARG)
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
               _GPIO_PinRead (ARG)
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
               _GPIO_PinRead (ARG)
           _lcd_SendHigherNibble
             _GPIO_PinWrite
               _GPIO_PinRead (ARG)
           _lcd_SendLowerNibble
             _GPIO_PinWrite
               _GPIO_PinRead (ARG)
     _LCD_Init
       _DELAY_ms
         _DELAY_us
       _LCD_Clear
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
               _GPIO_PinRead (ARG)
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
               _GPIO_PinRead (ARG)
           _lcd_SendHigherNibble
             _GPIO_PinWrite
               _GPIO_PinRead (ARG)
           _lcd_SendLowerNibble
             _GPIO_PinWrite
               _GPIO_PinRead (ARG)
         _LCD_GoToLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
                 _GPIO_PinRead (ARG)
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
                 _GPIO_PinRead (ARG)
             _lcd_SendHigherNibble
               _GPIO_PinWrite
                 _GPIO_PinRead (ARG)
             _lcd_SendLowerNibble
               _GPIO_PinWrite
                 _GPIO_PinRead (ARG)
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
             _GPIO_PinRead (ARG)
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
             _GPIO_PinRead (ARG)
         _lcd_SendHigherNibble
           _GPIO_PinWrite
             _GPIO_PinRead (ARG)
         _lcd_SendLowerNibble
           _GPIO_PinWrite
             _GPIO_PinRead (ARG)
       _lcd_Reset
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
             _GPIO_PinRead (ARG)
         _lcd_SendHigherNibble
           _GPIO_PinWrite
             _GPIO_PinRead (ARG)
     _LCD_SetUp
       _GPIO_PinDirection
   _led_Test
     _DELAY_ms
       _DELAY_us
   _switch_Test
     _GPIO_PinDirection
     _GPIO_PinRead
     _GPIO_PinWrite
       _GPIO_PinRead (ARG)
     _UART_TxString
       _UART_TxChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      12       7       22.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      70      12        0.0%
ABS                  0      0      70       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Wed Mar 16 14:23:01 2016

                                      pc 0002                           ___bmul@product 0022  
                            __CFG_CP$OFF 0000                            ?_LCD_CmdWrite 0070  
                                     l22 1755                                       l60 16B5  
                                     l54 171B                                       _GO 00FA  
                                     _RD 0C60                                       _WR 0C61  
                                     fsr 0004                            ?_LCD_GoToLine 0070  
                           ___ftadd@exp1 002F                             ___ftadd@exp2 002E  
                            __CFG_LVP$ON 0000                             ___ftadd@sign 002D  
                                    l123 02BD                                      l153 0396  
                                    l217 0B86                                      l337 0E67  
                                    l395 1650                                      l389 1640  
                                    l566 0AEB                                      l841 0DB1  
                                    l842 0DB9                                      l834 0D9C  
                                    l587 0D65                                      l925 0F47  
                                    l865 0531                             __CFG_CPD$OFF 0000  
        EEPROM_WriteByte@v_eepromData_u8 0074                                      fsr0 0004  
                                    indf 0000                             __CFG_FOSC$HS 0000  
                __end_of_ADC_GetAdcValue 175E                  __end_of_LCD_DisplayChar 1783  
                                   l3001 0709                                     l3011 072F  
                                   l3021 075D                                     l2221 01F8  
                                   l2301 0DF4                                     l2207 1662  
                                   l2215 168B                                     l2231 022F  
                                   l2303 0E02                                     l2311 0E34  
                                   l2401 0D86                                     l3033 0791  
                                   l3009 071E                                     l3041 07CB  
                                   l2233 0240                                     l2225 020B  
                                   l2305 0E10                                     l2313 0E45  
                                   l3113 0A85                                     l3027 077A  
                                   l3019 074A                                     l3043 059C  
                                   l2243 0277                                     l2227 021C  
                                   l2307 0E1E                                     l3037 0793  
                                   l3133 0D16                                     l2245 0288  
                                   l2237 0253                                     l2253 02AC  
                                   l2511 045B                                     l2503 044F  
                                   l2407 0DA1                                     l3039 07C5  
                                   l3119 1703                                     l2239 0264  
                                   l2271 0319                                     l2263 02E4  
                                   l2335 0EC0                                     l2441 0C94  
                                   l2513 03F0                                     l2409 0DAB  
                                   l2249 029B                                     l2281 0350  
                                   l2265 02F5                                     l2361 09D3  
                                   l3065 0CA4                                     l2427 0C4F  
                                   l2515 0460                                     l2603 005B  
                                   l2283 0361                                     l2275 032C  
                                   l2259 02D1                                     l2291 0385  
                                   l2339 0ECB                                     l2437 0C87  
                                   l2429 0C5F                                     l2381 1682  
                                   l2525 0485                                     l2533 04B2  
                                   l2621 00B0                                     l2701 17AC  
                                   l2277 033D                                     l2269 0308  
                                   l2357 09B7                                     l3341 0BC8  
                                   l2519 0470                                     l2543 04C8  
                                   l2703 17BE                                     l2287 0374  
                                   l3351 0BC3                                     l3343 0BAB  
                                   l2377 167C                                     l2393 0D6E  
                                   l2561 04F7                                     l2537 04B9  
                                   l2633 00D8                                     l2625 00C0  
                                   l2609 0071                                     l2473 0A12  
                                   l3345 0BB1                                     l2483 03A0  
                                   l2491 03E2                                     l2563 0503  
                                   l2555 04E2                                     l2299 0DE6  
                                   l2731 176D                                     l2811 0178  
                                   l3347 0BB7                                     l2397 0D75  
                                   l2573 0521                                     l2565 0508  
                                   l2637 00E8                                     l2661 0EED  
                                   l2469 09F6                                     l2733 1772  
                                   l2813 017F                                     l3349 0BBD  
                                   l2911 0BF8                                     l2495 03ED  
                                   l2399 0D81                                     l2583 0555  
                                   l2575 052D                                     l2567 050C  
                                   l2823 01A9                                     l2489 03DE  
                                   l2593 0578                                     l2681 0F2F  
                                   l2745 094F                                     l2841 0B64  
                                   l2915 0C36                                     l2579 0543  
                                   l2693 0F58                                     l2941 05D3  
                                   l2687 0F3C                                     l2679 0F1F  
                                   l2847 0B75                                     l2689 0F4A  
                                   l2953 0610                                     l2945 05FF  
                                   l2857 1783                                     l2963 062B  
                                   l2947 0604                                     l2965 0641  
                                   l2983 069C                                     l2975 0668  
                                   l2977 067D                                     l2995 06E2  
                                   l2989 06C3                                     _ADON 00F8  
                                   STR_1 0800                                     STR_2 08FE  
                                   STR_3 08C8                                     STR_4 092D  
                                   STR_5 0883                                     STR_6 0916  
                                   STR_7 093F                                     u3005 09C9  
                                   u3105 0DA4                                     u3300 03D0  
                                   u2404 0249                                     u3205 0C76  
                                   u2405 0247                                     u2325 01E9  
                                   u2414 0259                                     u3215 0C88  
                                   u2415 0257                                     u2344 0201  
                                   u2504 02DA                                     u3145 0DC0  
                                   u3065 0D7A                                     u2345 01FF  
                                   u2505 02D8                                     u2434 026D  
                                   u2354 0211                                     u2514 02EA  
                                   u4203 0BF6                                     u2435 026B  
                                   u2355 020F                                     u2515 02E8  
                                   u2444 027D                                     u2604 0356  
                                   u4213 0C07                                     u3085 0D95  
                                   u2445 027B                                     u2605 0354  
                                   u2374 0225                                     u2534 02FE  
                                   u3175 0C53                                     u2375 0223  
                                   u2535 02FC                                     u2464 0291  
                                   u2384 0235                                     u2624 036A  
                                   u2544 030E                                     u4225 0C12  
                                   u2465 028F                                     u2385 0233  
                                   u2625 0368                                     u2545 030C  
                                   u3265 0A08                                     u3290 03CF  
                                   u2474 02A1                                     u2714 0E08  
                                   u2634 037A                                     u3195 0C61  
                                   u3515 04F8                                     u2475 029F  
                                   u2715 0E06                                     u2635 0378  
                                   u3284 03B4                                     u2564 0322  
                                   u2900 0039                                     u3285 03B1  
                                   u2645 0DD7                                     u2565 0320  
                                   u2485 02C2                                     u2654 0DEC  
                                   u2574 0332                                     u2910 0A23  
                                   u2830 0008                                     u2655 0DEA  
                                   u2575 0330                                     u2744 0E16  
                                   u2920 0A24                                     u2840 0009  
                                   u3545 050D                                     u3705 00C9  
                                   u2745 0E14                                     u4345 0CD9  
                                   u2594 0346                                     u2930 0A33  
                                   u2850 0018                                     u2595 0344  
                                   u2780 0E2F                                     u2684 0DFA  
                                   u2940 0A34                                     u2860 0019  
                                   u3485 04E3                                     u2685 0DF8  
                                   u2790 0E30                                     u2774 0E24  
                                   u2950 0A43                                     u2870 0028  
                                   u3575 0522                                     u3655 007D  
                                   u2775 0E22                                     u2960 0A44  
                                   u2880 0029                                     u3745 00E9  
                                   u3665 008F                                     u3825 0F20  
                                   u2970 0A53                                     u2890 0038  
                                   u3755 00F1                                     u2980 0A54  
                                   _RCIF 0065                                     u3695 00C1  
                                   u3855 0F3E                                     u3945 173E  
                                   u3795 0EF4                                     u3885 17B1  
                                   _WREN 0C62                                     _TXIF 0064  
                           __CFG_WRT$OFF 0000                       _UART_TxFloatNumber 0F61  
                                   _main 0B90                             ___ftpack@arg 0070  
                     __size_of_LCD_Clear 000B                             ___ftpack@exp 0073  
                                   btemp 007E                         __end_of_ADC_Init 164F  
                                   ltemp 007E                       __size_of_LCD_SetUp 00D1  
                                   start 0000                                     ttemp 007E  
                                   wtemp 007E                         __end_of_DELAY_ms 169F  
                       __end_of_DELAY_us 166D                 __size_of_EEPROM_ReadByte 0018  
                    ?_UART_TxFloatNumber 0043                        ___bmul@multiplier 0023  
                           ___ftmul@cntr 0028                            ?_GPIO_PinRead 0070  
                           ___ftmul@sign 0029                              _switch_Test 0A5E  
    UART_TxFloatNumber@v_floatNumber_f32 0043                           ??_LCD_CmdWrite 007C  
                            LCD_SetUp@D0 0022                              LCD_SetUp@D1 0023  
                            LCD_SetUp@D2 0024                              LCD_SetUp@D3 0025  
                            LCD_SetUp@D4 0026                              LCD_SetUp@D5 0027  
                            LCD_SetUp@D6 0028                              LCD_SetUp@D7 0029  
                            LCD_SetUp@EN 0021                             ___fttol@exp1 0037  
                            LCD_SetUp@RS 0076                              LCD_SetUp@RW 0020  
                           ___fttol@lval 0033                           ??_LCD_GoToLine 0021  
                          _GPIO_PinWrite 02BE                         __end_of_LCD_Init 0B90  
                  eeprom_Test@write_char 006B                  LCD_CmdWrite@v_lcdCmd_u8 0020  
                                  ?_main 0070                                    _EEADR 010D  
                        __end_of___ftadd 0592                            __CFG_WDTE$OFF 0000  
                        __end_of___ftneg 1662                          __end_of___lldiv 0C9D  
                        __end_of___ftmul 0114                          __end_of___fttol 0F61  
                                  _RCREG 001A                                    _RCSTA 0018  
                                  _SPBRG 0099                                    _PORTA 0005  
                                  _PORTB 0006                                    _PORTC 0007  
                                  _PORTD 0008                                    _PORTE 0009  
                                  _TRISA 0085                                    _TRISB 0086  
                                  _TRISC 0087                                    _TRISD 0088  
                                  _TRISE 0089                                    _TXREG 0019  
                                  _TXSTA 0098                     ??_UART_TxFloatNumber 0046  
                           ___lltoft@exp 007D                       __size_of_UART_Init 0016  
  LCD_DisplayString@ptr_stringPointer_u8 0024                            ___ftpack@sign 0074  
                         __CFG_BOREN$OFF 0000                                    pclath 000A  
                                  ltemp0 007E                                    ltemp1 0082  
                                  ltemp2 0086                                    ltemp3 0080  
           __end_of_lcd_SendHigherNibble 0A5E                                    ttemp0 007E  
                                  ttemp1 0081                                    ttemp2 0084  
                                  ttemp3 0087                                    ttemp4 007F  
                                  status 0003                                    wtemp0 007E  
                                  wtemp1 0080                                    wtemp2 0082  
                                  wtemp3 0084                                    wtemp4 0086  
                                  wtemp5 0088                                    wtemp6 007F  
                         ??_GPIO_PinRead 0070                          __initialization 07D4  
             GPIO_PinWrite@enm_pinNumber 0079                             __end_of_main 0BE6  
                         ?_GPIO_PinWrite 0075                        _GPIO_PinDirection 01E5  
                                 ??_main 006C                            ___fttol@sign1 0032  
            __size_of_lcd_SendCmdSignals 002D                        __end_of_LCD_Clear 1678  
                     ?_GPIO_PinDirection 0070                        __end_of_LCD_SetUp 01E5  
                       ?_ADC_GetAdcValue 0072                                   _ADCON0 001F  
                                 _ADCON1 009F                         ?_LCD_DisplayChar 0070  
            LCD_DisplayChar@v_lcdData_u8 0023                                   _ADRESH 001E  
                                 _ADRESL 009E                                   _EEDATA 010C  
                                 _EECON2 018D                      ??_GPIO_PinDirection 0071  
                       __end_of_adc_Test 171B                         __end_of___ftpack 0DD2  
                       __end_of___lltoft 17D3                        ?_UART_SetBaudRate 0020  
                  lcd_BusyCheck@busyflag 007B                       ??_UART_SetBaudRate 0024  
                           ?_UART_RxChar 0070                           __CFG_PWRTE$OFF 0000  
                           ?_UART_TxChar 0070                     __size_of_eeprom_Test 006A  
                           ?_UART_Printf 004B                         __end_of_lcd_Test 0AEC  
                       __end_of_led_Test 0CFC                GPIO_PinRead@enm_pinNumber 0074  
                      __end_of_UART_Init 16B5                                   ___bmul 1678  
                              ??___ftadd 0029                                ??___ftneg 007E  
                              ??___lldiv 0078                                ??___ftmul 0020  
                              ??___fttol 002E                __end_of_GPIO_PinDirection 02BE  
                      ??_EEPROM_ReadByte 0074                          led_Test@pattern 0076  
         GPIO_PinDirection@enm_pinNumber 0074                 __end_of_EEPROM_WriteByte 173A  
                       DELAY_ms@ms_count 0072  UART_TxNumber@v_numOfDigitsToTransmit_u8 0028  
                  ___ftmul@f3_as_product 0025                                ?_ADC_Init 0070  
                      ?_LCD_GoToNextLine 0070                                ?_DELAY_ms 0072  
                              ?_DELAY_us 0070              __end_of_lcd_SendLowerNibble 0043  
                     ??_LCD_GoToNextLine 0021                     __end_of_LCD_CmdWrite 09DF  
                   __end_of_LCD_GoToLine 16FE              lcd_SendLowerNibble@dataByte 007B  
                __end_of__initialization 07FC                                ?_LCD_Init 0023  
                             ___ftadd@f1 0023                               ___ftadd@f2 0026  
                  __end_of_UART_TxNumber 0489                    __end_of_UART_TxString 0972  
              UART_Printf@v_floatNum_f32 0051                               ___ftneg@f1 0020  
                    ___bmul@multiplicand 0020                               ___ftmul@f1 0078  
                             ___ftmul@f2 007B                          ??_GPIO_PinWrite 0076  
                             ___fttol@f1 002A                           __pcstackCOMMON 0070  
                           __pidataBANK1 163C                               ___lltoft@c 0078  
                  __end_of_lcd_DataWrite 0A1E        UART_TxFloatNumber@v_decNumber_u32 0047  
                   _lcd_SendHigherNibble 0A1E                       __size_of_lcd_Reset 004F  
                             ??_ADC_Init 0070             __size_of_lcd_SendDataSignals 002E  
                             ??_DELAY_ms 0074                               ??_DELAY_us 0072  
                   __end_of_GPIO_PinRead 0E47           GPIO_PinWrite@var_portNumber_u8 0078  
                             __pbssBANK0 006E                               __pbssBANK1 00A0  
                  __end_of_lcd_BusyCheck 0ED3             lcd_SendHigherNibble@dataByte 007B  
           GPIO_PinWrite@var_pinValue_u8 0075                               ??_LCD_Init 0024  
                             __pmaintext 0B90                             ?_switch_Test 0070  
                                ?___bmul 0020      EEPROM_WriteByte@v_eepromAddress_u16 0072  
             __size_of_GPIO_PinDirection 00D9                                ?_adc_Test 0070  
                              ?___ftpack 0070                    ?_lcd_SendHigherNibble 0070  
                              ?___lltoft 0078                                  _GO_DONE 00FA  
                              ?_lcd_Test 0070                         DELAY_us@us_count 0070  
                              ?_led_Test 0070                               __stringtab 1000  
                      __end_of_lcd_Reset 0B3B                     __size_of_UART_RxChar 0007  
                   __size_of_UART_TxChar 0009                          __size_of___bmul 0013  
                   __size_of_UART_Printf 0242                LCD_Init@v_lcdNoOfLines_u8 0025  
                                ___ftadd 0489                                  ___ftneg 1658  
                                ___lldiv 0C3F                                  ___ftmul 0043  
                                ___fttol 0ED3       EEPROM_ReadByte@v_eepromAddress_u16 0072  
                             ??_adc_Test 007E                               ??___ftpack 0075  
                             ??___lltoft 007C                                  __ptext1 0A5E  
                                __ptext2 0C9D                                  __ptext3 0AA4  
                                __ptext4 0114                                  __ptext5 0B3B  
                                __ptext6 0AEC                                  __ptext7 166D  
                                __ptext8 16E5                                  __ptext9 1783  
                  __size_of_LCD_CmdWrite 003F                                _LCDConfig 00A0  
                  __size_of_LCD_GoToLine 0019              __size_of_UART_TxFloatNumber 009F  
                              _LCD_Clear 166D                           UART_Printf@ptr 0061  
                         UART_Printf@str 0054                               ??_lcd_Test 002A  
                              _LCD_SetUp 0114                               ??_led_Test 0074  
                   end_of_initialization 07FC                           UART_TxNumber@a 0035  
                         UART_TxNumber@i 0042             LCD_Init@v_MaxCharsPerLine_u8 0023  
                        _EEPROM_ReadByte 16B5                          ___lldiv@divisor 0070  
                        ___lldiv@counter 007D           UART_SetBaudRate@v_baudRate_u32 0020  
                           __pstringtext 0800                   ??_lcd_SendHigherNibble 007A  
             __end_of_lcd_SendCmdSignals 1800                             _LCD_CmdWrite 09A0  
                              _UART_Init 169F                __size_of_UART_SetBaudRate 0059  
                           _LCD_GoToLine 16E5         ADC_GetAdcValue@var_adcChannel_u8 0075  
                  __size_of_GPIO_PinRead 0075                        ?_EEPROM_WriteByte 0072  
                     ??_EEPROM_WriteByte 0075                               ?_LCD_Clear 0070  
                             ?_LCD_SetUp 0020                        __size_of_ADC_Init 0008  
                      __size_of_DELAY_ms 0014                        __size_of_DELAY_us 000B  
                          ??_eeprom_Test 0066                 __size_of_ADC_GetAdcValue 0024  
               __size_of_LCD_DisplayChar 0025                        __size_of_LCD_Init 0055  
                             main@option 006D                __size_of_LCD_GoToNextLine 0018  
                    _lcd_SendDataSignals 0972          UART_TxNumber@v_numericSystem_u8 0041  
                            ___ftmul@exp 0024       GPIO_PinDirection@var_portNumber_u8 0073  
                           _GPIO_PinRead 0DD2                           __end_of___bmul 168B  
                   __size_of_switch_Test 0046                               ?_UART_Init 002A  
               _ARR_LcdLineNumAddress_U8 00AE                      start_initialization 07D4  
                   ?_lcd_SendDataSignals 0070                   _v_LcdTrackCursorPos_U8 006E  
                __end_of_EEPROM_ReadByte 16CD            GPIO_PinRead@var_portNumber_u8 0072  
           __size_of_lcd_SendLowerNibble 0040          GPIO_PinDirection@var_pinDirn_u8 0070  
                               ??___bmul 0021                      __end_of_eeprom_Test 0D66  
                  __end_of_GPIO_PinWrite 0397                              __pdataBANK1 00AE  
                      _UART_TxNumber$370 003F                        __size_of_adc_Test 001D  
                      __size_of___ftpack 006C                    ??_lcd_SendDataSignals 007A  
                   _v_LcdTrackLineNum_U8 006F                   __size_of_UART_TxNumber 00F2  
                      __size_of___lltoft 002B                                ___latbits 0002  
                  lcd_DataWrite@dataByte 0020                   __size_of_UART_TxString 0023  
                          __pcstackBANK0 0020                              ??_LCD_Clear 007E  
                            ??_LCD_SetUp 0075                   __size_of_lcd_DataWrite 003F  
                      __size_of_lcd_Test 0048                        __size_of_led_Test 005F  
            LCD_GoToLine@v_lineNumber_u8 0022                                 ?___ftadd 0023  
                               ?___ftneg 0020                                 ?___lldiv 0070  
                      ??_ADC_GetAdcValue 0074                                 ?___ftmul 0078  
                               ?___fttol 002A                                _lcd_Reset 0AEC  
                      ??_LCD_DisplayChar 0022                              ??_UART_Init 007E  
                       _UART_SetBaudRate 0BE6                                __pstrings 1000  
                 __size_of_lcd_BusyCheck 008C                                 _ADC_Init 1647  
                      _LCD_DisplayString 1783                                 _DELAY_ms 168B  
                               _DELAY_us 1662                       ?_LCD_DisplayString 0024  
                       ?_EEPROM_ReadByte 0072                            UART_Printf@ch 0063  
                               _LCD_Init 0B3B                              _eeprom_Test 0CFC  
                    ??_LCD_DisplayString 007E                            ??_UART_RxChar 0070  
                          ??_UART_TxChar 0070                            _UART_TxNumber 0397  
                       _LCD_GoToNextLine 16CD                            ??_UART_Printf 004F  
                          _UART_TxString 094F                  UART_Init@v_baudRate_u32 002A  
                             ?_lcd_Reset 0070                            _lcd_DataWrite 09DF  
                UART_TxString@ptr_string 0071                 GPIO_PinRead@returnStatus 0073  
                            __stringbase 1012                                led_Test@i 0074  
              __end_of_LCD_DisplayString 17A8               __end_of_UART_TxFloatNumber 1000  
                     _lcd_SendCmdSignals 17D3                            _lcd_BusyCheck 0E47  
              __size_of_EEPROM_WriteByte 001F                      ?_lcd_SendCmdSignals 0070  
              UART_TxNumber@v_number_u32 0024                           ?_UART_TxNumber 0024  
                         ?_UART_TxString 0071                 UART_TxChar@v_uartData_u8 0070  
                         ?_lcd_DataWrite 0070                      __end_of_UART_RxChar 1647  
                    __end_of_UART_TxChar 1658                         __size_of___ftadd 0109  
                       __size_of___ftneg 000A                         __size_of___lldiv 005E  
                       __size_of___ftmul 00D1                         __size_of___fttol 008E  
                    __end_of_UART_Printf 07D4                                 _adc_Test 16FE  
                               ___ftpack 0D66                       __end_of__stringtab 1012  
                   ??_lcd_SendCmdSignals 007A                                 ___lltoft 17A8  
          __size_of_lcd_SendHigherNibble 0040                      _lcd_SendLowerNibble 0003  
                               __ptext10 175E                                 __ptext11 09DF  
                               __ptext20 0DD2                                 __ptext12 0972  
                               __ptext21 01E5                                 __ptext13 16CD  
                               __ptext30 17A8                                 __ptext22 168B  
                               __ptext14 09A0                                 __ptext31 0ED3  
                               __ptext23 0CFC                                 __ptext15 0003  
                               __ptext40 173A                                 __ptext32 1658  
                               __ptext24 171B                                 __ptext16 0A1E  
                               __ptext41 1662                                 __ptext33 0043  
                               __ptext25 16B5                                 __ptext17 17D3  
                               __ptext42 1640                                 __ptext34 0489  
                               __ptext26 16FE                                 __ptext18 0E47  
                               __ptext43 169F                                 __ptext35 0D66  
                               __ptext27 0592                                 __ptext19 02BE  
                               __ptext44 0BE6                                 __ptext36 0397  
                               __ptext28 094F                                 __ptext45 0C3F  
                               __ptext37 1678                                 __ptext29 0F61  
                               __ptext38 164F                                 __ptext39 1647  
                               _lcd_Test 0AA4                                 _led_Test 0C9D  
                         ?_lcd_BusyCheck 0070                            __size_of_main 0056  
                   ?_lcd_SendLowerNibble 0070                            ??_switch_Test 007A  
                        UART_Printf@argp 0065                              ??_lcd_Reset 007C  
               UART_SetBaudRate@RegValue 0029               __size_of_LCD_DisplayString 0025  
              eeprom_Test@eeprom_address 006A                          ??_UART_TxNumber 0029  
               __end_of_UART_SetBaudRate 0C3F                          _ADC_GetAdcValue 173A  
                        ??_UART_TxString 0073                    ??_lcd_SendLowerNibble 007A  
                       ___lldiv@dividend 0074                          _LCD_DisplayChar 175E  
                            _UART_RxChar 1640                                stringcode 100A  
                            _UART_TxChar 164F                              _UART_Printf 0592  
                        ??_lcd_DataWrite 007C              __end_of_lcd_SendDataSignals 09A0  
                    __end_of_switch_Test 0AA4                         ___lldiv@quotient 0079  
               __end_of_LCD_GoToNextLine 16E5                                 stringtab 1000  
                        ??_lcd_BusyCheck 007A                     eeprom_Test@read_char 0069  
                 __size_of_GPIO_PinWrite 00D9    UART_Printf@v_numOfDigitsToTransmit_u8 0064  
                     UART_Printf@argList 004B                         _EEPROM_WriteByte 171B  
                           ?_eeprom_Test 0070                     UART_Printf@v_num_s16 0059  
                   UART_Printf@v_num_s32 0055                     UART_Printf@v_num_u16 005F  
                   UART_Printf@v_num_u32 005B  
