

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon May 09 12:43:40 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  0008                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0013                     	;# 
   195  0014                     	;# 
   196  0015                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001B                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001D                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  0081                     	;# 
   210  0085                     	;# 
   211  0086                     	;# 
   212  0087                     	;# 
   213  0088                     	;# 
   214  0089                     	;# 
   215  008C                     	;# 
   216  008D                     	;# 
   217  008E                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0088                     	;# 
   274  0089                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  010C                     	;# 
   349  010D                     	;# 
   350  010E                     	;# 
   351  010F                     	;# 
   352  018C                     	;# 
   353  018D                     	;# 
   354                           
   355                           	psect	idataBANK0
   356  0AEA                     __pidataBANK0:	
   357                           
   358                           ;initializer for _ARR_LcdLineNumAddress_U8
   359  0AEA  3480               	retlw	128
   360  0AEB  34C0               	retlw	192
   361  0AEC  3490               	retlw	144
   362  0AED  34D0               	retlw	208
   363  001F                     _ADCON0	set	31
   364  001E                     _ADRESH	set	30
   365  0005                     _PORTA	set	5
   366  0006                     _PORTB	set	6
   367  0007                     _PORTC	set	7
   368  0008                     _PORTD	set	8
   369  0009                     _PORTE	set	9
   370  001A                     _RCREG	set	26
   371  0018                     _RCSTA	set	24
   372  0019                     _TXREG	set	25
   373  00F8                     _ADON	set	248
   374  0018                     _CARRY	set	24
   375  005F                     _GIE	set	95
   376  00FA                     _GO	set	250
   377  00FA                     _GO_DONE	set	250
   378  0065                     _RCIF	set	101
   379  0064                     _TXIF	set	100
   380  009F                     _ADCON1	set	159
   381  009E                     _ADRESL	set	158
   382  0099                     _SPBRG	set	153
   383  0085                     _TRISA	set	133
   384  0086                     _TRISB	set	134
   385  0087                     _TRISC	set	135
   386  0088                     _TRISD	set	136
   387  0089                     _TRISE	set	137
   388  0098                     _TXSTA	set	152
   389  010D                     _EEADR	set	269
   390  010C                     _EEDATA	set	268
   391  018C                     _EECON1	set	396
   392  018D                     _EECON2	set	397
   393  0C60                     _RD	set	3168
   394  0C61                     _WR	set	3169
   395  0C62                     _WREN	set	3170
   396                           
   397                           	psect	strings
   398  094F                     __pstrings:	
   399  094F                     stringtab:	
   400  094F                     __stringtab:	
   401                           
   402                           ;	String table - string pointers are 2 bytes each
   403  094F  1BFF               	btfsc	btemp+1,7
   404  0950  2959               	ljmp	stringcode
   405  0951  1383               	bcf	3,7
   406  0952  187F               	btfsc	btemp+1,0
   407  0953  1783               	bsf	3,7
   408  0954  0800               	movf	0,w
   409  0955  0A84               	incf	4,f
   410  0956  1903               	skipnz
   411  0957  0AFF               	incf	btemp+1,f
   412  0958  0008               	return
   413  0959                     stringcode:	
   414  0959  087F               	movf	btemp+1,w
   415  095A  397F               	andlw	127
   416  095B  008A               	movwf	10
   417  095C  0804               	movf	4,w
   418  095D  0A84               	incf	4,f
   419  095E  1903               	skipnz
   420  095F  0AFF               	incf	btemp+1,f
   421  0960  0082               	movwf	2
   422  0961                     __stringbase:	
   423  0961                     __end_of__stringtab:	
   424                           
   425                           	psect	stringtext
   426  0800                     __pstringtext:	
   427  0800                     STR_1:	
   428  0800  340A               	retlw	10
   429  0801  340D               	retlw	13
   430  0802  340A               	retlw	10
   431  0803  340D               	retlw	13
   432  0804  3453               	retlw	83	;'S'
   433  0805  3474               	retlw	116	;'t'
   434  0806  3461               	retlw	97	;'a'
   435  0807  3472               	retlw	114	;'r'
   436  0808  3474               	retlw	116	;'t'
   437  0809  3465               	retlw	101	;'e'
   438  080A  3472               	retlw	114	;'r'
   439  080B  3420               	retlw	32	;' '
   440  080C  3450               	retlw	80	;'P'
   441  080D  3449               	retlw	73	;'I'
   442  080E  3443               	retlw	67	;'C'
   443  080F  3420               	retlw	32	;' '
   444  0810  3474               	retlw	116	;'t'
   445  0811  3465               	retlw	101	;'e'
   446  0812  3473               	retlw	115	;'s'
   447  0813  3474               	retlw	116	;'t'
   448  0814  3420               	retlw	32	;' '
   449  0815  344D               	retlw	77	;'M'
   450  0816  3465               	retlw	101	;'e'
   451  0817  346E               	retlw	110	;'n'
   452  0818  3475               	retlw	117	;'u'
   453  0819  340A               	retlw	10
   454  081A  340D               	retlw	13
   455  081B  3420               	retlw	32	;' '
   456  081C  3431               	retlw	49	;'1'
   457  081D  342E               	retlw	46	;'.'
   458  081E  344C               	retlw	76	;'L'
   459  081F  3465               	retlw	101	;'e'
   460  0820  3464               	retlw	100	;'d'
   461  0821  3420               	retlw	32	;' '
   462  0822  3474               	retlw	116	;'t'
   463  0823  3465               	retlw	101	;'e'
   464  0824  3473               	retlw	115	;'s'
   465  0825  3474               	retlw	116	;'t'
   466  0826  340A               	retlw	10
   467  0827  340D               	retlw	13
   468  0828  3420               	retlw	32	;' '
   469  0829  3432               	retlw	50	;'2'
   470  082A  342E               	retlw	46	;'.'
   471  082B  344C               	retlw	76	;'L'
   472  082C  3463               	retlw	99	;'c'
   473  082D  3464               	retlw	100	;'d'
   474  082E  3420               	retlw	32	;' '
   475  082F  3474               	retlw	116	;'t'
   476  0830  3465               	retlw	101	;'e'
   477  0831  3473               	retlw	115	;'s'
   478  0832  3474               	retlw	116	;'t'
   479  0833  340A               	retlw	10
   480  0834  340D               	retlw	13
   481  0835  3420               	retlw	32	;' '
   482  0836  3433               	retlw	51	;'3'
   483  0837  342E               	retlw	46	;'.'
   484  0838  3453               	retlw	83	;'S'
   485  0839  3477               	retlw	119	;'w'
   486  083A  3469               	retlw	105	;'i'
   487  083B  3474               	retlw	116	;'t'
   488  083C  3463               	retlw	99	;'c'
   489  083D  3468               	retlw	104	;'h'
   490  083E  3420               	retlw	32	;' '
   491  083F  3474               	retlw	116	;'t'
   492  0840  3465               	retlw	101	;'e'
   493  0841  3473               	retlw	115	;'s'
   494  0842  3474               	retlw	116	;'t'
   495  0843  340A               	retlw	10
   496  0844  340D               	retlw	13
   497  0845  3420               	retlw	32	;' '
   498  0846  3434               	retlw	52	;'4'
   499  0847  342E               	retlw	46	;'.'
   500  0848  3441               	retlw	65	;'A'
   501  0849  3464               	retlw	100	;'d'
   502  084A  3463               	retlw	99	;'c'
   503  084B  3420               	retlw	32	;' '
   504  084C  3454               	retlw	84	;'T'
   505  084D  3465               	retlw	101	;'e'
   506  084E  3473               	retlw	115	;'s'
   507  084F  3474               	retlw	116	;'t'
   508  0850  340A               	retlw	10
   509  0851  340D               	retlw	13
   510  0852  3420               	retlw	32	;' '
   511  0853  3435               	retlw	53	;'5'
   512  0854  342E               	retlw	46	;'.'
   513  0855  3445               	retlw	69	;'E'
   514  0856  3465               	retlw	101	;'e'
   515  0857  3470               	retlw	112	;'p'
   516  0858  3472               	retlw	114	;'r'
   517  0859  346F               	retlw	111	;'o'
   518  085A  346D               	retlw	109	;'m'
   519  085B  3420               	retlw	32	;' '
   520  085C  3454               	retlw	84	;'T'
   521  085D  3465               	retlw	101	;'e'
   522  085E  3473               	retlw	115	;'s'
   523  085F  3474               	retlw	116	;'t'
   524  0860  3420               	retlw	32	;' '
   525  0861  340A               	retlw	10
   526  0862  340D               	retlw	13
   527  0863  3453               	retlw	83	;'S'
   528  0864  3465               	retlw	101	;'e'
   529  0865  346C               	retlw	108	;'l'
   530  0866  3465               	retlw	101	;'e'
   531  0867  3463               	retlw	99	;'c'
   532  0868  3474               	retlw	116	;'t'
   533  0869  3420               	retlw	32	;' '
   534  086A  344F               	retlw	79	;'O'
   535  086B  346E               	retlw	110	;'n'
   536  086C  3465               	retlw	101	;'e'
   537  086D  3420               	retlw	32	;' '
   538  086E  346F               	retlw	111	;'o'
   539  086F  3466               	retlw	102	;'f'
   540  0870  3420               	retlw	32	;' '
   541  0871  3474               	retlw	116	;'t'
   542  0872  3468               	retlw	104	;'h'
   543  0873  3465               	retlw	101	;'e'
   544  0874  3420               	retlw	32	;' '
   545  0875  3461               	retlw	97	;'a'
   546  0876  3462               	retlw	98	;'b'
   547  0877  346F               	retlw	111	;'o'
   548  0878  3476               	retlw	118	;'v'
   549  0879  3465               	retlw	101	;'e'
   550  087A  3420               	retlw	32	;' '
   551  087B  346F               	retlw	111	;'o'
   552  087C  3470               	retlw	112	;'p'
   553  087D  3474               	retlw	116	;'t'
   554  087E  3469               	retlw	105	;'i'
   555  087F  346F               	retlw	111	;'o'
   556  0880  346E               	retlw	110	;'n'
   557  0881  3473               	retlw	115	;'s'
   558  0882  3400               	retlw	0
   559  0883                     STR_5:	
   560  0883  340A               	retlw	10
   561  0884  340D               	retlw	13
   562  0885  340A               	retlw	10
   563  0886  340D               	retlw	13
   564  0887  3449               	retlw	73	;'I'
   565  0888  346E               	retlw	110	;'n'
   566  0889  3462               	retlw	98	;'b'
   567  088A  3475               	retlw	117	;'u'
   568  088B  3469               	retlw	105	;'i'
   569  088C  346C               	retlw	108	;'l'
   570  088D  3474               	retlw	116	;'t'
   571  088E  3420               	retlw	32	;' '
   572  088F  3445               	retlw	69	;'E'
   573  0890  3465               	retlw	101	;'e'
   574  0891  3470               	retlw	112	;'p'
   575  0892  3472               	retlw	114	;'r'
   576  0893  346F               	retlw	111	;'o'
   577  0894  346D               	retlw	109	;'m'
   578  0895  3420               	retlw	32	;' '
   579  0896  3454               	retlw	84	;'T'
   580  0897  3465               	retlw	101	;'e'
   581  0898  3473               	retlw	115	;'s'
   582  0899  3474               	retlw	116	;'t'
   583  089A  342E               	retlw	46	;'.'
   584  089B  3420               	retlw	32	;' '
   585  089C  3457               	retlw	87	;'W'
   586  089D  3472               	retlw	114	;'r'
   587  089E  3469               	retlw	105	;'i'
   588  089F  3474               	retlw	116	;'t'
   589  08A0  3469               	retlw	105	;'i'
   590  08A1  346E               	retlw	110	;'n'
   591  08A2  3467               	retlw	103	;'g'
   592  08A3  3420               	retlw	32	;' '
   593  08A4  3461               	retlw	97	;'a'
   594  08A5  346E               	retlw	110	;'n'
   595  08A6  3464               	retlw	100	;'d'
   596  08A7  3420               	retlw	32	;' '
   597  08A8  3472               	retlw	114	;'r'
   598  08A9  3465               	retlw	101	;'e'
   599  08AA  3461               	retlw	97	;'a'
   600  08AB  3464               	retlw	100	;'d'
   601  08AC  3469               	retlw	105	;'i'
   602  08AD  346E               	retlw	110	;'n'
   603  08AE  3467               	retlw	103	;'g'
   604  08AF  3420               	retlw	32	;' '
   605  08B0  3441               	retlw	65	;'A'
   606  08B1  342D               	retlw	45	;'-'
   607  08B2  345A               	retlw	90	;'Z'
   608  08B3  3420               	retlw	32	;' '
   609  08B4  3474               	retlw	116	;'t'
   610  08B5  346F               	retlw	111	;'o'
   611  08B6  3420               	retlw	32	;' '
   612  08B7  3461               	retlw	97	;'a'
   613  08B8  346E               	retlw	110	;'n'
   614  08B9  3464               	retlw	100	;'d'
   615  08BA  3420               	retlw	32	;' '
   616  08BB  3466               	retlw	102	;'f'
   617  08BC  3472               	retlw	114	;'r'
   618  08BD  346F               	retlw	111	;'o'
   619  08BE  346D               	retlw	109	;'m'
   620  08BF  3420               	retlw	32	;' '
   621  08C0  3445               	retlw	69	;'E'
   622  08C1  3465               	retlw	101	;'e'
   623  08C2  3470               	retlw	112	;'p'
   624  08C3  3472               	retlw	114	;'r'
   625  08C4  346F               	retlw	111	;'o'
   626  08C5  346D               	retlw	109	;'m'
   627  08C6  342E               	retlw	46	;'.'
   628  08C7  3400               	retlw	0
   629  08C8                     STR_3:	
   630  08C8  340A               	retlw	10
   631  08C9  340A               	retlw	10
   632  08CA  340A               	retlw	10
   633  08CB  340D               	retlw	13
   634  08CC  3450               	retlw	80	;'P'
   635  08CD  3472               	retlw	114	;'r'
   636  08CE  3465               	retlw	101	;'e'
   637  08CF  3473               	retlw	115	;'s'
   638  08D0  3473               	retlw	115	;'s'
   639  08D1  3420               	retlw	32	;' '
   640  08D2  3474               	retlw	116	;'t'
   641  08D3  3468               	retlw	104	;'h'
   642  08D4  3465               	retlw	101	;'e'
   643  08D5  3420               	retlw	32	;' '
   644  08D6  3473               	retlw	115	;'s'
   645  08D7  3477               	retlw	119	;'w'
   646  08D8  3469               	retlw	105	;'i'
   647  08D9  3474               	retlw	116	;'t'
   648  08DA  3463               	retlw	99	;'c'
   649  08DB  3468               	retlw	104	;'h'
   650  08DC  3465               	retlw	101	;'e'
   651  08DD  3473               	retlw	115	;'s'
   652  08DE  3420               	retlw	32	;' '
   653  08DF  3461               	retlw	97	;'a'
   654  08E0  346E               	retlw	110	;'n'
   655  08E1  3464               	retlw	100	;'d'
   656  08E2  3420               	retlw	32	;' '
   657  08E3  346F               	retlw	111	;'o'
   658  08E4  3462               	retlw	98	;'b'
   659  08E5  3473               	retlw	115	;'s'
   660  08E6  3465               	retlw	101	;'e'
   661  08E7  3472               	retlw	114	;'r'
   662  08E8  3476               	retlw	118	;'v'
   663  08E9  3465               	retlw	101	;'e'
   664  08EA  3420               	retlw	32	;' '
   665  08EB  3474               	retlw	116	;'t'
   666  08EC  3468               	retlw	104	;'h'
   667  08ED  3465               	retlw	101	;'e'
   668  08EE  3420               	retlw	32	;' '
   669  08EF  346F               	retlw	111	;'o'
   670  08F0  3475               	retlw	117	;'u'
   671  08F1  3474               	retlw	116	;'t'
   672  08F2  3470               	retlw	112	;'p'
   673  08F3  3475               	retlw	117	;'u'
   674  08F4  3474               	retlw	116	;'t'
   675  08F5  3420               	retlw	32	;' '
   676  08F6  346F               	retlw	111	;'o'
   677  08F7  346E               	retlw	110	;'n'
   678  08F8  3420               	retlw	32	;' '
   679  08F9  344C               	retlw	76	;'L'
   680  08FA  3465               	retlw	101	;'e'
   681  08FB  3464               	retlw	100	;'d'
   682  08FC  3473               	retlw	115	;'s'
   683  08FD  3400               	retlw	0
   684  08FE                     STR_2:	
   685  08FE  3445               	retlw	69	;'E'
   686  08FF  3478               	retlw	120	;'x'
   687  0900  3470               	retlw	112	;'p'
   688  0901  346C               	retlw	108	;'l'
   689  0902  346F               	retlw	111	;'o'
   690  0903  3472               	retlw	114	;'r'
   691  0904  3465               	retlw	101	;'e'
   692  0905  340A               	retlw	10
   693  0906  3420               	retlw	32	;' '
   694  0907  3453               	retlw	83	;'S'
   695  0908  3474               	retlw	116	;'t'
   696  0909  3461               	retlw	97	;'a'
   697  090A  3472               	retlw	114	;'r'
   698  090B  3474               	retlw	116	;'t'
   699  090C  3465               	retlw	101	;'e'
   700  090D  3472               	retlw	114	;'r'
   701  090E  3420               	retlw	32	;' '
   702  090F  3450               	retlw	80	;'P'
   703  0910  3469               	retlw	105	;'i'
   704  0911  3463               	retlw	99	;'c'
   705  0912  342E               	retlw	46	;'.'
   706  0913  342E               	retlw	46	;'.'
   707  0914  342E               	retlw	46	;'.'
   708  0915  3400               	retlw	0
   709  0916                     STR_6:	
   710  0916  340A               	retlw	10
   711  0917  340D               	retlw	13
   712  0918  3445               	retlw	69	;'E'
   713  0919  3465               	retlw	101	;'e'
   714  091A  3470               	retlw	112	;'p'
   715  091B  3472               	retlw	114	;'r'
   716  091C  346F               	retlw	111	;'o'
   717  091D  346D               	retlw	109	;'m'
   718  091E  3420               	retlw	32	;' '
   719  091F  3457               	retlw	87	;'W'
   720  0920  3472               	retlw	114	;'r'
   721  0921  3469               	retlw	105	;'i'
   722  0922  3474               	retlw	116	;'t'
   723  0923  3465               	retlw	101	;'e'
   724  0924  343A               	retlw	58	;':'
   725  0925  3420               	retlw	32	;' '
   726  0926  3425               	retlw	37	;'%'
   727  0927  3463               	retlw	99	;'c'
   728  0928  3420               	retlw	32	;' '
   729  0929  3420               	retlw	32	;' '
   730  092A  3420               	retlw	32	;' '
   731  092B  3420               	retlw	32	;' '
   732  092C  3400               	retlw	0
   733  092D                     STR_4:	
   734  092D  340A               	retlw	10
   735  092E  340D               	retlw	13
   736  092F  3441               	retlw	65	;'A'
   737  0930  3444               	retlw	68	;'D'
   738  0931  3443               	retlw	67	;'C'
   739  0932  3430               	retlw	48	;'0'
   740  0933  3420               	retlw	32	;' '
   741  0934  3476               	retlw	118	;'v'
   742  0935  3461               	retlw	97	;'a'
   743  0936  346C               	retlw	108	;'l'
   744  0937  3475               	retlw	117	;'u'
   745  0938  3465               	retlw	101	;'e'
   746  0939  343D               	retlw	61	;'='
   747  093A  3420               	retlw	32	;' '
   748  093B  3425               	retlw	37	;'%'
   749  093C  3434               	retlw	52	;'4'
   750  093D  3464               	retlw	100	;'d'
   751  093E  3400               	retlw	0
   752  093F                     STR_7:	
   753  093F  3445               	retlw	69	;'E'
   754  0940  3465               	retlw	101	;'e'
   755  0941  3470               	retlw	112	;'p'
   756  0942  3472               	retlw	114	;'r'
   757  0943  346F               	retlw	111	;'o'
   758  0944  346D               	retlw	109	;'m'
   759  0945  3420               	retlw	32	;' '
   760  0946  3452               	retlw	82	;'R'
   761  0947  3465               	retlw	101	;'e'
   762  0948  3461               	retlw	97	;'a'
   763  0949  3464               	retlw	100	;'d'
   764  094A  343A               	retlw	58	;':'
   765  094B  3420               	retlw	32	;' '
   766  094C  3425               	retlw	37	;'%'
   767  094D  3463               	retlw	99	;'c'
   768  094E  3400               	retlw	0
   769                           
   770                           ; #config settings
   771  0000                     
   772                           	psect	cinit
   773  07D2                     start_initialization:	
   774  07D2                     __initialization:	
   775                           
   776                           ; Clear objects allocated to BANK0
   777  07D2  01E7               	clrf	__pbssBANK0& (0+127)
   778  07D3  01E8               	clrf	(__pbssBANK0+1)& (0+127)
   779                           
   780                           ; Clear objects allocated to BANK1
   781  07D4  1683               	bsf	3,5	;RP0=1, select bank1
   782  07D5  1303               	bcf	3,6	;RP1=0, select bank1
   783  07D6  01A0               	clrf	__pbssBANK1& (0+127)
   784  07D7  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   785  07D8  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   786  07D9  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   787  07DA  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   788  07DB  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   789  07DC  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   790  07DD  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   791  07DE  01A8               	clrf	(__pbssBANK1+8)& (0+127)
   792  07DF  01A9               	clrf	(__pbssBANK1+9)& (0+127)
   793  07E0  01AA               	clrf	(__pbssBANK1+10)& (0+127)
   794  07E1  01AB               	clrf	(__pbssBANK1+11)& (0+127)
   795  07E2  01AC               	clrf	(__pbssBANK1+12)& (0+127)
   796  07E3  01AD               	clrf	(__pbssBANK1+13)& (0+127)
   797                           
   798                           ; Initialize objects allocated to BANK0
   799  07E4  1283               	bcf	3,5	;RP0=0, select bank0
   800  07E5  1303               	bcf	3,6	;RP1=0, select bank0
   801  07E6  120A  158A  22EA  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   802  07EB  00E3               	movwf	__pdataBANK0& (0+127)
   803  07EC  120A  158A  22EB  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   804  07F1  00E4               	movwf	(__pdataBANK0+1)& (0+127)
   805  07F2  120A  158A  22EC  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   806  07F7  00E5               	movwf	(__pdataBANK0+2)& (0+127)
   807  07F8  120A  158A  22ED   	fcall	__pidataBANK0+3	;fetch initializer
   808  07FB  00E6               	movwf	(__pdataBANK0+3)& (0+127)
   809  07FC                     end_of_initialization:	
   810                           ;End of C runtime variable initialization code
   811                           
   812  07FC                     __end_of__initialization:	
   813  07FC  0183               	clrf	3
   814  07FD  120A  118A  2981   	ljmp	_main	;jump to C main() function
   815                           
   816                           	psect	bssBANK0
   817  0067                     __pbssBANK0:	
   818  0067                     _v_LcdTrackCursorPos_U8:	
   819  0067                     	ds	1
   820  0068                     _v_LcdTrackLineNum_U8:	
   821  0068                     	ds	1
   822                           
   823                           	psect	dataBANK0
   824  0063                     __pdataBANK0:	
   825  0063                     _ARR_LcdLineNumAddress_U8:	
   826  0063                     	ds	4
   827                           
   828                           	psect	bssBANK1
   829  00A0                     __pbssBANK1:	
   830  00A0                     _LCDConfig:	
   831  00A0                     	ds	14
   832                           
   833                           	psect	cstackCOMMON
   834  0070                     __pcstackCOMMON:	
   835  0070                     ?_DELAY_us:	
   836  0070                     ?_eeprom_write:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_LCD_CmdWrite:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_lcd_Reset:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_LCD_Clear:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_LCD_GoToLine:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0070                     ?_lcd_BusyCheck:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0070                     ?_lcd_SendLowerNibble:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0070                     ?_lcd_SendHigherNibble:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0070                     ?_lcd_SendCmdSignals:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     ?_lcd_DataWrite:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ?_lcd_SendDataSignals:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     ?_led_Test:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0070                     ?_lcd_Test:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  0070                     ?_switch_Test:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  0070                     ?_adc_Test:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0070                     ?_eeprom_Test:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0070                     ?_ADC_Init:	
   885                           ; 1 bytes @ 0x0
   886                           
   887  0070                     ??_ADC_Init:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  0070                     ?_EEPROM_ReadByte:	
   891                           ; 1 bytes @ 0x0
   892                           
   893  0070                     ?_GPIO_PinDirection:	
   894                           ; 1 bytes @ 0x0
   895                           
   896  0070                     ?_GPIO_PinRead:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  0070                     ??_GPIO_PinRead:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0070                     ?_LCD_GoToNextLine:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0070                     ?_LCD_DisplayChar:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ?_UART_RxChar:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ??_UART_RxChar:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     ?_UART_TxChar:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ??_UART_TxChar:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ?_main:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ?___lldiv:	
   924                           ; 2 bytes @ 0x0
   925                           
   926  0070                     GPIO_PinDirection@var_pinDirn_u8:	
   927                           ; 4 bytes @ 0x0
   928                           
   929  0070                     UART_TxChar@v_uartData_u8:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     eeprom_write@value:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0070                     DELAY_us@us_count:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0070                     EEPROM_ReadByte@v_eepromAddress_u16:	
   939                           ; 2 bytes @ 0x0
   940                           
   941  0070                     ___lldiv@divisor:	
   942                           ; 2 bytes @ 0x0
   943                           
   944                           
   945                           ; 4 bytes @ 0x0
   946  0070                     	ds	1
   947  0071                     ??_eeprom_write:	
   948  0071                     ??_GPIO_PinDirection:	
   949                           ; 1 bytes @ 0x1
   950                           
   951  0071                     ?_UART_TxString:	
   952                           ; 1 bytes @ 0x1
   953                           
   954  0071                     UART_TxString@ptr_string:	
   955                           ; 1 bytes @ 0x1
   956                           
   957                           
   958                           ; 2 bytes @ 0x1
   959  0071                     	ds	1
   960  0072                     ??_DELAY_us:	
   961  0072                     ?_DELAY_ms:	
   962                           ; 1 bytes @ 0x2
   963                           
   964  0072                     ??_EEPROM_ReadByte:	
   965                           ; 1 bytes @ 0x2
   966                           
   967  0072                     ?_ADC_GetAdcValue:	
   968                           ; 1 bytes @ 0x2
   969                           
   970  0072                     GPIO_PinRead@var_portNumber_u8:	
   971                           ; 2 bytes @ 0x2
   972                           
   973  0072                     eeprom_write@addr:	
   974                           ; 1 bytes @ 0x2
   975                           
   976  0072                     DELAY_ms@ms_count:	
   977                           ; 1 bytes @ 0x2
   978                           
   979                           
   980                           ; 2 bytes @ 0x2
   981  0072                     	ds	1
   982  0073                     ?_EEPROM_WriteByte:	
   983  0073                     ??_UART_TxString:	
   984                           ; 1 bytes @ 0x3
   985                           
   986  0073                     GPIO_PinDirection@var_portNumber_u8:	
   987                           ; 1 bytes @ 0x3
   988                           
   989  0073                     GPIO_PinRead@returnStatus:	
   990                           ; 1 bytes @ 0x3
   991                           
   992  0073                     EEPROM_WriteByte@v_eepromAddress_u16:	
   993                           ; 1 bytes @ 0x3
   994                           
   995                           
   996                           ; 2 bytes @ 0x3
   997  0073                     	ds	1
   998  0074                     ??_led_Test:	
   999  0074                     ??_ADC_GetAdcValue:	
  1000                           ; 1 bytes @ 0x4
  1001                           
  1002  0074                     ??_DELAY_ms:	
  1003                           ; 1 bytes @ 0x4
  1004                           
  1005  0074                     GPIO_PinDirection@enm_pinNumber:	
  1006                           ; 1 bytes @ 0x4
  1007                           
  1008  0074                     GPIO_PinRead@enm_pinNumber:	
  1009                           ; 1 bytes @ 0x4
  1010                           
  1011  0074                     led_Test@i:	
  1012                           ; 1 bytes @ 0x4
  1013                           
  1014  0074                     ___lldiv@dividend:	
  1015                           ; 2 bytes @ 0x4
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x4
  1019  0074                     	ds	1
  1020  0075                     ?_GPIO_PinWrite:	
  1021  0075                     ??_LCD_SetUp:	
  1022                           ; 1 bytes @ 0x5
  1023                           
  1024  0075                     ADC_GetAdcValue@var_adcChannel_u8:	
  1025                           ; 1 bytes @ 0x5
  1026                           
  1027  0075                     EEPROM_WriteByte@v_eepromData_u8:	
  1028                           ; 1 bytes @ 0x5
  1029                           
  1030  0075                     GPIO_PinWrite@var_pinValue_u8:	
  1031                           ; 1 bytes @ 0x5
  1032                           
  1033                           
  1034                           ; 1 bytes @ 0x5
  1035  0075                     	ds	1
  1036  0076                     ??_EEPROM_WriteByte:	
  1037  0076                     ??_GPIO_PinWrite:	
  1038                           ; 1 bytes @ 0x6
  1039                           
  1040  0076                     LCD_SetUp@RS:	
  1041                           ; 1 bytes @ 0x6
  1042                           
  1043  0076                     led_Test@pattern:	
  1044                           ; 1 bytes @ 0x6
  1045                           
  1046                           
  1047                           ; 2 bytes @ 0x6
  1048  0076                     	ds	2
  1049  0078                     ??___lldiv:	
  1050  0078                     GPIO_PinWrite@var_portNumber_u8:	
  1051                           ; 1 bytes @ 0x8
  1052                           
  1053                           
  1054                           ; 1 bytes @ 0x8
  1055  0078                     	ds	1
  1056  0079                     GPIO_PinWrite@enm_pinNumber:	
  1057  0079                     ___lldiv@quotient:	
  1058                           ; 1 bytes @ 0x9
  1059                           
  1060                           
  1061                           ; 4 bytes @ 0x9
  1062  0079                     	ds	1
  1063  007A                     ??_lcd_BusyCheck:	
  1064  007A                     ??_lcd_SendLowerNibble:	
  1065                           ; 1 bytes @ 0xA
  1066                           
  1067  007A                     ??_lcd_SendHigherNibble:	
  1068                           ; 1 bytes @ 0xA
  1069                           
  1070  007A                     ??_lcd_SendCmdSignals:	
  1071                           ; 1 bytes @ 0xA
  1072                           
  1073  007A                     ??_lcd_SendDataSignals:	
  1074                           ; 1 bytes @ 0xA
  1075                           
  1076  007A                     ??_switch_Test:	
  1077                           ; 1 bytes @ 0xA
  1078                           
  1079                           
  1080                           ; 1 bytes @ 0xA
  1081  007A                     	ds	1
  1082  007B                     lcd_BusyCheck@busyflag:	
  1083  007B                     lcd_SendHigherNibble@dataByte:	
  1084                           ; 1 bytes @ 0xB
  1085                           
  1086  007B                     lcd_SendLowerNibble@dataByte:	
  1087                           ; 1 bytes @ 0xB
  1088                           
  1089                           
  1090                           ; 1 bytes @ 0xB
  1091  007B                     	ds	1
  1092  007C                     ??_LCD_CmdWrite:	
  1093  007C                     ??_lcd_Reset:	
  1094                           ; 1 bytes @ 0xC
  1095                           
  1096  007C                     ??_lcd_DataWrite:	
  1097                           ; 1 bytes @ 0xC
  1098                           
  1099                           
  1100                           ; 1 bytes @ 0xC
  1101  007C                     	ds	1
  1102  007D                     ___lldiv@counter:	
  1103                           
  1104                           ; 1 bytes @ 0xD
  1105  007D                     	ds	1
  1106  007E                     ??_LCD_Clear:	
  1107  007E                     ??_adc_Test:	
  1108                           ; 1 bytes @ 0xE
  1109                           
  1110  007E                     ??_LCD_DisplayString:	
  1111                           ; 1 bytes @ 0xE
  1112                           
  1113  007E                     ??_UART_Init:	
  1114                           ; 1 bytes @ 0xE
  1115                           
  1116                           
  1117                           	psect	cstackBANK0
  1118  0020                     __pcstackBANK0:	
  1119                           ; 1 bytes @ 0xE
  1120                           
  1121  0020                     ?_UART_SetBaudRate:	
  1122  0020                     ?_LCD_SetUp:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0020                     ?___bmul:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0020                     LCD_SetUp@RW:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0020                     LCD_CmdWrite@v_lcdCmd_u8:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0020                     lcd_DataWrite@dataByte:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0020                     ___bmul@multiplicand:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0020                     UART_SetBaudRate@v_baudRate_u32:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143                           
  1144                           ; 4 bytes @ 0x0
  1145  0020                     	ds	1
  1146  0021                     ??_LCD_GoToLine:	
  1147  0021                     ??_LCD_GoToNextLine:	
  1148                           ; 1 bytes @ 0x1
  1149                           
  1150  0021                     ??___bmul:	
  1151                           ; 1 bytes @ 0x1
  1152                           
  1153  0021                     LCD_SetUp@EN:	
  1154                           ; 1 bytes @ 0x1
  1155                           
  1156                           
  1157                           ; 1 bytes @ 0x1
  1158  0021                     	ds	1
  1159  0022                     ??_LCD_DisplayChar:	
  1160  0022                     LCD_SetUp@D0:	
  1161                           ; 1 bytes @ 0x2
  1162                           
  1163  0022                     LCD_GoToLine@v_lineNumber_u8:	
  1164                           ; 1 bytes @ 0x2
  1165                           
  1166  0022                     ___bmul@product:	
  1167                           ; 1 bytes @ 0x2
  1168                           
  1169                           
  1170                           ; 1 bytes @ 0x2
  1171  0022                     	ds	1
  1172  0023                     ?_LCD_Init:	
  1173  0023                     LCD_SetUp@D1:	
  1174                           ; 1 bytes @ 0x3
  1175                           
  1176  0023                     LCD_Init@v_MaxCharsPerLine_u8:	
  1177                           ; 1 bytes @ 0x3
  1178                           
  1179  0023                     LCD_DisplayChar@v_lcdData_u8:	
  1180                           ; 1 bytes @ 0x3
  1181                           
  1182  0023                     ___bmul@multiplier:	
  1183                           ; 1 bytes @ 0x3
  1184                           
  1185                           
  1186                           ; 1 bytes @ 0x3
  1187  0023                     	ds	1
  1188  0024                     ??_UART_SetBaudRate:	
  1189  0024                     ??_LCD_Init:	
  1190                           ; 1 bytes @ 0x4
  1191                           
  1192  0024                     ?_LCD_DisplayString:	
  1193                           ; 1 bytes @ 0x4
  1194                           
  1195  0024                     ?_UART_TxNumber:	
  1196                           ; 1 bytes @ 0x4
  1197                           
  1198  0024                     LCD_SetUp@D2:	
  1199                           ; 1 bytes @ 0x4
  1200                           
  1201  0024                     LCD_DisplayString@ptr_stringPointer_u8:	
  1202                           ; 1 bytes @ 0x4
  1203                           
  1204  0024                     UART_TxNumber@v_number_u32:	
  1205                           ; 2 bytes @ 0x4
  1206                           
  1207                           
  1208                           ; 4 bytes @ 0x4
  1209  0024                     	ds	1
  1210  0025                     LCD_SetUp@D3:	
  1211  0025                     LCD_Init@v_lcdNoOfLines_u8:	
  1212                           ; 1 bytes @ 0x5
  1213                           
  1214                           
  1215                           ; 1 bytes @ 0x5
  1216  0025                     	ds	1
  1217  0026                     LCD_SetUp@D4:	
  1218                           
  1219                           ; 1 bytes @ 0x6
  1220  0026                     	ds	1
  1221  0027                     LCD_SetUp@D5:	
  1222                           
  1223                           ; 1 bytes @ 0x7
  1224  0027                     	ds	1
  1225  0028                     LCD_SetUp@D6:	
  1226  0028                     UART_TxNumber@v_numOfDigitsToTransmit_u8:	
  1227                           ; 1 bytes @ 0x8
  1228                           
  1229                           
  1230                           ; 1 bytes @ 0x8
  1231  0028                     	ds	1
  1232  0029                     ??_UART_TxNumber:	
  1233  0029                     LCD_SetUp@D7:	
  1234                           ; 1 bytes @ 0x9
  1235                           
  1236  0029                     UART_SetBaudRate@RegValue:	
  1237                           ; 1 bytes @ 0x9
  1238                           
  1239                           
  1240                           ; 1 bytes @ 0x9
  1241  0029                     	ds	1
  1242  002A                     ??_lcd_Test:	
  1243  002A                     ?_UART_Init:	
  1244                           ; 1 bytes @ 0xA
  1245                           
  1246  002A                     UART_Init@v_baudRate_u32:	
  1247                           ; 1 bytes @ 0xA
  1248                           
  1249                           
  1250                           ; 4 bytes @ 0xA
  1251  002A                     	ds	11
  1252  0035                     UART_TxNumber@a:	
  1253                           
  1254                           ; 10 bytes @ 0x15
  1255  0035                     	ds	10
  1256  003F                     _UART_TxNumber$339:	
  1257                           
  1258                           ; 2 bytes @ 0x1F
  1259  003F                     	ds	2
  1260  0041                     UART_TxNumber@v_numericSystem_u8:	
  1261                           
  1262                           ; 1 bytes @ 0x21
  1263  0041                     	ds	1
  1264  0042                     UART_TxNumber@i:	
  1265                           
  1266                           ; 1 bytes @ 0x22
  1267  0042                     	ds	1
  1268  0043                     ?_UART_Printf:	
  1269  0043                     UART_Printf@argList:	
  1270                           ; 1 bytes @ 0x23
  1271                           
  1272                           
  1273                           ; 2 bytes @ 0x23
  1274  0043                     	ds	4
  1275  0047                     ??_UART_Printf:	
  1276                           
  1277                           ; 1 bytes @ 0x27
  1278  0047                     	ds	2
  1279  0049                     UART_Printf@str:	
  1280                           
  1281                           ; 1 bytes @ 0x29
  1282  0049                     	ds	1
  1283  004A                     UART_Printf@v_num_s32:	
  1284                           
  1285                           ; 4 bytes @ 0x2A
  1286  004A                     	ds	4
  1287  004E                     UART_Printf@v_num_s16:	
  1288                           
  1289                           ; 2 bytes @ 0x2E
  1290  004E                     	ds	2
  1291  0050                     UART_Printf@v_num_u32:	
  1292                           
  1293                           ; 4 bytes @ 0x30
  1294  0050                     	ds	4
  1295  0054                     UART_Printf@v_num_u16:	
  1296                           
  1297                           ; 2 bytes @ 0x34
  1298  0054                     	ds	2
  1299  0056                     UART_Printf@ptr:	
  1300                           
  1301                           ; 2 bytes @ 0x36
  1302  0056                     	ds	2
  1303  0058                     UART_Printf@ch:	
  1304                           
  1305                           ; 1 bytes @ 0x38
  1306  0058                     	ds	1
  1307  0059                     UART_Printf@v_numOfDigitsToTransmit_u8:	
  1308                           
  1309                           ; 1 bytes @ 0x39
  1310  0059                     	ds	1
  1311  005A                     UART_Printf@argp:	
  1312                           
  1313                           ; 1 bytes @ 0x3A
  1314  005A                     	ds	1
  1315  005B                     ??_eeprom_Test:	
  1316                           
  1317                           ; 1 bytes @ 0x3B
  1318  005B                     	ds	3
  1319  005E                     eeprom_Test@read_char:	
  1320                           
  1321                           ; 1 bytes @ 0x3E
  1322  005E                     	ds	1
  1323  005F                     eeprom_Test@eeprom_address:	
  1324                           
  1325                           ; 1 bytes @ 0x3F
  1326  005F                     	ds	1
  1327  0060                     eeprom_Test@write_char:	
  1328                           
  1329                           ; 1 bytes @ 0x40
  1330  0060                     	ds	1
  1331  0061                     ??_main:	
  1332                           
  1333                           ; 1 bytes @ 0x41
  1334  0061                     	ds	1
  1335  0062                     main@option:	
  1336                           
  1337                           ; 1 bytes @ 0x42
  1338  0062                     	ds	1
  1339                           
  1340                           	psect	maintext
  1341  0181                     __pmaintext:	
  1342 ;;
  1343 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1344 ;;
  1345 ;; *************** function _main *****************
  1346 ;; Defined at:
  1347 ;;		line 59 in file "main.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  option          1   66[BANK0 ] unsigned char 
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  2  455[None  ] int 
  1354 ;; Registers used:
  1355 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : B00/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1361 ;;      Params:         0       0       0       0       0
  1362 ;;      Locals:         0       1       0       0       0
  1363 ;;      Temps:          0       1       0       0       0
  1364 ;;      Totals:         0       2       0       0       0
  1365 ;;Total ram usage:        2 bytes
  1366 ;; Hardware stack levels required when called:    8
  1367 ;; This function calls:
  1368 ;;		_DELAY_ms
  1369 ;;		_GPIO_PinDirection
  1370 ;;		_GPIO_PinRead
  1371 ;;		_GPIO_PinWrite
  1372 ;;		_UART_Init
  1373 ;;		_UART_Printf
  1374 ;;		_UART_RxChar
  1375 ;;		_adc_Test
  1376 ;;		_eeprom_Test
  1377 ;;		_lcd_Test
  1378 ;;		_led_Test
  1379 ;;		_switch_Test
  1380 ;; This function is called by:
  1381 ;;		Startup code after reset
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           
  1386                           ;psect for function _main
  1387  0181                     _main:	
  1388                           
  1389                           ;main.c: 62: char option;
  1390                           ;main.c: 64: GPIO_PinDirection(PD_2,0x01u);
  1391                           
  1392                           ;incstack = 0
  1393                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1394  0181  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1395  0182  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  1396  0183  301A               	movlw	26
  1397  0184  120A  118A  2309  120A  118A  	fcall	_GPIO_PinDirection
  1398                           
  1399                           ;main.c: 65: GPIO_PinDirection(PD_3,0x01u);
  1400  0189  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1401  018A  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  1402  018B  301B               	movlw	27
  1403  018C  120A  118A  2309  120A  118A  	fcall	_GPIO_PinDirection
  1404                           
  1405                           ;main.c: 67: if((GPIO_PinRead(PD_2)==1) && (GPIO_PinRead(PD_3)==1))
  1406  0191  301A               	movlw	26
  1407  0192  120A  118A  2080  120A  118A  	fcall	_GPIO_PinRead
  1408  0197  3A01               	xorlw	1
  1409  0198  1D03               	skipz
  1410  0199  29E2               	goto	l2443
  1411  019A  301B               	movlw	27
  1412  019B  120A  118A  2080  120A  118A  	fcall	_GPIO_PinRead
  1413  01A0  3A01               	xorlw	1
  1414  01A1  1D03               	skipz
  1415  01A2  29E2               	goto	l2443
  1416                           
  1417                           ;main.c: 68: {
  1418                           ;main.c: 70: GPIO_PinDirection(PD_0,0x00u);
  1419  01A3  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1420  01A4  3018               	movlw	24
  1421  01A5  120A  118A  2309  120A  118A  	fcall	_GPIO_PinDirection
  1422                           
  1423                           ;main.c: 71: GPIO_PinDirection(PD_1,0x00u);
  1424  01AA  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1425  01AB  3019               	movlw	25
  1426  01AC  120A  118A  2309  120A  118A  	fcall	_GPIO_PinDirection
  1427  01B1                     l457:	
  1428                           ;main.c: 73: while(1)
  1429                           
  1430                           
  1431                           ;main.c: 74: {
  1432                           ;main.c: 75: GPIO_PinWrite(PD_0,1);
  1433  01B1  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  1434  01B2  0AF5               	incf	GPIO_PinWrite@var_pinValue_u8,f
  1435  01B3  3018               	movlw	24
  1436  01B4  120A  118A  23E2  120A  118A  	fcall	_GPIO_PinWrite
  1437                           
  1438                           ;main.c: 76: GPIO_PinWrite(PD_1,1);
  1439  01B9  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  1440  01BA  0AF5               	incf	GPIO_PinWrite@var_pinValue_u8,f
  1441  01BB  3019               	movlw	25
  1442  01BC  120A  118A  23E2  120A  118A  	fcall	_GPIO_PinWrite
  1443                           
  1444                           ;main.c: 77: DELAY_ms(200);
  1445  01C1  30C8               	movlw	200
  1446  01C2  00F2               	movwf	DELAY_ms@ms_count
  1447  01C3  3000               	movlw	0
  1448  01C4  00F3               	movwf	DELAY_ms@ms_count+1
  1449  01C5  120A  158A  2336  120A  118A  	fcall	_DELAY_ms
  1450                           
  1451                           ;main.c: 79: GPIO_PinWrite(PD_0,0);
  1452  01CA  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  1453  01CB  3018               	movlw	24
  1454  01CC  120A  118A  23E2  120A  118A  	fcall	_GPIO_PinWrite
  1455                           
  1456                           ;main.c: 80: GPIO_PinWrite(PD_1,0);
  1457  01D1  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  1458  01D2  3019               	movlw	25
  1459  01D3  120A  118A  23E2  120A  118A  	fcall	_GPIO_PinWrite
  1460                           
  1461                           ;main.c: 81: DELAY_ms(200);
  1462  01D8  30C8               	movlw	200
  1463  01D9  00F2               	movwf	DELAY_ms@ms_count
  1464  01DA  3000               	movlw	0
  1465  01DB  00F3               	movwf	DELAY_ms@ms_count+1
  1466  01DC  120A  158A  2336  120A  118A  	fcall	_DELAY_ms
  1467  01E1  29B1               	goto	l457
  1468  01E2                     l2443:	
  1469                           
  1470                           ;main.c: 82: }
  1471                           ;main.c: 83: }
  1472                           ;main.c: 86: UART_Init(9600);
  1473  01E2  3000               	movlw	0
  1474  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1475  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1476  01E5  00AD               	movwf	UART_Init@v_baudRate_u32+3
  1477  01E6  3000               	movlw	0
  1478  01E7  00AC               	movwf	UART_Init@v_baudRate_u32+2
  1479  01E8  3025               	movlw	37
  1480  01E9  00AB               	movwf	UART_Init@v_baudRate_u32+1
  1481  01EA  3080               	movlw	128
  1482  01EB  00AA               	movwf	UART_Init@v_baudRate_u32
  1483  01EC  120A  158A  234A  120A  118A  	fcall	_UART_Init
  1484                           
  1485                           ;main.c: 87: UART_Printf("\n\r\n\rStarter PIC test Menu\n\r 1.Led test\n\r 2.Lcd test\n\
      +                          r 3.Switch test\n\r 4.Adc Test\n\r 5.Eeprom Test \n\rSelect One of the above options");
  1486  01F1  3000               	movlw	low (STR_1| (0+32768))
  1487  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1488  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1489  01F4  00C3               	movwf	UART_Printf@argList
  1490  01F5  3088               	movlw	high (STR_1| (0+32768))
  1491  01F6  00C4               	movwf	UART_Printf@argList+1
  1492  01F7  120A  118A  25AD  120A  118A  	fcall	_UART_Printf
  1493                           
  1494                           ;main.c: 92: switch(option)
  1495  01FC  2A1A               	goto	l2447
  1496  01FD                     l2449:	
  1497                           ;main.c: 93: {
  1498                           ;main.c: 94: case '1':
  1499                           
  1500                           
  1501                           ;main.c: 95: led_Test();
  1502  01FD  120A  158A  27A1  120A  118A  	fcall	_led_Test
  1503                           
  1504                           ;main.c: 96: break;
  1505  0202  2A1A               	goto	l2447
  1506  0203                     l2451:	
  1507                           ;main.c: 98: case '2':
  1508                           
  1509                           
  1510                           ;main.c: 99: lcd_Test();
  1511  0203  120A  158A  2604  120A  118A  	fcall	_lcd_Test
  1512                           
  1513                           ;main.c: 100: break;
  1514  0208  2A1A               	goto	l2447
  1515  0209                     l2453:	
  1516                           ;main.c: 102: case '3':
  1517                           
  1518                           
  1519                           ;main.c: 103: switch_Test();
  1520  0209  120A  158A  25BE  120A  118A  	fcall	_switch_Test
  1521                           
  1522                           ;main.c: 104: break;
  1523  020E  2A1A               	goto	l2447
  1524  020F                     l2455:	
  1525                           ;main.c: 106: case '4':
  1526                           
  1527                           
  1528                           ;main.c: 107: adc_Test();
  1529  020F  120A  158A  2391  120A  118A  	fcall	_adc_Test
  1530                           
  1531                           ;main.c: 108: break;
  1532  0214  2A1A               	goto	l2447
  1533  0215                     l2457:	
  1534                           ;main.c: 110: case '5':
  1535                           
  1536                           
  1537                           ;main.c: 111: eeprom_Test();
  1538  0215  120A  118A  2016  120A  118A  	fcall	_eeprom_Test
  1539  021A                     l2447:	
  1540                           ;main.c: 89: while(1)
  1541                           
  1542                           ;main.c: 116: }
  1543                           
  1544                           ;main.c: 115: break;
  1545                           
  1546                           ;main.c: 114: default:
  1547                           
  1548                           ;main.c: 112: break;
  1549                           
  1550                           
  1551                           ;main.c: 90: {
  1552                           ;main.c: 91: option = UART_RxChar();
  1553  021A  120A  158A  22EE  120A  118A  	fcall	_UART_RxChar
  1554  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1555  0220  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0221  00E1               	movwf	??_main
  1557  0222  0861               	movf	??_main,w
  1558  0223  00E2               	movwf	main@option
  1559  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1560  0225  1303               	bcf	3,6	;RP1=0, select bank0
  1561  0226  0862               	movf	main@option,w
  1562                           
  1563                           ; Switch size 1, requested type "space"
  1564                           ; Number of cases is 5, Range of values is 49 to 53
  1565                           ; switch strategies available:
  1566                           ; Name         Instructions Cycles
  1567                           ; simple_byte           16     9 (average)
  1568                           ; direct_byte           26    11 (fixed)
  1569                           ; jumptable            263     9 (fixed)
  1570                           ;	Chosen strategy is simple_byte
  1571  0227  3A31               	xorlw	49	; case 49
  1572  0228  1903               	skipnz
  1573  0229  29FD               	goto	l2449
  1574  022A  3A03               	xorlw	3	; case 50
  1575  022B  1903               	skipnz
  1576  022C  2A03               	goto	l2451
  1577  022D  3A01               	xorlw	1	; case 51
  1578  022E  1903               	skipnz
  1579  022F  2A09               	goto	l2453
  1580  0230  3A07               	xorlw	7	; case 52
  1581  0231  1903               	skipnz
  1582  0232  2A0F               	goto	l2455
  1583  0233  3A01               	xorlw	1	; case 53
  1584  0234  1903               	skipnz
  1585  0235  2A15               	goto	l2457
  1586  0236  2A1A               	goto	l2447
  1587  0237  2A1A               	goto	l2447
  1588  0238                     __end_of_main:	
  1589                           ;main.c: 117: }
  1590                           ;main.c: 118: return (0);
  1591                           ;	Return value of _main is never used
  1592                           
  1593                           
  1594                           	psect	text1
  1595  0DBE                     __ptext1:	
  1596 ;; *************** function _switch_Test *****************
  1597 ;; Defined at:
  1598 ;;		line 178 in file "main.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;		None
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;		None
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1612 ;;      Params:         0       0       0       0       0
  1613 ;;      Locals:         0       0       0       0       0
  1614 ;;      Temps:          1       0       0       0       0
  1615 ;;      Totals:         1       0       0       0       0
  1616 ;;Total ram usage:        1 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    2
  1619 ;; This function calls:
  1620 ;;		_GPIO_PinDirection
  1621 ;;		_GPIO_PinRead
  1622 ;;		_GPIO_PinWrite
  1623 ;;		_UART_TxString
  1624 ;; This function is called by:
  1625 ;;		_main
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           
  1630                           ;psect for function _switch_Test
  1631  0DBE                     _switch_Test:	
  1632                           
  1633                           ;main.c: 180: GPIO_PinDirection(PD_0,0x00u);
  1634                           
  1635                           ;incstack = 0
  1636                           ; Regs used in _switch_Test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1637  0DBE  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1638  0DBF  3018               	movlw	24
  1639  0DC0  120A  118A  2309  120A  158A  	fcall	_GPIO_PinDirection
  1640                           
  1641                           ;main.c: 181: GPIO_PinDirection(PD_1,0x00u);
  1642  0DC5  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1643  0DC6  3019               	movlw	25
  1644  0DC7  120A  118A  2309  120A  158A  	fcall	_GPIO_PinDirection
  1645                           
  1646                           ;main.c: 182: GPIO_PinDirection(PD_2,0x01u);
  1647  0DCC  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1648  0DCD  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  1649  0DCE  301A               	movlw	26
  1650  0DCF  120A  118A  2309  120A  158A  	fcall	_GPIO_PinDirection
  1651                           
  1652                           ;main.c: 183: GPIO_PinDirection(PD_3,0x01u);
  1653  0DD4  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1654  0DD5  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  1655  0DD6  301B               	movlw	27
  1656  0DD7  120A  118A  2309  120A  158A  	fcall	_GPIO_PinDirection
  1657                           
  1658                           ;main.c: 184: UART_TxString("\n\n\n\rPress the switches and observe the output on Leds")
      +                          ;
  1659  0DDC  30C8               	movlw	low (STR_3| (0+32768))
  1660  0DDD  00F1               	movwf	UART_TxString@ptr_string
  1661  0DDE  3088               	movlw	high (STR_3| (0+32768))
  1662  0DDF  00F2               	movwf	UART_TxString@ptr_string+1
  1663  0DE0  120A  158A  23AE  120A  158A  	fcall	_UART_TxString
  1664  0DE5                     l2355:	
  1665                           ;main.c: 186: while(1)
  1666                           
  1667                           
  1668                           ;main.c: 187: {
  1669                           ;main.c: 188: GPIO_PinWrite(PD_0,GPIO_PinRead(PD_2));
  1670  0DE5  301A               	movlw	26
  1671  0DE6  120A  118A  2080  120A  158A  	fcall	_GPIO_PinRead
  1672  0DEB  00FA               	movwf	??_switch_Test
  1673  0DEC  087A               	movf	??_switch_Test,w
  1674  0DED  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  1675  0DEE  3018               	movlw	24
  1676  0DEF  120A  118A  23E2  120A  158A  	fcall	_GPIO_PinWrite
  1677                           
  1678                           ;main.c: 189: GPIO_PinWrite(PD_1,GPIO_PinRead(PD_3));
  1679  0DF4  301B               	movlw	27
  1680  0DF5  120A  118A  2080  120A  158A  	fcall	_GPIO_PinRead
  1681  0DFA  00FA               	movwf	??_switch_Test
  1682  0DFB  087A               	movf	??_switch_Test,w
  1683  0DFC  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  1684  0DFD  3019               	movlw	25
  1685  0DFE  120A  118A  23E2  120A  158A  	fcall	_GPIO_PinWrite
  1686  0E03  2DE5               	goto	l2355
  1687  0E04                     __end_of_switch_Test:	
  1688                           
  1689                           	psect	text2
  1690  0FA1                     __ptext2:	
  1691 ;; *************** function _led_Test *****************
  1692 ;; Defined at:
  1693 ;;		line 122 in file "main.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  pattern         2    6[COMMON] int 
  1698 ;;  i               2    4[COMMON] int 
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      void 
  1701 ;; Registers used:
  1702 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1708 ;;      Params:         0       0       0       0       0
  1709 ;;      Locals:         4       0       0       0       0
  1710 ;;      Temps:          0       0       0       0       0
  1711 ;;      Totals:         4       0       0       0       0
  1712 ;;Total ram usage:        4 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; Hardware stack levels required when called:    2
  1715 ;; This function calls:
  1716 ;;		_DELAY_ms
  1717 ;; This function is called by:
  1718 ;;		_main
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           
  1723                           ;psect for function _led_Test
  1724  0FA1                     _led_Test:	
  1725                           
  1726                           ;main.c: 124: int i,pattern;
  1727                           ;main.c: 125: TRISA = 0x00u;
  1728                           
  1729                           ;incstack = 0
  1730                           ; Regs used in _led_Test: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1731  0FA1  1683               	bsf	3,5	;RP0=1, select bank1
  1732  0FA2  1303               	bcf	3,6	;RP1=0, select bank1
  1733  0FA3  0185               	clrf	5	;volatile
  1734                           
  1735                           ;main.c: 126: TRISB = 0x00u;
  1736  0FA4  0186               	clrf	6	;volatile
  1737                           
  1738                           ;main.c: 127: TRISC = 0x00u;
  1739  0FA5  0187               	clrf	7	;volatile
  1740                           
  1741                           ;main.c: 128: TRISD = 0x00u;
  1742  0FA6  0188               	clrf	8	;volatile
  1743                           
  1744                           ;main.c: 129: TRISE = 0x00u;
  1745  0FA7  0189               	clrf	9	;volatile
  1746  0FA8                     l2307:	
  1747                           ;main.c: 131: while(1)
  1748                           
  1749                           
  1750                           ;main.c: 132: {
  1751                           ;main.c: 134: PORTA = 0xff;
  1752  0FA8  30FF               	movlw	255
  1753  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0FAB  0085               	movwf	5	;volatile
  1756                           
  1757                           ;main.c: 135: PORTB = 0xff;
  1758  0FAC  30FF               	movlw	255
  1759  0FAD  0086               	movwf	6	;volatile
  1760                           
  1761                           ;main.c: 136: PORTC = 0xff;
  1762  0FAE  30FF               	movlw	255
  1763  0FAF  0087               	movwf	7	;volatile
  1764                           
  1765                           ;main.c: 137: PORTD = 0xff;
  1766  0FB0  30FF               	movlw	255
  1767  0FB1  0088               	movwf	8	;volatile
  1768                           
  1769                           ;main.c: 138: PORTE = 0xff;
  1770  0FB2  30FF               	movlw	255
  1771  0FB3  0089               	movwf	9	;volatile
  1772                           
  1773                           ;main.c: 139: DELAY_ms(500);
  1774  0FB4  30F4               	movlw	244
  1775  0FB5  00F2               	movwf	DELAY_ms@ms_count
  1776  0FB6  3001               	movlw	1
  1777  0FB7  00F3               	movwf	DELAY_ms@ms_count+1
  1778  0FB8  120A  158A  2336  120A  158A  	fcall	_DELAY_ms
  1779                           
  1780                           ;main.c: 141: PORTA = 0x00;
  1781  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  1782  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  1783  0FBF  0185               	clrf	5	;volatile
  1784                           
  1785                           ;main.c: 142: PORTB = 0x00;
  1786  0FC0  0186               	clrf	6	;volatile
  1787                           
  1788                           ;main.c: 143: PORTC = 0x00;
  1789  0FC1  0187               	clrf	7	;volatile
  1790                           
  1791                           ;main.c: 144: PORTD = 0x00;
  1792  0FC2  0188               	clrf	8	;volatile
  1793                           
  1794                           ;main.c: 145: PORTE = 0xff;
  1795  0FC3  30FF               	movlw	255
  1796  0FC4  0089               	movwf	9	;volatile
  1797                           
  1798                           ;main.c: 146: DELAY_ms(500);
  1799  0FC5  30F4               	movlw	244
  1800  0FC6  00F2               	movwf	DELAY_ms@ms_count
  1801  0FC7  3001               	movlw	1
  1802  0FC8  00F3               	movwf	DELAY_ms@ms_count+1
  1803  0FC9  120A  158A  2336  120A  158A  	fcall	_DELAY_ms
  1804                           
  1805                           ;main.c: 148: pattern=0x01;
  1806  0FCE  3001               	movlw	1
  1807  0FCF  00F6               	movwf	led_Test@pattern
  1808  0FD0  3000               	movlw	0
  1809  0FD1  00F7               	movwf	led_Test@pattern+1
  1810                           
  1811                           ;main.c: 149: for(i=0;i<8;i++)
  1812  0FD2  01F4               	clrf	led_Test@i
  1813  0FD3  01F5               	clrf	led_Test@i+1
  1814  0FD4                     L1:	
  1815  0FD4  0875               	movf	led_Test@i+1,w
  1816  0FD5  3A80               	xorlw	128
  1817  0FD6  00FF               	movwf	127
  1818  0FD7  3080               	movlw	128
  1819  0FD8  027F               	subwf	127,w
  1820  0FD9  1D03               	skipz
  1821  0FDA  2FDD               	goto	u2745
  1822  0FDB  3008               	movlw	8
  1823  0FDC  0274               	subwf	led_Test@i,w
  1824  0FDD                     u2745:	
  1825  0FDD  1803               	btfsc	3,0
  1826  0FDE  2FA8               	goto	l2307
  1827                           
  1828                           ;main.c: 150: {
  1829                           ;main.c: 151: PORTA = pattern;
  1830  0FDF  0876               	movf	led_Test@pattern,w
  1831  0FE0  1283               	bcf	3,5	;RP0=0, select bank0
  1832  0FE1  1303               	bcf	3,6	;RP1=0, select bank0
  1833  0FE2  0085               	movwf	5	;volatile
  1834                           
  1835                           ;main.c: 152: PORTB = pattern;
  1836  0FE3  0876               	movf	led_Test@pattern,w
  1837  0FE4  0086               	movwf	6	;volatile
  1838                           
  1839                           ;main.c: 153: PORTC = pattern;
  1840  0FE5  0876               	movf	led_Test@pattern,w
  1841  0FE6  0087               	movwf	7	;volatile
  1842                           
  1843                           ;main.c: 154: PORTD = pattern;
  1844  0FE7  0876               	movf	led_Test@pattern,w
  1845  0FE8  0088               	movwf	8	;volatile
  1846                           
  1847                           ;main.c: 155: PORTE = pattern;
  1848  0FE9  0876               	movf	led_Test@pattern,w
  1849  0FEA  0089               	movwf	9	;volatile
  1850                           
  1851                           ;main.c: 156: pattern = pattern<<1;
  1852  0FEB  1003               	clrc
  1853  0FEC  0D76               	rlf	led_Test@pattern,w
  1854  0FED  00F6               	movwf	led_Test@pattern
  1855  0FEE  0D77               	rlf	led_Test@pattern+1,w
  1856  0FEF  00F7               	movwf	led_Test@pattern+1
  1857                           
  1858                           ;main.c: 157: DELAY_ms(200);
  1859  0FF0  30C8               	movlw	200
  1860  0FF1  00F2               	movwf	DELAY_ms@ms_count
  1861  0FF2  3000               	movlw	0
  1862  0FF3  00F3               	movwf	DELAY_ms@ms_count+1
  1863  0FF4  120A  158A  2336  120A  158A  	fcall	_DELAY_ms
  1864  0FF9  3001               	movlw	1
  1865  0FFA  07F4               	addwf	led_Test@i,f
  1866  0FFB  1803               	skipnc
  1867  0FFC  0AF5               	incf	led_Test@i+1,f
  1868  0FFD  3000               	movlw	0
  1869  0FFE  07F5               	addwf	led_Test@i+1,f
  1870  0FFF  2FD4               	goto	L1
  1871  1000                     __end_of_led_Test:	
  1872                           
  1873                           	psect	text3
  1874  0E04                     __ptext3:	
  1875 ;; *************** function _lcd_Test *****************
  1876 ;; Defined at:
  1877 ;;		line 165 in file "main.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;		None
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1891 ;;      Params:         0       0       0       0       0
  1892 ;;      Locals:         0       0       0       0       0
  1893 ;;      Temps:          0      10       0       0       0
  1894 ;;      Totals:         0      10       0       0       0
  1895 ;;Total ram usage:       10 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; Hardware stack levels required when called:    7
  1898 ;; This function calls:
  1899 ;;		_LCD_DisplayString
  1900 ;;		_LCD_Init
  1901 ;;		_LCD_SetUp
  1902 ;; This function is called by:
  1903 ;;		_main
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           
  1908                           ;psect for function _lcd_Test
  1909  0E04                     _lcd_Test:	
  1910                           
  1911                           ;main.c: 167: LCD_SetUp(PB_0,PB_1,PB_2,P_NC,P_NC,P_NC,P_NC,PB_4,PB_5,PB_6,PB_7);
  1912                           
  1913                           ;incstack = 0
  1914                           ; Regs used in _lcd_Test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1915  0E04  3009               	movlw	9
  1916  0E05  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0E06  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0E07  00AA               	movwf	??_lcd_Test
  1919  0E08  082A               	movf	??_lcd_Test,w
  1920  0E09  00A0               	movwf	LCD_SetUp@RW
  1921  0E0A  300A               	movlw	10
  1922  0E0B  00AB               	movwf	??_lcd_Test+1
  1923  0E0C  082B               	movf	??_lcd_Test+1,w
  1924  0E0D  00A1               	movwf	LCD_SetUp@EN
  1925  0E0E  30FF               	movlw	255
  1926  0E0F  00AC               	movwf	??_lcd_Test+2
  1927  0E10  082C               	movf	??_lcd_Test+2,w
  1928  0E11  00A2               	movwf	LCD_SetUp@D0
  1929  0E12  30FF               	movlw	255
  1930  0E13  00AD               	movwf	??_lcd_Test+3
  1931  0E14  082D               	movf	??_lcd_Test+3,w
  1932  0E15  00A3               	movwf	LCD_SetUp@D1
  1933  0E16  30FF               	movlw	255
  1934  0E17  00AE               	movwf	??_lcd_Test+4
  1935  0E18  082E               	movf	??_lcd_Test+4,w
  1936  0E19  00A4               	movwf	LCD_SetUp@D2
  1937  0E1A  30FF               	movlw	255
  1938  0E1B  00AF               	movwf	??_lcd_Test+5
  1939  0E1C  082F               	movf	??_lcd_Test+5,w
  1940  0E1D  00A5               	movwf	LCD_SetUp@D3
  1941  0E1E  300C               	movlw	12
  1942  0E1F  00B0               	movwf	??_lcd_Test+6
  1943  0E20  0830               	movf	??_lcd_Test+6,w
  1944  0E21  00A6               	movwf	LCD_SetUp@D4
  1945  0E22  300D               	movlw	13
  1946  0E23  00B1               	movwf	??_lcd_Test+7
  1947  0E24  0831               	movf	??_lcd_Test+7,w
  1948  0E25  00A7               	movwf	LCD_SetUp@D5
  1949  0E26  300E               	movlw	14
  1950  0E27  00B2               	movwf	??_lcd_Test+8
  1951  0E28  0832               	movf	??_lcd_Test+8,w
  1952  0E29  00A8               	movwf	LCD_SetUp@D6
  1953  0E2A  300F               	movlw	15
  1954  0E2B  00B3               	movwf	??_lcd_Test+9
  1955  0E2C  0833               	movf	??_lcd_Test+9,w
  1956  0E2D  00A9               	movwf	LCD_SetUp@D7
  1957  0E2E  3008               	movlw	8
  1958  0E2F  120A  118A  2238  120A  158A  	fcall	_LCD_SetUp
  1959                           
  1960                           ;main.c: 168: LCD_Init(2,16);
  1961  0E34  3010               	movlw	16
  1962  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0E36  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0E37  00AA               	movwf	??_lcd_Test
  1965  0E38  082A               	movf	??_lcd_Test,w
  1966  0E39  00A3               	movwf	LCD_Init@v_MaxCharsPerLine_u8
  1967  0E3A  3002               	movlw	2
  1968  0E3B  120A  158A  269B  120A  158A  	fcall	_LCD_Init
  1969                           
  1970                           ;main.c: 169: LCD_DisplayString("Explore\n Starter Pic...");
  1971  0E40  30FE               	movlw	low (STR_2| (0+32768))
  1972  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  1973  0E42  1303               	bcf	3,6	;RP1=0, select bank0
  1974  0E43  00A4               	movwf	LCD_DisplayString@ptr_stringPointer_u8
  1975  0E44  3088               	movlw	high (STR_2| (0+32768))
  1976  0E45  00A5               	movwf	LCD_DisplayString@ptr_stringPointer_u8+1
  1977  0E46  120A  158A  241A  120A  158A  	fcall	_LCD_DisplayString
  1978  0E4B                     l482:	
  1979                           ;main.c: 171: while(1);
  1980                           
  1981  0E4B  2E4B               	goto	l482
  1982  0E4C                     __end_of_lcd_Test:	
  1983                           
  1984                           	psect	text4
  1985  0238                     __ptext4:	
  1986 ;; *************** function _LCD_SetUp *****************
  1987 ;; Defined at:
  1988 ;;		line 135 in file "../00-libfiles/lcd.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  RS              1    wreg     enum E33
  1991 ;;  RW              1    0[BANK0 ] enum E33
  1992 ;;  EN              1    1[BANK0 ] enum E33
  1993 ;;  D0              1    2[BANK0 ] enum E33
  1994 ;;  D1              1    3[BANK0 ] enum E33
  1995 ;;  D2              1    4[BANK0 ] enum E33
  1996 ;;  D3              1    5[BANK0 ] enum E33
  1997 ;;  D4              1    6[BANK0 ] enum E33
  1998 ;;  D5              1    7[BANK0 ] enum E33
  1999 ;;  D6              1    8[BANK0 ] enum E33
  2000 ;;  D7              1    9[BANK0 ] enum E33
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  RS              1    6[COMMON] enum E33
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2012 ;;      Params:         0      10       0       0       0
  2013 ;;      Locals:         1       0       0       0       0
  2014 ;;      Temps:          1       0       0       0       0
  2015 ;;      Totals:         2      10       0       0       0
  2016 ;;Total ram usage:       12 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    1
  2019 ;; This function calls:
  2020 ;;		_GPIO_PinDirection
  2021 ;; This function is called by:
  2022 ;;		_lcd_Test
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           
  2027                           ;psect for function _LCD_SetUp
  2028  0238                     _LCD_SetUp:	
  2029                           
  2030                           ;incstack = 0
  2031                           ; Regs used in _LCD_SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2032                           ;LCD_SetUp@RS stored from wreg
  2033  0238  00F6               	movwf	LCD_SetUp@RS
  2034                           
  2035                           ;lcd.c: 148: LCDConfig.RS = RS;
  2036  0239  0876               	movf	LCD_SetUp@RS,w
  2037  023A  00F5               	movwf	??_LCD_SetUp
  2038  023B  0875               	movf	??_LCD_SetUp,w
  2039  023C  1683               	bsf	3,5	;RP0=1, select bank1
  2040  023D  1303               	bcf	3,6	;RP1=0, select bank1
  2041  023E  00A3               	movwf	(_LCDConfig^(0+128)+3)
  2042                           
  2043                           ;lcd.c: 149: LCDConfig.RW = RW;
  2044  023F  1283               	bcf	3,5	;RP0=0, select bank0
  2045  0240  1303               	bcf	3,6	;RP1=0, select bank0
  2046  0241  0820               	movf	LCD_SetUp@RW,w
  2047  0242  00F5               	movwf	??_LCD_SetUp
  2048  0243  0875               	movf	??_LCD_SetUp,w
  2049  0244  1683               	bsf	3,5	;RP0=1, select bank1
  2050  0245  1303               	bcf	3,6	;RP1=0, select bank1
  2051  0246  00A4               	movwf	(_LCDConfig^(0+128)+4)
  2052                           
  2053                           ;lcd.c: 150: LCDConfig.EN = EN;
  2054  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2055  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2056  0249  0821               	movf	LCD_SetUp@EN,w
  2057  024A  00F5               	movwf	??_LCD_SetUp
  2058  024B  0875               	movf	??_LCD_SetUp,w
  2059  024C  1683               	bsf	3,5	;RP0=1, select bank1
  2060  024D  1303               	bcf	3,6	;RP1=0, select bank1
  2061  024E  00A5               	movwf	(_LCDConfig^(0+128)+5)
  2062                           
  2063                           ;lcd.c: 152: LCDConfig.D0 = D0;
  2064  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2065  0250  1303               	bcf	3,6	;RP1=0, select bank0
  2066  0251  0822               	movf	LCD_SetUp@D0,w
  2067  0252  00F5               	movwf	??_LCD_SetUp
  2068  0253  0875               	movf	??_LCD_SetUp,w
  2069  0254  1683               	bsf	3,5	;RP0=1, select bank1
  2070  0255  1303               	bcf	3,6	;RP1=0, select bank1
  2071  0256  00A6               	movwf	(_LCDConfig^(0+128)+6)
  2072                           
  2073                           ;lcd.c: 153: LCDConfig.D1 = D1;
  2074  0257  1283               	bcf	3,5	;RP0=0, select bank0
  2075  0258  1303               	bcf	3,6	;RP1=0, select bank0
  2076  0259  0823               	movf	LCD_SetUp@D1,w
  2077  025A  00F5               	movwf	??_LCD_SetUp
  2078  025B  0875               	movf	??_LCD_SetUp,w
  2079  025C  1683               	bsf	3,5	;RP0=1, select bank1
  2080  025D  1303               	bcf	3,6	;RP1=0, select bank1
  2081  025E  00A7               	movwf	(_LCDConfig^(0+128)+7)
  2082                           
  2083                           ;lcd.c: 154: LCDConfig.D2 = D2;
  2084  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2086  0261  0824               	movf	LCD_SetUp@D2,w
  2087  0262  00F5               	movwf	??_LCD_SetUp
  2088  0263  0875               	movf	??_LCD_SetUp,w
  2089  0264  1683               	bsf	3,5	;RP0=1, select bank1
  2090  0265  1303               	bcf	3,6	;RP1=0, select bank1
  2091  0266  00A8               	movwf	(_LCDConfig^(0+128)+8)
  2092                           
  2093                           ;lcd.c: 155: LCDConfig.D3 = D3;
  2094  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2095  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2096  0269  0825               	movf	LCD_SetUp@D3,w
  2097  026A  00F5               	movwf	??_LCD_SetUp
  2098  026B  0875               	movf	??_LCD_SetUp,w
  2099  026C  1683               	bsf	3,5	;RP0=1, select bank1
  2100  026D  1303               	bcf	3,6	;RP1=0, select bank1
  2101  026E  00A9               	movwf	(_LCDConfig^(0+128)+9)
  2102                           
  2103                           ;lcd.c: 156: LCDConfig.D4 = D4;
  2104  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0270  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0271  0826               	movf	LCD_SetUp@D4,w
  2107  0272  00F5               	movwf	??_LCD_SetUp
  2108  0273  0875               	movf	??_LCD_SetUp,w
  2109  0274  1683               	bsf	3,5	;RP0=1, select bank1
  2110  0275  1303               	bcf	3,6	;RP1=0, select bank1
  2111  0276  00AA               	movwf	(_LCDConfig^(0+128)+10)
  2112                           
  2113                           ;lcd.c: 157: LCDConfig.D5 = D5;
  2114  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2115  0278  1303               	bcf	3,6	;RP1=0, select bank0
  2116  0279  0827               	movf	LCD_SetUp@D5,w
  2117  027A  00F5               	movwf	??_LCD_SetUp
  2118  027B  0875               	movf	??_LCD_SetUp,w
  2119  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2120  027D  1303               	bcf	3,6	;RP1=0, select bank1
  2121  027E  00AB               	movwf	(_LCDConfig^(0+128)+11)
  2122                           
  2123                           ;lcd.c: 158: LCDConfig.D6 = D6;
  2124  027F  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0280  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0281  0828               	movf	LCD_SetUp@D6,w
  2127  0282  00F5               	movwf	??_LCD_SetUp
  2128  0283  0875               	movf	??_LCD_SetUp,w
  2129  0284  1683               	bsf	3,5	;RP0=1, select bank1
  2130  0285  1303               	bcf	3,6	;RP1=0, select bank1
  2131  0286  00AC               	movwf	(_LCDConfig^(0+128)+12)
  2132                           
  2133                           ;lcd.c: 159: LCDConfig.D7 = D7;
  2134  0287  1283               	bcf	3,5	;RP0=0, select bank0
  2135  0288  1303               	bcf	3,6	;RP1=0, select bank0
  2136  0289  0829               	movf	LCD_SetUp@D7,w
  2137  028A  00F5               	movwf	??_LCD_SetUp
  2138  028B  0875               	movf	??_LCD_SetUp,w
  2139  028C  1683               	bsf	3,5	;RP0=1, select bank1
  2140  028D  1303               	bcf	3,6	;RP1=0, select bank1
  2141  028E  00AD               	movwf	(_LCDConfig^(0+128)+13)
  2142                           
  2143                           ;lcd.c: 162: if((D0 == P_NC) || (D1 == P_NC) || (D2 == P_NC) || (D3 == P_NC))
  2144  028F  1283               	bcf	3,5	;RP0=0, select bank0
  2145  0290  1303               	bcf	3,6	;RP1=0, select bank0
  2146  0291  0A22               	incf	LCD_SetUp@D0,w
  2147  0292  1903               	btfsc	3,2
  2148  0293  2A9C               	goto	l2117
  2149  0294  0A23               	incf	LCD_SetUp@D1,w
  2150  0295  1903               	btfsc	3,2
  2151  0296  2A9C               	goto	l2117
  2152  0297  0A24               	incf	LCD_SetUp@D2,w
  2153  0298  1D03               	btfss	3,2
  2154  0299  0A25               	incf	LCD_SetUp@D3,w
  2155  029A  1D03               	btfss	3,2
  2156  029B  2AA3               	goto	l2119
  2157  029C                     l2117:	
  2158                           
  2159                           ;lcd.c: 163: {
  2160                           ;lcd.c: 164: LCDConfig.v_LcdMode_U8 = 4;
  2161  029C  3004               	movlw	4
  2162  029D  00F5               	movwf	??_LCD_SetUp
  2163  029E  0875               	movf	??_LCD_SetUp,w
  2164  029F  1683               	bsf	3,5	;RP0=1, select bank1
  2165  02A0  1303               	bcf	3,6	;RP1=0, select bank1
  2166  02A1  00A2               	movwf	(_LCDConfig^(0+128)+2)
  2167                           
  2168                           ;lcd.c: 165: }
  2169  02A2  2ACD               	goto	l2129
  2170  02A3                     l2119:	
  2171                           
  2172                           ;lcd.c: 166: else
  2173                           ;lcd.c: 167: {
  2174                           ;lcd.c: 168: LCDConfig.v_LcdMode_U8 = 8;
  2175  02A3  3008               	movlw	8
  2176  02A4  00F5               	movwf	??_LCD_SetUp
  2177  02A5  0875               	movf	??_LCD_SetUp,w
  2178  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  2179  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  2180  02A8  00A2               	movwf	(_LCDConfig^(0+128)+2)
  2181                           
  2182                           ;lcd.c: 169: GPIO_PinDirection(D0,0x00u);
  2183  02A9  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2184  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2185  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  2186  02AC  0822               	movf	LCD_SetUp@D0,w
  2187  02AD  120A  118A  2309  120A  118A  	fcall	_GPIO_PinDirection
  2188                           
  2189                           ;lcd.c: 170: GPIO_PinDirection(D1,0x00u);
  2190  02B2  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2191  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2192  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  2193  02B5  0823               	movf	LCD_SetUp@D1,w
  2194  02B6  120A  118A  2309  120A  118A  	fcall	_GPIO_PinDirection
  2195                           
  2196                           ;lcd.c: 171: GPIO_PinDirection(D2,0x00u);
  2197  02BB  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2198  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2199  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2200  02BE  0824               	movf	LCD_SetUp@D2,w
  2201  02BF  120A  118A  2309  120A  118A  	fcall	_GPIO_PinDirection
  2202                           
  2203                           ;lcd.c: 172: GPIO_PinDirection(D3,0x00u);
  2204  02C4  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2205  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2206  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  2207  02C7  0825               	movf	LCD_SetUp@D3,w
  2208  02C8  120A  118A  2309  120A  118A  	fcall	_GPIO_PinDirection
  2209  02CD                     l2129:	
  2210                           
  2211                           ;lcd.c: 173: }
  2212                           ;lcd.c: 176: GPIO_PinDirection(RS,0x00u);
  2213  02CD  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2214  02CE  0876               	movf	LCD_SetUp@RS,w
  2215  02CF  120A  118A  2309  120A  118A  	fcall	_GPIO_PinDirection
  2216                           
  2217                           ;lcd.c: 177: GPIO_PinDirection(RW,0x00u);
  2218  02D4  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2219  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2220  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2221  02D7  0820               	movf	LCD_SetUp@RW,w
  2222  02D8  120A  118A  2309  120A  118A  	fcall	_GPIO_PinDirection
  2223                           
  2224                           ;lcd.c: 178: GPIO_PinDirection(EN,0x00u);
  2225  02DD  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2226  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2227  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  2228  02E0  0821               	movf	LCD_SetUp@EN,w
  2229  02E1  120A  118A  2309  120A  118A  	fcall	_GPIO_PinDirection
  2230                           
  2231                           ;lcd.c: 180: GPIO_PinDirection(D4,0x00u);
  2232  02E6  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2233  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2234  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2235  02E9  0826               	movf	LCD_SetUp@D4,w
  2236  02EA  120A  118A  2309  120A  118A  	fcall	_GPIO_PinDirection
  2237                           
  2238                           ;lcd.c: 181: GPIO_PinDirection(D5,0x00u);
  2239  02EF  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2240  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2241  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2242  02F2  0827               	movf	LCD_SetUp@D5,w
  2243  02F3  120A  118A  2309  120A  118A  	fcall	_GPIO_PinDirection
  2244                           
  2245                           ;lcd.c: 182: GPIO_PinDirection(D6,0x00u);
  2246  02F8  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2247  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2248  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2249  02FB  0828               	movf	LCD_SetUp@D6,w
  2250  02FC  120A  118A  2309  120A  118A  	fcall	_GPIO_PinDirection
  2251                           
  2252                           ;lcd.c: 183: GPIO_PinDirection(D7,0x00u);
  2253  0301  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2254  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2255  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2256  0304  0829               	movf	LCD_SetUp@D7,w
  2257  0305  120A  118A  2309   	fcall	_GPIO_PinDirection
  2258  0308  0008               	return
  2259  0309                     __end_of_LCD_SetUp:	
  2260                           
  2261                           	psect	text5
  2262  0E9B                     __ptext5:	
  2263 ;; *************** function _LCD_Init *****************
  2264 ;; Defined at:
  2265 ;;		line 198 in file "../00-libfiles/lcd.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  v_lcdNoOfLin    1    wreg     unsigned char 
  2268 ;;  v_MaxCharsPe    1    3[BANK0 ] unsigned char 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  v_lcdNoOfLin    1    5[BANK0 ] unsigned char 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      void 
  2273 ;; Registers used:
  2274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2280 ;;      Params:         0       1       0       0       0
  2281 ;;      Locals:         0       1       0       0       0
  2282 ;;      Temps:          0       1       0       0       0
  2283 ;;      Totals:         0       3       0       0       0
  2284 ;;Total ram usage:        3 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    6
  2287 ;; This function calls:
  2288 ;;		_DELAY_ms
  2289 ;;		_LCD_Clear
  2290 ;;		_LCD_CmdWrite
  2291 ;;		_lcd_Reset
  2292 ;; This function is called by:
  2293 ;;		_lcd_Test
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           
  2298                           ;psect for function _LCD_Init
  2299  0E9B                     _LCD_Init:	
  2300                           
  2301                           ;incstack = 0
  2302                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2303                           ;LCD_Init@v_lcdNoOfLines_u8 stored from wreg
  2304  0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  2305  0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  2306  0E9D  00A5               	movwf	LCD_Init@v_lcdNoOfLines_u8
  2307                           
  2308                           ;lcd.c: 202: LCDConfig.v_MaxSupportedChars_U8 = v_MaxCharsPerLine_u8;
  2309  0E9E  0823               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  2310  0E9F  00A4               	movwf	??_LCD_Init
  2311  0EA0  0824               	movf	??_LCD_Init,w
  2312  0EA1  1683               	bsf	3,5	;RP0=1, select bank1
  2313  0EA2  1303               	bcf	3,6	;RP1=0, select bank1
  2314  0EA3  00A1               	movwf	(_LCDConfig^(0+128)+1)
  2315                           
  2316                           ;lcd.c: 203: LCDConfig.v_MaxSupportedLines_U8 = v_lcdNoOfLines_u8;
  2317  0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  2318  0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  2319  0EA6  0825               	movf	LCD_Init@v_lcdNoOfLines_u8,w
  2320  0EA7  00A4               	movwf	??_LCD_Init
  2321  0EA8  0824               	movf	??_LCD_Init,w
  2322  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  2323  0EAA  1303               	bcf	3,6	;RP1=0, select bank1
  2324  0EAB  00A0               	movwf	_LCDConfig^(0+128)
  2325                           
  2326                           ;lcd.c: 204: if(v_lcdNoOfLines_u8 > 0x02)
  2327  0EAC  3003               	movlw	3
  2328  0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  2330  0EAF  0225               	subwf	LCD_Init@v_lcdNoOfLines_u8,w
  2331  0EB0  1C03               	skipc
  2332  0EB1  2EBE               	goto	l2147
  2333                           
  2334                           ;lcd.c: 205: {
  2335                           ;lcd.c: 206: ARR_LcdLineNumAddress_U8[0x02] = 0x90 + (v_MaxCharsPerLine_u8 & 0x0fu);
  2336  0EB2  0823               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  2337  0EB3  390F               	andlw	15
  2338  0EB4  3E90               	addlw	144
  2339  0EB5  00A4               	movwf	??_LCD_Init
  2340  0EB6  0824               	movf	??_LCD_Init,w
  2341  0EB7  00E5               	movwf	_ARR_LcdLineNumAddress_U8+2
  2342                           
  2343                           ;lcd.c: 207: ARR_LcdLineNumAddress_U8[0x03] = 0xd0 + (v_MaxCharsPerLine_u8 & 0x0fu);
  2344  0EB8  0823               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  2345  0EB9  390F               	andlw	15
  2346  0EBA  3ED0               	addlw	208
  2347  0EBB  00A4               	movwf	??_LCD_Init
  2348  0EBC  0824               	movf	??_LCD_Init,w
  2349  0EBD  00E6               	movwf	_ARR_LcdLineNumAddress_U8+3
  2350  0EBE                     l2147:	
  2351                           
  2352                           ;lcd.c: 208: }
  2353                           ;lcd.c: 210: DELAY_ms(100);
  2354  0EBE  3064               	movlw	100
  2355  0EBF  00F2               	movwf	DELAY_ms@ms_count
  2356  0EC0  3000               	movlw	0
  2357  0EC1  00F3               	movwf	DELAY_ms@ms_count+1
  2358  0EC2  120A  158A  2336  120A  158A  	fcall	_DELAY_ms
  2359                           
  2360                           ;lcd.c: 212: if(LCDConfig.v_LcdMode_U8 == 8u)
  2361  0EC7  3008               	movlw	8
  2362  0EC8  1683               	bsf	3,5	;RP0=1, select bank1
  2363  0EC9  1303               	bcf	3,6	;RP1=0, select bank1
  2364  0ECA  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  2365  0ECB  1D03               	btfss	3,2
  2366  0ECC  2ECF               	goto	l2153
  2367                           
  2368                           ;lcd.c: 213: {
  2369                           ;lcd.c: 214: LCD_CmdWrite(0x38u);
  2370  0ECD  3038               	movlw	56
  2371  0ECE  2EDB               	goto	L2
  2372  0ECF                     l2153:	
  2373                           ;lcd.c: 215: }
  2374                           
  2375                           
  2376                           ;lcd.c: 216: else if(LCDConfig.v_LcdMode_U8 == 4u)
  2377  0ECF  3004               	movlw	4
  2378  0ED0  1683               	bsf	3,5	;RP0=1, select bank1
  2379  0ED1  1303               	bcf	3,6	;RP1=0, select bank1
  2380  0ED2  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  2381  0ED3  1D03               	btfss	3,2
  2382  0ED4  2EE0               	goto	l212
  2383                           
  2384                           ;lcd.c: 217: {
  2385                           ;lcd.c: 218: lcd_Reset();
  2386  0ED5  120A  158A  264C  120A  158A  	fcall	_lcd_Reset
  2387                           
  2388                           ;lcd.c: 219: LCD_CmdWrite(0x28u);
  2389  0EDA  3028               	movlw	40
  2390  0EDB                     L2:	
  2391  0EDB  120A  158A  24C0  120A  158A  	fcall	_LCD_CmdWrite
  2392  0EE0                     l212:	
  2393                           
  2394                           ;lcd.c: 220: }
  2395                           ;lcd.c: 222: LCD_CmdWrite(0x0Eu);
  2396  0EE0  300E               	movlw	14
  2397  0EE1  120A  158A  24C0  120A  158A  	fcall	_LCD_CmdWrite
  2398                           
  2399                           ;lcd.c: 223: LCD_Clear();
  2400  0EE6  120A  158A  231A   	fcall	_LCD_Clear
  2401  0EE9  0008               	return
  2402  0EEA                     __end_of_LCD_Init:	
  2403                           
  2404                           	psect	text6
  2405  0E4C                     __ptext6:	
  2406 ;; *************** function _lcd_Reset *****************
  2407 ;; Defined at:
  2408 ;;		line 913 in file "../00-libfiles/lcd.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;		None
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;		None
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2422 ;;      Params:         0       0       0       0       0
  2423 ;;      Locals:         0       0       0       0       0
  2424 ;;      Temps:          0       0       0       0       0
  2425 ;;      Totals:         0       0       0       0       0
  2426 ;;Total ram usage:        0 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    2
  2429 ;; This function calls:
  2430 ;;		_DELAY_ms
  2431 ;;		_DELAY_us
  2432 ;;		_lcd_SendCmdSignals
  2433 ;;		_lcd_SendHigherNibble
  2434 ;; This function is called by:
  2435 ;;		_LCD_Init
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           
  2440                           ;psect for function _lcd_Reset
  2441  0E4C                     _lcd_Reset:	
  2442                           
  2443                           ;lcd.c: 916: lcd_SendHigherNibble(0x30);
  2444                           
  2445                           ;incstack = 0
  2446                           ; Regs used in _lcd_Reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2447  0E4C  3030               	movlw	48
  2448  0E4D  120A  158A  253E  120A  158A  	fcall	_lcd_SendHigherNibble
  2449                           
  2450                           ;lcd.c: 917: lcd_SendCmdSignals();
  2451  0E52  120A  158A  2465  120A  158A  	fcall	_lcd_SendCmdSignals
  2452                           
  2453                           ;lcd.c: 918: DELAY_ms(100);
  2454  0E57  3064               	movlw	100
  2455  0E58  00F2               	movwf	DELAY_ms@ms_count
  2456  0E59  3000               	movlw	0
  2457  0E5A  00F3               	movwf	DELAY_ms@ms_count+1
  2458  0E5B  120A  158A  2336  120A  158A  	fcall	_DELAY_ms
  2459                           
  2460                           ;lcd.c: 919: lcd_SendHigherNibble(0x30);
  2461  0E60  3030               	movlw	48
  2462  0E61  120A  158A  253E  120A  158A  	fcall	_lcd_SendHigherNibble
  2463                           
  2464                           ;lcd.c: 920: lcd_SendCmdSignals();
  2465  0E66  120A  158A  2465  120A  158A  	fcall	_lcd_SendCmdSignals
  2466                           
  2467                           ;lcd.c: 921: DELAY_us(200);
  2468  0E6B  30C8               	movlw	200
  2469  0E6C  00F0               	movwf	DELAY_us@us_count
  2470  0E6D  3000               	movlw	0
  2471  0E6E  00F1               	movwf	DELAY_us@us_count+1
  2472  0E6F  120A  158A  230F  120A  158A  	fcall	_DELAY_us
  2473                           
  2474                           ;lcd.c: 922: lcd_SendHigherNibble(0x30);
  2475  0E74  3030               	movlw	48
  2476  0E75  120A  158A  253E  120A  158A  	fcall	_lcd_SendHigherNibble
  2477                           
  2478                           ;lcd.c: 923: lcd_SendCmdSignals();
  2479  0E7A  120A  158A  2465  120A  158A  	fcall	_lcd_SendCmdSignals
  2480                           
  2481                           ;lcd.c: 924: DELAY_us(200);
  2482  0E7F  30C8               	movlw	200
  2483  0E80  00F0               	movwf	DELAY_us@us_count
  2484  0E81  3000               	movlw	0
  2485  0E82  00F1               	movwf	DELAY_us@us_count+1
  2486  0E83  120A  158A  230F  120A  158A  	fcall	_DELAY_us
  2487                           
  2488                           ;lcd.c: 925: lcd_SendHigherNibble(0x20);
  2489  0E88  3020               	movlw	32
  2490  0E89  120A  158A  253E  120A  158A  	fcall	_lcd_SendHigherNibble
  2491                           
  2492                           ;lcd.c: 926: lcd_SendCmdSignals();
  2493  0E8E  120A  158A  2465  120A  158A  	fcall	_lcd_SendCmdSignals
  2494                           
  2495                           ;lcd.c: 927: DELAY_us(200);
  2496  0E93  30C8               	movlw	200
  2497  0E94  00F0               	movwf	DELAY_us@us_count
  2498  0E95  3000               	movlw	0
  2499  0E96  00F1               	movwf	DELAY_us@us_count+1
  2500  0E97  120A  158A  230F   	fcall	_DELAY_us
  2501  0E9A  0008               	return
  2502  0E9B                     __end_of_lcd_Reset:	
  2503                           
  2504                           	psect	text7
  2505  0B1A                     __ptext7:	
  2506 ;; *************** function _LCD_Clear *****************
  2507 ;; Defined at:
  2508 ;;		line 237 in file "../00-libfiles/lcd.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2522 ;;      Params:         0       0       0       0       0
  2523 ;;      Locals:         0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0
  2525 ;;      Totals:         0       0       0       0       0
  2526 ;;Total ram usage:        0 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    5
  2529 ;; This function calls:
  2530 ;;		_LCD_CmdWrite
  2531 ;;		_LCD_GoToLine
  2532 ;; This function is called by:
  2533 ;;		_LCD_Init
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           
  2538                           ;psect for function _LCD_Clear
  2539  0B1A                     _LCD_Clear:	
  2540                           
  2541                           ;lcd.c: 239: LCD_CmdWrite(0x01u);
  2542                           
  2543                           ;incstack = 0
  2544                           ; Regs used in _LCD_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2545  0B1A  3001               	movlw	1
  2546  0B1B  120A  158A  24C0  120A  158A  	fcall	_LCD_CmdWrite
  2547                           
  2548                           ;lcd.c: 240: LCD_GoToLine(0x00);
  2549  0B20  3000               	movlw	0
  2550  0B21  120A  158A  2378   	fcall	_LCD_GoToLine
  2551  0B24  0008               	return
  2552  0B25                     __end_of_LCD_Clear:	
  2553                           
  2554                           	psect	text8
  2555  0B78                     __ptext8:	
  2556 ;; *************** function _LCD_GoToLine *****************
  2557 ;; Defined at:
  2558 ;;		line 265 in file "../00-libfiles/lcd.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  v_lineNumber    1    wreg     unsigned char 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  v_lineNumber    1    2[BANK0 ] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2572 ;;      Params:         0       0       0       0       0
  2573 ;;      Locals:         0       1       0       0       0
  2574 ;;      Temps:          0       1       0       0       0
  2575 ;;      Totals:         0       2       0       0       0
  2576 ;;Total ram usage:        2 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    4
  2579 ;; This function calls:
  2580 ;;		_LCD_CmdWrite
  2581 ;; This function is called by:
  2582 ;;		_LCD_Clear
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           
  2587                           ;psect for function _LCD_GoToLine
  2588  0B78                     _LCD_GoToLine:	
  2589                           
  2590                           ;incstack = 0
  2591                           ; Regs used in _LCD_GoToLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2592                           ;LCD_GoToLine@v_lineNumber_u8 stored from wreg
  2593  0B78  1283               	bcf	3,5	;RP0=0, select bank0
  2594  0B79  1303               	bcf	3,6	;RP1=0, select bank0
  2595  0B7A  00A2               	movwf	LCD_GoToLine@v_lineNumber_u8
  2596                           
  2597                           ;lcd.c: 267: if(v_lineNumber_u8 < LCDConfig.v_MaxSupportedLines_U8)
  2598  0B7B  1683               	bsf	3,5	;RP0=1, select bank1
  2599  0B7C  1303               	bcf	3,6	;RP1=0, select bank1
  2600  0B7D  0820               	movf	_LCDConfig^(0+128),w
  2601  0B7E  1283               	bcf	3,5	;RP0=0, select bank0
  2602  0B7F  1303               	bcf	3,6	;RP1=0, select bank0
  2603  0B80  0222               	subwf	LCD_GoToLine@v_lineNumber_u8,w
  2604  0B81  1803               	skipnc
  2605  0B82  0008               	return
  2606                           
  2607                           ;lcd.c: 268: {
  2608                           ;lcd.c: 271: v_LcdTrackCursorPos_U8 = 0x00;
  2609  0B83  01E7               	clrf	_v_LcdTrackCursorPos_U8
  2610                           
  2611                           ;lcd.c: 272: v_LcdTrackLineNum_U8 = v_lineNumber_u8;
  2612  0B84  0822               	movf	LCD_GoToLine@v_lineNumber_u8,w
  2613  0B85  00A1               	movwf	??_LCD_GoToLine
  2614  0B86  0821               	movf	??_LCD_GoToLine,w
  2615  0B87  00E8               	movwf	_v_LcdTrackLineNum_U8
  2616                           
  2617                           ;lcd.c: 273: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_lineNumber_u8]);
  2618  0B88  0822               	movf	LCD_GoToLine@v_lineNumber_u8,w
  2619  0B89  3E63               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  2620  0B8A  0084               	movwf	4
  2621  0B8B  1383               	bcf	3,7	;select IRP bank0
  2622  0B8C  0800               	movf	0,w
  2623  0B8D  120A  158A  24C0   	fcall	_LCD_CmdWrite
  2624  0B90  0008               	return
  2625  0B91                     __end_of_LCD_GoToLine:	
  2626                           
  2627                           	psect	text9
  2628  0C1A                     __ptext9:	
  2629 ;; *************** function _LCD_DisplayString *****************
  2630 ;; Defined at:
  2631 ;;		line 427 in file "../00-libfiles/lcd.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  ptr_stringPo    2    4[BANK0 ] PTR const unsigned char 
  2634 ;;		 -> STR_2(24), 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2646 ;;      Params:         0       2       0       0       0
  2647 ;;      Locals:         0       0       0       0       0
  2648 ;;      Temps:          0       0       0       0       0
  2649 ;;      Totals:         0       2       0       0       0
  2650 ;;Total ram usage:        2 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; Hardware stack levels required when called:    6
  2653 ;; This function calls:
  2654 ;;		_LCD_DisplayChar
  2655 ;; This function is called by:
  2656 ;;		_lcd_Test
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           
  2661                           ;psect for function _LCD_DisplayString
  2662  0C1A                     _LCD_DisplayString:	
  2663  0C1A                     l2163:	
  2664                           ;lcd.c: 429: while((*ptr_stringPointer_u8)!=0)
  2665                           
  2666                           ;incstack = 0
  2667 ;; using string table level
  2668                           ; Regs used in _LCD_DisplayString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2669                           
  2670  0C1A  1283               	bcf	3,5	;RP0=0, select bank0
  2671  0C1B  1303               	bcf	3,6	;RP1=0, select bank0
  2672  0C1C  0825               	movf	LCD_DisplayString@ptr_stringPointer_u8+1,w
  2673  0C1D  00FF               	movwf	127
  2674  0C1E  0824               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  2675  0C1F  0084               	movwf	4
  2676  0C20  120A  158A  214F  120A  158A  	fcall	stringtab
  2677  0C25  3A00               	xorlw	0
  2678  0C26  1903               	btfsc	3,2
  2679  0C27  0008               	return
  2680                           
  2681                           ;lcd.c: 430: LCD_DisplayChar(*ptr_stringPointer_u8++);
  2682  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  2683  0C29  1303               	bcf	3,6	;RP1=0, select bank0
  2684  0C2A  0825               	movf	LCD_DisplayString@ptr_stringPointer_u8+1,w
  2685  0C2B  00FF               	movwf	127
  2686  0C2C  0824               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  2687  0C2D  0084               	movwf	4
  2688  0C2E  120A  158A  214F  120A  158A  	fcall	stringtab
  2689  0C33  120A  158A  23F5  120A  158A  	fcall	_LCD_DisplayChar
  2690  0C38  3001               	movlw	1
  2691  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0C3A  1303               	bcf	3,6	;RP1=0, select bank0
  2693  0C3B  07A4               	addwf	LCD_DisplayString@ptr_stringPointer_u8,f
  2694  0C3C  1803               	skipnc
  2695  0C3D  0AA5               	incf	LCD_DisplayString@ptr_stringPointer_u8+1,f
  2696  0C3E  2C1A               	goto	l2163
  2697  0C3F                     __end_of_LCD_DisplayString:	
  2698                           
  2699                           	psect	text10
  2700  0BF5                     __ptext10:	
  2701 ;; *************** function _LCD_DisplayChar *****************
  2702 ;; Defined at:
  2703 ;;		line 392 in file "../00-libfiles/lcd.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  v_lcdData_u8    1    wreg     unsigned char 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  v_lcdData_u8    1    3[BANK0 ] unsigned char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2717 ;;      Params:         0       0       0       0       0
  2718 ;;      Locals:         0       1       0       0       0
  2719 ;;      Temps:          0       1       0       0       0
  2720 ;;      Totals:         0       2       0       0       0
  2721 ;;Total ram usage:        2 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:    5
  2724 ;; This function calls:
  2725 ;;		_LCD_GoToNextLine
  2726 ;;		_lcd_DataWrite
  2727 ;; This function is called by:
  2728 ;;		_LCD_DisplayString
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           
  2733                           ;psect for function _LCD_DisplayChar
  2734  0BF5                     _LCD_DisplayChar:	
  2735                           
  2736                           ;incstack = 0
  2737                           ; Regs used in _LCD_DisplayChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2738                           ;LCD_DisplayChar@v_lcdData_u8 stored from wreg
  2739  0BF5  1283               	bcf	3,5	;RP0=0, select bank0
  2740  0BF6  1303               	bcf	3,6	;RP1=0, select bank0
  2741  0BF7  00A3               	movwf	LCD_DisplayChar@v_lcdData_u8
  2742                           
  2743                           ;lcd.c: 394: if((v_LcdTrackCursorPos_U8>=LCDConfig.v_MaxSupportedChars_U8) || (v_lcdData
      +                          _u8=='\n'))
  2744  0BF8  1683               	bsf	3,5	;RP0=1, select bank1
  2745  0BF9  1303               	bcf	3,6	;RP1=0, select bank1
  2746  0BFA  0821               	movf	(_LCDConfig^(0+128)+1),w
  2747  0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  2748  0BFC  1303               	bcf	3,6	;RP1=0, select bank0
  2749  0BFD  0267               	subwf	_v_LcdTrackCursorPos_U8,w
  2750  0BFE  1803               	skipnc
  2751  0BFF  2C04               	goto	l2013
  2752  0C00  300A               	movlw	10
  2753  0C01  0623               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  2754  0C02  1D03               	btfss	3,2
  2755  0C03  2C09               	goto	l2015
  2756  0C04                     l2013:	
  2757                           
  2758                           ;lcd.c: 395: {
  2759                           ;lcd.c: 398: LCD_GoToNextLine();
  2760  0C04  120A  158A  2360  120A  158A  	fcall	_LCD_GoToNextLine
  2761  0C09                     l2015:	
  2762                           
  2763                           ;lcd.c: 399: }
  2764                           ;lcd.c: 400: if(v_lcdData_u8!='\n')
  2765  0C09  300A               	movlw	10
  2766  0C0A  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0C0B  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0C0C  0623               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  2769  0C0D  1903               	btfsc	3,2
  2770  0C0E  0008               	return
  2771                           
  2772                           ;lcd.c: 401: {
  2773                           ;lcd.c: 403: lcd_DataWrite(v_lcdData_u8);
  2774  0C0F  0823               	movf	LCD_DisplayChar@v_lcdData_u8,w
  2775  0C10  120A  158A  24FF   	fcall	_lcd_DataWrite
  2776                           
  2777                           ;lcd.c: 404: v_LcdTrackCursorPos_U8++;
  2778  0C13  3001               	movlw	1
  2779  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  2780  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  2781  0C16  00A2               	movwf	??_LCD_DisplayChar
  2782  0C17  0822               	movf	??_LCD_DisplayChar,w
  2783  0C18  07E7               	addwf	_v_LcdTrackCursorPos_U8,f
  2784  0C19  0008               	return
  2785  0C1A                     __end_of_LCD_DisplayChar:	
  2786                           
  2787                           	psect	text11
  2788  0CFF                     __ptext11:	
  2789 ;; *************** function _lcd_DataWrite *****************
  2790 ;; Defined at:
  2791 ;;		line 826 in file "../00-libfiles/lcd.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  dataByte        1    wreg     unsigned char 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  dataByte        1    0[BANK0 ] unsigned char 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2805 ;;      Params:         0       0       0       0       0
  2806 ;;      Locals:         0       1       0       0       0
  2807 ;;      Temps:          2       0       0       0       0
  2808 ;;      Totals:         2       1       0       0       0
  2809 ;;Total ram usage:        3 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:    3
  2812 ;; This function calls:
  2813 ;;		_lcd_BusyCheck
  2814 ;;		_lcd_SendDataSignals
  2815 ;;		_lcd_SendHigherNibble
  2816 ;;		_lcd_SendLowerNibble
  2817 ;; This function is called by:
  2818 ;;		_LCD_DisplayChar
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           
  2823                           ;psect for function _lcd_DataWrite
  2824  0CFF                     _lcd_DataWrite:	
  2825                           
  2826                           ;incstack = 0
  2827                           ; Regs used in _lcd_DataWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2828                           ;lcd_DataWrite@dataByte stored from wreg
  2829  0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  2830  0D00  1303               	bcf	3,6	;RP1=0, select bank0
  2831  0D01  00A0               	movwf	lcd_DataWrite@dataByte
  2832                           
  2833                           ;lcd.c: 828: lcd_BusyCheck();
  2834  0D02  120A  118A  20F5  120A  158A  	fcall	_lcd_BusyCheck
  2835                           
  2836                           ;lcd.c: 829: if(LCDConfig.v_LcdMode_U8 == 8u)
  2837  0D07  3008               	movlw	8
  2838  0D08  1683               	bsf	3,5	;RP0=1, select bank1
  2839  0D09  1303               	bcf	3,6	;RP1=0, select bank1
  2840  0D0A  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  2841  0D0B  1D03               	btfss	3,2
  2842  0D0C  2D16               	goto	l1919
  2843                           
  2844                           ;lcd.c: 830: {
  2845                           ;lcd.c: 831: lcd_SendLowerNibble(dataByte);
  2846  0D0D  1283               	bcf	3,5	;RP0=0, select bank0
  2847  0D0E  1303               	bcf	3,6	;RP1=0, select bank0
  2848  0D0F  0820               	movf	lcd_DataWrite@dataByte,w
  2849  0D10  120A  158A  257E  120A  158A  	fcall	_lcd_SendLowerNibble
  2850                           
  2851                           ;lcd.c: 832: }
  2852  0D15  2D32               	goto	l1923
  2853  0D16                     l1919:	
  2854                           
  2855                           ;lcd.c: 833: else
  2856                           ;lcd.c: 834: {
  2857                           ;lcd.c: 835: lcd_SendHigherNibble(dataByte);
  2858  0D16  1283               	bcf	3,5	;RP0=0, select bank0
  2859  0D17  1303               	bcf	3,6	;RP1=0, select bank0
  2860  0D18  0820               	movf	lcd_DataWrite@dataByte,w
  2861  0D19  120A  158A  253E  120A  158A  	fcall	_lcd_SendHigherNibble
  2862                           
  2863                           ;lcd.c: 836: lcd_SendDataSignals();
  2864  0D1E  120A  158A  2492  120A  158A  	fcall	_lcd_SendDataSignals
  2865                           
  2866                           ;lcd.c: 837: dataByte = dataByte << 4;
  2867  0D23  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0D24  1303               	bcf	3,6	;RP1=0, select bank0
  2869  0D25  0820               	movf	lcd_DataWrite@dataByte,w
  2870  0D26  00FC               	movwf	??_lcd_DataWrite
  2871  0D27  3003               	movlw	3
  2872  0D28                     u2185:	
  2873  0D28  1003               	clrc
  2874  0D29  0DFC               	rlf	??_lcd_DataWrite,f
  2875  0D2A  3EFF               	addlw	-1
  2876  0D2B  1D03               	skipz
  2877  0D2C  2D28               	goto	u2185
  2878  0D2D  1003               	clrc
  2879  0D2E  0D7C               	rlf	??_lcd_DataWrite,w
  2880  0D2F  00FD               	movwf	??_lcd_DataWrite+1
  2881  0D30  087D               	movf	??_lcd_DataWrite+1,w
  2882  0D31  00A0               	movwf	lcd_DataWrite@dataByte
  2883  0D32                     l1923:	
  2884                           
  2885                           ;lcd.c: 838: }
  2886                           ;lcd.c: 840: lcd_SendHigherNibble(dataByte);
  2887  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  2889  0D34  0820               	movf	lcd_DataWrite@dataByte,w
  2890  0D35  120A  158A  253E  120A  158A  	fcall	_lcd_SendHigherNibble
  2891                           
  2892                           ;lcd.c: 841: lcd_SendDataSignals();
  2893  0D3A  120A  158A  2492   	fcall	_lcd_SendDataSignals
  2894  0D3D  0008               	return
  2895  0D3E                     __end_of_lcd_DataWrite:	
  2896                           
  2897                           	psect	text12
  2898  0C92                     __ptext12:	
  2899 ;; *************** function _lcd_SendDataSignals *****************
  2900 ;; Defined at:
  2901 ;;		line 1002 in file "../00-libfiles/lcd.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;		None
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;		None
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      void 
  2908 ;; Registers used:
  2909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2915 ;;      Params:         0       0       0       0       0
  2916 ;;      Locals:         0       0       0       0       0
  2917 ;;      Temps:          0       0       0       0       0
  2918 ;;      Totals:         0       0       0       0       0
  2919 ;;Total ram usage:        0 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    1
  2922 ;; This function calls:
  2923 ;;		_DELAY_us
  2924 ;;		_GPIO_PinWrite
  2925 ;; This function is called by:
  2926 ;;		_lcd_DataWrite
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           
  2931                           ;psect for function _lcd_SendDataSignals
  2932  0C92                     _lcd_SendDataSignals:	
  2933                           
  2934                           ;lcd.c: 1004: GPIO_PinWrite(LCDConfig.RS,1);
  2935                           
  2936                           ;incstack = 0
  2937                           ; Regs used in _lcd_SendDataSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2938  0C92  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  2939  0C93  0AF5               	incf	GPIO_PinWrite@var_pinValue_u8,f
  2940  0C94  1683               	bsf	3,5	;RP0=1, select bank1
  2941  0C95  1303               	bcf	3,6	;RP1=0, select bank1
  2942  0C96  0823               	movf	(_LCDConfig^(0+128)+3),w
  2943  0C97  120A  118A  23E2  120A  158A  	fcall	_GPIO_PinWrite
  2944                           
  2945                           ;lcd.c: 1005: GPIO_PinWrite(LCDConfig.RW,0);
  2946  0C9C  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  2947  0C9D  1683               	bsf	3,5	;RP0=1, select bank1
  2948  0C9E  1303               	bcf	3,6	;RP1=0, select bank1
  2949  0C9F  0824               	movf	(_LCDConfig^(0+128)+4),w
  2950  0CA0  120A  118A  23E2  120A  158A  	fcall	_GPIO_PinWrite
  2951                           
  2952                           ;lcd.c: 1006: GPIO_PinWrite(LCDConfig.EN,1);
  2953  0CA5  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  2954  0CA6  0AF5               	incf	GPIO_PinWrite@var_pinValue_u8,f
  2955  0CA7  1683               	bsf	3,5	;RP0=1, select bank1
  2956  0CA8  1303               	bcf	3,6	;RP1=0, select bank1
  2957  0CA9  0825               	movf	(_LCDConfig^(0+128)+5),w
  2958  0CAA  120A  118A  23E2  120A  158A  	fcall	_GPIO_PinWrite
  2959                           
  2960                           ;lcd.c: 1007: DELAY_us(10);
  2961  0CAF  300A               	movlw	10
  2962  0CB0  00F0               	movwf	DELAY_us@us_count
  2963  0CB1  3000               	movlw	0
  2964  0CB2  00F1               	movwf	DELAY_us@us_count+1
  2965  0CB3  120A  158A  230F  120A  158A  	fcall	_DELAY_us
  2966                           
  2967                           ;lcd.c: 1008: GPIO_PinWrite(LCDConfig.EN,0);
  2968  0CB8  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  2969  0CB9  1683               	bsf	3,5	;RP0=1, select bank1
  2970  0CBA  1303               	bcf	3,6	;RP1=0, select bank1
  2971  0CBB  0825               	movf	(_LCDConfig^(0+128)+5),w
  2972  0CBC  120A  118A  23E2   	fcall	_GPIO_PinWrite
  2973  0CBF  0008               	return
  2974  0CC0                     __end_of_lcd_SendDataSignals:	
  2975                           
  2976                           	psect	text13
  2977  0B60                     __ptext13:	
  2978 ;; *************** function _LCD_GoToNextLine *****************
  2979 ;; Defined at:
  2980 ;;		line 292 in file "../00-libfiles/lcd.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2994 ;;      Params:         0       0       0       0       0
  2995 ;;      Locals:         0       0       0       0       0
  2996 ;;      Temps:          0       1       0       0       0
  2997 ;;      Totals:         0       1       0       0       0
  2998 ;;Total ram usage:        1 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    4
  3001 ;; This function calls:
  3002 ;;		_LCD_CmdWrite
  3003 ;; This function is called by:
  3004 ;;		_LCD_DisplayChar
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           
  3009                           ;psect for function _LCD_GoToNextLine
  3010  0B60                     _LCD_GoToNextLine:	
  3011                           
  3012                           ;lcd.c: 296: v_LcdTrackLineNum_U8++;
  3013                           
  3014                           ;incstack = 0
  3015                           ; Regs used in _LCD_GoToNextLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3016  0B60  3001               	movlw	1
  3017  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  3018  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  3019  0B63  00A1               	movwf	??_LCD_GoToNextLine
  3020  0B64  0821               	movf	??_LCD_GoToNextLine,w
  3021  0B65  07E8               	addwf	_v_LcdTrackLineNum_U8,f
  3022                           
  3023                           ;lcd.c: 297: v_LcdTrackCursorPos_U8 = 0x00;
  3024  0B66  01E7               	clrf	_v_LcdTrackCursorPos_U8
  3025                           
  3026                           ;lcd.c: 298: if(v_LcdTrackLineNum_U8 >= LCDConfig.v_MaxSupportedLines_U8)
  3027  0B67  1683               	bsf	3,5	;RP0=1, select bank1
  3028  0B68  1303               	bcf	3,6	;RP1=0, select bank1
  3029  0B69  0820               	movf	_LCDConfig^(0+128),w
  3030  0B6A  1283               	bcf	3,5	;RP0=0, select bank0
  3031  0B6B  1303               	bcf	3,6	;RP1=0, select bank0
  3032  0B6C  0268               	subwf	_v_LcdTrackLineNum_U8,w
  3033  0B6D  1803               	btfsc	3,0
  3034                           
  3035                           ;lcd.c: 299: v_LcdTrackLineNum_U8 = 0x00;
  3036  0B6E  01E8               	clrf	_v_LcdTrackLineNum_U8
  3037                           
  3038                           ;lcd.c: 300: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_LcdTrackLineNum_U8]);
  3039  0B6F  0868               	movf	_v_LcdTrackLineNum_U8,w
  3040  0B70  3E63               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  3041  0B71  0084               	movwf	4
  3042  0B72  1383               	bcf	3,7	;select IRP bank0
  3043  0B73  0800               	movf	0,w
  3044  0B74  120A  158A  24C0   	fcall	_LCD_CmdWrite
  3045  0B77  0008               	return
  3046  0B78                     __end_of_LCD_GoToNextLine:	
  3047                           
  3048                           	psect	text14
  3049  0CC0                     __ptext14:	
  3050 ;; *************** function _LCD_CmdWrite *****************
  3051 ;; Defined at:
  3052 ;;		line 358 in file "../00-libfiles/lcd.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  v_lcdCmd_u8     1    wreg     unsigned char 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  v_lcdCmd_u8     1    0[BANK0 ] unsigned char 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3066 ;;      Params:         0       0       0       0       0
  3067 ;;      Locals:         0       1       0       0       0
  3068 ;;      Temps:          2       0       0       0       0
  3069 ;;      Totals:         2       1       0       0       0
  3070 ;;Total ram usage:        3 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    3
  3073 ;; This function calls:
  3074 ;;		_lcd_BusyCheck
  3075 ;;		_lcd_SendCmdSignals
  3076 ;;		_lcd_SendHigherNibble
  3077 ;;		_lcd_SendLowerNibble
  3078 ;; This function is called by:
  3079 ;;		_LCD_Init
  3080 ;;		_LCD_Clear
  3081 ;;		_LCD_GoToLine
  3082 ;;		_LCD_GoToNextLine
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           
  3087                           ;psect for function _LCD_CmdWrite
  3088  0CC0                     _LCD_CmdWrite:	
  3089                           
  3090                           ;incstack = 0
  3091                           ; Regs used in _LCD_CmdWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3092                           ;LCD_CmdWrite@v_lcdCmd_u8 stored from wreg
  3093  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3094  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3095  0CC2  00A0               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  3096                           
  3097                           ;lcd.c: 360: lcd_BusyCheck();
  3098  0CC3  120A  118A  20F5  120A  158A  	fcall	_lcd_BusyCheck
  3099                           
  3100                           ;lcd.c: 361: if(LCDConfig.v_LcdMode_U8 == 8u)
  3101  0CC8  3008               	movlw	8
  3102  0CC9  1683               	bsf	3,5	;RP0=1, select bank1
  3103  0CCA  1303               	bcf	3,6	;RP1=0, select bank1
  3104  0CCB  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  3105  0CCC  1D03               	btfss	3,2
  3106  0CCD  2CD7               	goto	l1881
  3107                           
  3108                           ;lcd.c: 362: {
  3109                           ;lcd.c: 363: lcd_SendLowerNibble(v_lcdCmd_u8);
  3110  0CCE  1283               	bcf	3,5	;RP0=0, select bank0
  3111  0CCF  1303               	bcf	3,6	;RP1=0, select bank0
  3112  0CD0  0820               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  3113  0CD1  120A  158A  257E  120A  158A  	fcall	_lcd_SendLowerNibble
  3114                           
  3115                           ;lcd.c: 364: }
  3116  0CD6  2CF3               	goto	l1885
  3117  0CD7                     l1881:	
  3118                           
  3119                           ;lcd.c: 365: else
  3120                           ;lcd.c: 366: {
  3121                           ;lcd.c: 367: lcd_SendHigherNibble(v_lcdCmd_u8);
  3122  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0CD8  1303               	bcf	3,6	;RP1=0, select bank0
  3124  0CD9  0820               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  3125  0CDA  120A  158A  253E  120A  158A  	fcall	_lcd_SendHigherNibble
  3126                           
  3127                           ;lcd.c: 368: lcd_SendCmdSignals();
  3128  0CDF  120A  158A  2465  120A  158A  	fcall	_lcd_SendCmdSignals
  3129                           
  3130                           ;lcd.c: 369: v_lcdCmd_u8 = v_lcdCmd_u8 << 4;
  3131  0CE4  1283               	bcf	3,5	;RP0=0, select bank0
  3132  0CE5  1303               	bcf	3,6	;RP1=0, select bank0
  3133  0CE6  0820               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  3134  0CE7  00FC               	movwf	??_LCD_CmdWrite
  3135  0CE8  3003               	movlw	3
  3136  0CE9                     u2145:	
  3137  0CE9  1003               	clrc
  3138  0CEA  0DFC               	rlf	??_LCD_CmdWrite,f
  3139  0CEB  3EFF               	addlw	-1
  3140  0CEC  1D03               	skipz
  3141  0CED  2CE9               	goto	u2145
  3142  0CEE  1003               	clrc
  3143  0CEF  0D7C               	rlf	??_LCD_CmdWrite,w
  3144  0CF0  00FD               	movwf	??_LCD_CmdWrite+1
  3145  0CF1  087D               	movf	??_LCD_CmdWrite+1,w
  3146  0CF2  00A0               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  3147  0CF3                     l1885:	
  3148                           
  3149                           ;lcd.c: 370: }
  3150                           ;lcd.c: 372: lcd_SendHigherNibble(v_lcdCmd_u8);
  3151  0CF3  1283               	bcf	3,5	;RP0=0, select bank0
  3152  0CF4  1303               	bcf	3,6	;RP1=0, select bank0
  3153  0CF5  0820               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  3154  0CF6  120A  158A  253E  120A  158A  	fcall	_lcd_SendHigherNibble
  3155                           
  3156                           ;lcd.c: 373: lcd_SendCmdSignals();
  3157  0CFB  120A  158A  2465   	fcall	_lcd_SendCmdSignals
  3158  0CFE  0008               	return
  3159  0CFF                     __end_of_LCD_CmdWrite:	
  3160                           
  3161                           	psect	text15
  3162  0D7E                     __ptext15:	
  3163 ;; *************** function _lcd_SendLowerNibble *****************
  3164 ;; Defined at:
  3165 ;;		line 962 in file "../00-libfiles/lcd.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  dataByte        1    wreg     unsigned char 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  dataByte        1   11[COMMON] unsigned char 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3179 ;;      Params:         0       0       0       0       0
  3180 ;;      Locals:         1       0       0       0       0
  3181 ;;      Temps:          1       0       0       0       0
  3182 ;;      Totals:         2       0       0       0       0
  3183 ;;Total ram usage:        2 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:    1
  3186 ;; This function calls:
  3187 ;;		_GPIO_PinWrite
  3188 ;; This function is called by:
  3189 ;;		_LCD_CmdWrite
  3190 ;;		_lcd_DataWrite
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           
  3195                           ;psect for function _lcd_SendLowerNibble
  3196  0D7E                     _lcd_SendLowerNibble:	
  3197                           
  3198                           ;incstack = 0
  3199                           ; Regs used in _lcd_SendLowerNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3200                           ;lcd_SendLowerNibble@dataByte stored from wreg
  3201  0D7E  00FB               	movwf	lcd_SendLowerNibble@dataByte
  3202                           
  3203                           ;lcd.c: 964: GPIO_PinWrite(LCDConfig.D0,(((dataByte)&((1<<(0))))!=0u));
  3204  0D7F  1C7B               	btfss	lcd_SendLowerNibble@dataByte,0
  3205  0D80  2D83               	goto	u1970
  3206  0D81  3001               	movlw	1
  3207  0D82  2D84               	goto	u1980
  3208  0D83                     u1970:	
  3209  0D83  3000               	movlw	0
  3210  0D84                     u1980:	
  3211  0D84  00FA               	movwf	??_lcd_SendLowerNibble
  3212  0D85  087A               	movf	??_lcd_SendLowerNibble,w
  3213  0D86  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  3214  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  3215  0D88  1303               	bcf	3,6	;RP1=0, select bank1
  3216  0D89  0826               	movf	(_LCDConfig^(0+128)+6),w
  3217  0D8A  120A  118A  23E2  120A  158A  	fcall	_GPIO_PinWrite
  3218                           
  3219                           ;lcd.c: 965: GPIO_PinWrite(LCDConfig.D1,(((dataByte)&((1<<(1))))!=0u));
  3220  0D8F  1CFB               	btfss	lcd_SendLowerNibble@dataByte,1
  3221  0D90  2D93               	goto	u1990
  3222  0D91  3001               	movlw	1
  3223  0D92  2D94               	goto	u2000
  3224  0D93                     u1990:	
  3225  0D93  3000               	movlw	0
  3226  0D94                     u2000:	
  3227  0D94  00FA               	movwf	??_lcd_SendLowerNibble
  3228  0D95  087A               	movf	??_lcd_SendLowerNibble,w
  3229  0D96  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  3230  0D97  1683               	bsf	3,5	;RP0=1, select bank1
  3231  0D98  1303               	bcf	3,6	;RP1=0, select bank1
  3232  0D99  0827               	movf	(_LCDConfig^(0+128)+7),w
  3233  0D9A  120A  118A  23E2  120A  158A  	fcall	_GPIO_PinWrite
  3234                           
  3235                           ;lcd.c: 966: GPIO_PinWrite(LCDConfig.D2,(((dataByte)&((1<<(2))))!=0u));
  3236  0D9F  1D7B               	btfss	lcd_SendLowerNibble@dataByte,2
  3237  0DA0  2DA3               	goto	u2010
  3238  0DA1  3001               	movlw	1
  3239  0DA2  2DA4               	goto	u2020
  3240  0DA3                     u2010:	
  3241  0DA3  3000               	movlw	0
  3242  0DA4                     u2020:	
  3243  0DA4  00FA               	movwf	??_lcd_SendLowerNibble
  3244  0DA5  087A               	movf	??_lcd_SendLowerNibble,w
  3245  0DA6  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  3246  0DA7  1683               	bsf	3,5	;RP0=1, select bank1
  3247  0DA8  1303               	bcf	3,6	;RP1=0, select bank1
  3248  0DA9  0828               	movf	(_LCDConfig^(0+128)+8),w
  3249  0DAA  120A  118A  23E2  120A  158A  	fcall	_GPIO_PinWrite
  3250                           
  3251                           ;lcd.c: 967: GPIO_PinWrite(LCDConfig.D3,(((dataByte)&((1<<(3))))!=0u));
  3252  0DAF  1DFB               	btfss	lcd_SendLowerNibble@dataByte,3
  3253  0DB0  2DB3               	goto	u2030
  3254  0DB1  3001               	movlw	1
  3255  0DB2  2DB4               	goto	u2040
  3256  0DB3                     u2030:	
  3257  0DB3  3000               	movlw	0
  3258  0DB4                     u2040:	
  3259  0DB4  00FA               	movwf	??_lcd_SendLowerNibble
  3260  0DB5  087A               	movf	??_lcd_SendLowerNibble,w
  3261  0DB6  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  3262  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  3263  0DB8  1303               	bcf	3,6	;RP1=0, select bank1
  3264  0DB9  0829               	movf	(_LCDConfig^(0+128)+9),w
  3265  0DBA  120A  118A  23E2   	fcall	_GPIO_PinWrite
  3266  0DBD  0008               	return
  3267  0DBE                     __end_of_lcd_SendLowerNibble:	
  3268                           
  3269                           	psect	text16
  3270  0D3E                     __ptext16:	
  3271 ;; *************** function _lcd_SendHigherNibble *****************
  3272 ;; Defined at:
  3273 ;;		line 943 in file "../00-libfiles/lcd.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  dataByte        1    wreg     unsigned char 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  dataByte        1   11[COMMON] unsigned char 
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  1    wreg      void 
  3280 ;; Registers used:
  3281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3287 ;;      Params:         0       0       0       0       0
  3288 ;;      Locals:         1       0       0       0       0
  3289 ;;      Temps:          1       0       0       0       0
  3290 ;;      Totals:         2       0       0       0       0
  3291 ;;Total ram usage:        2 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; Hardware stack levels required when called:    1
  3294 ;; This function calls:
  3295 ;;		_GPIO_PinWrite
  3296 ;; This function is called by:
  3297 ;;		_LCD_CmdWrite
  3298 ;;		_lcd_DataWrite
  3299 ;;		_lcd_Reset
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           
  3304                           ;psect for function _lcd_SendHigherNibble
  3305  0D3E                     _lcd_SendHigherNibble:	
  3306                           
  3307                           ;incstack = 0
  3308                           ; Regs used in _lcd_SendHigherNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3309                           ;lcd_SendHigherNibble@dataByte stored from wreg
  3310  0D3E  00FB               	movwf	lcd_SendHigherNibble@dataByte
  3311                           
  3312                           ;lcd.c: 945: GPIO_PinWrite(LCDConfig.D4,(((dataByte)&((1<<(4))))!=0u));
  3313  0D3F  1E7B               	btfss	lcd_SendHigherNibble@dataByte,4
  3314  0D40  2D43               	goto	u2050
  3315  0D41  3001               	movlw	1
  3316  0D42  2D44               	goto	u2060
  3317  0D43                     u2050:	
  3318  0D43  3000               	movlw	0
  3319  0D44                     u2060:	
  3320  0D44  00FA               	movwf	??_lcd_SendHigherNibble
  3321  0D45  087A               	movf	??_lcd_SendHigherNibble,w
  3322  0D46  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  3323  0D47  1683               	bsf	3,5	;RP0=1, select bank1
  3324  0D48  1303               	bcf	3,6	;RP1=0, select bank1
  3325  0D49  082A               	movf	(_LCDConfig^(0+128)+10),w
  3326  0D4A  120A  118A  23E2  120A  158A  	fcall	_GPIO_PinWrite
  3327                           
  3328                           ;lcd.c: 946: GPIO_PinWrite(LCDConfig.D5,(((dataByte)&((1<<(5))))!=0u));
  3329  0D4F  1EFB               	btfss	lcd_SendHigherNibble@dataByte,5
  3330  0D50  2D53               	goto	u2070
  3331  0D51  3001               	movlw	1
  3332  0D52  2D54               	goto	u2080
  3333  0D53                     u2070:	
  3334  0D53  3000               	movlw	0
  3335  0D54                     u2080:	
  3336  0D54  00FA               	movwf	??_lcd_SendHigherNibble
  3337  0D55  087A               	movf	??_lcd_SendHigherNibble,w
  3338  0D56  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  3339  0D57  1683               	bsf	3,5	;RP0=1, select bank1
  3340  0D58  1303               	bcf	3,6	;RP1=0, select bank1
  3341  0D59  082B               	movf	(_LCDConfig^(0+128)+11),w
  3342  0D5A  120A  118A  23E2  120A  158A  	fcall	_GPIO_PinWrite
  3343                           
  3344                           ;lcd.c: 947: GPIO_PinWrite(LCDConfig.D6,(((dataByte)&((1<<(6))))!=0u));
  3345  0D5F  1F7B               	btfss	lcd_SendHigherNibble@dataByte,6
  3346  0D60  2D63               	goto	u2090
  3347  0D61  3001               	movlw	1
  3348  0D62  2D64               	goto	u2100
  3349  0D63                     u2090:	
  3350  0D63  3000               	movlw	0
  3351  0D64                     u2100:	
  3352  0D64  00FA               	movwf	??_lcd_SendHigherNibble
  3353  0D65  087A               	movf	??_lcd_SendHigherNibble,w
  3354  0D66  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  3355  0D67  1683               	bsf	3,5	;RP0=1, select bank1
  3356  0D68  1303               	bcf	3,6	;RP1=0, select bank1
  3357  0D69  082C               	movf	(_LCDConfig^(0+128)+12),w
  3358  0D6A  120A  118A  23E2  120A  158A  	fcall	_GPIO_PinWrite
  3359                           
  3360                           ;lcd.c: 948: GPIO_PinWrite(LCDConfig.D7,(((dataByte)&((1<<(7))))!=0u));
  3361  0D6F  1FFB               	btfss	lcd_SendHigherNibble@dataByte,7
  3362  0D70  2D73               	goto	u2110
  3363  0D71  3001               	movlw	1
  3364  0D72  2D74               	goto	u2120
  3365  0D73                     u2110:	
  3366  0D73  3000               	movlw	0
  3367  0D74                     u2120:	
  3368  0D74  00FA               	movwf	??_lcd_SendHigherNibble
  3369  0D75  087A               	movf	??_lcd_SendHigherNibble,w
  3370  0D76  00F5               	movwf	GPIO_PinWrite@var_pinValue_u8
  3371  0D77  1683               	bsf	3,5	;RP0=1, select bank1
  3372  0D78  1303               	bcf	3,6	;RP1=0, select bank1
  3373  0D79  082D               	movf	(_LCDConfig^(0+128)+13),w
  3374  0D7A  120A  118A  23E2   	fcall	_GPIO_PinWrite
  3375  0D7D  0008               	return
  3376  0D7E                     __end_of_lcd_SendHigherNibble:	
  3377                           
  3378                           	psect	text17
  3379  0C65                     __ptext17:	
  3380 ;; *************** function _lcd_SendCmdSignals *****************
  3381 ;; Defined at:
  3382 ;;		line 981 in file "../00-libfiles/lcd.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;		None
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3396 ;;      Params:         0       0       0       0       0
  3397 ;;      Locals:         0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0
  3399 ;;      Totals:         0       0       0       0       0
  3400 ;;Total ram usage:        0 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:    1
  3403 ;; This function calls:
  3404 ;;		_DELAY_us
  3405 ;;		_GPIO_PinWrite
  3406 ;; This function is called by:
  3407 ;;		_LCD_CmdWrite
  3408 ;;		_lcd_Reset
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           
  3413                           ;psect for function _lcd_SendCmdSignals
  3414  0C65                     _lcd_SendCmdSignals:	
  3415                           
  3416                           ;lcd.c: 983: GPIO_PinWrite(LCDConfig.RS,0);
  3417                           
  3418                           ;incstack = 0
  3419                           ; Regs used in _lcd_SendCmdSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3420  0C65  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3421  0C66  1683               	bsf	3,5	;RP0=1, select bank1
  3422  0C67  1303               	bcf	3,6	;RP1=0, select bank1
  3423  0C68  0823               	movf	(_LCDConfig^(0+128)+3),w
  3424  0C69  120A  118A  23E2  120A  158A  	fcall	_GPIO_PinWrite
  3425                           
  3426                           ;lcd.c: 984: GPIO_PinWrite(LCDConfig.RW,0);
  3427  0C6E  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3428  0C6F  1683               	bsf	3,5	;RP0=1, select bank1
  3429  0C70  1303               	bcf	3,6	;RP1=0, select bank1
  3430  0C71  0824               	movf	(_LCDConfig^(0+128)+4),w
  3431  0C72  120A  118A  23E2  120A  158A  	fcall	_GPIO_PinWrite
  3432                           
  3433                           ;lcd.c: 985: GPIO_PinWrite(LCDConfig.EN,1);
  3434  0C77  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3435  0C78  0AF5               	incf	GPIO_PinWrite@var_pinValue_u8,f
  3436  0C79  1683               	bsf	3,5	;RP0=1, select bank1
  3437  0C7A  1303               	bcf	3,6	;RP1=0, select bank1
  3438  0C7B  0825               	movf	(_LCDConfig^(0+128)+5),w
  3439  0C7C  120A  118A  23E2  120A  158A  	fcall	_GPIO_PinWrite
  3440                           
  3441                           ;lcd.c: 986: DELAY_us(10);
  3442  0C81  300A               	movlw	10
  3443  0C82  00F0               	movwf	DELAY_us@us_count
  3444  0C83  3000               	movlw	0
  3445  0C84  00F1               	movwf	DELAY_us@us_count+1
  3446  0C85  120A  158A  230F  120A  158A  	fcall	_DELAY_us
  3447                           
  3448                           ;lcd.c: 987: GPIO_PinWrite(LCDConfig.EN,0);
  3449  0C8A  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3450  0C8B  1683               	bsf	3,5	;RP0=1, select bank1
  3451  0C8C  1303               	bcf	3,6	;RP1=0, select bank1
  3452  0C8D  0825               	movf	(_LCDConfig^(0+128)+5),w
  3453  0C8E  120A  118A  23E2   	fcall	_GPIO_PinWrite
  3454  0C91  0008               	return
  3455  0C92                     __end_of_lcd_SendCmdSignals:	
  3456                           
  3457                           	psect	text18
  3458  00F5                     __ptext18:	
  3459 ;; *************** function _lcd_BusyCheck *****************
  3460 ;; Defined at:
  3461 ;;		line 860 in file "../00-libfiles/lcd.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  busyflag        1   11[COMMON] unsigned char 
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3475 ;;      Params:         0       0       0       0       0
  3476 ;;      Locals:         1       0       0       0       0
  3477 ;;      Temps:          1       0       0       0       0
  3478 ;;      Totals:         2       0       0       0       0
  3479 ;;Total ram usage:        2 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    2
  3482 ;; This function calls:
  3483 ;;		_DELAY_ms
  3484 ;;		_DELAY_us
  3485 ;;		_GPIO_PinDirection
  3486 ;;		_GPIO_PinRead
  3487 ;;		_GPIO_PinWrite
  3488 ;; This function is called by:
  3489 ;;		_LCD_CmdWrite
  3490 ;;		_lcd_DataWrite
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           
  3495                           ;psect for function _lcd_BusyCheck
  3496  00F5                     _lcd_BusyCheck:	
  3497                           
  3498                           ;lcd.c: 862: uint8_t busyflag;
  3499                           ;lcd.c: 864: if(LCDConfig.RW != P_NC)
  3500                           
  3501                           ;incstack = 0
  3502                           ; Regs used in _lcd_BusyCheck: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3503  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  3504  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  3505  00F7  0A24               	incf	(_LCDConfig^(0+128)+4),w
  3506  00F8  1903               	btfsc	3,2
  3507  00F9  2979               	goto	l1863
  3508                           
  3509                           ;lcd.c: 865: {
  3510                           ;lcd.c: 866: GPIO_PinDirection(LCDConfig.D7,0x01u);
  3511  00FA  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  3512  00FB  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  3513  00FC  082D               	movf	(_LCDConfig^(0+128)+13),w
  3514  00FD  120A  118A  2309  120A  118A  	fcall	_GPIO_PinDirection
  3515                           
  3516                           ;lcd.c: 867: GPIO_PinWrite(LCDConfig.RS,0);
  3517  0102  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3518  0103  1683               	bsf	3,5	;RP0=1, select bank1
  3519  0104  1303               	bcf	3,6	;RP1=0, select bank1
  3520  0105  0823               	movf	(_LCDConfig^(0+128)+3),w
  3521  0106  120A  118A  23E2  120A  118A  	fcall	_GPIO_PinWrite
  3522                           
  3523                           ;lcd.c: 868: GPIO_PinWrite(LCDConfig.RW,1);
  3524  010B  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3525  010C  0AF5               	incf	GPIO_PinWrite@var_pinValue_u8,f
  3526  010D  1683               	bsf	3,5	;RP0=1, select bank1
  3527  010E  1303               	bcf	3,6	;RP1=0, select bank1
  3528  010F  0824               	movf	(_LCDConfig^(0+128)+4),w
  3529  0110  120A  118A  23E2  120A  118A  	fcall	_GPIO_PinWrite
  3530  0115                     l252:	
  3531                           ;lcd.c: 869: do
  3532                           
  3533                           
  3534                           ;lcd.c: 870: {
  3535                           ;lcd.c: 872: GPIO_PinWrite(LCDConfig.EN,0);
  3536  0115  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3537  0116  1683               	bsf	3,5	;RP0=1, select bank1
  3538  0117  1303               	bcf	3,6	;RP1=0, select bank1
  3539  0118  0825               	movf	(_LCDConfig^(0+128)+5),w
  3540  0119  120A  118A  23E2  120A  118A  	fcall	_GPIO_PinWrite
  3541                           
  3542                           ;lcd.c: 873: DELAY_us(10);
  3543  011E  300A               	movlw	10
  3544  011F  00F0               	movwf	DELAY_us@us_count
  3545  0120  3000               	movlw	0
  3546  0121  00F1               	movwf	DELAY_us@us_count+1
  3547  0122  120A  158A  230F  120A  118A  	fcall	_DELAY_us
  3548                           
  3549                           ;lcd.c: 874: GPIO_PinWrite(LCDConfig.EN,1);
  3550  0127  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3551  0128  0AF5               	incf	GPIO_PinWrite@var_pinValue_u8,f
  3552  0129  1683               	bsf	3,5	;RP0=1, select bank1
  3553  012A  1303               	bcf	3,6	;RP1=0, select bank1
  3554  012B  0825               	movf	(_LCDConfig^(0+128)+5),w
  3555  012C  120A  118A  23E2  120A  118A  	fcall	_GPIO_PinWrite
  3556                           
  3557                           ;lcd.c: 875: DELAY_us(10);
  3558  0131  300A               	movlw	10
  3559  0132  00F0               	movwf	DELAY_us@us_count
  3560  0133  3000               	movlw	0
  3561  0134  00F1               	movwf	DELAY_us@us_count+1
  3562  0135  120A  158A  230F  120A  118A  	fcall	_DELAY_us
  3563                           
  3564                           ;lcd.c: 876: busyflag = GPIO_PinRead(LCDConfig.D7);
  3565  013A  1683               	bsf	3,5	;RP0=1, select bank1
  3566  013B  1303               	bcf	3,6	;RP1=0, select bank1
  3567  013C  082D               	movf	(_LCDConfig^(0+128)+13),w
  3568  013D  120A  118A  2080  120A  118A  	fcall	_GPIO_PinRead
  3569  0142  00FA               	movwf	??_lcd_BusyCheck
  3570  0143  087A               	movf	??_lcd_BusyCheck,w
  3571  0144  00FB               	movwf	lcd_BusyCheck@busyflag
  3572                           
  3573                           ;lcd.c: 879: if(LCDConfig.v_LcdMode_U8 == 4)
  3574  0145  3004               	movlw	4
  3575  0146  1683               	bsf	3,5	;RP0=1, select bank1
  3576  0147  1303               	bcf	3,6	;RP1=0, select bank1
  3577  0148  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  3578  0149  1D03               	btfss	3,2
  3579  014A  296E               	goto	l1859
  3580                           
  3581                           ;lcd.c: 880: {
  3582                           ;lcd.c: 882: GPIO_PinWrite(LCDConfig.EN,0);
  3583  014B  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3584  014C  0825               	movf	(_LCDConfig^(0+128)+5),w
  3585  014D  120A  118A  23E2  120A  118A  	fcall	_GPIO_PinWrite
  3586                           
  3587                           ;lcd.c: 883: DELAY_us(10);
  3588  0152  300A               	movlw	10
  3589  0153  00F0               	movwf	DELAY_us@us_count
  3590  0154  3000               	movlw	0
  3591  0155  00F1               	movwf	DELAY_us@us_count+1
  3592  0156  120A  158A  230F  120A  118A  	fcall	_DELAY_us
  3593                           
  3594                           ;lcd.c: 884: GPIO_PinWrite(LCDConfig.EN,1);
  3595  015B  01F5               	clrf	GPIO_PinWrite@var_pinValue_u8
  3596  015C  0AF5               	incf	GPIO_PinWrite@var_pinValue_u8,f
  3597  015D  1683               	bsf	3,5	;RP0=1, select bank1
  3598  015E  1303               	bcf	3,6	;RP1=0, select bank1
  3599  015F  0825               	movf	(_LCDConfig^(0+128)+5),w
  3600  0160  120A  118A  23E2  120A  118A  	fcall	_GPIO_PinWrite
  3601                           
  3602                           ;lcd.c: 885: DELAY_us(10);
  3603  0165  300A               	movlw	10
  3604  0166  00F0               	movwf	DELAY_us@us_count
  3605  0167  3000               	movlw	0
  3606  0168  00F1               	movwf	DELAY_us@us_count+1
  3607  0169  120A  158A  230F  120A  118A  	fcall	_DELAY_us
  3608  016E                     l1859:	
  3609                           
  3610                           ;lcd.c: 886: }
  3611                           ;lcd.c: 887: }while(busyflag!=0);
  3612  016E  087B               	movf	lcd_BusyCheck@busyflag,w
  3613  016F  1D03               	btfss	3,2
  3614  0170  2915               	goto	l252
  3615                           
  3616                           ;lcd.c: 889: GPIO_PinDirection(LCDConfig.D7,0x00u);
  3617  0171  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  3618  0172  1683               	bsf	3,5	;RP0=1, select bank1
  3619  0173  1303               	bcf	3,6	;RP1=0, select bank1
  3620  0174  082D               	movf	(_LCDConfig^(0+128)+13),w
  3621  0175  120A  118A  2309   	fcall	_GPIO_PinDirection
  3622                           
  3623                           ;lcd.c: 890: }
  3624  0178  0008               	return
  3625  0179                     l1863:	
  3626                           
  3627                           ;lcd.c: 891: else
  3628                           ;lcd.c: 892: {
  3629                           ;lcd.c: 895: DELAY_ms(1);
  3630  0179  3001               	movlw	1
  3631  017A  00F2               	movwf	DELAY_ms@ms_count
  3632  017B  3000               	movlw	0
  3633  017C  00F3               	movwf	DELAY_ms@ms_count+1
  3634  017D  120A  158A  2336   	fcall	_DELAY_ms
  3635  0180  0008               	return
  3636  0181                     __end_of_lcd_BusyCheck:	
  3637                           
  3638                           	psect	text19
  3639  03E2                     __ptext19:	
  3640 ;; *************** function _GPIO_PinWrite *****************
  3641 ;; Defined at:
  3642 ;;		line 127 in file "../00-libfiles/gpio.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  enm_pinNumbe    1    wreg     enum E1088
  3645 ;;  var_pinValue    1    5[COMMON] unsigned char 
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;  enm_pinNumbe    1    9[COMMON] enum E1088
  3648 ;;  var_portNumb    1    8[COMMON] unsigned char 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  1    wreg      void 
  3651 ;; Registers used:
  3652 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3658 ;;      Params:         1       0       0       0       0
  3659 ;;      Locals:         2       0       0       0       0
  3660 ;;      Temps:          2       0       0       0       0
  3661 ;;      Totals:         5       0       0       0       0
  3662 ;;Total ram usage:        5 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; This function calls:
  3665 ;;		Nothing
  3666 ;; This function is called by:
  3667 ;;		_lcd_BusyCheck
  3668 ;;		_lcd_SendHigherNibble
  3669 ;;		_lcd_SendLowerNibble
  3670 ;;		_lcd_SendCmdSignals
  3671 ;;		_lcd_SendDataSignals
  3672 ;;		_main
  3673 ;;		_switch_Test
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           
  3678                           ;psect for function _GPIO_PinWrite
  3679  03E2                     _GPIO_PinWrite:	
  3680                           
  3681                           ;incstack = 0
  3682                           ; Regs used in _GPIO_PinWrite: [wreg-fsr0h+status,2+status,0]
  3683                           ;GPIO_PinWrite@enm_pinNumber stored from wreg
  3684  03E2  00F9               	movwf	GPIO_PinWrite@enm_pinNumber
  3685                           
  3686                           ;gpio.c: 130: uint8_t var_portNumber_u8;
  3687                           ;gpio.c: 133: var_portNumber_u8 = (enm_pinNumber>>3);
  3688  03E3  0879               	movf	GPIO_PinWrite@enm_pinNumber,w
  3689  03E4  00F6               	movwf	??_GPIO_PinWrite
  3690  03E5  3003               	movlw	3
  3691  03E6                     u1625:	
  3692  03E6  1003               	clrc
  3693  03E7  0CF6               	rrf	??_GPIO_PinWrite,f
  3694  03E8  3EFF               	addlw	-1
  3695  03E9  1D03               	skipz
  3696  03EA  2BE6               	goto	u1625
  3697  03EB  0876               	movf	??_GPIO_PinWrite,w
  3698  03EC  00F7               	movwf	??_GPIO_PinWrite+1
  3699  03ED  0877               	movf	??_GPIO_PinWrite+1,w
  3700  03EE  00F8               	movwf	GPIO_PinWrite@var_portNumber_u8
  3701                           
  3702                           ;gpio.c: 134: enm_pinNumber = enm_pinNumber & 0x07;
  3703  03EF  0879               	movf	GPIO_PinWrite@enm_pinNumber,w
  3704  03F0  3907               	andlw	7
  3705  03F1  00F6               	movwf	??_GPIO_PinWrite
  3706  03F2  0876               	movf	??_GPIO_PinWrite,w
  3707  03F3  00F9               	movwf	GPIO_PinWrite@enm_pinNumber
  3708                           
  3709                           ;gpio.c: 138: switch(var_portNumber_u8)
  3710  03F4  2CA9               	goto	l1815
  3711  03F5                     l1783:	
  3712                           ;gpio.c: 139: {
  3713                           ;gpio.c: 141: case 0:
  3714                           
  3715                           
  3716                           ;gpio.c: 142: ((var_pinValue_u8)? ((PORTA) |= (1<<(enm_pinNumber))): ((PORTA) &= ~(1<<(e
      +                          nm_pinNumber))));
  3717  03F5  0875               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3718  03F6  1903               	btfsc	3,2
  3719  03F7  2C08               	goto	l1787
  3720  03F8  3001               	movlw	1
  3721  03F9  00F6               	movwf	??_GPIO_PinWrite
  3722  03FA  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3723  03FB  2BFE               	goto	u1644
  3724  03FC                     u1645:	
  3725  03FC  1003               	clrc
  3726  03FD  0DF6               	rlf	??_GPIO_PinWrite,f
  3727  03FE                     u1644:	
  3728  03FE  3EFF               	addlw	-1
  3729  03FF  1D03               	skipz
  3730  0400  2BFC               	goto	u1645
  3731  0401  0876               	movf	??_GPIO_PinWrite,w
  3732  0402  00F7               	movwf	??_GPIO_PinWrite+1
  3733  0403  0877               	movf	??_GPIO_PinWrite+1,w
  3734  0404  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0405  1303               	bcf	3,6	;RP1=0, select bank0
  3736  0406  0485               	iorwf	5,f	;volatile
  3737  0407  0008               	return
  3738  0408                     l1787:	
  3739  0408  3001               	movlw	1
  3740  0409  00F6               	movwf	??_GPIO_PinWrite
  3741  040A  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3742  040B  2C0E               	goto	u1654
  3743  040C                     u1655:	
  3744  040C  1003               	clrc
  3745  040D  0DF6               	rlf	??_GPIO_PinWrite,f
  3746  040E                     u1654:	
  3747  040E  3EFF               	addlw	-1
  3748  040F  1D03               	skipz
  3749  0410  2C0C               	goto	u1655
  3750  0411  0876               	movf	??_GPIO_PinWrite,w
  3751  0412  3AFF               	xorlw	255
  3752  0413  00F7               	movwf	??_GPIO_PinWrite+1
  3753  0414  0877               	movf	??_GPIO_PinWrite+1,w
  3754  0415  1283               	bcf	3,5	;RP0=0, select bank0
  3755  0416  1303               	bcf	3,6	;RP1=0, select bank0
  3756  0417  0585               	andwf	5,f	;volatile
  3757                           
  3758                           ;gpio.c: 143: break;
  3759  0418  0008               	return
  3760  0419                     l1789:	
  3761                           ;gpio.c: 147: case 1:
  3762                           
  3763                           
  3764                           ;gpio.c: 148: ((var_pinValue_u8)? ((PORTB) |= (1<<(enm_pinNumber))): ((PORTB) &= ~(1<<(e
      +                          nm_pinNumber))));
  3765  0419  0875               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3766  041A  1903               	btfsc	3,2
  3767  041B  2C2C               	goto	l1793
  3768  041C  3001               	movlw	1
  3769  041D  00F6               	movwf	??_GPIO_PinWrite
  3770  041E  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3771  041F  2C22               	goto	u1674
  3772  0420                     u1675:	
  3773  0420  1003               	clrc
  3774  0421  0DF6               	rlf	??_GPIO_PinWrite,f
  3775  0422                     u1674:	
  3776  0422  3EFF               	addlw	-1
  3777  0423  1D03               	skipz
  3778  0424  2C20               	goto	u1675
  3779  0425  0876               	movf	??_GPIO_PinWrite,w
  3780  0426  00F7               	movwf	??_GPIO_PinWrite+1
  3781  0427  0877               	movf	??_GPIO_PinWrite+1,w
  3782  0428  1283               	bcf	3,5	;RP0=0, select bank0
  3783  0429  1303               	bcf	3,6	;RP1=0, select bank0
  3784  042A  0486               	iorwf	6,f	;volatile
  3785  042B  0008               	return
  3786  042C                     l1793:	
  3787  042C  3001               	movlw	1
  3788  042D  00F6               	movwf	??_GPIO_PinWrite
  3789  042E  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3790  042F  2C32               	goto	u1684
  3791  0430                     u1685:	
  3792  0430  1003               	clrc
  3793  0431  0DF6               	rlf	??_GPIO_PinWrite,f
  3794  0432                     u1684:	
  3795  0432  3EFF               	addlw	-1
  3796  0433  1D03               	skipz
  3797  0434  2C30               	goto	u1685
  3798  0435  0876               	movf	??_GPIO_PinWrite,w
  3799  0436  3AFF               	xorlw	255
  3800  0437  00F7               	movwf	??_GPIO_PinWrite+1
  3801  0438  0877               	movf	??_GPIO_PinWrite+1,w
  3802  0439  1283               	bcf	3,5	;RP0=0, select bank0
  3803  043A  1303               	bcf	3,6	;RP1=0, select bank0
  3804  043B  0586               	andwf	6,f	;volatile
  3805                           
  3806                           ;gpio.c: 149: break;
  3807  043C  0008               	return
  3808  043D                     l1795:	
  3809                           ;gpio.c: 153: case 2:
  3810                           
  3811                           
  3812                           ;gpio.c: 154: ((var_pinValue_u8)? ((PORTC) |= (1<<(enm_pinNumber))): ((PORTC) &= ~(1<<(e
      +                          nm_pinNumber))));
  3813  043D  0875               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3814  043E  1903               	btfsc	3,2
  3815  043F  2C50               	goto	l1799
  3816  0440  3001               	movlw	1
  3817  0441  00F6               	movwf	??_GPIO_PinWrite
  3818  0442  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3819  0443  2C46               	goto	u1704
  3820  0444                     u1705:	
  3821  0444  1003               	clrc
  3822  0445  0DF6               	rlf	??_GPIO_PinWrite,f
  3823  0446                     u1704:	
  3824  0446  3EFF               	addlw	-1
  3825  0447  1D03               	skipz
  3826  0448  2C44               	goto	u1705
  3827  0449  0876               	movf	??_GPIO_PinWrite,w
  3828  044A  00F7               	movwf	??_GPIO_PinWrite+1
  3829  044B  0877               	movf	??_GPIO_PinWrite+1,w
  3830  044C  1283               	bcf	3,5	;RP0=0, select bank0
  3831  044D  1303               	bcf	3,6	;RP1=0, select bank0
  3832  044E  0487               	iorwf	7,f	;volatile
  3833  044F  0008               	return
  3834  0450                     l1799:	
  3835  0450  3001               	movlw	1
  3836  0451  00F6               	movwf	??_GPIO_PinWrite
  3837  0452  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3838  0453  2C56               	goto	u1714
  3839  0454                     u1715:	
  3840  0454  1003               	clrc
  3841  0455  0DF6               	rlf	??_GPIO_PinWrite,f
  3842  0456                     u1714:	
  3843  0456  3EFF               	addlw	-1
  3844  0457  1D03               	skipz
  3845  0458  2C54               	goto	u1715
  3846  0459  0876               	movf	??_GPIO_PinWrite,w
  3847  045A  3AFF               	xorlw	255
  3848  045B  00F7               	movwf	??_GPIO_PinWrite+1
  3849  045C  0877               	movf	??_GPIO_PinWrite+1,w
  3850  045D  1283               	bcf	3,5	;RP0=0, select bank0
  3851  045E  1303               	bcf	3,6	;RP1=0, select bank0
  3852  045F  0587               	andwf	7,f	;volatile
  3853                           
  3854                           ;gpio.c: 155: break;
  3855  0460  0008               	return
  3856  0461                     l1801:	
  3857                           ;gpio.c: 159: case 3:
  3858                           
  3859                           
  3860                           ;gpio.c: 160: ((var_pinValue_u8)? ((PORTD) |= (1<<(enm_pinNumber))): ((PORTD) &= ~(1<<(e
      +                          nm_pinNumber))));
  3861  0461  0875               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3862  0462  1903               	btfsc	3,2
  3863  0463  2C74               	goto	l1805
  3864  0464  3001               	movlw	1
  3865  0465  00F6               	movwf	??_GPIO_PinWrite
  3866  0466  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3867  0467  2C6A               	goto	u1734
  3868  0468                     u1735:	
  3869  0468  1003               	clrc
  3870  0469  0DF6               	rlf	??_GPIO_PinWrite,f
  3871  046A                     u1734:	
  3872  046A  3EFF               	addlw	-1
  3873  046B  1D03               	skipz
  3874  046C  2C68               	goto	u1735
  3875  046D  0876               	movf	??_GPIO_PinWrite,w
  3876  046E  00F7               	movwf	??_GPIO_PinWrite+1
  3877  046F  0877               	movf	??_GPIO_PinWrite+1,w
  3878  0470  1283               	bcf	3,5	;RP0=0, select bank0
  3879  0471  1303               	bcf	3,6	;RP1=0, select bank0
  3880  0472  0488               	iorwf	8,f	;volatile
  3881  0473  0008               	return
  3882  0474                     l1805:	
  3883  0474  3001               	movlw	1
  3884  0475  00F6               	movwf	??_GPIO_PinWrite
  3885  0476  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3886  0477  2C7A               	goto	u1744
  3887  0478                     u1745:	
  3888  0478  1003               	clrc
  3889  0479  0DF6               	rlf	??_GPIO_PinWrite,f
  3890  047A                     u1744:	
  3891  047A  3EFF               	addlw	-1
  3892  047B  1D03               	skipz
  3893  047C  2C78               	goto	u1745
  3894  047D  0876               	movf	??_GPIO_PinWrite,w
  3895  047E  3AFF               	xorlw	255
  3896  047F  00F7               	movwf	??_GPIO_PinWrite+1
  3897  0480  0877               	movf	??_GPIO_PinWrite+1,w
  3898  0481  1283               	bcf	3,5	;RP0=0, select bank0
  3899  0482  1303               	bcf	3,6	;RP1=0, select bank0
  3900  0483  0588               	andwf	8,f	;volatile
  3901                           
  3902                           ;gpio.c: 161: break;
  3903  0484  0008               	return
  3904  0485                     l1807:	
  3905                           ;gpio.c: 165: case 4:
  3906                           
  3907                           
  3908                           ;gpio.c: 166: ((var_pinValue_u8)? ((PORTE) |= (1<<(enm_pinNumber))): ((PORTE) &= ~(1<<(e
      +                          nm_pinNumber))));
  3909  0485  0875               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3910  0486  1903               	btfsc	3,2
  3911  0487  2C98               	goto	l1811
  3912  0488  3001               	movlw	1
  3913  0489  00F6               	movwf	??_GPIO_PinWrite
  3914  048A  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3915  048B  2C8E               	goto	u1764
  3916  048C                     u1765:	
  3917  048C  1003               	clrc
  3918  048D  0DF6               	rlf	??_GPIO_PinWrite,f
  3919  048E                     u1764:	
  3920  048E  3EFF               	addlw	-1
  3921  048F  1D03               	skipz
  3922  0490  2C8C               	goto	u1765
  3923  0491  0876               	movf	??_GPIO_PinWrite,w
  3924  0492  00F7               	movwf	??_GPIO_PinWrite+1
  3925  0493  0877               	movf	??_GPIO_PinWrite+1,w
  3926  0494  1283               	bcf	3,5	;RP0=0, select bank0
  3927  0495  1303               	bcf	3,6	;RP1=0, select bank0
  3928  0496  0489               	iorwf	9,f	;volatile
  3929  0497  0008               	return
  3930  0498                     l1811:	
  3931  0498  3001               	movlw	1
  3932  0499  00F6               	movwf	??_GPIO_PinWrite
  3933  049A  0A79               	incf	GPIO_PinWrite@enm_pinNumber,w
  3934  049B  2C9E               	goto	u1774
  3935  049C                     u1775:	
  3936  049C  1003               	clrc
  3937  049D  0DF6               	rlf	??_GPIO_PinWrite,f
  3938  049E                     u1774:	
  3939  049E  3EFF               	addlw	-1
  3940  049F  1D03               	skipz
  3941  04A0  2C9C               	goto	u1775
  3942  04A1  0876               	movf	??_GPIO_PinWrite,w
  3943  04A2  3AFF               	xorlw	255
  3944  04A3  00F7               	movwf	??_GPIO_PinWrite+1
  3945  04A4  0877               	movf	??_GPIO_PinWrite+1,w
  3946  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  3947  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  3948  04A7  0589               	andwf	9,f	;volatile
  3949                           
  3950                           ;gpio.c: 169: }
  3951                           
  3952                           ;gpio.c: 167: break;
  3953  04A8  0008               	return
  3954  04A9                     l1815:	
  3955  04A9  0878               	movf	GPIO_PinWrite@var_portNumber_u8,w
  3956                           
  3957                           ; Switch size 1, requested type "space"
  3958                           ; Number of cases is 5, Range of values is 0 to 4
  3959                           ; switch strategies available:
  3960                           ; Name         Instructions Cycles
  3961                           ; simple_byte           16     9 (average)
  3962                           ; direct_byte           23     8 (fixed)
  3963                           ; jumptable            260     6 (fixed)
  3964                           ;	Chosen strategy is simple_byte
  3965  04AA  3A00               	xorlw	0	; case 0
  3966  04AB  1903               	skipnz
  3967  04AC  2BF5               	goto	l1783
  3968  04AD  3A01               	xorlw	1	; case 1
  3969  04AE  1903               	skipnz
  3970  04AF  2C19               	goto	l1789
  3971  04B0  3A03               	xorlw	3	; case 2
  3972  04B1  1903               	skipnz
  3973  04B2  2C3D               	goto	l1795
  3974  04B3  3A01               	xorlw	1	; case 3
  3975  04B4  1903               	skipnz
  3976  04B5  2C61               	goto	l1801
  3977  04B6  3A07               	xorlw	7	; case 4
  3978  04B7  1903               	skipnz
  3979  04B8  2C85               	goto	l1807
  3980  04B9  2CBA               	goto	l152
  3981  04BA                     l152:	
  3982  04BA  0008               	return
  3983  04BB                     __end_of_GPIO_PinWrite:	
  3984                           
  3985                           	psect	text20
  3986  0080                     __ptext20:	
  3987 ;; *************** function _GPIO_PinRead *****************
  3988 ;; Defined at:
  3989 ;;		line 192 in file "../00-libfiles/gpio.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  enm_pinNumbe    1    wreg     enum E1088
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  3994 ;;  returnStatus    1    3[COMMON] unsigned char 
  3995 ;;  var_portNumb    1    2[COMMON] unsigned char 
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      unsigned char 
  3998 ;; Registers used:
  3999 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4005 ;;      Params:         0       0       0       0       0
  4006 ;;      Locals:         3       0       0       0       0
  4007 ;;      Temps:          2       0       0       0       0
  4008 ;;      Totals:         5       0       0       0       0
  4009 ;;Total ram usage:        5 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; This function calls:
  4012 ;;		Nothing
  4013 ;; This function is called by:
  4014 ;;		_lcd_BusyCheck
  4015 ;;		_main
  4016 ;;		_switch_Test
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function _GPIO_PinRead
  4022  0080                     _GPIO_PinRead:	
  4023                           
  4024                           ;incstack = 0
  4025                           ; Regs used in _GPIO_PinRead: [wreg-fsr0h+status,2+status,0]
  4026                           ;GPIO_PinRead@enm_pinNumber stored from wreg
  4027  0080  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  4028                           
  4029                           ;gpio.c: 194: uint8_t var_portNumber_u8;
  4030                           ;gpio.c: 195: uint8_t returnStatus = 0;
  4031  0081  01F3               	clrf	GPIO_PinRead@returnStatus
  4032                           
  4033                           ;gpio.c: 197: var_portNumber_u8 = (enm_pinNumber>>3);
  4034  0082  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  4035  0083  00F0               	movwf	??_GPIO_PinRead
  4036  0084  3003               	movlw	3
  4037  0085                     u1785:	
  4038  0085  1003               	clrc
  4039  0086  0CF0               	rrf	??_GPIO_PinRead,f
  4040  0087  3EFF               	addlw	-1
  4041  0088  1D03               	skipz
  4042  0089  2885               	goto	u1785
  4043  008A  0870               	movf	??_GPIO_PinRead,w
  4044  008B  00F1               	movwf	??_GPIO_PinRead+1
  4045  008C  0871               	movf	??_GPIO_PinRead+1,w
  4046  008D  00F2               	movwf	GPIO_PinRead@var_portNumber_u8
  4047                           
  4048                           ;gpio.c: 198: enm_pinNumber = enm_pinNumber & 0x07;
  4049  008E  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  4050  008F  3907               	andlw	7
  4051  0090  00F0               	movwf	??_GPIO_PinRead
  4052  0091  0870               	movf	??_GPIO_PinRead,w
  4053  0092  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  4054                           
  4055                           ;gpio.c: 201: switch(var_portNumber_u8)
  4056  0093  28E2               	goto	l1835
  4057  0094                     l1823:	
  4058                           ;gpio.c: 202: {
  4059                           ;gpio.c: 204: case 0:
  4060                           
  4061                           
  4062                           ;gpio.c: 205: returnStatus = (((PORTA)&((1<<(enm_pinNumber))))!=0u);
  4063  0094  3001               	movlw	1
  4064  0095  00F0               	movwf	??_GPIO_PinRead
  4065  0096  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  4066  0097  289A               	goto	u1794
  4067  0098                     u1795:	
  4068  0098  1003               	clrc
  4069  0099  0DF0               	rlf	??_GPIO_PinRead,f
  4070  009A                     u1794:	
  4071  009A  3EFF               	addlw	-1
  4072  009B  1D03               	skipz
  4073  009C  2898               	goto	u1795
  4074  009D  0870               	movf	??_GPIO_PinRead,w
  4075  009E  1283               	bcf	3,5	;RP0=0, select bank0
  4076  009F  1303               	bcf	3,6	;RP1=0, select bank0
  4077  00A0  0505               	andwf	5,w	;volatile
  4078  00A1  28D9               	goto	L6
  4079  00A2                     l1825:	
  4080                           ;gpio.c: 209: case 1:
  4081                           
  4082                           ;gpio.c: 206: break;
  4083                           
  4084                           
  4085                           ;gpio.c: 210: returnStatus = (((PORTB)&((1<<(enm_pinNumber))))!=0u);
  4086  00A2  3001               	movlw	1
  4087  00A3  00F0               	movwf	??_GPIO_PinRead
  4088  00A4  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  4089  00A5  28A8               	goto	u1824
  4090  00A6                     u1825:	
  4091  00A6  1003               	clrc
  4092  00A7  0DF0               	rlf	??_GPIO_PinRead,f
  4093  00A8                     u1824:	
  4094  00A8  3EFF               	addlw	-1
  4095  00A9  1D03               	skipz
  4096  00AA  28A6               	goto	u1825
  4097  00AB  0870               	movf	??_GPIO_PinRead,w
  4098  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  4099  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  4100  00AE  0506               	andwf	6,w	;volatile
  4101  00AF  28D9               	goto	L6
  4102  00B0                     l1827:	
  4103                           ;gpio.c: 214: case 2:
  4104                           
  4105                           ;gpio.c: 211: break;
  4106                           
  4107                           
  4108                           ;gpio.c: 215: returnStatus = (((PORTC)&((1<<(enm_pinNumber))))!=0u);
  4109  00B0  3001               	movlw	1
  4110  00B1  00F0               	movwf	??_GPIO_PinRead
  4111  00B2  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  4112  00B3  28B6               	goto	u1854
  4113  00B4                     u1855:	
  4114  00B4  1003               	clrc
  4115  00B5  0DF0               	rlf	??_GPIO_PinRead,f
  4116  00B6                     u1854:	
  4117  00B6  3EFF               	addlw	-1
  4118  00B7  1D03               	skipz
  4119  00B8  28B4               	goto	u1855
  4120  00B9  0870               	movf	??_GPIO_PinRead,w
  4121  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  4122  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  4123  00BC  0507               	andwf	7,w	;volatile
  4124  00BD  28D9               	goto	L6
  4125  00BE                     l1829:	
  4126                           ;gpio.c: 220: case 3:
  4127                           
  4128                           ;gpio.c: 216: break;
  4129                           
  4130                           
  4131                           ;gpio.c: 221: returnStatus = (((PORTD)&((1<<(enm_pinNumber))))!=0u);
  4132  00BE  3001               	movlw	1
  4133  00BF  00F0               	movwf	??_GPIO_PinRead
  4134  00C0  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  4135  00C1  28C4               	goto	u1884
  4136  00C2                     u1885:	
  4137  00C2  1003               	clrc
  4138  00C3  0DF0               	rlf	??_GPIO_PinRead,f
  4139  00C4                     u1884:	
  4140  00C4  3EFF               	addlw	-1
  4141  00C5  1D03               	skipz
  4142  00C6  28C2               	goto	u1885
  4143  00C7  0870               	movf	??_GPIO_PinRead,w
  4144  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  4145  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  4146  00CA  0508               	andwf	8,w	;volatile
  4147  00CB  28D9               	goto	L6
  4148  00CC                     l1831:	
  4149                           ;gpio.c: 226: case 4:
  4150                           
  4151                           ;gpio.c: 222: break;
  4152                           
  4153                           
  4154                           ;gpio.c: 227: returnStatus = (((PORTE)&((1<<(enm_pinNumber))))!=0u);
  4155  00CC  3001               	movlw	1
  4156  00CD  00F0               	movwf	??_GPIO_PinRead
  4157  00CE  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  4158  00CF  28D2               	goto	u1914
  4159  00D0                     u1915:	
  4160  00D0  1003               	clrc
  4161  00D1  0DF0               	rlf	??_GPIO_PinRead,f
  4162  00D2                     u1914:	
  4163  00D2  3EFF               	addlw	-1
  4164  00D3  1D03               	skipz
  4165  00D4  28D0               	goto	u1915
  4166  00D5  0870               	movf	??_GPIO_PinRead,w
  4167  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  4168  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  4169  00D8  0509               	andwf	9,w	;volatile
  4170  00D9                     L6:	
  4171  00D9  1903               	btfsc	3,2
  4172  00DA  28DD               	goto	u1920
  4173  00DB  3001               	movlw	1
  4174  00DC  28DE               	goto	u1930
  4175  00DD                     u1920:	
  4176  00DD  3000               	movlw	0
  4177  00DE                     u1930:	
  4178  00DE  00F1               	movwf	??_GPIO_PinRead+1
  4179  00DF  0871               	movf	??_GPIO_PinRead+1,w
  4180  00E0  00F3               	movwf	GPIO_PinRead@returnStatus
  4181                           
  4182                           ;gpio.c: 229: }
  4183                           
  4184                           ;gpio.c: 228: break;
  4185  00E1  28F3               	goto	l1837
  4186  00E2                     l1835:	
  4187  00E2  0872               	movf	GPIO_PinRead@var_portNumber_u8,w
  4188                           
  4189                           ; Switch size 1, requested type "space"
  4190                           ; Number of cases is 5, Range of values is 0 to 4
  4191                           ; switch strategies available:
  4192                           ; Name         Instructions Cycles
  4193                           ; simple_byte           16     9 (average)
  4194                           ; direct_byte           23     8 (fixed)
  4195                           ; jumptable            260     6 (fixed)
  4196                           ;	Chosen strategy is simple_byte
  4197  00E3  3A00               	xorlw	0	; case 0
  4198  00E4  1903               	skipnz
  4199  00E5  2894               	goto	l1823
  4200  00E6  3A01               	xorlw	1	; case 1
  4201  00E7  1903               	skipnz
  4202  00E8  28A2               	goto	l1825
  4203  00E9  3A03               	xorlw	3	; case 2
  4204  00EA  1903               	skipnz
  4205  00EB  28B0               	goto	l1827
  4206  00EC  3A01               	xorlw	1	; case 3
  4207  00ED  1903               	skipnz
  4208  00EE  28BE               	goto	l1829
  4209  00EF  3A07               	xorlw	7	; case 4
  4210  00F0  1903               	skipnz
  4211  00F1  28CC               	goto	l1831
  4212  00F2  28F3               	goto	l1837
  4213  00F3                     l1837:	
  4214                           
  4215                           ;gpio.c: 230: return returnStatus;
  4216  00F3  0873               	movf	GPIO_PinRead@returnStatus,w
  4217  00F4  0008               	return
  4218  00F5                     __end_of_GPIO_PinRead:	
  4219                           
  4220                           	psect	text21
  4221  0309                     __ptext21:	
  4222 ;; *************** function _GPIO_PinDirection *****************
  4223 ;; Defined at:
  4224 ;;		line 60 in file "../00-libfiles/gpio.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;  enm_pinNumbe    1    wreg     enum E1088
  4227 ;;  var_pinDirn_    1    0[COMMON] unsigned char 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  4230 ;;  var_portNumb    1    3[COMMON] unsigned char 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  1    wreg      void 
  4233 ;; Registers used:
  4234 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4240 ;;      Params:         1       0       0       0       0
  4241 ;;      Locals:         2       0       0       0       0
  4242 ;;      Temps:          2       0       0       0       0
  4243 ;;      Totals:         5       0       0       0       0
  4244 ;;Total ram usage:        5 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; This function calls:
  4247 ;;		Nothing
  4248 ;; This function is called by:
  4249 ;;		_LCD_SetUp
  4250 ;;		_lcd_BusyCheck
  4251 ;;		_main
  4252 ;;		_switch_Test
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           
  4257                           ;psect for function _GPIO_PinDirection
  4258  0309                     _GPIO_PinDirection:	
  4259                           
  4260                           ;incstack = 0
  4261                           ; Regs used in _GPIO_PinDirection: [wreg-fsr0h+status,2+status,0]
  4262                           ;GPIO_PinDirection@enm_pinNumber stored from wreg
  4263  0309  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  4264                           
  4265                           ;gpio.c: 63: uint8_t var_portNumber_u8;
  4266                           ;gpio.c: 66: var_portNumber_u8 = (enm_pinNumber>>3);
  4267  030A  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  4268  030B  00F1               	movwf	??_GPIO_PinDirection
  4269  030C  3003               	movlw	3
  4270  030D                     u1465:	
  4271  030D  1003               	clrc
  4272  030E  0CF1               	rrf	??_GPIO_PinDirection,f
  4273  030F  3EFF               	addlw	-1
  4274  0310  1D03               	skipz
  4275  0311  2B0D               	goto	u1465
  4276  0312  0871               	movf	??_GPIO_PinDirection,w
  4277  0313  00F2               	movwf	??_GPIO_PinDirection+1
  4278  0314  0872               	movf	??_GPIO_PinDirection+1,w
  4279  0315  00F3               	movwf	GPIO_PinDirection@var_portNumber_u8
  4280                           
  4281                           ;gpio.c: 67: enm_pinNumber = enm_pinNumber & 0x07;
  4282  0316  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  4283  0317  3907               	andlw	7
  4284  0318  00F1               	movwf	??_GPIO_PinDirection
  4285  0319  0871               	movf	??_GPIO_PinDirection,w
  4286  031A  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  4287                           
  4288                           ;gpio.c: 71: switch(var_portNumber_u8)
  4289  031B  2BD0               	goto	l1777
  4290  031C                     l1745:	
  4291                           ;gpio.c: 72: {
  4292                           ;gpio.c: 74: case 0:
  4293                           
  4294                           
  4295                           ;gpio.c: 75: ((var_pinDirn_u8)? ((TRISA) |= (1<<(enm_pinNumber))): ((TRISA) &= ~(1<<(enm
      +                          _pinNumber))));
  4296  031C  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4297  031D  1903               	btfsc	3,2
  4298  031E  2B2F               	goto	l1749
  4299  031F  3001               	movlw	1
  4300  0320  00F1               	movwf	??_GPIO_PinDirection
  4301  0321  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4302  0322  2B25               	goto	u1484
  4303  0323                     u1485:	
  4304  0323  1003               	clrc
  4305  0324  0DF1               	rlf	??_GPIO_PinDirection,f
  4306  0325                     u1484:	
  4307  0325  3EFF               	addlw	-1
  4308  0326  1D03               	skipz
  4309  0327  2B23               	goto	u1485
  4310  0328  0871               	movf	??_GPIO_PinDirection,w
  4311  0329  00F2               	movwf	??_GPIO_PinDirection+1
  4312  032A  0872               	movf	??_GPIO_PinDirection+1,w
  4313  032B  1683               	bsf	3,5	;RP0=1, select bank1
  4314  032C  1303               	bcf	3,6	;RP1=0, select bank1
  4315  032D  0485               	iorwf	5,f	;volatile
  4316  032E  0008               	return
  4317  032F                     l1749:	
  4318  032F  3001               	movlw	1
  4319  0330  00F1               	movwf	??_GPIO_PinDirection
  4320  0331  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4321  0332  2B35               	goto	u1494
  4322  0333                     u1495:	
  4323  0333  1003               	clrc
  4324  0334  0DF1               	rlf	??_GPIO_PinDirection,f
  4325  0335                     u1494:	
  4326  0335  3EFF               	addlw	-1
  4327  0336  1D03               	skipz
  4328  0337  2B33               	goto	u1495
  4329  0338  0871               	movf	??_GPIO_PinDirection,w
  4330  0339  3AFF               	xorlw	255
  4331  033A  00F2               	movwf	??_GPIO_PinDirection+1
  4332  033B  0872               	movf	??_GPIO_PinDirection+1,w
  4333  033C  1683               	bsf	3,5	;RP0=1, select bank1
  4334  033D  1303               	bcf	3,6	;RP1=0, select bank1
  4335  033E  0585               	andwf	5,f	;volatile
  4336                           
  4337                           ;gpio.c: 76: break;
  4338  033F  0008               	return
  4339  0340                     l1751:	
  4340                           ;gpio.c: 80: case 1:
  4341                           
  4342                           
  4343                           ;gpio.c: 81: ((var_pinDirn_u8)? ((TRISB) |= (1<<(enm_pinNumber))): ((TRISB) &= ~(1<<(enm
      +                          _pinNumber))));
  4344  0340  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4345  0341  1903               	btfsc	3,2
  4346  0342  2B53               	goto	l1755
  4347  0343  3001               	movlw	1
  4348  0344  00F1               	movwf	??_GPIO_PinDirection
  4349  0345  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4350  0346  2B49               	goto	u1514
  4351  0347                     u1515:	
  4352  0347  1003               	clrc
  4353  0348  0DF1               	rlf	??_GPIO_PinDirection,f
  4354  0349                     u1514:	
  4355  0349  3EFF               	addlw	-1
  4356  034A  1D03               	skipz
  4357  034B  2B47               	goto	u1515
  4358  034C  0871               	movf	??_GPIO_PinDirection,w
  4359  034D  00F2               	movwf	??_GPIO_PinDirection+1
  4360  034E  0872               	movf	??_GPIO_PinDirection+1,w
  4361  034F  1683               	bsf	3,5	;RP0=1, select bank1
  4362  0350  1303               	bcf	3,6	;RP1=0, select bank1
  4363  0351  0486               	iorwf	6,f	;volatile
  4364  0352  0008               	return
  4365  0353                     l1755:	
  4366  0353  3001               	movlw	1
  4367  0354  00F1               	movwf	??_GPIO_PinDirection
  4368  0355  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4369  0356  2B59               	goto	u1524
  4370  0357                     u1525:	
  4371  0357  1003               	clrc
  4372  0358  0DF1               	rlf	??_GPIO_PinDirection,f
  4373  0359                     u1524:	
  4374  0359  3EFF               	addlw	-1
  4375  035A  1D03               	skipz
  4376  035B  2B57               	goto	u1525
  4377  035C  0871               	movf	??_GPIO_PinDirection,w
  4378  035D  3AFF               	xorlw	255
  4379  035E  00F2               	movwf	??_GPIO_PinDirection+1
  4380  035F  0872               	movf	??_GPIO_PinDirection+1,w
  4381  0360  1683               	bsf	3,5	;RP0=1, select bank1
  4382  0361  1303               	bcf	3,6	;RP1=0, select bank1
  4383  0362  0586               	andwf	6,f	;volatile
  4384                           
  4385                           ;gpio.c: 82: break;
  4386  0363  0008               	return
  4387  0364                     l1757:	
  4388                           ;gpio.c: 86: case 2:
  4389                           
  4390                           
  4391                           ;gpio.c: 87: ((var_pinDirn_u8)? ((TRISC) |= (1<<(enm_pinNumber))): ((TRISC) &= ~(1<<(enm
      +                          _pinNumber))));
  4392  0364  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4393  0365  1903               	btfsc	3,2
  4394  0366  2B77               	goto	l1761
  4395  0367  3001               	movlw	1
  4396  0368  00F1               	movwf	??_GPIO_PinDirection
  4397  0369  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4398  036A  2B6D               	goto	u1544
  4399  036B                     u1545:	
  4400  036B  1003               	clrc
  4401  036C  0DF1               	rlf	??_GPIO_PinDirection,f
  4402  036D                     u1544:	
  4403  036D  3EFF               	addlw	-1
  4404  036E  1D03               	skipz
  4405  036F  2B6B               	goto	u1545
  4406  0370  0871               	movf	??_GPIO_PinDirection,w
  4407  0371  00F2               	movwf	??_GPIO_PinDirection+1
  4408  0372  0872               	movf	??_GPIO_PinDirection+1,w
  4409  0373  1683               	bsf	3,5	;RP0=1, select bank1
  4410  0374  1303               	bcf	3,6	;RP1=0, select bank1
  4411  0375  0487               	iorwf	7,f	;volatile
  4412  0376  0008               	return
  4413  0377                     l1761:	
  4414  0377  3001               	movlw	1
  4415  0378  00F1               	movwf	??_GPIO_PinDirection
  4416  0379  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4417  037A  2B7D               	goto	u1554
  4418  037B                     u1555:	
  4419  037B  1003               	clrc
  4420  037C  0DF1               	rlf	??_GPIO_PinDirection,f
  4421  037D                     u1554:	
  4422  037D  3EFF               	addlw	-1
  4423  037E  1D03               	skipz
  4424  037F  2B7B               	goto	u1555
  4425  0380  0871               	movf	??_GPIO_PinDirection,w
  4426  0381  3AFF               	xorlw	255
  4427  0382  00F2               	movwf	??_GPIO_PinDirection+1
  4428  0383  0872               	movf	??_GPIO_PinDirection+1,w
  4429  0384  1683               	bsf	3,5	;RP0=1, select bank1
  4430  0385  1303               	bcf	3,6	;RP1=0, select bank1
  4431  0386  0587               	andwf	7,f	;volatile
  4432                           
  4433                           ;gpio.c: 88: break;
  4434  0387  0008               	return
  4435  0388                     l1763:	
  4436                           ;gpio.c: 92: case 3:
  4437                           
  4438                           
  4439                           ;gpio.c: 93: ((var_pinDirn_u8)? ((TRISD) |= (1<<(enm_pinNumber))): ((TRISD) &= ~(1<<(enm
      +                          _pinNumber))));
  4440  0388  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4441  0389  1903               	btfsc	3,2
  4442  038A  2B9B               	goto	l1767
  4443  038B  3001               	movlw	1
  4444  038C  00F1               	movwf	??_GPIO_PinDirection
  4445  038D  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4446  038E  2B91               	goto	u1574
  4447  038F                     u1575:	
  4448  038F  1003               	clrc
  4449  0390  0DF1               	rlf	??_GPIO_PinDirection,f
  4450  0391                     u1574:	
  4451  0391  3EFF               	addlw	-1
  4452  0392  1D03               	skipz
  4453  0393  2B8F               	goto	u1575
  4454  0394  0871               	movf	??_GPIO_PinDirection,w
  4455  0395  00F2               	movwf	??_GPIO_PinDirection+1
  4456  0396  0872               	movf	??_GPIO_PinDirection+1,w
  4457  0397  1683               	bsf	3,5	;RP0=1, select bank1
  4458  0398  1303               	bcf	3,6	;RP1=0, select bank1
  4459  0399  0488               	iorwf	8,f	;volatile
  4460  039A  0008               	return
  4461  039B                     l1767:	
  4462  039B  3001               	movlw	1
  4463  039C  00F1               	movwf	??_GPIO_PinDirection
  4464  039D  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4465  039E  2BA1               	goto	u1584
  4466  039F                     u1585:	
  4467  039F  1003               	clrc
  4468  03A0  0DF1               	rlf	??_GPIO_PinDirection,f
  4469  03A1                     u1584:	
  4470  03A1  3EFF               	addlw	-1
  4471  03A2  1D03               	skipz
  4472  03A3  2B9F               	goto	u1585
  4473  03A4  0871               	movf	??_GPIO_PinDirection,w
  4474  03A5  3AFF               	xorlw	255
  4475  03A6  00F2               	movwf	??_GPIO_PinDirection+1
  4476  03A7  0872               	movf	??_GPIO_PinDirection+1,w
  4477  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  4478  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  4479  03AA  0588               	andwf	8,f	;volatile
  4480                           
  4481                           ;gpio.c: 94: break;
  4482  03AB  0008               	return
  4483  03AC                     l1769:	
  4484                           ;gpio.c: 97: case 4:
  4485                           
  4486                           
  4487                           ;gpio.c: 98: ((var_pinDirn_u8)? ((TRISE) |= (1<<(enm_pinNumber))): ((TRISE) &= ~(1<<(enm
      +                          _pinNumber))));
  4488  03AC  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4489  03AD  1903               	btfsc	3,2
  4490  03AE  2BBF               	goto	l1773
  4491  03AF  3001               	movlw	1
  4492  03B0  00F1               	movwf	??_GPIO_PinDirection
  4493  03B1  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4494  03B2  2BB5               	goto	u1604
  4495  03B3                     u1605:	
  4496  03B3  1003               	clrc
  4497  03B4  0DF1               	rlf	??_GPIO_PinDirection,f
  4498  03B5                     u1604:	
  4499  03B5  3EFF               	addlw	-1
  4500  03B6  1D03               	skipz
  4501  03B7  2BB3               	goto	u1605
  4502  03B8  0871               	movf	??_GPIO_PinDirection,w
  4503  03B9  00F2               	movwf	??_GPIO_PinDirection+1
  4504  03BA  0872               	movf	??_GPIO_PinDirection+1,w
  4505  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  4506  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  4507  03BD  0489               	iorwf	9,f	;volatile
  4508  03BE  0008               	return
  4509  03BF                     l1773:	
  4510  03BF  3001               	movlw	1
  4511  03C0  00F1               	movwf	??_GPIO_PinDirection
  4512  03C1  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4513  03C2  2BC5               	goto	u1614
  4514  03C3                     u1615:	
  4515  03C3  1003               	clrc
  4516  03C4  0DF1               	rlf	??_GPIO_PinDirection,f
  4517  03C5                     u1614:	
  4518  03C5  3EFF               	addlw	-1
  4519  03C6  1D03               	skipz
  4520  03C7  2BC3               	goto	u1615
  4521  03C8  0871               	movf	??_GPIO_PinDirection,w
  4522  03C9  3AFF               	xorlw	255
  4523  03CA  00F2               	movwf	??_GPIO_PinDirection+1
  4524  03CB  0872               	movf	??_GPIO_PinDirection+1,w
  4525  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  4526  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  4527  03CE  0589               	andwf	9,f	;volatile
  4528                           
  4529                           ;gpio.c: 101: }
  4530                           
  4531                           ;gpio.c: 99: break;
  4532  03CF  0008               	return
  4533  03D0                     l1777:	
  4534  03D0  0873               	movf	GPIO_PinDirection@var_portNumber_u8,w
  4535                           
  4536                           ; Switch size 1, requested type "space"
  4537                           ; Number of cases is 5, Range of values is 0 to 4
  4538                           ; switch strategies available:
  4539                           ; Name         Instructions Cycles
  4540                           ; simple_byte           16     9 (average)
  4541                           ; direct_byte           23     8 (fixed)
  4542                           ; jumptable            260     6 (fixed)
  4543                           ;	Chosen strategy is simple_byte
  4544  03D1  3A00               	xorlw	0	; case 0
  4545  03D2  1903               	skipnz
  4546  03D3  2B1C               	goto	l1745
  4547  03D4  3A01               	xorlw	1	; case 1
  4548  03D5  1903               	skipnz
  4549  03D6  2B40               	goto	l1751
  4550  03D7  3A03               	xorlw	3	; case 2
  4551  03D8  1903               	skipnz
  4552  03D9  2B64               	goto	l1757
  4553  03DA  3A01               	xorlw	1	; case 3
  4554  03DB  1903               	skipnz
  4555  03DC  2B88               	goto	l1763
  4556  03DD  3A07               	xorlw	7	; case 4
  4557  03DE  1903               	skipnz
  4558  03DF  2BAC               	goto	l1769
  4559  03E0  2BE1               	goto	l122
  4560  03E1                     l122:	
  4561  03E1  0008               	return
  4562  03E2                     __end_of_GPIO_PinDirection:	
  4563                           
  4564                           	psect	text22
  4565  0B36                     __ptext22:	
  4566 ;; *************** function _DELAY_ms *****************
  4567 ;; Defined at:
  4568 ;;		line 75 in file "../00-libfiles/delay.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;  ms_count        2    2[COMMON] unsigned int 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0, pclath, cstack
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4582 ;;      Params:         2       0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0
  4584 ;;      Temps:          0       0       0       0       0
  4585 ;;      Totals:         2       0       0       0       0
  4586 ;;Total ram usage:        2 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    1
  4589 ;; This function calls:
  4590 ;;		_DELAY_us
  4591 ;; This function is called by:
  4592 ;;		_LCD_Init
  4593 ;;		_lcd_BusyCheck
  4594 ;;		_lcd_Reset
  4595 ;;		_main
  4596 ;;		_led_Test
  4597 ;;		_DELAY_sec
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           
  4602                           ;psect for function _DELAY_ms
  4603  0B36                     _DELAY_ms:	
  4604  0B36                     l1739:	
  4605                           ;delay.c: 77: while (ms_count != 0)
  4606                           
  4607                           ;incstack = 0
  4608                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  4609                           
  4610  0B36  0872               	movf	DELAY_ms@ms_count,w
  4611  0B37  0473               	iorwf	DELAY_ms@ms_count+1,w
  4612  0B38  1903               	btfsc	3,2
  4613  0B39  0008               	return
  4614                           
  4615                           ;delay.c: 78: {
  4616                           ;delay.c: 79: DELAY_us(300u);
  4617  0B3A  302C               	movlw	44
  4618  0B3B  00F0               	movwf	DELAY_us@us_count
  4619  0B3C  3001               	movlw	1
  4620  0B3D  00F1               	movwf	DELAY_us@us_count+1
  4621  0B3E  120A  158A  230F  120A  158A  	fcall	_DELAY_us
  4622                           
  4623                           ;delay.c: 80: ms_count--;
  4624  0B43  3001               	movlw	1
  4625  0B44  02F2               	subwf	DELAY_ms@ms_count,f
  4626  0B45  3000               	movlw	0
  4627  0B46  1C03               	skipc
  4628  0B47  03F3               	decf	DELAY_ms@ms_count+1,f
  4629  0B48  02F3               	subwf	DELAY_ms@ms_count+1,f
  4630  0B49  2B36               	goto	l1739
  4631  0B4A                     __end_of_DELAY_ms:	
  4632                           
  4633                           	psect	text23
  4634  0016                     __ptext23:	
  4635 ;; *************** function _eeprom_Test *****************
  4636 ;; Defined at:
  4637 ;;		line 207 in file "main.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;		None
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;  write_char      1   64[BANK0 ] unsigned char 
  4642 ;;  eeprom_addre    1   63[BANK0 ] unsigned char 
  4643 ;;  read_char       1   62[BANK0 ] unsigned char 
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  1    wreg      void 
  4646 ;; Registers used:
  4647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4653 ;;      Params:         0       0       0       0       0
  4654 ;;      Locals:         0       3       0       0       0
  4655 ;;      Temps:          0       3       0       0       0
  4656 ;;      Totals:         0       6       0       0       0
  4657 ;;Total ram usage:        6 bytes
  4658 ;; Hardware stack levels used:    1
  4659 ;; Hardware stack levels required when called:    3
  4660 ;; This function calls:
  4661 ;;		_EEPROM_ReadByte
  4662 ;;		_EEPROM_WriteByte
  4663 ;;		_UART_Printf
  4664 ;; This function is called by:
  4665 ;;		_main
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           
  4670                           ;psect for function _eeprom_Test
  4671  0016                     _eeprom_Test:	
  4672                           
  4673                           ;main.c: 209: unsigned char eeprom_address = 0x00, write_char = 'X', read_char;
  4674                           
  4675                           ;incstack = 0
  4676                           ; Regs used in _eeprom_Test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4677  0016  1283               	bcf	3,5	;RP0=0, select bank0
  4678  0017  1303               	bcf	3,6	;RP1=0, select bank0
  4679  0018  01DF               	clrf	eeprom_Test@eeprom_address
  4680  0019  3058               	movlw	88
  4681  001A  00DB               	movwf	??_eeprom_Test
  4682  001B  085B               	movf	??_eeprom_Test,w
  4683  001C  00E0               	movwf	eeprom_Test@write_char
  4684                           
  4685                           ;main.c: 211: UART_Printf("\n\r\n\rInbuilt Eeprom Test. Writing and reading A-Z to and f
      +                          rom Eeprom.");
  4686  001D  3083               	movlw	low (STR_5| (0+32768))
  4687  001E  00C3               	movwf	UART_Printf@argList
  4688  001F  3088               	movlw	high (STR_5| (0+32768))
  4689  0020  00C4               	movwf	UART_Printf@argList+1
  4690  0021  120A  118A  25AD  120A  118A  	fcall	_UART_Printf
  4691                           
  4692                           ;main.c: 213: for(write_char='A';write_char<='Z';write_char++)
  4693  0026  3041               	movlw	65
  4694  0027  1283               	bcf	3,5	;RP0=0, select bank0
  4695  0028  1303               	bcf	3,6	;RP1=0, select bank0
  4696  0029  00DB               	movwf	??_eeprom_Test
  4697  002A  085B               	movf	??_eeprom_Test,w
  4698  002B  00E0               	movwf	eeprom_Test@write_char
  4699  002C  305B               	movlw	91
  4700  002D  0260               	subwf	eeprom_Test@write_char,w
  4701  002E  1803               	btfsc	3,0
  4702  002F  287F               	goto	l503
  4703  0030                     l2375:	
  4704                           
  4705                           ;main.c: 214: {
  4706                           ;main.c: 215: UART_Printf("\n\rEeprom Write: %c    ",write_char);
  4707  0030  3016               	movlw	low (STR_6| (0+32768))
  4708  0031  00C3               	movwf	UART_Printf@argList
  4709  0032  3089               	movlw	high (STR_6| (0+32768))
  4710  0033  00C4               	movwf	UART_Printf@argList+1
  4711  0034  0860               	movf	eeprom_Test@write_char,w
  4712  0035  00DB               	movwf	??_eeprom_Test
  4713  0036  01DC               	clrf	??_eeprom_Test+1
  4714  0037  085B               	movf	??_eeprom_Test,w
  4715  0038  00C5               	movwf	?_UART_Printf+2
  4716  0039  085C               	movf	??_eeprom_Test+1,w
  4717  003A  00C6               	movwf	?_UART_Printf+3
  4718  003B  120A  118A  25AD  120A  118A  	fcall	_UART_Printf
  4719                           
  4720                           ;main.c: 216: EEPROM_WriteByte(eeprom_address, write_char);
  4721  0040  1283               	bcf	3,5	;RP0=0, select bank0
  4722  0041  1303               	bcf	3,6	;RP1=0, select bank0
  4723  0042  085F               	movf	eeprom_Test@eeprom_address,w
  4724  0043  00DB               	movwf	??_eeprom_Test
  4725  0044  01DC               	clrf	??_eeprom_Test+1
  4726  0045  085B               	movf	??_eeprom_Test,w
  4727  0046  00F3               	movwf	EEPROM_WriteByte@v_eepromAddress_u16
  4728  0047  085C               	movf	??_eeprom_Test+1,w
  4729  0048  00F4               	movwf	EEPROM_WriteByte@v_eepromAddress_u16+1
  4730  0049  0860               	movf	eeprom_Test@write_char,w
  4731  004A  00DD               	movwf	??_eeprom_Test+2
  4732  004B  085D               	movf	??_eeprom_Test+2,w
  4733  004C  00F5               	movwf	EEPROM_WriteByte@v_eepromData_u8
  4734  004D  120A  158A  2306  120A  118A  	fcall	_EEPROM_WriteByte
  4735                           
  4736                           ;main.c: 219: read_char = EEPROM_ReadByte(eeprom_address);
  4737  0052  1283               	bcf	3,5	;RP0=0, select bank0
  4738  0053  1303               	bcf	3,6	;RP1=0, select bank0
  4739  0054  085F               	movf	eeprom_Test@eeprom_address,w
  4740  0055  00DB               	movwf	??_eeprom_Test
  4741  0056  01DC               	clrf	??_eeprom_Test+1
  4742  0057  085B               	movf	??_eeprom_Test,w
  4743  0058  00F0               	movwf	EEPROM_ReadByte@v_eepromAddress_u16
  4744  0059  085C               	movf	??_eeprom_Test+1,w
  4745  005A  00F1               	movwf	EEPROM_ReadByte@v_eepromAddress_u16+1
  4746  005B  120A  158A  2325  120A  118A  	fcall	_EEPROM_ReadByte
  4747  0060  1283               	bcf	3,5	;RP0=0, select bank0
  4748  0061  1303               	bcf	3,6	;RP1=0, select bank0
  4749  0062  00DD               	movwf	??_eeprom_Test+2
  4750  0063  085D               	movf	??_eeprom_Test+2,w
  4751  0064  00DE               	movwf	eeprom_Test@read_char
  4752                           
  4753                           ;main.c: 220: UART_Printf("Eeprom Read: %c",read_char);
  4754  0065  303F               	movlw	low (STR_7| (0+32768))
  4755  0066  00C3               	movwf	UART_Printf@argList
  4756  0067  3089               	movlw	high (STR_7| (0+32768))
  4757  0068  00C4               	movwf	UART_Printf@argList+1
  4758  0069  085E               	movf	eeprom_Test@read_char,w
  4759  006A  00DB               	movwf	??_eeprom_Test
  4760  006B  01DC               	clrf	??_eeprom_Test+1
  4761  006C  085B               	movf	??_eeprom_Test,w
  4762  006D  00C5               	movwf	?_UART_Printf+2
  4763  006E  085C               	movf	??_eeprom_Test+1,w
  4764  006F  00C6               	movwf	?_UART_Printf+3
  4765  0070  120A  118A  25AD  120A  118A  	fcall	_UART_Printf
  4766  0075  3001               	movlw	1
  4767  0076  1283               	bcf	3,5	;RP0=0, select bank0
  4768  0077  1303               	bcf	3,6	;RP1=0, select bank0
  4769  0078  00DB               	movwf	??_eeprom_Test
  4770  0079  085B               	movf	??_eeprom_Test,w
  4771  007A  07E0               	addwf	eeprom_Test@write_char,f
  4772  007B  305B               	movlw	91
  4773  007C  0260               	subwf	eeprom_Test@write_char,w
  4774  007D  1C03               	skipc
  4775  007E  2830               	goto	l2375
  4776  007F                     l503:	
  4777                           ;main.c: 221: }
  4778                           ;main.c: 223: while (1);
  4779                           
  4780  007F  287F               	goto	l503
  4781  0080                     __end_of_eeprom_Test:	
  4782                           
  4783                           	psect	text24
  4784  0B06                     __ptext24:	
  4785 ;; *************** function _EEPROM_WriteByte *****************
  4786 ;; Defined at:
  4787 ;;		line 60 in file "../00-libfiles/eeprom.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  v_eepromAddr    2    3[COMMON] unsigned int 
  4790 ;;  v_eepromData    1    5[COMMON] unsigned char 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;		None
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  1    wreg      void 
  4795 ;; Registers used:
  4796 ;;		wreg, status,2, status,0, pclath, cstack
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4802 ;;      Params:         3       0       0       0       0
  4803 ;;      Locals:         0       0       0       0       0
  4804 ;;      Temps:          1       0       0       0       0
  4805 ;;      Totals:         4       0       0       0       0
  4806 ;;Total ram usage:        4 bytes
  4807 ;; Hardware stack levels used:    1
  4808 ;; Hardware stack levels required when called:    1
  4809 ;; This function calls:
  4810 ;;		_eeprom_write
  4811 ;; This function is called by:
  4812 ;;		_eeprom_Test
  4813 ;;		_EEPROM_WriteString
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           
  4818                           ;psect for function _EEPROM_WriteByte
  4819  0B06                     _EEPROM_WriteByte:	
  4820                           
  4821                           ;eeprom.c: 62: eeprom_write(v_eepromAddress_u16,v_eepromData_u8);
  4822                           
  4823                           ;incstack = 0
  4824                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  4825  0B06  0875               	movf	EEPROM_WriteByte@v_eepromData_u8,w
  4826  0B07  00F6               	movwf	??_EEPROM_WriteByte
  4827  0B08  0876               	movf	??_EEPROM_WriteByte,w
  4828  0B09  00F0               	movwf	eeprom_write@value
  4829  0B0A  0873               	movf	EEPROM_WriteByte@v_eepromAddress_u16,w
  4830  0B0B  120A  158A  243F   	fcall	_eeprom_write
  4831  0B0E  0008               	return
  4832  0B0F                     __end_of_EEPROM_WriteByte:	
  4833                           
  4834                           	psect	text25
  4835  0C3F                     __ptext25:	
  4836 ;; *************** function _eeprom_write *****************
  4837 ;; Defined at:
  4838 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\pic\eewrite.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;  addr            1    wreg     unsigned char 
  4841 ;;  value           1    0[COMMON] unsigned char 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  addr            1    2[COMMON] unsigned char 
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  1    wreg      void 
  4846 ;; Registers used:
  4847 ;;		wreg, status,2, status,0
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4853 ;;      Params:         1       0       0       0       0
  4854 ;;      Locals:         1       0       0       0       0
  4855 ;;      Temps:          1       0       0       0       0
  4856 ;;      Totals:         3       0       0       0       0
  4857 ;;Total ram usage:        3 bytes
  4858 ;; Hardware stack levels used:    1
  4859 ;; This function calls:
  4860 ;;		Nothing
  4861 ;; This function is called by:
  4862 ;;		_EEPROM_WriteByte
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           
  4867                           ;psect for function _eeprom_write
  4868  0C3F                     _eeprom_write:	
  4869                           
  4870                           ;incstack = 0
  4871                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  4872                           ;eeprom_write@addr stored from wreg
  4873  0C3F  00F2               	movwf	eeprom_write@addr
  4874  0C40                     l525:	
  4875  0C40  1683               	bsf	3,5	;RP0=1, select bank3
  4876  0C41  1703               	bsf	3,6	;RP1=1, select bank3
  4877  0C42  188C               	btfsc	12,1	;volsfr
  4878  0C43  2C40               	goto	l525
  4879  0C44  0872               	movf	eeprom_write@addr,w
  4880  0C45  1283               	bcf	3,5	;RP0=0, select bank2
  4881  0C46  1703               	bsf	3,6	;RP1=1, select bank2
  4882  0C47  008D               	movwf	13	;volatile
  4883  0C48  0870               	movf	eeprom_write@value,w
  4884  0C49  008C               	movwf	12	;volatile
  4885  0C4A  303F               	movlw	63
  4886  0C4B  00F1               	movwf	??_eeprom_write
  4887  0C4C  0871               	movf	??_eeprom_write,w
  4888  0C4D  1683               	bsf	3,5	;RP0=1, select bank3
  4889  0C4E  1703               	bsf	3,6	;RP1=1, select bank3
  4890  0C4F  058C               	andwf	12,f	;volsfr
  4891  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  4892  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  4893  0C52  1003               	bcf	3,0	;volatile
  4894  0C53  1B8B               	btfsc	11,7	;volatile
  4895  0C54  1403               	bsf	3,0	;volatile
  4896  0C55  138B               	bcf	11,7	;volatile
  4897  0C56  1683               	bsf	3,5	;RP0=1, select bank3
  4898  0C57  1703               	bsf	3,6	;RP1=1, select bank3
  4899  0C58  150C               	bsf	12,2	;volsfr
  4900  0C59  3055               	movlw	85
  4901  0C5A  008D               	movwf	13	;volsfr
  4902  0C5B  30AA               	movlw	170
  4903  0C5C  008D               	movwf	13	;volsfr
  4904  0C5D  148C               	bsf	12,1	;volsfr
  4905  0C5E  110C               	bcf	12,2	;volsfr
  4906  0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  4907  0C60  1303               	bcf	3,6	;RP1=0, select bank0
  4908  0C61  1C03               	btfss	3,0	;volatile
  4909  0C62  0008               	return
  4910  0C63  178B               	bsf	11,7	;volatile
  4911  0C64  0008               	return
  4912  0C65                     __end_of_eeprom_write:	
  4913                           
  4914                           	psect	text26
  4915  0B25                     __ptext26:	
  4916 ;; *************** function _EEPROM_ReadByte *****************
  4917 ;; Defined at:
  4918 ;;		line 88 in file "../00-libfiles/eeprom.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;  v_eepromAddr    2    0[COMMON] unsigned int 
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;		None
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  1    wreg      unsigned char 
  4925 ;; Registers used:
  4926 ;;		wreg
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4932 ;;      Params:         2       0       0       0       0
  4933 ;;      Locals:         0       0       0       0       0
  4934 ;;      Temps:          0       0       0       0       0
  4935 ;;      Totals:         2       0       0       0       0
  4936 ;;Total ram usage:        2 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; This function calls:
  4939 ;;		Nothing
  4940 ;; This function is called by:
  4941 ;;		_eeprom_Test
  4942 ;;		_EEPROM_ReadString
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           
  4947                           ;psect for function _EEPROM_ReadByte
  4948  0B25                     _EEPROM_ReadByte:	
  4949  0B25                     l59:	
  4950                           ;eeprom.c: 90: while(RD || WR);
  4951                           
  4952                           ;incstack = 0
  4953                           ; Regs used in _EEPROM_ReadByte: [wreg]
  4954                           
  4955  0B25  1683               	bsf	3,5	;RP0=1, select bank3
  4956  0B26  1703               	bsf	3,6	;RP1=1, select bank3
  4957  0B27  180C               	btfsc	12,0	;volsfr
  4958  0B28  2B25               	goto	l59
  4959  0B29  188C               	btfsc	12,1	;volsfr
  4960  0B2A  2B25               	goto	l59
  4961                           
  4962                           ;eeprom.c: 91: EEADR=v_eepromAddress_u16;
  4963  0B2B  0870               	movf	EEPROM_ReadByte@v_eepromAddress_u16,w
  4964  0B2C  1283               	bcf	3,5	;RP0=0, select bank2
  4965  0B2D  1703               	bsf	3,6	;RP1=1, select bank2
  4966  0B2E  008D               	movwf	13	;volatile
  4967                           
  4968                           ;eeprom.c: 93: RD = 1;
  4969  0B2F  1683               	bsf	3,5	;RP0=1, select bank3
  4970  0B30  1703               	bsf	3,6	;RP1=1, select bank3
  4971  0B31  140C               	bsf	12,0	;volsfr
  4972                           
  4973                           ;eeprom.c: 94: return(EEDATA);
  4974  0B32  1283               	bcf	3,5	;RP0=0, select bank2
  4975  0B33  1703               	bsf	3,6	;RP1=1, select bank2
  4976  0B34  080C               	movf	12,w	;volatile
  4977  0B35  0008               	return
  4978  0B36                     __end_of_EEPROM_ReadByte:	
  4979                           
  4980                           	psect	text27
  4981  0B91                     __ptext27:	
  4982 ;; *************** function _adc_Test *****************
  4983 ;; Defined at:
  4984 ;;		line 196 in file "main.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;		None
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;		None
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      void 
  4991 ;; Registers used:
  4992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4998 ;;      Params:         0       0       0       0       0
  4999 ;;      Locals:         0       0       0       0       0
  5000 ;;      Temps:          0       0       0       0       0
  5001 ;;      Totals:         0       0       0       0       0
  5002 ;;Total ram usage:        0 bytes
  5003 ;; Hardware stack levels used:    1
  5004 ;; Hardware stack levels required when called:    3
  5005 ;; This function calls:
  5006 ;;		_ADC_GetAdcValue
  5007 ;;		_ADC_Init
  5008 ;;		_UART_Printf
  5009 ;; This function is called by:
  5010 ;;		_main
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           
  5015                           ;psect for function _adc_Test
  5016  0B91                     _adc_Test:	
  5017                           
  5018                           ;main.c: 198: ADC_Init();
  5019                           
  5020                           ;incstack = 0
  5021                           ; Regs used in _adc_Test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5022  0B91  120A  158A  22F5  120A  158A  	fcall	_ADC_Init
  5023  0B96                     l2361:	
  5024                           ;main.c: 200: while(1)
  5025                           
  5026                           
  5027                           ;main.c: 201: {
  5028                           ;main.c: 202: UART_Printf("\n\rADC0 value= %4d",ADC_GetAdcValue(0));
  5029  0B96  302D               	movlw	low (STR_4| (0+32768))
  5030  0B97  1283               	bcf	3,5	;RP0=0, select bank0
  5031  0B98  1303               	bcf	3,6	;RP1=0, select bank0
  5032  0B99  00C3               	movwf	UART_Printf@argList
  5033  0B9A  3089               	movlw	high (STR_4| (0+32768))
  5034  0B9B  00C4               	movwf	UART_Printf@argList+1
  5035  0B9C  3000               	movlw	0
  5036  0B9D  120A  158A  23D1  120A  158A  	fcall	_ADC_GetAdcValue
  5037  0BA2  0873               	movf	?_ADC_GetAdcValue+1,w
  5038  0BA3  1283               	bcf	3,5	;RP0=0, select bank0
  5039  0BA4  1303               	bcf	3,6	;RP1=0, select bank0
  5040  0BA5  00C6               	movwf	?_UART_Printf+3
  5041  0BA6  0872               	movf	?_ADC_GetAdcValue,w
  5042  0BA7  00C5               	movwf	?_UART_Printf+2
  5043  0BA8  120A  118A  25AD  120A  158A  	fcall	_UART_Printf
  5044  0BAD  2B96               	goto	l2361
  5045  0BAE                     __end_of_adc_Test:	
  5046                           
  5047                           	psect	text28
  5048  05AD                     __ptext28:	
  5049 ;; *************** function _UART_Printf *****************
  5050 ;; Defined at:
  5051 ;;		line 413 in file "../00-libfiles/uart.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  argList         2   35[BANK0 ] PTR const unsigned char 
  5054 ;;		 -> STR_7(16), STR_6(23), STR_5(69), STR_4(18), 
  5055 ;;		 -> STR_1(131), 
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;  v_num_u32       4   48[BANK0 ] unsigned long 
  5058 ;;  v_num_s32       4   42[BANK0 ] long 
  5059 ;;  ptr             2   54[BANK0 ] PTR const unsigned char 
  5060 ;;		 -> STR_7(16), STR_6(23), STR_5(69), STR_4(18), 
  5061 ;;		 -> STR_1(131), 
  5062 ;;  v_num_u16       2   52[BANK0 ] unsigned int 
  5063 ;;  v_num_s16       2   46[BANK0 ] int 
  5064 ;;  argp            1   58[BANK0 ] PTR void [1]
  5065 ;;		 -> ?_UART_Printf(1), 
  5066 ;;  v_numOfDigit    1   57[BANK0 ] unsigned char 
  5067 ;;  ch              1   56[BANK0 ] unsigned char 
  5068 ;;  str             1   41[BANK0 ] PTR unsigned char 
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  1    wreg      void 
  5071 ;; Registers used:
  5072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5073 ;; Tracked objects:
  5074 ;;		On entry : 0/0
  5075 ;;		On exit  : 0/0
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5078 ;;      Params:         0       4       0       0       0
  5079 ;;      Locals:         0      18       0       0       0
  5080 ;;      Temps:          0       2       0       0       0
  5081 ;;      Totals:         0      24       0       0       0
  5082 ;;Total ram usage:       24 bytes
  5083 ;; Hardware stack levels used:    1
  5084 ;; Hardware stack levels required when called:    2
  5085 ;; This function calls:
  5086 ;;		_UART_TxChar
  5087 ;;		_UART_TxNumber
  5088 ;;		_UART_TxString
  5089 ;;		___bmul
  5090 ;; This function is called by:
  5091 ;;		_main
  5092 ;;		_adc_Test
  5093 ;;		_eeprom_Test
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096                           
  5097                           
  5098                           ;psect for function _UART_Printf
  5099  05AD                     _UART_Printf:	
  5100                           
  5101                           ;uart.c: 415: const char *ptr;
  5102                           ;uart.c: 416: va_list argp;
  5103                           ;uart.c: 417: sint16_t v_num_s16;
  5104                           ;uart.c: 418: sint32_t v_num_s32;
  5105                           ;uart.c: 419: uint16_t v_num_u16;
  5106                           ;uart.c: 420: uint32_t v_num_u32;
  5107                           ;uart.c: 421: char *str;
  5108                           ;uart.c: 422: char ch;
  5109                           ;uart.c: 423: uint8_t v_numOfDigitsToTransmit_u8;
  5110                           ;uart.c: 429: *argp = __va_start();
  5111                           
  5112                           ;incstack = 0
  5113                           ; Regs used in _UART_Printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5114  05AD  3045               	movlw	(low ((?_UART_Printf| 0+2)))& (0+255)
  5115  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  5116  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  5117  05B0  00C7               	movwf	??_UART_Printf
  5118  05B1  0847               	movf	??_UART_Printf,w
  5119  05B2  00DA               	movwf	UART_Printf@argp
  5120                           
  5121                           ;uart.c: 432: for(ptr = argList; *ptr != '\0'; ptr++)
  5122  05B3  0843               	movf	UART_Printf@argList,w
  5123  05B4  00D6               	movwf	UART_Printf@ptr
  5124  05B5  0844               	movf	UART_Printf@argList+1,w
  5125  05B6  00D7               	movwf	UART_Printf@ptr+1
  5126  05B7                     l2293:	
  5127  05B7  0857               	movf	UART_Printf@ptr+1,w
  5128  05B8  00FF               	movwf	127
  5129  05B9  0856               	movf	UART_Printf@ptr,w
  5130  05BA  0084               	movwf	4
  5131  05BB  120A  158A  214F  120A  118A  	fcall	stringtab
  5132  05C0  3A00               	xorlw	0
  5133  05C1  1903               	btfsc	3,2
  5134  05C2  0008               	return
  5135                           
  5136                           ;uart.c: 433: {
  5137                           ;uart.c: 435: ch= *ptr;
  5138  05C3  0857               	movf	UART_Printf@ptr+1,w
  5139  05C4  00FF               	movwf	127
  5140  05C5  0856               	movf	UART_Printf@ptr,w
  5141  05C6  0084               	movwf	4
  5142  05C7  120A  158A  214F  120A  118A  	fcall	stringtab
  5143  05CC  00C7               	movwf	??_UART_Printf
  5144  05CD  0847               	movf	??_UART_Printf,w
  5145  05CE  00D8               	movwf	UART_Printf@ch
  5146                           
  5147                           ;uart.c: 436: if(ch == '%')
  5148  05CF  3025               	movlw	37
  5149  05D0  0658               	xorwf	UART_Printf@ch,w
  5150  05D1  1D03               	btfss	3,2
  5151  05D2  2FC3               	goto	l2289
  5152                           
  5153                           ;uart.c: 437: {
  5154                           ;uart.c: 438: ptr++;
  5155  05D3  3001               	movlw	1
  5156  05D4  07D6               	addwf	UART_Printf@ptr,f
  5157  05D5  1803               	skipnc
  5158  05D6  0AD7               	incf	UART_Printf@ptr+1,f
  5159  05D7  3000               	movlw	0
  5160  05D8  07D7               	addwf	UART_Printf@ptr+1,f
  5161                           
  5162                           ;uart.c: 439: ch = *ptr;
  5163  05D9  0857               	movf	UART_Printf@ptr+1,w
  5164  05DA  00FF               	movwf	127
  5165  05DB  0856               	movf	UART_Printf@ptr,w
  5166  05DC  0084               	movwf	4
  5167  05DD  120A  158A  214F  120A  118A  	fcall	stringtab
  5168  05E2  00C7               	movwf	??_UART_Printf
  5169  05E3  0847               	movf	??_UART_Printf,w
  5170  05E4  00D8               	movwf	UART_Printf@ch
  5171                           
  5172                           ;uart.c: 440: if((ch>=0x30) && (ch<=0x39))
  5173  05E5  3030               	movlw	48
  5174  05E6  0258               	subwf	UART_Printf@ch,w
  5175  05E7  1C03               	skipc
  5176  05E8  2E1A               	goto	l2201
  5177  05E9  303A               	movlw	58
  5178  05EA  0258               	subwf	UART_Printf@ch,w
  5179  05EB  1803               	skipnc
  5180  05EC  2E1A               	goto	l2201
  5181                           
  5182                           ;uart.c: 441: {
  5183                           ;uart.c: 442: v_numOfDigitsToTransmit_u8 = 0;
  5184  05ED  01D9               	clrf	UART_Printf@v_numOfDigitsToTransmit_u8
  5185  05EE                     l2197:	
  5186                           ;uart.c: 443: while((ch>=0x30) && (ch<=0x39))
  5187                           
  5188  05EE  3030               	movlw	48
  5189  05EF  0258               	subwf	UART_Printf@ch,w
  5190  05F0  1C03               	skipc
  5191  05F1  2F91               	goto	l2287
  5192  05F2  303A               	movlw	58
  5193  05F3  0258               	subwf	UART_Printf@ch,w
  5194  05F4  1803               	btfsc	3,0
  5195  05F5  2F91               	goto	l2287
  5196                           
  5197                           ;uart.c: 444: {
  5198                           ;uart.c: 445: v_numOfDigitsToTransmit_u8 = (v_numOfDigitsToTransmit_u8 * 10) + (ch-0x30)
      +                          ;
  5199  05F6  300A               	movlw	10
  5200  05F7  00C7               	movwf	??_UART_Printf
  5201  05F8  0847               	movf	??_UART_Printf,w
  5202  05F9  00A0               	movwf	___bmul@multiplicand
  5203  05FA  0859               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5204  05FB  120A  118A  2003  120A  118A  	fcall	___bmul
  5205  0600  1283               	bcf	3,5	;RP0=0, select bank0
  5206  0601  1303               	bcf	3,6	;RP1=0, select bank0
  5207  0602  0758               	addwf	UART_Printf@ch,w
  5208  0603  3ED0               	addlw	208
  5209  0604  00C8               	movwf	??_UART_Printf+1
  5210  0605  0848               	movf	??_UART_Printf+1,w
  5211  0606  00D9               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  5212                           
  5213                           ;uart.c: 446: ptr++;
  5214  0607  3001               	movlw	1
  5215  0608  07D6               	addwf	UART_Printf@ptr,f
  5216  0609  1803               	skipnc
  5217  060A  0AD7               	incf	UART_Printf@ptr+1,f
  5218  060B  3000               	movlw	0
  5219  060C  07D7               	addwf	UART_Printf@ptr+1,f
  5220                           
  5221                           ;uart.c: 447: ch = *ptr;
  5222  060D  0857               	movf	UART_Printf@ptr+1,w
  5223  060E  00FF               	movwf	127
  5224  060F  0856               	movf	UART_Printf@ptr,w
  5225  0610  0084               	movwf	4
  5226  0611  120A  158A  214F  120A  118A  	fcall	stringtab
  5227  0616  00C7               	movwf	??_UART_Printf
  5228  0617  0847               	movf	??_UART_Printf,w
  5229  0618  00D8               	movwf	UART_Printf@ch
  5230  0619  2DEE               	goto	l2197
  5231  061A                     l2201:	
  5232                           ;uart.c: 448: }
  5233                           ;uart.c: 449: }
  5234                           
  5235                           
  5236                           ;uart.c: 450: else
  5237                           ;uart.c: 451: {
  5238                           ;uart.c: 452: v_numOfDigitsToTransmit_u8 = 0xffu;
  5239  061A  30FF               	movlw	255
  5240  061B  00C7               	movwf	??_UART_Printf
  5241  061C  0847               	movf	??_UART_Printf,w
  5242  061D  00D9               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  5243                           
  5244                           ;uart.c: 453: }
  5245                           ;uart.c: 456: switch(ch)
  5246  061E  2F91               	goto	l2287
  5247  061F                     l2203:	
  5248                           ;uart.c: 457: {
  5249                           ;uart.c: 458: case 'C':
  5250                           
  5251                           
  5252                           ;uart.c: 459: case 'c':
  5253                           ;uart.c: 460: ch = (*(uint8_t *)__va_arg((*(uint8_t **)argp), (uint8_t)0));
  5254  061F  085A               	movf	UART_Printf@argp,w
  5255  0620  0084               	movwf	4
  5256  0621  1383               	bcf	3,7	;select IRP bank0
  5257  0622  0800               	movf	0,w
  5258  0623  00C7               	movwf	??_UART_Printf
  5259  0624  0847               	movf	??_UART_Printf,w
  5260  0625  00D8               	movwf	UART_Printf@ch
  5261  0626  3002               	movlw	2
  5262  0627  00C7               	movwf	??_UART_Printf
  5263  0628  0847               	movf	??_UART_Printf,w
  5264  0629  07DA               	addwf	UART_Printf@argp,f
  5265  062A  2FC3               	goto	l2289
  5266  062B                     l2209:	
  5267                           ;uart.c: 464: case 'd':
  5268                           
  5269                           ;uart.c: 462: break;
  5270                           
  5271                           ;uart.c: 461: UART_TxChar(ch);
  5272                           
  5273                           
  5274                           ;uart.c: 465: v_num_s16 = (*(sint16_t *)__va_arg((*(sint16_t **)argp), (sint16_t)0));
  5275  062B  1283               	bcf	3,5	;RP0=0, select bank0
  5276  062C  1303               	bcf	3,6	;RP1=0, select bank0
  5277  062D  085A               	movf	UART_Printf@argp,w
  5278  062E  0084               	movwf	4
  5279  062F  1383               	bcf	3,7	;select IRP bank0
  5280  0630  0800               	movf	0,w
  5281  0631  00CE               	movwf	UART_Printf@v_num_s16
  5282  0632  0A84               	incf	4,f
  5283  0633  0800               	movf	0,w
  5284  0634  00CF               	movwf	UART_Printf@v_num_s16+1
  5285  0635  3002               	movlw	2
  5286  0636  00C7               	movwf	??_UART_Printf
  5287  0637  0847               	movf	??_UART_Printf,w
  5288  0638  07DA               	addwf	UART_Printf@argp,f
  5289                           
  5290                           ;uart.c: 466: if(v_num_s16<0)
  5291  0639  1FCF               	btfss	UART_Printf@v_num_s16+1,7
  5292  063A  2E46               	goto	l2219
  5293                           
  5294                           ;uart.c: 467: {
  5295                           ;uart.c: 468: v_num_s16 = -v_num_s16;
  5296  063B  09CE               	comf	UART_Printf@v_num_s16,f
  5297  063C  09CF               	comf	UART_Printf@v_num_s16+1,f
  5298  063D  0ACE               	incf	UART_Printf@v_num_s16,f
  5299  063E  1903               	skipnz
  5300  063F  0ACF               	incf	UART_Printf@v_num_s16+1,f
  5301                           
  5302                           ;uart.c: 469: UART_TxChar('-');
  5303  0640  302D               	movlw	45
  5304  0641  120A  158A  22FD  120A  118A  	fcall	_UART_TxChar
  5305  0646                     l2219:	
  5306                           
  5307                           ;uart.c: 470: }
  5308                           ;uart.c: 471: UART_TxNumber(10u,v_num_s16,v_numOfDigitsToTransmit_u8);
  5309  0646  1283               	bcf	3,5	;RP0=0, select bank0
  5310  0647  1303               	bcf	3,6	;RP1=0, select bank0
  5311  0648  084E               	movf	UART_Printf@v_num_s16,w
  5312  0649  00A4               	movwf	UART_TxNumber@v_number_u32
  5313  064A  084F               	movf	UART_Printf@v_num_s16+1,w
  5314  064B  00A5               	movwf	UART_TxNumber@v_number_u32+1
  5315  064C  3000               	movlw	0
  5316  064D  1BA5               	btfsc	UART_TxNumber@v_number_u32+1,7
  5317  064E  30FF               	movlw	255
  5318  064F  00A6               	movwf	UART_TxNumber@v_number_u32+2
  5319  0650  00A7               	movwf	UART_TxNumber@v_number_u32+3
  5320  0651  0859               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5321  0652  00C7               	movwf	??_UART_Printf
  5322  0653  0847               	movf	??_UART_Printf,w
  5323  0654  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  5324  0655  300A               	movlw	10
  5325  0656  120A  118A  24BB  120A  118A  	fcall	_UART_TxNumber
  5326                           
  5327                           ;uart.c: 472: break;
  5328  065B  2FC9               	goto	l2291
  5329  065C                     l2221:	
  5330                           ;uart.c: 474: case 'D':
  5331                           
  5332                           
  5333                           ;uart.c: 475: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
  5334  065C  1283               	bcf	3,5	;RP0=0, select bank0
  5335  065D  1303               	bcf	3,6	;RP1=0, select bank0
  5336  065E  085A               	movf	UART_Printf@argp,w
  5337  065F  0084               	movwf	4
  5338  0660  1383               	bcf	3,7	;select IRP bank0
  5339  0661  0800               	movf	0,w
  5340  0662  00CA               	movwf	UART_Printf@v_num_s32
  5341  0663  0A84               	incf	4,f
  5342  0664  0800               	movf	0,w
  5343  0665  00CB               	movwf	UART_Printf@v_num_s32+1
  5344  0666  0A84               	incf	4,f
  5345  0667  0800               	movf	0,w
  5346  0668  00CC               	movwf	UART_Printf@v_num_s32+2
  5347  0669  0A84               	incf	4,f
  5348  066A  0800               	movf	0,w
  5349  066B  00CD               	movwf	UART_Printf@v_num_s32+3
  5350  066C  3004               	movlw	4
  5351  066D  00C7               	movwf	??_UART_Printf
  5352  066E  0847               	movf	??_UART_Printf,w
  5353  066F  07DA               	addwf	UART_Printf@argp,f
  5354                           
  5355                           ;uart.c: 476: if(v_num_s32<0)
  5356  0670  1FCD               	btfss	UART_Printf@v_num_s32+3,7
  5357  0671  2E83               	goto	l2231
  5358                           
  5359                           ;uart.c: 477: {
  5360                           ;uart.c: 478: v_num_s32 = -v_num_s32;
  5361  0672  09CA               	comf	UART_Printf@v_num_s32,f
  5362  0673  09CB               	comf	UART_Printf@v_num_s32+1,f
  5363  0674  09CC               	comf	UART_Printf@v_num_s32+2,f
  5364  0675  09CD               	comf	UART_Printf@v_num_s32+3,f
  5365  0676  0ACA               	incf	UART_Printf@v_num_s32,f
  5366  0677  1903               	skipnz
  5367  0678  0ACB               	incf	UART_Printf@v_num_s32+1,f
  5368  0679  1903               	skipnz
  5369  067A  0ACC               	incf	UART_Printf@v_num_s32+2,f
  5370  067B  1903               	skipnz
  5371  067C  0ACD               	incf	UART_Printf@v_num_s32+3,f
  5372                           
  5373                           ;uart.c: 479: UART_TxChar('-');
  5374  067D  302D               	movlw	45
  5375  067E  120A  158A  22FD  120A  118A  	fcall	_UART_TxChar
  5376  0683                     l2231:	
  5377                           
  5378                           ;uart.c: 480: }
  5379                           ;uart.c: 481: UART_TxNumber(10u,v_num_s32,v_numOfDigitsToTransmit_u8);
  5380  0683  1283               	bcf	3,5	;RP0=0, select bank0
  5381  0684  1303               	bcf	3,6	;RP1=0, select bank0
  5382  0685  084D               	movf	UART_Printf@v_num_s32+3,w
  5383  0686  00A7               	movwf	UART_TxNumber@v_number_u32+3
  5384  0687  084C               	movf	UART_Printf@v_num_s32+2,w
  5385  0688  00A6               	movwf	UART_TxNumber@v_number_u32+2
  5386  0689  084B               	movf	UART_Printf@v_num_s32+1,w
  5387  068A  00A5               	movwf	UART_TxNumber@v_number_u32+1
  5388  068B  084A               	movf	UART_Printf@v_num_s32,w
  5389  068C  00A4               	movwf	UART_TxNumber@v_number_u32
  5390  068D  0859               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5391  068E  00C7               	movwf	??_UART_Printf
  5392  068F  0847               	movf	??_UART_Printf,w
  5393  0690  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  5394  0691  300A               	movlw	10
  5395  0692  120A  118A  24BB  120A  118A  	fcall	_UART_TxNumber
  5396                           
  5397                           ;uart.c: 482: break;
  5398  0697  2FC9               	goto	l2291
  5399  0698                     l2233:	
  5400                           ;uart.c: 484: case 'u':
  5401                           
  5402                           
  5403                           ;uart.c: 485: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  5404  0698  1283               	bcf	3,5	;RP0=0, select bank0
  5405  0699  1303               	bcf	3,6	;RP1=0, select bank0
  5406  069A  085A               	movf	UART_Printf@argp,w
  5407  069B  0084               	movwf	4
  5408  069C  1383               	bcf	3,7	;select IRP bank0
  5409  069D  0800               	movf	0,w
  5410  069E  00D4               	movwf	UART_Printf@v_num_u16
  5411  069F  0A84               	incf	4,f
  5412  06A0  0800               	movf	0,w
  5413  06A1  00D5               	movwf	UART_Printf@v_num_u16+1
  5414  06A2  3002               	movlw	2
  5415  06A3  00C7               	movwf	??_UART_Printf
  5416  06A4  0847               	movf	??_UART_Printf,w
  5417  06A5  07DA               	addwf	UART_Printf@argp,f
  5418                           
  5419                           ;uart.c: 486: UART_TxNumber(10u,v_num_u16,v_numOfDigitsToTransmit_u8);
  5420  06A6  0854               	movf	UART_Printf@v_num_u16,w
  5421  06A7  00A4               	movwf	UART_TxNumber@v_number_u32
  5422  06A8  0855               	movf	UART_Printf@v_num_u16+1,w
  5423  06A9  00A5               	movwf	UART_TxNumber@v_number_u32+1
  5424  06AA  01A6               	clrf	UART_TxNumber@v_number_u32+2
  5425  06AB  01A7               	clrf	UART_TxNumber@v_number_u32+3
  5426  06AC  0859               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5427  06AD  00C7               	movwf	??_UART_Printf
  5428  06AE  0847               	movf	??_UART_Printf,w
  5429  06AF  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  5430  06B0  300A               	movlw	10
  5431  06B1  120A  118A  24BB  120A  118A  	fcall	_UART_TxNumber
  5432                           
  5433                           ;uart.c: 487: break;
  5434  06B6  2FC9               	goto	l2291
  5435  06B7                     l2239:	
  5436                           ;uart.c: 489: case 'U':
  5437                           
  5438                           
  5439                           ;uart.c: 490: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  5440  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  5441  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  5442  06B9  085A               	movf	UART_Printf@argp,w
  5443  06BA  0084               	movwf	4
  5444  06BB  1383               	bcf	3,7	;select IRP bank0
  5445  06BC  0800               	movf	0,w
  5446  06BD  00D0               	movwf	UART_Printf@v_num_u32
  5447  06BE  0A84               	incf	4,f
  5448  06BF  0800               	movf	0,w
  5449  06C0  00D1               	movwf	UART_Printf@v_num_u32+1
  5450  06C1  0A84               	incf	4,f
  5451  06C2  0800               	movf	0,w
  5452  06C3  00D2               	movwf	UART_Printf@v_num_u32+2
  5453  06C4  0A84               	incf	4,f
  5454  06C5  0800               	movf	0,w
  5455  06C6  00D3               	movwf	UART_Printf@v_num_u32+3
  5456  06C7  3004               	movlw	4
  5457  06C8  00C7               	movwf	??_UART_Printf
  5458  06C9  0847               	movf	??_UART_Printf,w
  5459  06CA  07DA               	addwf	UART_Printf@argp,f
  5460                           
  5461                           ;uart.c: 491: UART_TxNumber(10u,v_num_u32,v_numOfDigitsToTransmit_u8);
  5462  06CB  0853               	movf	UART_Printf@v_num_u32+3,w
  5463  06CC  00A7               	movwf	UART_TxNumber@v_number_u32+3
  5464  06CD  0852               	movf	UART_Printf@v_num_u32+2,w
  5465  06CE  00A6               	movwf	UART_TxNumber@v_number_u32+2
  5466  06CF  0851               	movf	UART_Printf@v_num_u32+1,w
  5467  06D0  00A5               	movwf	UART_TxNumber@v_number_u32+1
  5468  06D1  0850               	movf	UART_Printf@v_num_u32,w
  5469  06D2  00A4               	movwf	UART_TxNumber@v_number_u32
  5470  06D3  0859               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5471  06D4  00C7               	movwf	??_UART_Printf
  5472  06D5  0847               	movf	??_UART_Printf,w
  5473  06D6  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  5474  06D7  300A               	movlw	10
  5475  06D8  120A  118A  24BB  120A  118A  	fcall	_UART_TxNumber
  5476                           
  5477                           ;uart.c: 492: break;
  5478  06DD  2FC9               	goto	l2291
  5479  06DE                     l2245:	
  5480                           ;uart.c: 494: case 'x':
  5481                           
  5482                           
  5483                           ;uart.c: 495: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  5484  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  5485  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  5486  06E0  085A               	movf	UART_Printf@argp,w
  5487  06E1  0084               	movwf	4
  5488  06E2  1383               	bcf	3,7	;select IRP bank0
  5489  06E3  0800               	movf	0,w
  5490  06E4  00D4               	movwf	UART_Printf@v_num_u16
  5491  06E5  0A84               	incf	4,f
  5492  06E6  0800               	movf	0,w
  5493  06E7  00D5               	movwf	UART_Printf@v_num_u16+1
  5494  06E8  3002               	movlw	2
  5495  06E9  00C7               	movwf	??_UART_Printf
  5496  06EA  0847               	movf	??_UART_Printf,w
  5497  06EB  07DA               	addwf	UART_Printf@argp,f
  5498                           
  5499                           ;uart.c: 496: UART_TxNumber(16u,v_num_u16,v_numOfDigitsToTransmit_u8);
  5500  06EC  0854               	movf	UART_Printf@v_num_u16,w
  5501  06ED  00A4               	movwf	UART_TxNumber@v_number_u32
  5502  06EE  0855               	movf	UART_Printf@v_num_u16+1,w
  5503  06EF  00A5               	movwf	UART_TxNumber@v_number_u32+1
  5504  06F0  01A6               	clrf	UART_TxNumber@v_number_u32+2
  5505  06F1  01A7               	clrf	UART_TxNumber@v_number_u32+3
  5506  06F2  0859               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5507  06F3  00C7               	movwf	??_UART_Printf
  5508  06F4  0847               	movf	??_UART_Printf,w
  5509  06F5  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  5510  06F6  3010               	movlw	16
  5511  06F7  120A  118A  24BB  120A  118A  	fcall	_UART_TxNumber
  5512                           
  5513                           ;uart.c: 497: break;
  5514  06FC  2FC9               	goto	l2291
  5515  06FD                     l2251:	
  5516                           ;uart.c: 499: case 'X':
  5517                           
  5518                           
  5519                           ;uart.c: 500: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  5520  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  5521  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  5522  06FF  085A               	movf	UART_Printf@argp,w
  5523  0700  0084               	movwf	4
  5524  0701  1383               	bcf	3,7	;select IRP bank0
  5525  0702  0800               	movf	0,w
  5526  0703  00D0               	movwf	UART_Printf@v_num_u32
  5527  0704  0A84               	incf	4,f
  5528  0705  0800               	movf	0,w
  5529  0706  00D1               	movwf	UART_Printf@v_num_u32+1
  5530  0707  0A84               	incf	4,f
  5531  0708  0800               	movf	0,w
  5532  0709  00D2               	movwf	UART_Printf@v_num_u32+2
  5533  070A  0A84               	incf	4,f
  5534  070B  0800               	movf	0,w
  5535  070C  00D3               	movwf	UART_Printf@v_num_u32+3
  5536  070D  3004               	movlw	4
  5537  070E  00C7               	movwf	??_UART_Printf
  5538  070F  0847               	movf	??_UART_Printf,w
  5539  0710  07DA               	addwf	UART_Printf@argp,f
  5540                           
  5541                           ;uart.c: 501: UART_TxNumber(16u,v_num_u32,v_numOfDigitsToTransmit_u8);
  5542  0711  0853               	movf	UART_Printf@v_num_u32+3,w
  5543  0712  00A7               	movwf	UART_TxNumber@v_number_u32+3
  5544  0713  0852               	movf	UART_Printf@v_num_u32+2,w
  5545  0714  00A6               	movwf	UART_TxNumber@v_number_u32+2
  5546  0715  0851               	movf	UART_Printf@v_num_u32+1,w
  5547  0716  00A5               	movwf	UART_TxNumber@v_number_u32+1
  5548  0717  0850               	movf	UART_Printf@v_num_u32,w
  5549  0718  00A4               	movwf	UART_TxNumber@v_number_u32
  5550  0719  0859               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5551  071A  00C7               	movwf	??_UART_Printf
  5552  071B  0847               	movf	??_UART_Printf,w
  5553  071C  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  5554  071D  3010               	movlw	16
  5555  071E  120A  118A  24BB  120A  118A  	fcall	_UART_TxNumber
  5556                           
  5557                           ;uart.c: 502: break;
  5558  0723  2FC9               	goto	l2291
  5559  0724                     l2257:	
  5560                           ;uart.c: 505: case 'b':
  5561                           
  5562                           
  5563                           ;uart.c: 506: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  5564  0724  1283               	bcf	3,5	;RP0=0, select bank0
  5565  0725  1303               	bcf	3,6	;RP1=0, select bank0
  5566  0726  085A               	movf	UART_Printf@argp,w
  5567  0727  0084               	movwf	4
  5568  0728  1383               	bcf	3,7	;select IRP bank0
  5569  0729  0800               	movf	0,w
  5570  072A  00D4               	movwf	UART_Printf@v_num_u16
  5571  072B  0A84               	incf	4,f
  5572  072C  0800               	movf	0,w
  5573  072D  00D5               	movwf	UART_Printf@v_num_u16+1
  5574  072E  3002               	movlw	2
  5575  072F  00C7               	movwf	??_UART_Printf
  5576  0730  0847               	movf	??_UART_Printf,w
  5577  0731  07DA               	addwf	UART_Printf@argp,f
  5578                           
  5579                           ;uart.c: 508: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  5580  0732  0A59               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5581  0733  1D03               	btfss	3,2
  5582  0734  2F39               	goto	l2265
  5583                           
  5584                           ;uart.c: 509: v_numOfDigitsToTransmit_u8 = 16;
  5585  0735  3010               	movlw	16
  5586  0736  00C7               	movwf	??_UART_Printf
  5587  0737  0847               	movf	??_UART_Printf,w
  5588  0738  00D9               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  5589  0739                     l2265:	
  5590                           
  5591                           ;uart.c: 511: UART_TxNumber(2u,v_num_u16,v_numOfDigitsToTransmit_u8);
  5592  0739  0854               	movf	UART_Printf@v_num_u16,w
  5593  073A  00A4               	movwf	UART_TxNumber@v_number_u32
  5594  073B  0855               	movf	UART_Printf@v_num_u16+1,w
  5595  073C  00A5               	movwf	UART_TxNumber@v_number_u32+1
  5596  073D  01A6               	clrf	UART_TxNumber@v_number_u32+2
  5597  073E  01A7               	clrf	UART_TxNumber@v_number_u32+3
  5598  073F  0859               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5599  0740  00C7               	movwf	??_UART_Printf
  5600  0741  0847               	movf	??_UART_Printf,w
  5601  0742  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  5602  0743  3002               	movlw	2
  5603  0744  120A  118A  24BB  120A  118A  	fcall	_UART_TxNumber
  5604                           
  5605                           ;uart.c: 512: break;
  5606  0749  2FC9               	goto	l2291
  5607  074A                     l2267:	
  5608                           ;uart.c: 514: case 'B':
  5609                           
  5610                           
  5611                           ;uart.c: 515: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  5612  074A  1283               	bcf	3,5	;RP0=0, select bank0
  5613  074B  1303               	bcf	3,6	;RP1=0, select bank0
  5614  074C  085A               	movf	UART_Printf@argp,w
  5615  074D  0084               	movwf	4
  5616  074E  1383               	bcf	3,7	;select IRP bank0
  5617  074F  0800               	movf	0,w
  5618  0750  00D0               	movwf	UART_Printf@v_num_u32
  5619  0751  0A84               	incf	4,f
  5620  0752  0800               	movf	0,w
  5621  0753  00D1               	movwf	UART_Printf@v_num_u32+1
  5622  0754  0A84               	incf	4,f
  5623  0755  0800               	movf	0,w
  5624  0756  00D2               	movwf	UART_Printf@v_num_u32+2
  5625  0757  0A84               	incf	4,f
  5626  0758  0800               	movf	0,w
  5627  0759  00D3               	movwf	UART_Printf@v_num_u32+3
  5628  075A  3004               	movlw	4
  5629  075B  00C7               	movwf	??_UART_Printf
  5630  075C  0847               	movf	??_UART_Printf,w
  5631  075D  07DA               	addwf	UART_Printf@argp,f
  5632                           
  5633                           ;uart.c: 517: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  5634  075E  0A59               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5635  075F  1D03               	btfss	3,2
  5636  0760  2F65               	goto	l2275
  5637                           
  5638                           ;uart.c: 518: v_numOfDigitsToTransmit_u8 = 32;
  5639  0761  3020               	movlw	32
  5640  0762  00C7               	movwf	??_UART_Printf
  5641  0763  0847               	movf	??_UART_Printf,w
  5642  0764  00D9               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  5643  0765                     l2275:	
  5644                           
  5645                           ;uart.c: 520: UART_TxNumber(2u,v_num_u32,v_numOfDigitsToTransmit_u8);
  5646  0765  0853               	movf	UART_Printf@v_num_u32+3,w
  5647  0766  00A7               	movwf	UART_TxNumber@v_number_u32+3
  5648  0767  0852               	movf	UART_Printf@v_num_u32+2,w
  5649  0768  00A6               	movwf	UART_TxNumber@v_number_u32+2
  5650  0769  0851               	movf	UART_Printf@v_num_u32+1,w
  5651  076A  00A5               	movwf	UART_TxNumber@v_number_u32+1
  5652  076B  0850               	movf	UART_Printf@v_num_u32,w
  5653  076C  00A4               	movwf	UART_TxNumber@v_number_u32
  5654  076D  0859               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  5655  076E  00C7               	movwf	??_UART_Printf
  5656  076F  0847               	movf	??_UART_Printf,w
  5657  0770  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  5658  0771  3002               	movlw	2
  5659  0772  120A  118A  24BB  120A  118A  	fcall	_UART_TxNumber
  5660                           
  5661                           ;uart.c: 525: case 'f':
  5662                           ;uart.c: 530: break;
  5663                           
  5664                           ;uart.c: 524: case 'F':
  5665                           
  5666                           ;uart.c: 521: break;
  5667  0777  2FC9               	goto	l2291
  5668  0778                     l2277:	
  5669                           ;uart.c: 533: case 'S':
  5670                           
  5671                           
  5672                           ;uart.c: 534: case 's':
  5673                           ;uart.c: 535: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  5674  0778  1283               	bcf	3,5	;RP0=0, select bank0
  5675  0779  1303               	bcf	3,6	;RP1=0, select bank0
  5676  077A  085A               	movf	UART_Printf@argp,w
  5677  077B  0084               	movwf	4
  5678  077C  1383               	bcf	3,7	;select IRP bank0
  5679  077D  0800               	movf	0,w
  5680  077E  00C7               	movwf	??_UART_Printf
  5681  077F  0847               	movf	??_UART_Printf,w
  5682  0780  00C9               	movwf	UART_Printf@str
  5683  0781  3001               	movlw	1
  5684  0782  00C7               	movwf	??_UART_Printf
  5685  0783  0847               	movf	??_UART_Printf,w
  5686  0784  07DA               	addwf	UART_Printf@argp,f
  5687                           
  5688                           ;uart.c: 536: UART_TxString(str);
  5689  0785  0849               	movf	UART_Printf@str,w
  5690  0786  00F1               	movwf	UART_TxString@ptr_string
  5691  0787  3000               	movlw	0
  5692  0788  00F2               	movwf	UART_TxString@ptr_string+1
  5693  0789  120A  158A  23AE  120A  118A  	fcall	_UART_TxString
  5694                           
  5695                           ;uart.c: 537: break;
  5696  078E  2FC9               	goto	l2291
  5697  078F                     l2283:	
  5698                           ;uart.c: 539: case '%':
  5699                           
  5700                           
  5701                           ;uart.c: 540: UART_TxChar('%');
  5702  078F  3025               	movlw	37
  5703  0790  2FC4               	goto	L7
  5704  0791                     l2287:	
  5705                           ;uart.c: 542: }
  5706                           
  5707                           ;uart.c: 541: break;
  5708                           
  5709  0791  1283               	bcf	3,5	;RP0=0, select bank0
  5710  0792  1303               	bcf	3,6	;RP1=0, select bank0
  5711  0793  0858               	movf	UART_Printf@ch,w
  5712                           
  5713                           ; Switch size 1, requested type "space"
  5714                           ; Number of cases is 15, Range of values is 37 to 120
  5715                           ; switch strategies available:
  5716                           ; Name         Instructions Cycles
  5717                           ; simple_byte           46    24 (average)
  5718                           ; direct_byte          263    11 (fixed)
  5719                           ; jumptable            263     9 (fixed)
  5720                           ;	Chosen strategy is simple_byte
  5721  0794  3A25               	xorlw	37	; case 37
  5722  0795  1903               	skipnz
  5723  0796  2F8F               	goto	l2283
  5724  0797  3A67               	xorlw	103	; case 66
  5725  0798  1903               	skipnz
  5726  0799  2F4A               	goto	l2267
  5727  079A  3A01               	xorlw	1	; case 67
  5728  079B  1903               	skipnz
  5729  079C  2E1F               	goto	l2203
  5730  079D  3A07               	xorlw	7	; case 68
  5731  079E  1903               	skipnz
  5732  079F  2E5C               	goto	l2221
  5733  07A0  3A02               	xorlw	2	; case 70
  5734  07A1  1903               	skipnz
  5735  07A2  2FC9               	goto	l2291
  5736  07A3  3A15               	xorlw	21	; case 83
  5737  07A4  1903               	skipnz
  5738  07A5  2F78               	goto	l2277
  5739  07A6  3A06               	xorlw	6	; case 85
  5740  07A7  1903               	skipnz
  5741  07A8  2EB7               	goto	l2239
  5742  07A9  3A0D               	xorlw	13	; case 88
  5743  07AA  1903               	skipnz
  5744  07AB  2EFD               	goto	l2251
  5745  07AC  3A3A               	xorlw	58	; case 98
  5746  07AD  1903               	skipnz
  5747  07AE  2F24               	goto	l2257
  5748  07AF  3A01               	xorlw	1	; case 99
  5749  07B0  1903               	skipnz
  5750  07B1  2E1F               	goto	l2203
  5751  07B2  3A07               	xorlw	7	; case 100
  5752  07B3  1903               	skipnz
  5753  07B4  2E2B               	goto	l2209
  5754  07B5  3A02               	xorlw	2	; case 102
  5755  07B6  1903               	skipnz
  5756  07B7  2FC9               	goto	l2291
  5757  07B8  3A15               	xorlw	21	; case 115
  5758  07B9  1903               	skipnz
  5759  07BA  2F78               	goto	l2277
  5760  07BB  3A06               	xorlw	6	; case 117
  5761  07BC  1903               	skipnz
  5762  07BD  2E98               	goto	l2233
  5763  07BE  3A0D               	xorlw	13	; case 120
  5764  07BF  1903               	skipnz
  5765  07C0  2EDE               	goto	l2245
  5766  07C1  2FC9               	goto	l2291
  5767                           
  5768                           ;uart.c: 543: }
  5769  07C2  2FC9               	goto	l2291
  5770  07C3                     l2289:	
  5771                           
  5772                           ;uart.c: 544: else
  5773                           ;uart.c: 545: {
  5774                           ;uart.c: 547: UART_TxChar(ch);
  5775  07C3  0858               	movf	UART_Printf@ch,w
  5776  07C4                     L7:	
  5777  07C4  120A  158A  22FD  120A  118A  	fcall	_UART_TxChar
  5778  07C9                     l2291:	
  5779  07C9  3001               	movlw	1
  5780  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  5781  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  5782  07CC  07D6               	addwf	UART_Printf@ptr,f
  5783  07CD  1803               	skipnc
  5784  07CE  0AD7               	incf	UART_Printf@ptr+1,f
  5785  07CF  3000               	movlw	0
  5786  07D0  07D7               	addwf	UART_Printf@ptr+1,f
  5787  07D1  2DB7               	goto	l2293
  5788  07D2                     __end_of_UART_Printf:	
  5789                           
  5790                           	psect	text29
  5791  0BAE                     __ptext29:	
  5792 ;; *************** function _UART_TxString *****************
  5793 ;; Defined at:
  5794 ;;		line 169 in file "../00-libfiles/uart.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;  ptr_string      2    1[COMMON] PTR const unsigned char 
  5797 ;;		 -> STR_3(54), 
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;		None
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  1    wreg      void 
  5802 ;; Registers used:
  5803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5809 ;;      Params:         2       0       0       0       0
  5810 ;;      Locals:         0       0       0       0       0
  5811 ;;      Temps:          0       0       0       0       0
  5812 ;;      Totals:         2       0       0       0       0
  5813 ;;Total ram usage:        2 bytes
  5814 ;; Hardware stack levels used:    1
  5815 ;; Hardware stack levels required when called:    1
  5816 ;; This function calls:
  5817 ;;		_UART_TxChar
  5818 ;; This function is called by:
  5819 ;;		_UART_Printf
  5820 ;;		_switch_Test
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           
  5825                           ;psect for function _UART_TxString
  5826  0BAE                     _UART_TxString:	
  5827  0BAE                     l2027:	
  5828                           ;uart.c: 171: while(*ptr_string)
  5829                           
  5830                           ;incstack = 0
  5831                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5832                           
  5833  0BAE  0872               	movf	UART_TxString@ptr_string+1,w
  5834  0BAF  1283               	bcf	3,5	;RP0=0, select bank0
  5835  0BB0  1303               	bcf	3,6	;RP1=0, select bank0
  5836  0BB1  00FF               	movwf	127
  5837  0BB2  0871               	movf	UART_TxString@ptr_string,w
  5838  0BB3  0084               	movwf	4
  5839  0BB4  120A  158A  214F  120A  158A  	fcall	stringtab
  5840  0BB9  3A00               	xorlw	0
  5841  0BBA  1903               	btfsc	3,2
  5842  0BBB  0008               	return
  5843                           
  5844                           ;uart.c: 172: UART_TxChar(*ptr_string++);
  5845  0BBC  0872               	movf	UART_TxString@ptr_string+1,w
  5846  0BBD  1283               	bcf	3,5	;RP0=0, select bank0
  5847  0BBE  1303               	bcf	3,6	;RP1=0, select bank0
  5848  0BBF  00FF               	movwf	127
  5849  0BC0  0871               	movf	UART_TxString@ptr_string,w
  5850  0BC1  0084               	movwf	4
  5851  0BC2  120A  158A  214F  120A  158A  	fcall	stringtab
  5852  0BC7  120A  158A  22FD  120A  158A  	fcall	_UART_TxChar
  5853  0BCC  3001               	movlw	1
  5854  0BCD  07F1               	addwf	UART_TxString@ptr_string,f
  5855  0BCE  1803               	skipnc
  5856  0BCF  0AF2               	incf	UART_TxString@ptr_string+1,f
  5857  0BD0  2BAE               	goto	l2027
  5858  0BD1                     __end_of_UART_TxString:	
  5859                           
  5860                           	psect	text30
  5861  04BB                     __ptext30:	
  5862 ;; *************** function _UART_TxNumber *****************
  5863 ;; Defined at:
  5864 ;;		line 260 in file "../00-libfiles/uart.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;  v_numericSys    1    wreg     unsigned char 
  5867 ;;  v_number_u32    4    4[BANK0 ] unsigned long 
  5868 ;;  v_numOfDigit    1    8[BANK0 ] unsigned char 
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;  v_numericSys    1   33[BANK0 ] unsigned char 
  5871 ;;  a              10   21[BANK0 ] unsigned char [10]
  5872 ;;  i               1   34[BANK0 ] unsigned char 
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  1    wreg      void 
  5875 ;; Registers used:
  5876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5882 ;;      Params:         0       5       0       0       0
  5883 ;;      Locals:         0      14       0       0       0
  5884 ;;      Temps:          0      12       0       0       0
  5885 ;;      Totals:         0      31       0       0       0
  5886 ;;Total ram usage:       31 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:    1
  5889 ;; This function calls:
  5890 ;;		_UART_TxChar
  5891 ;;		___bmul
  5892 ;;		___lldiv
  5893 ;; This function is called by:
  5894 ;;		_UART_Printf
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           
  5899                           ;psect for function _UART_TxNumber
  5900  04BB                     _UART_TxNumber:	
  5901                           
  5902                           ;incstack = 0
  5903                           ; Regs used in _UART_TxNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5904                           ;UART_TxNumber@v_numericSystem_u8 stored from wreg
  5905  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  5906  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  5907  04BD  00C1               	movwf	UART_TxNumber@v_numericSystem_u8
  5908                           
  5909                           ;uart.c: 262: uint8_t i=0,a[10];
  5910  04BE  01C2               	clrf	UART_TxNumber@i
  5911                           
  5912                           ;uart.c: 264: if(2u == v_numericSystem_u8)
  5913  04BF  3002               	movlw	2
  5914  04C0  0641               	xorwf	UART_TxNumber@v_numericSystem_u8,w
  5915  04C1  1903               	btfsc	3,2
  5916  04C2  2D02               	goto	l2041
  5917  04C3  2D06               	goto	l2043
  5918  04C4                     l2035:	
  5919                           ;uart.c: 265: {
  5920                           ;uart.c: 266: while(v_numOfDigitsToTransmit_u8!=0)
  5921                           
  5922                           
  5923                           ;uart.c: 267: {
  5924                           ;uart.c: 270: i = (((v_number_u32)&((1<<((v_numOfDigitsToTransmit_u8-1)))))!=0u);
  5925  04C4  0824               	movf	UART_TxNumber@v_number_u32,w
  5926  04C5  00A9               	movwf	??_UART_TxNumber
  5927  04C6  0825               	movf	UART_TxNumber@v_number_u32+1,w
  5928  04C7  00AA               	movwf	??_UART_TxNumber+1
  5929  04C8  0826               	movf	UART_TxNumber@v_number_u32+2,w
  5930  04C9  00AB               	movwf	??_UART_TxNumber+2
  5931  04CA  0827               	movf	UART_TxNumber@v_number_u32+3,w
  5932  04CB  00AC               	movwf	??_UART_TxNumber+3
  5933  04CC  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  5934  04CD  3EFF               	addlw	-1
  5935  04CE  00AD               	movwf	??_UART_TxNumber+4
  5936  04CF  0AAD               	incf	??_UART_TxNumber+4,f
  5937  04D0  3001               	movlw	1
  5938  04D1  00AE               	movwf	??_UART_TxNumber+5
  5939  04D2  3000               	movlw	0
  5940  04D3  00AF               	movwf	??_UART_TxNumber+6
  5941  04D4  2CD8               	goto	u2374
  5942  04D5                     u2375:	
  5943  04D5  1003               	clrc
  5944  04D6  0DAE               	rlf	??_UART_TxNumber+5,f
  5945  04D7  0DAF               	rlf	??_UART_TxNumber+6,f
  5946  04D8                     u2374:	
  5947  04D8  0BAD               	decfsz	??_UART_TxNumber+4,f
  5948  04D9  2CD5               	goto	u2375
  5949  04DA  082E               	movf	??_UART_TxNumber+5,w
  5950  04DB  00B0               	movwf	??_UART_TxNumber+7
  5951  04DC  082F               	movf	??_UART_TxNumber+6,w
  5952  04DD  00B1               	movwf	??_UART_TxNumber+8
  5953  04DE  3000               	movlw	0
  5954  04DF  1BB1               	btfsc	??_UART_TxNumber+8,7
  5955  04E0  30FF               	movlw	255
  5956  04E1  00B2               	movwf	??_UART_TxNumber+9
  5957  04E2  00B3               	movwf	??_UART_TxNumber+10
  5958  04E3  0830               	movf	??_UART_TxNumber+7,w
  5959  04E4  05A9               	andwf	??_UART_TxNumber,f
  5960  04E5  0831               	movf	??_UART_TxNumber+8,w
  5961  04E6  05AA               	andwf	??_UART_TxNumber+1,f
  5962  04E7  0832               	movf	??_UART_TxNumber+9,w
  5963  04E8  05AB               	andwf	??_UART_TxNumber+2,f
  5964  04E9  0833               	movf	??_UART_TxNumber+10,w
  5965  04EA  05AC               	andwf	??_UART_TxNumber+3,f
  5966  04EB  082C               	movf	??_UART_TxNumber+3,w
  5967  04EC  042B               	iorwf	??_UART_TxNumber+2,w
  5968  04ED  042A               	iorwf	??_UART_TxNumber+1,w
  5969  04EE  0429               	iorwf	??_UART_TxNumber,w
  5970  04EF  1903               	btfsc	3,2
  5971  04F0  2CF3               	goto	u2380
  5972  04F1  3001               	movlw	1
  5973  04F2  2CF4               	goto	u2390
  5974  04F3                     u2380:	
  5975  04F3  3000               	movlw	0
  5976  04F4                     u2390:	
  5977  04F4  00B4               	movwf	??_UART_TxNumber+11
  5978  04F5  0834               	movf	??_UART_TxNumber+11,w
  5979  04F6  00C2               	movwf	UART_TxNumber@i
  5980                           
  5981                           ;uart.c: 271: UART_TxChar(((i)+0x30));
  5982  04F7  0842               	movf	UART_TxNumber@i,w
  5983  04F8  3E30               	addlw	48
  5984  04F9  120A  158A  22FD  120A  118A  	fcall	_UART_TxChar
  5985                           
  5986                           ;uart.c: 272: v_numOfDigitsToTransmit_u8--;
  5987  04FE  3001               	movlw	1
  5988  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  5989  0500  1303               	bcf	3,6	;RP1=0, select bank0
  5990  0501  02A8               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,f
  5991  0502                     l2041:	
  5992  0502  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  5993  0503  1903               	btfsc	3,2
  5994  0504  0008               	return
  5995  0505  2CC4               	goto	l2035
  5996  0506                     l2043:	
  5997                           ;uart.c: 273: }
  5998                           ;uart.c: 274: }
  5999                           
  6000                           
  6001                           ;uart.c: 275: else if(v_number_u32==0)
  6002  0506  0827               	movf	UART_TxNumber@v_number_u32+3,w
  6003  0507  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  6004  0508  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  6005  0509  0424               	iorwf	UART_TxNumber@v_number_u32,w
  6006  050A  1D03               	skipz
  6007  050B  2D11               	goto	l2047
  6008                           
  6009                           ;uart.c: 276: {
  6010                           ;uart.c: 280: UART_TxChar('0');
  6011  050C  3030               	movlw	48
  6012  050D  120A  158A  22FD   	fcall	_UART_TxChar
  6013                           
  6014                           ;uart.c: 281: }
  6015  0510  0008               	return
  6016  0511                     l2047:	
  6017                           
  6018                           ;uart.c: 282: else
  6019                           ;uart.c: 283: {
  6020                           ;uart.c: 284: for(i=0;i<v_numOfDigitsToTransmit_u8;i++)
  6021  0511  1283               	bcf	3,5	;RP0=0, select bank0
  6022  0512  1303               	bcf	3,6	;RP1=0, select bank0
  6023  0513  01C2               	clrf	UART_TxNumber@i
  6024  0514                     l2065:	
  6025  0514  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  6026  0515  0242               	subwf	UART_TxNumber@i,w
  6027  0516  1803               	btfsc	3,0
  6028  0517  2DA9               	goto	l2077
  6029                           
  6030                           ;uart.c: 285: {
  6031                           ;uart.c: 288: if(v_number_u32!=0)
  6032  0518  0827               	movf	UART_TxNumber@v_number_u32+3,w
  6033  0519  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  6034  051A  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  6035  051B  0424               	iorwf	UART_TxNumber@v_number_u32,w
  6036  051C  1903               	skipnz
  6037  051D  2D73               	goto	l2055
  6038                           
  6039                           ;uart.c: 289: {
  6040                           ;uart.c: 296: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u
      +                          32/v_numericSystem_u8)));
  6041  051E  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  6042  051F  00A9               	movwf	??_UART_TxNumber
  6043  0520  0829               	movf	??_UART_TxNumber,w
  6044  0521  00A0               	movwf	___bmul@multiplicand
  6045  0522  0827               	movf	UART_TxNumber@v_number_u32+3,w
  6046  0523  00F7               	movwf	___lldiv@dividend+3
  6047  0524  0826               	movf	UART_TxNumber@v_number_u32+2,w
  6048  0525  00F6               	movwf	___lldiv@dividend+2
  6049  0526  0825               	movf	UART_TxNumber@v_number_u32+1,w
  6050  0527  00F5               	movwf	___lldiv@dividend+1
  6051  0528  0824               	movf	UART_TxNumber@v_number_u32,w
  6052  0529  00F4               	movwf	___lldiv@dividend
  6053  052A  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  6054  052B  00AA               	movwf	??_UART_TxNumber+1
  6055  052C  01AB               	clrf	??_UART_TxNumber+2
  6056  052D  01AC               	clrf	??_UART_TxNumber+3
  6057  052E  01AD               	clrf	??_UART_TxNumber+4
  6058  052F  082D               	movf	??_UART_TxNumber+4,w
  6059  0530  00F3               	movwf	___lldiv@divisor+3
  6060  0531  082C               	movf	??_UART_TxNumber+3,w
  6061  0532  00F2               	movwf	___lldiv@divisor+2
  6062  0533  082B               	movf	??_UART_TxNumber+2,w
  6063  0534  00F1               	movwf	___lldiv@divisor+1
  6064  0535  082A               	movf	??_UART_TxNumber+1,w
  6065  0536  00F0               	movwf	___lldiv@divisor
  6066  0537  120A  158A  2743  120A  118A  	fcall	___lldiv
  6067  053C  0870               	movf	?___lldiv,w
  6068  053D  120A  118A  2003  120A  118A  	fcall	___bmul
  6069  0542  3AFF               	xorlw	255
  6070  0543  3E01               	addlw	1
  6071  0544  1283               	bcf	3,5	;RP0=0, select bank0
  6072  0545  1303               	bcf	3,6	;RP1=0, select bank0
  6073  0546  0724               	addwf	UART_TxNumber@v_number_u32,w
  6074  0547  00AE               	movwf	??_UART_TxNumber+5
  6075  0548  0842               	movf	UART_TxNumber@i,w
  6076  0549  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  6077  054A  0084               	movwf	4
  6078  054B  082E               	movf	??_UART_TxNumber+5,w
  6079  054C  1383               	bcf	3,7	;select IRP bank0
  6080  054D  0080               	movwf	0
  6081                           
  6082                           ;uart.c: 297: v_number_u32=v_number_u32/v_numericSystem_u8;
  6083  054E  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  6084  054F  00A9               	movwf	??_UART_TxNumber
  6085  0550  01AA               	clrf	??_UART_TxNumber+1
  6086  0551  01AB               	clrf	??_UART_TxNumber+2
  6087  0552  01AC               	clrf	??_UART_TxNumber+3
  6088  0553  082C               	movf	??_UART_TxNumber+3,w
  6089  0554  00F3               	movwf	___lldiv@divisor+3
  6090  0555  082B               	movf	??_UART_TxNumber+2,w
  6091  0556  00F2               	movwf	___lldiv@divisor+2
  6092  0557  082A               	movf	??_UART_TxNumber+1,w
  6093  0558  00F1               	movwf	___lldiv@divisor+1
  6094  0559  0829               	movf	??_UART_TxNumber,w
  6095  055A  00F0               	movwf	___lldiv@divisor
  6096  055B  0827               	movf	UART_TxNumber@v_number_u32+3,w
  6097  055C  00F7               	movwf	___lldiv@dividend+3
  6098  055D  0826               	movf	UART_TxNumber@v_number_u32+2,w
  6099  055E  00F6               	movwf	___lldiv@dividend+2
  6100  055F  0825               	movf	UART_TxNumber@v_number_u32+1,w
  6101  0560  00F5               	movwf	___lldiv@dividend+1
  6102  0561  0824               	movf	UART_TxNumber@v_number_u32,w
  6103  0562  00F4               	movwf	___lldiv@dividend
  6104  0563  120A  158A  2743  120A  118A  	fcall	___lldiv
  6105  0568  0873               	movf	?___lldiv+3,w
  6106  0569  1283               	bcf	3,5	;RP0=0, select bank0
  6107  056A  1303               	bcf	3,6	;RP1=0, select bank0
  6108  056B  00A7               	movwf	UART_TxNumber@v_number_u32+3
  6109  056C  0872               	movf	?___lldiv+2,w
  6110  056D  00A6               	movwf	UART_TxNumber@v_number_u32+2
  6111  056E  0871               	movf	?___lldiv+1,w
  6112  056F  00A5               	movwf	UART_TxNumber@v_number_u32+1
  6113  0570  0870               	movf	?___lldiv,w
  6114  0571  00A4               	movwf	UART_TxNumber@v_number_u32
  6115                           
  6116                           ;uart.c: 298: }
  6117  0572  2D7F               	goto	l2063
  6118  0573                     l2055:	
  6119                           
  6120                           ;uart.c: 299: else if( (v_numOfDigitsToTransmit_u8 == 0xffu) ||
  6121                           ;uart.c: 300: (v_numOfDigitsToTransmit_u8 > 10u))
  6122  0573  0A28               	incf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  6123  0574  1903               	btfsc	3,2
  6124  0575  2DA9               	goto	l2077
  6125  0576  300B               	movlw	11
  6126  0577  0228               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  6127  0578  1803               	btfsc	3,0
  6128  0579  2DA9               	goto	l2077
  6129                           
  6130                           ;uart.c: 306: else
  6131                           ;uart.c: 307: {
  6132                           ;uart.c: 311: a[i]=0;
  6133                           
  6134                           ;uart.c: 305: }
  6135                           
  6136                           ;uart.c: 301: {
  6137                           ;uart.c: 304: break;
  6138  057A  0842               	movf	UART_TxNumber@i,w
  6139  057B  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  6140  057C  0084               	movwf	4
  6141  057D  1383               	bcf	3,7	;select IRP bank0
  6142  057E  0180               	clrf	0
  6143  057F                     l2063:	
  6144  057F  3001               	movlw	1
  6145  0580  00A9               	movwf	??_UART_TxNumber
  6146  0581  0829               	movf	??_UART_TxNumber,w
  6147  0582  07C2               	addwf	UART_TxNumber@i,f
  6148  0583  2D14               	goto	l2065
  6149  0584                     l2067:	
  6150                           ;uart.c: 312: }
  6151                           ;uart.c: 313: }
  6152                           ;uart.c: 315: while(i)
  6153                           
  6154                           
  6155                           ;uart.c: 316: {
  6156                           ;uart.c: 318: UART_TxChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  6157  0584  0842               	movf	UART_TxNumber@i,w
  6158  0585  3EFF               	addlw	255
  6159  0586  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  6160  0587  0084               	movwf	4
  6161  0588  300A               	movlw	10
  6162  0589  1383               	bcf	3,7	;select IRP bank0
  6163  058A  0200               	subwf	0,w
  6164  058B  1803               	skipnc
  6165  058C  2D94               	goto	l2071
  6166  058D  0842               	movf	UART_TxNumber@i,w
  6167  058E  3EFF               	addlw	255
  6168  058F  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  6169  0590  0084               	movwf	4
  6170  0591  0800               	movf	0,w
  6171  0592  3E30               	addlw	48
  6172  0593  2D9A               	goto	L8
  6173  0594                     l2071:	
  6174  0594  0842               	movf	UART_TxNumber@i,w
  6175  0595  3EFF               	addlw	255
  6176  0596  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  6177  0597  0084               	movwf	4
  6178  0598  0800               	movf	0,w
  6179  0599  3E37               	addlw	55
  6180  059A                     L8:	
  6181  059A  00BF               	movwf	_UART_TxNumber$339
  6182  059B  3000               	movlw	0
  6183  059C  1803               	skipnc
  6184  059D  3001               	movlw	1
  6185  059E  00C0               	movwf	_UART_TxNumber$339+1
  6186  059F  083F               	movf	_UART_TxNumber$339,w
  6187  05A0  120A  158A  22FD  120A  118A  	fcall	_UART_TxChar
  6188                           
  6189                           ;uart.c: 319: i--;
  6190  05A5  3001               	movlw	1
  6191  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  6192  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  6193  05A8  02C2               	subwf	UART_TxNumber@i,f
  6194  05A9                     l2077:	
  6195  05A9  0842               	movf	UART_TxNumber@i,w
  6196  05AA  1903               	btfsc	3,2
  6197  05AB  0008               	return
  6198  05AC  2D84               	goto	l2067
  6199  05AD                     __end_of_UART_TxNumber:	
  6200                           
  6201                           	psect	text31
  6202  0003                     __ptext31:	
  6203 ;; *************** function ___bmul *****************
  6204 ;; Defined at:
  6205 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul8.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;  multiplier      1    wreg     unsigned char 
  6208 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;  multiplier      1    3[BANK0 ] unsigned char 
  6211 ;;  product         1    2[BANK0 ] unsigned char 
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  1    wreg      unsigned char 
  6214 ;; Registers used:
  6215 ;;		wreg, status,2, status,0
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6221 ;;      Params:         0       1       0       0       0
  6222 ;;      Locals:         0       2       0       0       0
  6223 ;;      Temps:          0       1       0       0       0
  6224 ;;      Totals:         0       4       0       0       0
  6225 ;;Total ram usage:        4 bytes
  6226 ;; Hardware stack levels used:    1
  6227 ;; This function calls:
  6228 ;;		Nothing
  6229 ;; This function is called by:
  6230 ;;		_UART_TxNumber
  6231 ;;		_UART_Printf
  6232 ;; This function uses a non-reentrant model
  6233 ;;
  6234                           
  6235                           
  6236                           ;psect for function ___bmul
  6237  0003                     ___bmul:	
  6238                           
  6239                           ;incstack = 0
  6240                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6241                           ;___bmul@multiplier stored from wreg
  6242  0003  1283               	bcf	3,5	;RP0=0, select bank0
  6243  0004  1303               	bcf	3,6	;RP1=0, select bank0
  6244  0005  00A3               	movwf	___bmul@multiplier
  6245  0006  01A2               	clrf	___bmul@product
  6246  0007                     l1933:	
  6247  0007  1C23               	btfss	___bmul@multiplier,0
  6248  0008  280D               	goto	l1937
  6249  0009  0820               	movf	___bmul@multiplicand,w
  6250  000A  00A1               	movwf	??___bmul
  6251  000B  0821               	movf	??___bmul,w
  6252  000C  07A2               	addwf	___bmul@product,f
  6253  000D                     l1937:	
  6254  000D  1003               	clrc
  6255  000E  0DA0               	rlf	___bmul@multiplicand,f
  6256  000F  1003               	clrc
  6257  0010  0CA3               	rrf	___bmul@multiplier,f
  6258  0011  0823               	movf	___bmul@multiplier,w
  6259  0012  1D03               	btfss	3,2
  6260  0013  2807               	goto	l1933
  6261  0014  0822               	movf	___bmul@product,w
  6262  0015  0008               	return
  6263  0016                     __end_of___bmul:	
  6264                           
  6265                           	psect	text32
  6266  0AFD                     __ptext32:	
  6267 ;; *************** function _UART_TxChar *****************
  6268 ;; Defined at:
  6269 ;;		line 145 in file "../00-libfiles/uart.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;  v_uartData_u    1    wreg     unsigned char 
  6272 ;; Auto vars:     Size  Location     Type
  6273 ;;  v_uartData_u    1    0[COMMON] unsigned char 
  6274 ;; Return value:  Size  Location     Type
  6275 ;;                  1    wreg      void 
  6276 ;; Registers used:
  6277 ;;		wreg
  6278 ;; Tracked objects:
  6279 ;;		On entry : 0/0
  6280 ;;		On exit  : 0/0
  6281 ;;		Unchanged: 0/0
  6282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6283 ;;      Params:         0       0       0       0       0
  6284 ;;      Locals:         1       0       0       0       0
  6285 ;;      Temps:          0       0       0       0       0
  6286 ;;      Totals:         1       0       0       0       0
  6287 ;;Total ram usage:        1 bytes
  6288 ;; Hardware stack levels used:    1
  6289 ;; This function calls:
  6290 ;;		Nothing
  6291 ;; This function is called by:
  6292 ;;		_UART_TxString
  6293 ;;		_UART_TxNumber
  6294 ;;		_UART_Printf
  6295 ;;		_UART_RxString
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           
  6300                           ;psect for function _UART_TxChar
  6301  0AFD                     _UART_TxChar:	
  6302                           
  6303                           ;incstack = 0
  6304                           ; Regs used in _UART_TxChar: [wreg]
  6305                           ;UART_TxChar@v_uartData_u8 stored from wreg
  6306  0AFD  00F0               	movwf	UART_TxChar@v_uartData_u8
  6307  0AFE                     l310:	
  6308                           ;uart.c: 147: while(TXIF==0);
  6309                           
  6310  0AFE  1283               	bcf	3,5	;RP0=0, select bank0
  6311  0AFF  1303               	bcf	3,6	;RP1=0, select bank0
  6312  0B00  1E0C               	btfss	12,4	;volatile
  6313  0B01  2AFE               	goto	l310
  6314                           
  6315                           ;uart.c: 148: TXIF=0;
  6316  0B02  120C               	bcf	12,4	;volatile
  6317                           
  6318                           ;uart.c: 149: TXREG=v_uartData_u8;
  6319  0B03  0870               	movf	UART_TxChar@v_uartData_u8,w
  6320  0B04  0099               	movwf	25	;volatile
  6321  0B05  0008               	return
  6322  0B06                     __end_of_UART_TxChar:	
  6323                           
  6324                           	psect	text33
  6325  0AF5                     __ptext33:	
  6326 ;; *************** function _ADC_Init *****************
  6327 ;; Defined at:
  6328 ;;		line 54 in file "../00-libfiles/adc.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;		None
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;		None
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  1    wreg      void 
  6335 ;; Registers used:
  6336 ;;		wreg, status,2
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6342 ;;      Params:         0       0       0       0       0
  6343 ;;      Locals:         0       0       0       0       0
  6344 ;;      Temps:          0       0       0       0       0
  6345 ;;      Totals:         0       0       0       0       0
  6346 ;;Total ram usage:        0 bytes
  6347 ;; Hardware stack levels used:    1
  6348 ;; This function calls:
  6349 ;;		Nothing
  6350 ;; This function is called by:
  6351 ;;		_adc_Test
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           
  6356                           ;psect for function _ADC_Init
  6357  0AF5                     _ADC_Init:	
  6358                           
  6359                           ;adc.c: 56: ADCON0=0x00;
  6360                           
  6361                           ;incstack = 0
  6362                           ; Regs used in _ADC_Init: [wreg+status,2]
  6363  0AF5  1283               	bcf	3,5	;RP0=0, select bank0
  6364  0AF6  1303               	bcf	3,6	;RP1=0, select bank0
  6365  0AF7  019F               	clrf	31	;volatile
  6366                           
  6367                           ;adc.c: 57: ADCON1=0x80;
  6368  0AF8  3080               	movlw	128
  6369  0AF9  1683               	bsf	3,5	;RP0=1, select bank1
  6370  0AFA  1303               	bcf	3,6	;RP1=0, select bank1
  6371  0AFB  009F               	movwf	31	;volatile
  6372  0AFC  0008               	return
  6373  0AFD                     __end_of_ADC_Init:	
  6374                           
  6375                           	psect	text34
  6376  0BD1                     __ptext34:	
  6377 ;; *************** function _ADC_GetAdcValue *****************
  6378 ;; Defined at:
  6379 ;;		line 76 in file "../00-libfiles/adc.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;  var_adcChann    1    wreg     unsigned char 
  6382 ;; Auto vars:     Size  Location     Type
  6383 ;;  var_adcChann    1    5[COMMON] unsigned char 
  6384 ;; Return value:  Size  Location     Type
  6385 ;;                  2    2[COMMON] unsigned int 
  6386 ;; Registers used:
  6387 ;;		wreg, status,2, status,0, pclath, cstack
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 0/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6393 ;;      Params:         2       0       0       0       0
  6394 ;;      Locals:         1       0       0       0       0
  6395 ;;      Temps:          1       0       0       0       0
  6396 ;;      Totals:         4       0       0       0       0
  6397 ;;Total ram usage:        4 bytes
  6398 ;; Hardware stack levels used:    1
  6399 ;; Hardware stack levels required when called:    1
  6400 ;; This function calls:
  6401 ;;		_DELAY_us
  6402 ;; This function is called by:
  6403 ;;		_adc_Test
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           
  6408                           ;psect for function _ADC_GetAdcValue
  6409  0BD1                     _ADC_GetAdcValue:	
  6410                           
  6411                           ;incstack = 0
  6412                           ; Regs used in _ADC_GetAdcValue: [wreg+status,2+status,0+pclath+cstack]
  6413                           ;ADC_GetAdcValue@var_adcChannel_u8 stored from wreg
  6414  0BD1  00F5               	movwf	ADC_GetAdcValue@var_adcChannel_u8
  6415                           
  6416                           ;adc.c: 79: ADCON0= (var_adcChannel_u8<<3);
  6417  0BD2  0875               	movf	ADC_GetAdcValue@var_adcChannel_u8,w
  6418  0BD3  00F4               	movwf	??_ADC_GetAdcValue
  6419  0BD4  3002               	movlw	2
  6420  0BD5                     u2485:	
  6421  0BD5  1003               	clrc
  6422  0BD6  0DF4               	rlf	??_ADC_GetAdcValue,f
  6423  0BD7  3EFF               	addlw	-1
  6424  0BD8  1D03               	skipz
  6425  0BD9  2BD5               	goto	u2485
  6426  0BDA  1003               	clrc
  6427  0BDB  0D74               	rlf	??_ADC_GetAdcValue,w
  6428  0BDC  1283               	bcf	3,5	;RP0=0, select bank0
  6429  0BDD  1303               	bcf	3,6	;RP1=0, select bank0
  6430  0BDE  009F               	movwf	31	;volatile
  6431                           
  6432                           ;adc.c: 80: ADON = 1;
  6433  0BDF  141F               	bsf	31,0	;volatile
  6434                           
  6435                           ;adc.c: 81: DELAY_us(10);
  6436  0BE0  300A               	movlw	10
  6437  0BE1  00F0               	movwf	DELAY_us@us_count
  6438  0BE2  3000               	movlw	0
  6439  0BE3  00F1               	movwf	DELAY_us@us_count+1
  6440  0BE4  120A  158A  230F  120A  158A  	fcall	_DELAY_us
  6441                           
  6442                           ;adc.c: 83: GO=1;
  6443  0BE9  1283               	bcf	3,5	;RP0=0, select bank0
  6444  0BEA  1303               	bcf	3,6	;RP1=0, select bank0
  6445  0BEB  151F               	bsf	31,2	;volatile
  6446  0BEC                     l22:	
  6447                           ;adc.c: 84: while(GO_DONE==1);
  6448                           
  6449  0BEC  191F               	btfsc	31,2	;volatile
  6450  0BED  2BEC               	goto	l22
  6451                           
  6452                           ;adc.c: 87: return((ADRESH<<8) + ADRESL);
  6453  0BEE  081E               	movf	30,w	;volatile
  6454  0BEF  00F3               	movwf	?_ADC_GetAdcValue+1
  6455  0BF0  1683               	bsf	3,5	;RP0=1, select bank1
  6456  0BF1  1303               	bcf	3,6	;RP1=0, select bank1
  6457  0BF2  081E               	movf	30,w	;volatile
  6458  0BF3  00F2               	movwf	?_ADC_GetAdcValue
  6459  0BF4  0008               	return
  6460  0BF5                     __end_of_ADC_GetAdcValue:	
  6461                           
  6462                           	psect	text35
  6463  0B0F                     __ptext35:	
  6464 ;; *************** function _DELAY_us *****************
  6465 ;; Defined at:
  6466 ;;		line 56 in file "../00-libfiles/delay.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  us_count        2    0[COMMON] unsigned int 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;		None
  6471 ;; Return value:  Size  Location     Type
  6472 ;;                  1    wreg      void 
  6473 ;; Registers used:
  6474 ;;		wreg, status,2, status,0
  6475 ;; Tracked objects:
  6476 ;;		On entry : 0/0
  6477 ;;		On exit  : 0/0
  6478 ;;		Unchanged: 0/0
  6479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6480 ;;      Params:         2       0       0       0       0
  6481 ;;      Locals:         0       0       0       0       0
  6482 ;;      Temps:          0       0       0       0       0
  6483 ;;      Totals:         2       0       0       0       0
  6484 ;;Total ram usage:        2 bytes
  6485 ;; Hardware stack levels used:    1
  6486 ;; This function calls:
  6487 ;;		Nothing
  6488 ;; This function is called by:
  6489 ;;		_ADC_GetAdcValue
  6490 ;;		_DELAY_ms
  6491 ;;		_lcd_BusyCheck
  6492 ;;		_lcd_Reset
  6493 ;;		_lcd_SendCmdSignals
  6494 ;;		_lcd_SendDataSignals
  6495 ;; This function uses a non-reentrant model
  6496 ;;
  6497                           
  6498                           
  6499                           ;psect for function _DELAY_us
  6500  0B0F                     _DELAY_us:	
  6501  0B0F                     l1731:	
  6502                           ;delay.c: 58: while (us_count != 0)
  6503                           
  6504                           ;incstack = 0
  6505                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  6506                           
  6507  0B0F  0870               	movf	DELAY_us@us_count,w
  6508  0B10  0471               	iorwf	DELAY_us@us_count+1,w
  6509  0B11  1903               	btfsc	3,2
  6510  0B12  0008               	return
  6511                           
  6512                           ;delay.c: 59: {
  6513                           ;delay.c: 60: us_count--;
  6514  0B13  3001               	movlw	1
  6515  0B14  02F0               	subwf	DELAY_us@us_count,f
  6516  0B15  3000               	movlw	0
  6517  0B16  1C03               	skipc
  6518  0B17  03F1               	decf	DELAY_us@us_count+1,f
  6519  0B18  02F1               	subwf	DELAY_us@us_count+1,f
  6520  0B19  2B0F               	goto	l1731
  6521  0B1A                     __end_of_DELAY_us:	
  6522                           
  6523                           	psect	text36
  6524  0AEE                     __ptext36:	
  6525 ;; *************** function _UART_RxChar *****************
  6526 ;; Defined at:
  6527 ;;		line 123 in file "../00-libfiles/uart.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;		None
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;		None
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  1    wreg      unsigned char 
  6534 ;; Registers used:
  6535 ;;		wreg
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6541 ;;      Params:         0       0       0       0       0
  6542 ;;      Locals:         0       0       0       0       0
  6543 ;;      Temps:          0       0       0       0       0
  6544 ;;      Totals:         0       0       0       0       0
  6545 ;;Total ram usage:        0 bytes
  6546 ;; Hardware stack levels used:    1
  6547 ;; This function calls:
  6548 ;;		Nothing
  6549 ;; This function is called by:
  6550 ;;		_main
  6551 ;;		_UART_RxString
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555                           
  6556                           ;psect for function _UART_RxChar
  6557  0AEE                     _UART_RxChar:	
  6558  0AEE                     l304:	
  6559                           ;uart.c: 125: while(RCIF==0);
  6560                           
  6561                           ;incstack = 0
  6562                           ; Regs used in _UART_RxChar: [wreg]
  6563                           
  6564  0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  6565  0AEF  1303               	bcf	3,6	;RP1=0, select bank0
  6566  0AF0  1E8C               	btfss	12,5	;volatile
  6567  0AF1  2AEE               	goto	l304
  6568                           
  6569                           ;uart.c: 126: RCIF=0;
  6570  0AF2  128C               	bcf	12,5	;volatile
  6571                           
  6572                           ;uart.c: 127: return(RCREG);
  6573  0AF3  081A               	movf	26,w	;volatile
  6574  0AF4  0008               	return
  6575  0AF5                     __end_of_UART_RxChar:	
  6576                           
  6577                           	psect	text37
  6578  0B4A                     __ptext37:	
  6579 ;; *************** function _UART_Init *****************
  6580 ;; Defined at:
  6581 ;;		line 66 in file "../00-libfiles/uart.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;  v_baudRate_u    4   10[BANK0 ] unsigned long 
  6584 ;; Auto vars:     Size  Location     Type
  6585 ;;		None
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  1    wreg      void 
  6588 ;; Registers used:
  6589 ;;		wreg, status,2, status,0, pclath, cstack
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6595 ;;      Params:         0       4       0       0       0
  6596 ;;      Locals:         0       0       0       0       0
  6597 ;;      Temps:          0       0       0       0       0
  6598 ;;      Totals:         0       4       0       0       0
  6599 ;;Total ram usage:        4 bytes
  6600 ;; Hardware stack levels used:    1
  6601 ;; Hardware stack levels required when called:    2
  6602 ;; This function calls:
  6603 ;;		_UART_SetBaudRate
  6604 ;; This function is called by:
  6605 ;;		_main
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           
  6610                           ;psect for function _UART_Init
  6611  0B4A                     _UART_Init:	
  6612                           
  6613                           ;uart.c: 68: TRISC=0x80;
  6614                           
  6615                           ;incstack = 0
  6616                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  6617  0B4A  3080               	movlw	128
  6618  0B4B  1683               	bsf	3,5	;RP0=1, select bank1
  6619  0B4C  1303               	bcf	3,6	;RP1=0, select bank1
  6620  0B4D  0087               	movwf	7	;volatile
  6621                           
  6622                           ;uart.c: 69: TXSTA=0x20;
  6623  0B4E  3020               	movlw	32
  6624  0B4F  0098               	movwf	24	;volatile
  6625                           
  6626                           ;uart.c: 70: RCSTA=0x90;
  6627  0B50  3090               	movlw	144
  6628  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  6629  0B52  1303               	bcf	3,6	;RP1=0, select bank0
  6630  0B53  0098               	movwf	24	;volatile
  6631                           
  6632                           ;uart.c: 71: UART_SetBaudRate(v_baudRate_u32);
  6633  0B54  082D               	movf	UART_Init@v_baudRate_u32+3,w
  6634  0B55  00A3               	movwf	UART_SetBaudRate@v_baudRate_u32+3
  6635  0B56  082C               	movf	UART_Init@v_baudRate_u32+2,w
  6636  0B57  00A2               	movwf	UART_SetBaudRate@v_baudRate_u32+2
  6637  0B58  082B               	movf	UART_Init@v_baudRate_u32+1,w
  6638  0B59  00A1               	movwf	UART_SetBaudRate@v_baudRate_u32+1
  6639  0B5A  082A               	movf	UART_Init@v_baudRate_u32,w
  6640  0B5B  00A0               	movwf	UART_SetBaudRate@v_baudRate_u32
  6641  0B5C  120A  158A  26EA   	fcall	_UART_SetBaudRate
  6642  0B5F  0008               	return
  6643  0B60                     __end_of_UART_Init:	
  6644                           
  6645                           	psect	text38
  6646  0EEA                     __ptext38:	
  6647 ;; *************** function _UART_SetBaudRate *****************
  6648 ;; Defined at:
  6649 ;;		line 91 in file "../00-libfiles/uart.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;  v_baudRate_u    4    0[BANK0 ] unsigned long 
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;  RegValue        1    9[BANK0 ] unsigned char 
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  1    wreg      void 
  6656 ;; Registers used:
  6657 ;;		wreg, status,2, status,0, pclath, cstack
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6663 ;;      Params:         0       4       0       0       0
  6664 ;;      Locals:         0       1       0       0       0
  6665 ;;      Temps:          0       5       0       0       0
  6666 ;;      Totals:         0      10       0       0       0
  6667 ;;Total ram usage:       10 bytes
  6668 ;; Hardware stack levels used:    1
  6669 ;; Hardware stack levels required when called:    1
  6670 ;; This function calls:
  6671 ;;		___lldiv
  6672 ;; This function is called by:
  6673 ;;		_UART_Init
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677                           
  6678                           ;psect for function _UART_SetBaudRate
  6679  0EEA                     _UART_SetBaudRate:	
  6680                           
  6681                           ;uart.c: 93: uint8_t RegValue;
  6682                           ;uart.c: 95: if((v_baudRate_u32 >= 2400) && (v_baudRate_u32<=115200UL))
  6683                           
  6684                           ;incstack = 0
  6685                           ; Regs used in _UART_SetBaudRate: [wreg+status,2+status,0+pclath+cstack]
  6686  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  6687  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  6688  0EEC  0823               	movf	UART_SetBaudRate@v_baudRate_u32+3,w
  6689  0EED  1D03               	btfss	3,2
  6690  0EEE  2EFC               	goto	l2167
  6691  0EEF  0822               	movf	UART_SetBaudRate@v_baudRate_u32+2,w
  6692  0EF0  1D03               	btfss	3,2
  6693  0EF1  2EFC               	goto	l2167
  6694  0EF2  3009               	movlw	9
  6695  0EF3  0221               	subwf	UART_SetBaudRate@v_baudRate_u32+1,w
  6696  0EF4  1D03               	skipz
  6697  0EF5  2EFA               	goto	u2603
  6698  0EF6  3060               	movlw	96
  6699  0EF7  0220               	subwf	UART_SetBaudRate@v_baudRate_u32,w
  6700  0EF8  1D03               	skipz
  6701  0EF9  2EFA               	goto	u2603
  6702  0EFA                     u2603:	
  6703  0EFA  1C03               	btfss	3,0
  6704  0EFB  2F3A               	goto	l2171
  6705  0EFC                     l2167:	
  6706  0EFC  0823               	movf	UART_SetBaudRate@v_baudRate_u32+3,w
  6707  0EFD  1D03               	btfss	3,2
  6708  0EFE  2F3A               	goto	l2171
  6709  0EFF  3001               	movlw	1
  6710  0F00  0222               	subwf	UART_SetBaudRate@v_baudRate_u32+2,w
  6711  0F01  1D03               	skipz
  6712  0F02  2F0B               	goto	u2613
  6713  0F03  30C2               	movlw	194
  6714  0F04  0221               	subwf	UART_SetBaudRate@v_baudRate_u32+1,w
  6715  0F05  1D03               	skipz
  6716  0F06  2F0B               	goto	u2613
  6717  0F07  3001               	movlw	1
  6718  0F08  0220               	subwf	UART_SetBaudRate@v_baudRate_u32,w
  6719  0F09  1D03               	skipz
  6720  0F0A  2F0B               	goto	u2613
  6721  0F0B                     u2613:	
  6722  0F0B  1803               	btfsc	3,0
  6723  0F0C  2F3A               	goto	l2171
  6724                           
  6725                           ;uart.c: 96: {
  6726                           ;uart.c: 99: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)v_baudRate_u32))
      +                           - 1);
  6727  0F0D  0820               	movf	UART_SetBaudRate@v_baudRate_u32,w
  6728  0F0E  00A4               	movwf	??_UART_SetBaudRate
  6729  0F0F  0821               	movf	UART_SetBaudRate@v_baudRate_u32+1,w
  6730  0F10  00A5               	movwf	??_UART_SetBaudRate+1
  6731  0F11  0822               	movf	UART_SetBaudRate@v_baudRate_u32+2,w
  6732  0F12  00A6               	movwf	??_UART_SetBaudRate+2
  6733  0F13  0823               	movf	UART_SetBaudRate@v_baudRate_u32+3,w
  6734  0F14  00A7               	movwf	??_UART_SetBaudRate+3
  6735  0F15  3006               	movlw	6
  6736  0F16                     u2625:	
  6737  0F16  1003               	clrc
  6738  0F17  0DA4               	rlf	??_UART_SetBaudRate,f
  6739  0F18  0DA5               	rlf	??_UART_SetBaudRate+1,f
  6740  0F19  0DA6               	rlf	??_UART_SetBaudRate+2,f
  6741  0F1A  0DA7               	rlf	??_UART_SetBaudRate+3,f
  6742  0F1B  3EFF               	addlw	-1
  6743  0F1C  1D03               	skipz
  6744  0F1D  2F16               	goto	u2625
  6745  0F1E  0827               	movf	??_UART_SetBaudRate+3,w
  6746  0F1F  00F3               	movwf	___lldiv@divisor+3
  6747  0F20  0826               	movf	??_UART_SetBaudRate+2,w
  6748  0F21  00F2               	movwf	___lldiv@divisor+2
  6749  0F22  0825               	movf	??_UART_SetBaudRate+1,w
  6750  0F23  00F1               	movwf	___lldiv@divisor+1
  6751  0F24  0824               	movf	??_UART_SetBaudRate,w
  6752  0F25  00F0               	movwf	___lldiv@divisor
  6753  0F26  3001               	movlw	1
  6754  0F27  00F7               	movwf	___lldiv@dividend+3
  6755  0F28  3031               	movlw	49
  6756  0F29  00F6               	movwf	___lldiv@dividend+2
  6757  0F2A  302D               	movlw	45
  6758  0F2B  00F5               	movwf	___lldiv@dividend+1
  6759  0F2C  3000               	movlw	0
  6760  0F2D  00F4               	movwf	___lldiv@dividend
  6761  0F2E  120A  158A  2743  120A  158A  	fcall	___lldiv
  6762  0F33  0870               	movf	?___lldiv,w
  6763  0F34  3EFF               	addlw	255
  6764  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  6765  0F36  1303               	bcf	3,6	;RP1=0, select bank0
  6766  0F37  00A8               	movwf	??_UART_SetBaudRate+4
  6767  0F38  0828               	movf	??_UART_SetBaudRate+4,w
  6768  0F39  2F3D               	goto	L9
  6769  0F3A                     l2171:	
  6770                           ;uart.c: 100: }
  6771                           
  6772                           
  6773                           ;uart.c: 101: else
  6774                           ;uart.c: 102: {
  6775                           ;uart.c: 104: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)9600)) - 1);
  6776  0F3A  301F               	movlw	31
  6777  0F3B  00A4               	movwf	??_UART_SetBaudRate
  6778  0F3C  0824               	movf	??_UART_SetBaudRate,w
  6779  0F3D                     L9:	
  6780  0F3D  00A9               	movwf	UART_SetBaudRate@RegValue
  6781                           
  6782                           ;uart.c: 105: }
  6783                           ;uart.c: 107: SPBRG = RegValue;
  6784  0F3E  0829               	movf	UART_SetBaudRate@RegValue,w
  6785  0F3F  1683               	bsf	3,5	;RP0=1, select bank1
  6786  0F40  1303               	bcf	3,6	;RP1=0, select bank1
  6787  0F41  0099               	movwf	25	;volatile
  6788  0F42  0008               	return
  6789  0F43                     __end_of_UART_SetBaudRate:	
  6790                           
  6791                           	psect	text39
  6792  0F43                     __ptext39:	
  6793 ;; *************** function ___lldiv *****************
  6794 ;; Defined at:
  6795 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lldiv.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;  divisor         4    0[COMMON] unsigned long 
  6798 ;;  dividend        4    4[COMMON] unsigned long 
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;  quotient        4    9[COMMON] unsigned long 
  6801 ;;  counter         1   13[COMMON] unsigned char 
  6802 ;; Return value:  Size  Location     Type
  6803 ;;                  4    0[COMMON] unsigned long 
  6804 ;; Registers used:
  6805 ;;		wreg, status,2, status,0
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6811 ;;      Params:         8       0       0       0       0
  6812 ;;      Locals:         5       0       0       0       0
  6813 ;;      Temps:          1       0       0       0       0
  6814 ;;      Totals:        14       0       0       0       0
  6815 ;;Total ram usage:       14 bytes
  6816 ;; Hardware stack levels used:    1
  6817 ;; This function calls:
  6818 ;;		Nothing
  6819 ;; This function is called by:
  6820 ;;		_UART_SetBaudRate
  6821 ;;		_UART_TxNumber
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           
  6826                           ;psect for function ___lldiv
  6827  0F43                     ___lldiv:	
  6828                           
  6829                           ;incstack = 0
  6830                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6831  0F43  3000               	movlw	0
  6832  0F44  00FC               	movwf	___lldiv@quotient+3
  6833  0F45  3000               	movlw	0
  6834  0F46  00FB               	movwf	___lldiv@quotient+2
  6835  0F47  3000               	movlw	0
  6836  0F48  00FA               	movwf	___lldiv@quotient+1
  6837  0F49  3000               	movlw	0
  6838  0F4A  00F9               	movwf	___lldiv@quotient
  6839  0F4B  0873               	movf	___lldiv@divisor+3,w
  6840  0F4C  0472               	iorwf	___lldiv@divisor+2,w
  6841  0F4D  0471               	iorwf	___lldiv@divisor+1,w
  6842  0F4E  0470               	iorwf	___lldiv@divisor,w
  6843  0F4F  1903               	skipnz
  6844  0F50  2F98               	goto	l1965
  6845  0F51  01FD               	clrf	___lldiv@counter
  6846  0F52  0AFD               	incf	___lldiv@counter,f
  6847  0F53                     l1951:	
  6848  0F53  1BF3               	btfsc	___lldiv@divisor+3,7
  6849  0F54  2F63               	goto	l1953
  6850  0F55  3001               	movlw	1
  6851  0F56  00F8               	movwf	??___lldiv
  6852  0F57                     u2235:	
  6853  0F57  1003               	clrc
  6854  0F58  0DF0               	rlf	___lldiv@divisor,f
  6855  0F59  0DF1               	rlf	___lldiv@divisor+1,f
  6856  0F5A  0DF2               	rlf	___lldiv@divisor+2,f
  6857  0F5B  0DF3               	rlf	___lldiv@divisor+3,f
  6858  0F5C  0BF8               	decfsz	??___lldiv,f
  6859  0F5D  2F57               	goto	u2235
  6860  0F5E  3001               	movlw	1
  6861  0F5F  00F8               	movwf	??___lldiv
  6862  0F60  0878               	movf	??___lldiv,w
  6863  0F61  07FD               	addwf	___lldiv@counter,f
  6864  0F62  2F53               	goto	l1951
  6865  0F63                     l1953:	
  6866  0F63  3001               	movlw	1
  6867  0F64  00F8               	movwf	??___lldiv
  6868  0F65                     u2255:	
  6869  0F65  1003               	clrc
  6870  0F66  0DF9               	rlf	___lldiv@quotient,f
  6871  0F67  0DFA               	rlf	___lldiv@quotient+1,f
  6872  0F68  0DFB               	rlf	___lldiv@quotient+2,f
  6873  0F69  0DFC               	rlf	___lldiv@quotient+3,f
  6874  0F6A  0BF8               	decfsz	??___lldiv,f
  6875  0F6B  2F65               	goto	u2255
  6876  0F6C  0873               	movf	___lldiv@divisor+3,w
  6877  0F6D  0277               	subwf	___lldiv@dividend+3,w
  6878  0F6E  1D03               	skipz
  6879  0F6F  2F7A               	goto	u2265
  6880  0F70  0872               	movf	___lldiv@divisor+2,w
  6881  0F71  0276               	subwf	___lldiv@dividend+2,w
  6882  0F72  1D03               	skipz
  6883  0F73  2F7A               	goto	u2265
  6884  0F74  0871               	movf	___lldiv@divisor+1,w
  6885  0F75  0275               	subwf	___lldiv@dividend+1,w
  6886  0F76  1D03               	skipz
  6887  0F77  2F7A               	goto	u2265
  6888  0F78  0870               	movf	___lldiv@divisor,w
  6889  0F79  0274               	subwf	___lldiv@dividend,w
  6890  0F7A                     u2265:	
  6891  0F7A  1C03               	skipc
  6892  0F7B  2F8B               	goto	l1961
  6893  0F7C  0870               	movf	___lldiv@divisor,w
  6894  0F7D  02F4               	subwf	___lldiv@dividend,f
  6895  0F7E  0871               	movf	___lldiv@divisor+1,w
  6896  0F7F  1C03               	skipc
  6897  0F80  0F71               	incfsz	___lldiv@divisor+1,w
  6898  0F81  02F5               	subwf	___lldiv@dividend+1,f
  6899  0F82  0872               	movf	___lldiv@divisor+2,w
  6900  0F83  1C03               	skipc
  6901  0F84  0F72               	incfsz	___lldiv@divisor+2,w
  6902  0F85  02F6               	subwf	___lldiv@dividend+2,f
  6903  0F86  0873               	movf	___lldiv@divisor+3,w
  6904  0F87  1C03               	skipc
  6905  0F88  0F73               	incfsz	___lldiv@divisor+3,w
  6906  0F89  02F7               	subwf	___lldiv@dividend+3,f
  6907  0F8A  1479               	bsf	___lldiv@quotient,0
  6908  0F8B                     l1961:	
  6909  0F8B  3001               	movlw	1
  6910  0F8C                     u2275:	
  6911  0F8C  1003               	clrc
  6912  0F8D  0CF3               	rrf	___lldiv@divisor+3,f
  6913  0F8E  0CF2               	rrf	___lldiv@divisor+2,f
  6914  0F8F  0CF1               	rrf	___lldiv@divisor+1,f
  6915  0F90  0CF0               	rrf	___lldiv@divisor,f
  6916  0F91  3EFF               	addlw	-1
  6917  0F92  1D03               	skipz
  6918  0F93  2F8C               	goto	u2275
  6919  0F94  3001               	movlw	1
  6920  0F95  02FD               	subwf	___lldiv@counter,f
  6921  0F96  1D03               	btfss	3,2
  6922  0F97  2F63               	goto	l1953
  6923  0F98                     l1965:	
  6924  0F98  087C               	movf	___lldiv@quotient+3,w
  6925  0F99  00F3               	movwf	?___lldiv+3
  6926  0F9A  087B               	movf	___lldiv@quotient+2,w
  6927  0F9B  00F2               	movwf	?___lldiv+2
  6928  0F9C  087A               	movf	___lldiv@quotient+1,w
  6929  0F9D  00F1               	movwf	?___lldiv+1
  6930  0F9E  0879               	movf	___lldiv@quotient,w
  6931  0F9F  00F0               	movwf	?___lldiv
  6932  0FA0  0008               	return
  6933  0FA1                     __end_of___lldiv:	
  6934  007E                     btemp	set	126	;btemp
  6935  007E                     wtemp	set	126
  6936  007E                     wtemp0	set	126
  6937  0080                     wtemp1	set	128
  6938  0082                     wtemp2	set	130
  6939  0084                     wtemp3	set	132
  6940  0086                     wtemp4	set	134
  6941  0088                     wtemp5	set	136
  6942  007F                     wtemp6	set	127
  6943  007E                     ttemp	set	126
  6944  007E                     ttemp0	set	126
  6945  0081                     ttemp1	set	129
  6946  0084                     ttemp2	set	132
  6947  0087                     ttemp3	set	135
  6948  007F                     ttemp4	set	127
  6949  007E                     ltemp	set	126
  6950  007E                     ltemp0	set	126
  6951  0082                     ltemp1	set	130
  6952  0086                     ltemp2	set	134
  6953  0080                     ltemp3	set	128


Data Sizes:
    Strings     335
    Constant    0
    Data        4
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     67      73
    BANK1            80      0      14
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Printf@str	PTR unsigned char  size(1) Largest target is 0

    UART_Printf@argList	PTR const unsigned char  size(2) Largest target is 131
		 -> STR_7(CODE[16]), STR_6(CODE[23]), STR_5(CODE[69]), STR_4(CODE[18]), 
		 -> STR_1(CODE[131]), 

    UART_Printf@ptr	PTR const unsigned char  size(2) Largest target is 131
		 -> STR_7(CODE[16]), STR_6(CODE[23]), STR_5(CODE[69]), STR_4(CODE[18]), 
		 -> STR_1(CODE[131]), 

    UART_Printf@argp	PTR void [1] size(1) Largest target is 1
		 -> ?_UART_Printf(BANK0[1]), 

    UART_TxString@ptr_string	PTR const unsigned char  size(2) Largest target is 54
		 -> STR_3(CODE[54]), 

    LCD_DisplayString@ptr_stringPointer_u8	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_2(CODE[24]), 


Critical Paths under _main in COMMON

    _switch_Test->_GPIO_PinWrite
    _led_Test->_DELAY_ms
    _LCD_SetUp->_GPIO_PinDirection
    _LCD_Init->_LCD_CmdWrite
    _lcd_Reset->_lcd_SendHigherNibble
    _LCD_Clear->_LCD_CmdWrite
    _LCD_GoToLine->_LCD_CmdWrite
    _LCD_DisplayChar->_lcd_DataWrite
    _lcd_DataWrite->_lcd_BusyCheck
    _lcd_DataWrite->_lcd_SendHigherNibble
    _lcd_DataWrite->_lcd_SendLowerNibble
    _lcd_SendDataSignals->_GPIO_PinWrite
    _LCD_GoToNextLine->_LCD_CmdWrite
    _LCD_CmdWrite->_lcd_BusyCheck
    _LCD_CmdWrite->_lcd_SendHigherNibble
    _LCD_CmdWrite->_lcd_SendLowerNibble
    _lcd_SendLowerNibble->_GPIO_PinWrite
    _lcd_SendHigherNibble->_GPIO_PinWrite
    _lcd_SendCmdSignals->_GPIO_PinWrite
    _lcd_BusyCheck->_GPIO_PinWrite
    _GPIO_PinWrite->_GPIO_PinRead
    _DELAY_ms->_DELAY_us
    _EEPROM_WriteByte->_eeprom_write
    _UART_TxString->_UART_TxChar
    _UART_TxNumber->___lldiv
    ___bmul->___lldiv
    _ADC_GetAdcValue->_DELAY_us
    _UART_SetBaudRate->___lldiv

Critical Paths under _main in BANK0

    _main->_eeprom_Test
    _lcd_Test->_LCD_SetUp
    _LCD_Clear->_LCD_GoToLine
    _LCD_GoToLine->_LCD_CmdWrite
    _LCD_DisplayString->_LCD_DisplayChar
    _LCD_DisplayChar->_LCD_GoToNextLine
    _LCD_GoToNextLine->_LCD_CmdWrite
    _eeprom_Test->_UART_Printf
    _adc_Test->_UART_Printf
    _UART_Printf->_UART_TxNumber
    _UART_TxNumber->___bmul
    _UART_Init->_UART_SetBaudRate

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   93142
                                             65 BANK0      2     2      0
                           _DELAY_ms
                  _GPIO_PinDirection
                       _GPIO_PinRead
                      _GPIO_PinWrite
                          _UART_Init
                        _UART_Printf
                        _UART_RxChar
                           _adc_Test
                        _eeprom_Test
                           _lcd_Test
                           _led_Test
                        _switch_Test
 ---------------------------------------------------------------------------------
 (1) _switch_Test                                          1     1      0    3772
                                             10 COMMON     1     1      0
                  _GPIO_PinDirection
                       _GPIO_PinRead
                      _GPIO_PinWrite
                      _UART_TxString
 ---------------------------------------------------------------------------------
 (1) _led_Test                                             4     4      0    1286
                                              4 COMMON     4     4      0
                           _DELAY_ms
 ---------------------------------------------------------------------------------
 (1) _lcd_Test                                            10    10      0   69537
                                             10 BANK0     10    10      0
                  _LCD_DisplayString
                           _LCD_Init
                          _LCD_SetUp
 ---------------------------------------------------------------------------------
 (2) _LCD_SetUp                                           12     2     10    2613
                                              5 COMMON     2     2      0
                                              0 BANK0     10     0     10
                  _GPIO_PinDirection
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     2      1   43058
                                              3 BANK0      3     2      1
                           _DELAY_ms
                          _LCD_Clear
                       _LCD_CmdWrite
                          _lcd_Reset
 ---------------------------------------------------------------------------------
 (3) _lcd_Reset                                            0     0      0    6170
                           _DELAY_ms
                           _DELAY_us
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            0     0      0   23768
                       _LCD_CmdWrite
                       _LCD_GoToLine
 ---------------------------------------------------------------------------------
 (4) _LCD_GoToLine                                         2     2      0   11917
                                              1 BANK0      2     2      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayString                                    2     0      2   23866
                                              4 BANK0      2     0      2
                    _LCD_DisplayChar
 ---------------------------------------------------------------------------------
 (3) _LCD_DisplayChar                                      2     2      0   23768
                                              2 BANK0      2     2      0
                   _LCD_GoToNextLine
                      _lcd_DataWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_DataWrite                                        3     3      0   11851
                                             12 COMMON     2     2      0
                                              0 BANK0      1     1      0
                      _lcd_BusyCheck
                _lcd_SendDataSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendDataSignals                                  0     0      0    2488
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _LCD_GoToNextLine                                     1     1      0   11851
                                              1 BANK0      1     1      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (3) _LCD_CmdWrite                                         3     3      0   11851
                                             12 COMMON     2     2      0
                                              0 BANK0      1     1      0
                      _lcd_BusyCheck
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (4) _lcd_SendLowerNibble                                  2     2      0    1970
                                             10 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_SendHigherNibble                                 2     2      0    1970
                                             10 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_SendCmdSignals                                   0     0      0    2488
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_BusyCheck                                        2     2      0    5334
                                             10 COMMON     2     2      0
                           _DELAY_ms
                           _DELAY_us
                  _GPIO_PinDirection
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinWrite                                        5     4      1    1882
                                              5 COMMON     5     4      1
                       _GPIO_PinRead (ARG)
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinRead                                         5     5      0     206
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinDirection                                    5     4      1    1511
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _DELAY_ms                                             2     0      2    1106
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (1) _eeprom_Test                                          6     6      0    4591
                                             59 BANK0      6     6      0
                    _EEPROM_ReadByte
                   _EEPROM_WriteByte
                        _UART_Printf
 ---------------------------------------------------------------------------------
 (2) _EEPROM_WriteByte                                     4     1      3     353
                                              3 COMMON     4     1      3
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         3     2      1      97
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_ReadByte                                      2     0      2     128
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_Test                                             0     0      0    4579
                    _ADC_GetAdcValue
                           _ADC_Init
                        _UART_Printf
 ---------------------------------------------------------------------------------
 (2) _UART_Printf                                         24    20      4    3951
                                             35 BANK0     24    20      4
                    _ADC_GetAdcValue (ARG)
                        _UART_TxChar
                      _UART_TxNumber
                      _UART_TxString
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _UART_TxString                                        2     0      2     173
                                              1 COMMON     2     0      2
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (3) _UART_TxNumber                                       31    26      5    2202
                                              4 BANK0     31    26      5
                        _UART_TxChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetAdcValue                                      4     2      2     628
                                              2 COMMON     4     2      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (3) _DELAY_us                                             2     0      2     606
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART_RxChar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4     698
                                             10 BANK0      4     0      4
                   _UART_SetBaudRate
 ---------------------------------------------------------------------------------
 (2) _UART_SetBaudRate                                    10     6      4     623
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_ms
     _DELAY_us
   _GPIO_PinDirection
   _GPIO_PinRead
   _GPIO_PinWrite
     _GPIO_PinRead (ARG)
   _UART_Init
     _UART_SetBaudRate
       ___lldiv
   _UART_Printf
     _ADC_GetAdcValue (ARG)
       _DELAY_us
     _UART_TxChar (ARG)
     _UART_TxNumber (ARG)
       _UART_TxChar
       ___bmul
         ___lldiv (ARG)
       ___lldiv
     _UART_TxString (ARG)
       _UART_TxChar
     ___bmul (ARG)
       ___lldiv (ARG)
   _UART_RxChar
   _adc_Test
     _ADC_GetAdcValue
       _DELAY_us
     _ADC_Init
     _UART_Printf
       _ADC_GetAdcValue (ARG)
         _DELAY_us
       _UART_TxChar (ARG)
       _UART_TxNumber (ARG)
         _UART_TxChar
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       _UART_TxString (ARG)
         _UART_TxChar
       ___bmul (ARG)
         ___lldiv (ARG)
   _eeprom_Test
     _EEPROM_ReadByte
     _EEPROM_WriteByte
       _eeprom_write
     _UART_Printf
       _ADC_GetAdcValue (ARG)
         _DELAY_us
       _UART_TxChar (ARG)
       _UART_TxNumber (ARG)
         _UART_TxChar
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       _UART_TxString (ARG)
         _UART_TxChar
       ___bmul (ARG)
         ___lldiv (ARG)
   _lcd_Test
     _LCD_DisplayString
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
                 _GPIO_PinRead (ARG)
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
                 _GPIO_PinRead (ARG)
             _lcd_SendHigherNibble
               _GPIO_PinWrite
                 _GPIO_PinRead (ARG)
             _lcd_SendLowerNibble
               _GPIO_PinWrite
                 _GPIO_PinRead (ARG)
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
               _GPIO_PinRead (ARG)
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
               _GPIO_PinRead (ARG)
           _lcd_SendHigherNibble
             _GPIO_PinWrite
               _GPIO_PinRead (ARG)
           _lcd_SendLowerNibble
             _GPIO_PinWrite
               _GPIO_PinRead (ARG)
     _LCD_Init
       _DELAY_ms
         _DELAY_us
       _LCD_Clear
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
               _GPIO_PinRead (ARG)
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
               _GPIO_PinRead (ARG)
           _lcd_SendHigherNibble
             _GPIO_PinWrite
               _GPIO_PinRead (ARG)
           _lcd_SendLowerNibble
             _GPIO_PinWrite
               _GPIO_PinRead (ARG)
         _LCD_GoToLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
                 _GPIO_PinRead (ARG)
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
                 _GPIO_PinRead (ARG)
             _lcd_SendHigherNibble
               _GPIO_PinWrite
                 _GPIO_PinRead (ARG)
             _lcd_SendLowerNibble
               _GPIO_PinWrite
                 _GPIO_PinRead (ARG)
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
             _GPIO_PinRead (ARG)
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
             _GPIO_PinRead (ARG)
         _lcd_SendHigherNibble
           _GPIO_PinWrite
             _GPIO_PinRead (ARG)
         _lcd_SendLowerNibble
           _GPIO_PinWrite
             _GPIO_PinRead (ARG)
       _lcd_Reset
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
             _GPIO_PinRead (ARG)
         _lcd_SendHigherNibble
           _GPIO_PinWrite
             _GPIO_PinRead (ARG)
     _LCD_SetUp
       _GPIO_PinDirection
   _led_Test
     _DELAY_ms
       _DELAY_us
   _switch_Test
     _GPIO_PinDirection
     _GPIO_PinRead
     _GPIO_PinWrite
       _GPIO_PinRead (ARG)
     _UART_TxString
       _UART_TxChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       E       7       17.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     43      49       5       91.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      65      12        0.0%
ABS                  0      0      65       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon May 09 12:43:40 2016

                                      pc 0002                           ___bmul@product 0022  
                            __CFG_CP$OFF 0000                            ?_LCD_CmdWrite 0070  
                                     l22 0BEC                                       l59 0B25  
                                     _GO 00FA                                       _RD 0C60  
                                     _WR 0C61                                       fsr 0004  
                          ?_LCD_GoToLine 0070                              __CFG_LVP$ON 0000  
                                    l122 03E1                                      l212 0EE0  
                                    l310 0AFE                                      l304 0AEE  
                                    l152 04BA                                      l252 0115  
                                    l503 007F                                      l525 0C40  
                                    l457 01B1                                      l482 0E4B  
                                    _GIE 005F                             __CFG_CPD$OFF 0000  
        EEPROM_WriteByte@v_eepromData_u8 0075                                      fsr0 0004  
                                    indf 0000                             __CFG_FOSC$HS 0000  
                __end_of_ADC_GetAdcValue 0BF5                  __end_of_LCD_DisplayChar 0C1A  
                                   l2013 0C04                                     l2015 0C09  
                                   l2041 0502                                     l2201 061A  
                                   l2035 04C4                                     l2043 0506  
                                   l2027 0BAE                                     l2203 061F  
                                   l2221 065C                                     l2117 029C  
                                   l2071 0594                                     l2063 057F  
                                   l2055 0573                                     l2047 0511  
                                   l2231 0683                                     l2119 02A3  
                                   l2065 0514                                     l2233 0698  
                                   l2209 062B                                     l2153 0ECF  
                                   l2129 02CD                                     l2171 0F3A  
                                   l2067 0584                                     l2251 06FD  
                                   l2219 0646                                     l2163 0C1A  
                                   l2147 0EBE                                     l2307 0FA8  
                                   l2077 05A9                                     l2245 06DE  
                                   l2167 0EFC                                     l2239 06B7  
                                   l2265 0739                                     l2257 0724  
                                   l2361 0B96                                     l1801 0461  
                                   l1731 0B0F                                     l2283 078F  
                                   l2275 0765                                     l2267 074A  
                                   l2291 07C9                                     l1811 0498  
                                   l2355 0DE5                                     l2451 0203  
                                   l2443 01E2                                     l2277 0778  
                                   l2197 05EE                                     l2293 05B7  
                                   l1805 0474                                     l2453 0209  
                                   l2287 0791                                     l2375 0030  
                                   l1751 0340                                     l1831 00CC  
                                   l1823 0094                                     l1807 0485  
                                   l1815 04A9                                     l2455 020F  
                                   l2447 021A                                     l2289 07C3  
                                   l1761 0377                                     l1745 031C  
                                   l1825 00A2                                     l2457 0215  
                                   l2449 01FD                                     l1739 0B36  
                                   l1763 0388                                     l1755 0353  
                                   l1827 00B0                                     l1835 00E2  
                                   l1923 0D32                                     l1933 0007  
                                   l1773 03BF                                     l1757 0364  
                                   l1749 032F                                     l1829 00BE  
                                   l1837 00F3                                     l1951 0F53  
                                   l1767 039B                                     l1783 03F5  
                                   l1863 0179                                     l1919 0D16  
                                   l1961 0F8B                                     l1953 0F63  
                                   l1937 000D                                     l1769 03AC  
                                   l1777 03D0                                     l1793 042C  
                                   l1881 0CD7                                     l1795 043D  
                                   l1787 0408                                     l1859 016E  
                                   l1965 0F98                                     l1789 0419  
                                   l1885 0CF3                                     l1799 0450  
                                   _ADON 00F8                                     STR_1 0800  
                                   STR_2 08FE                                     STR_3 08C8  
                                   STR_4 092D                                     STR_5 0883  
                                   STR_6 0916                                     STR_7 093F  
                                   u2000 0D94                                     u2010 0DA3  
                                   u2100 0D64                                     u2020 0DA4  
                                   u2110 0D73                                     u2030 0DB3  
                                   u2120 0D74                                     u2040 0DB4  
                                   u2050 0D43                                     u2060 0D44  
                                   u2070 0D53                                     u2080 0D54  
                                   u2145 0CE9                                     u1514 0349  
                                   u2090 0D63                                     u2235 0F57  
                                   u1515 0347                                     u1604 03B5  
                                   u1524 0359                                     u1605 03B3  
                                   u1525 0357                                     u1614 03C5  
                                   u2255 0F65                                     u1615 03C3  
                                   u1544 036D                                     u1704 0446  
                                   u2265 0F7A                                     u1545 036B  
                                   u1465 030D                                     u1705 0444  
                                   u1625 03E6                                     u2185 0D28  
                                   u1554 037D                                     u1714 0456  
                                   u2275 0F8C                                     u2603 0EFA  
                                   u1555 037B                                     u1715 0454  
                                   u2380 04F3                                     u1484 0325  
                                   u1644 03FE                                     u2613 0F0B  
                                   u1485 0323                                     u1645 03FC  
                                   u2390 04F4                                     u2374 04D8  
                                   u1574 0391                                     u1494 0335  
                                   u1734 046A                                     u1654 040E  
                                   u2375 04D5                                     u1575 038F  
                                   u1495 0333                                     u1735 0468  
                                   u1655 040C                                     u1584 03A1  
                                   u1920 00DD                                     u1824 00A8  
                                   u1744 047A                                     u2625 0F16  
                                   u1585 039F                                     u1825 00A6  
                                   u1745 0478                                     u1930 00DE  
                                   u1914 00D2                                     u1674 0422  
                                   u1915 00D0                                     u1675 0420  
                                   u1764 048E                                     u1684 0432  
                                   u2485 0BD5                                     u1765 048C  
                                   u1685 0430                                     u1854 00B6  
                                   u1774 049E                                     u1855 00B4  
                                   u1775 049C                                     u1785 0085  
                                   u2745 0FDD                                     u1794 009A  
                                   u1970 0D83                                     u1795 0098  
                                   u1884 00C4                                     u1980 0D84  
                                   u1885 00C2                                     u1990 0D93  
                                   _RCIF 0065                                     _WREN 0C62  
                                   _TXIF 0064                           ??_eeprom_write 0071  
                           __CFG_WRT$OFF 0000                                     _main 0181  
                     __size_of_LCD_Clear 000B                                     btemp 007E  
                       __end_of_ADC_Init 0AFD                                     ltemp 007E  
                     __size_of_LCD_SetUp 00D1                                     start 0000  
                                   ttemp 007E                                     wtemp 007E  
                       __end_of_DELAY_ms 0B4A                         __end_of_DELAY_us 0B1A  
               __size_of_EEPROM_ReadByte 0011                        ___bmul@multiplier 0023  
                          ?_GPIO_PinRead 0070                              _switch_Test 0DBE  
                         ??_LCD_CmdWrite 007C                              LCD_SetUp@D0 0022  
                            LCD_SetUp@D1 0023                              LCD_SetUp@D2 0024  
                            LCD_SetUp@D3 0025                              LCD_SetUp@D4 0026  
                            LCD_SetUp@D5 0027                              LCD_SetUp@D6 0028  
                            LCD_SetUp@D7 0029                              LCD_SetUp@EN 0021  
                            LCD_SetUp@RS 0076                              LCD_SetUp@RW 0020  
                         ??_LCD_GoToLine 0021                            _GPIO_PinWrite 03E2  
                       __end_of_LCD_Init 0EEA                    eeprom_Test@write_char 0060  
                LCD_CmdWrite@v_lcdCmd_u8 0020                                    ?_main 0070  
                                  _EEADR 010D                            __CFG_WDTE$OFF 0000  
                                  _CARRY 0018                          __end_of___lldiv 0FA1  
                                  _RCREG 001A                                    _RCSTA 0018  
                                  _SPBRG 0099                                    _PORTA 0005  
                                  _PORTB 0006                                    _PORTC 0007  
                                  _PORTD 0008                                    _PORTE 0009  
                                  _TRISA 0085                                    _TRISB 0086  
                                  _TRISC 0087                                    _TRISD 0088  
                                  _TRISE 0089                                    _TXREG 0019  
                                  _TXSTA 0098                       __size_of_UART_Init 0016  
  LCD_DisplayString@ptr_stringPointer_u8 0024                           __CFG_BOREN$OFF 0000  
                                  pclath 000A                                    ltemp0 007E  
                                  ltemp1 0082                                    ltemp2 0086  
                                  ltemp3 0080             __end_of_lcd_SendHigherNibble 0D7E  
                                  ttemp0 007E                                    ttemp1 0081  
                                  ttemp2 0084                                    ttemp3 0087  
                                  ttemp4 007F                                    status 0003  
                                  wtemp0 007E                                    wtemp1 0080  
                                  wtemp2 0082                                    wtemp3 0084  
                                  wtemp4 0086                                    wtemp5 0088  
                                  wtemp6 007F                           ??_GPIO_PinRead 0070  
                        __initialization 07D2               GPIO_PinWrite@enm_pinNumber 0079  
                           __end_of_main 0238                           ?_GPIO_PinWrite 0075  
                      _GPIO_PinDirection 0309                                   ??_main 0061  
            __size_of_lcd_SendCmdSignals 002D                        __end_of_LCD_Clear 0B25  
                     ?_GPIO_PinDirection 0070                        __end_of_LCD_SetUp 0309  
                       ?_ADC_GetAdcValue 0072                                   _ADCON0 001F  
                                 _ADCON1 009F                         ?_LCD_DisplayChar 0070  
            LCD_DisplayChar@v_lcdData_u8 0023                                   _ADRESH 001E  
                                 _ADRESL 009E                                   _EEDATA 010C  
                                 _EECON1 018C                                   _EECON2 018D  
                    ??_GPIO_PinDirection 0071                         __end_of_adc_Test 0BAE  
                      ?_UART_SetBaudRate 0020                    lcd_BusyCheck@busyflag 007B  
                     ??_UART_SetBaudRate 0024                             ?_UART_RxChar 0070  
                         __CFG_PWRTE$OFF 0000                             ?_UART_TxChar 0070  
                   __size_of_eeprom_Test 006A                             ?_UART_Printf 0043  
                       __end_of_lcd_Test 0E4C                         __end_of_led_Test 1000  
              GPIO_PinRead@enm_pinNumber 0074                        __end_of_UART_Init 0B60  
                                 ___bmul 0003                                ??___lldiv 0078  
              __end_of_GPIO_PinDirection 03E2                        ??_EEPROM_ReadByte 0072  
                        led_Test@pattern 0076           GPIO_PinDirection@enm_pinNumber 0074  
                   __end_of_eeprom_write 0C65                 __end_of_EEPROM_WriteByte 0B0F  
                       DELAY_ms@ms_count 0072  UART_TxNumber@v_numOfDigitsToTransmit_u8 0028  
                              ?_ADC_Init 0070                        ?_LCD_GoToNextLine 0070  
                              ?_DELAY_ms 0072                                ?_DELAY_us 0070  
            __end_of_lcd_SendLowerNibble 0DBE                       ??_LCD_GoToNextLine 0021  
                   __end_of_LCD_CmdWrite 0CFF                     __end_of_LCD_GoToLine 0B91  
            lcd_SendLowerNibble@dataByte 007B                  __end_of__initialization 07FC  
                              ?_LCD_Init 0023                    __end_of_UART_TxNumber 05AD  
                  __end_of_UART_TxString 0BD1                      ___bmul@multiplicand 0020  
                        ??_GPIO_PinWrite 0076                           __pcstackCOMMON 0070  
                           __pidataBANK0 0AEA                    __end_of_lcd_DataWrite 0D3E  
                   _lcd_SendHigherNibble 0D3E                       __size_of_lcd_Reset 004F  
                             ??_ADC_Init 0070             __size_of_lcd_SendDataSignals 002E  
                      eeprom_write@value 0070                               ??_DELAY_ms 0074  
                             ??_DELAY_us 0072                     __end_of_GPIO_PinRead 00F5  
         GPIO_PinWrite@var_portNumber_u8 0078                               __pbssBANK0 0067  
                             __pbssBANK1 00A0                    __end_of_lcd_BusyCheck 0181  
           lcd_SendHigherNibble@dataByte 007B             GPIO_PinWrite@var_pinValue_u8 0075  
                             ??_LCD_Init 0024                               __pmaintext 0181  
                           ?_switch_Test 0070                                  ?___bmul 0020  
    EEPROM_WriteByte@v_eepromAddress_u16 0073               __size_of_GPIO_PinDirection 00D9  
                              ?_adc_Test 0070                    ?_lcd_SendHigherNibble 0070  
                                _GO_DONE 00FA                                ?_lcd_Test 0070  
                       DELAY_us@us_count 0070                                ?_led_Test 0070  
                             __stringtab 094F                        __end_of_lcd_Reset 0E9B  
                   __size_of_UART_RxChar 0007                    __size_of_eeprom_write 0026  
                   __size_of_UART_TxChar 0009                          __size_of___bmul 0013  
                   __size_of_UART_Printf 0225                LCD_Init@v_lcdNoOfLines_u8 0025  
                                ___lldiv 0F43       EEPROM_ReadByte@v_eepromAddress_u16 0070  
                             ??_adc_Test 007E                                  __ptext1 0DBE  
                                __ptext2 0FA1                                  __ptext3 0E04  
                                __ptext4 0238                                  __ptext5 0E9B  
                                __ptext6 0E4C                                  __ptext7 0B1A  
                                __ptext8 0B78                                  __ptext9 0C1A  
                  __size_of_LCD_CmdWrite 003F                                _LCDConfig 00A0  
                  __size_of_LCD_GoToLine 0019                                _LCD_Clear 0B1A  
                         UART_Printf@ptr 0056                           UART_Printf@str 0049  
                             ??_lcd_Test 002A                                _LCD_SetUp 0238  
                             ??_led_Test 0074                     end_of_initialization 07FC  
                         UART_TxNumber@a 0035                           UART_TxNumber@i 0042  
           LCD_Init@v_MaxCharsPerLine_u8 0023                             _eeprom_write 0C3F  
                        _EEPROM_ReadByte 0B25                          ___lldiv@divisor 0070  
                        ___lldiv@counter 007D           UART_SetBaudRate@v_baudRate_u32 0020  
                           __pstringtext 0800                   ??_lcd_SendHigherNibble 007A  
             __end_of_lcd_SendCmdSignals 0C92                             _LCD_CmdWrite 0CC0  
                              _UART_Init 0B4A                __size_of_UART_SetBaudRate 0059  
                           _LCD_GoToLine 0B78         ADC_GetAdcValue@var_adcChannel_u8 0075  
                  __size_of_GPIO_PinRead 0075                        ?_EEPROM_WriteByte 0073  
                     ??_EEPROM_WriteByte 0076                               ?_LCD_Clear 0070  
                             ?_LCD_SetUp 0020                        __size_of_ADC_Init 0008  
                      __size_of_DELAY_ms 0014                        __size_of_DELAY_us 000B  
                          ??_eeprom_Test 005B                 __size_of_ADC_GetAdcValue 0024  
               __size_of_LCD_DisplayChar 0025                        __size_of_LCD_Init 004F  
                             main@option 0062                __size_of_LCD_GoToNextLine 0018  
                    _lcd_SendDataSignals 0C92          UART_TxNumber@v_numericSystem_u8 0041  
     GPIO_PinDirection@var_portNumber_u8 0073                             _GPIO_PinRead 0080  
                         __end_of___bmul 0016                     __size_of_switch_Test 0046  
                             ?_UART_Init 002A                 _ARR_LcdLineNumAddress_U8 0063  
                    start_initialization 07D2                     ?_lcd_SendDataSignals 0070  
                 _v_LcdTrackCursorPos_U8 0067                  __end_of_EEPROM_ReadByte 0B36  
          GPIO_PinRead@var_portNumber_u8 0072             __size_of_lcd_SendLowerNibble 0040  
        GPIO_PinDirection@var_pinDirn_u8 0070                                 ??___bmul 0021  
                    __end_of_eeprom_Test 0080                    __end_of_GPIO_PinWrite 04BB  
                            __pdataBANK0 0063                        _UART_TxNumber$339 003F  
                      __size_of_adc_Test 001D                    ??_lcd_SendDataSignals 007A  
                   _v_LcdTrackLineNum_U8 0068                   __size_of_UART_TxNumber 00F2  
                              ___latbits 0002                    lcd_DataWrite@dataByte 0020  
                 __size_of_UART_TxString 0023                            __pcstackBANK0 0020  
                            ??_LCD_Clear 007E                              ??_LCD_SetUp 0075  
                 __size_of_lcd_DataWrite 003F                         eeprom_write@addr 0072  
                      __size_of_lcd_Test 0048                        __size_of_led_Test 005F  
            LCD_GoToLine@v_lineNumber_u8 0022                                 ?___lldiv 0070  
                      ??_ADC_GetAdcValue 0074                                _lcd_Reset 0E4C  
                      ??_LCD_DisplayChar 0022                              ??_UART_Init 007E  
                       _UART_SetBaudRate 0EEA                                __pstrings 094F  
                 __size_of_lcd_BusyCheck 008C                                 _ADC_Init 0AF5  
                      _LCD_DisplayString 0C1A                                 _DELAY_ms 0B36  
                               _DELAY_us 0B0F                       ?_LCD_DisplayString 0024  
                       ?_EEPROM_ReadByte 0070                            UART_Printf@ch 0058  
                               _LCD_Init 0E9B                              _eeprom_Test 0016  
                    ??_LCD_DisplayString 007E                            ??_UART_RxChar 0070  
                          ??_UART_TxChar 0070                            _UART_TxNumber 04BB  
                       _LCD_GoToNextLine 0B60                            ??_UART_Printf 0047  
                          _UART_TxString 0BAE                  UART_Init@v_baudRate_u32 002A  
                             ?_lcd_Reset 0070                            _lcd_DataWrite 0CFF  
                UART_TxString@ptr_string 0071                 GPIO_PinRead@returnStatus 0073  
                            __stringbase 0961                                led_Test@i 0074  
              __end_of_LCD_DisplayString 0C3F                       _lcd_SendCmdSignals 0C65  
                          _lcd_BusyCheck 00F5                __size_of_EEPROM_WriteByte 0009  
                    ?_lcd_SendCmdSignals 0070                UART_TxNumber@v_number_u32 0024  
                         ?_UART_TxNumber 0024                           ?_UART_TxString 0071  
               UART_TxChar@v_uartData_u8 0070                           ?_lcd_DataWrite 0070  
                    __end_of_UART_RxChar 0AF5                      __end_of_UART_TxChar 0B06  
                       __size_of___lldiv 005E                      __end_of_UART_Printf 07D2  
                               _adc_Test 0B91                       __end_of__stringtab 0961  
                   ??_lcd_SendCmdSignals 007A            __size_of_lcd_SendHigherNibble 0040  
                    _lcd_SendLowerNibble 0D7E                                 __ptext10 0BF5  
                               __ptext11 0CFF                                 __ptext20 0080  
                               __ptext12 0C92                                 __ptext21 0309  
                               __ptext13 0B60                                 __ptext30 04BB  
                               __ptext22 0B36                                 __ptext14 0CC0  
                               __ptext31 0003                                 __ptext23 0016  
                               __ptext15 0D7E                                 __ptext32 0AFD  
                               __ptext24 0B06                                 __ptext16 0D3E  
                               __ptext33 0AF5                                 __ptext25 0C3F  
                               __ptext17 0C65                                 __ptext34 0BD1  
                               __ptext26 0B25                                 __ptext18 00F5  
                               __ptext35 0B0F                                 __ptext27 0B91  
                               __ptext19 03E2                                 __ptext36 0AEE  
                               __ptext28 05AD                                 __ptext37 0B4A  
                               __ptext29 0BAE                                 __ptext38 0EEA  
                               __ptext39 0F43                                 _lcd_Test 0E04  
                               _led_Test 0FA1                           ?_lcd_BusyCheck 0070  
                          __size_of_main 00B7                     ?_lcd_SendLowerNibble 0070  
                          ??_switch_Test 007A                          UART_Printf@argp 005A  
                            ??_lcd_Reset 007C                 UART_SetBaudRate@RegValue 0029  
             __size_of_LCD_DisplayString 0025                eeprom_Test@eeprom_address 005F  
                        ??_UART_TxNumber 0029                 __end_of_UART_SetBaudRate 0F43  
                        _ADC_GetAdcValue 0BD1                          ??_UART_TxString 0073  
                  ??_lcd_SendLowerNibble 007A                         ___lldiv@dividend 0074  
                        _LCD_DisplayChar 0BF5                              _UART_RxChar 0AEE  
                              stringcode 0959                              _UART_TxChar 0AFD  
                            _UART_Printf 05AD                          ??_lcd_DataWrite 007C  
            __end_of_lcd_SendDataSignals 0CC0                      __end_of_switch_Test 0E04  
                       ___lldiv@quotient 0079                 __end_of_LCD_GoToNextLine 0B78  
                               stringtab 094F                          ??_lcd_BusyCheck 007A  
                   eeprom_Test@read_char 005E                   __size_of_GPIO_PinWrite 00D9  
  UART_Printf@v_numOfDigitsToTransmit_u8 0059                       UART_Printf@argList 0043  
                       _EEPROM_WriteByte 0B06                            ?_eeprom_write 0070  
                           ?_eeprom_Test 0070                     UART_Printf@v_num_s16 004E  
                   UART_Printf@v_num_s32 004A                     UART_Printf@v_num_u16 0054  
                   UART_Printf@v_num_u32 0050  
