

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Feb 20 15:35:00 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  0007                     	;# 
    28  0008                     	;# 
    29  0009                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  000D                     	;# 
    34  000E                     	;# 
    35  000E                     	;# 
    36  000F                     	;# 
    37  0010                     	;# 
    38  0011                     	;# 
    39  0012                     	;# 
    40  0013                     	;# 
    41  0014                     	;# 
    42  0015                     	;# 
    43  0015                     	;# 
    44  0016                     	;# 
    45  0017                     	;# 
    46  0018                     	;# 
    47  0019                     	;# 
    48  001A                     	;# 
    49  001B                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  001D                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  0081                     	;# 
    56  0085                     	;# 
    57  0086                     	;# 
    58  0087                     	;# 
    59  0088                     	;# 
    60  0089                     	;# 
    61  008C                     	;# 
    62  008D                     	;# 
    63  008E                     	;# 
    64  0091                     	;# 
    65  0092                     	;# 
    66  0093                     	;# 
    67  0094                     	;# 
    68  0098                     	;# 
    69  0099                     	;# 
    70  009C                     	;# 
    71  009D                     	;# 
    72  009E                     	;# 
    73  009F                     	;# 
    74  010C                     	;# 
    75  010D                     	;# 
    76  010E                     	;# 
    77  010F                     	;# 
    78  018C                     	;# 
    79  018D                     	;# 
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  001A                     _RCREG	set	26
   141  0018                     _RCSTA	set	24
   142  0019                     _TXREG	set	25
   143  0065                     _RCIF	set	101
   144  0064                     _TXIF	set	100
   145  0099                     _SPBRG	set	153
   146  0087                     _TRISC	set	135
   147  0098                     _TXSTA	set	152
   148                           
   149                           	psect	strings
   150  0003                     __pstrings:	
   151  0003                     stringtab:	
   152  0003                     __stringtab:	
   153  0003                     stringcode:	
   154                           ;	String table - string pointers are 1 byte each
   155                           
   156  0003                     stringdir:	
   157  0003  3000               	movlw	high stringdir
   158  0004  008A               	movwf	10
   159  0005  0804               	movf	4,w
   160  0006  0A84               	incf	4,f
   161  0007  0782               	addwf	2,f
   162  0008                     __stringbase:	
   163  0008  3400               	retlw	0
   164  0009                     __end_of__stringtab:	
   165  0009                     STR_1:	
   166  0009  3468               	retlw	104	;'h'
   167  000A  3465               	retlw	101	;'e'
   168  000B  3478               	retlw	120	;'x'
   169  000C  343A               	retlw	58	;':'
   170  000D  3430               	retlw	48	;'0'
   171  000E  3478               	retlw	120	;'x'
   172  000F  3425               	retlw	37	;'%'
   173  0010  3432               	retlw	50	;'2'
   174  0011  3478               	retlw	120	;'x'
   175  0012  3420               	retlw	32	;' '
   176  0013  3420               	retlw	32	;' '
   177  0014  3420               	retlw	32	;' '
   178  0015  3462               	retlw	98	;'b'
   179  0016  3469               	retlw	105	;'i'
   180  0017  346E               	retlw	110	;'n'
   181  0018  343A               	retlw	58	;':'
   182  0019  3425               	retlw	37	;'%'
   183  001A  3438               	retlw	56	;'8'
   184  001B  3462               	retlw	98	;'b'
   185  001C  3420               	retlw	32	;' '
   186  001D  3420               	retlw	32	;' '
   187  001E  3420               	retlw	32	;' '
   188  001F  3464               	retlw	100	;'d'
   189  0020  3465               	retlw	101	;'e'
   190  0021  3463               	retlw	99	;'c'
   191  0022  343A               	retlw	58	;':'
   192  0023  3425               	retlw	37	;'%'
   193  0024  3433               	retlw	51	;'3'
   194  0025  3464               	retlw	100	;'d'
   195  0026  340A               	retlw	10
   196  0027  340D               	retlw	13
   197  0028  3400               	retlw	0
   198                           
   199                           ; #config settings
   200  0000                     
   201                           	psect	cinit
   202  07FC                     start_initialization:	
   203  07FC                     __initialization:	
   204  07FC                     end_of_initialization:	
   205                           ;End of C runtime variable initialization code
   206                           
   207  07FC                     __end_of__initialization:	
   208  07FC  0183               	clrf	3
   209  07FD  120A  118A  2BB8   	ljmp	_main	;jump to C main() function
   210                           
   211                           	psect	cstackCOMMON
   212  0070                     __pcstackCOMMON:	
   213  0070                     ?_UART_TxChar:	
   214  0070                     ??_UART_TxChar:	
   215                           ; 1 bytes @ 0x0
   216                           
   217  0070                     ?_UART_TxString:	
   218                           ; 1 bytes @ 0x0
   219                           
   220  0070                     ?_DELAY_us:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0070                     ?_main:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0070                     ?___lldiv:	
   227                           ; 2 bytes @ 0x0
   228                           
   229  0070                     UART_TxChar@var_uartData_u8:	
   230                           ; 4 bytes @ 0x0
   231                           
   232  0070                     DELAY_us@us_count:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ___lldiv@divisor:	
   236                           ; 2 bytes @ 0x0
   237                           
   238                           
   239                           ; 4 bytes @ 0x0
   240  0070                     	ds	1
   241  0071                     ??_UART_TxString:	
   242                           
   243                           ; 1 bytes @ 0x1
   244  0071                     	ds	1
   245  0072                     ?_DELAY_ms:	
   246  0072                     ??_DELAY_us:	
   247                           ; 1 bytes @ 0x2
   248                           
   249  0072                     UART_TxString@ptr_stringPointer_u8:	
   250                           ; 1 bytes @ 0x2
   251                           
   252  0072                     DELAY_ms@ms_count:	
   253                           ; 1 bytes @ 0x2
   254                           
   255                           
   256                           ; 2 bytes @ 0x2
   257  0072                     	ds	2
   258  0074                     ??_DELAY_ms:	
   259  0074                     ___lldiv@dividend:	
   260                           ; 1 bytes @ 0x4
   261                           
   262                           
   263                           ; 4 bytes @ 0x4
   264  0074                     	ds	4
   265  0078                     ??___lldiv:	
   266                           
   267                           ; 1 bytes @ 0x8
   268  0078                     	ds	1
   269  0079                     ___lldiv@quotient:	
   270                           
   271                           ; 4 bytes @ 0x9
   272  0079                     	ds	4
   273  007D                     ___lldiv@counter:	
   274                           
   275                           ; 1 bytes @ 0xD
   276  007D                     	ds	1
   277  007E                     ??_UART_Init:	
   278  007E                     ??_main:	
   279                           ; 1 bytes @ 0xE
   280                           
   281                           
   282                           	psect	cstackBANK0
   283  0020                     __pcstackBANK0:	
   284                           ; 1 bytes @ 0xE
   285                           
   286  0020                     ?_UART_SetBaudRate:	
   287  0020                     ?___bmul:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0020                     ___bmul@multiplicand:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0020                     UART_SetBaudRate@var_baudRate_u32:	
   294                           ; 1 bytes @ 0x0
   295                           
   296                           
   297                           ; 4 bytes @ 0x0
   298  0020                     	ds	1
   299  0021                     ??___bmul:	
   300                           
   301                           ; 1 bytes @ 0x1
   302  0021                     	ds	1
   303  0022                     ___bmul@product:	
   304                           
   305                           ; 1 bytes @ 0x2
   306  0022                     	ds	1
   307  0023                     ___bmul@multiplier:	
   308                           
   309                           ; 1 bytes @ 0x3
   310  0023                     	ds	1
   311  0024                     ??_UART_SetBaudRate:	
   312  0024                     ?_UART_TxNumber:	
   313                           ; 1 bytes @ 0x4
   314                           
   315  0024                     UART_TxNumber@var_number_u32:	
   316                           ; 1 bytes @ 0x4
   317                           
   318                           
   319                           ; 4 bytes @ 0x4
   320  0024                     	ds	4
   321  0028                     UART_TxNumber@var_numOfDigitsToTransmit_u8:	
   322                           
   323                           ; 1 bytes @ 0x8
   324  0028                     	ds	1
   325  0029                     ??_UART_TxNumber:	
   326                           
   327                           ; 1 bytes @ 0x9
   328  0029                     	ds	3
   329  002C                     UART_SetBaudRate@RegValue:	
   330                           
   331                           ; 4 bytes @ 0xC
   332  002C                     	ds	4
   333  0030                     ?_UART_Init:	
   334  0030                     UART_Init@var_baudRate_u32:	
   335                           ; 1 bytes @ 0x10
   336                           
   337                           
   338                           ; 4 bytes @ 0x10
   339  0030                     	ds	5
   340  0035                     UART_TxNumber@a:	
   341                           
   342                           ; 10 bytes @ 0x15
   343  0035                     	ds	10
   344  003F                     _UART_TxNumber$58:	
   345                           
   346                           ; 2 bytes @ 0x1F
   347  003F                     	ds	2
   348  0041                     UART_TxNumber@var_numericSystem_u8:	
   349                           
   350                           ; 1 bytes @ 0x21
   351  0041                     	ds	1
   352  0042                     UART_TxNumber@i:	
   353                           
   354                           ; 1 bytes @ 0x22
   355  0042                     	ds	1
   356  0043                     ?_UART_Printf:	
   357                           
   358                           ; 1 bytes @ 0x23
   359  0043                     	ds	6
   360  0049                     ??_UART_Printf:	
   361                           
   362                           ; 1 bytes @ 0x29
   363  0049                     	ds	2
   364  004B                     UART_Printf@var_floatNum_f32:	
   365                           
   366                           ; 3 bytes @ 0x2B
   367  004B                     	ds	3
   368  004E                     UART_Printf@str:	
   369                           
   370                           ; 1 bytes @ 0x2E
   371  004E                     	ds	1
   372  004F                     UART_Printf@argList:	
   373                           
   374                           ; 1 bytes @ 0x2F
   375  004F                     	ds	1
   376  0050                     UART_Printf@var_num_s32:	
   377                           
   378                           ; 4 bytes @ 0x30
   379  0050                     	ds	4
   380  0054                     UART_Printf@var_num_s16:	
   381                           
   382                           ; 2 bytes @ 0x34
   383  0054                     	ds	2
   384  0056                     UART_Printf@var_num_u32:	
   385                           
   386                           ; 4 bytes @ 0x36
   387  0056                     	ds	4
   388  005A                     UART_Printf@var_num_u16:	
   389                           
   390                           ; 2 bytes @ 0x3A
   391  005A                     	ds	2
   392  005C                     UART_Printf@ptr:	
   393                           
   394                           ; 1 bytes @ 0x3C
   395  005C                     	ds	1
   396  005D                     UART_Printf@ch:	
   397                           
   398                           ; 1 bytes @ 0x3D
   399  005D                     	ds	1
   400  005E                     UART_Printf@var_numOfDigitsToTransmit_u8:	
   401                           
   402                           ; 1 bytes @ 0x3E
   403  005E                     	ds	1
   404  005F                     UART_Printf@argp:	
   405                           
   406                           ; 1 bytes @ 0x3F
   407  005F                     	ds	1
   408  0060                     main@count:	
   409                           
   410                           ; 2 bytes @ 0x40
   411  0060                     	ds	2
   412                           
   413                           	psect	maintext
   414  03B8                     __pmaintext:	
   415 ;;
   416 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   417 ;;
   418 ;; *************** function _main *****************
   419 ;; Defined at:
   420 ;;		line 39 in file "main.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;  count           2   64[BANK0 ] int 
   425 ;; Return value:  Size  Location     Type
   426 ;;                  2  123[None  ] int 
   427 ;; Registers used:
   428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : B00/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   434 ;;      Params:         0       0       0       0       0
   435 ;;      Locals:         0       2       0       0       0
   436 ;;      Temps:          0       0       0       0       0
   437 ;;      Totals:         0       2       0       0       0
   438 ;;Total ram usage:        2 bytes
   439 ;; Hardware stack levels required when called:    3
   440 ;; This function calls:
   441 ;;		_DELAY_ms
   442 ;;		_UART_Init
   443 ;;		_UART_Printf
   444 ;; This function is called by:
   445 ;;		Startup code after reset
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           
   450                           ;psect for function _main
   451  03B8                     _main:	
   452                           
   453                           ;main.c: 41: int count = 0;
   454                           
   455                           ;incstack = 0
   456                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   457  03B8  1283               	bcf	3,5	;RP0=0, select bank0
   458  03B9  1303               	bcf	3,6	;RP1=0, select bank0
   459  03BA  01E0               	clrf	main@count
   460  03BB  01E1               	clrf	main@count+1
   461                           
   462                           ;main.c: 42: UART_Init(9600);
   463  03BC  3000               	movlw	0
   464  03BD  00B3               	movwf	UART_Init@var_baudRate_u32+3
   465  03BE  3000               	movlw	0
   466  03BF  00B2               	movwf	UART_Init@var_baudRate_u32+2
   467  03C0  3025               	movlw	37
   468  03C1  00B1               	movwf	UART_Init@var_baudRate_u32+1
   469  03C2  3080               	movlw	128
   470  03C3  00B0               	movwf	UART_Init@var_baudRate_u32
   471  03C4  120A  118A  23A2  120A  118A  	fcall	_UART_Init
   472  03C9                     l1140:	
   473                           ;main.c: 44: while(1)
   474                           
   475                           
   476                           ;main.c: 45: {
   477                           ;main.c: 46: UART_Printf("hex:0x%2x   bin:%8b   dec:%3d\n\r",count,count,count);
   478  03C9  1283               	bcf	3,5	;RP0=0, select bank0
   479  03CA  1303               	bcf	3,6	;RP1=0, select bank0
   480  03CB  0861               	movf	main@count+1,w
   481  03CC  00C4               	movwf	?_UART_Printf+1
   482  03CD  0860               	movf	main@count,w
   483  03CE  00C3               	movwf	?_UART_Printf
   484  03CF  0861               	movf	main@count+1,w
   485  03D0  00C6               	movwf	?_UART_Printf+3
   486  03D1  0860               	movf	main@count,w
   487  03D2  00C5               	movwf	?_UART_Printf+2
   488  03D3  0861               	movf	main@count+1,w
   489  03D4  00C8               	movwf	?_UART_Printf+5
   490  03D5  0860               	movf	main@count,w
   491  03D6  00C7               	movwf	?_UART_Printf+4
   492  03D7  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   493  03D8  120A  118A  25D7  120A  118A  	fcall	_UART_Printf
   494                           
   495                           ;main.c: 47: DELAY_ms(100);
   496  03DD  3064               	movlw	100
   497  03DE  00F2               	movwf	DELAY_ms@ms_count
   498  03DF  3000               	movlw	0
   499  03E0  00F3               	movwf	DELAY_ms@ms_count+1
   500  03E1  120A  118A  2379  120A  118A  	fcall	_DELAY_ms
   501                           
   502                           ;main.c: 48: count++;
   503  03E6  3001               	movlw	1
   504  03E7  1283               	bcf	3,5	;RP0=0, select bank0
   505  03E8  1303               	bcf	3,6	;RP1=0, select bank0
   506  03E9  07E0               	addwf	main@count,f
   507  03EA  1803               	skipnc
   508  03EB  0AE1               	incf	main@count+1,f
   509  03EC  3000               	movlw	0
   510  03ED  07E1               	addwf	main@count+1,f
   511                           
   512                           ;main.c: 49: if(count > 255)
   513  03EE  0861               	movf	main@count+1,w
   514  03EF  3A80               	xorlw	128
   515  03F0  00FF               	movwf	127
   516  03F1  3081               	movlw	129
   517  03F2  027F               	subwf	127,w
   518  03F3  1D03               	skipz
   519  03F4  2BF7               	goto	u855
   520  03F5  3000               	movlw	0
   521  03F6  0260               	subwf	main@count,w
   522  03F7                     u855:	
   523  03F7  1C03               	skipc
   524  03F8  2BC9               	goto	l1140
   525                           
   526                           ;main.c: 50: {
   527                           ;main.c: 51: count = 0;
   528  03F9  1283               	bcf	3,5	;RP0=0, select bank0
   529  03FA  1303               	bcf	3,6	;RP1=0, select bank0
   530  03FB  01E0               	clrf	main@count
   531  03FC  01E1               	clrf	main@count+1
   532  03FD  2BC9               	goto	l1140
   533  03FE                     __end_of_main:	
   534                           ;main.c: 52: }
   535                           ;main.c: 53: }
   536                           ;main.c: 54: return (0);
   537                           ;	Return value of _main is never used
   538                           
   539                           
   540                           	psect	text1
   541  05D7                     __ptext1:	
   542 ;; *************** function _UART_Printf *****************
   543 ;; Defined at:
   544 ;;		line 397 in file "../00-libfiles/uart.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;  argList         1    wreg     PTR const unsigned char 
   547 ;;		 -> STR_1(32), 
   548 ;; Auto vars:     Size  Location     Type
   549 ;;  argList         1   47[BANK0 ] PTR const unsigned char 
   550 ;;		 -> STR_1(32), 
   551 ;;  var_num_u32     4   54[BANK0 ] unsigned long 
   552 ;;  var_num_s32     4   48[BANK0 ] long 
   553 ;;  var_floatNum    3   43[BANK0 ] long 
   554 ;;  var_num_u16     2   58[BANK0 ] unsigned int 
   555 ;;  var_num_s16     2   52[BANK0 ] int 
   556 ;;  argp            1   63[BANK0 ] PTR void [1]
   557 ;;		 -> ?_UART_Printf(1), 
   558 ;;  var_numOfDig    1   62[BANK0 ] unsigned char 
   559 ;;  ch              1   61[BANK0 ] unsigned char 
   560 ;;  ptr             1   60[BANK0 ] PTR const unsigned char 
   561 ;;		 -> STR_1(32), 
   562 ;;  str             1   46[BANK0 ] PTR unsigned char 
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   572 ;;      Params:         0       6       0       0       0
   573 ;;      Locals:         0      21       0       0       0
   574 ;;      Temps:          0       2       0       0       0
   575 ;;      Totals:         0      29       0       0       0
   576 ;;Total ram usage:       29 bytes
   577 ;; Hardware stack levels used:    1
   578 ;; Hardware stack levels required when called:    2
   579 ;; This function calls:
   580 ;;		_UART_TxChar
   581 ;;		_UART_TxNumber
   582 ;;		_UART_TxString
   583 ;;		___bmul
   584 ;; This function is called by:
   585 ;;		_main
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           
   590                           ;psect for function _UART_Printf
   591  05D7                     _UART_Printf:	
   592                           
   593                           ;incstack = 0
   594                           ; Regs used in _UART_Printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   595                           ;UART_Printf@argList stored from wreg
   596  05D7  1283               	bcf	3,5	;RP0=0, select bank0
   597  05D8  1303               	bcf	3,6	;RP1=0, select bank0
   598  05D9  00CF               	movwf	UART_Printf@argList
   599                           
   600                           ;uart.c: 399: const char *ptr;
   601                           ;uart.c: 400: double var_floatNum_f32;
   602                           ;uart.c: 401: va_list argp;
   603                           ;uart.c: 402: sint16_t var_num_s16;
   604                           ;uart.c: 403: sint32_t var_num_s32;
   605                           ;uart.c: 404: uint16_t var_num_u16;
   606                           ;uart.c: 405: uint32_t var_num_u32;
   607                           ;uart.c: 406: char *str;
   608                           ;uart.c: 407: char ch;
   609                           ;uart.c: 408: uint8_t var_numOfDigitsToTransmit_u8;
   610                           ;uart.c: 410: *argp = __va_start();
   611  05DA  3043               	movlw	(low (?_UART_Printf| 0))& (0+255)
   612  05DB  00C9               	movwf	??_UART_Printf
   613  05DC  0849               	movf	??_UART_Printf,w
   614  05DD  00DF               	movwf	UART_Printf@argp
   615                           
   616                           ;uart.c: 413: for(ptr = argList; *ptr != '\0'; ptr++)
   617  05DE  084F               	movf	UART_Printf@argList,w
   618  05DF  00C9               	movwf	??_UART_Printf
   619  05E0  0849               	movf	??_UART_Printf,w
   620  05E1  00DC               	movwf	UART_Printf@ptr
   621  05E2                     l1126:	
   622  05E2  085C               	movf	UART_Printf@ptr,w
   623  05E3  0084               	movwf	4
   624  05E4  120A  118A  2003  120A  118A  	fcall	stringdir
   625  05E9  3A00               	xorlw	0
   626  05EA  1903               	btfsc	3,2
   627  05EB  0008               	return
   628                           
   629                           ;uart.c: 414: {
   630                           ;uart.c: 416: ch= *ptr;
   631  05EC  085C               	movf	UART_Printf@ptr,w
   632  05ED  0084               	movwf	4
   633  05EE  120A  118A  2003  120A  118A  	fcall	stringdir
   634  05F3  00C9               	movwf	??_UART_Printf
   635  05F4  0849               	movf	??_UART_Printf,w
   636  05F5  00DD               	movwf	UART_Printf@ch
   637                           
   638                           ;uart.c: 417: if(ch == '%')
   639  05F6  3025               	movlw	37
   640  05F7  065D               	xorwf	UART_Printf@ch,w
   641  05F8  1D03               	btfss	3,2
   642  05F9  2FEF               	goto	l1122
   643                           
   644                           ;uart.c: 418: {
   645                           ;uart.c: 419: ptr++;
   646  05FA  3001               	movlw	1
   647  05FB  00C9               	movwf	??_UART_Printf
   648  05FC  0849               	movf	??_UART_Printf,w
   649  05FD  07DC               	addwf	UART_Printf@ptr,f
   650                           
   651                           ;uart.c: 420: ch = *ptr;
   652  05FE  085C               	movf	UART_Printf@ptr,w
   653  05FF  0084               	movwf	4
   654  0600  120A  118A  2003  120A  118A  	fcall	stringdir
   655  0605  00C9               	movwf	??_UART_Printf
   656  0606  0849               	movf	??_UART_Printf,w
   657  0607  00DD               	movwf	UART_Printf@ch
   658                           
   659                           ;uart.c: 421: if((ch>=0x30) && (ch<=0x39))
   660  0608  3030               	movlw	48
   661  0609  025D               	subwf	UART_Printf@ch,w
   662  060A  1C03               	skipc
   663  060B  2E39               	goto	l1030
   664  060C  303A               	movlw	58
   665  060D  025D               	subwf	UART_Printf@ch,w
   666  060E  1803               	skipnc
   667  060F  2E39               	goto	l1030
   668                           
   669                           ;uart.c: 422: {
   670                           ;uart.c: 423: var_numOfDigitsToTransmit_u8 = 0;
   671  0610  01DE               	clrf	UART_Printf@var_numOfDigitsToTransmit_u8
   672  0611                     l1026:	
   673                           ;uart.c: 424: while((ch>=0x30) && (ch<=0x39))
   674                           
   675  0611  3030               	movlw	48
   676  0612  025D               	subwf	UART_Printf@ch,w
   677  0613  1C03               	skipc
   678  0614  2FBD               	goto	l1120
   679  0615  303A               	movlw	58
   680  0616  025D               	subwf	UART_Printf@ch,w
   681  0617  1803               	btfsc	3,0
   682  0618  2FBD               	goto	l1120
   683                           
   684                           ;uart.c: 425: {
   685                           ;uart.c: 426: var_numOfDigitsToTransmit_u8 = (var_numOfDigitsToTransmit_u8 * 10) + (ch-0
      +                          x30);
   686  0619  300A               	movlw	10
   687  061A  00C9               	movwf	??_UART_Printf
   688  061B  0849               	movf	??_UART_Printf,w
   689  061C  00A0               	movwf	___bmul@multiplicand
   690  061D  085E               	movf	UART_Printf@var_numOfDigitsToTransmit_u8,w
   691  061E  120A  118A  2366  120A  118A  	fcall	___bmul
   692  0623  1283               	bcf	3,5	;RP0=0, select bank0
   693  0624  1303               	bcf	3,6	;RP1=0, select bank0
   694  0625  075D               	addwf	UART_Printf@ch,w
   695  0626  3ED0               	addlw	208
   696  0627  00CA               	movwf	??_UART_Printf+1
   697  0628  084A               	movf	??_UART_Printf+1,w
   698  0629  00DE               	movwf	UART_Printf@var_numOfDigitsToTransmit_u8
   699                           
   700                           ;uart.c: 427: ptr++;
   701  062A  3001               	movlw	1
   702  062B  00C9               	movwf	??_UART_Printf
   703  062C  0849               	movf	??_UART_Printf,w
   704  062D  07DC               	addwf	UART_Printf@ptr,f
   705                           
   706                           ;uart.c: 428: ch = *ptr;
   707  062E  085C               	movf	UART_Printf@ptr,w
   708  062F  0084               	movwf	4
   709  0630  120A  118A  2003  120A  118A  	fcall	stringdir
   710  0635  00C9               	movwf	??_UART_Printf
   711  0636  0849               	movf	??_UART_Printf,w
   712  0637  00DD               	movwf	UART_Printf@ch
   713  0638  2E11               	goto	l1026
   714  0639                     l1030:	
   715                           ;uart.c: 429: }
   716                           ;uart.c: 430: }
   717                           
   718                           
   719                           ;uart.c: 431: else
   720                           ;uart.c: 432: {
   721                           ;uart.c: 433: var_numOfDigitsToTransmit_u8 = 0xffu;
   722  0639  30FF               	movlw	255
   723  063A  00C9               	movwf	??_UART_Printf
   724  063B  0849               	movf	??_UART_Printf,w
   725  063C  00DE               	movwf	UART_Printf@var_numOfDigitsToTransmit_u8
   726                           
   727                           ;uart.c: 434: }
   728                           ;uart.c: 437: switch(ch)
   729  063D  2FBD               	goto	l1120
   730  063E                     l1032:	
   731                           ;uart.c: 438: {
   732                           ;uart.c: 439: case 'C':
   733                           
   734                           
   735                           ;uart.c: 440: case 'c':
   736                           ;uart.c: 441: ch = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
   737  063E  085F               	movf	UART_Printf@argp,w
   738  063F  0084               	movwf	4
   739  0640  1383               	bcf	3,7	;select IRP bank0
   740  0641  0800               	movf	0,w
   741  0642  00C9               	movwf	??_UART_Printf
   742  0643  0849               	movf	??_UART_Printf,w
   743  0644  00DD               	movwf	UART_Printf@ch
   744  0645  3002               	movlw	2
   745  0646  00C9               	movwf	??_UART_Printf
   746  0647  0849               	movf	??_UART_Printf,w
   747  0648  07DF               	addwf	UART_Printf@argp,f
   748  0649  2FEF               	goto	l1122
   749  064A                     l1038:	
   750                           ;uart.c: 445: case 'd':
   751                           
   752                           ;uart.c: 443: break;
   753                           
   754                           ;uart.c: 442: UART_TxChar(ch);
   755                           
   756                           
   757                           ;uart.c: 446: var_num_s16 = (*(sint16_t *)__va_arg((*(sint16_t **)argp), (sint16_t)0));
   758  064A  1283               	bcf	3,5	;RP0=0, select bank0
   759  064B  1303               	bcf	3,6	;RP1=0, select bank0
   760  064C  085F               	movf	UART_Printf@argp,w
   761  064D  0084               	movwf	4
   762  064E  1383               	bcf	3,7	;select IRP bank0
   763  064F  0800               	movf	0,w
   764  0650  00D4               	movwf	UART_Printf@var_num_s16
   765  0651  0A84               	incf	4,f
   766  0652  0800               	movf	0,w
   767  0653  00D5               	movwf	UART_Printf@var_num_s16+1
   768  0654  3002               	movlw	2
   769  0655  00C9               	movwf	??_UART_Printf
   770  0656  0849               	movf	??_UART_Printf,w
   771  0657  07DF               	addwf	UART_Printf@argp,f
   772                           
   773                           ;uart.c: 448: if(var_num_s16<0)
   774  0658  1FD5               	btfss	UART_Printf@var_num_s16+1,7
   775  0659  2E65               	goto	l1048
   776                           
   777                           ;uart.c: 449: {
   778                           ;uart.c: 450: var_num_s16 = -var_num_s16;
   779  065A  09D4               	comf	UART_Printf@var_num_s16,f
   780  065B  09D5               	comf	UART_Printf@var_num_s16+1,f
   781  065C  0AD4               	incf	UART_Printf@var_num_s16,f
   782  065D  1903               	skipnz
   783  065E  0AD5               	incf	UART_Printf@var_num_s16+1,f
   784                           
   785                           ;uart.c: 451: UART_TxChar('-');
   786  065F  302D               	movlw	45
   787  0660  120A  118A  2352  120A  118A  	fcall	_UART_TxChar
   788  0665                     l1048:	
   789                           
   790                           ;uart.c: 452: }
   791                           ;uart.c: 453: UART_TxNumber(10u,var_num_s16,var_numOfDigitsToTransmit_u8);
   792  0665  1283               	bcf	3,5	;RP0=0, select bank0
   793  0666  1303               	bcf	3,6	;RP1=0, select bank0
   794  0667  0854               	movf	UART_Printf@var_num_s16,w
   795  0668  00A4               	movwf	UART_TxNumber@var_number_u32
   796  0669  0855               	movf	UART_Printf@var_num_s16+1,w
   797  066A  00A5               	movwf	UART_TxNumber@var_number_u32+1
   798  066B  3000               	movlw	0
   799  066C  1BA5               	btfsc	UART_TxNumber@var_number_u32+1,7
   800  066D  30FF               	movlw	255
   801  066E  00A6               	movwf	UART_TxNumber@var_number_u32+2
   802  066F  00A7               	movwf	UART_TxNumber@var_number_u32+3
   803  0670  085E               	movf	UART_Printf@var_numOfDigitsToTransmit_u8,w
   804  0671  00C9               	movwf	??_UART_Printf
   805  0672  0849               	movf	??_UART_Printf,w
   806  0673  00A8               	movwf	UART_TxNumber@var_numOfDigitsToTransmit_u8
   807  0674  300A               	movlw	10
   808  0675  120A  118A  24D6  120A  118A  	fcall	_UART_TxNumber
   809                           
   810                           ;uart.c: 455: break;
   811  067A  2FF5               	goto	l1124
   812  067B                     l1050:	
   813                           ;uart.c: 457: case 'D':
   814                           
   815                           
   816                           ;uart.c: 458: var_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
   817  067B  1283               	bcf	3,5	;RP0=0, select bank0
   818  067C  1303               	bcf	3,6	;RP1=0, select bank0
   819  067D  085F               	movf	UART_Printf@argp,w
   820  067E  0084               	movwf	4
   821  067F  1383               	bcf	3,7	;select IRP bank0
   822  0680  0800               	movf	0,w
   823  0681  00D0               	movwf	UART_Printf@var_num_s32
   824  0682  0A84               	incf	4,f
   825  0683  0800               	movf	0,w
   826  0684  00D1               	movwf	UART_Printf@var_num_s32+1
   827  0685  0A84               	incf	4,f
   828  0686  0800               	movf	0,w
   829  0687  00D2               	movwf	UART_Printf@var_num_s32+2
   830  0688  0A84               	incf	4,f
   831  0689  0800               	movf	0,w
   832  068A  00D3               	movwf	UART_Printf@var_num_s32+3
   833  068B  3004               	movlw	4
   834  068C  00C9               	movwf	??_UART_Printf
   835  068D  0849               	movf	??_UART_Printf,w
   836  068E  07DF               	addwf	UART_Printf@argp,f
   837                           
   838                           ;uart.c: 460: if(var_num_s32<0)
   839  068F  1FD3               	btfss	UART_Printf@var_num_s32+3,7
   840  0690  2EA2               	goto	l1060
   841                           
   842                           ;uart.c: 461: {
   843                           ;uart.c: 462: var_num_s32 = -var_num_s32;
   844  0691  09D0               	comf	UART_Printf@var_num_s32,f
   845  0692  09D1               	comf	UART_Printf@var_num_s32+1,f
   846  0693  09D2               	comf	UART_Printf@var_num_s32+2,f
   847  0694  09D3               	comf	UART_Printf@var_num_s32+3,f
   848  0695  0AD0               	incf	UART_Printf@var_num_s32,f
   849  0696  1903               	skipnz
   850  0697  0AD1               	incf	UART_Printf@var_num_s32+1,f
   851  0698  1903               	skipnz
   852  0699  0AD2               	incf	UART_Printf@var_num_s32+2,f
   853  069A  1903               	skipnz
   854  069B  0AD3               	incf	UART_Printf@var_num_s32+3,f
   855                           
   856                           ;uart.c: 463: UART_TxChar('-');
   857  069C  302D               	movlw	45
   858  069D  120A  118A  2352  120A  118A  	fcall	_UART_TxChar
   859  06A2                     l1060:	
   860                           
   861                           ;uart.c: 464: }
   862                           ;uart.c: 465: UART_TxNumber(10u,var_num_s32,var_numOfDigitsToTransmit_u8);
   863  06A2  1283               	bcf	3,5	;RP0=0, select bank0
   864  06A3  1303               	bcf	3,6	;RP1=0, select bank0
   865  06A4  0853               	movf	UART_Printf@var_num_s32+3,w
   866  06A5  00A7               	movwf	UART_TxNumber@var_number_u32+3
   867  06A6  0852               	movf	UART_Printf@var_num_s32+2,w
   868  06A7  00A6               	movwf	UART_TxNumber@var_number_u32+2
   869  06A8  0851               	movf	UART_Printf@var_num_s32+1,w
   870  06A9  00A5               	movwf	UART_TxNumber@var_number_u32+1
   871  06AA  0850               	movf	UART_Printf@var_num_s32,w
   872  06AB  00A4               	movwf	UART_TxNumber@var_number_u32
   873  06AC  085E               	movf	UART_Printf@var_numOfDigitsToTransmit_u8,w
   874  06AD  00C9               	movwf	??_UART_Printf
   875  06AE  0849               	movf	??_UART_Printf,w
   876  06AF  00A8               	movwf	UART_TxNumber@var_numOfDigitsToTransmit_u8
   877  06B0  300A               	movlw	10
   878  06B1  120A  118A  24D6  120A  118A  	fcall	_UART_TxNumber
   879                           
   880                           ;uart.c: 467: break;
   881  06B6  2FF5               	goto	l1124
   882  06B7                     l1062:	
   883                           ;uart.c: 469: case 'u':
   884                           
   885                           
   886                           ;uart.c: 470: var_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
   887  06B7  1283               	bcf	3,5	;RP0=0, select bank0
   888  06B8  1303               	bcf	3,6	;RP1=0, select bank0
   889  06B9  085F               	movf	UART_Printf@argp,w
   890  06BA  0084               	movwf	4
   891  06BB  1383               	bcf	3,7	;select IRP bank0
   892  06BC  0800               	movf	0,w
   893  06BD  00DA               	movwf	UART_Printf@var_num_u16
   894  06BE  0A84               	incf	4,f
   895  06BF  0800               	movf	0,w
   896  06C0  00DB               	movwf	UART_Printf@var_num_u16+1
   897  06C1  3002               	movlw	2
   898  06C2  00C9               	movwf	??_UART_Printf
   899  06C3  0849               	movf	??_UART_Printf,w
   900  06C4  07DF               	addwf	UART_Printf@argp,f
   901                           
   902                           ;uart.c: 472: UART_TxNumber(10u,var_num_u16,var_numOfDigitsToTransmit_u8);
   903  06C5  085A               	movf	UART_Printf@var_num_u16,w
   904  06C6  00A4               	movwf	UART_TxNumber@var_number_u32
   905  06C7  085B               	movf	UART_Printf@var_num_u16+1,w
   906  06C8  00A5               	movwf	UART_TxNumber@var_number_u32+1
   907  06C9  01A6               	clrf	UART_TxNumber@var_number_u32+2
   908  06CA  01A7               	clrf	UART_TxNumber@var_number_u32+3
   909  06CB  085E               	movf	UART_Printf@var_numOfDigitsToTransmit_u8,w
   910  06CC  00C9               	movwf	??_UART_Printf
   911  06CD  0849               	movf	??_UART_Printf,w
   912  06CE  00A8               	movwf	UART_TxNumber@var_numOfDigitsToTransmit_u8
   913  06CF  300A               	movlw	10
   914  06D0  120A  118A  24D6  120A  118A  	fcall	_UART_TxNumber
   915                           
   916                           ;uart.c: 474: break;
   917  06D5  2FF5               	goto	l1124
   918  06D6                     l1068:	
   919                           ;uart.c: 476: case 'U':
   920                           
   921                           
   922                           ;uart.c: 477: var_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
   923  06D6  1283               	bcf	3,5	;RP0=0, select bank0
   924  06D7  1303               	bcf	3,6	;RP1=0, select bank0
   925  06D8  085F               	movf	UART_Printf@argp,w
   926  06D9  0084               	movwf	4
   927  06DA  1383               	bcf	3,7	;select IRP bank0
   928  06DB  0800               	movf	0,w
   929  06DC  00D6               	movwf	UART_Printf@var_num_u32
   930  06DD  0A84               	incf	4,f
   931  06DE  0800               	movf	0,w
   932  06DF  00D7               	movwf	UART_Printf@var_num_u32+1
   933  06E0  0A84               	incf	4,f
   934  06E1  0800               	movf	0,w
   935  06E2  00D8               	movwf	UART_Printf@var_num_u32+2
   936  06E3  0A84               	incf	4,f
   937  06E4  0800               	movf	0,w
   938  06E5  00D9               	movwf	UART_Printf@var_num_u32+3
   939  06E6  3004               	movlw	4
   940  06E7  00C9               	movwf	??_UART_Printf
   941  06E8  0849               	movf	??_UART_Printf,w
   942  06E9  07DF               	addwf	UART_Printf@argp,f
   943                           
   944                           ;uart.c: 479: UART_TxNumber(10u,var_num_u32,var_numOfDigitsToTransmit_u8);
   945  06EA  0859               	movf	UART_Printf@var_num_u32+3,w
   946  06EB  00A7               	movwf	UART_TxNumber@var_number_u32+3
   947  06EC  0858               	movf	UART_Printf@var_num_u32+2,w
   948  06ED  00A6               	movwf	UART_TxNumber@var_number_u32+2
   949  06EE  0857               	movf	UART_Printf@var_num_u32+1,w
   950  06EF  00A5               	movwf	UART_TxNumber@var_number_u32+1
   951  06F0  0856               	movf	UART_Printf@var_num_u32,w
   952  06F1  00A4               	movwf	UART_TxNumber@var_number_u32
   953  06F2  085E               	movf	UART_Printf@var_numOfDigitsToTransmit_u8,w
   954  06F3  00C9               	movwf	??_UART_Printf
   955  06F4  0849               	movf	??_UART_Printf,w
   956  06F5  00A8               	movwf	UART_TxNumber@var_numOfDigitsToTransmit_u8
   957  06F6  300A               	movlw	10
   958  06F7  120A  118A  24D6  120A  118A  	fcall	_UART_TxNumber
   959                           
   960                           ;uart.c: 481: break;
   961  06FC  2FF5               	goto	l1124
   962  06FD                     l1074:	
   963                           ;uart.c: 483: case 'x':
   964                           
   965                           
   966                           ;uart.c: 484: var_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
   967  06FD  1283               	bcf	3,5	;RP0=0, select bank0
   968  06FE  1303               	bcf	3,6	;RP1=0, select bank0
   969  06FF  085F               	movf	UART_Printf@argp,w
   970  0700  0084               	movwf	4
   971  0701  1383               	bcf	3,7	;select IRP bank0
   972  0702  0800               	movf	0,w
   973  0703  00DA               	movwf	UART_Printf@var_num_u16
   974  0704  0A84               	incf	4,f
   975  0705  0800               	movf	0,w
   976  0706  00DB               	movwf	UART_Printf@var_num_u16+1
   977  0707  3002               	movlw	2
   978  0708  00C9               	movwf	??_UART_Printf
   979  0709  0849               	movf	??_UART_Printf,w
   980  070A  07DF               	addwf	UART_Printf@argp,f
   981                           
   982                           ;uart.c: 486: UART_TxNumber(16u, var_num_u16,var_numOfDigitsToTransmit_u8);
   983  070B  085A               	movf	UART_Printf@var_num_u16,w
   984  070C  00A4               	movwf	UART_TxNumber@var_number_u32
   985  070D  085B               	movf	UART_Printf@var_num_u16+1,w
   986  070E  00A5               	movwf	UART_TxNumber@var_number_u32+1
   987  070F  01A6               	clrf	UART_TxNumber@var_number_u32+2
   988  0710  01A7               	clrf	UART_TxNumber@var_number_u32+3
   989  0711  085E               	movf	UART_Printf@var_numOfDigitsToTransmit_u8,w
   990  0712  00C9               	movwf	??_UART_Printf
   991  0713  0849               	movf	??_UART_Printf,w
   992  0714  00A8               	movwf	UART_TxNumber@var_numOfDigitsToTransmit_u8
   993  0715  3010               	movlw	16
   994  0716  120A  118A  24D6  120A  118A  	fcall	_UART_TxNumber
   995                           
   996                           ;uart.c: 488: break;
   997  071B  2FF5               	goto	l1124
   998  071C                     l1080:	
   999                           ;uart.c: 490: case 'X':
  1000                           
  1001                           
  1002                           ;uart.c: 491: var_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1003  071C  1283               	bcf	3,5	;RP0=0, select bank0
  1004  071D  1303               	bcf	3,6	;RP1=0, select bank0
  1005  071E  085F               	movf	UART_Printf@argp,w
  1006  071F  0084               	movwf	4
  1007  0720  1383               	bcf	3,7	;select IRP bank0
  1008  0721  0800               	movf	0,w
  1009  0722  00D6               	movwf	UART_Printf@var_num_u32
  1010  0723  0A84               	incf	4,f
  1011  0724  0800               	movf	0,w
  1012  0725  00D7               	movwf	UART_Printf@var_num_u32+1
  1013  0726  0A84               	incf	4,f
  1014  0727  0800               	movf	0,w
  1015  0728  00D8               	movwf	UART_Printf@var_num_u32+2
  1016  0729  0A84               	incf	4,f
  1017  072A  0800               	movf	0,w
  1018  072B  00D9               	movwf	UART_Printf@var_num_u32+3
  1019  072C  3004               	movlw	4
  1020  072D  00C9               	movwf	??_UART_Printf
  1021  072E  0849               	movf	??_UART_Printf,w
  1022  072F  07DF               	addwf	UART_Printf@argp,f
  1023                           
  1024                           ;uart.c: 493: UART_TxNumber(16u, var_num_u32,var_numOfDigitsToTransmit_u8);
  1025  0730  0859               	movf	UART_Printf@var_num_u32+3,w
  1026  0731  00A7               	movwf	UART_TxNumber@var_number_u32+3
  1027  0732  0858               	movf	UART_Printf@var_num_u32+2,w
  1028  0733  00A6               	movwf	UART_TxNumber@var_number_u32+2
  1029  0734  0857               	movf	UART_Printf@var_num_u32+1,w
  1030  0735  00A5               	movwf	UART_TxNumber@var_number_u32+1
  1031  0736  0856               	movf	UART_Printf@var_num_u32,w
  1032  0737  00A4               	movwf	UART_TxNumber@var_number_u32
  1033  0738  085E               	movf	UART_Printf@var_numOfDigitsToTransmit_u8,w
  1034  0739  00C9               	movwf	??_UART_Printf
  1035  073A  0849               	movf	??_UART_Printf,w
  1036  073B  00A8               	movwf	UART_TxNumber@var_numOfDigitsToTransmit_u8
  1037  073C  3010               	movlw	16
  1038  073D  120A  118A  24D6  120A  118A  	fcall	_UART_TxNumber
  1039                           
  1040                           ;uart.c: 495: break;
  1041  0742  2FF5               	goto	l1124
  1042  0743                     l1086:	
  1043                           ;uart.c: 498: case 'b':
  1044                           
  1045                           
  1046                           ;uart.c: 499: var_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1047  0743  1283               	bcf	3,5	;RP0=0, select bank0
  1048  0744  1303               	bcf	3,6	;RP1=0, select bank0
  1049  0745  085F               	movf	UART_Printf@argp,w
  1050  0746  0084               	movwf	4
  1051  0747  1383               	bcf	3,7	;select IRP bank0
  1052  0748  0800               	movf	0,w
  1053  0749  00DA               	movwf	UART_Printf@var_num_u16
  1054  074A  0A84               	incf	4,f
  1055  074B  0800               	movf	0,w
  1056  074C  00DB               	movwf	UART_Printf@var_num_u16+1
  1057  074D  3002               	movlw	2
  1058  074E  00C9               	movwf	??_UART_Printf
  1059  074F  0849               	movf	??_UART_Printf,w
  1060  0750  07DF               	addwf	UART_Printf@argp,f
  1061                           
  1062                           ;uart.c: 501: if(var_numOfDigitsToTransmit_u8 == 0xffu)
  1063  0751  0A5E               	incf	UART_Printf@var_numOfDigitsToTransmit_u8,w
  1064  0752  1D03               	btfss	3,2
  1065  0753  2F58               	goto	l1094
  1066                           
  1067                           ;uart.c: 502: var_numOfDigitsToTransmit_u8 = 16;
  1068  0754  3010               	movlw	16
  1069  0755  00C9               	movwf	??_UART_Printf
  1070  0756  0849               	movf	??_UART_Printf,w
  1071  0757  00DE               	movwf	UART_Printf@var_numOfDigitsToTransmit_u8
  1072  0758                     l1094:	
  1073                           
  1074                           ;uart.c: 503: UART_TxNumber(2u, var_num_u16,var_numOfDigitsToTransmit_u8);
  1075  0758  085A               	movf	UART_Printf@var_num_u16,w
  1076  0759  00A4               	movwf	UART_TxNumber@var_number_u32
  1077  075A  085B               	movf	UART_Printf@var_num_u16+1,w
  1078  075B  00A5               	movwf	UART_TxNumber@var_number_u32+1
  1079  075C  01A6               	clrf	UART_TxNumber@var_number_u32+2
  1080  075D  01A7               	clrf	UART_TxNumber@var_number_u32+3
  1081  075E  085E               	movf	UART_Printf@var_numOfDigitsToTransmit_u8,w
  1082  075F  00C9               	movwf	??_UART_Printf
  1083  0760  0849               	movf	??_UART_Printf,w
  1084  0761  00A8               	movwf	UART_TxNumber@var_numOfDigitsToTransmit_u8
  1085  0762  3002               	movlw	2
  1086  0763  120A  118A  24D6  120A  118A  	fcall	_UART_TxNumber
  1087                           
  1088                           ;uart.c: 505: break;
  1089  0768  2FF5               	goto	l1124
  1090  0769                     l1096:	
  1091                           ;uart.c: 507: case 'B':
  1092                           
  1093                           
  1094                           ;uart.c: 508: var_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1095  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1096  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1097  076B  085F               	movf	UART_Printf@argp,w
  1098  076C  0084               	movwf	4
  1099  076D  1383               	bcf	3,7	;select IRP bank0
  1100  076E  0800               	movf	0,w
  1101  076F  00D6               	movwf	UART_Printf@var_num_u32
  1102  0770  0A84               	incf	4,f
  1103  0771  0800               	movf	0,w
  1104  0772  00D7               	movwf	UART_Printf@var_num_u32+1
  1105  0773  0A84               	incf	4,f
  1106  0774  0800               	movf	0,w
  1107  0775  00D8               	movwf	UART_Printf@var_num_u32+2
  1108  0776  0A84               	incf	4,f
  1109  0777  0800               	movf	0,w
  1110  0778  00D9               	movwf	UART_Printf@var_num_u32+3
  1111  0779  3004               	movlw	4
  1112  077A  00C9               	movwf	??_UART_Printf
  1113  077B  0849               	movf	??_UART_Printf,w
  1114  077C  07DF               	addwf	UART_Printf@argp,f
  1115                           
  1116                           ;uart.c: 510: if(var_numOfDigitsToTransmit_u8 == 0xffu)
  1117  077D  0A5E               	incf	UART_Printf@var_numOfDigitsToTransmit_u8,w
  1118  077E  1D03               	btfss	3,2
  1119  077F  2F84               	goto	l1104
  1120                           
  1121                           ;uart.c: 511: var_numOfDigitsToTransmit_u8 = 16;
  1122  0780  3010               	movlw	16
  1123  0781  00C9               	movwf	??_UART_Printf
  1124  0782  0849               	movf	??_UART_Printf,w
  1125  0783  00DE               	movwf	UART_Printf@var_numOfDigitsToTransmit_u8
  1126  0784                     l1104:	
  1127                           
  1128                           ;uart.c: 512: UART_TxNumber(2u, var_num_u32,var_numOfDigitsToTransmit_u8);
  1129  0784  0859               	movf	UART_Printf@var_num_u32+3,w
  1130  0785  00A7               	movwf	UART_TxNumber@var_number_u32+3
  1131  0786  0858               	movf	UART_Printf@var_num_u32+2,w
  1132  0787  00A6               	movwf	UART_TxNumber@var_number_u32+2
  1133  0788  0857               	movf	UART_Printf@var_num_u32+1,w
  1134  0789  00A5               	movwf	UART_TxNumber@var_number_u32+1
  1135  078A  0856               	movf	UART_Printf@var_num_u32,w
  1136  078B  00A4               	movwf	UART_TxNumber@var_number_u32
  1137  078C  085E               	movf	UART_Printf@var_numOfDigitsToTransmit_u8,w
  1138  078D  00C9               	movwf	??_UART_Printf
  1139  078E  0849               	movf	??_UART_Printf,w
  1140  078F  00A8               	movwf	UART_TxNumber@var_numOfDigitsToTransmit_u8
  1141  0790  3002               	movlw	2
  1142  0791  120A  118A  24D6  120A  118A  	fcall	_UART_TxNumber
  1143                           
  1144                           ;uart.c: 514: break;
  1145  0796  2FF5               	goto	l1124
  1146  0797                     l1106:	
  1147                           ;uart.c: 517: case 'F':
  1148                           
  1149                           
  1150                           ;uart.c: 518: case 'f':
  1151                           ;uart.c: 519: var_floatNum_f32 = (*(double *)__va_arg((*(double **)argp), (double)0));
  1152  0797  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0798  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0799  085F               	movf	UART_Printf@argp,w
  1155  079A  0084               	movwf	4
  1156  079B  1383               	bcf	3,7	;select IRP bank0
  1157  079C  0800               	movf	0,w
  1158  079D  00CB               	movwf	UART_Printf@var_floatNum_f32
  1159  079E  0A84               	incf	4,f
  1160  079F  0800               	movf	0,w
  1161  07A0  00CC               	movwf	UART_Printf@var_floatNum_f32+1
  1162  07A1  0A84               	incf	4,f
  1163  07A2  0800               	movf	0,w
  1164  07A3  00CD               	movwf	UART_Printf@var_floatNum_f32+2
  1165  07A4  3003               	movlw	3
  1166  07A5  00C9               	movwf	??_UART_Printf
  1167  07A6  0849               	movf	??_UART_Printf,w
  1168  07A7  07DF               	addwf	UART_Printf@argp,f
  1169                           
  1170                           ;uart.c: 523: break;
  1171  07A8  2FF5               	goto	l1124
  1172  07A9                     l1110:	
  1173                           ;uart.c: 526: case 'S':
  1174                           
  1175                           
  1176                           ;uart.c: 527: case 's':
  1177                           ;uart.c: 528: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  1178  07A9  085F               	movf	UART_Printf@argp,w
  1179  07AA  0084               	movwf	4
  1180  07AB  1383               	bcf	3,7	;select IRP bank0
  1181  07AC  0800               	movf	0,w
  1182  07AD  00C9               	movwf	??_UART_Printf
  1183  07AE  0849               	movf	??_UART_Printf,w
  1184  07AF  00CE               	movwf	UART_Printf@str
  1185  07B0  3001               	movlw	1
  1186  07B1  00C9               	movwf	??_UART_Printf
  1187  07B2  0849               	movf	??_UART_Printf,w
  1188  07B3  07DF               	addwf	UART_Printf@argp,f
  1189                           
  1190                           ;uart.c: 529: UART_TxString(str);
  1191  07B4  084E               	movf	UART_Printf@str,w
  1192  07B5  120A  118A  238D  120A  118A  	fcall	_UART_TxString
  1193                           
  1194                           ;uart.c: 530: break;
  1195  07BA  2FF5               	goto	l1124
  1196  07BB                     l1116:	
  1197                           ;uart.c: 532: case '%':
  1198                           
  1199                           
  1200                           ;uart.c: 533: UART_TxChar('%');
  1201  07BB  3025               	movlw	37
  1202  07BC  2FF0               	goto	L1
  1203  07BD                     l1120:	
  1204                           ;uart.c: 535: }
  1205                           
  1206                           ;uart.c: 534: break;
  1207                           
  1208  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1209  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1210  07BF  085D               	movf	UART_Printf@ch,w
  1211                           
  1212                           ; Switch size 1, requested type "space"
  1213                           ; Number of cases is 15, Range of values is 37 to 120
  1214                           ; switch strategies available:
  1215                           ; Name         Instructions Cycles
  1216                           ; simple_byte           46    24 (average)
  1217                           ; direct_byte          263    11 (fixed)
  1218                           ; jumptable            263     9 (fixed)
  1219                           ;	Chosen strategy is simple_byte
  1220  07C0  3A25               	xorlw	37	; case 37
  1221  07C1  1903               	skipnz
  1222  07C2  2FBB               	goto	l1116
  1223  07C3  3A67               	xorlw	103	; case 66
  1224  07C4  1903               	skipnz
  1225  07C5  2F69               	goto	l1096
  1226  07C6  3A01               	xorlw	1	; case 67
  1227  07C7  1903               	skipnz
  1228  07C8  2E3E               	goto	l1032
  1229  07C9  3A07               	xorlw	7	; case 68
  1230  07CA  1903               	skipnz
  1231  07CB  2E7B               	goto	l1050
  1232  07CC  3A02               	xorlw	2	; case 70
  1233  07CD  1903               	skipnz
  1234  07CE  2F97               	goto	l1106
  1235  07CF  3A15               	xorlw	21	; case 83
  1236  07D0  1903               	skipnz
  1237  07D1  2FA9               	goto	l1110
  1238  07D2  3A06               	xorlw	6	; case 85
  1239  07D3  1903               	skipnz
  1240  07D4  2ED6               	goto	l1068
  1241  07D5  3A0D               	xorlw	13	; case 88
  1242  07D6  1903               	skipnz
  1243  07D7  2F1C               	goto	l1080
  1244  07D8  3A3A               	xorlw	58	; case 98
  1245  07D9  1903               	skipnz
  1246  07DA  2F43               	goto	l1086
  1247  07DB  3A01               	xorlw	1	; case 99
  1248  07DC  1903               	skipnz
  1249  07DD  2E3E               	goto	l1032
  1250  07DE  3A07               	xorlw	7	; case 100
  1251  07DF  1903               	skipnz
  1252  07E0  2E4A               	goto	l1038
  1253  07E1  3A02               	xorlw	2	; case 102
  1254  07E2  1903               	skipnz
  1255  07E3  2F97               	goto	l1106
  1256  07E4  3A15               	xorlw	21	; case 115
  1257  07E5  1903               	skipnz
  1258  07E6  2FA9               	goto	l1110
  1259  07E7  3A06               	xorlw	6	; case 117
  1260  07E8  1903               	skipnz
  1261  07E9  2EB7               	goto	l1062
  1262  07EA  3A0D               	xorlw	13	; case 120
  1263  07EB  1903               	skipnz
  1264  07EC  2EFD               	goto	l1074
  1265  07ED  2FF5               	goto	l1124
  1266                           
  1267                           ;uart.c: 536: }
  1268  07EE  2FF5               	goto	l1124
  1269  07EF                     l1122:	
  1270                           
  1271                           ;uart.c: 537: else
  1272                           ;uart.c: 538: {
  1273                           ;uart.c: 540: UART_TxChar(ch);
  1274  07EF  085D               	movf	UART_Printf@ch,w
  1275  07F0                     L1:	
  1276  07F0  120A  118A  2352  120A  118A  	fcall	_UART_TxChar
  1277  07F5                     l1124:	
  1278  07F5  3001               	movlw	1
  1279  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  1280  07F7  1303               	bcf	3,6	;RP1=0, select bank0
  1281  07F8  00C9               	movwf	??_UART_Printf
  1282  07F9  0849               	movf	??_UART_Printf,w
  1283  07FA  07DC               	addwf	UART_Printf@ptr,f
  1284  07FB  2DE2               	goto	l1126
  1285  07FC                     __end_of_UART_Printf:	
  1286                           
  1287                           	psect	text2
  1288  038D                     __ptext2:	
  1289 ;; *************** function _UART_TxString *****************
  1290 ;; Defined at:
  1291 ;;		line 165 in file "../00-libfiles/uart.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  ptr_stringPo    1    wreg     PTR const unsigned char 
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;  ptr_stringPo    1    2[COMMON] PTR const unsigned char 
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      void 
  1298 ;; Registers used:
  1299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1305 ;;      Params:         0       0       0       0       0
  1306 ;;      Locals:         1       0       0       0       0
  1307 ;;      Temps:          1       0       0       0       0
  1308 ;;      Totals:         2       0       0       0       0
  1309 ;;Total ram usage:        2 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:    1
  1312 ;; This function calls:
  1313 ;;		_UART_TxChar
  1314 ;; This function is called by:
  1315 ;;		_UART_Printf
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           
  1320                           ;psect for function _UART_TxString
  1321  038D                     _UART_TxString:	
  1322                           
  1323                           ;incstack = 0
  1324                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1325                           ;UART_TxString@ptr_stringPointer_u8 stored from wreg
  1326  038D  00F2               	movwf	UART_TxString@ptr_stringPointer_u8
  1327  038E                     l934:	
  1328                           ;uart.c: 167: while(*ptr_stringPointer_u8)
  1329                           
  1330  038E  0872               	movf	UART_TxString@ptr_stringPointer_u8,w
  1331  038F  0084               	movwf	4
  1332  0390  1383               	bcf	3,7	;select IRP bank0
  1333  0391  0800               	movf	0,w
  1334  0392  1903               	btfsc	3,2
  1335  0393  0008               	return
  1336                           
  1337                           ;uart.c: 168: UART_TxChar(*ptr_stringPointer_u8++);
  1338  0394  0872               	movf	UART_TxString@ptr_stringPointer_u8,w
  1339  0395  0084               	movwf	4
  1340  0396  1383               	bcf	3,7	;select IRP bank0
  1341  0397  0800               	movf	0,w
  1342  0398  120A  118A  2352  120A  118A  	fcall	_UART_TxChar
  1343  039D  3001               	movlw	1
  1344  039E  00F1               	movwf	??_UART_TxString
  1345  039F  0871               	movf	??_UART_TxString,w
  1346  03A0  07F2               	addwf	UART_TxString@ptr_stringPointer_u8,f
  1347  03A1  2B8E               	goto	l934
  1348  03A2                     __end_of_UART_TxString:	
  1349                           
  1350                           	psect	text3
  1351  04D6                     __ptext3:	
  1352 ;; *************** function _UART_TxNumber *****************
  1353 ;; Defined at:
  1354 ;;		line 247 in file "../00-libfiles/uart.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  var_numericS    1    wreg     unsigned char 
  1357 ;;  var_number_u    4    4[BANK0 ] unsigned long 
  1358 ;;  var_numOfDig    1    8[BANK0 ] unsigned char 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  var_numericS    1   33[BANK0 ] unsigned char 
  1361 ;;  a              10   21[BANK0 ] unsigned char [10]
  1362 ;;  i               1   34[BANK0 ] unsigned char 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1372 ;;      Params:         0       5       0       0       0
  1373 ;;      Locals:         0      14       0       0       0
  1374 ;;      Temps:          0      12       0       0       0
  1375 ;;      Totals:         0      31       0       0       0
  1376 ;;Total ram usage:       31 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    1
  1379 ;; This function calls:
  1380 ;;		_UART_TxChar
  1381 ;;		___bmul
  1382 ;;		___lldiv
  1383 ;; This function is called by:
  1384 ;;		_UART_Printf
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           
  1389                           ;psect for function _UART_TxNumber
  1390  04D6                     _UART_TxNumber:	
  1391                           
  1392                           ;incstack = 0
  1393                           ; Regs used in _UART_TxNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1394                           ;UART_TxNumber@var_numericSystem_u8 stored from wreg
  1395  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  1396  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  1397  04D8  00C1               	movwf	UART_TxNumber@var_numericSystem_u8
  1398                           
  1399                           ;uart.c: 249: uint8_t i=0,a[10];
  1400  04D9  01C2               	clrf	UART_TxNumber@i
  1401                           
  1402                           ;uart.c: 251: if(2u == var_numericSystem_u8)
  1403  04DA  3002               	movlw	2
  1404  04DB  0641               	xorwf	UART_TxNumber@var_numericSystem_u8,w
  1405  04DC  1903               	btfsc	3,2
  1406  04DD  2D1D               	goto	l948
  1407  04DE  2D21               	goto	l950
  1408  04DF                     l942:	
  1409                           ;uart.c: 252: {
  1410                           ;uart.c: 253: while(var_numOfDigitsToTransmit_u8!=0)
  1411                           
  1412                           
  1413                           ;uart.c: 254: {
  1414                           ;uart.c: 257: i = (uint8_t)(((var_number_u32)&((1<<((var_numOfDigitsToTransmit_u8-1)))))
      +                          !=0u);
  1415  04DF  0824               	movf	UART_TxNumber@var_number_u32,w
  1416  04E0  00A9               	movwf	??_UART_TxNumber
  1417  04E1  0825               	movf	UART_TxNumber@var_number_u32+1,w
  1418  04E2  00AA               	movwf	??_UART_TxNumber+1
  1419  04E3  0826               	movf	UART_TxNumber@var_number_u32+2,w
  1420  04E4  00AB               	movwf	??_UART_TxNumber+2
  1421  04E5  0827               	movf	UART_TxNumber@var_number_u32+3,w
  1422  04E6  00AC               	movwf	??_UART_TxNumber+3
  1423  04E7  0828               	movf	UART_TxNumber@var_numOfDigitsToTransmit_u8,w
  1424  04E8  3EFF               	addlw	-1
  1425  04E9  00AD               	movwf	??_UART_TxNumber+4
  1426  04EA  0AAD               	incf	??_UART_TxNumber+4,f
  1427  04EB  3001               	movlw	1
  1428  04EC  00AE               	movwf	??_UART_TxNumber+5
  1429  04ED  3000               	movlw	0
  1430  04EE  00AF               	movwf	??_UART_TxNumber+6
  1431  04EF  2CF3               	goto	u604
  1432  04F0                     u605:	
  1433  04F0  1003               	clrc
  1434  04F1  0DAE               	rlf	??_UART_TxNumber+5,f
  1435  04F2  0DAF               	rlf	??_UART_TxNumber+6,f
  1436  04F3                     u604:	
  1437  04F3  0BAD               	decfsz	??_UART_TxNumber+4,f
  1438  04F4  2CF0               	goto	u605
  1439  04F5  082E               	movf	??_UART_TxNumber+5,w
  1440  04F6  00B0               	movwf	??_UART_TxNumber+7
  1441  04F7  082F               	movf	??_UART_TxNumber+6,w
  1442  04F8  00B1               	movwf	??_UART_TxNumber+8
  1443  04F9  3000               	movlw	0
  1444  04FA  1BB1               	btfsc	??_UART_TxNumber+8,7
  1445  04FB  30FF               	movlw	255
  1446  04FC  00B2               	movwf	??_UART_TxNumber+9
  1447  04FD  00B3               	movwf	??_UART_TxNumber+10
  1448  04FE  0830               	movf	??_UART_TxNumber+7,w
  1449  04FF  05A9               	andwf	??_UART_TxNumber,f
  1450  0500  0831               	movf	??_UART_TxNumber+8,w
  1451  0501  05AA               	andwf	??_UART_TxNumber+1,f
  1452  0502  0832               	movf	??_UART_TxNumber+9,w
  1453  0503  05AB               	andwf	??_UART_TxNumber+2,f
  1454  0504  0833               	movf	??_UART_TxNumber+10,w
  1455  0505  05AC               	andwf	??_UART_TxNumber+3,f
  1456  0506  082C               	movf	??_UART_TxNumber+3,w
  1457  0507  042B               	iorwf	??_UART_TxNumber+2,w
  1458  0508  042A               	iorwf	??_UART_TxNumber+1,w
  1459  0509  0429               	iorwf	??_UART_TxNumber,w
  1460  050A  1903               	btfsc	3,2
  1461  050B  2D0E               	goto	u610
  1462  050C  3001               	movlw	1
  1463  050D  2D0F               	goto	u620
  1464  050E                     u610:	
  1465  050E  3000               	movlw	0
  1466  050F                     u620:	
  1467  050F  00B4               	movwf	??_UART_TxNumber+11
  1468  0510  0834               	movf	??_UART_TxNumber+11,w
  1469  0511  00C2               	movwf	UART_TxNumber@i
  1470                           
  1471                           ;uart.c: 258: UART_TxChar(((i)+0x30));
  1472  0512  0842               	movf	UART_TxNumber@i,w
  1473  0513  3E30               	addlw	48
  1474  0514  120A  118A  2352  120A  118A  	fcall	_UART_TxChar
  1475                           
  1476                           ;uart.c: 259: var_numOfDigitsToTransmit_u8--;
  1477  0519  3001               	movlw	1
  1478  051A  1283               	bcf	3,5	;RP0=0, select bank0
  1479  051B  1303               	bcf	3,6	;RP1=0, select bank0
  1480  051C  02A8               	subwf	UART_TxNumber@var_numOfDigitsToTransmit_u8,f
  1481  051D                     l948:	
  1482  051D  0828               	movf	UART_TxNumber@var_numOfDigitsToTransmit_u8,w
  1483  051E  1903               	btfsc	3,2
  1484  051F  0008               	return
  1485  0520  2CDF               	goto	l942
  1486  0521                     l950:	
  1487                           ;uart.c: 260: }
  1488                           ;uart.c: 261: }
  1489                           
  1490                           
  1491                           ;uart.c: 262: else if(var_number_u32==0)
  1492  0521  0827               	movf	UART_TxNumber@var_number_u32+3,w
  1493  0522  0426               	iorwf	UART_TxNumber@var_number_u32+2,w
  1494  0523  0425               	iorwf	UART_TxNumber@var_number_u32+1,w
  1495  0524  0424               	iorwf	UART_TxNumber@var_number_u32,w
  1496  0525  1D03               	skipz
  1497  0526  2D3D               	goto	l962
  1498                           
  1499                           ;uart.c: 263: {
  1500                           ;uart.c: 265: for(i=0;((i<var_numOfDigitsToTransmit_u8) && (i<10u)) ;i++)
  1501  0527  01C2               	clrf	UART_TxNumber@i
  1502  0528                     l958:	
  1503  0528  0828               	movf	UART_TxNumber@var_numOfDigitsToTransmit_u8,w
  1504  0529  0242               	subwf	UART_TxNumber@i,w
  1505  052A  1803               	skipnc
  1506  052B  0008               	return
  1507  052C  300A               	movlw	10
  1508  052D  0242               	subwf	UART_TxNumber@i,w
  1509  052E  1803               	btfsc	3,0
  1510  052F  0008               	return
  1511                           
  1512                           ;uart.c: 266: UART_TxChar('0');
  1513  0530  3030               	movlw	48
  1514  0531  120A  118A  2352  120A  118A  	fcall	_UART_TxChar
  1515  0536  3001               	movlw	1
  1516  0537  1283               	bcf	3,5	;RP0=0, select bank0
  1517  0538  1303               	bcf	3,6	;RP1=0, select bank0
  1518  0539  00A9               	movwf	??_UART_TxNumber
  1519  053A  0829               	movf	??_UART_TxNumber,w
  1520  053B  07C2               	addwf	UART_TxNumber@i,f
  1521  053C  2D28               	goto	l958
  1522  053D                     l962:	
  1523                           ;uart.c: 267: }
  1524                           
  1525                           
  1526                           ;uart.c: 268: else
  1527                           ;uart.c: 269: {
  1528                           ;uart.c: 270: for(i=0;i<var_numOfDigitsToTransmit_u8;i++)
  1529  053D  01C2               	clrf	UART_TxNumber@i
  1530  053E                     l980:	
  1531  053E  0828               	movf	UART_TxNumber@var_numOfDigitsToTransmit_u8,w
  1532  053F  0242               	subwf	UART_TxNumber@i,w
  1533  0540  1803               	btfsc	3,0
  1534  0541  2DD3               	goto	l992
  1535                           
  1536                           ;uart.c: 271: {
  1537                           ;uart.c: 274: if(var_number_u32!=0)
  1538  0542  0827               	movf	UART_TxNumber@var_number_u32+3,w
  1539  0543  0426               	iorwf	UART_TxNumber@var_number_u32+2,w
  1540  0544  0425               	iorwf	UART_TxNumber@var_number_u32+1,w
  1541  0545  0424               	iorwf	UART_TxNumber@var_number_u32,w
  1542  0546  1903               	skipnz
  1543  0547  2D9D               	goto	l970
  1544                           
  1545                           ;uart.c: 275: {
  1546                           ;uart.c: 282: a[i]=(uint32_t)(var_number_u32 - (var_numericSystem_u8 * (uint32_t)(var_nu
      +                          mber_u32/var_numericSystem_u8)));
  1547  0548  0841               	movf	UART_TxNumber@var_numericSystem_u8,w
  1548  0549  00A9               	movwf	??_UART_TxNumber
  1549  054A  0829               	movf	??_UART_TxNumber,w
  1550  054B  00A0               	movwf	___bmul@multiplicand
  1551  054C  0827               	movf	UART_TxNumber@var_number_u32+3,w
  1552  054D  00F7               	movwf	___lldiv@dividend+3
  1553  054E  0826               	movf	UART_TxNumber@var_number_u32+2,w
  1554  054F  00F6               	movwf	___lldiv@dividend+2
  1555  0550  0825               	movf	UART_TxNumber@var_number_u32+1,w
  1556  0551  00F5               	movwf	___lldiv@dividend+1
  1557  0552  0824               	movf	UART_TxNumber@var_number_u32,w
  1558  0553  00F4               	movwf	___lldiv@dividend
  1559  0554  0841               	movf	UART_TxNumber@var_numericSystem_u8,w
  1560  0555  00AA               	movwf	??_UART_TxNumber+1
  1561  0556  01AB               	clrf	??_UART_TxNumber+2
  1562  0557  01AC               	clrf	??_UART_TxNumber+3
  1563  0558  01AD               	clrf	??_UART_TxNumber+4
  1564  0559  082D               	movf	??_UART_TxNumber+4,w
  1565  055A  00F3               	movwf	___lldiv@divisor+3
  1566  055B  082C               	movf	??_UART_TxNumber+3,w
  1567  055C  00F2               	movwf	___lldiv@divisor+2
  1568  055D  082B               	movf	??_UART_TxNumber+2,w
  1569  055E  00F1               	movwf	___lldiv@divisor+1
  1570  055F  082A               	movf	??_UART_TxNumber+1,w
  1571  0560  00F0               	movwf	___lldiv@divisor
  1572  0561  120A  118A  23FE  120A  118A  	fcall	___lldiv
  1573  0566  0870               	movf	?___lldiv,w
  1574  0567  120A  118A  2366  120A  118A  	fcall	___bmul
  1575  056C  3AFF               	xorlw	255
  1576  056D  3E01               	addlw	1
  1577  056E  1283               	bcf	3,5	;RP0=0, select bank0
  1578  056F  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0570  0724               	addwf	UART_TxNumber@var_number_u32,w
  1580  0571  00AE               	movwf	??_UART_TxNumber+5
  1581  0572  0842               	movf	UART_TxNumber@i,w
  1582  0573  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1583  0574  0084               	movwf	4
  1584  0575  082E               	movf	??_UART_TxNumber+5,w
  1585  0576  1383               	bcf	3,7	;select IRP bank0
  1586  0577  0080               	movwf	0
  1587                           
  1588                           ;uart.c: 283: var_number_u32=var_number_u32/var_numericSystem_u8;
  1589  0578  0841               	movf	UART_TxNumber@var_numericSystem_u8,w
  1590  0579  00A9               	movwf	??_UART_TxNumber
  1591  057A  01AA               	clrf	??_UART_TxNumber+1
  1592  057B  01AB               	clrf	??_UART_TxNumber+2
  1593  057C  01AC               	clrf	??_UART_TxNumber+3
  1594  057D  082C               	movf	??_UART_TxNumber+3,w
  1595  057E  00F3               	movwf	___lldiv@divisor+3
  1596  057F  082B               	movf	??_UART_TxNumber+2,w
  1597  0580  00F2               	movwf	___lldiv@divisor+2
  1598  0581  082A               	movf	??_UART_TxNumber+1,w
  1599  0582  00F1               	movwf	___lldiv@divisor+1
  1600  0583  0829               	movf	??_UART_TxNumber,w
  1601  0584  00F0               	movwf	___lldiv@divisor
  1602  0585  0827               	movf	UART_TxNumber@var_number_u32+3,w
  1603  0586  00F7               	movwf	___lldiv@dividend+3
  1604  0587  0826               	movf	UART_TxNumber@var_number_u32+2,w
  1605  0588  00F6               	movwf	___lldiv@dividend+2
  1606  0589  0825               	movf	UART_TxNumber@var_number_u32+1,w
  1607  058A  00F5               	movwf	___lldiv@dividend+1
  1608  058B  0824               	movf	UART_TxNumber@var_number_u32,w
  1609  058C  00F4               	movwf	___lldiv@dividend
  1610  058D  120A  118A  23FE  120A  118A  	fcall	___lldiv
  1611  0592  0873               	movf	?___lldiv+3,w
  1612  0593  1283               	bcf	3,5	;RP0=0, select bank0
  1613  0594  1303               	bcf	3,6	;RP1=0, select bank0
  1614  0595  00A7               	movwf	UART_TxNumber@var_number_u32+3
  1615  0596  0872               	movf	?___lldiv+2,w
  1616  0597  00A6               	movwf	UART_TxNumber@var_number_u32+2
  1617  0598  0871               	movf	?___lldiv+1,w
  1618  0599  00A5               	movwf	UART_TxNumber@var_number_u32+1
  1619  059A  0870               	movf	?___lldiv,w
  1620  059B  00A4               	movwf	UART_TxNumber@var_number_u32
  1621                           
  1622                           ;uart.c: 284: }
  1623  059C  2DA9               	goto	l978
  1624  059D                     l970:	
  1625                           
  1626                           ;uart.c: 285: else if( (var_numOfDigitsToTransmit_u8 == 0xffu) ||
  1627                           ;uart.c: 286: (var_numOfDigitsToTransmit_u8 > 10u))
  1628  059D  0A28               	incf	UART_TxNumber@var_numOfDigitsToTransmit_u8,w
  1629  059E  1903               	btfsc	3,2
  1630  059F  2DD3               	goto	l992
  1631  05A0  300B               	movlw	11
  1632  05A1  0228               	subwf	UART_TxNumber@var_numOfDigitsToTransmit_u8,w
  1633  05A2  1803               	btfsc	3,0
  1634  05A3  2DD3               	goto	l992
  1635                           
  1636                           ;uart.c: 292: else
  1637                           ;uart.c: 293: {
  1638                           ;uart.c: 297: a[i]=0;
  1639                           
  1640                           ;uart.c: 291: }
  1641                           
  1642                           ;uart.c: 287: {
  1643                           ;uart.c: 290: break;
  1644  05A4  0842               	movf	UART_TxNumber@i,w
  1645  05A5  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1646  05A6  0084               	movwf	4
  1647  05A7  1383               	bcf	3,7	;select IRP bank0
  1648  05A8  0180               	clrf	0
  1649  05A9                     l978:	
  1650  05A9  3001               	movlw	1
  1651  05AA  00A9               	movwf	??_UART_TxNumber
  1652  05AB  0829               	movf	??_UART_TxNumber,w
  1653  05AC  07C2               	addwf	UART_TxNumber@i,f
  1654  05AD  2D3E               	goto	l980
  1655  05AE                     l982:	
  1656                           ;uart.c: 298: }
  1657                           ;uart.c: 299: }
  1658                           ;uart.c: 301: while(i)
  1659                           
  1660                           
  1661                           ;uart.c: 302: {
  1662                           ;uart.c: 304: UART_TxChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  1663  05AE  0842               	movf	UART_TxNumber@i,w
  1664  05AF  3EFF               	addlw	255
  1665  05B0  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1666  05B1  0084               	movwf	4
  1667  05B2  300A               	movlw	10
  1668  05B3  1383               	bcf	3,7	;select IRP bank0
  1669  05B4  0200               	subwf	0,w
  1670  05B5  1803               	skipnc
  1671  05B6  2DBE               	goto	l986
  1672  05B7  0842               	movf	UART_TxNumber@i,w
  1673  05B8  3EFF               	addlw	255
  1674  05B9  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1675  05BA  0084               	movwf	4
  1676  05BB  0800               	movf	0,w
  1677  05BC  3E30               	addlw	48
  1678  05BD  2DC4               	goto	L2
  1679  05BE                     l986:	
  1680  05BE  0842               	movf	UART_TxNumber@i,w
  1681  05BF  3EFF               	addlw	255
  1682  05C0  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1683  05C1  0084               	movwf	4
  1684  05C2  0800               	movf	0,w
  1685  05C3  3E37               	addlw	55
  1686  05C4                     L2:	
  1687  05C4  00BF               	movwf	_UART_TxNumber$58
  1688  05C5  3000               	movlw	0
  1689  05C6  1803               	skipnc
  1690  05C7  3001               	movlw	1
  1691  05C8  00C0               	movwf	_UART_TxNumber$58+1
  1692  05C9  083F               	movf	_UART_TxNumber$58,w
  1693  05CA  120A  118A  2352  120A  118A  	fcall	_UART_TxChar
  1694                           
  1695                           ;uart.c: 305: i--;
  1696  05CF  3001               	movlw	1
  1697  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  1698  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  1699  05D2  02C2               	subwf	UART_TxNumber@i,f
  1700  05D3                     l992:	
  1701  05D3  0842               	movf	UART_TxNumber@i,w
  1702  05D4  1903               	btfsc	3,2
  1703  05D5  0008               	return
  1704  05D6  2DAE               	goto	l982
  1705  05D7                     __end_of_UART_TxNumber:	
  1706                           
  1707                           	psect	text4
  1708  0366                     __ptext4:	
  1709 ;; *************** function ___bmul *****************
  1710 ;; Defined at:
  1711 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\Umul8.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  multiplier      1    wreg     unsigned char 
  1714 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  multiplier      1    3[BANK0 ] unsigned char 
  1717 ;;  product         1    2[BANK0 ] unsigned char 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      unsigned char 
  1720 ;; Registers used:
  1721 ;;		wreg, status,2, status,0
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1727 ;;      Params:         0       1       0       0       0
  1728 ;;      Locals:         0       2       0       0       0
  1729 ;;      Temps:          0       1       0       0       0
  1730 ;;      Totals:         0       4       0       0       0
  1731 ;;Total ram usage:        4 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; This function calls:
  1734 ;;		Nothing
  1735 ;; This function is called by:
  1736 ;;		_UART_TxNumber
  1737 ;;		_UART_Printf
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           
  1742                           ;psect for function ___bmul
  1743  0366                     ___bmul:	
  1744                           
  1745                           ;incstack = 0
  1746                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1747                           ;___bmul@multiplier stored from wreg
  1748  0366  1283               	bcf	3,5	;RP0=0, select bank0
  1749  0367  1303               	bcf	3,6	;RP1=0, select bank0
  1750  0368  00A3               	movwf	___bmul@multiplier
  1751  0369  01A2               	clrf	___bmul@product
  1752  036A                     l884:	
  1753  036A  1C23               	btfss	___bmul@multiplier,0
  1754  036B  2B70               	goto	l888
  1755  036C  0820               	movf	___bmul@multiplicand,w
  1756  036D  00A1               	movwf	??___bmul
  1757  036E  0821               	movf	??___bmul,w
  1758  036F  07A2               	addwf	___bmul@product,f
  1759  0370                     l888:	
  1760  0370  1003               	clrc
  1761  0371  0DA0               	rlf	___bmul@multiplicand,f
  1762  0372  1003               	clrc
  1763  0373  0CA3               	rrf	___bmul@multiplier,f
  1764  0374  0823               	movf	___bmul@multiplier,w
  1765  0375  1D03               	btfss	3,2
  1766  0376  2B6A               	goto	l884
  1767  0377  0822               	movf	___bmul@product,w
  1768  0378  0008               	return
  1769  0379                     __end_of___bmul:	
  1770                           
  1771                           	psect	text5
  1772  0352                     __ptext5:	
  1773 ;; *************** function _UART_TxChar *****************
  1774 ;; Defined at:
  1775 ;;		line 141 in file "../00-libfiles/uart.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;  var_uartData    1    wreg     unsigned char 
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;  var_uartData    1    0[COMMON] unsigned char 
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1789 ;;      Params:         0       0       0       0       0
  1790 ;;      Locals:         1       0       0       0       0
  1791 ;;      Temps:          0       0       0       0       0
  1792 ;;      Totals:         1       0       0       0       0
  1793 ;;Total ram usage:        1 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; This function calls:
  1796 ;;		Nothing
  1797 ;; This function is called by:
  1798 ;;		_UART_TxString
  1799 ;;		_UART_TxNumber
  1800 ;;		_UART_Printf
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           
  1805                           ;psect for function _UART_TxChar
  1806  0352                     _UART_TxChar:	
  1807                           
  1808                           ;incstack = 0
  1809                           ; Regs used in _UART_TxChar: [wreg]
  1810                           ;UART_TxChar@var_uartData_u8 stored from wreg
  1811  0352  00F0               	movwf	UART_TxChar@var_uartData_u8
  1812  0353                     l39:	
  1813                           ;uart.c: 143: while(TXIF==0);
  1814                           
  1815  0353  1283               	bcf	3,5	;RP0=0, select bank0
  1816  0354  1303               	bcf	3,6	;RP1=0, select bank0
  1817  0355  1E0C               	btfss	12,4	;volatile
  1818  0356  2B53               	goto	l39
  1819                           
  1820                           ;uart.c: 144: TXIF=0;
  1821  0357  120C               	bcf	12,4	;volatile
  1822                           
  1823                           ;uart.c: 145: TXREG=var_uartData_u8;
  1824  0358  0870               	movf	UART_TxChar@var_uartData_u8,w
  1825  0359  0099               	movwf	25	;volatile
  1826  035A  0008               	return
  1827  035B                     __end_of_UART_TxChar:	
  1828                           
  1829                           	psect	text6
  1830  03A2                     __ptext6:	
  1831 ;; *************** function _UART_Init *****************
  1832 ;; Defined at:
  1833 ;;		line 62 in file "../00-libfiles/uart.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;  var_baudRate    4   16[BANK0 ] unsigned long 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, status,2, status,0, pclath, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1847 ;;      Params:         0       4       0       0       0
  1848 ;;      Locals:         0       0       0       0       0
  1849 ;;      Temps:          0       0       0       0       0
  1850 ;;      Totals:         0       4       0       0       0
  1851 ;;Total ram usage:        4 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; Hardware stack levels required when called:    2
  1854 ;; This function calls:
  1855 ;;		_UART_SetBaudRate
  1856 ;; This function is called by:
  1857 ;;		_main
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           
  1862                           ;psect for function _UART_Init
  1863  03A2                     _UART_Init:	
  1864                           
  1865                           ;uart.c: 64: TRISC=0x80;
  1866                           
  1867                           ;incstack = 0
  1868                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1869  03A2  3080               	movlw	128
  1870  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  1871  03A4  1303               	bcf	3,6	;RP1=0, select bank1
  1872  03A5  0087               	movwf	7	;volatile
  1873                           
  1874                           ;uart.c: 65: TXSTA=0x20;
  1875  03A6  3020               	movlw	32
  1876  03A7  0098               	movwf	24	;volatile
  1877                           
  1878                           ;uart.c: 66: RCSTA=0x90;
  1879  03A8  3090               	movlw	144
  1880  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  1881  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  1882  03AB  0098               	movwf	24	;volatile
  1883                           
  1884                           ;uart.c: 67: UART_SetBaudRate(var_baudRate_u32);
  1885  03AC  0833               	movf	UART_Init@var_baudRate_u32+3,w
  1886  03AD  00A3               	movwf	UART_SetBaudRate@var_baudRate_u32+3
  1887  03AE  0832               	movf	UART_Init@var_baudRate_u32+2,w
  1888  03AF  00A2               	movwf	UART_SetBaudRate@var_baudRate_u32+2
  1889  03B0  0831               	movf	UART_Init@var_baudRate_u32+1,w
  1890  03B1  00A1               	movwf	UART_SetBaudRate@var_baudRate_u32+1
  1891  03B2  0830               	movf	UART_Init@var_baudRate_u32,w
  1892  03B3  00A0               	movwf	UART_SetBaudRate@var_baudRate_u32
  1893  03B4  120A  118A  245C   	fcall	_UART_SetBaudRate
  1894  03B7  0008               	return
  1895  03B8                     __end_of_UART_Init:	
  1896                           
  1897                           	psect	text7
  1898  045C                     __ptext7:	
  1899 ;; *************** function _UART_SetBaudRate *****************
  1900 ;; Defined at:
  1901 ;;		line 87 in file "../00-libfiles/uart.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  var_baudRate    4    0[BANK0 ] unsigned long 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;  RegValue        4   12[BANK0 ] unsigned long 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, status,2, status,0, pclath, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1915 ;;      Params:         0       4       0       0       0
  1916 ;;      Locals:         0       4       0       0       0
  1917 ;;      Temps:          0       8       0       0       0
  1918 ;;      Totals:         0      16       0       0       0
  1919 ;;Total ram usage:       16 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    1
  1922 ;; This function calls:
  1923 ;;		___lldiv
  1924 ;; This function is called by:
  1925 ;;		_UART_Init
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           
  1930                           ;psect for function _UART_SetBaudRate
  1931  045C                     _UART_SetBaudRate:	
  1932                           
  1933                           ;uart.c: 89: uint32_t RegValue;
  1934                           ;uart.c: 91: if((var_baudRate_u32 >= 2400) && (var_baudRate_u32<=115200UL))
  1935                           
  1936                           ;incstack = 0
  1937                           ; Regs used in _UART_SetBaudRate: [wreg+status,2+status,0+pclath+cstack]
  1938  045C  1283               	bcf	3,5	;RP0=0, select bank0
  1939  045D  1303               	bcf	3,6	;RP1=0, select bank0
  1940  045E  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  1941  045F  1D03               	btfss	3,2
  1942  0460  2C6E               	goto	l922
  1943  0461  0822               	movf	UART_SetBaudRate@var_baudRate_u32+2,w
  1944  0462  1D03               	btfss	3,2
  1945  0463  2C6E               	goto	l922
  1946  0464  3009               	movlw	9
  1947  0465  0221               	subwf	UART_SetBaudRate@var_baudRate_u32+1,w
  1948  0466  1D03               	skipz
  1949  0467  2C6C               	goto	u543
  1950  0468  3060               	movlw	96
  1951  0469  0220               	subwf	UART_SetBaudRate@var_baudRate_u32,w
  1952  046A  1D03               	skipz
  1953  046B  2C6C               	goto	u543
  1954  046C                     u543:	
  1955  046C  1C03               	btfss	3,0
  1956  046D  2CC9               	goto	l926
  1957  046E                     l922:	
  1958  046E  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  1959  046F  1D03               	btfss	3,2
  1960  0470  2CC9               	goto	l926
  1961  0471  3001               	movlw	1
  1962  0472  0222               	subwf	UART_SetBaudRate@var_baudRate_u32+2,w
  1963  0473  1D03               	skipz
  1964  0474  2C7D               	goto	u553
  1965  0475  30C2               	movlw	194
  1966  0476  0221               	subwf	UART_SetBaudRate@var_baudRate_u32+1,w
  1967  0477  1D03               	skipz
  1968  0478  2C7D               	goto	u553
  1969  0479  3001               	movlw	1
  1970  047A  0220               	subwf	UART_SetBaudRate@var_baudRate_u32,w
  1971  047B  1D03               	skipz
  1972  047C  2C7D               	goto	u553
  1973  047D                     u553:	
  1974  047D  1803               	btfsc	3,0
  1975  047E  2CC9               	goto	l926
  1976                           
  1977                           ;uart.c: 92: {
  1978                           ;uart.c: 95: RegValue = (uint32_t)((20000000UL / (64*(uint32_t)var_baudRate_u32)) - 1);
  1979  047F  30FF               	movlw	255
  1980  0480  00A4               	movwf	??_UART_SetBaudRate
  1981  0481  30FF               	movlw	255
  1982  0482  00A5               	movwf	??_UART_SetBaudRate+1
  1983  0483  30FF               	movlw	255
  1984  0484  00A6               	movwf	??_UART_SetBaudRate+2
  1985  0485  30FF               	movlw	255
  1986  0486  00A7               	movwf	??_UART_SetBaudRate+3
  1987  0487  0820               	movf	UART_SetBaudRate@var_baudRate_u32,w
  1988  0488  00A8               	movwf	??_UART_SetBaudRate+4
  1989  0489  0821               	movf	UART_SetBaudRate@var_baudRate_u32+1,w
  1990  048A  00A9               	movwf	??_UART_SetBaudRate+5
  1991  048B  0822               	movf	UART_SetBaudRate@var_baudRate_u32+2,w
  1992  048C  00AA               	movwf	??_UART_SetBaudRate+6
  1993  048D  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  1994  048E  00AB               	movwf	??_UART_SetBaudRate+7
  1995  048F  3006               	movlw	6
  1996  0490                     u565:	
  1997  0490  1003               	clrc
  1998  0491  0DA8               	rlf	??_UART_SetBaudRate+4,f
  1999  0492  0DA9               	rlf	??_UART_SetBaudRate+5,f
  2000  0493  0DAA               	rlf	??_UART_SetBaudRate+6,f
  2001  0494  0DAB               	rlf	??_UART_SetBaudRate+7,f
  2002  0495  3EFF               	addlw	-1
  2003  0496  1D03               	skipz
  2004  0497  2C90               	goto	u565
  2005  0498  082B               	movf	??_UART_SetBaudRate+7,w
  2006  0499  00F3               	movwf	___lldiv@divisor+3
  2007  049A  082A               	movf	??_UART_SetBaudRate+6,w
  2008  049B  00F2               	movwf	___lldiv@divisor+2
  2009  049C  0829               	movf	??_UART_SetBaudRate+5,w
  2010  049D  00F1               	movwf	___lldiv@divisor+1
  2011  049E  0828               	movf	??_UART_SetBaudRate+4,w
  2012  049F  00F0               	movwf	___lldiv@divisor
  2013  04A0  3001               	movlw	1
  2014  04A1  00F7               	movwf	___lldiv@dividend+3
  2015  04A2  3031               	movlw	49
  2016  04A3  00F6               	movwf	___lldiv@dividend+2
  2017  04A4  302D               	movlw	45
  2018  04A5  00F5               	movwf	___lldiv@dividend+1
  2019  04A6  3000               	movlw	0
  2020  04A7  00F4               	movwf	___lldiv@dividend
  2021  04A8  120A  118A  23FE  120A  118A  	fcall	___lldiv
  2022  04AD  0870               	movf	?___lldiv,w
  2023  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2024  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  2025  04B0  07A4               	addwf	??_UART_SetBaudRate,f
  2026  04B1  0871               	movf	?___lldiv+1,w
  2027  04B2  1803               	skipnc
  2028  04B3  0F71               	incfsz	?___lldiv+1,w
  2029  04B4  2CB6               	goto	u570
  2030  04B5  2CB7               	goto	u571
  2031  04B6                     u570:	
  2032  04B6  07A5               	addwf	??_UART_SetBaudRate+1,f
  2033  04B7                     u571:	
  2034  04B7  0872               	movf	?___lldiv+2,w
  2035  04B8  1803               	skipnc
  2036  04B9  0F72               	incfsz	?___lldiv+2,w
  2037  04BA  2CBC               	goto	u572
  2038  04BB  2CBD               	goto	u573
  2039  04BC                     u572:	
  2040  04BC  07A6               	addwf	??_UART_SetBaudRate+2,f
  2041  04BD                     u573:	
  2042  04BD  0873               	movf	?___lldiv+3,w
  2043  04BE  1803               	skipnc
  2044  04BF  0A73               	incf	?___lldiv+3,w
  2045  04C0  07A7               	addwf	??_UART_SetBaudRate+3,f
  2046  04C1  0827               	movf	??_UART_SetBaudRate+3,w
  2047  04C2  00AF               	movwf	UART_SetBaudRate@RegValue+3
  2048  04C3  0826               	movf	??_UART_SetBaudRate+2,w
  2049  04C4  00AE               	movwf	UART_SetBaudRate@RegValue+2
  2050  04C5  0825               	movf	??_UART_SetBaudRate+1,w
  2051  04C6  00AD               	movwf	UART_SetBaudRate@RegValue+1
  2052  04C7  0824               	movf	??_UART_SetBaudRate,w
  2053  04C8  2CD0               	goto	L3
  2054  04C9                     l926:	
  2055                           ;uart.c: 96: }
  2056                           
  2057                           
  2058                           ;uart.c: 97: else
  2059                           ;uart.c: 98: {
  2060                           ;uart.c: 100: RegValue = (uint32_t)((20000000UL / (64*(uint32_t)9600)) - 1);
  2061  04C9  3000               	movlw	0
  2062  04CA  00AF               	movwf	UART_SetBaudRate@RegValue+3
  2063  04CB  3000               	movlw	0
  2064  04CC  00AE               	movwf	UART_SetBaudRate@RegValue+2
  2065  04CD  3000               	movlw	0
  2066  04CE  00AD               	movwf	UART_SetBaudRate@RegValue+1
  2067  04CF  301F               	movlw	31
  2068  04D0                     L3:	
  2069  04D0  00AC               	movwf	UART_SetBaudRate@RegValue
  2070                           
  2071                           ;uart.c: 101: }
  2072                           ;uart.c: 103: SPBRG = (uint8_t)RegValue;
  2073  04D1  082C               	movf	UART_SetBaudRate@RegValue,w
  2074  04D2  1683               	bsf	3,5	;RP0=1, select bank1
  2075  04D3  1303               	bcf	3,6	;RP1=0, select bank1
  2076  04D4  0099               	movwf	25	;volatile
  2077  04D5  0008               	return
  2078  04D6                     __end_of_UART_SetBaudRate:	
  2079                           
  2080                           	psect	text8
  2081  03FE                     __ptext8:	
  2082 ;; *************** function ___lldiv *****************
  2083 ;; Defined at:
  2084 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;  divisor         4    0[COMMON] unsigned long 
  2087 ;;  dividend        4    4[COMMON] unsigned long 
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;  quotient        4    9[COMMON] unsigned long 
  2090 ;;  counter         1   13[COMMON] unsigned char 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  4    0[COMMON] unsigned long 
  2093 ;; Registers used:
  2094 ;;		wreg, status,2, status,0
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2100 ;;      Params:         8       0       0       0       0
  2101 ;;      Locals:         5       0       0       0       0
  2102 ;;      Temps:          1       0       0       0       0
  2103 ;;      Totals:        14       0       0       0       0
  2104 ;;Total ram usage:       14 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_UART_SetBaudRate
  2110 ;;		_UART_TxNumber
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           
  2115                           ;psect for function ___lldiv
  2116  03FE                     ___lldiv:	
  2117                           
  2118                           ;incstack = 0
  2119                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2120  03FE  3000               	movlw	0
  2121  03FF  00FC               	movwf	___lldiv@quotient+3
  2122  0400  3000               	movlw	0
  2123  0401  00FB               	movwf	___lldiv@quotient+2
  2124  0402  3000               	movlw	0
  2125  0403  00FA               	movwf	___lldiv@quotient+1
  2126  0404  3000               	movlw	0
  2127  0405  00F9               	movwf	___lldiv@quotient
  2128  0406  0873               	movf	___lldiv@divisor+3,w
  2129  0407  0472               	iorwf	___lldiv@divisor+2,w
  2130  0408  0471               	iorwf	___lldiv@divisor+1,w
  2131  0409  0470               	iorwf	___lldiv@divisor,w
  2132  040A  1903               	skipnz
  2133  040B  2C53               	goto	l916
  2134  040C  01FD               	clrf	___lldiv@counter
  2135  040D  0AFD               	incf	___lldiv@counter,f
  2136  040E                     l902:	
  2137  040E  1BF3               	btfsc	___lldiv@divisor+3,7
  2138  040F  2C1E               	goto	l904
  2139  0410  3001               	movlw	1
  2140  0411  00F8               	movwf	??___lldiv
  2141  0412                     u485:	
  2142  0412  1003               	clrc
  2143  0413  0DF0               	rlf	___lldiv@divisor,f
  2144  0414  0DF1               	rlf	___lldiv@divisor+1,f
  2145  0415  0DF2               	rlf	___lldiv@divisor+2,f
  2146  0416  0DF3               	rlf	___lldiv@divisor+3,f
  2147  0417  0BF8               	decfsz	??___lldiv,f
  2148  0418  2C12               	goto	u485
  2149  0419  3001               	movlw	1
  2150  041A  00F8               	movwf	??___lldiv
  2151  041B  0878               	movf	??___lldiv,w
  2152  041C  07FD               	addwf	___lldiv@counter,f
  2153  041D  2C0E               	goto	l902
  2154  041E                     l904:	
  2155  041E  3001               	movlw	1
  2156  041F  00F8               	movwf	??___lldiv
  2157  0420                     u505:	
  2158  0420  1003               	clrc
  2159  0421  0DF9               	rlf	___lldiv@quotient,f
  2160  0422  0DFA               	rlf	___lldiv@quotient+1,f
  2161  0423  0DFB               	rlf	___lldiv@quotient+2,f
  2162  0424  0DFC               	rlf	___lldiv@quotient+3,f
  2163  0425  0BF8               	decfsz	??___lldiv,f
  2164  0426  2C20               	goto	u505
  2165  0427  0873               	movf	___lldiv@divisor+3,w
  2166  0428  0277               	subwf	___lldiv@dividend+3,w
  2167  0429  1D03               	skipz
  2168  042A  2C35               	goto	u515
  2169  042B  0872               	movf	___lldiv@divisor+2,w
  2170  042C  0276               	subwf	___lldiv@dividend+2,w
  2171  042D  1D03               	skipz
  2172  042E  2C35               	goto	u515
  2173  042F  0871               	movf	___lldiv@divisor+1,w
  2174  0430  0275               	subwf	___lldiv@dividend+1,w
  2175  0431  1D03               	skipz
  2176  0432  2C35               	goto	u515
  2177  0433  0870               	movf	___lldiv@divisor,w
  2178  0434  0274               	subwf	___lldiv@dividend,w
  2179  0435                     u515:	
  2180  0435  1C03               	skipc
  2181  0436  2C46               	goto	l912
  2182  0437  0870               	movf	___lldiv@divisor,w
  2183  0438  02F4               	subwf	___lldiv@dividend,f
  2184  0439  0871               	movf	___lldiv@divisor+1,w
  2185  043A  1C03               	skipc
  2186  043B  0F71               	incfsz	___lldiv@divisor+1,w
  2187  043C  02F5               	subwf	___lldiv@dividend+1,f
  2188  043D  0872               	movf	___lldiv@divisor+2,w
  2189  043E  1C03               	skipc
  2190  043F  0F72               	incfsz	___lldiv@divisor+2,w
  2191  0440  02F6               	subwf	___lldiv@dividend+2,f
  2192  0441  0873               	movf	___lldiv@divisor+3,w
  2193  0442  1C03               	skipc
  2194  0443  0F73               	incfsz	___lldiv@divisor+3,w
  2195  0444  02F7               	subwf	___lldiv@dividend+3,f
  2196  0445  1479               	bsf	___lldiv@quotient,0
  2197  0446                     l912:	
  2198  0446  3001               	movlw	1
  2199  0447                     u525:	
  2200  0447  1003               	clrc
  2201  0448  0CF3               	rrf	___lldiv@divisor+3,f
  2202  0449  0CF2               	rrf	___lldiv@divisor+2,f
  2203  044A  0CF1               	rrf	___lldiv@divisor+1,f
  2204  044B  0CF0               	rrf	___lldiv@divisor,f
  2205  044C  3EFF               	addlw	-1
  2206  044D  1D03               	skipz
  2207  044E  2C47               	goto	u525
  2208  044F  3001               	movlw	1
  2209  0450  02FD               	subwf	___lldiv@counter,f
  2210  0451  1D03               	btfss	3,2
  2211  0452  2C1E               	goto	l904
  2212  0453                     l916:	
  2213  0453  087C               	movf	___lldiv@quotient+3,w
  2214  0454  00F3               	movwf	?___lldiv+3
  2215  0455  087B               	movf	___lldiv@quotient+2,w
  2216  0456  00F2               	movwf	?___lldiv+2
  2217  0457  087A               	movf	___lldiv@quotient+1,w
  2218  0458  00F1               	movwf	?___lldiv+1
  2219  0459  0879               	movf	___lldiv@quotient,w
  2220  045A  00F0               	movwf	?___lldiv
  2221  045B  0008               	return
  2222  045C                     __end_of___lldiv:	
  2223                           
  2224                           	psect	text9
  2225  0379                     __ptext9:	
  2226 ;; *************** function _DELAY_ms *****************
  2227 ;; Defined at:
  2228 ;;		line 75 in file "../00-libfiles/delay.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  ms_count        2    2[COMMON] unsigned int 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, status,2, status,0, pclath, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2242 ;;      Params:         2       0       0       0       0
  2243 ;;      Locals:         0       0       0       0       0
  2244 ;;      Temps:          0       0       0       0       0
  2245 ;;      Totals:         2       0       0       0       0
  2246 ;;Total ram usage:        2 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    1
  2249 ;; This function calls:
  2250 ;;		_DELAY_us
  2251 ;; This function is called by:
  2252 ;;		_main
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           
  2257                           ;psect for function _DELAY_ms
  2258  0379                     _DELAY_ms:	
  2259  0379                     l1134:	
  2260                           ;delay.c: 77: while (ms_count != 0)
  2261                           
  2262                           ;incstack = 0
  2263                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  2264                           
  2265  0379  0872               	movf	DELAY_ms@ms_count,w
  2266  037A  0473               	iorwf	DELAY_ms@ms_count+1,w
  2267  037B  1903               	btfsc	3,2
  2268  037C  0008               	return
  2269                           
  2270                           ;delay.c: 78: {
  2271                           ;delay.c: 79: DELAY_us(300u);
  2272  037D  302C               	movlw	44
  2273  037E  00F0               	movwf	DELAY_us@us_count
  2274  037F  3001               	movlw	1
  2275  0380  00F1               	movwf	DELAY_us@us_count+1
  2276  0381  120A  118A  235B  120A  118A  	fcall	_DELAY_us
  2277                           
  2278                           ;delay.c: 80: ms_count--;
  2279  0386  3001               	movlw	1
  2280  0387  02F2               	subwf	DELAY_ms@ms_count,f
  2281  0388  3000               	movlw	0
  2282  0389  1C03               	skipc
  2283  038A  03F3               	decf	DELAY_ms@ms_count+1,f
  2284  038B  02F3               	subwf	DELAY_ms@ms_count+1,f
  2285  038C  2B79               	goto	l1134
  2286  038D                     __end_of_DELAY_ms:	
  2287                           
  2288                           	psect	text10
  2289  035B                     __ptext10:	
  2290 ;; *************** function _DELAY_us *****************
  2291 ;; Defined at:
  2292 ;;		line 56 in file "../00-libfiles/delay.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  us_count        2    0[COMMON] unsigned int 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;		None
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2306 ;;      Params:         2       0       0       0       0
  2307 ;;      Locals:         0       0       0       0       0
  2308 ;;      Temps:          0       0       0       0       0
  2309 ;;      Totals:         2       0       0       0       0
  2310 ;;Total ram usage:        2 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; This function calls:
  2313 ;;		Nothing
  2314 ;; This function is called by:
  2315 ;;		_DELAY_ms
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _DELAY_us
  2321  035B                     _DELAY_us:	
  2322  035B                     l998:	
  2323                           ;delay.c: 58: while (us_count != 0)
  2324                           
  2325                           ;incstack = 0
  2326                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  2327                           
  2328  035B  0870               	movf	DELAY_us@us_count,w
  2329  035C  0471               	iorwf	DELAY_us@us_count+1,w
  2330  035D  1903               	btfsc	3,2
  2331  035E  0008               	return
  2332                           
  2333                           ;delay.c: 59: {
  2334                           ;delay.c: 60: us_count--;
  2335  035F  3001               	movlw	1
  2336  0360  02F0               	subwf	DELAY_us@us_count,f
  2337  0361  3000               	movlw	0
  2338  0362  1C03               	skipc
  2339  0363  03F1               	decf	DELAY_us@us_count+1,f
  2340  0364  02F1               	subwf	DELAY_us@us_count+1,f
  2341  0365  2B5B               	goto	l998
  2342  0366                     __end_of_DELAY_us:	
  2343  007E                     btemp	set	126	;btemp
  2344  007E                     wtemp	set	126
  2345  007E                     wtemp0	set	126
  2346  0080                     wtemp1	set	128
  2347  0082                     wtemp2	set	130
  2348  0084                     wtemp3	set	132
  2349  0086                     wtemp4	set	134
  2350  0088                     wtemp5	set	136
  2351  007F                     wtemp6	set	127
  2352  007E                     ttemp	set	126
  2353  007E                     ttemp0	set	126
  2354  0081                     ttemp1	set	129
  2355  0084                     ttemp2	set	132
  2356  0087                     ttemp3	set	135
  2357  007F                     ttemp4	set	127
  2358  007E                     ltemp	set	126
  2359  007E                     ltemp0	set	126
  2360  0082                     ltemp1	set	130
  2361  0086                     ltemp2	set	134
  2362  0080                     ltemp3	set	128


Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     66      66
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Printf@str	PTR unsigned char  size(1) Largest target is 0

    UART_Printf@argList	PTR const unsigned char  size(1) Largest target is 32
		 -> STR_1(CODE[32]), 

    UART_Printf@ptr	PTR const unsigned char  size(1) Largest target is 32
		 -> STR_1(CODE[32]), 

    UART_Printf@argp	PTR void [1] size(1) Largest target is 1
		 -> ?_UART_Printf(BANK0[1]), 

    UART_TxString@ptr_stringPointer_u8	PTR const unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _UART_TxString->_UART_TxChar
    _UART_TxNumber->___lldiv
    ___bmul->___lldiv
    _UART_SetBaudRate->___lldiv
    _DELAY_ms->_DELAY_us

Critical Paths under _main in BANK0

    _main->_UART_Printf
    _UART_Printf->_UART_TxNumber
    _UART_TxNumber->___bmul
    _UART_Init->_UART_SetBaudRate

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4667
                                             64 BANK0      2     2      0
                           _DELAY_ms
                          _UART_Init
                        _UART_Printf
 ---------------------------------------------------------------------------------
 (1) _UART_Printf                                         29    23      6    3726
                                             35 BANK0     29    23      6
                        _UART_TxChar
                      _UART_TxNumber
                      _UART_TxString
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _UART_TxString                                        2     2      0      94
                                              1 COMMON     2     2      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxNumber                                       31    26      5    2270
                                              4 BANK0     31    26      5
                        _UART_TxChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4     698
                                             16 BANK0      4     0      4
                   _UART_SetBaudRate
 ---------------------------------------------------------------------------------
 (2) _UART_SetBaudRate                                    16    12      4     623
                                              0 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _DELAY_ms                                             2     0      2     152
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (2) _DELAY_us                                             2     0      2      76
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_ms
     _DELAY_us
   _UART_Init
     _UART_SetBaudRate
       ___lldiv
   _UART_Printf
     _UART_TxChar
     _UART_TxNumber
       _UART_TxChar
       ___bmul
         ___lldiv (ARG)
       ___lldiv
     _UART_TxString
       _UART_TxChar
     ___bmul
       ___lldiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     42      42       5       82.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Feb 20 15:35:00 2016

                   UART_Printf@var_num_s16 0054                     UART_Printf@var_num_s32 0050  
                   UART_Printf@var_num_u16 005A                     UART_Printf@var_num_u32 0056  
         UART_SetBaudRate@var_baudRate_u32 0020                                          pc 0002  
                           ___bmul@product 0022                                __CFG_CP$OFF 0000  
                                       l39 0353                                         fsr 0004  
                              __CFG_LVP$ON 0000                                        l902 040E  
                                      l912 0446                                        l904 041E  
                                      l922 046E                                        l916 0453  
                                      l926 04C9                                        l942 04DF  
                                      l950 0521                                        l934 038E  
                                      l970 059D                                        l962 053D  
                                      l884 036A                                        l980 053E  
                                      l948 051D                                        l982 05AE  
                                      l958 0528                                        l888 0370  
                                      l992 05D3                                        l986 05BE  
                                      l978 05A9                                        l998 035B  
                                      u505 0420                                        u610 050E  
                             __CFG_CPD$OFF 0000                                        u515 0435  
                                      u620 050F                                        u604 04F3  
                                      u525 0447                                        u605 04F0  
                                      u543 046C                                        u553 047D  
                                      u570 04B6                                        u571 04B7  
                                      u572 04BC                                        u485 0412  
                                      u573 04BD                                        u565 0490  
                                      u855 03F7                                        fsr0 0004  
                                      indf 0000                               __CFG_FOSC$HS 0000  
                                     l1110 07A9                                       l1030 0639  
                                     l1104 0784                                       l1032 063E  
                                     l1120 07BD                                       l1106 0797  
                                     l1050 067B                                       l1026 0611  
                                     l1122 07EF                                       l1116 07BB  
                                     l1060 06A2                                       l1124 07F5  
                                     l1140 03C9                                       l1134 0379  
                                     l1062 06B7                                       l1038 064A  
                                     l1126 05E2                                       l1080 071C  
                                     l1048 0665                                       l1074 06FD  
                                     l1068 06D6                                       l1094 0758  
                                     l1086 0743                                       l1096 0769  
                                     STR_1 0009                                       _RCIF 0065  
                                     _TXIF 0064                               __CFG_WRT$OFF 0000  
                                     _main 03B8                                       btemp 007E  
                                     ltemp 007E                                       start 0000  
                                     ttemp 007E                                       wtemp 007E  
                         __end_of_DELAY_ms 038D                           __end_of_DELAY_us 0366  
                        ___bmul@multiplier 0023                                      ?_main 0070  
                            __CFG_WDTE$OFF 0000                            __end_of___lldiv 045C  
                                    _RCREG 001A                                      _RCSTA 0018  
                                    _SPBRG 0099                                      _TRISC 0087  
                                    _TXREG 0019                                      _TXSTA 0098  
                       __size_of_UART_Init 0016                             __CFG_BOREN$OFF 0000  
                                    pclath 000A                                      ltemp0 007E  
                                    ltemp1 0082                                      ltemp2 0086  
                                    ltemp3 0080                                      ttemp0 007E  
                                    ttemp1 0081                                      ttemp2 0084  
                                    ttemp3 0087                                      ttemp4 007F  
                                    status 0003                                      wtemp0 007E  
                                    wtemp1 0080                                      wtemp2 0082  
                                    wtemp3 0084                                      wtemp4 0086  
                                    wtemp5 0088                                      wtemp6 007F  
                          __initialization 07FC                               __end_of_main 03FE  
        UART_TxNumber@var_numericSystem_u8 0041                                     ??_main 007E  
                        ?_UART_SetBaudRate 0020                         ??_UART_SetBaudRate 0024  
                           __CFG_PWRTE$OFF 0000                               ?_UART_TxChar 0070  
                             ?_UART_Printf 0043                          __end_of_UART_Init 03B8  
                                   ___bmul 0366                                  ??___lldiv 0078  
                         DELAY_ms@ms_count 0072                                  ?_DELAY_ms 0072  
                                ?_DELAY_us 0070                    __end_of__initialization 07FC  
                    __end_of_UART_TxNumber 05D7                      __end_of_UART_TxString 03A2  
                      ___bmul@multiplicand 0020                             __pcstackCOMMON 0070  
                               ??_DELAY_ms 0074                                 ??_DELAY_us 0072  
  UART_Printf@var_numOfDigitsToTransmit_u8 005E                                 __pmaintext 03B8  
                                  ?___bmul 0020                           DELAY_us@us_count 0070  
                               __stringtab 0003                       __size_of_UART_TxChar 0009  
                          __size_of___bmul 0013                       __size_of_UART_Printf 0225  
                                  ___lldiv 03FE                                    __ptext1 05D7  
                                  __ptext2 038D                                    __ptext3 04D6  
                                  __ptext4 0366                                    __ptext5 0352  
                                  __ptext6 03A2                                    __ptext7 045C  
                                  __ptext8 03FE                                    __ptext9 0379  
                           UART_Printf@ptr 005C                             UART_Printf@str 004E  
                     end_of_initialization 07FC                             UART_TxNumber@a 0035  
                           UART_TxNumber@i 0042                 UART_TxChar@var_uartData_u8 0070  
                          ___lldiv@divisor 0070                            ___lldiv@counter 007D  
UART_TxNumber@var_numOfDigitsToTransmit_u8 0028                                  _UART_Init 03A2  
                __size_of_UART_SetBaudRate 007A                          __size_of_DELAY_ms 0014  
                        __size_of_DELAY_us 000B                             __end_of___bmul 0379  
                               ?_UART_Init 0030                        start_initialization 07FC  
                                 ??___bmul 0021                     __size_of_UART_TxNumber 0101  
                                ___latbits 0002                     __size_of_UART_TxString 0015  
                            __pcstackBANK0 0020                  UART_Init@var_baudRate_u32 0030  
                                 ?___lldiv 0070                                ??_UART_Init 007E  
                         _UART_SetBaudRate 045C                                  __pstrings 0003  
                                 _DELAY_ms 0379                                   _DELAY_us 035B  
                            UART_Printf@ch 005D                              ??_UART_TxChar 0070  
                            _UART_TxNumber 04D6                              ??_UART_Printf 0049  
                            _UART_TxString 038D                UART_TxNumber@var_number_u32 0024  
                              __stringbase 0008                                  main@count 0060  
                           ?_UART_TxNumber 0024                             ?_UART_TxString 0070  
                         _UART_TxNumber$58 003F                        __end_of_UART_TxChar 035B  
                         __size_of___lldiv 005E                        __end_of_UART_Printf 07FC  
                       __end_of__stringtab 0009                UART_Printf@var_floatNum_f32 004B  
        UART_TxString@ptr_stringPointer_u8 0072                                   __ptext10 035B  
                            __size_of_main 0046                            UART_Printf@argp 005F  
                 UART_SetBaudRate@RegValue 002C                            ??_UART_TxNumber 0029  
                 __end_of_UART_SetBaudRate 04D6                            ??_UART_TxString 0071  
                         ___lldiv@dividend 0074                                  stringcode 0003  
                              _UART_TxChar 0352                                _UART_Printf 05D7  
                         ___lldiv@quotient 0079                                   stringdir 0003  
                                 stringtab 0003                         UART_Printf@argList 004F  
