

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Wed Apr 27 13:05:42 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     	;# 
    23  0001                     	;# 
    24  0002                     	;# 
    25  0003                     	;# 
    26  0004                     	;# 
    27  0005                     	;# 
    28  0006                     	;# 
    29  0007                     	;# 
    30  0008                     	;# 
    31  0009                     	;# 
    32  000A                     	;# 
    33  000B                     	;# 
    34  000C                     	;# 
    35  000D                     	;# 
    36  000E                     	;# 
    37  000E                     	;# 
    38  000F                     	;# 
    39  0010                     	;# 
    40  0011                     	;# 
    41  0012                     	;# 
    42  0013                     	;# 
    43  0014                     	;# 
    44  0015                     	;# 
    45  0015                     	;# 
    46  0016                     	;# 
    47  0017                     	;# 
    48  0018                     	;# 
    49  0019                     	;# 
    50  001A                     	;# 
    51  001B                     	;# 
    52  001B                     	;# 
    53  001C                     	;# 
    54  001D                     	;# 
    55  001E                     	;# 
    56  001F                     	;# 
    57  0081                     	;# 
    58  0085                     	;# 
    59  0086                     	;# 
    60  0087                     	;# 
    61  0088                     	;# 
    62  0089                     	;# 
    63  008C                     	;# 
    64  008D                     	;# 
    65  008E                     	;# 
    66  0091                     	;# 
    67  0092                     	;# 
    68  0093                     	;# 
    69  0094                     	;# 
    70  0098                     	;# 
    71  0099                     	;# 
    72  009C                     	;# 
    73  009D                     	;# 
    74  009E                     	;# 
    75  009F                     	;# 
    76  010C                     	;# 
    77  010D                     	;# 
    78  010E                     	;# 
    79  010F                     	;# 
    80  018C                     	;# 
    81  018D                     	;# 
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  001A                     _RCREG	set	26
   203  0018                     _RCSTA	set	24
   204  0019                     _TXREG	set	25
   205  0018                     _CARRY	set	24
   206  005F                     _GIE	set	95
   207  0065                     _RCIF	set	101
   208  0064                     _TXIF	set	100
   209  0099                     _SPBRG	set	153
   210  0087                     _TRISC	set	135
   211  0098                     _TXSTA	set	152
   212  010D                     _EEADR	set	269
   213  010C                     _EEDATA	set	268
   214  018C                     _EECON1	set	396
   215  018D                     _EECON2	set	397
   216  0C60                     _RD	set	3168
   217  0C61                     _WR	set	3169
   218  0C62                     _WREN	set	3170
   219                           
   220                           	psect	strings
   221  0003                     __pstrings:	
   222  0003                     stringtab:	
   223  0003                     __stringtab:	
   224  0003                     stringcode:	
   225                           ;	String table - string pointers are 1 byte each
   226                           
   227  0003                     stringdir:	
   228  0003  3000               	movlw	high stringdir
   229  0004  008A               	movwf	10
   230  0005  0804               	movf	4,w
   231  0006  0A84               	incf	4,f
   232  0007  0782               	addwf	2,f
   233  0008                     __stringbase:	
   234  0008  3400               	retlw	0
   235  0009                     __end_of__stringtab:	
   236  0009                     STR_1:	
   237  0009  340A               	retlw	10
   238  000A  340D               	retlw	13
   239  000B  3445               	retlw	69	;'E'
   240  000C  3465               	retlw	101	;'e'
   241  000D  3470               	retlw	112	;'p'
   242  000E  3472               	retlw	114	;'r'
   243  000F  346F               	retlw	111	;'o'
   244  0010  346D               	retlw	109	;'m'
   245  0011  3420               	retlw	32	;' '
   246  0012  3457               	retlw	87	;'W'
   247  0013  3472               	retlw	114	;'r'
   248  0014  3469               	retlw	105	;'i'
   249  0015  3474               	retlw	116	;'t'
   250  0016  3465               	retlw	101	;'e'
   251  0017  343A               	retlw	58	;':'
   252  0018  3420               	retlw	32	;' '
   253  0019  3425               	retlw	37	;'%'
   254  001A  3463               	retlw	99	;'c'
   255  001B  3420               	retlw	32	;' '
   256  001C  3420               	retlw	32	;' '
   257  001D  3420               	retlw	32	;' '
   258  001E  3420               	retlw	32	;' '
   259  001F  3400               	retlw	0
   260  0020                     STR_2:	
   261  0020  3445               	retlw	69	;'E'
   262  0021  3465               	retlw	101	;'e'
   263  0022  3470               	retlw	112	;'p'
   264  0023  3472               	retlw	114	;'r'
   265  0024  346F               	retlw	111	;'o'
   266  0025  346D               	retlw	109	;'m'
   267  0026  3420               	retlw	32	;' '
   268  0027  3452               	retlw	82	;'R'
   269  0028  3465               	retlw	101	;'e'
   270  0029  3461               	retlw	97	;'a'
   271  002A  3464               	retlw	100	;'d'
   272  002B  343A               	retlw	58	;':'
   273  002C  3420               	retlw	32	;' '
   274  002D  3425               	retlw	37	;'%'
   275  002E  3463               	retlw	99	;'c'
   276  002F  3400               	retlw	0
   277                           
   278                           ; #config settings
   279  0000                     
   280                           	psect	cinit
   281  07FC                     start_initialization:	
   282  07FC                     __initialization:	
   283  07FC                     end_of_initialization:	
   284                           ;End of C runtime variable initialization code
   285                           
   286  07FC                     __end_of__initialization:	
   287  07FC  0183               	clrf	3
   288  07FD  120A  118A  2C8D   	ljmp	_main	;jump to C main() function
   289                           
   290                           	psect	cstackCOMMON
   291  0070                     __pcstackCOMMON:	
   292  0070                     ?_eeprom_write:	
   293  0070                     ?_DELAY_us:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_UART_TxChar:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ??_UART_TxChar:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_UART_TxString:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_main:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?___lldiv:	
   309                           ; 2 bytes @ 0x0
   310                           
   311  0070                     UART_TxChar@v_uartData_u8:	
   312                           ; 4 bytes @ 0x0
   313                           
   314  0070                     eeprom_write@value:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     DELAY_us@us_count:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ___lldiv@divisor:	
   321                           ; 2 bytes @ 0x0
   322                           
   323                           
   324                           ; 4 bytes @ 0x0
   325  0070                     	ds	1
   326  0071                     ??_eeprom_write:	
   327  0071                     ??_UART_TxString:	
   328                           ; 1 bytes @ 0x1
   329                           
   330                           
   331                           ; 1 bytes @ 0x1
   332  0071                     	ds	1
   333  0072                     ??_DELAY_us:	
   334  0072                     ?_EEPROM_ReadByte:	
   335                           ; 1 bytes @ 0x2
   336                           
   337  0072                     UART_TxString@ptr_string:	
   338                           ; 1 bytes @ 0x2
   339                           
   340  0072                     eeprom_write@addr:	
   341                           ; 1 bytes @ 0x2
   342                           
   343  0072                     EEPROM_ReadByte@v_eepromAddress_u16:	
   344                           ; 1 bytes @ 0x2
   345                           
   346                           
   347                           ; 2 bytes @ 0x2
   348  0072                     	ds	1
   349  0073                     ?_EEPROM_WriteByte:	
   350  0073                     EEPROM_WriteByte@v_eepromAddress_u16:	
   351                           ; 1 bytes @ 0x3
   352                           
   353                           
   354                           ; 2 bytes @ 0x3
   355  0073                     	ds	1
   356  0074                     ??_EEPROM_ReadByte:	
   357  0074                     ___lldiv@dividend:	
   358                           ; 1 bytes @ 0x4
   359                           
   360                           
   361                           ; 4 bytes @ 0x4
   362  0074                     	ds	1
   363  0075                     EEPROM_WriteByte@v_eepromData_u8:	
   364                           
   365                           ; 1 bytes @ 0x5
   366  0075                     	ds	1
   367  0076                     ??_EEPROM_WriteByte:	
   368                           
   369                           ; 1 bytes @ 0x6
   370  0076                     	ds	2
   371  0078                     ??___lldiv:	
   372                           
   373                           ; 1 bytes @ 0x8
   374  0078                     	ds	1
   375  0079                     ___lldiv@quotient:	
   376                           
   377                           ; 4 bytes @ 0x9
   378  0079                     	ds	4
   379  007D                     ___lldiv@counter:	
   380                           
   381                           ; 1 bytes @ 0xD
   382  007D                     	ds	1
   383  007E                     ??_UART_Init:	
   384                           
   385                           	psect	cstackBANK0
   386  0020                     __pcstackBANK0:	
   387                           ; 1 bytes @ 0xE
   388                           
   389  0020                     ?_UART_SetBaudRate:	
   390  0020                     ?___bmul:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0020                     ___bmul@multiplicand:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0020                     UART_SetBaudRate@v_baudRate_u32:	
   397                           ; 1 bytes @ 0x0
   398                           
   399                           
   400                           ; 4 bytes @ 0x0
   401  0020                     	ds	1
   402  0021                     ??___bmul:	
   403                           
   404                           ; 1 bytes @ 0x1
   405  0021                     	ds	1
   406  0022                     ___bmul@product:	
   407                           
   408                           ; 1 bytes @ 0x2
   409  0022                     	ds	1
   410  0023                     ___bmul@multiplier:	
   411                           
   412                           ; 1 bytes @ 0x3
   413  0023                     	ds	1
   414  0024                     ??_UART_SetBaudRate:	
   415  0024                     ?_UART_TxNumber:	
   416                           ; 1 bytes @ 0x4
   417                           
   418  0024                     UART_TxNumber@v_number_u32:	
   419                           ; 1 bytes @ 0x4
   420                           
   421                           
   422                           ; 4 bytes @ 0x4
   423  0024                     	ds	4
   424  0028                     UART_TxNumber@v_numOfDigitsToTransmit_u8:	
   425                           
   426                           ; 1 bytes @ 0x8
   427  0028                     	ds	1
   428  0029                     ??_UART_TxNumber:	
   429  0029                     UART_SetBaudRate@RegValue:	
   430                           ; 1 bytes @ 0x9
   431                           
   432                           
   433                           ; 1 bytes @ 0x9
   434  0029                     	ds	1
   435  002A                     ?_UART_Init:	
   436  002A                     UART_Init@v_baudRate_u32:	
   437                           ; 1 bytes @ 0xA
   438                           
   439                           
   440                           ; 4 bytes @ 0xA
   441  002A                     	ds	11
   442  0035                     UART_TxNumber@a:	
   443                           
   444                           ; 10 bytes @ 0x15
   445  0035                     	ds	10
   446  003F                     _UART_TxNumber$92:	
   447                           
   448                           ; 2 bytes @ 0x1F
   449  003F                     	ds	2
   450  0041                     UART_TxNumber@v_numericSystem_u8:	
   451                           
   452                           ; 1 bytes @ 0x21
   453  0041                     	ds	1
   454  0042                     UART_TxNumber@i:	
   455                           
   456                           ; 1 bytes @ 0x22
   457  0042                     	ds	1
   458  0043                     ?_UART_Printf:	
   459                           
   460                           ; 1 bytes @ 0x23
   461  0043                     	ds	2
   462  0045                     ??_UART_Printf:	
   463                           
   464                           ; 1 bytes @ 0x25
   465  0045                     	ds	2
   466  0047                     UART_Printf@str:	
   467                           
   468                           ; 1 bytes @ 0x27
   469  0047                     	ds	1
   470  0048                     UART_Printf@argList:	
   471                           
   472                           ; 1 bytes @ 0x28
   473  0048                     	ds	1
   474  0049                     UART_Printf@v_num_s32:	
   475                           
   476                           ; 4 bytes @ 0x29
   477  0049                     	ds	4
   478  004D                     UART_Printf@v_num_s16:	
   479                           
   480                           ; 2 bytes @ 0x2D
   481  004D                     	ds	2
   482  004F                     UART_Printf@v_num_u32:	
   483                           
   484                           ; 4 bytes @ 0x2F
   485  004F                     	ds	4
   486  0053                     UART_Printf@v_num_u16:	
   487                           
   488                           ; 2 bytes @ 0x33
   489  0053                     	ds	2
   490  0055                     UART_Printf@ptr:	
   491                           
   492                           ; 1 bytes @ 0x35
   493  0055                     	ds	1
   494  0056                     UART_Printf@ch:	
   495                           
   496                           ; 1 bytes @ 0x36
   497  0056                     	ds	1
   498  0057                     UART_Printf@v_numOfDigitsToTransmit_u8:	
   499                           
   500                           ; 1 bytes @ 0x37
   501  0057                     	ds	1
   502  0058                     UART_Printf@argp:	
   503                           
   504                           ; 1 bytes @ 0x38
   505  0058                     	ds	1
   506  0059                     ??_main:	
   507                           
   508                           ; 1 bytes @ 0x39
   509  0059                     	ds	3
   510  005C                     main@read_char:	
   511                           
   512                           ; 1 bytes @ 0x3C
   513  005C                     	ds	1
   514  005D                     main@eeprom_address:	
   515                           
   516                           ; 1 bytes @ 0x3D
   517  005D                     	ds	1
   518  005E                     main@write_char:	
   519                           
   520                           ; 1 bytes @ 0x3E
   521  005E                     	ds	1
   522                           
   523                           	psect	maintext
   524  048D                     __pmaintext:	
   525 ;;
   526 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   527 ;;
   528 ;; *************** function _main *****************
   529 ;; Defined at:
   530 ;;		line 42 in file "main.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  write_char      1   62[BANK0 ] unsigned char 
   535 ;;  eeprom_addre    1   61[BANK0 ] unsigned char 
   536 ;;  read_char       1   60[BANK0 ] unsigned char 
   537 ;; Return value:  Size  Location     Type
   538 ;;                  2  181[None  ] int 
   539 ;; Registers used:
   540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   541 ;; Tracked objects:
   542 ;;		On entry : B00/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   546 ;;      Params:         0       0       0       0       0
   547 ;;      Locals:         0       3       0       0       0
   548 ;;      Temps:          0       3       0       0       0
   549 ;;      Totals:         0       6       0       0       0
   550 ;;Total ram usage:        6 bytes
   551 ;; Hardware stack levels required when called:    3
   552 ;; This function calls:
   553 ;;		_EEPROM_ReadByte
   554 ;;		_EEPROM_WriteByte
   555 ;;		_UART_Init
   556 ;;		_UART_Printf
   557 ;; This function is called by:
   558 ;;		Startup code after reset
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           
   563                           ;psect for function _main
   564  048D                     _main:	
   565                           
   566                           ;main.c: 44: unsigned char eeprom_address = 0x00, write_char = 'X', read_char;
   567                           
   568                           ;incstack = 0
   569                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   570  048D  1283               	bcf	3,5	;RP0=0, select bank0
   571  048E  1303               	bcf	3,6	;RP1=0, select bank0
   572  048F  01DD               	clrf	main@eeprom_address
   573  0490  3058               	movlw	88
   574  0491  00D9               	movwf	??_main
   575  0492  0859               	movf	??_main,w
   576  0493  00DE               	movwf	main@write_char
   577                           
   578                           ;main.c: 46: UART_Init(9600);
   579  0494  3000               	movlw	0
   580  0495  00AD               	movwf	UART_Init@v_baudRate_u32+3
   581  0496  3000               	movlw	0
   582  0497  00AC               	movwf	UART_Init@v_baudRate_u32+2
   583  0498  3025               	movlw	37
   584  0499  00AB               	movwf	UART_Init@v_baudRate_u32+1
   585  049A  3080               	movlw	128
   586  049B  00AA               	movwf	UART_Init@v_baudRate_u32
   587  049C  120A  118A  2382  120A  118A  	fcall	_UART_Init
   588                           
   589                           ;main.c: 48: for(write_char='A';write_char<='Z';write_char++)
   590  04A1  3041               	movlw	65
   591  04A2  1283               	bcf	3,5	;RP0=0, select bank0
   592  04A3  1303               	bcf	3,6	;RP1=0, select bank0
   593  04A4  00D9               	movwf	??_main
   594  04A5  0859               	movf	??_main,w
   595  04A6  00DE               	movwf	main@write_char
   596  04A7  305B               	movlw	91
   597  04A8  025E               	subwf	main@write_char,w
   598  04A9  1803               	btfsc	3,0
   599  04AA  2CF4               	goto	l185
   600  04AB                     l1365:	
   601                           
   602                           ;main.c: 49: {
   603                           ;main.c: 50: UART_Printf("\n\rEeprom Write: %c    ",write_char);
   604  04AB  085E               	movf	main@write_char,w
   605  04AC  00D9               	movwf	??_main
   606  04AD  01DA               	clrf	??_main+1
   607  04AE  0859               	movf	??_main,w
   608  04AF  00C3               	movwf	?_UART_Printf
   609  04B0  085A               	movf	??_main+1,w
   610  04B1  00C4               	movwf	?_UART_Printf+1
   611  04B2  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   612  04B3  120A  118A  25E7  120A  118A  	fcall	_UART_Printf
   613                           
   614                           ;main.c: 51: EEPROM_WriteByte(eeprom_address, write_char);
   615  04B8  1283               	bcf	3,5	;RP0=0, select bank0
   616  04B9  1303               	bcf	3,6	;RP1=0, select bank0
   617  04BA  085D               	movf	main@eeprom_address,w
   618  04BB  00D9               	movwf	??_main
   619  04BC  01DA               	clrf	??_main+1
   620  04BD  0859               	movf	??_main,w
   621  04BE  00F3               	movwf	EEPROM_WriteByte@v_eepromAddress_u16
   622  04BF  085A               	movf	??_main+1,w
   623  04C0  00F4               	movwf	EEPROM_WriteByte@v_eepromAddress_u16+1
   624  04C1  085E               	movf	main@write_char,w
   625  04C2  00DB               	movwf	??_main+2
   626  04C3  085B               	movf	??_main+2,w
   627  04C4  00F5               	movwf	EEPROM_WriteByte@v_eepromData_u8
   628  04C5  120A  118A  233D  120A  118A  	fcall	_EEPROM_WriteByte
   629                           
   630                           ;main.c: 54: read_char = EEPROM_ReadByte(eeprom_address);
   631  04CA  1283               	bcf	3,5	;RP0=0, select bank0
   632  04CB  1303               	bcf	3,6	;RP1=0, select bank0
   633  04CC  085D               	movf	main@eeprom_address,w
   634  04CD  00D9               	movwf	??_main
   635  04CE  01DA               	clrf	??_main+1
   636  04CF  0859               	movf	??_main,w
   637  04D0  00F2               	movwf	EEPROM_ReadByte@v_eepromAddress_u16
   638  04D1  085A               	movf	??_main+1,w
   639  04D2  00F3               	movwf	EEPROM_ReadByte@v_eepromAddress_u16+1
   640  04D3  120A  118A  2398  120A  118A  	fcall	_EEPROM_ReadByte
   641  04D8  1283               	bcf	3,5	;RP0=0, select bank0
   642  04D9  1303               	bcf	3,6	;RP1=0, select bank0
   643  04DA  00DB               	movwf	??_main+2
   644  04DB  085B               	movf	??_main+2,w
   645  04DC  00DC               	movwf	main@read_char
   646                           
   647                           ;main.c: 55: UART_Printf("Eeprom Read: %c",read_char);
   648  04DD  085C               	movf	main@read_char,w
   649  04DE  00D9               	movwf	??_main
   650  04DF  01DA               	clrf	??_main+1
   651  04E0  0859               	movf	??_main,w
   652  04E1  00C3               	movwf	?_UART_Printf
   653  04E2  085A               	movf	??_main+1,w
   654  04E3  00C4               	movwf	?_UART_Printf+1
   655  04E4  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   656  04E5  120A  118A  25E7  120A  118A  	fcall	_UART_Printf
   657  04EA  3001               	movlw	1
   658  04EB  1283               	bcf	3,5	;RP0=0, select bank0
   659  04EC  1303               	bcf	3,6	;RP1=0, select bank0
   660  04ED  00D9               	movwf	??_main
   661  04EE  0859               	movf	??_main,w
   662  04EF  07DE               	addwf	main@write_char,f
   663  04F0  305B               	movlw	91
   664  04F1  025E               	subwf	main@write_char,w
   665  04F2  1C03               	skipc
   666  04F3  2CAB               	goto	l1365
   667  04F4                     l185:	
   668                           ;main.c: 56: }
   669                           ;main.c: 58: while (1);
   670                           
   671  04F4  2CF4               	goto	l185
   672  04F5                     __end_of_main:	
   673                           ;main.c: 60: return 0;
   674                           ;	Return value of _main is never used
   675                           
   676                           
   677                           	psect	text1
   678  05E7                     __ptext1:	
   679 ;; *************** function _UART_Printf *****************
   680 ;; Defined at:
   681 ;;		line 413 in file "../00-libfiles/uart.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;  argList         1    wreg     PTR const unsigned char 
   684 ;;		 -> STR_2(16), STR_1(23), 
   685 ;; Auto vars:     Size  Location     Type
   686 ;;  argList         1   40[BANK0 ] PTR const unsigned char 
   687 ;;		 -> STR_2(16), STR_1(23), 
   688 ;;  v_num_u32       4   47[BANK0 ] unsigned long 
   689 ;;  v_num_s32       4   41[BANK0 ] long 
   690 ;;  v_num_u16       2   51[BANK0 ] unsigned int 
   691 ;;  v_num_s16       2   45[BANK0 ] int 
   692 ;;  argp            1   56[BANK0 ] PTR void [1]
   693 ;;		 -> ?_UART_Printf(1), 
   694 ;;  v_numOfDigit    1   55[BANK0 ] unsigned char 
   695 ;;  ch              1   54[BANK0 ] unsigned char 
   696 ;;  ptr             1   53[BANK0 ] PTR const unsigned char 
   697 ;;		 -> STR_2(16), STR_1(23), 
   698 ;;  str             1   39[BANK0 ] PTR unsigned char 
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   708 ;;      Params:         0       2       0       0       0
   709 ;;      Locals:         0      18       0       0       0
   710 ;;      Temps:          0       2       0       0       0
   711 ;;      Totals:         0      22       0       0       0
   712 ;;Total ram usage:       22 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    2
   715 ;; This function calls:
   716 ;;		_UART_TxChar
   717 ;;		_UART_TxNumber
   718 ;;		_UART_TxString
   719 ;;		___bmul
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           
   726                           ;psect for function _UART_Printf
   727  05E7                     _UART_Printf:	
   728                           
   729                           ;incstack = 0
   730                           ; Regs used in _UART_Printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   731                           ;UART_Printf@argList stored from wreg
   732  05E7  1283               	bcf	3,5	;RP0=0, select bank0
   733  05E8  1303               	bcf	3,6	;RP1=0, select bank0
   734  05E9  00C8               	movwf	UART_Printf@argList
   735                           
   736                           ;uart.c: 415: const char *ptr;
   737                           ;uart.c: 416: va_list argp;
   738                           ;uart.c: 417: sint16_t v_num_s16;
   739                           ;uart.c: 418: sint32_t v_num_s32;
   740                           ;uart.c: 419: uint16_t v_num_u16;
   741                           ;uart.c: 420: uint32_t v_num_u32;
   742                           ;uart.c: 421: char *str;
   743                           ;uart.c: 422: char ch;
   744                           ;uart.c: 423: uint8_t v_numOfDigitsToTransmit_u8;
   745                           ;uart.c: 429: *argp = __va_start();
   746  05EA  3043               	movlw	(low (?_UART_Printf| 0))& (0+255)
   747  05EB  00C5               	movwf	??_UART_Printf
   748  05EC  0845               	movf	??_UART_Printf,w
   749  05ED  00D8               	movwf	UART_Printf@argp
   750                           
   751                           ;uart.c: 432: for(ptr = argList; *ptr != '\0'; ptr++)
   752  05EE  0848               	movf	UART_Printf@argList,w
   753  05EF  00C5               	movwf	??_UART_Printf
   754  05F0  0845               	movf	??_UART_Printf,w
   755  05F1  00D5               	movwf	UART_Printf@ptr
   756  05F2                     l1299:	
   757  05F2  0855               	movf	UART_Printf@ptr,w
   758  05F3  0084               	movwf	4
   759  05F4  120A  118A  2003  120A  118A  	fcall	stringdir
   760  05F9  3A00               	xorlw	0
   761  05FA  1903               	btfsc	3,2
   762  05FB  0008               	return
   763                           
   764                           ;uart.c: 433: {
   765                           ;uart.c: 435: ch= *ptr;
   766  05FC  0855               	movf	UART_Printf@ptr,w
   767  05FD  0084               	movwf	4
   768  05FE  120A  118A  2003  120A  118A  	fcall	stringdir
   769  0603  00C5               	movwf	??_UART_Printf
   770  0604  0845               	movf	??_UART_Printf,w
   771  0605  00D6               	movwf	UART_Printf@ch
   772                           
   773                           ;uart.c: 436: if(ch == '%')
   774  0606  3025               	movlw	37
   775  0607  0656               	xorwf	UART_Printf@ch,w
   776  0608  1D03               	btfss	3,2
   777  0609  2FEF               	goto	l1295
   778                           
   779                           ;uart.c: 437: {
   780                           ;uart.c: 438: ptr++;
   781  060A  3001               	movlw	1
   782  060B  00C5               	movwf	??_UART_Printf
   783  060C  0845               	movf	??_UART_Printf,w
   784  060D  07D5               	addwf	UART_Printf@ptr,f
   785                           
   786                           ;uart.c: 439: ch = *ptr;
   787  060E  0855               	movf	UART_Printf@ptr,w
   788  060F  0084               	movwf	4
   789  0610  120A  118A  2003  120A  118A  	fcall	stringdir
   790  0615  00C5               	movwf	??_UART_Printf
   791  0616  0845               	movf	??_UART_Printf,w
   792  0617  00D6               	movwf	UART_Printf@ch
   793                           
   794                           ;uart.c: 440: if((ch>=0x30) && (ch<=0x39))
   795  0618  3030               	movlw	48
   796  0619  0256               	subwf	UART_Printf@ch,w
   797  061A  1C03               	skipc
   798  061B  2E49               	goto	l1207
   799  061C  303A               	movlw	58
   800  061D  0256               	subwf	UART_Printf@ch,w
   801  061E  1803               	skipnc
   802  061F  2E49               	goto	l1207
   803                           
   804                           ;uart.c: 441: {
   805                           ;uart.c: 442: v_numOfDigitsToTransmit_u8 = 0;
   806  0620  01D7               	clrf	UART_Printf@v_numOfDigitsToTransmit_u8
   807  0621                     l1203:	
   808                           ;uart.c: 443: while((ch>=0x30) && (ch<=0x39))
   809                           
   810  0621  3030               	movlw	48
   811  0622  0256               	subwf	UART_Printf@ch,w
   812  0623  1C03               	skipc
   813  0624  2FBD               	goto	l1293
   814  0625  303A               	movlw	58
   815  0626  0256               	subwf	UART_Printf@ch,w
   816  0627  1803               	btfsc	3,0
   817  0628  2FBD               	goto	l1293
   818                           
   819                           ;uart.c: 444: {
   820                           ;uart.c: 445: v_numOfDigitsToTransmit_u8 = (v_numOfDigitsToTransmit_u8 * 10) + (ch-0x30)
      +                          ;
   821  0629  300A               	movlw	10
   822  062A  00C5               	movwf	??_UART_Printf
   823  062B  0845               	movf	??_UART_Printf,w
   824  062C  00A0               	movwf	___bmul@multiplicand
   825  062D  0857               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
   826  062E  120A  118A  235A  120A  118A  	fcall	___bmul
   827  0633  1283               	bcf	3,5	;RP0=0, select bank0
   828  0634  1303               	bcf	3,6	;RP1=0, select bank0
   829  0635  0756               	addwf	UART_Printf@ch,w
   830  0636  3ED0               	addlw	208
   831  0637  00C6               	movwf	??_UART_Printf+1
   832  0638  0846               	movf	??_UART_Printf+1,w
   833  0639  00D7               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
   834                           
   835                           ;uart.c: 446: ptr++;
   836  063A  3001               	movlw	1
   837  063B  00C5               	movwf	??_UART_Printf
   838  063C  0845               	movf	??_UART_Printf,w
   839  063D  07D5               	addwf	UART_Printf@ptr,f
   840                           
   841                           ;uart.c: 447: ch = *ptr;
   842  063E  0855               	movf	UART_Printf@ptr,w
   843  063F  0084               	movwf	4
   844  0640  120A  118A  2003  120A  118A  	fcall	stringdir
   845  0645  00C5               	movwf	??_UART_Printf
   846  0646  0845               	movf	??_UART_Printf,w
   847  0647  00D6               	movwf	UART_Printf@ch
   848  0648  2E21               	goto	l1203
   849  0649                     l1207:	
   850                           ;uart.c: 448: }
   851                           ;uart.c: 449: }
   852                           
   853                           
   854                           ;uart.c: 450: else
   855                           ;uart.c: 451: {
   856                           ;uart.c: 452: v_numOfDigitsToTransmit_u8 = 0xffu;
   857  0649  30FF               	movlw	255
   858  064A  00C5               	movwf	??_UART_Printf
   859  064B  0845               	movf	??_UART_Printf,w
   860  064C  00D7               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
   861                           
   862                           ;uart.c: 453: }
   863                           ;uart.c: 456: switch(ch)
   864  064D  2FBD               	goto	l1293
   865  064E                     l1209:	
   866                           ;uart.c: 457: {
   867                           ;uart.c: 458: case 'C':
   868                           
   869                           
   870                           ;uart.c: 459: case 'c':
   871                           ;uart.c: 460: ch = (*(uint8_t *)__va_arg((*(uint8_t **)argp), (uint8_t)0));
   872  064E  0858               	movf	UART_Printf@argp,w
   873  064F  0084               	movwf	4
   874  0650  1383               	bcf	3,7	;select IRP bank0
   875  0651  0800               	movf	0,w
   876  0652  00C5               	movwf	??_UART_Printf
   877  0653  0845               	movf	??_UART_Printf,w
   878  0654  00D6               	movwf	UART_Printf@ch
   879  0655  3002               	movlw	2
   880  0656  00C5               	movwf	??_UART_Printf
   881  0657  0845               	movf	??_UART_Printf,w
   882  0658  07D8               	addwf	UART_Printf@argp,f
   883  0659  2FEF               	goto	l1295
   884  065A                     l1215:	
   885                           ;uart.c: 464: case 'd':
   886                           
   887                           ;uart.c: 462: break;
   888                           
   889                           ;uart.c: 461: UART_TxChar(ch);
   890                           
   891                           
   892                           ;uart.c: 465: v_num_s16 = (*(sint16_t *)__va_arg((*(sint16_t **)argp), (sint16_t)0));
   893  065A  1283               	bcf	3,5	;RP0=0, select bank0
   894  065B  1303               	bcf	3,6	;RP1=0, select bank0
   895  065C  0858               	movf	UART_Printf@argp,w
   896  065D  0084               	movwf	4
   897  065E  1383               	bcf	3,7	;select IRP bank0
   898  065F  0800               	movf	0,w
   899  0660  00CD               	movwf	UART_Printf@v_num_s16
   900  0661  0A84               	incf	4,f
   901  0662  0800               	movf	0,w
   902  0663  00CE               	movwf	UART_Printf@v_num_s16+1
   903  0664  3002               	movlw	2
   904  0665  00C5               	movwf	??_UART_Printf
   905  0666  0845               	movf	??_UART_Printf,w
   906  0667  07D8               	addwf	UART_Printf@argp,f
   907                           
   908                           ;uart.c: 466: if(v_num_s16<0)
   909  0668  1FCE               	btfss	UART_Printf@v_num_s16+1,7
   910  0669  2E75               	goto	l1225
   911                           
   912                           ;uart.c: 467: {
   913                           ;uart.c: 468: v_num_s16 = -v_num_s16;
   914  066A  09CD               	comf	UART_Printf@v_num_s16,f
   915  066B  09CE               	comf	UART_Printf@v_num_s16+1,f
   916  066C  0ACD               	incf	UART_Printf@v_num_s16,f
   917  066D  1903               	skipnz
   918  066E  0ACE               	incf	UART_Printf@v_num_s16+1,f
   919                           
   920                           ;uart.c: 469: UART_TxChar('-');
   921  066F  302D               	movlw	45
   922  0670  120A  118A  2346  120A  118A  	fcall	_UART_TxChar
   923  0675                     l1225:	
   924                           
   925                           ;uart.c: 470: }
   926                           ;uart.c: 471: UART_TxNumber(10u,v_num_s16,v_numOfDigitsToTransmit_u8);
   927  0675  1283               	bcf	3,5	;RP0=0, select bank0
   928  0676  1303               	bcf	3,6	;RP1=0, select bank0
   929  0677  084D               	movf	UART_Printf@v_num_s16,w
   930  0678  00A4               	movwf	UART_TxNumber@v_number_u32
   931  0679  084E               	movf	UART_Printf@v_num_s16+1,w
   932  067A  00A5               	movwf	UART_TxNumber@v_number_u32+1
   933  067B  3000               	movlw	0
   934  067C  1BA5               	btfsc	UART_TxNumber@v_number_u32+1,7
   935  067D  30FF               	movlw	255
   936  067E  00A6               	movwf	UART_TxNumber@v_number_u32+2
   937  067F  00A7               	movwf	UART_TxNumber@v_number_u32+3
   938  0680  0857               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
   939  0681  00C5               	movwf	??_UART_Printf
   940  0682  0845               	movf	??_UART_Printf,w
   941  0683  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
   942  0684  300A               	movlw	10
   943  0685  120A  118A  24F5  120A  118A  	fcall	_UART_TxNumber
   944                           
   945                           ;uart.c: 472: break;
   946  068A  2FF5               	goto	l1297
   947  068B                     l1227:	
   948                           ;uart.c: 474: case 'D':
   949                           
   950                           
   951                           ;uart.c: 475: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
   952  068B  1283               	bcf	3,5	;RP0=0, select bank0
   953  068C  1303               	bcf	3,6	;RP1=0, select bank0
   954  068D  0858               	movf	UART_Printf@argp,w
   955  068E  0084               	movwf	4
   956  068F  1383               	bcf	3,7	;select IRP bank0
   957  0690  0800               	movf	0,w
   958  0691  00C9               	movwf	UART_Printf@v_num_s32
   959  0692  0A84               	incf	4,f
   960  0693  0800               	movf	0,w
   961  0694  00CA               	movwf	UART_Printf@v_num_s32+1
   962  0695  0A84               	incf	4,f
   963  0696  0800               	movf	0,w
   964  0697  00CB               	movwf	UART_Printf@v_num_s32+2
   965  0698  0A84               	incf	4,f
   966  0699  0800               	movf	0,w
   967  069A  00CC               	movwf	UART_Printf@v_num_s32+3
   968  069B  3004               	movlw	4
   969  069C  00C5               	movwf	??_UART_Printf
   970  069D  0845               	movf	??_UART_Printf,w
   971  069E  07D8               	addwf	UART_Printf@argp,f
   972                           
   973                           ;uart.c: 476: if(v_num_s32<0)
   974  069F  1FCC               	btfss	UART_Printf@v_num_s32+3,7
   975  06A0  2EB2               	goto	l1237
   976                           
   977                           ;uart.c: 477: {
   978                           ;uart.c: 478: v_num_s32 = -v_num_s32;
   979  06A1  09C9               	comf	UART_Printf@v_num_s32,f
   980  06A2  09CA               	comf	UART_Printf@v_num_s32+1,f
   981  06A3  09CB               	comf	UART_Printf@v_num_s32+2,f
   982  06A4  09CC               	comf	UART_Printf@v_num_s32+3,f
   983  06A5  0AC9               	incf	UART_Printf@v_num_s32,f
   984  06A6  1903               	skipnz
   985  06A7  0ACA               	incf	UART_Printf@v_num_s32+1,f
   986  06A8  1903               	skipnz
   987  06A9  0ACB               	incf	UART_Printf@v_num_s32+2,f
   988  06AA  1903               	skipnz
   989  06AB  0ACC               	incf	UART_Printf@v_num_s32+3,f
   990                           
   991                           ;uart.c: 479: UART_TxChar('-');
   992  06AC  302D               	movlw	45
   993  06AD  120A  118A  2346  120A  118A  	fcall	_UART_TxChar
   994  06B2                     l1237:	
   995                           
   996                           ;uart.c: 480: }
   997                           ;uart.c: 481: UART_TxNumber(10u,v_num_s32,v_numOfDigitsToTransmit_u8);
   998  06B2  1283               	bcf	3,5	;RP0=0, select bank0
   999  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  1000  06B4  084C               	movf	UART_Printf@v_num_s32+3,w
  1001  06B5  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1002  06B6  084B               	movf	UART_Printf@v_num_s32+2,w
  1003  06B7  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1004  06B8  084A               	movf	UART_Printf@v_num_s32+1,w
  1005  06B9  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1006  06BA  0849               	movf	UART_Printf@v_num_s32,w
  1007  06BB  00A4               	movwf	UART_TxNumber@v_number_u32
  1008  06BC  0857               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1009  06BD  00C5               	movwf	??_UART_Printf
  1010  06BE  0845               	movf	??_UART_Printf,w
  1011  06BF  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1012  06C0  300A               	movlw	10
  1013  06C1  120A  118A  24F5  120A  118A  	fcall	_UART_TxNumber
  1014                           
  1015                           ;uart.c: 482: break;
  1016  06C6  2FF5               	goto	l1297
  1017  06C7                     l1239:	
  1018                           ;uart.c: 484: case 'u':
  1019                           
  1020                           
  1021                           ;uart.c: 485: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1022  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1023  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1024  06C9  0858               	movf	UART_Printf@argp,w
  1025  06CA  0084               	movwf	4
  1026  06CB  1383               	bcf	3,7	;select IRP bank0
  1027  06CC  0800               	movf	0,w
  1028  06CD  00D3               	movwf	UART_Printf@v_num_u16
  1029  06CE  0A84               	incf	4,f
  1030  06CF  0800               	movf	0,w
  1031  06D0  00D4               	movwf	UART_Printf@v_num_u16+1
  1032  06D1  3002               	movlw	2
  1033  06D2  00C5               	movwf	??_UART_Printf
  1034  06D3  0845               	movf	??_UART_Printf,w
  1035  06D4  07D8               	addwf	UART_Printf@argp,f
  1036                           
  1037                           ;uart.c: 486: UART_TxNumber(10u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1038  06D5  0853               	movf	UART_Printf@v_num_u16,w
  1039  06D6  00A4               	movwf	UART_TxNumber@v_number_u32
  1040  06D7  0854               	movf	UART_Printf@v_num_u16+1,w
  1041  06D8  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1042  06D9  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1043  06DA  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1044  06DB  0857               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1045  06DC  00C5               	movwf	??_UART_Printf
  1046  06DD  0845               	movf	??_UART_Printf,w
  1047  06DE  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1048  06DF  300A               	movlw	10
  1049  06E0  120A  118A  24F5  120A  118A  	fcall	_UART_TxNumber
  1050                           
  1051                           ;uart.c: 487: break;
  1052  06E5  2FF5               	goto	l1297
  1053  06E6                     l1245:	
  1054                           ;uart.c: 489: case 'U':
  1055                           
  1056                           
  1057                           ;uart.c: 490: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1058  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  1059  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  1060  06E8  0858               	movf	UART_Printf@argp,w
  1061  06E9  0084               	movwf	4
  1062  06EA  1383               	bcf	3,7	;select IRP bank0
  1063  06EB  0800               	movf	0,w
  1064  06EC  00CF               	movwf	UART_Printf@v_num_u32
  1065  06ED  0A84               	incf	4,f
  1066  06EE  0800               	movf	0,w
  1067  06EF  00D0               	movwf	UART_Printf@v_num_u32+1
  1068  06F0  0A84               	incf	4,f
  1069  06F1  0800               	movf	0,w
  1070  06F2  00D1               	movwf	UART_Printf@v_num_u32+2
  1071  06F3  0A84               	incf	4,f
  1072  06F4  0800               	movf	0,w
  1073  06F5  00D2               	movwf	UART_Printf@v_num_u32+3
  1074  06F6  3004               	movlw	4
  1075  06F7  00C5               	movwf	??_UART_Printf
  1076  06F8  0845               	movf	??_UART_Printf,w
  1077  06F9  07D8               	addwf	UART_Printf@argp,f
  1078                           
  1079                           ;uart.c: 491: UART_TxNumber(10u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1080  06FA  0852               	movf	UART_Printf@v_num_u32+3,w
  1081  06FB  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1082  06FC  0851               	movf	UART_Printf@v_num_u32+2,w
  1083  06FD  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1084  06FE  0850               	movf	UART_Printf@v_num_u32+1,w
  1085  06FF  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1086  0700  084F               	movf	UART_Printf@v_num_u32,w
  1087  0701  00A4               	movwf	UART_TxNumber@v_number_u32
  1088  0702  0857               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1089  0703  00C5               	movwf	??_UART_Printf
  1090  0704  0845               	movf	??_UART_Printf,w
  1091  0705  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1092  0706  300A               	movlw	10
  1093  0707  120A  118A  24F5  120A  118A  	fcall	_UART_TxNumber
  1094                           
  1095                           ;uart.c: 492: break;
  1096  070C  2FF5               	goto	l1297
  1097  070D                     l1251:	
  1098                           ;uart.c: 494: case 'x':
  1099                           
  1100                           
  1101                           ;uart.c: 495: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1102  070D  1283               	bcf	3,5	;RP0=0, select bank0
  1103  070E  1303               	bcf	3,6	;RP1=0, select bank0
  1104  070F  0858               	movf	UART_Printf@argp,w
  1105  0710  0084               	movwf	4
  1106  0711  1383               	bcf	3,7	;select IRP bank0
  1107  0712  0800               	movf	0,w
  1108  0713  00D3               	movwf	UART_Printf@v_num_u16
  1109  0714  0A84               	incf	4,f
  1110  0715  0800               	movf	0,w
  1111  0716  00D4               	movwf	UART_Printf@v_num_u16+1
  1112  0717  3002               	movlw	2
  1113  0718  00C5               	movwf	??_UART_Printf
  1114  0719  0845               	movf	??_UART_Printf,w
  1115  071A  07D8               	addwf	UART_Printf@argp,f
  1116                           
  1117                           ;uart.c: 496: UART_TxNumber(16u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1118  071B  0853               	movf	UART_Printf@v_num_u16,w
  1119  071C  00A4               	movwf	UART_TxNumber@v_number_u32
  1120  071D  0854               	movf	UART_Printf@v_num_u16+1,w
  1121  071E  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1122  071F  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1123  0720  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1124  0721  0857               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1125  0722  00C5               	movwf	??_UART_Printf
  1126  0723  0845               	movf	??_UART_Printf,w
  1127  0724  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1128  0725  3010               	movlw	16
  1129  0726  120A  118A  24F5  120A  118A  	fcall	_UART_TxNumber
  1130                           
  1131                           ;uart.c: 497: break;
  1132  072B  2FF5               	goto	l1297
  1133  072C                     l1257:	
  1134                           ;uart.c: 499: case 'X':
  1135                           
  1136                           
  1137                           ;uart.c: 500: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1138  072C  1283               	bcf	3,5	;RP0=0, select bank0
  1139  072D  1303               	bcf	3,6	;RP1=0, select bank0
  1140  072E  0858               	movf	UART_Printf@argp,w
  1141  072F  0084               	movwf	4
  1142  0730  1383               	bcf	3,7	;select IRP bank0
  1143  0731  0800               	movf	0,w
  1144  0732  00CF               	movwf	UART_Printf@v_num_u32
  1145  0733  0A84               	incf	4,f
  1146  0734  0800               	movf	0,w
  1147  0735  00D0               	movwf	UART_Printf@v_num_u32+1
  1148  0736  0A84               	incf	4,f
  1149  0737  0800               	movf	0,w
  1150  0738  00D1               	movwf	UART_Printf@v_num_u32+2
  1151  0739  0A84               	incf	4,f
  1152  073A  0800               	movf	0,w
  1153  073B  00D2               	movwf	UART_Printf@v_num_u32+3
  1154  073C  3004               	movlw	4
  1155  073D  00C5               	movwf	??_UART_Printf
  1156  073E  0845               	movf	??_UART_Printf,w
  1157  073F  07D8               	addwf	UART_Printf@argp,f
  1158                           
  1159                           ;uart.c: 501: UART_TxNumber(16u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1160  0740  0852               	movf	UART_Printf@v_num_u32+3,w
  1161  0741  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1162  0742  0851               	movf	UART_Printf@v_num_u32+2,w
  1163  0743  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1164  0744  0850               	movf	UART_Printf@v_num_u32+1,w
  1165  0745  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1166  0746  084F               	movf	UART_Printf@v_num_u32,w
  1167  0747  00A4               	movwf	UART_TxNumber@v_number_u32
  1168  0748  0857               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1169  0749  00C5               	movwf	??_UART_Printf
  1170  074A  0845               	movf	??_UART_Printf,w
  1171  074B  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1172  074C  3010               	movlw	16
  1173  074D  120A  118A  24F5  120A  118A  	fcall	_UART_TxNumber
  1174                           
  1175                           ;uart.c: 502: break;
  1176  0752  2FF5               	goto	l1297
  1177  0753                     l1263:	
  1178                           ;uart.c: 505: case 'b':
  1179                           
  1180                           
  1181                           ;uart.c: 506: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1182  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1183  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1184  0755  0858               	movf	UART_Printf@argp,w
  1185  0756  0084               	movwf	4
  1186  0757  1383               	bcf	3,7	;select IRP bank0
  1187  0758  0800               	movf	0,w
  1188  0759  00D3               	movwf	UART_Printf@v_num_u16
  1189  075A  0A84               	incf	4,f
  1190  075B  0800               	movf	0,w
  1191  075C  00D4               	movwf	UART_Printf@v_num_u16+1
  1192  075D  3002               	movlw	2
  1193  075E  00C5               	movwf	??_UART_Printf
  1194  075F  0845               	movf	??_UART_Printf,w
  1195  0760  07D8               	addwf	UART_Printf@argp,f
  1196                           
  1197                           ;uart.c: 508: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1198  0761  0A57               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1199  0762  1D03               	btfss	3,2
  1200  0763  2F68               	goto	l1271
  1201                           
  1202                           ;uart.c: 509: v_numOfDigitsToTransmit_u8 = 16;
  1203  0764  3010               	movlw	16
  1204  0765  00C5               	movwf	??_UART_Printf
  1205  0766  0845               	movf	??_UART_Printf,w
  1206  0767  00D7               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1207  0768                     l1271:	
  1208                           
  1209                           ;uart.c: 511: UART_TxNumber(2u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1210  0768  0853               	movf	UART_Printf@v_num_u16,w
  1211  0769  00A4               	movwf	UART_TxNumber@v_number_u32
  1212  076A  0854               	movf	UART_Printf@v_num_u16+1,w
  1213  076B  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1214  076C  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1215  076D  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1216  076E  0857               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1217  076F  00C5               	movwf	??_UART_Printf
  1218  0770  0845               	movf	??_UART_Printf,w
  1219  0771  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1220  0772  3002               	movlw	2
  1221  0773  120A  118A  24F5  120A  118A  	fcall	_UART_TxNumber
  1222                           
  1223                           ;uart.c: 512: break;
  1224  0778  2FF5               	goto	l1297
  1225  0779                     l1273:	
  1226                           ;uart.c: 514: case 'B':
  1227                           
  1228                           
  1229                           ;uart.c: 515: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1230  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1231  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1232  077B  0858               	movf	UART_Printf@argp,w
  1233  077C  0084               	movwf	4
  1234  077D  1383               	bcf	3,7	;select IRP bank0
  1235  077E  0800               	movf	0,w
  1236  077F  00CF               	movwf	UART_Printf@v_num_u32
  1237  0780  0A84               	incf	4,f
  1238  0781  0800               	movf	0,w
  1239  0782  00D0               	movwf	UART_Printf@v_num_u32+1
  1240  0783  0A84               	incf	4,f
  1241  0784  0800               	movf	0,w
  1242  0785  00D1               	movwf	UART_Printf@v_num_u32+2
  1243  0786  0A84               	incf	4,f
  1244  0787  0800               	movf	0,w
  1245  0788  00D2               	movwf	UART_Printf@v_num_u32+3
  1246  0789  3004               	movlw	4
  1247  078A  00C5               	movwf	??_UART_Printf
  1248  078B  0845               	movf	??_UART_Printf,w
  1249  078C  07D8               	addwf	UART_Printf@argp,f
  1250                           
  1251                           ;uart.c: 517: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1252  078D  0A57               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1253  078E  1D03               	btfss	3,2
  1254  078F  2F94               	goto	l1281
  1255                           
  1256                           ;uart.c: 518: v_numOfDigitsToTransmit_u8 = 32;
  1257  0790  3020               	movlw	32
  1258  0791  00C5               	movwf	??_UART_Printf
  1259  0792  0845               	movf	??_UART_Printf,w
  1260  0793  00D7               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1261  0794                     l1281:	
  1262                           
  1263                           ;uart.c: 520: UART_TxNumber(2u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1264  0794  0852               	movf	UART_Printf@v_num_u32+3,w
  1265  0795  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1266  0796  0851               	movf	UART_Printf@v_num_u32+2,w
  1267  0797  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1268  0798  0850               	movf	UART_Printf@v_num_u32+1,w
  1269  0799  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1270  079A  084F               	movf	UART_Printf@v_num_u32,w
  1271  079B  00A4               	movwf	UART_TxNumber@v_number_u32
  1272  079C  0857               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1273  079D  00C5               	movwf	??_UART_Printf
  1274  079E  0845               	movf	??_UART_Printf,w
  1275  079F  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1276  07A0  3002               	movlw	2
  1277  07A1  120A  118A  24F5  120A  118A  	fcall	_UART_TxNumber
  1278                           
  1279                           ;uart.c: 525: case 'f':
  1280                           ;uart.c: 530: break;
  1281                           
  1282                           ;uart.c: 524: case 'F':
  1283                           
  1284                           ;uart.c: 521: break;
  1285  07A6  2FF5               	goto	l1297
  1286  07A7                     l1283:	
  1287                           ;uart.c: 533: case 'S':
  1288                           
  1289                           
  1290                           ;uart.c: 534: case 's':
  1291                           ;uart.c: 535: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  1292  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1293  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1294  07A9  0858               	movf	UART_Printf@argp,w
  1295  07AA  0084               	movwf	4
  1296  07AB  1383               	bcf	3,7	;select IRP bank0
  1297  07AC  0800               	movf	0,w
  1298  07AD  00C5               	movwf	??_UART_Printf
  1299  07AE  0845               	movf	??_UART_Printf,w
  1300  07AF  00C7               	movwf	UART_Printf@str
  1301  07B0  3001               	movlw	1
  1302  07B1  00C5               	movwf	??_UART_Printf
  1303  07B2  0845               	movf	??_UART_Printf,w
  1304  07B3  07D8               	addwf	UART_Printf@argp,f
  1305                           
  1306                           ;uart.c: 536: UART_TxString(str);
  1307  07B4  0847               	movf	UART_Printf@str,w
  1308  07B5  120A  118A  236D  120A  118A  	fcall	_UART_TxString
  1309                           
  1310                           ;uart.c: 537: break;
  1311  07BA  2FF5               	goto	l1297
  1312  07BB                     l1289:	
  1313                           ;uart.c: 539: case '%':
  1314                           
  1315                           
  1316                           ;uart.c: 540: UART_TxChar('%');
  1317  07BB  3025               	movlw	37
  1318  07BC  2FF0               	goto	L1
  1319  07BD                     l1293:	
  1320                           ;uart.c: 542: }
  1321                           
  1322                           ;uart.c: 541: break;
  1323                           
  1324  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1325  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1326  07BF  0856               	movf	UART_Printf@ch,w
  1327                           
  1328                           ; Switch size 1, requested type "space"
  1329                           ; Number of cases is 15, Range of values is 37 to 120
  1330                           ; switch strategies available:
  1331                           ; Name         Instructions Cycles
  1332                           ; simple_byte           46    24 (average)
  1333                           ; direct_byte          263    11 (fixed)
  1334                           ; jumptable            263     9 (fixed)
  1335                           ;	Chosen strategy is simple_byte
  1336  07C0  3A25               	xorlw	37	; case 37
  1337  07C1  1903               	skipnz
  1338  07C2  2FBB               	goto	l1289
  1339  07C3  3A67               	xorlw	103	; case 66
  1340  07C4  1903               	skipnz
  1341  07C5  2F79               	goto	l1273
  1342  07C6  3A01               	xorlw	1	; case 67
  1343  07C7  1903               	skipnz
  1344  07C8  2E4E               	goto	l1209
  1345  07C9  3A07               	xorlw	7	; case 68
  1346  07CA  1903               	skipnz
  1347  07CB  2E8B               	goto	l1227
  1348  07CC  3A02               	xorlw	2	; case 70
  1349  07CD  1903               	skipnz
  1350  07CE  2FF5               	goto	l1297
  1351  07CF  3A15               	xorlw	21	; case 83
  1352  07D0  1903               	skipnz
  1353  07D1  2FA7               	goto	l1283
  1354  07D2  3A06               	xorlw	6	; case 85
  1355  07D3  1903               	skipnz
  1356  07D4  2EE6               	goto	l1245
  1357  07D5  3A0D               	xorlw	13	; case 88
  1358  07D6  1903               	skipnz
  1359  07D7  2F2C               	goto	l1257
  1360  07D8  3A3A               	xorlw	58	; case 98
  1361  07D9  1903               	skipnz
  1362  07DA  2F53               	goto	l1263
  1363  07DB  3A01               	xorlw	1	; case 99
  1364  07DC  1903               	skipnz
  1365  07DD  2E4E               	goto	l1209
  1366  07DE  3A07               	xorlw	7	; case 100
  1367  07DF  1903               	skipnz
  1368  07E0  2E5A               	goto	l1215
  1369  07E1  3A02               	xorlw	2	; case 102
  1370  07E2  1903               	skipnz
  1371  07E3  2FF5               	goto	l1297
  1372  07E4  3A15               	xorlw	21	; case 115
  1373  07E5  1903               	skipnz
  1374  07E6  2FA7               	goto	l1283
  1375  07E7  3A06               	xorlw	6	; case 117
  1376  07E8  1903               	skipnz
  1377  07E9  2EC7               	goto	l1239
  1378  07EA  3A0D               	xorlw	13	; case 120
  1379  07EB  1903               	skipnz
  1380  07EC  2F0D               	goto	l1251
  1381  07ED  2FF5               	goto	l1297
  1382                           
  1383                           ;uart.c: 543: }
  1384  07EE  2FF5               	goto	l1297
  1385  07EF                     l1295:	
  1386                           
  1387                           ;uart.c: 544: else
  1388                           ;uart.c: 545: {
  1389                           ;uart.c: 547: UART_TxChar(ch);
  1390  07EF  0856               	movf	UART_Printf@ch,w
  1391  07F0                     L1:	
  1392  07F0  120A  118A  2346  120A  118A  	fcall	_UART_TxChar
  1393  07F5                     l1297:	
  1394  07F5  3001               	movlw	1
  1395  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  1396  07F7  1303               	bcf	3,6	;RP1=0, select bank0
  1397  07F8  00C5               	movwf	??_UART_Printf
  1398  07F9  0845               	movf	??_UART_Printf,w
  1399  07FA  07D5               	addwf	UART_Printf@ptr,f
  1400  07FB  2DF2               	goto	l1299
  1401  07FC                     __end_of_UART_Printf:	
  1402                           
  1403                           	psect	text2
  1404  036D                     __ptext2:	
  1405 ;; *************** function _UART_TxString *****************
  1406 ;; Defined at:
  1407 ;;		line 169 in file "../00-libfiles/uart.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  ptr_string      1    wreg     PTR const unsigned char 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  ptr_string      1    2[COMMON] PTR const unsigned char 
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1421 ;;      Params:         0       0       0       0       0
  1422 ;;      Locals:         1       0       0       0       0
  1423 ;;      Temps:          1       0       0       0       0
  1424 ;;      Totals:         2       0       0       0       0
  1425 ;;Total ram usage:        2 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    1
  1428 ;; This function calls:
  1429 ;;		_UART_TxChar
  1430 ;; This function is called by:
  1431 ;;		_UART_Printf
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           
  1436                           ;psect for function _UART_TxString
  1437  036D                     _UART_TxString:	
  1438                           
  1439                           ;incstack = 0
  1440                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1441                           ;UART_TxString@ptr_string stored from wreg
  1442  036D  00F2               	movwf	UART_TxString@ptr_string
  1443  036E                     l1109:	
  1444                           ;uart.c: 171: while(*ptr_string)
  1445                           
  1446  036E  0872               	movf	UART_TxString@ptr_string,w
  1447  036F  0084               	movwf	4
  1448  0370  1383               	bcf	3,7	;select IRP bank0
  1449  0371  0800               	movf	0,w
  1450  0372  1903               	btfsc	3,2
  1451  0373  0008               	return
  1452                           
  1453                           ;uart.c: 172: UART_TxChar(*ptr_string++);
  1454  0374  0872               	movf	UART_TxString@ptr_string,w
  1455  0375  0084               	movwf	4
  1456  0376  1383               	bcf	3,7	;select IRP bank0
  1457  0377  0800               	movf	0,w
  1458  0378  120A  118A  2346  120A  118A  	fcall	_UART_TxChar
  1459  037D  3001               	movlw	1
  1460  037E  00F1               	movwf	??_UART_TxString
  1461  037F  0871               	movf	??_UART_TxString,w
  1462  0380  07F2               	addwf	UART_TxString@ptr_string,f
  1463  0381  2B6E               	goto	l1109
  1464  0382                     __end_of_UART_TxString:	
  1465                           
  1466                           	psect	text3
  1467  04F5                     __ptext3:	
  1468 ;; *************** function _UART_TxNumber *****************
  1469 ;; Defined at:
  1470 ;;		line 260 in file "../00-libfiles/uart.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  v_numericSys    1    wreg     unsigned char 
  1473 ;;  v_number_u32    4    4[BANK0 ] unsigned long 
  1474 ;;  v_numOfDigit    1    8[BANK0 ] unsigned char 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  v_numericSys    1   33[BANK0 ] unsigned char 
  1477 ;;  a              10   21[BANK0 ] unsigned char [10]
  1478 ;;  i               1   34[BANK0 ] unsigned char 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1488 ;;      Params:         0       5       0       0       0
  1489 ;;      Locals:         0      14       0       0       0
  1490 ;;      Temps:          0      12       0       0       0
  1491 ;;      Totals:         0      31       0       0       0
  1492 ;;Total ram usage:       31 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    1
  1495 ;; This function calls:
  1496 ;;		_UART_TxChar
  1497 ;;		___bmul
  1498 ;;		___lldiv
  1499 ;; This function is called by:
  1500 ;;		_UART_Printf
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           
  1505                           ;psect for function _UART_TxNumber
  1506  04F5                     _UART_TxNumber:	
  1507                           
  1508                           ;incstack = 0
  1509                           ; Regs used in _UART_TxNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1510                           ;UART_TxNumber@v_numericSystem_u8 stored from wreg
  1511  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  1512  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  1513  04F7  00C1               	movwf	UART_TxNumber@v_numericSystem_u8
  1514                           
  1515                           ;uart.c: 262: uint8_t i=0,a[10];
  1516  04F8  01C2               	clrf	UART_TxNumber@i
  1517                           
  1518                           ;uart.c: 264: if(2u == v_numericSystem_u8)
  1519  04F9  3002               	movlw	2
  1520  04FA  0641               	xorwf	UART_TxNumber@v_numericSystem_u8,w
  1521  04FB  1903               	btfsc	3,2
  1522  04FC  2D3C               	goto	l1123
  1523  04FD  2D40               	goto	l1125
  1524  04FE                     l1117:	
  1525                           ;uart.c: 265: {
  1526                           ;uart.c: 266: while(v_numOfDigitsToTransmit_u8!=0)
  1527                           
  1528                           
  1529                           ;uart.c: 267: {
  1530                           ;uart.c: 270: i = (((v_number_u32)&((1<<((v_numOfDigitsToTransmit_u8-1)))))!=0u);
  1531  04FE  0824               	movf	UART_TxNumber@v_number_u32,w
  1532  04FF  00A9               	movwf	??_UART_TxNumber
  1533  0500  0825               	movf	UART_TxNumber@v_number_u32+1,w
  1534  0501  00AA               	movwf	??_UART_TxNumber+1
  1535  0502  0826               	movf	UART_TxNumber@v_number_u32+2,w
  1536  0503  00AB               	movwf	??_UART_TxNumber+2
  1537  0504  0827               	movf	UART_TxNumber@v_number_u32+3,w
  1538  0505  00AC               	movwf	??_UART_TxNumber+3
  1539  0506  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  1540  0507  3EFF               	addlw	-1
  1541  0508  00AD               	movwf	??_UART_TxNumber+4
  1542  0509  0AAD               	incf	??_UART_TxNumber+4,f
  1543  050A  3001               	movlw	1
  1544  050B  00AE               	movwf	??_UART_TxNumber+5
  1545  050C  3000               	movlw	0
  1546  050D  00AF               	movwf	??_UART_TxNumber+6
  1547  050E  2D12               	goto	u734
  1548  050F                     u735:	
  1549  050F  1003               	clrc
  1550  0510  0DAE               	rlf	??_UART_TxNumber+5,f
  1551  0511  0DAF               	rlf	??_UART_TxNumber+6,f
  1552  0512                     u734:	
  1553  0512  0BAD               	decfsz	??_UART_TxNumber+4,f
  1554  0513  2D0F               	goto	u735
  1555  0514  082E               	movf	??_UART_TxNumber+5,w
  1556  0515  00B0               	movwf	??_UART_TxNumber+7
  1557  0516  082F               	movf	??_UART_TxNumber+6,w
  1558  0517  00B1               	movwf	??_UART_TxNumber+8
  1559  0518  3000               	movlw	0
  1560  0519  1BB1               	btfsc	??_UART_TxNumber+8,7
  1561  051A  30FF               	movlw	255
  1562  051B  00B2               	movwf	??_UART_TxNumber+9
  1563  051C  00B3               	movwf	??_UART_TxNumber+10
  1564  051D  0830               	movf	??_UART_TxNumber+7,w
  1565  051E  05A9               	andwf	??_UART_TxNumber,f
  1566  051F  0831               	movf	??_UART_TxNumber+8,w
  1567  0520  05AA               	andwf	??_UART_TxNumber+1,f
  1568  0521  0832               	movf	??_UART_TxNumber+9,w
  1569  0522  05AB               	andwf	??_UART_TxNumber+2,f
  1570  0523  0833               	movf	??_UART_TxNumber+10,w
  1571  0524  05AC               	andwf	??_UART_TxNumber+3,f
  1572  0525  082C               	movf	??_UART_TxNumber+3,w
  1573  0526  042B               	iorwf	??_UART_TxNumber+2,w
  1574  0527  042A               	iorwf	??_UART_TxNumber+1,w
  1575  0528  0429               	iorwf	??_UART_TxNumber,w
  1576  0529  1903               	btfsc	3,2
  1577  052A  2D2D               	goto	u740
  1578  052B  3001               	movlw	1
  1579  052C  2D2E               	goto	u750
  1580  052D                     u740:	
  1581  052D  3000               	movlw	0
  1582  052E                     u750:	
  1583  052E  00B4               	movwf	??_UART_TxNumber+11
  1584  052F  0834               	movf	??_UART_TxNumber+11,w
  1585  0530  00C2               	movwf	UART_TxNumber@i
  1586                           
  1587                           ;uart.c: 271: UART_TxChar(((i)+0x30));
  1588  0531  0842               	movf	UART_TxNumber@i,w
  1589  0532  3E30               	addlw	48
  1590  0533  120A  118A  2346  120A  118A  	fcall	_UART_TxChar
  1591                           
  1592                           ;uart.c: 272: v_numOfDigitsToTransmit_u8--;
  1593  0538  3001               	movlw	1
  1594  0539  1283               	bcf	3,5	;RP0=0, select bank0
  1595  053A  1303               	bcf	3,6	;RP1=0, select bank0
  1596  053B  02A8               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,f
  1597  053C                     l1123:	
  1598  053C  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  1599  053D  1903               	btfsc	3,2
  1600  053E  0008               	return
  1601  053F  2CFE               	goto	l1117
  1602  0540                     l1125:	
  1603                           ;uart.c: 273: }
  1604                           ;uart.c: 274: }
  1605                           
  1606                           
  1607                           ;uart.c: 275: else if(v_number_u32==0)
  1608  0540  0827               	movf	UART_TxNumber@v_number_u32+3,w
  1609  0541  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  1610  0542  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  1611  0543  0424               	iorwf	UART_TxNumber@v_number_u32,w
  1612  0544  1D03               	skipz
  1613  0545  2D4B               	goto	l1129
  1614                           
  1615                           ;uart.c: 276: {
  1616                           ;uart.c: 280: UART_TxChar('0');
  1617  0546  3030               	movlw	48
  1618  0547  120A  118A  2346   	fcall	_UART_TxChar
  1619                           
  1620                           ;uart.c: 281: }
  1621  054A  0008               	return
  1622  054B                     l1129:	
  1623                           
  1624                           ;uart.c: 282: else
  1625                           ;uart.c: 283: {
  1626                           ;uart.c: 284: for(i=0;i<v_numOfDigitsToTransmit_u8;i++)
  1627  054B  1283               	bcf	3,5	;RP0=0, select bank0
  1628  054C  1303               	bcf	3,6	;RP1=0, select bank0
  1629  054D  01C2               	clrf	UART_TxNumber@i
  1630  054E                     l1147:	
  1631  054E  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  1632  054F  0242               	subwf	UART_TxNumber@i,w
  1633  0550  1803               	btfsc	3,0
  1634  0551  2DE3               	goto	l1159
  1635                           
  1636                           ;uart.c: 285: {
  1637                           ;uart.c: 288: if(v_number_u32!=0)
  1638  0552  0827               	movf	UART_TxNumber@v_number_u32+3,w
  1639  0553  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  1640  0554  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  1641  0555  0424               	iorwf	UART_TxNumber@v_number_u32,w
  1642  0556  1903               	skipnz
  1643  0557  2DAD               	goto	l1137
  1644                           
  1645                           ;uart.c: 289: {
  1646                           ;uart.c: 296: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u
      +                          32/v_numericSystem_u8)));
  1647  0558  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  1648  0559  00A9               	movwf	??_UART_TxNumber
  1649  055A  0829               	movf	??_UART_TxNumber,w
  1650  055B  00A0               	movwf	___bmul@multiplicand
  1651  055C  0827               	movf	UART_TxNumber@v_number_u32+3,w
  1652  055D  00F7               	movwf	___lldiv@dividend+3
  1653  055E  0826               	movf	UART_TxNumber@v_number_u32+2,w
  1654  055F  00F6               	movwf	___lldiv@dividend+2
  1655  0560  0825               	movf	UART_TxNumber@v_number_u32+1,w
  1656  0561  00F5               	movwf	___lldiv@dividend+1
  1657  0562  0824               	movf	UART_TxNumber@v_number_u32,w
  1658  0563  00F4               	movwf	___lldiv@dividend
  1659  0564  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  1660  0565  00AA               	movwf	??_UART_TxNumber+1
  1661  0566  01AB               	clrf	??_UART_TxNumber+2
  1662  0567  01AC               	clrf	??_UART_TxNumber+3
  1663  0568  01AD               	clrf	??_UART_TxNumber+4
  1664  0569  082D               	movf	??_UART_TxNumber+4,w
  1665  056A  00F3               	movwf	___lldiv@divisor+3
  1666  056B  082C               	movf	??_UART_TxNumber+3,w
  1667  056C  00F2               	movwf	___lldiv@divisor+2
  1668  056D  082B               	movf	??_UART_TxNumber+2,w
  1669  056E  00F1               	movwf	___lldiv@divisor+1
  1670  056F  082A               	movf	??_UART_TxNumber+1,w
  1671  0570  00F0               	movwf	___lldiv@divisor
  1672  0571  120A  118A  242F  120A  118A  	fcall	___lldiv
  1673  0576  0870               	movf	?___lldiv,w
  1674  0577  120A  118A  235A  120A  118A  	fcall	___bmul
  1675  057C  3AFF               	xorlw	255
  1676  057D  3E01               	addlw	1
  1677  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1678  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1679  0580  0724               	addwf	UART_TxNumber@v_number_u32,w
  1680  0581  00AE               	movwf	??_UART_TxNumber+5
  1681  0582  0842               	movf	UART_TxNumber@i,w
  1682  0583  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1683  0584  0084               	movwf	4
  1684  0585  082E               	movf	??_UART_TxNumber+5,w
  1685  0586  1383               	bcf	3,7	;select IRP bank0
  1686  0587  0080               	movwf	0
  1687                           
  1688                           ;uart.c: 297: v_number_u32=v_number_u32/v_numericSystem_u8;
  1689  0588  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  1690  0589  00A9               	movwf	??_UART_TxNumber
  1691  058A  01AA               	clrf	??_UART_TxNumber+1
  1692  058B  01AB               	clrf	??_UART_TxNumber+2
  1693  058C  01AC               	clrf	??_UART_TxNumber+3
  1694  058D  082C               	movf	??_UART_TxNumber+3,w
  1695  058E  00F3               	movwf	___lldiv@divisor+3
  1696  058F  082B               	movf	??_UART_TxNumber+2,w
  1697  0590  00F2               	movwf	___lldiv@divisor+2
  1698  0591  082A               	movf	??_UART_TxNumber+1,w
  1699  0592  00F1               	movwf	___lldiv@divisor+1
  1700  0593  0829               	movf	??_UART_TxNumber,w
  1701  0594  00F0               	movwf	___lldiv@divisor
  1702  0595  0827               	movf	UART_TxNumber@v_number_u32+3,w
  1703  0596  00F7               	movwf	___lldiv@dividend+3
  1704  0597  0826               	movf	UART_TxNumber@v_number_u32+2,w
  1705  0598  00F6               	movwf	___lldiv@dividend+2
  1706  0599  0825               	movf	UART_TxNumber@v_number_u32+1,w
  1707  059A  00F5               	movwf	___lldiv@dividend+1
  1708  059B  0824               	movf	UART_TxNumber@v_number_u32,w
  1709  059C  00F4               	movwf	___lldiv@dividend
  1710  059D  120A  118A  242F  120A  118A  	fcall	___lldiv
  1711  05A2  0873               	movf	?___lldiv+3,w
  1712  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  1713  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  1714  05A5  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1715  05A6  0872               	movf	?___lldiv+2,w
  1716  05A7  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1717  05A8  0871               	movf	?___lldiv+1,w
  1718  05A9  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1719  05AA  0870               	movf	?___lldiv,w
  1720  05AB  00A4               	movwf	UART_TxNumber@v_number_u32
  1721                           
  1722                           ;uart.c: 298: }
  1723  05AC  2DB9               	goto	l1145
  1724  05AD                     l1137:	
  1725                           
  1726                           ;uart.c: 299: else if( (v_numOfDigitsToTransmit_u8 == 0xffu) ||
  1727                           ;uart.c: 300: (v_numOfDigitsToTransmit_u8 > 10u))
  1728  05AD  0A28               	incf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  1729  05AE  1903               	btfsc	3,2
  1730  05AF  2DE3               	goto	l1159
  1731  05B0  300B               	movlw	11
  1732  05B1  0228               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  1733  05B2  1803               	btfsc	3,0
  1734  05B3  2DE3               	goto	l1159
  1735                           
  1736                           ;uart.c: 306: else
  1737                           ;uart.c: 307: {
  1738                           ;uart.c: 311: a[i]=0;
  1739                           
  1740                           ;uart.c: 305: }
  1741                           
  1742                           ;uart.c: 301: {
  1743                           ;uart.c: 304: break;
  1744  05B4  0842               	movf	UART_TxNumber@i,w
  1745  05B5  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1746  05B6  0084               	movwf	4
  1747  05B7  1383               	bcf	3,7	;select IRP bank0
  1748  05B8  0180               	clrf	0
  1749  05B9                     l1145:	
  1750  05B9  3001               	movlw	1
  1751  05BA  00A9               	movwf	??_UART_TxNumber
  1752  05BB  0829               	movf	??_UART_TxNumber,w
  1753  05BC  07C2               	addwf	UART_TxNumber@i,f
  1754  05BD  2D4E               	goto	l1147
  1755  05BE                     l1149:	
  1756                           ;uart.c: 312: }
  1757                           ;uart.c: 313: }
  1758                           ;uart.c: 315: while(i)
  1759                           
  1760                           
  1761                           ;uart.c: 316: {
  1762                           ;uart.c: 318: UART_TxChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  1763  05BE  0842               	movf	UART_TxNumber@i,w
  1764  05BF  3EFF               	addlw	255
  1765  05C0  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1766  05C1  0084               	movwf	4
  1767  05C2  300A               	movlw	10
  1768  05C3  1383               	bcf	3,7	;select IRP bank0
  1769  05C4  0200               	subwf	0,w
  1770  05C5  1803               	skipnc
  1771  05C6  2DCE               	goto	l1153
  1772  05C7  0842               	movf	UART_TxNumber@i,w
  1773  05C8  3EFF               	addlw	255
  1774  05C9  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1775  05CA  0084               	movwf	4
  1776  05CB  0800               	movf	0,w
  1777  05CC  3E30               	addlw	48
  1778  05CD  2DD4               	goto	L2
  1779  05CE                     l1153:	
  1780  05CE  0842               	movf	UART_TxNumber@i,w
  1781  05CF  3EFF               	addlw	255
  1782  05D0  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1783  05D1  0084               	movwf	4
  1784  05D2  0800               	movf	0,w
  1785  05D3  3E37               	addlw	55
  1786  05D4                     L2:	
  1787  05D4  00BF               	movwf	_UART_TxNumber$92
  1788  05D5  3000               	movlw	0
  1789  05D6  1803               	skipnc
  1790  05D7  3001               	movlw	1
  1791  05D8  00C0               	movwf	_UART_TxNumber$92+1
  1792  05D9  083F               	movf	_UART_TxNumber$92,w
  1793  05DA  120A  118A  2346  120A  118A  	fcall	_UART_TxChar
  1794                           
  1795                           ;uart.c: 319: i--;
  1796  05DF  3001               	movlw	1
  1797  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  1798  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  1799  05E2  02C2               	subwf	UART_TxNumber@i,f
  1800  05E3                     l1159:	
  1801  05E3  0842               	movf	UART_TxNumber@i,w
  1802  05E4  1903               	btfsc	3,2
  1803  05E5  0008               	return
  1804  05E6  2DBE               	goto	l1149
  1805  05E7                     __end_of_UART_TxNumber:	
  1806                           
  1807                           	psect	text4
  1808  035A                     __ptext4:	
  1809 ;; *************** function ___bmul *****************
  1810 ;; Defined at:
  1811 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\Umul8.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;  multiplier      1    wreg     unsigned char 
  1814 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  multiplier      1    3[BANK0 ] unsigned char 
  1817 ;;  product         1    2[BANK0 ] unsigned char 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      unsigned char 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1827 ;;      Params:         0       1       0       0       0
  1828 ;;      Locals:         0       2       0       0       0
  1829 ;;      Temps:          0       1       0       0       0
  1830 ;;      Totals:         0       4       0       0       0
  1831 ;;Total ram usage:        4 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_UART_TxNumber
  1837 ;;		_UART_Printf
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           
  1842                           ;psect for function ___bmul
  1843  035A                     ___bmul:	
  1844                           
  1845                           ;incstack = 0
  1846                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1847                           ;___bmul@multiplier stored from wreg
  1848  035A  1283               	bcf	3,5	;RP0=0, select bank0
  1849  035B  1303               	bcf	3,6	;RP1=0, select bank0
  1850  035C  00A3               	movwf	___bmul@multiplier
  1851  035D  01A2               	clrf	___bmul@product
  1852  035E                     l1033:	
  1853  035E  1C23               	btfss	___bmul@multiplier,0
  1854  035F  2B64               	goto	l1037
  1855  0360  0820               	movf	___bmul@multiplicand,w
  1856  0361  00A1               	movwf	??___bmul
  1857  0362  0821               	movf	??___bmul,w
  1858  0363  07A2               	addwf	___bmul@product,f
  1859  0364                     l1037:	
  1860  0364  1003               	clrc
  1861  0365  0DA0               	rlf	___bmul@multiplicand,f
  1862  0366  1003               	clrc
  1863  0367  0CA3               	rrf	___bmul@multiplier,f
  1864  0368  0823               	movf	___bmul@multiplier,w
  1865  0369  1D03               	btfss	3,2
  1866  036A  2B5E               	goto	l1033
  1867  036B  0822               	movf	___bmul@product,w
  1868  036C  0008               	return
  1869  036D                     __end_of___bmul:	
  1870                           
  1871                           	psect	text5
  1872  0346                     __ptext5:	
  1873 ;; *************** function _UART_TxChar *****************
  1874 ;; Defined at:
  1875 ;;		line 145 in file "../00-libfiles/uart.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  v_uartData_u    1    wreg     unsigned char 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  v_uartData_u    1    0[COMMON] unsigned char 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1889 ;;      Params:         0       0       0       0       0
  1890 ;;      Locals:         1       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0
  1892 ;;      Totals:         1       0       0       0       0
  1893 ;;Total ram usage:        1 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; This function calls:
  1896 ;;		Nothing
  1897 ;; This function is called by:
  1898 ;;		_UART_TxString
  1899 ;;		_UART_TxNumber
  1900 ;;		_UART_Printf
  1901 ;;		_UART_RxString
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           
  1906                           ;psect for function _UART_TxChar
  1907  0346                     _UART_TxChar:	
  1908                           
  1909                           ;incstack = 0
  1910                           ; Regs used in _UART_TxChar: [wreg]
  1911                           ;UART_TxChar@v_uartData_u8 stored from wreg
  1912  0346  00F0               	movwf	UART_TxChar@v_uartData_u8
  1913  0347                     l70:	
  1914                           ;uart.c: 147: while(TXIF==0);
  1915                           
  1916  0347  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0348  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0349  1E0C               	btfss	12,4	;volatile
  1919  034A  2B47               	goto	l70
  1920                           
  1921                           ;uart.c: 148: TXIF=0;
  1922  034B  120C               	bcf	12,4	;volatile
  1923                           
  1924                           ;uart.c: 149: TXREG=v_uartData_u8;
  1925  034C  0870               	movf	UART_TxChar@v_uartData_u8,w
  1926  034D  0099               	movwf	25	;volatile
  1927  034E  0008               	return
  1928  034F                     __end_of_UART_TxChar:	
  1929                           
  1930                           	psect	text6
  1931  0382                     __ptext6:	
  1932 ;; *************** function _UART_Init *****************
  1933 ;; Defined at:
  1934 ;;		line 66 in file "../00-libfiles/uart.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  v_baudRate_u    4   10[BANK0 ] unsigned long 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;		None
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, status,2, status,0, pclath, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1948 ;;      Params:         0       4       0       0       0
  1949 ;;      Locals:         0       0       0       0       0
  1950 ;;      Temps:          0       0       0       0       0
  1951 ;;      Totals:         0       4       0       0       0
  1952 ;;Total ram usage:        4 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:    2
  1955 ;; This function calls:
  1956 ;;		_UART_SetBaudRate
  1957 ;; This function is called by:
  1958 ;;		_main
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           
  1963                           ;psect for function _UART_Init
  1964  0382                     _UART_Init:	
  1965                           
  1966                           ;uart.c: 68: TRISC=0x80;
  1967                           
  1968                           ;incstack = 0
  1969                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1970  0382  3080               	movlw	128
  1971  0383  1683               	bsf	3,5	;RP0=1, select bank1
  1972  0384  1303               	bcf	3,6	;RP1=0, select bank1
  1973  0385  0087               	movwf	7	;volatile
  1974                           
  1975                           ;uart.c: 69: TXSTA=0x20;
  1976  0386  3020               	movlw	32
  1977  0387  0098               	movwf	24	;volatile
  1978                           
  1979                           ;uart.c: 70: RCSTA=0x90;
  1980  0388  3090               	movlw	144
  1981  0389  1283               	bcf	3,5	;RP0=0, select bank0
  1982  038A  1303               	bcf	3,6	;RP1=0, select bank0
  1983  038B  0098               	movwf	24	;volatile
  1984                           
  1985                           ;uart.c: 71: UART_SetBaudRate(v_baudRate_u32);
  1986  038C  082D               	movf	UART_Init@v_baudRate_u32+3,w
  1987  038D  00A3               	movwf	UART_SetBaudRate@v_baudRate_u32+3
  1988  038E  082C               	movf	UART_Init@v_baudRate_u32+2,w
  1989  038F  00A2               	movwf	UART_SetBaudRate@v_baudRate_u32+2
  1990  0390  082B               	movf	UART_Init@v_baudRate_u32+1,w
  1991  0391  00A1               	movwf	UART_SetBaudRate@v_baudRate_u32+1
  1992  0392  082A               	movf	UART_Init@v_baudRate_u32,w
  1993  0393  00A0               	movwf	UART_SetBaudRate@v_baudRate_u32
  1994  0394  120A  118A  23D6   	fcall	_UART_SetBaudRate
  1995  0397  0008               	return
  1996  0398                     __end_of_UART_Init:	
  1997                           
  1998                           	psect	text7
  1999  03D6                     __ptext7:	
  2000 ;; *************** function _UART_SetBaudRate *****************
  2001 ;; Defined at:
  2002 ;;		line 91 in file "../00-libfiles/uart.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  v_baudRate_u    4    0[BANK0 ] unsigned long 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  RegValue        1    9[BANK0 ] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0, pclath, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2016 ;;      Params:         0       4       0       0       0
  2017 ;;      Locals:         0       1       0       0       0
  2018 ;;      Temps:          0       5       0       0       0
  2019 ;;      Totals:         0      10       0       0       0
  2020 ;;Total ram usage:       10 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    1
  2023 ;; This function calls:
  2024 ;;		___lldiv
  2025 ;; This function is called by:
  2026 ;;		_UART_Init
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           
  2031                           ;psect for function _UART_SetBaudRate
  2032  03D6                     _UART_SetBaudRate:	
  2033                           
  2034                           ;uart.c: 93: uint8_t RegValue;
  2035                           ;uart.c: 95: if((v_baudRate_u32 >= 2400) && (v_baudRate_u32<=115200UL))
  2036                           
  2037                           ;incstack = 0
  2038                           ; Regs used in _UART_SetBaudRate: [wreg+status,2+status,0+pclath+cstack]
  2039  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2040  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2041  03D8  0823               	movf	UART_SetBaudRate@v_baudRate_u32+3,w
  2042  03D9  1D03               	btfss	3,2
  2043  03DA  2BE8               	goto	l1097
  2044  03DB  0822               	movf	UART_SetBaudRate@v_baudRate_u32+2,w
  2045  03DC  1D03               	btfss	3,2
  2046  03DD  2BE8               	goto	l1097
  2047  03DE  3009               	movlw	9
  2048  03DF  0221               	subwf	UART_SetBaudRate@v_baudRate_u32+1,w
  2049  03E0  1D03               	skipz
  2050  03E1  2BE6               	goto	u683
  2051  03E2  3060               	movlw	96
  2052  03E3  0220               	subwf	UART_SetBaudRate@v_baudRate_u32,w
  2053  03E4  1D03               	skipz
  2054  03E5  2BE6               	goto	u683
  2055  03E6                     u683:	
  2056  03E6  1C03               	btfss	3,0
  2057  03E7  2C26               	goto	l1101
  2058  03E8                     l1097:	
  2059  03E8  0823               	movf	UART_SetBaudRate@v_baudRate_u32+3,w
  2060  03E9  1D03               	btfss	3,2
  2061  03EA  2C26               	goto	l1101
  2062  03EB  3001               	movlw	1
  2063  03EC  0222               	subwf	UART_SetBaudRate@v_baudRate_u32+2,w
  2064  03ED  1D03               	skipz
  2065  03EE  2BF7               	goto	u693
  2066  03EF  30C2               	movlw	194
  2067  03F0  0221               	subwf	UART_SetBaudRate@v_baudRate_u32+1,w
  2068  03F1  1D03               	skipz
  2069  03F2  2BF7               	goto	u693
  2070  03F3  3001               	movlw	1
  2071  03F4  0220               	subwf	UART_SetBaudRate@v_baudRate_u32,w
  2072  03F5  1D03               	skipz
  2073  03F6  2BF7               	goto	u693
  2074  03F7                     u693:	
  2075  03F7  1803               	btfsc	3,0
  2076  03F8  2C26               	goto	l1101
  2077                           
  2078                           ;uart.c: 96: {
  2079                           ;uart.c: 99: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)v_baudRate_u32))
      +                           - 1);
  2080  03F9  0820               	movf	UART_SetBaudRate@v_baudRate_u32,w
  2081  03FA  00A4               	movwf	??_UART_SetBaudRate
  2082  03FB  0821               	movf	UART_SetBaudRate@v_baudRate_u32+1,w
  2083  03FC  00A5               	movwf	??_UART_SetBaudRate+1
  2084  03FD  0822               	movf	UART_SetBaudRate@v_baudRate_u32+2,w
  2085  03FE  00A6               	movwf	??_UART_SetBaudRate+2
  2086  03FF  0823               	movf	UART_SetBaudRate@v_baudRate_u32+3,w
  2087  0400  00A7               	movwf	??_UART_SetBaudRate+3
  2088  0401  3006               	movlw	6
  2089  0402                     u705:	
  2090  0402  1003               	clrc
  2091  0403  0DA4               	rlf	??_UART_SetBaudRate,f
  2092  0404  0DA5               	rlf	??_UART_SetBaudRate+1,f
  2093  0405  0DA6               	rlf	??_UART_SetBaudRate+2,f
  2094  0406  0DA7               	rlf	??_UART_SetBaudRate+3,f
  2095  0407  3EFF               	addlw	-1
  2096  0408  1D03               	skipz
  2097  0409  2C02               	goto	u705
  2098  040A  0827               	movf	??_UART_SetBaudRate+3,w
  2099  040B  00F3               	movwf	___lldiv@divisor+3
  2100  040C  0826               	movf	??_UART_SetBaudRate+2,w
  2101  040D  00F2               	movwf	___lldiv@divisor+2
  2102  040E  0825               	movf	??_UART_SetBaudRate+1,w
  2103  040F  00F1               	movwf	___lldiv@divisor+1
  2104  0410  0824               	movf	??_UART_SetBaudRate,w
  2105  0411  00F0               	movwf	___lldiv@divisor
  2106  0412  3001               	movlw	1
  2107  0413  00F7               	movwf	___lldiv@dividend+3
  2108  0414  3031               	movlw	49
  2109  0415  00F6               	movwf	___lldiv@dividend+2
  2110  0416  302D               	movlw	45
  2111  0417  00F5               	movwf	___lldiv@dividend+1
  2112  0418  3000               	movlw	0
  2113  0419  00F4               	movwf	___lldiv@dividend
  2114  041A  120A  118A  242F  120A  118A  	fcall	___lldiv
  2115  041F  0870               	movf	?___lldiv,w
  2116  0420  3EFF               	addlw	255
  2117  0421  1283               	bcf	3,5	;RP0=0, select bank0
  2118  0422  1303               	bcf	3,6	;RP1=0, select bank0
  2119  0423  00A8               	movwf	??_UART_SetBaudRate+4
  2120  0424  0828               	movf	??_UART_SetBaudRate+4,w
  2121  0425  2C29               	goto	L3
  2122  0426                     l1101:	
  2123                           ;uart.c: 100: }
  2124                           
  2125                           
  2126                           ;uart.c: 101: else
  2127                           ;uart.c: 102: {
  2128                           ;uart.c: 104: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)9600)) - 1);
  2129  0426  301F               	movlw	31
  2130  0427  00A4               	movwf	??_UART_SetBaudRate
  2131  0428  0824               	movf	??_UART_SetBaudRate,w
  2132  0429                     L3:	
  2133  0429  00A9               	movwf	UART_SetBaudRate@RegValue
  2134                           
  2135                           ;uart.c: 105: }
  2136                           ;uart.c: 107: SPBRG = RegValue;
  2137  042A  0829               	movf	UART_SetBaudRate@RegValue,w
  2138  042B  1683               	bsf	3,5	;RP0=1, select bank1
  2139  042C  1303               	bcf	3,6	;RP1=0, select bank1
  2140  042D  0099               	movwf	25	;volatile
  2141  042E  0008               	return
  2142  042F                     __end_of_UART_SetBaudRate:	
  2143                           
  2144                           	psect	text8
  2145  042F                     __ptext8:	
  2146 ;; *************** function ___lldiv *****************
  2147 ;; Defined at:
  2148 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  divisor         4    0[COMMON] unsigned long 
  2151 ;;  dividend        4    4[COMMON] unsigned long 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  quotient        4    9[COMMON] unsigned long 
  2154 ;;  counter         1   13[COMMON] unsigned char 
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  4    0[COMMON] unsigned long 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2164 ;;      Params:         8       0       0       0       0
  2165 ;;      Locals:         5       0       0       0       0
  2166 ;;      Temps:          1       0       0       0       0
  2167 ;;      Totals:        14       0       0       0       0
  2168 ;;Total ram usage:       14 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_UART_SetBaudRate
  2174 ;;		_UART_TxNumber
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           
  2179                           ;psect for function ___lldiv
  2180  042F                     ___lldiv:	
  2181                           
  2182                           ;incstack = 0
  2183                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2184  042F  3000               	movlw	0
  2185  0430  00FC               	movwf	___lldiv@quotient+3
  2186  0431  3000               	movlw	0
  2187  0432  00FB               	movwf	___lldiv@quotient+2
  2188  0433  3000               	movlw	0
  2189  0434  00FA               	movwf	___lldiv@quotient+1
  2190  0435  3000               	movlw	0
  2191  0436  00F9               	movwf	___lldiv@quotient
  2192  0437  0873               	movf	___lldiv@divisor+3,w
  2193  0438  0472               	iorwf	___lldiv@divisor+2,w
  2194  0439  0471               	iorwf	___lldiv@divisor+1,w
  2195  043A  0470               	iorwf	___lldiv@divisor,w
  2196  043B  1903               	skipnz
  2197  043C  2C84               	goto	l1065
  2198  043D  01FD               	clrf	___lldiv@counter
  2199  043E  0AFD               	incf	___lldiv@counter,f
  2200  043F                     l1051:	
  2201  043F  1BF3               	btfsc	___lldiv@divisor+3,7
  2202  0440  2C4F               	goto	l1053
  2203  0441  3001               	movlw	1
  2204  0442  00F8               	movwf	??___lldiv
  2205  0443                     u585:	
  2206  0443  1003               	clrc
  2207  0444  0DF0               	rlf	___lldiv@divisor,f
  2208  0445  0DF1               	rlf	___lldiv@divisor+1,f
  2209  0446  0DF2               	rlf	___lldiv@divisor+2,f
  2210  0447  0DF3               	rlf	___lldiv@divisor+3,f
  2211  0448  0BF8               	decfsz	??___lldiv,f
  2212  0449  2C43               	goto	u585
  2213  044A  3001               	movlw	1
  2214  044B  00F8               	movwf	??___lldiv
  2215  044C  0878               	movf	??___lldiv,w
  2216  044D  07FD               	addwf	___lldiv@counter,f
  2217  044E  2C3F               	goto	l1051
  2218  044F                     l1053:	
  2219  044F  3001               	movlw	1
  2220  0450  00F8               	movwf	??___lldiv
  2221  0451                     u605:	
  2222  0451  1003               	clrc
  2223  0452  0DF9               	rlf	___lldiv@quotient,f
  2224  0453  0DFA               	rlf	___lldiv@quotient+1,f
  2225  0454  0DFB               	rlf	___lldiv@quotient+2,f
  2226  0455  0DFC               	rlf	___lldiv@quotient+3,f
  2227  0456  0BF8               	decfsz	??___lldiv,f
  2228  0457  2C51               	goto	u605
  2229  0458  0873               	movf	___lldiv@divisor+3,w
  2230  0459  0277               	subwf	___lldiv@dividend+3,w
  2231  045A  1D03               	skipz
  2232  045B  2C66               	goto	u615
  2233  045C  0872               	movf	___lldiv@divisor+2,w
  2234  045D  0276               	subwf	___lldiv@dividend+2,w
  2235  045E  1D03               	skipz
  2236  045F  2C66               	goto	u615
  2237  0460  0871               	movf	___lldiv@divisor+1,w
  2238  0461  0275               	subwf	___lldiv@dividend+1,w
  2239  0462  1D03               	skipz
  2240  0463  2C66               	goto	u615
  2241  0464  0870               	movf	___lldiv@divisor,w
  2242  0465  0274               	subwf	___lldiv@dividend,w
  2243  0466                     u615:	
  2244  0466  1C03               	skipc
  2245  0467  2C77               	goto	l1061
  2246  0468  0870               	movf	___lldiv@divisor,w
  2247  0469  02F4               	subwf	___lldiv@dividend,f
  2248  046A  0871               	movf	___lldiv@divisor+1,w
  2249  046B  1C03               	skipc
  2250  046C  0F71               	incfsz	___lldiv@divisor+1,w
  2251  046D  02F5               	subwf	___lldiv@dividend+1,f
  2252  046E  0872               	movf	___lldiv@divisor+2,w
  2253  046F  1C03               	skipc
  2254  0470  0F72               	incfsz	___lldiv@divisor+2,w
  2255  0471  02F6               	subwf	___lldiv@dividend+2,f
  2256  0472  0873               	movf	___lldiv@divisor+3,w
  2257  0473  1C03               	skipc
  2258  0474  0F73               	incfsz	___lldiv@divisor+3,w
  2259  0475  02F7               	subwf	___lldiv@dividend+3,f
  2260  0476  1479               	bsf	___lldiv@quotient,0
  2261  0477                     l1061:	
  2262  0477  3001               	movlw	1
  2263  0478                     u625:	
  2264  0478  1003               	clrc
  2265  0479  0CF3               	rrf	___lldiv@divisor+3,f
  2266  047A  0CF2               	rrf	___lldiv@divisor+2,f
  2267  047B  0CF1               	rrf	___lldiv@divisor+1,f
  2268  047C  0CF0               	rrf	___lldiv@divisor,f
  2269  047D  3EFF               	addlw	-1
  2270  047E  1D03               	skipz
  2271  047F  2C78               	goto	u625
  2272  0480  3001               	movlw	1
  2273  0481  02FD               	subwf	___lldiv@counter,f
  2274  0482  1D03               	btfss	3,2
  2275  0483  2C4F               	goto	l1053
  2276  0484                     l1065:	
  2277  0484  087C               	movf	___lldiv@quotient+3,w
  2278  0485  00F3               	movwf	?___lldiv+3
  2279  0486  087B               	movf	___lldiv@quotient+2,w
  2280  0487  00F2               	movwf	?___lldiv+2
  2281  0488  087A               	movf	___lldiv@quotient+1,w
  2282  0489  00F1               	movwf	?___lldiv+1
  2283  048A  0879               	movf	___lldiv@quotient,w
  2284  048B  00F0               	movwf	?___lldiv
  2285  048C  0008               	return
  2286  048D                     __end_of___lldiv:	
  2287                           
  2288                           	psect	text9
  2289  033D                     __ptext9:	
  2290 ;; *************** function _EEPROM_WriteByte *****************
  2291 ;; Defined at:
  2292 ;;		line 60 in file "../00-libfiles/eeprom.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  v_eepromAddr    2    3[COMMON] unsigned int 
  2295 ;;  v_eepromData    1    5[COMMON] unsigned char 
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;		None
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, status,2, status,0, pclath, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2307 ;;      Params:         3       0       0       0       0
  2308 ;;      Locals:         0       0       0       0       0
  2309 ;;      Temps:          1       0       0       0       0
  2310 ;;      Totals:         4       0       0       0       0
  2311 ;;Total ram usage:        4 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:    1
  2314 ;; This function calls:
  2315 ;;		_eeprom_write
  2316 ;; This function is called by:
  2317 ;;		_main
  2318 ;;		_EEPROM_WriteString
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           
  2323                           ;psect for function _EEPROM_WriteByte
  2324  033D                     _EEPROM_WriteByte:	
  2325                           
  2326                           ;eeprom.c: 62: eeprom_write(v_eepromAddress_u16,v_eepromData_u8);
  2327                           
  2328                           ;incstack = 0
  2329                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  2330  033D  0875               	movf	EEPROM_WriteByte@v_eepromData_u8,w
  2331  033E  00F6               	movwf	??_EEPROM_WriteByte
  2332  033F  0876               	movf	??_EEPROM_WriteByte,w
  2333  0340  00F0               	movwf	eeprom_write@value
  2334  0341  0873               	movf	EEPROM_WriteByte@v_eepromAddress_u16,w
  2335  0342  120A  118A  23B0   	fcall	_eeprom_write
  2336  0345  0008               	return
  2337  0346                     __end_of_EEPROM_WriteByte:	
  2338                           
  2339                           	psect	text10
  2340  03B0                     __ptext10:	
  2341 ;; *************** function _eeprom_write *****************
  2342 ;; Defined at:
  2343 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\pic\eewrite.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  addr            1    wreg     unsigned char 
  2346 ;;  value           1    0[COMMON] unsigned char 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  addr            1    2[COMMON] unsigned char 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, status,0
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2358 ;;      Params:         1       0       0       0       0
  2359 ;;      Locals:         1       0       0       0       0
  2360 ;;      Temps:          1       0       0       0       0
  2361 ;;      Totals:         3       0       0       0       0
  2362 ;;Total ram usage:        3 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_EEPROM_WriteByte
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           
  2372                           ;psect for function _eeprom_write
  2373  03B0                     _eeprom_write:	
  2374                           
  2375                           ;incstack = 0
  2376                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2377                           ;eeprom_write@addr stored from wreg
  2378  03B0  00F2               	movwf	eeprom_write@addr
  2379  03B1                     l207:	
  2380  03B1  1683               	bsf	3,5	;RP0=1, select bank3
  2381  03B2  1703               	bsf	3,6	;RP1=1, select bank3
  2382  03B3  188C               	btfsc	12,1	;volsfr
  2383  03B4  2BB1               	goto	l207
  2384  03B5  0872               	movf	eeprom_write@addr,w
  2385  03B6  1283               	bcf	3,5	;RP0=0, select bank2
  2386  03B7  1703               	bsf	3,6	;RP1=1, select bank2
  2387  03B8  008D               	movwf	13	;volatile
  2388  03B9  0870               	movf	eeprom_write@value,w
  2389  03BA  008C               	movwf	12	;volatile
  2390  03BB  303F               	movlw	63
  2391  03BC  00F1               	movwf	??_eeprom_write
  2392  03BD  0871               	movf	??_eeprom_write,w
  2393  03BE  1683               	bsf	3,5	;RP0=1, select bank3
  2394  03BF  1703               	bsf	3,6	;RP1=1, select bank3
  2395  03C0  058C               	andwf	12,f	;volsfr
  2396  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  2397  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  2398  03C3  1003               	bcf	3,0	;volatile
  2399  03C4  1B8B               	btfsc	11,7	;volatile
  2400  03C5  1403               	bsf	3,0	;volatile
  2401  03C6  138B               	bcf	11,7	;volatile
  2402  03C7  1683               	bsf	3,5	;RP0=1, select bank3
  2403  03C8  1703               	bsf	3,6	;RP1=1, select bank3
  2404  03C9  150C               	bsf	12,2	;volsfr
  2405  03CA  3055               	movlw	85
  2406  03CB  008D               	movwf	13	;volsfr
  2407  03CC  30AA               	movlw	170
  2408  03CD  008D               	movwf	13	;volsfr
  2409  03CE  148C               	bsf	12,1	;volsfr
  2410  03CF  110C               	bcf	12,2	;volsfr
  2411  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2412  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2413  03D2  1C03               	btfss	3,0	;volatile
  2414  03D3  0008               	return
  2415  03D4  178B               	bsf	11,7	;volatile
  2416  03D5  0008               	return
  2417  03D6                     __end_of_eeprom_write:	
  2418                           
  2419                           	psect	text11
  2420  0398                     __ptext11:	
  2421 ;; *************** function _EEPROM_ReadByte *****************
  2422 ;; Defined at:
  2423 ;;		line 90 in file "../00-libfiles/eeprom.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  v_eepromAddr    2    2[COMMON] unsigned int 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;		None
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      unsigned char 
  2430 ;; Registers used:
  2431 ;;		wreg, status,2, status,0, pclath, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2437 ;;      Params:         2       0       0       0       0
  2438 ;;      Locals:         0       0       0       0       0
  2439 ;;      Temps:          0       0       0       0       0
  2440 ;;      Totals:         2       0       0       0       0
  2441 ;;Total ram usage:        2 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    1
  2444 ;; This function calls:
  2445 ;;		_DELAY_us
  2446 ;; This function is called by:
  2447 ;;		_main
  2448 ;;		_EEPROM_ReadString
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           
  2453                           ;psect for function _EEPROM_ReadByte
  2454  0398                     _EEPROM_ReadByte:	
  2455  0398                     l18:	
  2456                           ;eeprom.c: 92: while(RD || WR);
  2457                           
  2458                           ;incstack = 0
  2459                           ; Regs used in _EEPROM_ReadByte: [wreg+status,2+status,0+pclath+cstack]
  2460                           
  2461  0398  1683               	bsf	3,5	;RP0=1, select bank3
  2462  0399  1703               	bsf	3,6	;RP1=1, select bank3
  2463  039A  180C               	btfsc	12,0	;volsfr
  2464  039B  2B98               	goto	l18
  2465  039C  188C               	btfsc	12,1	;volsfr
  2466  039D  2B98               	goto	l18
  2467                           
  2468                           ;eeprom.c: 93: EEADR=v_eepromAddress_u16;
  2469  039E  0872               	movf	EEPROM_ReadByte@v_eepromAddress_u16,w
  2470  039F  1283               	bcf	3,5	;RP0=0, select bank2
  2471  03A0  1703               	bsf	3,6	;RP1=1, select bank2
  2472  03A1  008D               	movwf	13	;volatile
  2473                           
  2474                           ;eeprom.c: 95: RD = 1;
  2475  03A2  1683               	bsf	3,5	;RP0=1, select bank3
  2476  03A3  1703               	bsf	3,6	;RP1=1, select bank3
  2477  03A4  140C               	bsf	12,0	;volsfr
  2478                           
  2479                           ;eeprom.c: 96: DELAY_us(50);
  2480  03A5  3032               	movlw	50
  2481  03A6  00F0               	movwf	DELAY_us@us_count
  2482  03A7  3000               	movlw	0
  2483  03A8  00F1               	movwf	DELAY_us@us_count+1
  2484  03A9  120A  118A  234F   	fcall	_DELAY_us
  2485                           
  2486                           ;eeprom.c: 97: return(EEDATA);
  2487  03AC  1283               	bcf	3,5	;RP0=0, select bank2
  2488  03AD  1703               	bsf	3,6	;RP1=1, select bank2
  2489  03AE  080C               	movf	12,w	;volatile
  2490  03AF  0008               	return
  2491  03B0                     __end_of_EEPROM_ReadByte:	
  2492                           
  2493                           	psect	text12
  2494  034F                     __ptext12:	
  2495 ;; *************** function _DELAY_us *****************
  2496 ;; Defined at:
  2497 ;;		line 56 in file "../00-libfiles/delay.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  us_count        2    0[COMMON] unsigned int 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;		None
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg, status,2, status,0
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2511 ;;      Params:         2       0       0       0       0
  2512 ;;      Locals:         0       0       0       0       0
  2513 ;;      Temps:          0       0       0       0       0
  2514 ;;      Totals:         2       0       0       0       0
  2515 ;;Total ram usage:        2 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		_EEPROM_ReadByte
  2521 ;;		_DELAY_ms
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           
  2526                           ;psect for function _DELAY_us
  2527  034F                     _DELAY_us:	
  2528  034F                     l1093:	
  2529                           ;delay.c: 58: while (us_count != 0)
  2530                           
  2531                           ;incstack = 0
  2532                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  2533                           
  2534  034F  0870               	movf	DELAY_us@us_count,w
  2535  0350  0471               	iorwf	DELAY_us@us_count+1,w
  2536  0351  1903               	btfsc	3,2
  2537  0352  0008               	return
  2538                           
  2539                           ;delay.c: 59: {
  2540                           ;delay.c: 60: us_count--;
  2541  0353  3001               	movlw	1
  2542  0354  02F0               	subwf	DELAY_us@us_count,f
  2543  0355  3000               	movlw	0
  2544  0356  1C03               	skipc
  2545  0357  03F1               	decf	DELAY_us@us_count+1,f
  2546  0358  02F1               	subwf	DELAY_us@us_count+1,f
  2547  0359  2B4F               	goto	l1093
  2548  035A                     __end_of_DELAY_us:	
  2549  007E                     btemp	set	126	;btemp
  2550  007E                     wtemp	set	126
  2551  007E                     wtemp0	set	126
  2552  0080                     wtemp1	set	128
  2553  0082                     wtemp2	set	130
  2554  0084                     wtemp3	set	132
  2555  0086                     wtemp4	set	134
  2556  0088                     wtemp5	set	136
  2557  007F                     wtemp6	set	127
  2558  007E                     ttemp	set	126
  2559  007E                     ttemp0	set	126
  2560  0081                     ttemp1	set	129
  2561  0084                     ttemp2	set	132
  2562  0087                     ttemp3	set	135
  2563  007F                     ttemp4	set	127
  2564  007E                     ltemp	set	126
  2565  007E                     ltemp0	set	126
  2566  0082                     ltemp1	set	130
  2567  0086                     ltemp2	set	134
  2568  0080                     ltemp3	set	128


Data Sizes:
    Strings     39
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     63      63
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Printf@str	PTR unsigned char  size(1) Largest target is 0

    UART_Printf@argList	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_2(CODE[16]), STR_1(CODE[23]), 

    UART_Printf@ptr	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_2(CODE[16]), STR_1(CODE[23]), 

    UART_Printf@argp	PTR void [1] size(1) Largest target is 1
		 -> ?_UART_Printf(BANK0[1]), 

    UART_TxString@ptr_string	PTR const unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _UART_TxString->_UART_TxChar
    _UART_TxNumber->___lldiv
    ___bmul->___lldiv
    _UART_SetBaudRate->___lldiv
    _EEPROM_WriteByte->_eeprom_write
    _EEPROM_ReadByte->_DELAY_us

Critical Paths under _main in BANK0

    _main->_UART_Printf
    _UART_Printf->_UART_TxNumber
    _UART_TxNumber->___bmul
    _UART_Init->_UART_SetBaudRate

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    5128
                                             57 BANK0      6     6      0
                    _EEPROM_ReadByte
                   _EEPROM_WriteByte
                          _UART_Init
                        _UART_Printf
 ---------------------------------------------------------------------------------
 (1) _UART_Printf                                         22    20      2    3661
                                             35 BANK0     22    20      2
                        _UART_TxChar
                      _UART_TxNumber
                      _UART_TxString
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _UART_TxString                                        2     2      0      94
                                              1 COMMON     2     2      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxNumber                                       31    26      5    2202
                                              4 BANK0     31    26      5
                        _UART_TxChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4     698
                                             10 BANK0      4     0      4
                   _UART_SetBaudRate
 ---------------------------------------------------------------------------------
 (2) _UART_SetBaudRate                                    10     6      4     623
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _EEPROM_WriteByte                                     4     1      3     353
                                              3 COMMON     4     1      3
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         3     2      1      97
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _EEPROM_ReadByte                                      2     0      2     257
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (2) _DELAY_us                                             2     0      2     129
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_ReadByte
     _DELAY_us
   _EEPROM_WriteByte
     _eeprom_write
   _UART_Init
     _UART_SetBaudRate
       ___lldiv
   _UART_Printf
     _UART_TxChar
     _UART_TxNumber
       _UART_TxChar
       ___bmul
         ___lldiv (ARG)
       ___lldiv
     _UART_TxString
       _UART_TxChar
     ___bmul
       ___lldiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3F      3F       5       78.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Wed Apr 27 13:05:42 2016

                                      pc 0002                           ___bmul@product 0022  
                            __CFG_CP$OFF 0000                                       l18 0398  
                                     l70 0347                                       _RD 0C60  
                                     _WR 0C61                                       fsr 0004  
                            __CFG_LVP$ON 0000                                      l207 03B1  
                                    l185 04F4                                      _GIE 005F  
                           __CFG_CPD$OFF 0000                                      u605 0451  
                                    u615 0466                                      u625 0478  
                                    u705 0402                                      u740 052D  
                                    u750 052E                                      u734 0512  
                                    u735 050F                                      u585 0443  
                                    u683 03E6                                      u693 03F7  
        EEPROM_WriteByte@v_eepromData_u8 0075                                      fsr0 0004  
                                    indf 0000                             __CFG_FOSC$HS 0000  
                                   l1101 0426                                     l1033 035E  
                                   l1051 043F                                     l1123 053C  
                                   l1203 0621                                     l1061 0477  
                                   l1053 044F                                     l1037 0364  
                                   l1117 04FE                                     l1125 0540  
                                   l1109 036E                                     l1215 065A  
                                   l1207 0649                                     l1065 0484  
                                   l1153 05CE                                     l1145 05B9  
                                   l1137 05AD                                     l1129 054B  
                                   l1225 0675                                     l1209 064E  
                                   l1147 054E                                     l1251 070D  
                                   l1227 068B                                     l1093 034F  
                                   l1149 05BE                                     l1245 06E6  
                                   l1237 06B2                                     l1159 05E3  
                                   l1271 0768                                     l1263 0753  
                                   l1239 06C7                                     l1097 03E8  
                                   l1281 0794                                     l1273 0779  
                                   l1257 072C                                     l1283 07A7  
                                   l1293 07BD                                     l1365 04AB  
                                   l1295 07EF                                     l1289 07BB  
                                   l1297 07F5                                     l1299 05F2  
                                   STR_1 0009                                     STR_2 0020  
                                   _RCIF 0065                                     _WREN 0C62  
                                   _TXIF 0064                           ??_eeprom_write 0071  
                           __CFG_WRT$OFF 0000                                     _main 048D  
                                   btemp 007E                                     ltemp 007E  
                                   start 0000                                     ttemp 007E  
                                   wtemp 007E                         __end_of_DELAY_us 035A  
               __size_of_EEPROM_ReadByte 0018                        ___bmul@multiplier 0023  
                                  ?_main 0070                                    _EEADR 010D  
                          __CFG_WDTE$OFF 0000                                    _CARRY 0018  
                        __end_of___lldiv 048D                                    _RCREG 001A  
                                  _RCSTA 0018                                    _SPBRG 0099  
                                  _TRISC 0087                                    _TXREG 0019  
                                  _TXSTA 0098                       __size_of_UART_Init 0016  
                         __CFG_BOREN$OFF 0000                                    pclath 000A  
                                  ltemp0 007E                                    ltemp1 0082  
                                  ltemp2 0086                                    ltemp3 0080  
                                  ttemp0 007E                                    ttemp1 0081  
                                  ttemp2 0084                                    ttemp3 0087  
                                  ttemp4 007F                                    status 0003  
                                  wtemp0 007E                                    wtemp1 0080  
                                  wtemp2 0082                                    wtemp3 0084  
                                  wtemp4 0086                                    wtemp5 0088  
                                  wtemp6 007F                          __initialization 07FC  
                           __end_of_main 04F5                                   ??_main 0059  
                                 _EEDATA 010C                                   _EECON1 018C  
                                 _EECON2 018D                        ?_UART_SetBaudRate 0020  
                          main@read_char 005C                       ??_UART_SetBaudRate 0024  
                         __CFG_PWRTE$OFF 0000                             ?_UART_TxChar 0070  
                           ?_UART_Printf 0043                        __end_of_UART_Init 0398  
                                 ___bmul 035A                                ??___lldiv 0078  
                      ??_EEPROM_ReadByte 0074                     __end_of_eeprom_write 03D6  
               __end_of_EEPROM_WriteByte 0346  UART_TxNumber@v_numOfDigitsToTransmit_u8 0028  
                              ?_DELAY_us 0070                       main@eeprom_address 005D  
                __end_of__initialization 07FC                    __end_of_UART_TxNumber 05E7  
                  __end_of_UART_TxString 0382                      ___bmul@multiplicand 0020  
                         __pcstackCOMMON 0070                        eeprom_write@value 0070  
                             ??_DELAY_us 0072                               __pmaintext 048D  
                                ?___bmul 0020      EEPROM_WriteByte@v_eepromAddress_u16 0073  
                       DELAY_us@us_count 0070                               __stringtab 0003  
                  __size_of_eeprom_write 0026                     __size_of_UART_TxChar 0009  
                        __size_of___bmul 0013                     __size_of_UART_Printf 0215  
                                ___lldiv 042F       EEPROM_ReadByte@v_eepromAddress_u16 0072  
                                __ptext1 05E7                                  __ptext2 036D  
                                __ptext3 04F5                                  __ptext4 035A  
                                __ptext5 0346                                  __ptext6 0382  
                                __ptext7 03D6                                  __ptext8 042F  
                                __ptext9 033D                           UART_Printf@ptr 0055  
                         UART_Printf@str 0047                     end_of_initialization 07FC  
                         UART_TxNumber@a 0035                           UART_TxNumber@i 0042  
                           _eeprom_write 03B0                          _EEPROM_ReadByte 0398  
                        ___lldiv@divisor 0070                          ___lldiv@counter 007D  
         UART_SetBaudRate@v_baudRate_u32 0020                                _UART_Init 0382  
              __size_of_UART_SetBaudRate 0059                        ?_EEPROM_WriteByte 0073  
                     ??_EEPROM_WriteByte 0076                        __size_of_DELAY_us 000B  
                         main@write_char 005E          UART_TxNumber@v_numericSystem_u8 0041  
                         __end_of___bmul 036D                               ?_UART_Init 002A  
                    start_initialization 07FC                  __end_of_EEPROM_ReadByte 03B0  
                               ??___bmul 0021                   __size_of_UART_TxNumber 00F2  
                              ___latbits 0002                   __size_of_UART_TxString 0015  
                          __pcstackBANK0 0020                         eeprom_write@addr 0072  
                               ?___lldiv 0070                              ??_UART_Init 007E  
                       _UART_SetBaudRate 03D6                                __pstrings 0003  
                               _DELAY_us 034F                         ?_EEPROM_ReadByte 0072  
                          UART_Printf@ch 0056                            ??_UART_TxChar 0070  
                          _UART_TxNumber 04F5                            ??_UART_Printf 0045  
                          _UART_TxString 036D                  UART_Init@v_baudRate_u32 002A  
                UART_TxString@ptr_string 0072                              __stringbase 0008  
              __size_of_EEPROM_WriteByte 0009                UART_TxNumber@v_number_u32 0024  
                         ?_UART_TxNumber 0024                           ?_UART_TxString 0070  
               UART_TxChar@v_uartData_u8 0070                         _UART_TxNumber$92 003F  
                    __end_of_UART_TxChar 034F                         __size_of___lldiv 005E  
                    __end_of_UART_Printf 07FC                       __end_of__stringtab 0009  
                               __ptext10 03B0                                 __ptext11 0398  
                               __ptext12 034F                            __size_of_main 0068  
                        UART_Printf@argp 0058                 UART_SetBaudRate@RegValue 0029  
                        ??_UART_TxNumber 0029                 __end_of_UART_SetBaudRate 042F  
                        ??_UART_TxString 0071                         ___lldiv@dividend 0074  
                              stringcode 0003                              _UART_TxChar 0346  
                            _UART_Printf 05E7                         ___lldiv@quotient 0079  
                               stringdir 0003                                 stringtab 0003  
  UART_Printf@v_numOfDigitsToTransmit_u8 0057                       UART_Printf@argList 0048  
                       _EEPROM_WriteByte 033D                            ?_eeprom_write 0070  
                   UART_Printf@v_num_s16 004D                     UART_Printf@v_num_s32 0049  
                   UART_Printf@v_num_u16 0053                     UART_Printf@v_num_u32 004F  
