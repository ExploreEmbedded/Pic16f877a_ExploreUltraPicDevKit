

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Feb 20 12:05:52 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     	;# 
    14  0001                     	;# 
    15  0002                     	;# 
    16  0003                     	;# 
    17  0004                     	;# 
    18  0005                     	;# 
    19  0006                     	;# 
    20  0007                     	;# 
    21  0008                     	;# 
    22  0009                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000D                     	;# 
    27  000E                     	;# 
    28  000E                     	;# 
    29  000F                     	;# 
    30  0010                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001B                     	;# 
    44  001C                     	;# 
    45  001D                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  0081                     	;# 
    49  0085                     	;# 
    50  0086                     	;# 
    51  0087                     	;# 
    52  0088                     	;# 
    53  0089                     	;# 
    54  008C                     	;# 
    55  008D                     	;# 
    56  008E                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0094                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  010F                     	;# 
    71  018C                     	;# 
    72  018D                     	;# 
    73                           
    74                           	psect	idataBANK0
    75  0771                     __pidataBANK0:	
    76                           
    77                           ;initializer for main@F1073
    78  0771  343F               	retlw	63
    79  0772  3406               	retlw	6
    80  0773  345B               	retlw	91
    81  0774  344F               	retlw	79
    82  0775  3466               	retlw	102
    83  0776  346D               	retlw	109
    84  0777  347D               	retlw	125
    85  0778  3407               	retlw	7
    86  0779  347F               	retlw	127
    87  077A  346F               	retlw	111
    88  077B  3477               	retlw	119
    89  077C  347C               	retlw	124
    90  077D  3439               	retlw	57
    91  077E  345E               	retlw	94
    92  077F  3479               	retlw	121
    93  0780  3471               	retlw	113
    94  0006                     _PORTB	set	6
    95  0086                     _TRISB	set	134
    96                           
    97                           	psect	cinit
    98  07F0                     start_initialization:	
    99                           ; #config settings
   100                           
   101  07F0                     __initialization:	
   102                           
   103                           ; Initialize objects allocated to BANK0
   104  07F0  1383               	bcf	3,7	;select IRP bank0
   105  07F1  3041               	movlw	low (__pdataBANK0+16)
   106  07F2  00FD               	movwf	btemp+-1
   107  07F3  3007               	movlw	high __pidataBANK0
   108  07F4  00FE               	movwf	btemp
   109  07F5  3071               	movlw	low __pidataBANK0
   110  07F6  00FF               	movwf	btemp+1
   111  07F7  3031               	movlw	low __pdataBANK0
   112  07F8  0084               	movwf	4
   113  07F9  120A  118A  2785   	fcall	init_ram0
   114  07FC                     end_of_initialization:	
   115                           ;End of C runtime variable initialization code
   116                           
   117  07FC                     __end_of__initialization:	
   118  07FC  0183               	clrf	3
   119  07FD  120A  118A  2FB9   	ljmp	_main	;jump to C main() function
   120                           
   121                           	psect	dataBANK0
   122  0031                     __pdataBANK0:	
   123  0031                     main@F1073:	
   124  0031                     	ds	16
   125                           
   126                           	psect	inittext
   127  0781                     init_fetch0:	
   128                           ;	Called with low address in FSR and high address in W
   129                           
   130  0781  087E               	movf	126,w
   131  0782  008A               	movwf	10
   132  0783  087F               	movf	127,w
   133  0784  0082               	movwf	2
   134  0785                     init_ram0:	
   135                           ;Called with:
   136                           ;	high address of idata address in btemp 
   137                           ;	low address of idata address in btemp+1 
   138                           ;	low address of data in FSR
   139                           ;	high address + 1 of data in btemp-1
   140                           
   141  0785  2781  120A  118A   	fcall	init_fetch0
   142  0788  0080               	movwf	0
   143  0789  0A84               	incf	4,f
   144  078A  0804               	movf	4,w
   145  078B  067D               	xorwf	125,w
   146  078C  1903               	btfsc	3,2
   147  078D  3400               	retlw	0
   148  078E  0AFF               	incf	127,f
   149  078F  1903               	btfsc	3,2
   150  0790  0AFE               	incf	126,f
   151  0791  2F85               	goto	init_ram0
   152                           
   153                           	psect	cstackCOMMON
   154  0070                     __pcstackCOMMON:	
   155  0070                     ?_DELAY_ms:	
   156  0070                     ?_main:	
   157                           ; 1 bytes @ 0x0
   158                           
   159  0070                     DELAY_ms@ms_Count:	
   160                           ; 2 bytes @ 0x0
   161                           
   162                           
   163                           ; 2 bytes @ 0x0
   164  0070                     	ds	2
   165  0072                     ??_DELAY_ms:	
   166  0072                     DELAY_ms@i:	
   167                           ; 1 bytes @ 0x2
   168                           
   169                           
   170                           ; 2 bytes @ 0x2
   171  0072                     	ds	2
   172  0074                     DELAY_ms@j:	
   173                           
   174                           ; 2 bytes @ 0x4
   175  0074                     	ds	2
   176  0076                     ??_main:	
   177                           
   178                           ; 1 bytes @ 0x6
   179  0076                     	ds	4
   180                           
   181                           	psect	cstackBANK0
   182  0020                     __pcstackBANK0:	
   183  0020                     main@seg_code:	
   184                           
   185                           ; 16 bytes @ 0x0
   186  0020                     	ds	16
   187  0030                     main@cnt:	
   188                           
   189                           ; 1 bytes @ 0x10
   190  0030                     	ds	1
   191                           
   192                           	psect	maintext
   193  07B9                     __pmaintext:	
   194 ;;
   195 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   196 ;;
   197 ;; *************** function _main *****************
   198 ;; Defined at:
   199 ;;		line 50 in file "main.c"
   200 ;; Parameters:    Size  Location     Type
   201 ;;		None
   202 ;; Auto vars:     Size  Location     Type
   203 ;;  seg_code       16    0[BANK0 ] unsigned char [16]
   204 ;;  cnt             1   16[BANK0 ] unsigned char 
   205 ;; Return value:  Size  Location     Type
   206 ;;                  2   14[None  ] int 
   207 ;; Registers used:
   208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   209 ;; Tracked objects:
   210 ;;		On entry : B00/0
   211 ;;		On exit  : 0/0
   212 ;;		Unchanged: 0/0
   213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   214 ;;      Params:         0       0       0       0       0
   215 ;;      Locals:         0      17       0       0       0
   216 ;;      Temps:          4       0       0       0       0
   217 ;;      Totals:         4      17       0       0       0
   218 ;;Total ram usage:       21 bytes
   219 ;; Hardware stack levels required when called:    1
   220 ;; This function calls:
   221 ;;		_DELAY_ms
   222 ;; This function is called by:
   223 ;;		Startup code after reset
   224 ;; This function uses a non-reentrant model
   225 ;;
   226                           
   227                           
   228                           ;psect for function _main
   229  07B9                     _main:	
   230                           
   231                           ;main.c: 52: char seg_code[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7
      +                          c,0x39,0x5e,0x79,0x71};
   232                           
   233                           ;incstack = 0
   234                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   235  07B9  3020               	movlw	main@seg_code& (0+255)
   236  07BA  0084               	movwf	4
   237  07BB  3031               	movlw	low main@F1073
   238  07BC  00F6               	movwf	??_main
   239  07BD  0804               	movf	4,w
   240  07BE  00F7               	movwf	??_main+1
   241  07BF  3010               	movlw	16
   242  07C0  00F8               	movwf	??_main+2
   243  07C1                     u100:	
   244  07C1  0876               	movf	??_main,w
   245  07C2  0084               	movwf	4
   246  07C3  1383               	bcf	3,7	;select IRP bank0
   247  07C4  0800               	movf	0,w
   248  07C5  00F9               	movwf	??_main+3
   249  07C6  0AF6               	incf	??_main,f
   250  07C7  0877               	movf	??_main+1,w
   251  07C8  0084               	movwf	4
   252  07C9  0879               	movf	??_main+3,w
   253  07CA  0080               	movwf	0
   254  07CB  0AF7               	incf	??_main+1,f
   255  07CC  0BF8               	decfsz	??_main+2,f
   256  07CD  2FC1               	goto	u100
   257                           
   258                           ;main.c: 53: char cnt=0;
   259  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   260  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   261  07D0  01B0               	clrf	main@cnt
   262                           
   263                           ;main.c: 56: TRISB = 0x00;
   264  07D1  1683               	bsf	3,5	;RP0=1, select bank1
   265  07D2  1303               	bcf	3,6	;RP1=0, select bank1
   266  07D3  0186               	clrf	6	;volatile
   267  07D4                     l532:	
   268                           ;main.c: 58: while(1)
   269                           
   270                           
   271                           ;main.c: 59: {
   272                           ;main.c: 60: for(cnt=0x00;cnt<=0x0f;cnt++)
   273  07D4  1283               	bcf	3,5	;RP0=0, select bank0
   274  07D5  01B0               	clrf	main@cnt
   275  07D6                     L1:	
   276  07D6  3010               	movlw	16
   277  07D7  0230               	subwf	main@cnt,w
   278  07D8  1803               	btfsc	3,0
   279  07D9  2FD4               	goto	l532
   280                           
   281                           ;main.c: 61: {
   282                           ;main.c: 62: PORTB = seg_code[cnt];
   283  07DA  0830               	movf	main@cnt,w
   284  07DB  3E20               	addlw	(low (main@seg_code| 0))& (0+255)
   285  07DC  0084               	movwf	4
   286  07DD  1383               	bcf	3,7	;select IRP bank0
   287  07DE  0800               	movf	0,w
   288  07DF  0086               	movwf	6	;volatile
   289                           
   290                           ;main.c: 63: DELAY_ms(1000);
   291  07E0  30E8               	movlw	232
   292  07E1  00F0               	movwf	DELAY_ms@ms_Count
   293  07E2  3003               	movlw	3
   294  07E3  00F1               	movwf	DELAY_ms@ms_Count+1
   295  07E4  120A  118A  2792  120A  118A  	fcall	_DELAY_ms
   296  07E9  3001               	movlw	1
   297  07EA  00F6               	movwf	??_main
   298  07EB  0876               	movf	??_main,w
   299  07EC  1283               	bcf	3,5	;RP0=0, select bank0
   300  07ED  1303               	bcf	3,6	;RP1=0, select bank0
   301  07EE  07B0               	addwf	main@cnt,f
   302  07EF  2FD6               	goto	L1
   303  07F0                     __end_of_main:	
   304                           
   305                           	psect	text1
   306  0792                     __ptext1:	
   307 ;; *************** function _DELAY_ms *****************
   308 ;; Defined at:
   309 ;;		line 40 in file "main.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;  ms_Count        2    0[COMMON] unsigned int 
   312 ;; Auto vars:     Size  Location     Type
   313 ;;  j               2    4[COMMON] unsigned int 
   314 ;;  i               2    2[COMMON] unsigned int 
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		wreg, status,2
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   324 ;;      Params:         2       0       0       0       0
   325 ;;      Locals:         4       0       0       0       0
   326 ;;      Temps:          0       0       0       0       0
   327 ;;      Totals:         6       0       0       0       0
   328 ;;Total ram usage:        6 bytes
   329 ;; Hardware stack levels used:    1
   330 ;; This function calls:
   331 ;;		Nothing
   332 ;; This function is called by:
   333 ;;		_main
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           
   338                           ;psect for function _DELAY_ms
   339  0792                     _DELAY_ms:	
   340                           
   341                           ;main.c: 42: unsigned int i,j;
   342                           ;main.c: 43: for(i=0;i<ms_Count;i++)
   343                           
   344                           ;incstack = 0
   345                           ; Regs used in _DELAY_ms: [wreg+status,2]
   346  0792  01F2               	clrf	DELAY_ms@i
   347  0793  01F3               	clrf	DELAY_ms@i+1
   348  0794                     l7:	
   349  0794  0871               	movf	DELAY_ms@ms_Count+1,w
   350  0795  0273               	subwf	DELAY_ms@i+1,w
   351  0796  1D03               	skipz
   352  0797  2F9A               	goto	u95
   353  0798  0870               	movf	DELAY_ms@ms_Count,w
   354  0799  0272               	subwf	DELAY_ms@i,w
   355  079A                     u95:	
   356  079A  1803               	btfsc	3,0
   357  079B  0008               	return
   358                           
   359                           ;main.c: 44: {
   360                           ;main.c: 45: for(j=0;j<100;j++);
   361  079C  01F4               	clrf	DELAY_ms@j
   362  079D  01F5               	clrf	DELAY_ms@j+1
   363  079E  3000               	movlw	0
   364  079F  0275               	subwf	DELAY_ms@j+1,w
   365  07A0  3064               	movlw	100
   366  07A1  1903               	skipnz
   367  07A2  0274               	subwf	DELAY_ms@j,w
   368  07A3  1803               	btfsc	3,0
   369  07A4  2FB2               	goto	l524
   370  07A5                     l522:	
   371  07A5  3001               	movlw	1
   372  07A6  07F4               	addwf	DELAY_ms@j,f
   373  07A7  1803               	skipnc
   374  07A8  0AF5               	incf	DELAY_ms@j+1,f
   375  07A9  3000               	movlw	0
   376  07AA  07F5               	addwf	DELAY_ms@j+1,f
   377  07AB  3000               	movlw	0
   378  07AC  0275               	subwf	DELAY_ms@j+1,w
   379  07AD  3064               	movlw	100
   380  07AE  1903               	skipnz
   381  07AF  0274               	subwf	DELAY_ms@j,w
   382  07B0  1C03               	skipc
   383  07B1  2FA5               	goto	l522
   384  07B2                     l524:	
   385  07B2  3001               	movlw	1
   386  07B3  07F2               	addwf	DELAY_ms@i,f
   387  07B4  1803               	skipnc
   388  07B5  0AF3               	incf	DELAY_ms@i+1,f
   389  07B6  3000               	movlw	0
   390  07B7  07F3               	addwf	DELAY_ms@i+1,f
   391  07B8  2F94               	goto	l7
   392  07B9                     __end_of_DELAY_ms:	
   393  007E                     btemp	set	126	;btemp
   394  007E                     wtemp	set	126
   395  007E                     wtemp0	set	126
   396  0080                     wtemp1	set	128
   397  0082                     wtemp2	set	130
   398  0084                     wtemp3	set	132
   399  0086                     wtemp4	set	134
   400  0088                     wtemp5	set	136
   401  007F                     wtemp6	set	127
   402  007E                     ttemp	set	126
   403  007E                     ttemp0	set	126
   404  0081                     ttemp1	set	129
   405  0084                     ttemp2	set	132
   406  0087                     ttemp3	set	135
   407  007F                     ttemp4	set	127
   408  007E                     ltemp	set	126
   409  007E                     ltemp0	set	126
   410  0082                     ltemp1	set	130
   411  0086                     ltemp2	set	134
   412  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     17      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DELAY_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0     238
                                              6 COMMON     4     4      0
                                              0 BANK0     17    17      0
                           _DELAY_ms
 ---------------------------------------------------------------------------------
 (1) _DELAY_ms                                             6     4      2     145
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      21       5       41.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2B      12        0.0%
ABS                  0      0      2B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Feb 20 12:05:52 2016

                      l7 0794                        pc 0002                       u95 079A  
                     fsr 0004                      l522 07A5                      l524 07B2  
                    l532 07D4                      u100 07C1                      fsr0 0004  
                    indf 0000                     _main 07B9                     btemp 007E  
                   ltemp 007E                     start 0000                     ttemp 007E  
                   wtemp 007E         __end_of_DELAY_ms 07B9                    ?_main 0070  
                  _PORTB 0006                    _TRISB 0086             main@seg_code 0020  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 07F0             __end_of_main 07F0                   ??_main 0076  
              DELAY_ms@i 0072                DELAY_ms@j 0074         DELAY_ms@ms_Count 0070  
              ?_DELAY_ms 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 0771               ??_DELAY_ms 0072               __pmaintext 07B9  
                __ptext1 0792                  main@cnt 0030     end_of_initialization 07FC  
      __size_of_DELAY_ms 0027      start_initialization 07F0               init_fetch0 0781  
            __pdataBANK0 0031                ___latbits 0002            __pcstackBANK0 0020  
               _DELAY_ms 0792                main@F1073 0031            __size_of_main 0037  
               init_ram0 0785  
