

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Feb 20 14:01:03 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     	;# 
    39  0001                     	;# 
    40  0002                     	;# 
    41  0003                     	;# 
    42  0004                     	;# 
    43  0005                     	;# 
    44  0006                     	;# 
    45  0007                     	;# 
    46  0008                     	;# 
    47  0009                     	;# 
    48  000A                     	;# 
    49  000B                     	;# 
    50  000C                     	;# 
    51  000D                     	;# 
    52  000E                     	;# 
    53  000E                     	;# 
    54  000F                     	;# 
    55  0010                     	;# 
    56  0011                     	;# 
    57  0012                     	;# 
    58  0013                     	;# 
    59  0014                     	;# 
    60  0015                     	;# 
    61  0015                     	;# 
    62  0016                     	;# 
    63  0017                     	;# 
    64  0018                     	;# 
    65  0019                     	;# 
    66  001A                     	;# 
    67  001B                     	;# 
    68  001B                     	;# 
    69  001C                     	;# 
    70  001D                     	;# 
    71  001E                     	;# 
    72  001F                     	;# 
    73  0081                     	;# 
    74  0085                     	;# 
    75  0086                     	;# 
    76  0087                     	;# 
    77  0088                     	;# 
    78  0089                     	;# 
    79  008C                     	;# 
    80  008D                     	;# 
    81  008E                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0094                     	;# 
    86  0098                     	;# 
    87  0099                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009E                     	;# 
    91  009F                     	;# 
    92  010C                     	;# 
    93  010D                     	;# 
    94  010E                     	;# 
    95  010F                     	;# 
    96  018C                     	;# 
    97  018D                     	;# 
    98                           
    99                           	psect	idataBANK0
   100  0DDB                     __pidataBANK0:	
   101                           
   102                           ;initializer for _ARR_LcdLineNumAddress_U8
   103  0DDB  3480               	retlw	128
   104  0DDC  34C0               	retlw	192
   105  0DDD  3490               	retlw	144
   106  0DDE  34D0               	retlw	208
   107  0005                     _PORTA	set	5
   108  0006                     _PORTB	set	6
   109  0007                     _PORTC	set	7
   110  0008                     _PORTD	set	8
   111  0009                     _PORTE	set	9
   112  0085                     _TRISA	set	133
   113  0086                     _TRISB	set	134
   114  0087                     _TRISC	set	135
   115  0088                     _TRISD	set	136
   116  0089                     _TRISE	set	137
   117                           
   118                           	psect	strings
   119  0800                     __pstrings:	
   120  0800                     stringtab:	
   121  0800                     __stringtab:	
   122  0800                     stringcode:	
   123                           ;	String table - string pointers are 1 byte each
   124                           
   125  0800                     stringdir:	
   126  0800  3008               	movlw	high stringdir
   127  0801  008A               	movwf	10
   128  0802  0804               	movf	4,w
   129  0803  0A84               	incf	4,f
   130  0804  0782               	addwf	2,f
   131  0805                     __stringbase:	
   132  0805  3400               	retlw	0
   133  0806                     __end_of__stringtab:	
   134  0806                     STR_2:	
   135  0806  3443               	retlw	67	;'C'
   136  0807  346F               	retlw	111	;'o'
   137  0808  3475               	retlw	117	;'u'
   138  0809  346E               	retlw	110	;'n'
   139  080A  3474               	retlw	116	;'t'
   140  080B  343D               	retlw	61	;'='
   141  080C  3425               	retlw	37	;'%'
   142  080D  3434               	retlw	52	;'4'
   143  080E  3464               	retlw	100	;'d'
   144  080F  3400               	retlw	0
   145  0810                     STR_1:	
   146  0810  3444               	retlw	68	;'D'
   147  0811  3465               	retlw	101	;'e'
   148  0812  3463               	retlw	99	;'c'
   149  0813  3469               	retlw	105	;'i'
   150  0814  346D               	retlw	109	;'m'
   151  0815  3461               	retlw	97	;'a'
   152  0816  346C               	retlw	108	;'l'
   153  0817  3400               	retlw	0
   154                           
   155                           ; #config settings
   156  0000                     
   157                           	psect	cinit
   158  07D2                     start_initialization:	
   159  07D2                     __initialization:	
   160                           
   161                           ; Clear objects allocated to BANK0
   162  07D2  01E9               	clrf	__pbssBANK0& (0+127)
   163  07D3  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   164                           
   165                           ; Clear objects allocated to BANK1
   166  07D4  1683               	bsf	3,5	;RP0=1, select bank1
   167  07D5  1303               	bcf	3,6	;RP1=0, select bank1
   168  07D6  01A0               	clrf	__pbssBANK1& (0+127)
   169  07D7  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   170  07D8  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   171  07D9  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   172  07DA  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   173  07DB  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   174  07DC  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   175  07DD  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   176  07DE  01A8               	clrf	(__pbssBANK1+8)& (0+127)
   177  07DF  01A9               	clrf	(__pbssBANK1+9)& (0+127)
   178  07E0  01AA               	clrf	(__pbssBANK1+10)& (0+127)
   179  07E1  01AB               	clrf	(__pbssBANK1+11)& (0+127)
   180  07E2  01AC               	clrf	(__pbssBANK1+12)& (0+127)
   181  07E3  01AD               	clrf	(__pbssBANK1+13)& (0+127)
   182                           
   183                           ; Initialize objects allocated to BANK0
   184  07E4  1283               	bcf	3,5	;RP0=0, select bank0
   185  07E5  1303               	bcf	3,6	;RP1=0, select bank0
   186  07E6  120A  158A  25DB  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   187  07EB  00E5               	movwf	__pdataBANK0& (0+127)
   188  07EC  120A  158A  25DC  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   189  07F1  00E6               	movwf	(__pdataBANK0+1)& (0+127)
   190  07F2  120A  158A  25DD  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   191  07F7  00E7               	movwf	(__pdataBANK0+2)& (0+127)
   192  07F8  120A  158A  25DE   	fcall	__pidataBANK0+3	;fetch initializer
   193  07FB  00E8               	movwf	(__pdataBANK0+3)& (0+127)
   194  07FC                     end_of_initialization:	
   195                           ;End of C runtime variable initialization code
   196                           
   197  07FC                     __end_of__initialization:	
   198  07FC  0183               	clrf	3
   199  07FD  120A  118A  28D0   	ljmp	_main	;jump to C main() function
   200                           
   201                           	psect	bssBANK0
   202  0069                     __pbssBANK0:	
   203  0069                     _v_LcdTrackCursorPos_U8:	
   204  0069                     	ds	1
   205  006A                     _v_LcdTrackLineNum_U8:	
   206  006A                     	ds	1
   207                           
   208                           	psect	dataBANK0
   209  0065                     __pdataBANK0:	
   210  0065                     _ARR_LcdLineNumAddress_U8:	
   211  0065                     	ds	4
   212                           
   213                           	psect	bssBANK1
   214  00A0                     __pbssBANK1:	
   215  00A0                     _LCDConfig:	
   216  00A0                     	ds	14
   217                           
   218                           	psect	cstackCOMMON
   219  0070                     __pcstackCOMMON:	
   220  0070                     ?_LCD_DisplayString:	
   221  0070                     ?_LCD_GoToLine:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0070                     ?_GPIO_PinDirection:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0070                     ?_LCD_CmdWrite:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0070                     ?_lcd_Reset:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ?_LCD_Clear:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     ?_lcd_BusyCheck:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     ?_lcd_SendLowerNibble:	
   240                           ; 1 bytes @ 0x0
   241                           
   242  0070                     ?_lcd_SendHigherNibble:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0070                     ?_lcd_SendCmdSignals:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ?_lcd_DataWrite:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ?_lcd_SendDataSignals:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_GPIO_PinWrite:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ?_DELAY_us:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ?_GPIO_PinRead:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ??_GPIO_PinRead:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?_LCD_GoToNextLine:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ?_LCD_DisplayChar:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ?_main:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?___lldiv:	
   276                           ; 2 bytes @ 0x0
   277                           
   278  0070                     GPIO_PinDirection@var_pinDirn_u8:	
   279                           ; 4 bytes @ 0x0
   280                           
   281  0070                     GPIO_PinWrite@var_pinValue_u8:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     DELAY_us@us_count:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ___lldiv@divisor:	
   288                           ; 2 bytes @ 0x0
   289                           
   290                           
   291                           ; 4 bytes @ 0x0
   292  0070                     	ds	1
   293  0071                     ??_GPIO_PinDirection:	
   294  0071                     ??_GPIO_PinWrite:	
   295                           ; 1 bytes @ 0x1
   296                           
   297                           
   298                           ; 1 bytes @ 0x1
   299  0071                     	ds	1
   300  0072                     ?_DELAY_ms:	
   301  0072                     ??_DELAY_us:	
   302                           ; 1 bytes @ 0x2
   303                           
   304  0072                     GPIO_PinRead@var_portNumber_u8:	
   305                           ; 1 bytes @ 0x2
   306                           
   307  0072                     DELAY_ms@ms_count:	
   308                           ; 1 bytes @ 0x2
   309                           
   310                           
   311                           ; 2 bytes @ 0x2
   312  0072                     	ds	1
   313  0073                     GPIO_PinDirection@var_portNumber_u8:	
   314  0073                     GPIO_PinWrite@var_portNumber_u8:	
   315                           ; 1 bytes @ 0x3
   316                           
   317  0073                     GPIO_PinRead@returnStatus:	
   318                           ; 1 bytes @ 0x3
   319                           
   320                           
   321                           ; 1 bytes @ 0x3
   322  0073                     	ds	1
   323  0074                     ??_DELAY_ms:	
   324  0074                     GPIO_PinDirection@enm_pinNumber:	
   325                           ; 1 bytes @ 0x4
   326                           
   327  0074                     GPIO_PinWrite@enm_pinNumber:	
   328                           ; 1 bytes @ 0x4
   329                           
   330  0074                     GPIO_PinRead@enm_pinNumber:	
   331                           ; 1 bytes @ 0x4
   332                           
   333  0074                     ___lldiv@dividend:	
   334                           ; 1 bytes @ 0x4
   335                           
   336                           
   337                           ; 4 bytes @ 0x4
   338  0074                     	ds	1
   339  0075                     ??_LCD_SetUp:	
   340  0075                     ??_lcd_BusyCheck:	
   341                           ; 1 bytes @ 0x5
   342                           
   343  0075                     ??_lcd_SendLowerNibble:	
   344                           ; 1 bytes @ 0x5
   345                           
   346  0075                     ??_lcd_SendHigherNibble:	
   347                           ; 1 bytes @ 0x5
   348                           
   349  0075                     ??_lcd_SendCmdSignals:	
   350                           ; 1 bytes @ 0x5
   351                           
   352  0075                     ??_lcd_SendDataSignals:	
   353                           ; 1 bytes @ 0x5
   354                           
   355                           
   356                           ; 1 bytes @ 0x5
   357  0075                     	ds	1
   358  0076                     LCD_SetUp@RS:	
   359  0076                     lcd_BusyCheck@busyflag:	
   360                           ; 1 bytes @ 0x6
   361                           
   362  0076                     lcd_SendHigherNibble@dataByte:	
   363                           ; 1 bytes @ 0x6
   364                           
   365  0076                     lcd_SendLowerNibble@dataByte:	
   366                           ; 1 bytes @ 0x6
   367                           
   368                           
   369                           ; 1 bytes @ 0x6
   370  0076                     	ds	1
   371  0077                     ??_LCD_CmdWrite:	
   372  0077                     ??_lcd_Reset:	
   373                           ; 1 bytes @ 0x7
   374                           
   375  0077                     ??_lcd_DataWrite:	
   376                           ; 1 bytes @ 0x7
   377                           
   378                           
   379                           ; 1 bytes @ 0x7
   380  0077                     	ds	1
   381  0078                     ??___lldiv:	
   382                           
   383                           ; 1 bytes @ 0x8
   384  0078                     	ds	1
   385  0079                     LCD_CmdWrite@v_lcdCmd_u8:	
   386  0079                     lcd_DataWrite@dataByte:	
   387                           ; 1 bytes @ 0x9
   388                           
   389  0079                     ___lldiv@quotient:	
   390                           ; 1 bytes @ 0x9
   391                           
   392                           
   393                           ; 4 bytes @ 0x9
   394  0079                     	ds	1
   395  007A                     ??_LCD_GoToLine:	
   396  007A                     ??_LCD_GoToNextLine:	
   397                           ; 1 bytes @ 0xA
   398                           
   399                           
   400                           ; 1 bytes @ 0xA
   401  007A                     	ds	1
   402  007B                     ??_LCD_DisplayChar:	
   403  007B                     LCD_GoToLine@v_lineNumber_u8:	
   404                           ; 1 bytes @ 0xB
   405                           
   406                           
   407                           ; 1 bytes @ 0xB
   408  007B                     	ds	1
   409  007C                     ?_LCD_Init:	
   410  007C                     ??_LCD_Clear:	
   411                           ; 1 bytes @ 0xC
   412                           
   413  007C                     LCD_Init@v_MaxCharsPerLine_u8:	
   414                           ; 1 bytes @ 0xC
   415                           
   416  007C                     LCD_DisplayChar@v_lcdData_u8:	
   417                           ; 1 bytes @ 0xC
   418                           
   419                           
   420                           ; 1 bytes @ 0xC
   421  007C                     	ds	1
   422  007D                     ??_LCD_Init:	
   423  007D                     ??_LCD_DisplayString:	
   424                           ; 1 bytes @ 0xD
   425                           
   426  007D                     ___lldiv@counter:	
   427                           ; 1 bytes @ 0xD
   428                           
   429                           
   430                           ; 1 bytes @ 0xD
   431  007D                     	ds	1
   432                           
   433                           	psect	cstackBANK0
   434  0020                     __pcstackBANK0:	
   435  0020                     ?_LCD_SetUp:	
   436  0020                     ?___bmul:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0020                     LCD_SetUp@RW:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0020                     LCD_Init@v_lcdNoOfLines_u8:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0020                     LCD_DisplayString@ptr_stringPointer_u8:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0020                     ___bmul@multiplicand:	
   449                           ; 1 bytes @ 0x0
   450                           
   451                           
   452                           ; 1 bytes @ 0x0
   453  0020                     	ds	1
   454  0021                     ??___bmul:	
   455  0021                     LCD_SetUp@EN:	
   456                           ; 1 bytes @ 0x1
   457                           
   458                           
   459                           ; 1 bytes @ 0x1
   460  0021                     	ds	1
   461  0022                     LCD_SetUp@D0:	
   462  0022                     ___bmul@product:	
   463                           ; 1 bytes @ 0x2
   464                           
   465                           
   466                           ; 1 bytes @ 0x2
   467  0022                     	ds	1
   468  0023                     LCD_SetUp@D1:	
   469  0023                     ___bmul@multiplier:	
   470                           ; 1 bytes @ 0x3
   471                           
   472                           
   473                           ; 1 bytes @ 0x3
   474  0023                     	ds	1
   475  0024                     ?_LCD_DisplayNumber:	
   476  0024                     LCD_SetUp@D2:	
   477                           ; 1 bytes @ 0x4
   478                           
   479  0024                     LCD_DisplayNumber@v_number_u32:	
   480                           ; 1 bytes @ 0x4
   481                           
   482                           
   483                           ; 4 bytes @ 0x4
   484  0024                     	ds	1
   485  0025                     LCD_SetUp@D3:	
   486                           
   487                           ; 1 bytes @ 0x5
   488  0025                     	ds	1
   489  0026                     LCD_SetUp@D4:	
   490                           
   491                           ; 1 bytes @ 0x6
   492  0026                     	ds	1
   493  0027                     LCD_SetUp@D5:	
   494                           
   495                           ; 1 bytes @ 0x7
   496  0027                     	ds	1
   497  0028                     LCD_SetUp@D6:	
   498  0028                     LCD_DisplayNumber@v_numOfDigitsToDisplay_u8:	
   499                           ; 1 bytes @ 0x8
   500                           
   501                           
   502                           ; 1 bytes @ 0x8
   503  0028                     	ds	1
   504  0029                     ??_LCD_DisplayNumber:	
   505  0029                     LCD_SetUp@D7:	
   506                           ; 1 bytes @ 0x9
   507                           
   508                           
   509                           ; 1 bytes @ 0x9
   510  0029                     	ds	12
   511  0035                     LCD_DisplayNumber@a:	
   512                           
   513                           ; 10 bytes @ 0x15
   514  0035                     	ds	10
   515  003F                     _LCD_DisplayNumber$287:	
   516                           
   517                           ; 2 bytes @ 0x1F
   518  003F                     	ds	2
   519  0041                     LCD_DisplayNumber@v_numericSystem_u8:	
   520                           
   521                           ; 1 bytes @ 0x21
   522  0041                     	ds	1
   523  0042                     LCD_DisplayNumber@i:	
   524                           
   525                           ; 1 bytes @ 0x22
   526  0042                     	ds	1
   527  0043                     ?_LCD_Printf:	
   528                           
   529                           ; 1 bytes @ 0x23
   530  0043                     	ds	2
   531  0045                     ??_LCD_Printf:	
   532                           
   533                           ; 1 bytes @ 0x25
   534  0045                     	ds	2
   535  0047                     LCD_Printf@str:	
   536                           
   537                           ; 1 bytes @ 0x27
   538  0047                     	ds	1
   539  0048                     LCD_Printf@argList:	
   540                           
   541                           ; 1 bytes @ 0x28
   542  0048                     	ds	1
   543  0049                     LCD_Printf@v_num_s32:	
   544                           
   545                           ; 4 bytes @ 0x29
   546  0049                     	ds	4
   547  004D                     LCD_Printf@v_num_s16:	
   548                           
   549                           ; 2 bytes @ 0x2D
   550  004D                     	ds	2
   551  004F                     LCD_Printf@v_num_u32:	
   552                           
   553                           ; 4 bytes @ 0x2F
   554  004F                     	ds	4
   555  0053                     LCD_Printf@v_num_u16:	
   556                           
   557                           ; 2 bytes @ 0x33
   558  0053                     	ds	2
   559  0055                     LCD_Printf@ptr:	
   560                           
   561                           ; 1 bytes @ 0x35
   562  0055                     	ds	1
   563  0056                     LCD_Printf@ch:	
   564                           
   565                           ; 1 bytes @ 0x36
   566  0056                     	ds	1
   567  0057                     LCD_Printf@v_numOfDigitsToDisp_u8:	
   568                           
   569                           ; 1 bytes @ 0x37
   570  0057                     	ds	1
   571  0058                     LCD_Printf@argp:	
   572                           
   573                           ; 1 bytes @ 0x38
   574  0058                     	ds	1
   575  0059                     ??_main:	
   576                           
   577                           ; 1 bytes @ 0x39
   578  0059                     	ds	10
   579  0063                     main@count:	
   580                           
   581                           ; 2 bytes @ 0x43
   582  0063                     	ds	2
   583                           
   584                           	psect	maintext
   585  00D0                     __pmaintext:	
   586 ;;
   587 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   588 ;;
   589 ;; *************** function _main *****************
   590 ;; Defined at:
   591 ;;		line 43 in file "main.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;  count           2   67[BANK0 ] int 
   596 ;; Return value:  Size  Location     Type
   597 ;;                  2   14[None  ] int 
   598 ;; Registers used:
   599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   600 ;; Tracked objects:
   601 ;;		On entry : B00/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   605 ;;      Params:         0       0       0       0       0
   606 ;;      Locals:         0       2       0       0       0
   607 ;;      Temps:          0      10       0       0       0
   608 ;;      Totals:         0      12       0       0       0
   609 ;;Total ram usage:       12 bytes
   610 ;; Hardware stack levels required when called:    8
   611 ;; This function calls:
   612 ;;		_DELAY_ms
   613 ;;		_LCD_DisplayString
   614 ;;		_LCD_GoToLine
   615 ;;		_LCD_Init
   616 ;;		_LCD_Printf
   617 ;;		_LCD_SetUp
   618 ;; This function is called by:
   619 ;;		Startup code after reset
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           
   624                           ;psect for function _main
   625  00D0                     _main:	
   626                           
   627                           ;main.c: 45: int count = 0;
   628                           
   629                           ;incstack = 0
   630                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   631  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   632  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   633  00D2  01E3               	clrf	main@count
   634  00D3  01E4               	clrf	main@count+1
   635                           
   636                           ;main.c: 47: LCD_SetUp(PD_0,PD_1,PD_2,PB_0,PB_1,PB_2,PB_3,PB_4,PB_5,PB_6,PB_7);
   637  00D4  3019               	movlw	25
   638  00D5  00D9               	movwf	??_main
   639  00D6  0859               	movf	??_main,w
   640  00D7  00A0               	movwf	LCD_SetUp@RW
   641  00D8  301A               	movlw	26
   642  00D9  00DA               	movwf	??_main+1
   643  00DA  085A               	movf	??_main+1,w
   644  00DB  00A1               	movwf	LCD_SetUp@EN
   645  00DC  3008               	movlw	8
   646  00DD  00DB               	movwf	??_main+2
   647  00DE  085B               	movf	??_main+2,w
   648  00DF  00A2               	movwf	LCD_SetUp@D0
   649  00E0  3009               	movlw	9
   650  00E1  00DC               	movwf	??_main+3
   651  00E2  085C               	movf	??_main+3,w
   652  00E3  00A3               	movwf	LCD_SetUp@D1
   653  00E4  300A               	movlw	10
   654  00E5  00DD               	movwf	??_main+4
   655  00E6  085D               	movf	??_main+4,w
   656  00E7  00A4               	movwf	LCD_SetUp@D2
   657  00E8  300B               	movlw	11
   658  00E9  00DE               	movwf	??_main+5
   659  00EA  085E               	movf	??_main+5,w
   660  00EB  00A5               	movwf	LCD_SetUp@D3
   661  00EC  300C               	movlw	12
   662  00ED  00DF               	movwf	??_main+6
   663  00EE  085F               	movf	??_main+6,w
   664  00EF  00A6               	movwf	LCD_SetUp@D4
   665  00F0  300D               	movlw	13
   666  00F1  00E0               	movwf	??_main+7
   667  00F2  0860               	movf	??_main+7,w
   668  00F3  00A7               	movwf	LCD_SetUp@D5
   669  00F4  300E               	movlw	14
   670  00F5  00E1               	movwf	??_main+8
   671  00F6  0861               	movf	??_main+8,w
   672  00F7  00A8               	movwf	LCD_SetUp@D6
   673  00F8  300F               	movlw	15
   674  00F9  00E2               	movwf	??_main+9
   675  00FA  0862               	movf	??_main+9,w
   676  00FB  00A9               	movwf	LCD_SetUp@D7
   677  00FC  3018               	movlw	24
   678  00FD  120A  118A  2239  120A  118A  	fcall	_LCD_SetUp
   679                           
   680                           ;main.c: 48: LCD_Init(2,16);
   681  0102  3010               	movlw	16
   682  0103  1283               	bcf	3,5	;RP0=0, select bank0
   683  0104  1303               	bcf	3,6	;RP1=0, select bank0
   684  0105  00D9               	movwf	??_main
   685  0106  0859               	movf	??_main,w
   686  0107  00FC               	movwf	LCD_Init@v_MaxCharsPerLine_u8
   687  0108  3002               	movlw	2
   688  0109  120A  118A  2023  120A  118A  	fcall	_LCD_Init
   689                           
   690                           ;main.c: 50: LCD_DisplayString("Decimal");
   691  010E  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   692  010F  120A  118A  2003  120A  118A  	fcall	_LCD_DisplayString
   693  0114                     l1792:	
   694                           ;main.c: 52: while(1)
   695                           
   696                           
   697                           ;main.c: 53: {
   698                           ;main.c: 54: LCD_GoToLine(1);
   699  0114  3001               	movlw	1
   700  0115  120A  158A  261C  120A  118A  	fcall	_LCD_GoToLine
   701                           
   702                           ;main.c: 55: LCD_Printf("Count=%4d",count);
   703  011A  1283               	bcf	3,5	;RP0=0, select bank0
   704  011B  1303               	bcf	3,6	;RP1=0, select bank0
   705  011C  0864               	movf	main@count+1,w
   706  011D  00C4               	movwf	?_LCD_Printf+1
   707  011E  0863               	movf	main@count,w
   708  011F  00C3               	movwf	?_LCD_Printf
   709  0120  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   710  0121  120A  118A  25BD  120A  118A  	fcall	_LCD_Printf
   711                           
   712                           ;main.c: 56: DELAY_ms(500);
   713  0126  30F4               	movlw	244
   714  0127  00F2               	movwf	DELAY_ms@ms_count
   715  0128  3001               	movlw	1
   716  0129  00F3               	movwf	DELAY_ms@ms_count+1
   717  012A  120A  158A  2608  120A  118A  	fcall	_DELAY_ms
   718                           
   719                           ;main.c: 57: count++;
   720  012F  3001               	movlw	1
   721  0130  1283               	bcf	3,5	;RP0=0, select bank0
   722  0131  1303               	bcf	3,6	;RP1=0, select bank0
   723  0132  07E3               	addwf	main@count,f
   724  0133  1803               	skipnc
   725  0134  0AE4               	incf	main@count+1,f
   726  0135  3000               	movlw	0
   727  0136  07E4               	addwf	main@count+1,f
   728  0137  2914               	goto	l1792
   729  0138                     __end_of_main:	
   730                           ;main.c: 58: }
   731                           ;main.c: 60: return (0);
   732                           ;	Return value of _main is never used
   733                           
   734                           
   735                           	psect	text1
   736  0239                     __ptext1:	
   737 ;; *************** function _LCD_SetUp *****************
   738 ;; Defined at:
   739 ;;		line 129 in file "../00-libfiles/lcd.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;  RS              1    wreg     enum E33
   742 ;;  RW              1    0[BANK0 ] enum E33
   743 ;;  EN              1    1[BANK0 ] enum E33
   744 ;;  D0              1    2[BANK0 ] enum E33
   745 ;;  D1              1    3[BANK0 ] enum E33
   746 ;;  D2              1    4[BANK0 ] enum E33
   747 ;;  D3              1    5[BANK0 ] enum E33
   748 ;;  D4              1    6[BANK0 ] enum E33
   749 ;;  D5              1    7[BANK0 ] enum E33
   750 ;;  D6              1    8[BANK0 ] enum E33
   751 ;;  D7              1    9[BANK0 ] enum E33
   752 ;; Auto vars:     Size  Location     Type
   753 ;;  RS              1    6[COMMON] enum E33
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0      10       0       0       0
   764 ;;      Locals:         1       0       0       0       0
   765 ;;      Temps:          1       0       0       0       0
   766 ;;      Totals:         2      10       0       0       0
   767 ;;Total ram usage:       12 bytes
   768 ;; Hardware stack levels used:    1
   769 ;; Hardware stack levels required when called:    1
   770 ;; This function calls:
   771 ;;		_GPIO_PinDirection
   772 ;; This function is called by:
   773 ;;		_main
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           
   778                           ;psect for function _LCD_SetUp
   779  0239                     _LCD_SetUp:	
   780                           
   781                           ;incstack = 0
   782                           ; Regs used in _LCD_SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   783                           ;LCD_SetUp@RS stored from wreg
   784  0239  00F6               	movwf	LCD_SetUp@RS
   785                           
   786                           ;lcd.c: 142: LCDConfig.RS = RS;
   787  023A  0876               	movf	LCD_SetUp@RS,w
   788  023B  00F5               	movwf	??_LCD_SetUp
   789  023C  0875               	movf	??_LCD_SetUp,w
   790  023D  1683               	bsf	3,5	;RP0=1, select bank1
   791  023E  1303               	bcf	3,6	;RP1=0, select bank1
   792  023F  00A3               	movwf	(_LCDConfig^(0+128)+3)
   793                           
   794                           ;lcd.c: 143: LCDConfig.RW = RW;
   795  0240  1283               	bcf	3,5	;RP0=0, select bank0
   796  0241  1303               	bcf	3,6	;RP1=0, select bank0
   797  0242  0820               	movf	LCD_SetUp@RW,w
   798  0243  00F5               	movwf	??_LCD_SetUp
   799  0244  0875               	movf	??_LCD_SetUp,w
   800  0245  1683               	bsf	3,5	;RP0=1, select bank1
   801  0246  1303               	bcf	3,6	;RP1=0, select bank1
   802  0247  00A4               	movwf	(_LCDConfig^(0+128)+4)
   803                           
   804                           ;lcd.c: 144: LCDConfig.EN = EN;
   805  0248  1283               	bcf	3,5	;RP0=0, select bank0
   806  0249  1303               	bcf	3,6	;RP1=0, select bank0
   807  024A  0821               	movf	LCD_SetUp@EN,w
   808  024B  00F5               	movwf	??_LCD_SetUp
   809  024C  0875               	movf	??_LCD_SetUp,w
   810  024D  1683               	bsf	3,5	;RP0=1, select bank1
   811  024E  1303               	bcf	3,6	;RP1=0, select bank1
   812  024F  00A5               	movwf	(_LCDConfig^(0+128)+5)
   813                           
   814                           ;lcd.c: 146: LCDConfig.D0 = D0;
   815  0250  1283               	bcf	3,5	;RP0=0, select bank0
   816  0251  1303               	bcf	3,6	;RP1=0, select bank0
   817  0252  0822               	movf	LCD_SetUp@D0,w
   818  0253  00F5               	movwf	??_LCD_SetUp
   819  0254  0875               	movf	??_LCD_SetUp,w
   820  0255  1683               	bsf	3,5	;RP0=1, select bank1
   821  0256  1303               	bcf	3,6	;RP1=0, select bank1
   822  0257  00A6               	movwf	(_LCDConfig^(0+128)+6)
   823                           
   824                           ;lcd.c: 147: LCDConfig.D1 = D1;
   825  0258  1283               	bcf	3,5	;RP0=0, select bank0
   826  0259  1303               	bcf	3,6	;RP1=0, select bank0
   827  025A  0823               	movf	LCD_SetUp@D1,w
   828  025B  00F5               	movwf	??_LCD_SetUp
   829  025C  0875               	movf	??_LCD_SetUp,w
   830  025D  1683               	bsf	3,5	;RP0=1, select bank1
   831  025E  1303               	bcf	3,6	;RP1=0, select bank1
   832  025F  00A7               	movwf	(_LCDConfig^(0+128)+7)
   833                           
   834                           ;lcd.c: 148: LCDConfig.D2 = D2;
   835  0260  1283               	bcf	3,5	;RP0=0, select bank0
   836  0261  1303               	bcf	3,6	;RP1=0, select bank0
   837  0262  0824               	movf	LCD_SetUp@D2,w
   838  0263  00F5               	movwf	??_LCD_SetUp
   839  0264  0875               	movf	??_LCD_SetUp,w
   840  0265  1683               	bsf	3,5	;RP0=1, select bank1
   841  0266  1303               	bcf	3,6	;RP1=0, select bank1
   842  0267  00A8               	movwf	(_LCDConfig^(0+128)+8)
   843                           
   844                           ;lcd.c: 149: LCDConfig.D3 = D3;
   845  0268  1283               	bcf	3,5	;RP0=0, select bank0
   846  0269  1303               	bcf	3,6	;RP1=0, select bank0
   847  026A  0825               	movf	LCD_SetUp@D3,w
   848  026B  00F5               	movwf	??_LCD_SetUp
   849  026C  0875               	movf	??_LCD_SetUp,w
   850  026D  1683               	bsf	3,5	;RP0=1, select bank1
   851  026E  1303               	bcf	3,6	;RP1=0, select bank1
   852  026F  00A9               	movwf	(_LCDConfig^(0+128)+9)
   853                           
   854                           ;lcd.c: 150: LCDConfig.D4 = D4;
   855  0270  1283               	bcf	3,5	;RP0=0, select bank0
   856  0271  1303               	bcf	3,6	;RP1=0, select bank0
   857  0272  0826               	movf	LCD_SetUp@D4,w
   858  0273  00F5               	movwf	??_LCD_SetUp
   859  0274  0875               	movf	??_LCD_SetUp,w
   860  0275  1683               	bsf	3,5	;RP0=1, select bank1
   861  0276  1303               	bcf	3,6	;RP1=0, select bank1
   862  0277  00AA               	movwf	(_LCDConfig^(0+128)+10)
   863                           
   864                           ;lcd.c: 151: LCDConfig.D5 = D5;
   865  0278  1283               	bcf	3,5	;RP0=0, select bank0
   866  0279  1303               	bcf	3,6	;RP1=0, select bank0
   867  027A  0827               	movf	LCD_SetUp@D5,w
   868  027B  00F5               	movwf	??_LCD_SetUp
   869  027C  0875               	movf	??_LCD_SetUp,w
   870  027D  1683               	bsf	3,5	;RP0=1, select bank1
   871  027E  1303               	bcf	3,6	;RP1=0, select bank1
   872  027F  00AB               	movwf	(_LCDConfig^(0+128)+11)
   873                           
   874                           ;lcd.c: 152: LCDConfig.D6 = D6;
   875  0280  1283               	bcf	3,5	;RP0=0, select bank0
   876  0281  1303               	bcf	3,6	;RP1=0, select bank0
   877  0282  0828               	movf	LCD_SetUp@D6,w
   878  0283  00F5               	movwf	??_LCD_SetUp
   879  0284  0875               	movf	??_LCD_SetUp,w
   880  0285  1683               	bsf	3,5	;RP0=1, select bank1
   881  0286  1303               	bcf	3,6	;RP1=0, select bank1
   882  0287  00AC               	movwf	(_LCDConfig^(0+128)+12)
   883                           
   884                           ;lcd.c: 153: LCDConfig.D7 = D7;
   885  0288  1283               	bcf	3,5	;RP0=0, select bank0
   886  0289  1303               	bcf	3,6	;RP1=0, select bank0
   887  028A  0829               	movf	LCD_SetUp@D7,w
   888  028B  00F5               	movwf	??_LCD_SetUp
   889  028C  0875               	movf	??_LCD_SetUp,w
   890  028D  1683               	bsf	3,5	;RP0=1, select bank1
   891  028E  1303               	bcf	3,6	;RP1=0, select bank1
   892  028F  00AD               	movwf	(_LCDConfig^(0+128)+13)
   893                           
   894                           ;lcd.c: 156: if((D0 == P_NC) || (D1 == P_NC) || (D2 == P_NC) || (D3 == P_NC))
   895  0290  1283               	bcf	3,5	;RP0=0, select bank0
   896  0291  1303               	bcf	3,6	;RP1=0, select bank0
   897  0292  0A22               	incf	LCD_SetUp@D0,w
   898  0293  1903               	btfsc	3,2
   899  0294  2A9D               	goto	l1626
   900  0295  0A23               	incf	LCD_SetUp@D1,w
   901  0296  1903               	btfsc	3,2
   902  0297  2A9D               	goto	l1626
   903  0298  0A24               	incf	LCD_SetUp@D2,w
   904  0299  1D03               	btfss	3,2
   905  029A  0A25               	incf	LCD_SetUp@D3,w
   906  029B  1D03               	btfss	3,2
   907  029C  2AA4               	goto	l1628
   908  029D                     l1626:	
   909                           
   910                           ;lcd.c: 157: {
   911                           ;lcd.c: 158: LCDConfig.v_LcdMode_U8 = 4;
   912  029D  3004               	movlw	4
   913  029E  00F5               	movwf	??_LCD_SetUp
   914  029F  0875               	movf	??_LCD_SetUp,w
   915  02A0  1683               	bsf	3,5	;RP0=1, select bank1
   916  02A1  1303               	bcf	3,6	;RP1=0, select bank1
   917  02A2  00A2               	movwf	(_LCDConfig^(0+128)+2)
   918                           
   919                           ;lcd.c: 159: }
   920  02A3  2ACE               	goto	l1638
   921  02A4                     l1628:	
   922                           
   923                           ;lcd.c: 160: else
   924                           ;lcd.c: 161: {
   925                           ;lcd.c: 162: LCDConfig.v_LcdMode_U8 = 8;
   926  02A4  3008               	movlw	8
   927  02A5  00F5               	movwf	??_LCD_SetUp
   928  02A6  0875               	movf	??_LCD_SetUp,w
   929  02A7  1683               	bsf	3,5	;RP0=1, select bank1
   930  02A8  1303               	bcf	3,6	;RP1=0, select bank1
   931  02A9  00A2               	movwf	(_LCDConfig^(0+128)+2)
   932                           
   933                           ;lcd.c: 163: GPIO_PinDirection(D0,0x00u);
   934  02AA  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   935  02AB  1283               	bcf	3,5	;RP0=0, select bank0
   936  02AC  1303               	bcf	3,6	;RP1=0, select bank0
   937  02AD  0822               	movf	LCD_SetUp@D0,w
   938  02AE  120A  118A  230A  120A  118A  	fcall	_GPIO_PinDirection
   939                           
   940                           ;lcd.c: 164: GPIO_PinDirection(D1,0x00u);
   941  02B3  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   942  02B4  1283               	bcf	3,5	;RP0=0, select bank0
   943  02B5  1303               	bcf	3,6	;RP1=0, select bank0
   944  02B6  0823               	movf	LCD_SetUp@D1,w
   945  02B7  120A  118A  230A  120A  118A  	fcall	_GPIO_PinDirection
   946                           
   947                           ;lcd.c: 165: GPIO_PinDirection(D2,0x00u);
   948  02BC  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   949  02BD  1283               	bcf	3,5	;RP0=0, select bank0
   950  02BE  1303               	bcf	3,6	;RP1=0, select bank0
   951  02BF  0824               	movf	LCD_SetUp@D2,w
   952  02C0  120A  118A  230A  120A  118A  	fcall	_GPIO_PinDirection
   953                           
   954                           ;lcd.c: 166: GPIO_PinDirection(D3,0x00u);
   955  02C5  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   956  02C6  1283               	bcf	3,5	;RP0=0, select bank0
   957  02C7  1303               	bcf	3,6	;RP1=0, select bank0
   958  02C8  0825               	movf	LCD_SetUp@D3,w
   959  02C9  120A  118A  230A  120A  118A  	fcall	_GPIO_PinDirection
   960  02CE                     l1638:	
   961                           
   962                           ;lcd.c: 167: }
   963                           ;lcd.c: 170: GPIO_PinDirection(RS,0x00u);
   964  02CE  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   965  02CF  0876               	movf	LCD_SetUp@RS,w
   966  02D0  120A  118A  230A  120A  118A  	fcall	_GPIO_PinDirection
   967                           
   968                           ;lcd.c: 171: GPIO_PinDirection(RW,0x00u);
   969  02D5  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   970  02D6  1283               	bcf	3,5	;RP0=0, select bank0
   971  02D7  1303               	bcf	3,6	;RP1=0, select bank0
   972  02D8  0820               	movf	LCD_SetUp@RW,w
   973  02D9  120A  118A  230A  120A  118A  	fcall	_GPIO_PinDirection
   974                           
   975                           ;lcd.c: 172: GPIO_PinDirection(EN,0x00u);
   976  02DE  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   977  02DF  1283               	bcf	3,5	;RP0=0, select bank0
   978  02E0  1303               	bcf	3,6	;RP1=0, select bank0
   979  02E1  0821               	movf	LCD_SetUp@EN,w
   980  02E2  120A  118A  230A  120A  118A  	fcall	_GPIO_PinDirection
   981                           
   982                           ;lcd.c: 174: GPIO_PinDirection(D4,0x00u);
   983  02E7  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   984  02E8  1283               	bcf	3,5	;RP0=0, select bank0
   985  02E9  1303               	bcf	3,6	;RP1=0, select bank0
   986  02EA  0826               	movf	LCD_SetUp@D4,w
   987  02EB  120A  118A  230A  120A  118A  	fcall	_GPIO_PinDirection
   988                           
   989                           ;lcd.c: 175: GPIO_PinDirection(D5,0x00u);
   990  02F0  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   991  02F1  1283               	bcf	3,5	;RP0=0, select bank0
   992  02F2  1303               	bcf	3,6	;RP1=0, select bank0
   993  02F3  0827               	movf	LCD_SetUp@D5,w
   994  02F4  120A  118A  230A  120A  118A  	fcall	_GPIO_PinDirection
   995                           
   996                           ;lcd.c: 176: GPIO_PinDirection(D6,0x00u);
   997  02F9  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   998  02FA  1283               	bcf	3,5	;RP0=0, select bank0
   999  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  1000  02FC  0828               	movf	LCD_SetUp@D6,w
  1001  02FD  120A  118A  230A  120A  118A  	fcall	_GPIO_PinDirection
  1002                           
  1003                           ;lcd.c: 177: GPIO_PinDirection(D7,0x00u);
  1004  0302  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1005  0303  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0304  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0305  0829               	movf	LCD_SetUp@D7,w
  1008  0306  120A  118A  230A   	fcall	_GPIO_PinDirection
  1009  0309  0008               	return
  1010  030A                     __end_of_LCD_SetUp:	
  1011                           
  1012                           	psect	text2
  1013  05BD                     __ptext2:	
  1014 ;; *************** function _LCD_Printf *****************
  1015 ;; Defined at:
  1016 ;;		line 669 in file "../00-libfiles/lcd.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  argList         1    wreg     PTR const unsigned char 
  1019 ;;		 -> STR_2(10), 
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  argList         1   40[BANK0 ] PTR const unsigned char 
  1022 ;;		 -> STR_2(10), 
  1023 ;;  v_num_u32       4   47[BANK0 ] unsigned long 
  1024 ;;  v_num_s32       4   41[BANK0 ] long 
  1025 ;;  v_num_u16       2   51[BANK0 ] unsigned int 
  1026 ;;  v_num_s16       2   45[BANK0 ] int 
  1027 ;;  argp            1   56[BANK0 ] PTR void [1]
  1028 ;;		 -> ?_LCD_Printf(1), 
  1029 ;;  v_numOfDigit    1   55[BANK0 ] unsigned char 
  1030 ;;  ch              1   54[BANK0 ] unsigned char 
  1031 ;;  ptr             1   53[BANK0 ] PTR const unsigned char 
  1032 ;;		 -> STR_2(10), 
  1033 ;;  str             1   39[BANK0 ] PTR unsigned char 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1043 ;;      Params:         0       2       0       0       0
  1044 ;;      Locals:         0      18       0       0       0
  1045 ;;      Temps:          0       2       0       0       0
  1046 ;;      Totals:         0      22       0       0       0
  1047 ;;Total ram usage:       22 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; Hardware stack levels required when called:    7
  1050 ;; This function calls:
  1051 ;;		_LCD_DisplayChar
  1052 ;;		_LCD_DisplayNumber
  1053 ;;		_LCD_DisplayString
  1054 ;;		___bmul
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           
  1061                           ;psect for function _LCD_Printf
  1062  05BD                     _LCD_Printf:	
  1063                           
  1064                           ;incstack = 0
  1065 ;; using string table level
  1066                           ; Regs used in _LCD_Printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1067                           ;LCD_Printf@argList stored from wreg
  1068  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  1069  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  1070  05BF  00C8               	movwf	LCD_Printf@argList
  1071                           
  1072                           ;lcd.c: 671: const char *ptr;
  1073                           ;lcd.c: 672: va_list argp;
  1074                           ;lcd.c: 673: sint16_t v_num_s16;
  1075                           ;lcd.c: 674: sint32_t v_num_s32;
  1076                           ;lcd.c: 675: uint16_t v_num_u16;
  1077                           ;lcd.c: 676: uint32_t v_num_u32;
  1078                           ;lcd.c: 677: char *str;
  1079                           ;lcd.c: 678: char ch;
  1080                           ;lcd.c: 679: uint8_t v_numOfDigitsToDisp_u8;
  1081                           ;lcd.c: 684: *argp = __va_start();
  1082  05C0  3043               	movlw	(low (?_LCD_Printf| 0))& (0+255)
  1083  05C1  00C5               	movwf	??_LCD_Printf
  1084  05C2  0845               	movf	??_LCD_Printf,w
  1085  05C3  00D8               	movwf	LCD_Printf@argp
  1086                           
  1087                           ;lcd.c: 687: for(ptr = argList; *ptr != '\0'; ptr++)
  1088  05C4  0848               	movf	LCD_Printf@argList,w
  1089  05C5  00C5               	movwf	??_LCD_Printf
  1090  05C6  0845               	movf	??_LCD_Printf,w
  1091  05C7  00D5               	movwf	LCD_Printf@ptr
  1092  05C8                     l1782:	
  1093  05C8  0855               	movf	LCD_Printf@ptr,w
  1094  05C9  0084               	movwf	4
  1095  05CA  120A  158A  2000  120A  118A  	fcall	stringdir
  1096  05CF  3A00               	xorlw	0
  1097  05D0  1903               	btfsc	3,2
  1098  05D1  0008               	return
  1099                           
  1100                           ;lcd.c: 688: {
  1101                           ;lcd.c: 690: ch= *ptr;
  1102  05D2  0855               	movf	LCD_Printf@ptr,w
  1103  05D3  0084               	movwf	4
  1104  05D4  120A  158A  2000  120A  118A  	fcall	stringdir
  1105  05D9  00C5               	movwf	??_LCD_Printf
  1106  05DA  0845               	movf	??_LCD_Printf,w
  1107  05DB  00D6               	movwf	LCD_Printf@ch
  1108                           
  1109                           ;lcd.c: 691: if(ch == '%')
  1110  05DC  3025               	movlw	37
  1111  05DD  0656               	xorwf	LCD_Printf@ch,w
  1112  05DE  1D03               	btfss	3,2
  1113  05DF  2FC5               	goto	l1778
  1114                           
  1115                           ;lcd.c: 692: {
  1116                           ;lcd.c: 693: ptr++;
  1117  05E0  3001               	movlw	1
  1118  05E1  00C5               	movwf	??_LCD_Printf
  1119  05E2  0845               	movf	??_LCD_Printf,w
  1120  05E3  07D5               	addwf	LCD_Printf@ptr,f
  1121                           
  1122                           ;lcd.c: 694: ch = *ptr;
  1123  05E4  0855               	movf	LCD_Printf@ptr,w
  1124  05E5  0084               	movwf	4
  1125  05E6  120A  158A  2000  120A  118A  	fcall	stringdir
  1126  05EB  00C5               	movwf	??_LCD_Printf
  1127  05EC  0845               	movf	??_LCD_Printf,w
  1128  05ED  00D6               	movwf	LCD_Printf@ch
  1129                           
  1130                           ;lcd.c: 695: if((ch>=0x30) && (ch<=0x39))
  1131  05EE  3030               	movlw	48
  1132  05EF  0256               	subwf	LCD_Printf@ch,w
  1133  05F0  1C03               	skipc
  1134  05F1  2E1F               	goto	l1692
  1135  05F2  303A               	movlw	58
  1136  05F3  0256               	subwf	LCD_Printf@ch,w
  1137  05F4  1803               	skipnc
  1138  05F5  2E1F               	goto	l1692
  1139                           
  1140                           ;lcd.c: 696: {
  1141                           ;lcd.c: 697: v_numOfDigitsToDisp_u8 = 0;
  1142  05F6  01D7               	clrf	LCD_Printf@v_numOfDigitsToDisp_u8
  1143  05F7                     l1688:	
  1144                           ;lcd.c: 698: while((ch>=0x30) && (ch<=0x39))
  1145                           
  1146  05F7  3030               	movlw	48
  1147  05F8  0256               	subwf	LCD_Printf@ch,w
  1148  05F9  1C03               	skipc
  1149  05FA  2F93               	goto	l1776
  1150  05FB  303A               	movlw	58
  1151  05FC  0256               	subwf	LCD_Printf@ch,w
  1152  05FD  1803               	btfsc	3,0
  1153  05FE  2F93               	goto	l1776
  1154                           
  1155                           ;lcd.c: 699: {
  1156                           ;lcd.c: 700: v_numOfDigitsToDisp_u8 = (v_numOfDigitsToDisp_u8 * 10) + (ch-0x30);
  1157  05FF  300A               	movlw	10
  1158  0600  00C5               	movwf	??_LCD_Printf
  1159  0601  0845               	movf	??_LCD_Printf,w
  1160  0602  00A0               	movwf	___bmul@multiplicand
  1161  0603  0857               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1162  0604  120A  158A  25F5  120A  118A  	fcall	___bmul
  1163  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1164  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1165  060B  0756               	addwf	LCD_Printf@ch,w
  1166  060C  3ED0               	addlw	208
  1167  060D  00C6               	movwf	??_LCD_Printf+1
  1168  060E  0846               	movf	??_LCD_Printf+1,w
  1169  060F  00D7               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  1170                           
  1171                           ;lcd.c: 701: ptr++;
  1172  0610  3001               	movlw	1
  1173  0611  00C5               	movwf	??_LCD_Printf
  1174  0612  0845               	movf	??_LCD_Printf,w
  1175  0613  07D5               	addwf	LCD_Printf@ptr,f
  1176                           
  1177                           ;lcd.c: 702: ch = *ptr;
  1178  0614  0855               	movf	LCD_Printf@ptr,w
  1179  0615  0084               	movwf	4
  1180  0616  120A  158A  2000  120A  118A  	fcall	stringdir
  1181  061B  00C5               	movwf	??_LCD_Printf
  1182  061C  0845               	movf	??_LCD_Printf,w
  1183  061D  00D6               	movwf	LCD_Printf@ch
  1184  061E  2DF7               	goto	l1688
  1185  061F                     l1692:	
  1186                           ;lcd.c: 703: }
  1187                           ;lcd.c: 704: }
  1188                           
  1189                           
  1190                           ;lcd.c: 705: else
  1191                           ;lcd.c: 706: {
  1192                           ;lcd.c: 707: v_numOfDigitsToDisp_u8 = 0xffu;
  1193  061F  30FF               	movlw	255
  1194  0620  00C5               	movwf	??_LCD_Printf
  1195  0621  0845               	movf	??_LCD_Printf,w
  1196  0622  00D7               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  1197                           
  1198                           ;lcd.c: 708: }
  1199                           ;lcd.c: 711: switch(ch)
  1200  0623  2F93               	goto	l1776
  1201  0624                     l1694:	
  1202                           ;lcd.c: 712: {
  1203                           ;lcd.c: 713: case 'C':
  1204                           
  1205                           
  1206                           ;lcd.c: 714: case 'c':
  1207                           ;lcd.c: 715: ch = (*(int *)__va_arg((*(int **)argp), (int)0));
  1208  0624  0858               	movf	LCD_Printf@argp,w
  1209  0625  0084               	movwf	4
  1210  0626  1383               	bcf	3,7	;select IRP bank0
  1211  0627  0800               	movf	0,w
  1212  0628  00C5               	movwf	??_LCD_Printf
  1213  0629  0845               	movf	??_LCD_Printf,w
  1214  062A  00D6               	movwf	LCD_Printf@ch
  1215  062B  3002               	movlw	2
  1216  062C  00C5               	movwf	??_LCD_Printf
  1217  062D  0845               	movf	??_LCD_Printf,w
  1218  062E  07D8               	addwf	LCD_Printf@argp,f
  1219  062F  2FC5               	goto	l1778
  1220  0630                     l1700:	
  1221                           ;lcd.c: 719: case 'd':
  1222                           
  1223                           ;lcd.c: 717: break;
  1224                           
  1225                           ;lcd.c: 716: LCD_DisplayChar(ch);
  1226                           
  1227                           
  1228                           ;lcd.c: 720: v_num_s16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  1229  0630  1283               	bcf	3,5	;RP0=0, select bank0
  1230  0631  1303               	bcf	3,6	;RP1=0, select bank0
  1231  0632  0858               	movf	LCD_Printf@argp,w
  1232  0633  0084               	movwf	4
  1233  0634  1383               	bcf	3,7	;select IRP bank0
  1234  0635  0800               	movf	0,w
  1235  0636  00CD               	movwf	LCD_Printf@v_num_s16
  1236  0637  0A84               	incf	4,f
  1237  0638  0800               	movf	0,w
  1238  0639  00CE               	movwf	LCD_Printf@v_num_s16+1
  1239  063A  3002               	movlw	2
  1240  063B  00C5               	movwf	??_LCD_Printf
  1241  063C  0845               	movf	??_LCD_Printf,w
  1242  063D  07D8               	addwf	LCD_Printf@argp,f
  1243                           
  1244                           ;lcd.c: 721: if(v_num_s16<0)
  1245  063E  1FCE               	btfss	LCD_Printf@v_num_s16+1,7
  1246  063F  2E4B               	goto	l1710
  1247                           
  1248                           ;lcd.c: 722: {
  1249                           ;lcd.c: 723: v_num_s16 = -v_num_s16;
  1250  0640  09CD               	comf	LCD_Printf@v_num_s16,f
  1251  0641  09CE               	comf	LCD_Printf@v_num_s16+1,f
  1252  0642  0ACD               	incf	LCD_Printf@v_num_s16,f
  1253  0643  1903               	skipnz
  1254  0644  0ACE               	incf	LCD_Printf@v_num_s16+1,f
  1255                           
  1256                           ;lcd.c: 724: LCD_DisplayChar('-');
  1257  0645  302D               	movlw	45
  1258  0646  120A  158A  264B  120A  118A  	fcall	_LCD_DisplayChar
  1259  064B                     l1710:	
  1260                           
  1261                           ;lcd.c: 725: }
  1262                           ;lcd.c: 726: LCD_DisplayNumber(10u,v_num_s16,v_numOfDigitsToDisp_u8);
  1263  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1264  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1265  064D  084D               	movf	LCD_Printf@v_num_s16,w
  1266  064E  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1267  064F  084E               	movf	LCD_Printf@v_num_s16+1,w
  1268  0650  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1269  0651  3000               	movlw	0
  1270  0652  1BA5               	btfsc	LCD_DisplayNumber@v_number_u32+1,7
  1271  0653  30FF               	movlw	255
  1272  0654  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  1273  0655  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  1274  0656  0857               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1275  0657  00C5               	movwf	??_LCD_Printf
  1276  0658  0845               	movf	??_LCD_Printf,w
  1277  0659  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1278  065A  300A               	movlw	10
  1279  065B  120A  118A  24BC  120A  118A  	fcall	_LCD_DisplayNumber
  1280                           
  1281                           ;lcd.c: 727: break;
  1282  0660  2FCB               	goto	l1780
  1283  0661                     l1712:	
  1284                           ;lcd.c: 729: case 'D':
  1285                           
  1286                           
  1287                           ;lcd.c: 730: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
  1288  0661  1283               	bcf	3,5	;RP0=0, select bank0
  1289  0662  1303               	bcf	3,6	;RP1=0, select bank0
  1290  0663  0858               	movf	LCD_Printf@argp,w
  1291  0664  0084               	movwf	4
  1292  0665  1383               	bcf	3,7	;select IRP bank0
  1293  0666  0800               	movf	0,w
  1294  0667  00C9               	movwf	LCD_Printf@v_num_s32
  1295  0668  0A84               	incf	4,f
  1296  0669  0800               	movf	0,w
  1297  066A  00CA               	movwf	LCD_Printf@v_num_s32+1
  1298  066B  0A84               	incf	4,f
  1299  066C  0800               	movf	0,w
  1300  066D  00CB               	movwf	LCD_Printf@v_num_s32+2
  1301  066E  0A84               	incf	4,f
  1302  066F  0800               	movf	0,w
  1303  0670  00CC               	movwf	LCD_Printf@v_num_s32+3
  1304  0671  3004               	movlw	4
  1305  0672  00C5               	movwf	??_LCD_Printf
  1306  0673  0845               	movf	??_LCD_Printf,w
  1307  0674  07D8               	addwf	LCD_Printf@argp,f
  1308                           
  1309                           ;lcd.c: 731: if(v_num_s32<0)
  1310  0675  1FCC               	btfss	LCD_Printf@v_num_s32+3,7
  1311  0676  2E88               	goto	l154
  1312                           
  1313                           ;lcd.c: 732: {
  1314                           ;lcd.c: 733: v_num_s32 = -v_num_s32;
  1315  0677  09C9               	comf	LCD_Printf@v_num_s32,f
  1316  0678  09CA               	comf	LCD_Printf@v_num_s32+1,f
  1317  0679  09CB               	comf	LCD_Printf@v_num_s32+2,f
  1318  067A  09CC               	comf	LCD_Printf@v_num_s32+3,f
  1319  067B  0AC9               	incf	LCD_Printf@v_num_s32,f
  1320  067C  1903               	skipnz
  1321  067D  0ACA               	incf	LCD_Printf@v_num_s32+1,f
  1322  067E  1903               	skipnz
  1323  067F  0ACB               	incf	LCD_Printf@v_num_s32+2,f
  1324  0680  1903               	skipnz
  1325  0681  0ACC               	incf	LCD_Printf@v_num_s32+3,f
  1326                           
  1327                           ;lcd.c: 734: LCD_DisplayChar('-');
  1328  0682  302D               	movlw	45
  1329  0683  120A  158A  264B  120A  118A  	fcall	_LCD_DisplayChar
  1330  0688                     l154:	
  1331                           
  1332                           ;lcd.c: 735: }
  1333                           ;lcd.c: 736: LCD_DisplayNumber(10u,v_num_s32,v_numOfDigitsToDisp_u8);
  1334  0688  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0689  1303               	bcf	3,6	;RP1=0, select bank0
  1336  068A  084C               	movf	LCD_Printf@v_num_s32+3,w
  1337  068B  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  1338  068C  084B               	movf	LCD_Printf@v_num_s32+2,w
  1339  068D  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  1340  068E  084A               	movf	LCD_Printf@v_num_s32+1,w
  1341  068F  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1342  0690  0849               	movf	LCD_Printf@v_num_s32,w
  1343  0691  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1344  0692  0857               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1345  0693  00C5               	movwf	??_LCD_Printf
  1346  0694  0845               	movf	??_LCD_Printf,w
  1347  0695  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1348  0696  300A               	movlw	10
  1349  0697  120A  118A  24BC  120A  118A  	fcall	_LCD_DisplayNumber
  1350                           
  1351                           ;lcd.c: 737: break;
  1352  069C  2FCB               	goto	l1780
  1353  069D                     l1722:	
  1354                           ;lcd.c: 739: case 'u':
  1355                           
  1356                           
  1357                           ;lcd.c: 740: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  1358  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1359  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1360  069F  0858               	movf	LCD_Printf@argp,w
  1361  06A0  0084               	movwf	4
  1362  06A1  1383               	bcf	3,7	;select IRP bank0
  1363  06A2  0800               	movf	0,w
  1364  06A3  00D3               	movwf	LCD_Printf@v_num_u16
  1365  06A4  0A84               	incf	4,f
  1366  06A5  0800               	movf	0,w
  1367  06A6  00D4               	movwf	LCD_Printf@v_num_u16+1
  1368  06A7  3002               	movlw	2
  1369  06A8  00C5               	movwf	??_LCD_Printf
  1370  06A9  0845               	movf	??_LCD_Printf,w
  1371  06AA  07D8               	addwf	LCD_Printf@argp,f
  1372                           
  1373                           ;lcd.c: 741: LCD_DisplayNumber(10u,v_num_u16,v_numOfDigitsToDisp_u8);
  1374  06AB  0853               	movf	LCD_Printf@v_num_u16,w
  1375  06AC  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1376  06AD  0854               	movf	LCD_Printf@v_num_u16+1,w
  1377  06AE  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1378  06AF  01A6               	clrf	LCD_DisplayNumber@v_number_u32+2
  1379  06B0  01A7               	clrf	LCD_DisplayNumber@v_number_u32+3
  1380  06B1  0857               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1381  06B2  00C5               	movwf	??_LCD_Printf
  1382  06B3  0845               	movf	??_LCD_Printf,w
  1383  06B4  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1384  06B5  300A               	movlw	10
  1385  06B6  120A  118A  24BC  120A  118A  	fcall	_LCD_DisplayNumber
  1386                           
  1387                           ;lcd.c: 742: break;
  1388  06BB  2FCB               	goto	l1780
  1389  06BC                     l1728:	
  1390                           ;lcd.c: 744: case 'U':
  1391                           
  1392                           
  1393                           ;lcd.c: 745: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1394  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1395  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1396  06BE  0858               	movf	LCD_Printf@argp,w
  1397  06BF  0084               	movwf	4
  1398  06C0  1383               	bcf	3,7	;select IRP bank0
  1399  06C1  0800               	movf	0,w
  1400  06C2  00CF               	movwf	LCD_Printf@v_num_u32
  1401  06C3  0A84               	incf	4,f
  1402  06C4  0800               	movf	0,w
  1403  06C5  00D0               	movwf	LCD_Printf@v_num_u32+1
  1404  06C6  0A84               	incf	4,f
  1405  06C7  0800               	movf	0,w
  1406  06C8  00D1               	movwf	LCD_Printf@v_num_u32+2
  1407  06C9  0A84               	incf	4,f
  1408  06CA  0800               	movf	0,w
  1409  06CB  00D2               	movwf	LCD_Printf@v_num_u32+3
  1410  06CC  3004               	movlw	4
  1411  06CD  00C5               	movwf	??_LCD_Printf
  1412  06CE  0845               	movf	??_LCD_Printf,w
  1413  06CF  07D8               	addwf	LCD_Printf@argp,f
  1414                           
  1415                           ;lcd.c: 746: LCD_DisplayNumber(10u,v_num_u32,v_numOfDigitsToDisp_u8);
  1416  06D0  0852               	movf	LCD_Printf@v_num_u32+3,w
  1417  06D1  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  1418  06D2  0851               	movf	LCD_Printf@v_num_u32+2,w
  1419  06D3  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  1420  06D4  0850               	movf	LCD_Printf@v_num_u32+1,w
  1421  06D5  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1422  06D6  084F               	movf	LCD_Printf@v_num_u32,w
  1423  06D7  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1424  06D8  0857               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1425  06D9  00C5               	movwf	??_LCD_Printf
  1426  06DA  0845               	movf	??_LCD_Printf,w
  1427  06DB  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1428  06DC  300A               	movlw	10
  1429  06DD  120A  118A  24BC  120A  118A  	fcall	_LCD_DisplayNumber
  1430                           
  1431                           ;lcd.c: 747: break;
  1432  06E2  2FCB               	goto	l1780
  1433  06E3                     l1734:	
  1434                           ;lcd.c: 749: case 'x':
  1435                           
  1436                           
  1437                           ;lcd.c: 750: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  1438  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1439  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1440  06E5  0858               	movf	LCD_Printf@argp,w
  1441  06E6  0084               	movwf	4
  1442  06E7  1383               	bcf	3,7	;select IRP bank0
  1443  06E8  0800               	movf	0,w
  1444  06E9  00D3               	movwf	LCD_Printf@v_num_u16
  1445  06EA  0A84               	incf	4,f
  1446  06EB  0800               	movf	0,w
  1447  06EC  00D4               	movwf	LCD_Printf@v_num_u16+1
  1448  06ED  3002               	movlw	2
  1449  06EE  00C5               	movwf	??_LCD_Printf
  1450  06EF  0845               	movf	??_LCD_Printf,w
  1451  06F0  07D8               	addwf	LCD_Printf@argp,f
  1452                           
  1453                           ;lcd.c: 751: LCD_DisplayNumber(16u,v_num_u16,v_numOfDigitsToDisp_u8);
  1454  06F1  0853               	movf	LCD_Printf@v_num_u16,w
  1455  06F2  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1456  06F3  0854               	movf	LCD_Printf@v_num_u16+1,w
  1457  06F4  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1458  06F5  01A6               	clrf	LCD_DisplayNumber@v_number_u32+2
  1459  06F6  01A7               	clrf	LCD_DisplayNumber@v_number_u32+3
  1460  06F7  0857               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1461  06F8  00C5               	movwf	??_LCD_Printf
  1462  06F9  0845               	movf	??_LCD_Printf,w
  1463  06FA  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1464  06FB  3010               	movlw	16
  1465  06FC  120A  118A  24BC  120A  118A  	fcall	_LCD_DisplayNumber
  1466                           
  1467                           ;lcd.c: 752: break;
  1468  0701  2FCB               	goto	l1780
  1469  0702                     l1740:	
  1470                           ;lcd.c: 754: case 'X':
  1471                           
  1472                           
  1473                           ;lcd.c: 755: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1474  0702  1283               	bcf	3,5	;RP0=0, select bank0
  1475  0703  1303               	bcf	3,6	;RP1=0, select bank0
  1476  0704  0858               	movf	LCD_Printf@argp,w
  1477  0705  0084               	movwf	4
  1478  0706  1383               	bcf	3,7	;select IRP bank0
  1479  0707  0800               	movf	0,w
  1480  0708  00CF               	movwf	LCD_Printf@v_num_u32
  1481  0709  0A84               	incf	4,f
  1482  070A  0800               	movf	0,w
  1483  070B  00D0               	movwf	LCD_Printf@v_num_u32+1
  1484  070C  0A84               	incf	4,f
  1485  070D  0800               	movf	0,w
  1486  070E  00D1               	movwf	LCD_Printf@v_num_u32+2
  1487  070F  0A84               	incf	4,f
  1488  0710  0800               	movf	0,w
  1489  0711  00D2               	movwf	LCD_Printf@v_num_u32+3
  1490  0712  3004               	movlw	4
  1491  0713  00C5               	movwf	??_LCD_Printf
  1492  0714  0845               	movf	??_LCD_Printf,w
  1493  0715  07D8               	addwf	LCD_Printf@argp,f
  1494                           
  1495                           ;lcd.c: 756: LCD_DisplayNumber(16u,v_num_u32,v_numOfDigitsToDisp_u8);
  1496  0716  0852               	movf	LCD_Printf@v_num_u32+3,w
  1497  0717  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  1498  0718  0851               	movf	LCD_Printf@v_num_u32+2,w
  1499  0719  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  1500  071A  0850               	movf	LCD_Printf@v_num_u32+1,w
  1501  071B  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1502  071C  084F               	movf	LCD_Printf@v_num_u32,w
  1503  071D  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1504  071E  0857               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1505  071F  00C5               	movwf	??_LCD_Printf
  1506  0720  0845               	movf	??_LCD_Printf,w
  1507  0721  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1508  0722  3010               	movlw	16
  1509  0723  120A  118A  24BC  120A  118A  	fcall	_LCD_DisplayNumber
  1510                           
  1511                           ;lcd.c: 757: break;
  1512  0728  2FCB               	goto	l1780
  1513  0729                     l1746:	
  1514                           ;lcd.c: 760: case 'b':
  1515                           
  1516                           
  1517                           ;lcd.c: 761: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  1518  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1519  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1520  072B  0858               	movf	LCD_Printf@argp,w
  1521  072C  0084               	movwf	4
  1522  072D  1383               	bcf	3,7	;select IRP bank0
  1523  072E  0800               	movf	0,w
  1524  072F  00D3               	movwf	LCD_Printf@v_num_u16
  1525  0730  0A84               	incf	4,f
  1526  0731  0800               	movf	0,w
  1527  0732  00D4               	movwf	LCD_Printf@v_num_u16+1
  1528  0733  3002               	movlw	2
  1529  0734  00C5               	movwf	??_LCD_Printf
  1530  0735  0845               	movf	??_LCD_Printf,w
  1531  0736  07D8               	addwf	LCD_Printf@argp,f
  1532                           
  1533                           ;lcd.c: 762: if(v_numOfDigitsToDisp_u8 == 0xffu)
  1534  0737  0A57               	incf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1535  0738  1D03               	btfss	3,2
  1536  0739  2F3E               	goto	l1754
  1537                           
  1538                           ;lcd.c: 763: v_numOfDigitsToDisp_u8 = 16;
  1539  073A  3010               	movlw	16
  1540  073B  00C5               	movwf	??_LCD_Printf
  1541  073C  0845               	movf	??_LCD_Printf,w
  1542  073D  00D7               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  1543  073E                     l1754:	
  1544                           
  1545                           ;lcd.c: 764: LCD_DisplayNumber(2u,v_num_u16,v_numOfDigitsToDisp_u8);
  1546  073E  0853               	movf	LCD_Printf@v_num_u16,w
  1547  073F  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1548  0740  0854               	movf	LCD_Printf@v_num_u16+1,w
  1549  0741  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1550  0742  01A6               	clrf	LCD_DisplayNumber@v_number_u32+2
  1551  0743  01A7               	clrf	LCD_DisplayNumber@v_number_u32+3
  1552  0744  0857               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1553  0745  00C5               	movwf	??_LCD_Printf
  1554  0746  0845               	movf	??_LCD_Printf,w
  1555  0747  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1556  0748  3002               	movlw	2
  1557  0749  120A  118A  24BC  120A  118A  	fcall	_LCD_DisplayNumber
  1558                           
  1559                           ;lcd.c: 765: break;
  1560  074E  2FCB               	goto	l1780
  1561  074F                     l1756:	
  1562                           ;lcd.c: 767: case 'B':
  1563                           
  1564                           
  1565                           ;lcd.c: 768: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1566  074F  1283               	bcf	3,5	;RP0=0, select bank0
  1567  0750  1303               	bcf	3,6	;RP1=0, select bank0
  1568  0751  0858               	movf	LCD_Printf@argp,w
  1569  0752  0084               	movwf	4
  1570  0753  1383               	bcf	3,7	;select IRP bank0
  1571  0754  0800               	movf	0,w
  1572  0755  00CF               	movwf	LCD_Printf@v_num_u32
  1573  0756  0A84               	incf	4,f
  1574  0757  0800               	movf	0,w
  1575  0758  00D0               	movwf	LCD_Printf@v_num_u32+1
  1576  0759  0A84               	incf	4,f
  1577  075A  0800               	movf	0,w
  1578  075B  00D1               	movwf	LCD_Printf@v_num_u32+2
  1579  075C  0A84               	incf	4,f
  1580  075D  0800               	movf	0,w
  1581  075E  00D2               	movwf	LCD_Printf@v_num_u32+3
  1582  075F  3004               	movlw	4
  1583  0760  00C5               	movwf	??_LCD_Printf
  1584  0761  0845               	movf	??_LCD_Printf,w
  1585  0762  07D8               	addwf	LCD_Printf@argp,f
  1586                           
  1587                           ;lcd.c: 769: if(v_numOfDigitsToDisp_u8 == 0xffu)
  1588  0763  0A57               	incf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1589  0764  1D03               	btfss	3,2
  1590  0765  2F6A               	goto	l1764
  1591                           
  1592                           ;lcd.c: 770: v_numOfDigitsToDisp_u8 = 16;
  1593  0766  3010               	movlw	16
  1594  0767  00C5               	movwf	??_LCD_Printf
  1595  0768  0845               	movf	??_LCD_Printf,w
  1596  0769  00D7               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  1597  076A                     l1764:	
  1598                           
  1599                           ;lcd.c: 771: LCD_DisplayNumber(2u,v_num_u32,v_numOfDigitsToDisp_u8);
  1600  076A  0852               	movf	LCD_Printf@v_num_u32+3,w
  1601  076B  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  1602  076C  0851               	movf	LCD_Printf@v_num_u32+2,w
  1603  076D  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  1604  076E  0850               	movf	LCD_Printf@v_num_u32+1,w
  1605  076F  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1606  0770  084F               	movf	LCD_Printf@v_num_u32,w
  1607  0771  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1608  0772  0857               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1609  0773  00C5               	movwf	??_LCD_Printf
  1610  0774  0845               	movf	??_LCD_Printf,w
  1611  0775  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1612  0776  3002               	movlw	2
  1613  0777  120A  118A  24BC  120A  118A  	fcall	_LCD_DisplayNumber
  1614                           
  1615                           ;lcd.c: 776: case 'f':
  1616                           ;lcd.c: 781: break;
  1617                           
  1618                           ;lcd.c: 775: case 'F':
  1619                           
  1620                           ;lcd.c: 772: break;
  1621  077C  2FCB               	goto	l1780
  1622  077D                     l1766:	
  1623                           ;lcd.c: 784: case 'S':
  1624                           
  1625                           
  1626                           ;lcd.c: 785: case 's':
  1627                           ;lcd.c: 786: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  1628  077D  1283               	bcf	3,5	;RP0=0, select bank0
  1629  077E  1303               	bcf	3,6	;RP1=0, select bank0
  1630  077F  0858               	movf	LCD_Printf@argp,w
  1631  0780  0084               	movwf	4
  1632  0781  1383               	bcf	3,7	;select IRP bank0
  1633  0782  0800               	movf	0,w
  1634  0783  00C5               	movwf	??_LCD_Printf
  1635  0784  0845               	movf	??_LCD_Printf,w
  1636  0785  00C7               	movwf	LCD_Printf@str
  1637  0786  3001               	movlw	1
  1638  0787  00C5               	movwf	??_LCD_Printf
  1639  0788  0845               	movf	??_LCD_Printf,w
  1640  0789  07D8               	addwf	LCD_Printf@argp,f
  1641                           
  1642                           ;lcd.c: 787: LCD_DisplayString(str);
  1643  078A  0847               	movf	LCD_Printf@str,w
  1644  078B  120A  118A  2003  120A  118A  	fcall	_LCD_DisplayString
  1645                           
  1646                           ;lcd.c: 788: break;
  1647  0790  2FCB               	goto	l1780
  1648  0791                     l1772:	
  1649                           ;lcd.c: 790: case '%':
  1650                           
  1651                           
  1652                           ;lcd.c: 791: LCD_DisplayChar('%');
  1653  0791  3025               	movlw	37
  1654  0792  2FC6               	goto	L1
  1655  0793                     l1776:	
  1656                           ;lcd.c: 793: }
  1657                           
  1658                           ;lcd.c: 792: break;
  1659                           
  1660  0793  1283               	bcf	3,5	;RP0=0, select bank0
  1661  0794  1303               	bcf	3,6	;RP1=0, select bank0
  1662  0795  0856               	movf	LCD_Printf@ch,w
  1663                           
  1664                           ; Switch size 1, requested type "space"
  1665                           ; Number of cases is 15, Range of values is 37 to 120
  1666                           ; switch strategies available:
  1667                           ; Name         Instructions Cycles
  1668                           ; simple_byte           46    24 (average)
  1669                           ; direct_byte          263    11 (fixed)
  1670                           ; jumptable            263     9 (fixed)
  1671                           ;	Chosen strategy is simple_byte
  1672  0796  3A25               	xorlw	37	; case 37
  1673  0797  1903               	skipnz
  1674  0798  2F91               	goto	l1772
  1675  0799  3A67               	xorlw	103	; case 66
  1676  079A  1903               	skipnz
  1677  079B  2F4F               	goto	l1756
  1678  079C  3A01               	xorlw	1	; case 67
  1679  079D  1903               	skipnz
  1680  079E  2E24               	goto	l1694
  1681  079F  3A07               	xorlw	7	; case 68
  1682  07A0  1903               	skipnz
  1683  07A1  2E61               	goto	l1712
  1684  07A2  3A02               	xorlw	2	; case 70
  1685  07A3  1903               	skipnz
  1686  07A4  2FCB               	goto	l1780
  1687  07A5  3A15               	xorlw	21	; case 83
  1688  07A6  1903               	skipnz
  1689  07A7  2F7D               	goto	l1766
  1690  07A8  3A06               	xorlw	6	; case 85
  1691  07A9  1903               	skipnz
  1692  07AA  2EBC               	goto	l1728
  1693  07AB  3A0D               	xorlw	13	; case 88
  1694  07AC  1903               	skipnz
  1695  07AD  2F02               	goto	l1740
  1696  07AE  3A3A               	xorlw	58	; case 98
  1697  07AF  1903               	skipnz
  1698  07B0  2F29               	goto	l1746
  1699  07B1  3A01               	xorlw	1	; case 99
  1700  07B2  1903               	skipnz
  1701  07B3  2E24               	goto	l1694
  1702  07B4  3A07               	xorlw	7	; case 100
  1703  07B5  1903               	skipnz
  1704  07B6  2E30               	goto	l1700
  1705  07B7  3A02               	xorlw	2	; case 102
  1706  07B8  1903               	skipnz
  1707  07B9  2FCB               	goto	l1780
  1708  07BA  3A15               	xorlw	21	; case 115
  1709  07BB  1903               	skipnz
  1710  07BC  2F7D               	goto	l1766
  1711  07BD  3A06               	xorlw	6	; case 117
  1712  07BE  1903               	skipnz
  1713  07BF  2E9D               	goto	l1722
  1714  07C0  3A0D               	xorlw	13	; case 120
  1715  07C1  1903               	skipnz
  1716  07C2  2EE3               	goto	l1734
  1717  07C3  2FCB               	goto	l1780
  1718                           
  1719                           ;lcd.c: 794: }
  1720  07C4  2FCB               	goto	l1780
  1721  07C5                     l1778:	
  1722                           
  1723                           ;lcd.c: 795: else
  1724                           ;lcd.c: 796: {
  1725                           ;lcd.c: 798: LCD_DisplayChar(ch);
  1726  07C5  0856               	movf	LCD_Printf@ch,w
  1727  07C6                     L1:	
  1728  07C6  120A  158A  264B  120A  118A  	fcall	_LCD_DisplayChar
  1729  07CB                     l1780:	
  1730  07CB  3001               	movlw	1
  1731  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1732  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1733  07CE  00C5               	movwf	??_LCD_Printf
  1734  07CF  0845               	movf	??_LCD_Printf,w
  1735  07D0  07D5               	addwf	LCD_Printf@ptr,f
  1736  07D1  2DC8               	goto	l1782
  1737  07D2                     __end_of_LCD_Printf:	
  1738                           
  1739                           	psect	text3
  1740  0003                     __ptext3:	
  1741 ;; *************** function _LCD_DisplayString *****************
  1742 ;; Defined at:
  1743 ;;		line 421 in file "../00-libfiles/lcd.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  ptr_stringPo    1    wreg     PTR const unsigned char 
  1746 ;;		 -> STR_1(8), 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  ptr_stringPo    1    0[BANK0 ] PTR const unsigned char 
  1749 ;;		 -> STR_1(8), 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1759 ;;      Params:         0       0       0       0       0
  1760 ;;      Locals:         0       1       0       0       0
  1761 ;;      Temps:          1       0       0       0       0
  1762 ;;      Totals:         1       1       0       0       0
  1763 ;;Total ram usage:        2 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    6
  1766 ;; This function calls:
  1767 ;;		_LCD_DisplayChar
  1768 ;; This function is called by:
  1769 ;;		_main
  1770 ;;		_LCD_Printf
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           
  1775                           ;psect for function _LCD_DisplayString
  1776  0003                     _LCD_DisplayString:	
  1777                           
  1778                           ;incstack = 0
  1779 ;; using string table level
  1780                           ; Regs used in _LCD_DisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1781                           ;LCD_DisplayString@ptr_stringPointer_u8 stored from wreg
  1782  0003  1283               	bcf	3,5	;RP0=0, select bank0
  1783  0004  1303               	bcf	3,6	;RP1=0, select bank0
  1784  0005  00A0               	movwf	LCD_DisplayString@ptr_stringPointer_u8
  1785  0006                     l1536:	
  1786                           ;lcd.c: 423: while((*ptr_stringPointer_u8)!=0)
  1787                           
  1788  0006  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  1789  0007  0084               	movwf	4
  1790  0008  120A  158A  2000  120A  118A  	fcall	stringdir
  1791  000D  3A00               	xorlw	0
  1792  000E  1903               	btfsc	3,2
  1793  000F  0008               	return
  1794                           
  1795                           ;lcd.c: 424: LCD_DisplayChar(*ptr_stringPointer_u8++);
  1796  0010  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  1797  0011  0084               	movwf	4
  1798  0012  120A  158A  2000  120A  118A  	fcall	stringdir
  1799  0017  120A  158A  264B  120A  118A  	fcall	_LCD_DisplayChar
  1800  001C  3001               	movlw	1
  1801  001D  00FD               	movwf	??_LCD_DisplayString
  1802  001E  087D               	movf	??_LCD_DisplayString,w
  1803  001F  1283               	bcf	3,5	;RP0=0, select bank0
  1804  0020  1303               	bcf	3,6	;RP1=0, select bank0
  1805  0021  07A0               	addwf	LCD_DisplayString@ptr_stringPointer_u8,f
  1806  0022  2806               	goto	l1536
  1807  0023                     __end_of_LCD_DisplayString:	
  1808                           
  1809                           	psect	text4
  1810  04BC                     __ptext4:	
  1811 ;; *************** function _LCD_DisplayNumber *****************
  1812 ;; Defined at:
  1813 ;;		line 523 in file "../00-libfiles/lcd.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  v_numericSys    1    wreg     unsigned char 
  1816 ;;  v_number_u32    4    4[BANK0 ] unsigned long 
  1817 ;;  v_numOfDigit    1    8[BANK0 ] unsigned char 
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  v_numericSys    1   33[BANK0 ] unsigned char 
  1820 ;;  a              10   21[BANK0 ] unsigned char [10]
  1821 ;;  i               1   34[BANK0 ] unsigned char 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1831 ;;      Params:         0       5       0       0       0
  1832 ;;      Locals:         0      14       0       0       0
  1833 ;;      Temps:          0      12       0       0       0
  1834 ;;      Totals:         0      31       0       0       0
  1835 ;;Total ram usage:       31 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    6
  1838 ;; This function calls:
  1839 ;;		_LCD_DisplayChar
  1840 ;;		___bmul
  1841 ;;		___lldiv
  1842 ;; This function is called by:
  1843 ;;		_LCD_Printf
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           
  1848                           ;psect for function _LCD_DisplayNumber
  1849  04BC                     _LCD_DisplayNumber:	
  1850                           
  1851                           ;incstack = 0
  1852                           ; Regs used in _LCD_DisplayNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1853                           ;LCD_DisplayNumber@v_numericSystem_u8 stored from wreg
  1854  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  1855  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  1856  04BE  00C1               	movwf	LCD_DisplayNumber@v_numericSystem_u8
  1857                           
  1858                           ;lcd.c: 525: uint8_t i=0,a[10];
  1859  04BF  01C2               	clrf	LCD_DisplayNumber@i
  1860                           
  1861                           ;lcd.c: 527: if(2u == v_numericSystem_u8)
  1862  04C0  3002               	movlw	2
  1863  04C1  0641               	xorwf	LCD_DisplayNumber@v_numericSystem_u8,w
  1864  04C2  1903               	btfsc	3,2
  1865  04C3  2D03               	goto	l1570
  1866  04C4  2D07               	goto	l1572
  1867  04C5                     l1564:	
  1868                           ;lcd.c: 528: {
  1869                           ;lcd.c: 529: while(v_numOfDigitsToDisplay_u8!=0)
  1870                           
  1871                           
  1872                           ;lcd.c: 530: {
  1873                           ;lcd.c: 533: i = (((v_number_u32)&((1<<((v_numOfDigitsToDisplay_u8-1)))))!=0u);
  1874  04C5  0824               	movf	LCD_DisplayNumber@v_number_u32,w
  1875  04C6  00A9               	movwf	??_LCD_DisplayNumber
  1876  04C7  0825               	movf	LCD_DisplayNumber@v_number_u32+1,w
  1877  04C8  00AA               	movwf	??_LCD_DisplayNumber+1
  1878  04C9  0826               	movf	LCD_DisplayNumber@v_number_u32+2,w
  1879  04CA  00AB               	movwf	??_LCD_DisplayNumber+2
  1880  04CB  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  1881  04CC  00AC               	movwf	??_LCD_DisplayNumber+3
  1882  04CD  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  1883  04CE  3EFF               	addlw	-1
  1884  04CF  00AD               	movwf	??_LCD_DisplayNumber+4
  1885  04D0  0AAD               	incf	??_LCD_DisplayNumber+4,f
  1886  04D1  3001               	movlw	1
  1887  04D2  00AE               	movwf	??_LCD_DisplayNumber+5
  1888  04D3  3000               	movlw	0
  1889  04D4  00AF               	movwf	??_LCD_DisplayNumber+6
  1890  04D5  2CD9               	goto	u2094
  1891  04D6                     u2095:	
  1892  04D6  1003               	clrc
  1893  04D7  0DAE               	rlf	??_LCD_DisplayNumber+5,f
  1894  04D8  0DAF               	rlf	??_LCD_DisplayNumber+6,f
  1895  04D9                     u2094:	
  1896  04D9  0BAD               	decfsz	??_LCD_DisplayNumber+4,f
  1897  04DA  2CD6               	goto	u2095
  1898  04DB  082E               	movf	??_LCD_DisplayNumber+5,w
  1899  04DC  00B0               	movwf	??_LCD_DisplayNumber+7
  1900  04DD  082F               	movf	??_LCD_DisplayNumber+6,w
  1901  04DE  00B1               	movwf	??_LCD_DisplayNumber+8
  1902  04DF  3000               	movlw	0
  1903  04E0  1BB1               	btfsc	??_LCD_DisplayNumber+8,7
  1904  04E1  30FF               	movlw	255
  1905  04E2  00B2               	movwf	??_LCD_DisplayNumber+9
  1906  04E3  00B3               	movwf	??_LCD_DisplayNumber+10
  1907  04E4  0830               	movf	??_LCD_DisplayNumber+7,w
  1908  04E5  05A9               	andwf	??_LCD_DisplayNumber,f
  1909  04E6  0831               	movf	??_LCD_DisplayNumber+8,w
  1910  04E7  05AA               	andwf	??_LCD_DisplayNumber+1,f
  1911  04E8  0832               	movf	??_LCD_DisplayNumber+9,w
  1912  04E9  05AB               	andwf	??_LCD_DisplayNumber+2,f
  1913  04EA  0833               	movf	??_LCD_DisplayNumber+10,w
  1914  04EB  05AC               	andwf	??_LCD_DisplayNumber+3,f
  1915  04EC  082C               	movf	??_LCD_DisplayNumber+3,w
  1916  04ED  042B               	iorwf	??_LCD_DisplayNumber+2,w
  1917  04EE  042A               	iorwf	??_LCD_DisplayNumber+1,w
  1918  04EF  0429               	iorwf	??_LCD_DisplayNumber,w
  1919  04F0  1903               	btfsc	3,2
  1920  04F1  2CF4               	goto	u2100
  1921  04F2  3001               	movlw	1
  1922  04F3  2CF5               	goto	u2110
  1923  04F4                     u2100:	
  1924  04F4  3000               	movlw	0
  1925  04F5                     u2110:	
  1926  04F5  00B4               	movwf	??_LCD_DisplayNumber+11
  1927  04F6  0834               	movf	??_LCD_DisplayNumber+11,w
  1928  04F7  00C2               	movwf	LCD_DisplayNumber@i
  1929                           
  1930                           ;lcd.c: 534: LCD_DisplayChar(((i)+0x30));
  1931  04F8  0842               	movf	LCD_DisplayNumber@i,w
  1932  04F9  3E30               	addlw	48
  1933  04FA  120A  158A  264B  120A  118A  	fcall	_LCD_DisplayChar
  1934                           
  1935                           ;lcd.c: 535: v_numOfDigitsToDisplay_u8--;
  1936  04FF  3001               	movlw	1
  1937  0500  1283               	bcf	3,5	;RP0=0, select bank0
  1938  0501  1303               	bcf	3,6	;RP1=0, select bank0
  1939  0502  02A8               	subwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,f
  1940  0503                     l1570:	
  1941  0503  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  1942  0504  1903               	btfsc	3,2
  1943  0505  0008               	return
  1944  0506  2CC5               	goto	l1564
  1945  0507                     l1572:	
  1946                           ;lcd.c: 536: }
  1947                           ;lcd.c: 537: }
  1948                           
  1949                           
  1950                           ;lcd.c: 538: else if(v_number_u32==0)
  1951  0507  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  1952  0508  0426               	iorwf	LCD_DisplayNumber@v_number_u32+2,w
  1953  0509  0425               	iorwf	LCD_DisplayNumber@v_number_u32+1,w
  1954  050A  0424               	iorwf	LCD_DisplayNumber@v_number_u32,w
  1955  050B  1D03               	skipz
  1956  050C  2D23               	goto	l1584
  1957                           
  1958                           ;lcd.c: 539: {
  1959                           ;lcd.c: 541: for(i=0;((i<v_numOfDigitsToDisplay_u8) && (i<10u));i++)
  1960  050D  01C2               	clrf	LCD_DisplayNumber@i
  1961  050E                     l1580:	
  1962  050E  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  1963  050F  0242               	subwf	LCD_DisplayNumber@i,w
  1964  0510  1803               	skipnc
  1965  0511  0008               	return
  1966  0512  300A               	movlw	10
  1967  0513  0242               	subwf	LCD_DisplayNumber@i,w
  1968  0514  1803               	btfsc	3,0
  1969  0515  0008               	return
  1970                           
  1971                           ;lcd.c: 542: LCD_DisplayChar('0');
  1972  0516  3030               	movlw	48
  1973  0517  120A  158A  264B  120A  118A  	fcall	_LCD_DisplayChar
  1974  051C  3001               	movlw	1
  1975  051D  1283               	bcf	3,5	;RP0=0, select bank0
  1976  051E  1303               	bcf	3,6	;RP1=0, select bank0
  1977  051F  00A9               	movwf	??_LCD_DisplayNumber
  1978  0520  0829               	movf	??_LCD_DisplayNumber,w
  1979  0521  07C2               	addwf	LCD_DisplayNumber@i,f
  1980  0522  2D0E               	goto	l1580
  1981  0523                     l1584:	
  1982                           ;lcd.c: 543: }
  1983                           
  1984                           
  1985                           ;lcd.c: 544: else
  1986                           ;lcd.c: 545: {
  1987                           ;lcd.c: 546: for(i=0;i<v_numOfDigitsToDisplay_u8;i++)
  1988  0523  01C2               	clrf	LCD_DisplayNumber@i
  1989  0524                     l1602:	
  1990  0524  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  1991  0525  0242               	subwf	LCD_DisplayNumber@i,w
  1992  0526  1803               	btfsc	3,0
  1993  0527  2DB9               	goto	l1614
  1994                           
  1995                           ;lcd.c: 547: {
  1996                           ;lcd.c: 550: if(v_number_u32!=0)
  1997  0528  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  1998  0529  0426               	iorwf	LCD_DisplayNumber@v_number_u32+2,w
  1999  052A  0425               	iorwf	LCD_DisplayNumber@v_number_u32+1,w
  2000  052B  0424               	iorwf	LCD_DisplayNumber@v_number_u32,w
  2001  052C  1903               	skipnz
  2002  052D  2D83               	goto	l1592
  2003                           
  2004                           ;lcd.c: 551: {
  2005                           ;lcd.c: 558: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u3
      +                          2/v_numericSystem_u8)));
  2006  052E  0841               	movf	LCD_DisplayNumber@v_numericSystem_u8,w
  2007  052F  00A9               	movwf	??_LCD_DisplayNumber
  2008  0530  0829               	movf	??_LCD_DisplayNumber,w
  2009  0531  00A0               	movwf	___bmul@multiplicand
  2010  0532  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  2011  0533  00F7               	movwf	___lldiv@dividend+3
  2012  0534  0826               	movf	LCD_DisplayNumber@v_number_u32+2,w
  2013  0535  00F6               	movwf	___lldiv@dividend+2
  2014  0536  0825               	movf	LCD_DisplayNumber@v_number_u32+1,w
  2015  0537  00F5               	movwf	___lldiv@dividend+1
  2016  0538  0824               	movf	LCD_DisplayNumber@v_number_u32,w
  2017  0539  00F4               	movwf	___lldiv@dividend
  2018  053A  0841               	movf	LCD_DisplayNumber@v_numericSystem_u8,w
  2019  053B  00AA               	movwf	??_LCD_DisplayNumber+1
  2020  053C  01AB               	clrf	??_LCD_DisplayNumber+2
  2021  053D  01AC               	clrf	??_LCD_DisplayNumber+3
  2022  053E  01AD               	clrf	??_LCD_DisplayNumber+4
  2023  053F  082D               	movf	??_LCD_DisplayNumber+4,w
  2024  0540  00F3               	movwf	___lldiv@divisor+3
  2025  0541  082C               	movf	??_LCD_DisplayNumber+3,w
  2026  0542  00F2               	movwf	___lldiv@divisor+2
  2027  0543  082B               	movf	??_LCD_DisplayNumber+2,w
  2028  0544  00F1               	movwf	___lldiv@divisor+1
  2029  0545  082A               	movf	??_LCD_DisplayNumber+1,w
  2030  0546  00F0               	movwf	___lldiv@divisor
  2031  0547  120A  118A  2072  120A  118A  	fcall	___lldiv
  2032  054C  0870               	movf	?___lldiv,w
  2033  054D  120A  158A  25F5  120A  118A  	fcall	___bmul
  2034  0552  3AFF               	xorlw	255
  2035  0553  3E01               	addlw	1
  2036  0554  1283               	bcf	3,5	;RP0=0, select bank0
  2037  0555  1303               	bcf	3,6	;RP1=0, select bank0
  2038  0556  0724               	addwf	LCD_DisplayNumber@v_number_u32,w
  2039  0557  00AE               	movwf	??_LCD_DisplayNumber+5
  2040  0558  0842               	movf	LCD_DisplayNumber@i,w
  2041  0559  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  2042  055A  0084               	movwf	4
  2043  055B  082E               	movf	??_LCD_DisplayNumber+5,w
  2044  055C  1383               	bcf	3,7	;select IRP bank0
  2045  055D  0080               	movwf	0
  2046                           
  2047                           ;lcd.c: 559: v_number_u32=v_number_u32/v_numericSystem_u8;
  2048  055E  0841               	movf	LCD_DisplayNumber@v_numericSystem_u8,w
  2049  055F  00A9               	movwf	??_LCD_DisplayNumber
  2050  0560  01AA               	clrf	??_LCD_DisplayNumber+1
  2051  0561  01AB               	clrf	??_LCD_DisplayNumber+2
  2052  0562  01AC               	clrf	??_LCD_DisplayNumber+3
  2053  0563  082C               	movf	??_LCD_DisplayNumber+3,w
  2054  0564  00F3               	movwf	___lldiv@divisor+3
  2055  0565  082B               	movf	??_LCD_DisplayNumber+2,w
  2056  0566  00F2               	movwf	___lldiv@divisor+2
  2057  0567  082A               	movf	??_LCD_DisplayNumber+1,w
  2058  0568  00F1               	movwf	___lldiv@divisor+1
  2059  0569  0829               	movf	??_LCD_DisplayNumber,w
  2060  056A  00F0               	movwf	___lldiv@divisor
  2061  056B  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  2062  056C  00F7               	movwf	___lldiv@dividend+3
  2063  056D  0826               	movf	LCD_DisplayNumber@v_number_u32+2,w
  2064  056E  00F6               	movwf	___lldiv@dividend+2
  2065  056F  0825               	movf	LCD_DisplayNumber@v_number_u32+1,w
  2066  0570  00F5               	movwf	___lldiv@dividend+1
  2067  0571  0824               	movf	LCD_DisplayNumber@v_number_u32,w
  2068  0572  00F4               	movwf	___lldiv@dividend
  2069  0573  120A  118A  2072  120A  118A  	fcall	___lldiv
  2070  0578  0873               	movf	?___lldiv+3,w
  2071  0579  1283               	bcf	3,5	;RP0=0, select bank0
  2072  057A  1303               	bcf	3,6	;RP1=0, select bank0
  2073  057B  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2074  057C  0872               	movf	?___lldiv+2,w
  2075  057D  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2076  057E  0871               	movf	?___lldiv+1,w
  2077  057F  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2078  0580  0870               	movf	?___lldiv,w
  2079  0581  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2080                           
  2081                           ;lcd.c: 560: }
  2082  0582  2D8F               	goto	l1600
  2083  0583                     l1592:	
  2084                           
  2085                           ;lcd.c: 561: else if( (v_numOfDigitsToDisplay_u8 == 0xffu) ||
  2086                           ;lcd.c: 562: (v_numOfDigitsToDisplay_u8 > 10u))
  2087  0583  0A28               	incf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  2088  0584  1903               	btfsc	3,2
  2089  0585  2DB9               	goto	l1614
  2090  0586  300B               	movlw	11
  2091  0587  0228               	subwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  2092  0588  1803               	btfsc	3,0
  2093  0589  2DB9               	goto	l1614
  2094                           
  2095                           ;lcd.c: 568: else
  2096                           ;lcd.c: 569: {
  2097                           ;lcd.c: 573: a[i]=0;
  2098                           
  2099                           ;lcd.c: 567: }
  2100                           
  2101                           ;lcd.c: 563: {
  2102                           ;lcd.c: 566: break;
  2103  058A  0842               	movf	LCD_DisplayNumber@i,w
  2104  058B  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  2105  058C  0084               	movwf	4
  2106  058D  1383               	bcf	3,7	;select IRP bank0
  2107  058E  0180               	clrf	0
  2108  058F                     l1600:	
  2109  058F  3001               	movlw	1
  2110  0590  00A9               	movwf	??_LCD_DisplayNumber
  2111  0591  0829               	movf	??_LCD_DisplayNumber,w
  2112  0592  07C2               	addwf	LCD_DisplayNumber@i,f
  2113  0593  2D24               	goto	l1602
  2114  0594                     l1604:	
  2115                           ;lcd.c: 574: }
  2116                           ;lcd.c: 575: }
  2117                           ;lcd.c: 577: while(i!=0)
  2118                           
  2119                           
  2120                           ;lcd.c: 578: {
  2121                           ;lcd.c: 580: LCD_DisplayChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  2122  0594  0842               	movf	LCD_DisplayNumber@i,w
  2123  0595  3EFF               	addlw	255
  2124  0596  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  2125  0597  0084               	movwf	4
  2126  0598  300A               	movlw	10
  2127  0599  1383               	bcf	3,7	;select IRP bank0
  2128  059A  0200               	subwf	0,w
  2129  059B  1803               	skipnc
  2130  059C  2DA4               	goto	l1608
  2131  059D  0842               	movf	LCD_DisplayNumber@i,w
  2132  059E  3EFF               	addlw	255
  2133  059F  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  2134  05A0  0084               	movwf	4
  2135  05A1  0800               	movf	0,w
  2136  05A2  3E30               	addlw	48
  2137  05A3  2DAA               	goto	L2
  2138  05A4                     l1608:	
  2139  05A4  0842               	movf	LCD_DisplayNumber@i,w
  2140  05A5  3EFF               	addlw	255
  2141  05A6  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  2142  05A7  0084               	movwf	4
  2143  05A8  0800               	movf	0,w
  2144  05A9  3E37               	addlw	55
  2145  05AA                     L2:	
  2146  05AA  00BF               	movwf	_LCD_DisplayNumber$287
  2147  05AB  3000               	movlw	0
  2148  05AC  1803               	skipnc
  2149  05AD  3001               	movlw	1
  2150  05AE  00C0               	movwf	_LCD_DisplayNumber$287+1
  2151  05AF  083F               	movf	_LCD_DisplayNumber$287,w
  2152  05B0  120A  158A  264B  120A  118A  	fcall	_LCD_DisplayChar
  2153                           
  2154                           ;lcd.c: 581: i--;
  2155  05B5  3001               	movlw	1
  2156  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  2157  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  2158  05B8  02C2               	subwf	LCD_DisplayNumber@i,f
  2159  05B9                     l1614:	
  2160  05B9  0842               	movf	LCD_DisplayNumber@i,w
  2161  05BA  1903               	btfsc	3,2
  2162  05BB  0008               	return
  2163  05BC  2D94               	goto	l1604
  2164  05BD                     __end_of_LCD_DisplayNumber:	
  2165                           
  2166                           	psect	text5
  2167  0072                     __ptext5:	
  2168 ;; *************** function ___lldiv *****************
  2169 ;; Defined at:
  2170 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  divisor         4    0[COMMON] unsigned long 
  2173 ;;  dividend        4    4[COMMON] unsigned long 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  quotient        4    9[COMMON] unsigned long 
  2176 ;;  counter         1   13[COMMON] unsigned char 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  4    0[COMMON] unsigned long 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2, status,0
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2186 ;;      Params:         8       0       0       0       0
  2187 ;;      Locals:         5       0       0       0       0
  2188 ;;      Temps:          1       0       0       0       0
  2189 ;;      Totals:        14       0       0       0       0
  2190 ;;Total ram usage:       14 bytes
  2191 ;; Hardware stack levels used:    1
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_LCD_DisplayNumber
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           
  2200                           ;psect for function ___lldiv
  2201  0072                     ___lldiv:	
  2202                           
  2203                           ;incstack = 0
  2204                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2205  0072  3000               	movlw	0
  2206  0073  00FC               	movwf	___lldiv@quotient+3
  2207  0074  3000               	movlw	0
  2208  0075  00FB               	movwf	___lldiv@quotient+2
  2209  0076  3000               	movlw	0
  2210  0077  00FA               	movwf	___lldiv@quotient+1
  2211  0078  3000               	movlw	0
  2212  0079  00F9               	movwf	___lldiv@quotient
  2213  007A  0873               	movf	___lldiv@divisor+3,w
  2214  007B  0472               	iorwf	___lldiv@divisor+2,w
  2215  007C  0471               	iorwf	___lldiv@divisor+1,w
  2216  007D  0470               	iorwf	___lldiv@divisor,w
  2217  007E  1903               	skipnz
  2218  007F  28C7               	goto	l1526
  2219  0080  01FD               	clrf	___lldiv@counter
  2220  0081  0AFD               	incf	___lldiv@counter,f
  2221  0082                     l1512:	
  2222  0082  1BF3               	btfsc	___lldiv@divisor+3,7
  2223  0083  2892               	goto	l1514
  2224  0084  3001               	movlw	1
  2225  0085  00F8               	movwf	??___lldiv
  2226  0086                     u2015:	
  2227  0086  1003               	clrc
  2228  0087  0DF0               	rlf	___lldiv@divisor,f
  2229  0088  0DF1               	rlf	___lldiv@divisor+1,f
  2230  0089  0DF2               	rlf	___lldiv@divisor+2,f
  2231  008A  0DF3               	rlf	___lldiv@divisor+3,f
  2232  008B  0BF8               	decfsz	??___lldiv,f
  2233  008C  2886               	goto	u2015
  2234  008D  3001               	movlw	1
  2235  008E  00F8               	movwf	??___lldiv
  2236  008F  0878               	movf	??___lldiv,w
  2237  0090  07FD               	addwf	___lldiv@counter,f
  2238  0091  2882               	goto	l1512
  2239  0092                     l1514:	
  2240  0092  3001               	movlw	1
  2241  0093  00F8               	movwf	??___lldiv
  2242  0094                     u2035:	
  2243  0094  1003               	clrc
  2244  0095  0DF9               	rlf	___lldiv@quotient,f
  2245  0096  0DFA               	rlf	___lldiv@quotient+1,f
  2246  0097  0DFB               	rlf	___lldiv@quotient+2,f
  2247  0098  0DFC               	rlf	___lldiv@quotient+3,f
  2248  0099  0BF8               	decfsz	??___lldiv,f
  2249  009A  2894               	goto	u2035
  2250  009B  0873               	movf	___lldiv@divisor+3,w
  2251  009C  0277               	subwf	___lldiv@dividend+3,w
  2252  009D  1D03               	skipz
  2253  009E  28A9               	goto	u2045
  2254  009F  0872               	movf	___lldiv@divisor+2,w
  2255  00A0  0276               	subwf	___lldiv@dividend+2,w
  2256  00A1  1D03               	skipz
  2257  00A2  28A9               	goto	u2045
  2258  00A3  0871               	movf	___lldiv@divisor+1,w
  2259  00A4  0275               	subwf	___lldiv@dividend+1,w
  2260  00A5  1D03               	skipz
  2261  00A6  28A9               	goto	u2045
  2262  00A7  0870               	movf	___lldiv@divisor,w
  2263  00A8  0274               	subwf	___lldiv@dividend,w
  2264  00A9                     u2045:	
  2265  00A9  1C03               	skipc
  2266  00AA  28BA               	goto	l1522
  2267  00AB  0870               	movf	___lldiv@divisor,w
  2268  00AC  02F4               	subwf	___lldiv@dividend,f
  2269  00AD  0871               	movf	___lldiv@divisor+1,w
  2270  00AE  1C03               	skipc
  2271  00AF  0F71               	incfsz	___lldiv@divisor+1,w
  2272  00B0  02F5               	subwf	___lldiv@dividend+1,f
  2273  00B1  0872               	movf	___lldiv@divisor+2,w
  2274  00B2  1C03               	skipc
  2275  00B3  0F72               	incfsz	___lldiv@divisor+2,w
  2276  00B4  02F6               	subwf	___lldiv@dividend+2,f
  2277  00B5  0873               	movf	___lldiv@divisor+3,w
  2278  00B6  1C03               	skipc
  2279  00B7  0F73               	incfsz	___lldiv@divisor+3,w
  2280  00B8  02F7               	subwf	___lldiv@dividend+3,f
  2281  00B9  1479               	bsf	___lldiv@quotient,0
  2282  00BA                     l1522:	
  2283  00BA  3001               	movlw	1
  2284  00BB                     u2055:	
  2285  00BB  1003               	clrc
  2286  00BC  0CF3               	rrf	___lldiv@divisor+3,f
  2287  00BD  0CF2               	rrf	___lldiv@divisor+2,f
  2288  00BE  0CF1               	rrf	___lldiv@divisor+1,f
  2289  00BF  0CF0               	rrf	___lldiv@divisor,f
  2290  00C0  3EFF               	addlw	-1
  2291  00C1  1D03               	skipz
  2292  00C2  28BB               	goto	u2055
  2293  00C3  3001               	movlw	1
  2294  00C4  02FD               	subwf	___lldiv@counter,f
  2295  00C5  1D03               	btfss	3,2
  2296  00C6  2892               	goto	l1514
  2297  00C7                     l1526:	
  2298  00C7  087C               	movf	___lldiv@quotient+3,w
  2299  00C8  00F3               	movwf	?___lldiv+3
  2300  00C9  087B               	movf	___lldiv@quotient+2,w
  2301  00CA  00F2               	movwf	?___lldiv+2
  2302  00CB  087A               	movf	___lldiv@quotient+1,w
  2303  00CC  00F1               	movwf	?___lldiv+1
  2304  00CD  0879               	movf	___lldiv@quotient,w
  2305  00CE  00F0               	movwf	?___lldiv
  2306  00CF  0008               	return
  2307  00D0                     __end_of___lldiv:	
  2308                           
  2309                           	psect	text6
  2310  0DF5                     __ptext6:	
  2311 ;; *************** function ___bmul *****************
  2312 ;; Defined at:
  2313 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\Umul8.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  multiplier      1    wreg     unsigned char 
  2316 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  multiplier      1    3[BANK0 ] unsigned char 
  2319 ;;  product         1    2[BANK0 ] unsigned char 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  1    wreg      unsigned char 
  2322 ;; Registers used:
  2323 ;;		wreg, status,2, status,0
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2329 ;;      Params:         0       1       0       0       0
  2330 ;;      Locals:         0       2       0       0       0
  2331 ;;      Temps:          0       1       0       0       0
  2332 ;;      Totals:         0       4       0       0       0
  2333 ;;Total ram usage:        4 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; This function calls:
  2336 ;;		Nothing
  2337 ;; This function is called by:
  2338 ;;		_LCD_DisplayNumber
  2339 ;;		_LCD_Printf
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           
  2344                           ;psect for function ___bmul
  2345  0DF5                     ___bmul:	
  2346                           
  2347                           ;incstack = 0
  2348                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2349                           ;___bmul@multiplier stored from wreg
  2350  0DF5  1283               	bcf	3,5	;RP0=0, select bank0
  2351  0DF6  1303               	bcf	3,6	;RP1=0, select bank0
  2352  0DF7  00A3               	movwf	___bmul@multiplier
  2353  0DF8  01A2               	clrf	___bmul@product
  2354  0DF9                     l1494:	
  2355  0DF9  1C23               	btfss	___bmul@multiplier,0
  2356  0DFA  2DFF               	goto	l1498
  2357  0DFB  0820               	movf	___bmul@multiplicand,w
  2358  0DFC  00A1               	movwf	??___bmul
  2359  0DFD  0821               	movf	??___bmul,w
  2360  0DFE  07A2               	addwf	___bmul@product,f
  2361  0DFF                     l1498:	
  2362  0DFF  1003               	clrc
  2363  0E00  0DA0               	rlf	___bmul@multiplicand,f
  2364  0E01  1003               	clrc
  2365  0E02  0CA3               	rrf	___bmul@multiplier,f
  2366  0E03  0823               	movf	___bmul@multiplier,w
  2367  0E04  1D03               	btfss	3,2
  2368  0E05  2DF9               	goto	l1494
  2369  0E06  0822               	movf	___bmul@product,w
  2370  0E07  0008               	return
  2371  0E08                     __end_of___bmul:	
  2372                           
  2373                           	psect	text7
  2374  0E4B                     __ptext7:	
  2375 ;; *************** function _LCD_DisplayChar *****************
  2376 ;; Defined at:
  2377 ;;		line 386 in file "../00-libfiles/lcd.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  v_lcdData_u8    1    wreg     unsigned char 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  v_lcdData_u8    1   12[COMMON] unsigned char 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      void 
  2384 ;; Registers used:
  2385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2391 ;;      Params:         0       0       0       0       0
  2392 ;;      Locals:         1       0       0       0       0
  2393 ;;      Temps:          1       0       0       0       0
  2394 ;;      Totals:         2       0       0       0       0
  2395 ;;Total ram usage:        2 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    5
  2398 ;; This function calls:
  2399 ;;		_LCD_GoToNextLine
  2400 ;;		_lcd_DataWrite
  2401 ;; This function is called by:
  2402 ;;		_LCD_DisplayString
  2403 ;;		_LCD_DisplayNumber
  2404 ;;		_LCD_Printf
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           
  2409                           ;psect for function _LCD_DisplayChar
  2410  0E4B                     _LCD_DisplayChar:	
  2411                           
  2412                           ;incstack = 0
  2413                           ; Regs used in _LCD_DisplayChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2414                           ;LCD_DisplayChar@v_lcdData_u8 stored from wreg
  2415  0E4B  00FC               	movwf	LCD_DisplayChar@v_lcdData_u8
  2416                           
  2417                           ;lcd.c: 388: if((v_LcdTrackCursorPos_U8>=LCDConfig.v_MaxSupportedChars_U8) || (v_lcdData
      +                          _u8=='\n'))
  2418  0E4C  1683               	bsf	3,5	;RP0=1, select bank1
  2419  0E4D  1303               	bcf	3,6	;RP1=0, select bank1
  2420  0E4E  0821               	movf	(_LCDConfig^(0+128)+1),w
  2421  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  2422  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  2423  0E51  0269               	subwf	_v_LcdTrackCursorPos_U8,w
  2424  0E52  1803               	skipnc
  2425  0E53  2E58               	goto	l1484
  2426  0E54  300A               	movlw	10
  2427  0E55  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  2428  0E56  1D03               	btfss	3,2
  2429  0E57  2E5D               	goto	l1486
  2430  0E58                     l1484:	
  2431                           
  2432                           ;lcd.c: 389: {
  2433                           ;lcd.c: 392: LCD_GoToNextLine();
  2434  0E58  120A  158A  2633  120A  158A  	fcall	_LCD_GoToNextLine
  2435  0E5D                     l1486:	
  2436                           
  2437                           ;lcd.c: 393: }
  2438                           ;lcd.c: 394: if(v_lcdData_u8!='\n')
  2439  0E5D  300A               	movlw	10
  2440  0E5E  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  2441  0E5F  1903               	btfsc	3,2
  2442  0E60  0008               	return
  2443                           
  2444                           ;lcd.c: 395: {
  2445                           ;lcd.c: 397: lcd_DataWrite(v_lcdData_u8);
  2446  0E61  087C               	movf	LCD_DisplayChar@v_lcdData_u8,w
  2447  0E62  120A  158A  26FC   	fcall	_lcd_DataWrite
  2448                           
  2449                           ;lcd.c: 398: v_LcdTrackCursorPos_U8++;
  2450  0E65  3001               	movlw	1
  2451  0E66  00FB               	movwf	??_LCD_DisplayChar
  2452  0E67  087B               	movf	??_LCD_DisplayChar,w
  2453  0E68  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0E69  1303               	bcf	3,6	;RP1=0, select bank0
  2455  0E6A  07E9               	addwf	_v_LcdTrackCursorPos_U8,f
  2456  0E6B  0008               	return
  2457  0E6C                     __end_of_LCD_DisplayChar:	
  2458                           
  2459                           	psect	text8
  2460  0EFC                     __ptext8:	
  2461 ;; *************** function _lcd_DataWrite *****************
  2462 ;; Defined at:
  2463 ;;		line 819 in file "../00-libfiles/lcd.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;  dataByte        1    wreg     unsigned char 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  dataByte        1    9[COMMON] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2477 ;;      Params:         0       0       0       0       0
  2478 ;;      Locals:         1       0       0       0       0
  2479 ;;      Temps:          2       0       0       0       0
  2480 ;;      Totals:         3       0       0       0       0
  2481 ;;Total ram usage:        3 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    3
  2484 ;; This function calls:
  2485 ;;		_lcd_BusyCheck
  2486 ;;		_lcd_SendDataSignals
  2487 ;;		_lcd_SendHigherNibble
  2488 ;;		_lcd_SendLowerNibble
  2489 ;; This function is called by:
  2490 ;;		_LCD_DisplayChar
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           
  2495                           ;psect for function _lcd_DataWrite
  2496  0EFC                     _lcd_DataWrite:	
  2497                           
  2498                           ;incstack = 0
  2499                           ; Regs used in _lcd_DataWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2500                           ;lcd_DataWrite@dataByte stored from wreg
  2501  0EFC  00F9               	movwf	lcd_DataWrite@dataByte
  2502                           
  2503                           ;lcd.c: 821: lcd_BusyCheck();
  2504  0EFD  120A  118A  21AD  120A  158A  	fcall	_lcd_BusyCheck
  2505                           
  2506                           ;lcd.c: 822: if(LCDConfig.v_LcdMode_U8 == 8u)
  2507  0F02  3008               	movlw	8
  2508  0F03  1683               	bsf	3,5	;RP0=1, select bank1
  2509  0F04  1303               	bcf	3,6	;RP1=0, select bank1
  2510  0F05  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  2511  0F06  1D03               	btfss	3,2
  2512  0F07  2F0F               	goto	l1464
  2513                           
  2514                           ;lcd.c: 823: {
  2515                           ;lcd.c: 824: lcd_SendLowerNibble(dataByte);
  2516  0F08  0879               	movf	lcd_DataWrite@dataByte,w
  2517  0F09  120A  158A  2771  120A  158A  	fcall	_lcd_SendLowerNibble
  2518                           
  2519                           ;lcd.c: 825: }
  2520  0F0E  2F27               	goto	l1468
  2521  0F0F                     l1464:	
  2522                           
  2523                           ;lcd.c: 826: else
  2524                           ;lcd.c: 827: {
  2525                           ;lcd.c: 828: lcd_SendHigherNibble(dataByte);
  2526  0F0F  0879               	movf	lcd_DataWrite@dataByte,w
  2527  0F10  120A  158A  2731  120A  158A  	fcall	_lcd_SendHigherNibble
  2528                           
  2529                           ;lcd.c: 829: lcd_SendDataSignals();
  2530  0F15  120A  158A  2699  120A  158A  	fcall	_lcd_SendDataSignals
  2531                           
  2532                           ;lcd.c: 830: dataByte = dataByte << 4;
  2533  0F1A  0879               	movf	lcd_DataWrite@dataByte,w
  2534  0F1B  00F7               	movwf	??_lcd_DataWrite
  2535  0F1C  3003               	movlw	3
  2536  0F1D                     u1935:	
  2537  0F1D  1003               	clrc
  2538  0F1E  0DF7               	rlf	??_lcd_DataWrite,f
  2539  0F1F  3EFF               	addlw	-1
  2540  0F20  1D03               	skipz
  2541  0F21  2F1D               	goto	u1935
  2542  0F22  1003               	clrc
  2543  0F23  0D77               	rlf	??_lcd_DataWrite,w
  2544  0F24  00F8               	movwf	??_lcd_DataWrite+1
  2545  0F25  0878               	movf	??_lcd_DataWrite+1,w
  2546  0F26  00F9               	movwf	lcd_DataWrite@dataByte
  2547  0F27                     l1468:	
  2548                           
  2549                           ;lcd.c: 831: }
  2550                           ;lcd.c: 833: lcd_SendHigherNibble(dataByte);
  2551  0F27  0879               	movf	lcd_DataWrite@dataByte,w
  2552  0F28  120A  158A  2731  120A  158A  	fcall	_lcd_SendHigherNibble
  2553                           
  2554                           ;lcd.c: 834: lcd_SendDataSignals();
  2555  0F2D  120A  158A  2699   	fcall	_lcd_SendDataSignals
  2556  0F30  0008               	return
  2557  0F31                     __end_of_lcd_DataWrite:	
  2558                           
  2559                           	psect	text9
  2560  0E99                     __ptext9:	
  2561 ;; *************** function _lcd_SendDataSignals *****************
  2562 ;; Defined at:
  2563 ;;		line 995 in file "../00-libfiles/lcd.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2577 ;;      Params:         0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0
  2580 ;;      Totals:         0       0       0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    1
  2584 ;; This function calls:
  2585 ;;		_DELAY_us
  2586 ;;		_GPIO_PinWrite
  2587 ;; This function is called by:
  2588 ;;		_lcd_DataWrite
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           
  2593                           ;psect for function _lcd_SendDataSignals
  2594  0E99                     _lcd_SendDataSignals:	
  2595                           
  2596                           ;lcd.c: 997: GPIO_PinWrite(LCDConfig.RS,1);
  2597                           
  2598                           ;incstack = 0
  2599                           ; Regs used in _lcd_SendDataSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2600  0E99  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2601  0E9A  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  2602  0E9B  1683               	bsf	3,5	;RP0=1, select bank1
  2603  0E9C  1303               	bcf	3,6	;RP1=0, select bank1
  2604  0E9D  0823               	movf	(_LCDConfig^(0+128)+3),w
  2605  0E9E  120A  118A  23E3  120A  158A  	fcall	_GPIO_PinWrite
  2606                           
  2607                           ;lcd.c: 998: GPIO_PinWrite(LCDConfig.RW,0);
  2608  0EA3  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2609  0EA4  1683               	bsf	3,5	;RP0=1, select bank1
  2610  0EA5  1303               	bcf	3,6	;RP1=0, select bank1
  2611  0EA6  0824               	movf	(_LCDConfig^(0+128)+4),w
  2612  0EA7  120A  118A  23E3  120A  158A  	fcall	_GPIO_PinWrite
  2613                           
  2614                           ;lcd.c: 999: GPIO_PinWrite(LCDConfig.EN,1);
  2615  0EAC  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2616  0EAD  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  2617  0EAE  1683               	bsf	3,5	;RP0=1, select bank1
  2618  0EAF  1303               	bcf	3,6	;RP1=0, select bank1
  2619  0EB0  0825               	movf	(_LCDConfig^(0+128)+5),w
  2620  0EB1  120A  118A  23E3  120A  158A  	fcall	_GPIO_PinWrite
  2621                           
  2622                           ;lcd.c: 1000: DELAY_us(10);
  2623  0EB6  300A               	movlw	10
  2624  0EB7  00F0               	movwf	DELAY_us@us_count
  2625  0EB8  3000               	movlw	0
  2626  0EB9  00F1               	movwf	DELAY_us@us_count+1
  2627  0EBA  120A  158A  25DF  120A  158A  	fcall	_DELAY_us
  2628                           
  2629                           ;lcd.c: 1001: GPIO_PinWrite(LCDConfig.EN,0);
  2630  0EBF  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2631  0EC0  1683               	bsf	3,5	;RP0=1, select bank1
  2632  0EC1  1303               	bcf	3,6	;RP1=0, select bank1
  2633  0EC2  0825               	movf	(_LCDConfig^(0+128)+5),w
  2634  0EC3  120A  118A  23E3   	fcall	_GPIO_PinWrite
  2635  0EC6  0008               	return
  2636  0EC7                     __end_of_lcd_SendDataSignals:	
  2637                           
  2638                           	psect	text10
  2639  0E33                     __ptext10:	
  2640 ;; *************** function _LCD_GoToNextLine *****************
  2641 ;; Defined at:
  2642 ;;		line 286 in file "../00-libfiles/lcd.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2656 ;;      Params:         0       0       0       0       0
  2657 ;;      Locals:         0       0       0       0       0
  2658 ;;      Temps:          1       0       0       0       0
  2659 ;;      Totals:         1       0       0       0       0
  2660 ;;Total ram usage:        1 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:    4
  2663 ;; This function calls:
  2664 ;;		_LCD_CmdWrite
  2665 ;; This function is called by:
  2666 ;;		_LCD_DisplayChar
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           
  2671                           ;psect for function _LCD_GoToNextLine
  2672  0E33                     _LCD_GoToNextLine:	
  2673                           
  2674                           ;lcd.c: 290: v_LcdTrackLineNum_U8++;
  2675                           
  2676                           ;incstack = 0
  2677                           ; Regs used in _LCD_GoToNextLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2678  0E33  3001               	movlw	1
  2679  0E34  00FA               	movwf	??_LCD_GoToNextLine
  2680  0E35  087A               	movf	??_LCD_GoToNextLine,w
  2681  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  2682  0E37  1303               	bcf	3,6	;RP1=0, select bank0
  2683  0E38  07EA               	addwf	_v_LcdTrackLineNum_U8,f
  2684                           
  2685                           ;lcd.c: 291: v_LcdTrackCursorPos_U8 = 0x00;
  2686  0E39  01E9               	clrf	_v_LcdTrackCursorPos_U8
  2687                           
  2688                           ;lcd.c: 292: if(v_LcdTrackLineNum_U8 >= LCDConfig.v_MaxSupportedLines_U8)
  2689  0E3A  1683               	bsf	3,5	;RP0=1, select bank1
  2690  0E3B  1303               	bcf	3,6	;RP1=0, select bank1
  2691  0E3C  0820               	movf	_LCDConfig^(0+128),w
  2692  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  2693  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  2694  0E3F  026A               	subwf	_v_LcdTrackLineNum_U8,w
  2695  0E40  1803               	btfsc	3,0
  2696                           
  2697                           ;lcd.c: 293: v_LcdTrackLineNum_U8 = 0x00;
  2698  0E41  01EA               	clrf	_v_LcdTrackLineNum_U8
  2699                           
  2700                           ;lcd.c: 294: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_LcdTrackLineNum_U8]);
  2701  0E42  086A               	movf	_v_LcdTrackLineNum_U8,w
  2702  0E43  3E65               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  2703  0E44  0084               	movwf	4
  2704  0E45  1383               	bcf	3,7	;select IRP bank0
  2705  0E46  0800               	movf	0,w
  2706  0E47  120A  158A  26C7   	fcall	_LCD_CmdWrite
  2707  0E4A  0008               	return
  2708  0E4B                     __end_of_LCD_GoToNextLine:	
  2709                           
  2710                           	psect	text11
  2711  0023                     __ptext11:	
  2712 ;; *************** function _LCD_Init *****************
  2713 ;; Defined at:
  2714 ;;		line 192 in file "../00-libfiles/lcd.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  v_lcdNoOfLin    1    wreg     unsigned char 
  2717 ;;  v_MaxCharsPe    1   12[COMMON] unsigned char 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  v_lcdNoOfLin    1    0[BANK0 ] unsigned char 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  1    wreg      void 
  2722 ;; Registers used:
  2723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2729 ;;      Params:         1       0       0       0       0
  2730 ;;      Locals:         0       1       0       0       0
  2731 ;;      Temps:          1       0       0       0       0
  2732 ;;      Totals:         2       1       0       0       0
  2733 ;;Total ram usage:        3 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; Hardware stack levels required when called:    6
  2736 ;; This function calls:
  2737 ;;		_DELAY_ms
  2738 ;;		_LCD_Clear
  2739 ;;		_LCD_CmdWrite
  2740 ;;		_lcd_Reset
  2741 ;; This function is called by:
  2742 ;;		_main
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           
  2747                           ;psect for function _LCD_Init
  2748  0023                     _LCD_Init:	
  2749                           
  2750                           ;incstack = 0
  2751                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2752                           ;LCD_Init@v_lcdNoOfLines_u8 stored from wreg
  2753  0023  1283               	bcf	3,5	;RP0=0, select bank0
  2754  0024  1303               	bcf	3,6	;RP1=0, select bank0
  2755  0025  00A0               	movwf	LCD_Init@v_lcdNoOfLines_u8
  2756                           
  2757                           ;lcd.c: 196: LCDConfig.v_MaxSupportedChars_U8 = v_MaxCharsPerLine_u8;
  2758  0026  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  2759  0027  00FD               	movwf	??_LCD_Init
  2760  0028  087D               	movf	??_LCD_Init,w
  2761  0029  1683               	bsf	3,5	;RP0=1, select bank1
  2762  002A  1303               	bcf	3,6	;RP1=0, select bank1
  2763  002B  00A1               	movwf	(_LCDConfig^(0+128)+1)
  2764                           
  2765                           ;lcd.c: 197: LCDConfig.v_MaxSupportedLines_U8 = v_lcdNoOfLines_u8;
  2766  002C  1283               	bcf	3,5	;RP0=0, select bank0
  2767  002D  1303               	bcf	3,6	;RP1=0, select bank0
  2768  002E  0820               	movf	LCD_Init@v_lcdNoOfLines_u8,w
  2769  002F  00FD               	movwf	??_LCD_Init
  2770  0030  087D               	movf	??_LCD_Init,w
  2771  0031  1683               	bsf	3,5	;RP0=1, select bank1
  2772  0032  1303               	bcf	3,6	;RP1=0, select bank1
  2773  0033  00A0               	movwf	_LCDConfig^(0+128)
  2774                           
  2775                           ;lcd.c: 198: if(v_lcdNoOfLines_u8 > 0x02)
  2776  0034  3003               	movlw	3
  2777  0035  1283               	bcf	3,5	;RP0=0, select bank0
  2778  0036  1303               	bcf	3,6	;RP1=0, select bank0
  2779  0037  0220               	subwf	LCD_Init@v_lcdNoOfLines_u8,w
  2780  0038  1C03               	skipc
  2781  0039  2846               	goto	l1656
  2782                           
  2783                           ;lcd.c: 199: {
  2784                           ;lcd.c: 200: ARR_LcdLineNumAddress_U8[0x02] = 0x90 + (v_MaxCharsPerLine_u8 & 0x0fu);
  2785  003A  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  2786  003B  390F               	andlw	15
  2787  003C  3E90               	addlw	144
  2788  003D  00FD               	movwf	??_LCD_Init
  2789  003E  087D               	movf	??_LCD_Init,w
  2790  003F  00E7               	movwf	_ARR_LcdLineNumAddress_U8+2
  2791                           
  2792                           ;lcd.c: 201: ARR_LcdLineNumAddress_U8[0x03] = 0xd0 + (v_MaxCharsPerLine_u8 & 0x0fu);
  2793  0040  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  2794  0041  390F               	andlw	15
  2795  0042  3ED0               	addlw	208
  2796  0043  00FD               	movwf	??_LCD_Init
  2797  0044  087D               	movf	??_LCD_Init,w
  2798  0045  00E8               	movwf	_ARR_LcdLineNumAddress_U8+3
  2799  0046                     l1656:	
  2800                           
  2801                           ;lcd.c: 202: }
  2802                           ;lcd.c: 204: DELAY_ms(100);
  2803  0046  3064               	movlw	100
  2804  0047  00F2               	movwf	DELAY_ms@ms_count
  2805  0048  3000               	movlw	0
  2806  0049  00F3               	movwf	DELAY_ms@ms_count+1
  2807  004A  120A  158A  2608  120A  118A  	fcall	_DELAY_ms
  2808                           
  2809                           ;lcd.c: 206: if(LCDConfig.v_LcdMode_U8 == 8u)
  2810  004F  3008               	movlw	8
  2811  0050  1683               	bsf	3,5	;RP0=1, select bank1
  2812  0051  1303               	bcf	3,6	;RP1=0, select bank1
  2813  0052  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  2814  0053  1D03               	btfss	3,2
  2815  0054  2857               	goto	l1662
  2816                           
  2817                           ;lcd.c: 207: {
  2818                           ;lcd.c: 208: LCD_CmdWrite(0x38u);
  2819  0055  3038               	movlw	56
  2820  0056  2863               	goto	L3
  2821  0057                     l1662:	
  2822                           ;lcd.c: 209: }
  2823                           
  2824                           
  2825                           ;lcd.c: 210: else if(LCDConfig.v_LcdMode_U8 == 4u)
  2826  0057  3004               	movlw	4
  2827  0058  1683               	bsf	3,5	;RP0=1, select bank1
  2828  0059  1303               	bcf	3,6	;RP1=0, select bank1
  2829  005A  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  2830  005B  1D03               	btfss	3,2
  2831  005C  2868               	goto	l72
  2832                           
  2833                           ;lcd.c: 211: {
  2834                           ;lcd.c: 212: lcd_Reset();
  2835  005D  120A  158A  27B1  120A  118A  	fcall	_lcd_Reset
  2836                           
  2837                           ;lcd.c: 213: LCD_CmdWrite(0x28u);
  2838  0062  3028               	movlw	40
  2839  0063                     L3:	
  2840  0063  120A  158A  26C7  120A  118A  	fcall	_LCD_CmdWrite
  2841  0068                     l72:	
  2842                           
  2843                           ;lcd.c: 214: }
  2844                           ;lcd.c: 216: LCD_CmdWrite(0x0Eu);
  2845  0068  300E               	movlw	14
  2846  0069  120A  158A  26C7  120A  118A  	fcall	_LCD_CmdWrite
  2847                           
  2848                           ;lcd.c: 217: LCD_Clear();
  2849  006E  120A  158A  25EA   	fcall	_LCD_Clear
  2850  0071  0008               	return
  2851  0072                     __end_of_LCD_Init:	
  2852                           
  2853                           	psect	text12
  2854  0FB1                     __ptext12:	
  2855 ;; *************** function _lcd_Reset *****************
  2856 ;; Defined at:
  2857 ;;		line 906 in file "../00-libfiles/lcd.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;		None
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;		None
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      void 
  2864 ;; Registers used:
  2865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2871 ;;      Params:         0       0       0       0       0
  2872 ;;      Locals:         0       0       0       0       0
  2873 ;;      Temps:          0       0       0       0       0
  2874 ;;      Totals:         0       0       0       0       0
  2875 ;;Total ram usage:        0 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:    2
  2878 ;; This function calls:
  2879 ;;		_DELAY_ms
  2880 ;;		_DELAY_us
  2881 ;;		_lcd_SendCmdSignals
  2882 ;;		_lcd_SendHigherNibble
  2883 ;; This function is called by:
  2884 ;;		_LCD_Init
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           
  2889                           ;psect for function _lcd_Reset
  2890  0FB1                     _lcd_Reset:	
  2891                           
  2892                           ;lcd.c: 909: lcd_SendHigherNibble(0x30);
  2893                           
  2894                           ;incstack = 0
  2895                           ; Regs used in _lcd_Reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2896  0FB1  3030               	movlw	48
  2897  0FB2  120A  158A  2731  120A  158A  	fcall	_lcd_SendHigherNibble
  2898                           
  2899                           ;lcd.c: 910: lcd_SendCmdSignals();
  2900  0FB7  120A  158A  266C  120A  158A  	fcall	_lcd_SendCmdSignals
  2901                           
  2902                           ;lcd.c: 911: DELAY_ms(100);
  2903  0FBC  3064               	movlw	100
  2904  0FBD  00F2               	movwf	DELAY_ms@ms_count
  2905  0FBE  3000               	movlw	0
  2906  0FBF  00F3               	movwf	DELAY_ms@ms_count+1
  2907  0FC0  120A  158A  2608  120A  158A  	fcall	_DELAY_ms
  2908                           
  2909                           ;lcd.c: 912: lcd_SendHigherNibble(0x30);
  2910  0FC5  3030               	movlw	48
  2911  0FC6  120A  158A  2731  120A  158A  	fcall	_lcd_SendHigherNibble
  2912                           
  2913                           ;lcd.c: 913: lcd_SendCmdSignals();
  2914  0FCB  120A  158A  266C  120A  158A  	fcall	_lcd_SendCmdSignals
  2915                           
  2916                           ;lcd.c: 914: DELAY_us(200);
  2917  0FD0  30C8               	movlw	200
  2918  0FD1  00F0               	movwf	DELAY_us@us_count
  2919  0FD2  3000               	movlw	0
  2920  0FD3  00F1               	movwf	DELAY_us@us_count+1
  2921  0FD4  120A  158A  25DF  120A  158A  	fcall	_DELAY_us
  2922                           
  2923                           ;lcd.c: 915: lcd_SendHigherNibble(0x30);
  2924  0FD9  3030               	movlw	48
  2925  0FDA  120A  158A  2731  120A  158A  	fcall	_lcd_SendHigherNibble
  2926                           
  2927                           ;lcd.c: 916: lcd_SendCmdSignals();
  2928  0FDF  120A  158A  266C  120A  158A  	fcall	_lcd_SendCmdSignals
  2929                           
  2930                           ;lcd.c: 917: DELAY_us(200);
  2931  0FE4  30C8               	movlw	200
  2932  0FE5  00F0               	movwf	DELAY_us@us_count
  2933  0FE6  3000               	movlw	0
  2934  0FE7  00F1               	movwf	DELAY_us@us_count+1
  2935  0FE8  120A  158A  25DF  120A  158A  	fcall	_DELAY_us
  2936                           
  2937                           ;lcd.c: 918: lcd_SendHigherNibble(0x20);
  2938  0FED  3020               	movlw	32
  2939  0FEE  120A  158A  2731  120A  158A  	fcall	_lcd_SendHigherNibble
  2940                           
  2941                           ;lcd.c: 919: lcd_SendCmdSignals();
  2942  0FF3  120A  158A  266C  120A  158A  	fcall	_lcd_SendCmdSignals
  2943                           
  2944                           ;lcd.c: 920: DELAY_us(200);
  2945  0FF8  30C8               	movlw	200
  2946  0FF9  00F0               	movwf	DELAY_us@us_count
  2947  0FFA  3000               	movlw	0
  2948  0FFB  00F1               	movwf	DELAY_us@us_count+1
  2949  0FFC  120A  158A  25DF   	fcall	_DELAY_us
  2950  0FFF  0008               	return
  2951  1000                     __end_of_lcd_Reset:	
  2952                           
  2953                           	psect	text13
  2954  0DEA                     __ptext13:	
  2955 ;; *************** function _LCD_Clear *****************
  2956 ;; Defined at:
  2957 ;;		line 231 in file "../00-libfiles/lcd.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;		None
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2971 ;;      Params:         0       0       0       0       0
  2972 ;;      Locals:         0       0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0
  2974 ;;      Totals:         0       0       0       0       0
  2975 ;;Total ram usage:        0 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    5
  2978 ;; This function calls:
  2979 ;;		_LCD_CmdWrite
  2980 ;;		_LCD_GoToLine
  2981 ;; This function is called by:
  2982 ;;		_LCD_Init
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           
  2987                           ;psect for function _LCD_Clear
  2988  0DEA                     _LCD_Clear:	
  2989                           
  2990                           ;lcd.c: 233: LCD_CmdWrite(0x01u);
  2991                           
  2992                           ;incstack = 0
  2993                           ; Regs used in _LCD_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2994  0DEA  3001               	movlw	1
  2995  0DEB  120A  158A  26C7  120A  158A  	fcall	_LCD_CmdWrite
  2996                           
  2997                           ;lcd.c: 234: LCD_GoToLine(0x00);
  2998  0DF0  3000               	movlw	0
  2999  0DF1  120A  158A  261C   	fcall	_LCD_GoToLine
  3000  0DF4  0008               	return
  3001  0DF5                     __end_of_LCD_Clear:	
  3002                           
  3003                           	psect	text14
  3004  0E1C                     __ptext14:	
  3005 ;; *************** function _LCD_GoToLine *****************
  3006 ;; Defined at:
  3007 ;;		line 259 in file "../00-libfiles/lcd.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  v_lineNumber    1    wreg     unsigned char 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  v_lineNumber    1   11[COMMON] unsigned char 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3021 ;;      Params:         0       0       0       0       0
  3022 ;;      Locals:         1       0       0       0       0
  3023 ;;      Temps:          1       0       0       0       0
  3024 ;;      Totals:         2       0       0       0       0
  3025 ;;Total ram usage:        2 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; Hardware stack levels required when called:    4
  3028 ;; This function calls:
  3029 ;;		_LCD_CmdWrite
  3030 ;; This function is called by:
  3031 ;;		_main
  3032 ;;		_LCD_Clear
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           
  3037                           ;psect for function _LCD_GoToLine
  3038  0E1C                     _LCD_GoToLine:	
  3039                           
  3040                           ;incstack = 0
  3041                           ; Regs used in _LCD_GoToLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3042                           ;LCD_GoToLine@v_lineNumber_u8 stored from wreg
  3043  0E1C  00FB               	movwf	LCD_GoToLine@v_lineNumber_u8
  3044                           
  3045                           ;lcd.c: 261: if(v_lineNumber_u8 < LCDConfig.v_MaxSupportedLines_U8)
  3046  0E1D  1683               	bsf	3,5	;RP0=1, select bank1
  3047  0E1E  1303               	bcf	3,6	;RP1=0, select bank1
  3048  0E1F  0820               	movf	_LCDConfig^(0+128),w
  3049  0E20  027B               	subwf	LCD_GoToLine@v_lineNumber_u8,w
  3050  0E21  1803               	skipnc
  3051  0E22  0008               	return
  3052                           
  3053                           ;lcd.c: 262: {
  3054                           ;lcd.c: 265: v_LcdTrackCursorPos_U8 = 0x00;
  3055  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  3056  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  3057  0E25  01E9               	clrf	_v_LcdTrackCursorPos_U8
  3058                           
  3059                           ;lcd.c: 266: v_LcdTrackLineNum_U8 = v_lineNumber_u8;
  3060  0E26  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  3061  0E27  00FA               	movwf	??_LCD_GoToLine
  3062  0E28  087A               	movf	??_LCD_GoToLine,w
  3063  0E29  00EA               	movwf	_v_LcdTrackLineNum_U8
  3064                           
  3065                           ;lcd.c: 267: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_lineNumber_u8]);
  3066  0E2A  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  3067  0E2B  3E65               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  3068  0E2C  0084               	movwf	4
  3069  0E2D  1383               	bcf	3,7	;select IRP bank0
  3070  0E2E  0800               	movf	0,w
  3071  0E2F  120A  158A  26C7   	fcall	_LCD_CmdWrite
  3072  0E32  0008               	return
  3073  0E33                     __end_of_LCD_GoToLine:	
  3074                           
  3075                           	psect	text15
  3076  0EC7                     __ptext15:	
  3077 ;; *************** function _LCD_CmdWrite *****************
  3078 ;; Defined at:
  3079 ;;		line 352 in file "../00-libfiles/lcd.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  v_lcdCmd_u8     1    wreg     unsigned char 
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  v_lcdCmd_u8     1    9[COMMON] unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3093 ;;      Params:         0       0       0       0       0
  3094 ;;      Locals:         1       0       0       0       0
  3095 ;;      Temps:          2       0       0       0       0
  3096 ;;      Totals:         3       0       0       0       0
  3097 ;;Total ram usage:        3 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    3
  3100 ;; This function calls:
  3101 ;;		_lcd_BusyCheck
  3102 ;;		_lcd_SendCmdSignals
  3103 ;;		_lcd_SendHigherNibble
  3104 ;;		_lcd_SendLowerNibble
  3105 ;; This function is called by:
  3106 ;;		_LCD_Init
  3107 ;;		_LCD_Clear
  3108 ;;		_LCD_GoToLine
  3109 ;;		_LCD_GoToNextLine
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           
  3114                           ;psect for function _LCD_CmdWrite
  3115  0EC7                     _LCD_CmdWrite:	
  3116                           
  3117                           ;incstack = 0
  3118                           ; Regs used in _LCD_CmdWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3119                           ;LCD_CmdWrite@v_lcdCmd_u8 stored from wreg
  3120  0EC7  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  3121                           
  3122                           ;lcd.c: 354: lcd_BusyCheck();
  3123  0EC8  120A  118A  21AD  120A  158A  	fcall	_lcd_BusyCheck
  3124                           
  3125                           ;lcd.c: 355: if(LCDConfig.v_LcdMode_U8 == 8u)
  3126  0ECD  3008               	movlw	8
  3127  0ECE  1683               	bsf	3,5	;RP0=1, select bank1
  3128  0ECF  1303               	bcf	3,6	;RP1=0, select bank1
  3129  0ED0  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  3130  0ED1  1D03               	btfss	3,2
  3131  0ED2  2EDA               	goto	l1434
  3132                           
  3133                           ;lcd.c: 356: {
  3134                           ;lcd.c: 357: lcd_SendLowerNibble(v_lcdCmd_u8);
  3135  0ED3  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  3136  0ED4  120A  158A  2771  120A  158A  	fcall	_lcd_SendLowerNibble
  3137                           
  3138                           ;lcd.c: 358: }
  3139  0ED9  2EF2               	goto	l1438
  3140  0EDA                     l1434:	
  3141                           
  3142                           ;lcd.c: 359: else
  3143                           ;lcd.c: 360: {
  3144                           ;lcd.c: 361: lcd_SendHigherNibble(v_lcdCmd_u8);
  3145  0EDA  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  3146  0EDB  120A  158A  2731  120A  158A  	fcall	_lcd_SendHigherNibble
  3147                           
  3148                           ;lcd.c: 362: lcd_SendCmdSignals();
  3149  0EE0  120A  158A  266C  120A  158A  	fcall	_lcd_SendCmdSignals
  3150                           
  3151                           ;lcd.c: 363: v_lcdCmd_u8 = v_lcdCmd_u8 << 4;
  3152  0EE5  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  3153  0EE6  00F7               	movwf	??_LCD_CmdWrite
  3154  0EE7  3003               	movlw	3
  3155  0EE8                     u1905:	
  3156  0EE8  1003               	clrc
  3157  0EE9  0DF7               	rlf	??_LCD_CmdWrite,f
  3158  0EEA  3EFF               	addlw	-1
  3159  0EEB  1D03               	skipz
  3160  0EEC  2EE8               	goto	u1905
  3161  0EED  1003               	clrc
  3162  0EEE  0D77               	rlf	??_LCD_CmdWrite,w
  3163  0EEF  00F8               	movwf	??_LCD_CmdWrite+1
  3164  0EF0  0878               	movf	??_LCD_CmdWrite+1,w
  3165  0EF1  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  3166  0EF2                     l1438:	
  3167                           
  3168                           ;lcd.c: 364: }
  3169                           ;lcd.c: 366: lcd_SendHigherNibble(v_lcdCmd_u8);
  3170  0EF2  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  3171  0EF3  120A  158A  2731  120A  158A  	fcall	_lcd_SendHigherNibble
  3172                           
  3173                           ;lcd.c: 367: lcd_SendCmdSignals();
  3174  0EF8  120A  158A  266C   	fcall	_lcd_SendCmdSignals
  3175  0EFB  0008               	return
  3176  0EFC                     __end_of_LCD_CmdWrite:	
  3177                           
  3178                           	psect	text16
  3179  0F71                     __ptext16:	
  3180 ;; *************** function _lcd_SendLowerNibble *****************
  3181 ;; Defined at:
  3182 ;;		line 955 in file "../00-libfiles/lcd.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;  dataByte        1    wreg     unsigned char 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;  dataByte        1    6[COMMON] unsigned char 
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      void 
  3189 ;; Registers used:
  3190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3196 ;;      Params:         0       0       0       0       0
  3197 ;;      Locals:         1       0       0       0       0
  3198 ;;      Temps:          1       0       0       0       0
  3199 ;;      Totals:         2       0       0       0       0
  3200 ;;Total ram usage:        2 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:    1
  3203 ;; This function calls:
  3204 ;;		_GPIO_PinWrite
  3205 ;; This function is called by:
  3206 ;;		_LCD_CmdWrite
  3207 ;;		_lcd_DataWrite
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           
  3212                           ;psect for function _lcd_SendLowerNibble
  3213  0F71                     _lcd_SendLowerNibble:	
  3214                           
  3215                           ;incstack = 0
  3216                           ; Regs used in _lcd_SendLowerNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3217                           ;lcd_SendLowerNibble@dataByte stored from wreg
  3218  0F71  00F6               	movwf	lcd_SendLowerNibble@dataByte
  3219                           
  3220                           ;lcd.c: 957: GPIO_PinWrite(LCDConfig.D0,(((dataByte)&((1<<(0))))!=0u));
  3221  0F72  1C76               	btfss	lcd_SendLowerNibble@dataByte,0
  3222  0F73  2F76               	goto	u1730
  3223  0F74  3001               	movlw	1
  3224  0F75  2F77               	goto	u1740
  3225  0F76                     u1730:	
  3226  0F76  3000               	movlw	0
  3227  0F77                     u1740:	
  3228  0F77  00F5               	movwf	??_lcd_SendLowerNibble
  3229  0F78  0875               	movf	??_lcd_SendLowerNibble,w
  3230  0F79  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  3231  0F7A  1683               	bsf	3,5	;RP0=1, select bank1
  3232  0F7B  1303               	bcf	3,6	;RP1=0, select bank1
  3233  0F7C  0826               	movf	(_LCDConfig^(0+128)+6),w
  3234  0F7D  120A  118A  23E3  120A  158A  	fcall	_GPIO_PinWrite
  3235                           
  3236                           ;lcd.c: 958: GPIO_PinWrite(LCDConfig.D1,(((dataByte)&((1<<(1))))!=0u));
  3237  0F82  1CF6               	btfss	lcd_SendLowerNibble@dataByte,1
  3238  0F83  2F86               	goto	u1750
  3239  0F84  3001               	movlw	1
  3240  0F85  2F87               	goto	u1760
  3241  0F86                     u1750:	
  3242  0F86  3000               	movlw	0
  3243  0F87                     u1760:	
  3244  0F87  00F5               	movwf	??_lcd_SendLowerNibble
  3245  0F88  0875               	movf	??_lcd_SendLowerNibble,w
  3246  0F89  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  3247  0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  3248  0F8B  1303               	bcf	3,6	;RP1=0, select bank1
  3249  0F8C  0827               	movf	(_LCDConfig^(0+128)+7),w
  3250  0F8D  120A  118A  23E3  120A  158A  	fcall	_GPIO_PinWrite
  3251                           
  3252                           ;lcd.c: 959: GPIO_PinWrite(LCDConfig.D2,(((dataByte)&((1<<(2))))!=0u));
  3253  0F92  1D76               	btfss	lcd_SendLowerNibble@dataByte,2
  3254  0F93  2F96               	goto	u1770
  3255  0F94  3001               	movlw	1
  3256  0F95  2F97               	goto	u1780
  3257  0F96                     u1770:	
  3258  0F96  3000               	movlw	0
  3259  0F97                     u1780:	
  3260  0F97  00F5               	movwf	??_lcd_SendLowerNibble
  3261  0F98  0875               	movf	??_lcd_SendLowerNibble,w
  3262  0F99  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  3263  0F9A  1683               	bsf	3,5	;RP0=1, select bank1
  3264  0F9B  1303               	bcf	3,6	;RP1=0, select bank1
  3265  0F9C  0828               	movf	(_LCDConfig^(0+128)+8),w
  3266  0F9D  120A  118A  23E3  120A  158A  	fcall	_GPIO_PinWrite
  3267                           
  3268                           ;lcd.c: 960: GPIO_PinWrite(LCDConfig.D3,(((dataByte)&((1<<(3))))!=0u));
  3269  0FA2  1DF6               	btfss	lcd_SendLowerNibble@dataByte,3
  3270  0FA3  2FA6               	goto	u1790
  3271  0FA4  3001               	movlw	1
  3272  0FA5  2FA7               	goto	u1800
  3273  0FA6                     u1790:	
  3274  0FA6  3000               	movlw	0
  3275  0FA7                     u1800:	
  3276  0FA7  00F5               	movwf	??_lcd_SendLowerNibble
  3277  0FA8  0875               	movf	??_lcd_SendLowerNibble,w
  3278  0FA9  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  3279  0FAA  1683               	bsf	3,5	;RP0=1, select bank1
  3280  0FAB  1303               	bcf	3,6	;RP1=0, select bank1
  3281  0FAC  0829               	movf	(_LCDConfig^(0+128)+9),w
  3282  0FAD  120A  118A  23E3   	fcall	_GPIO_PinWrite
  3283  0FB0  0008               	return
  3284  0FB1                     __end_of_lcd_SendLowerNibble:	
  3285                           
  3286                           	psect	text17
  3287  0F31                     __ptext17:	
  3288 ;; *************** function _lcd_SendHigherNibble *****************
  3289 ;; Defined at:
  3290 ;;		line 936 in file "../00-libfiles/lcd.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;  dataByte        1    wreg     unsigned char 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  dataByte        1    6[COMMON] unsigned char 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3304 ;;      Params:         0       0       0       0       0
  3305 ;;      Locals:         1       0       0       0       0
  3306 ;;      Temps:          1       0       0       0       0
  3307 ;;      Totals:         2       0       0       0       0
  3308 ;;Total ram usage:        2 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    1
  3311 ;; This function calls:
  3312 ;;		_GPIO_PinWrite
  3313 ;; This function is called by:
  3314 ;;		_LCD_CmdWrite
  3315 ;;		_lcd_DataWrite
  3316 ;;		_lcd_Reset
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           
  3321                           ;psect for function _lcd_SendHigherNibble
  3322  0F31                     _lcd_SendHigherNibble:	
  3323                           
  3324                           ;incstack = 0
  3325                           ; Regs used in _lcd_SendHigherNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3326                           ;lcd_SendHigherNibble@dataByte stored from wreg
  3327  0F31  00F6               	movwf	lcd_SendHigherNibble@dataByte
  3328                           
  3329                           ;lcd.c: 938: GPIO_PinWrite(LCDConfig.D4,(((dataByte)&((1<<(4))))!=0u));
  3330  0F32  1E76               	btfss	lcd_SendHigherNibble@dataByte,4
  3331  0F33  2F36               	goto	u1810
  3332  0F34  3001               	movlw	1
  3333  0F35  2F37               	goto	u1820
  3334  0F36                     u1810:	
  3335  0F36  3000               	movlw	0
  3336  0F37                     u1820:	
  3337  0F37  00F5               	movwf	??_lcd_SendHigherNibble
  3338  0F38  0875               	movf	??_lcd_SendHigherNibble,w
  3339  0F39  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  3340  0F3A  1683               	bsf	3,5	;RP0=1, select bank1
  3341  0F3B  1303               	bcf	3,6	;RP1=0, select bank1
  3342  0F3C  082A               	movf	(_LCDConfig^(0+128)+10),w
  3343  0F3D  120A  118A  23E3  120A  158A  	fcall	_GPIO_PinWrite
  3344                           
  3345                           ;lcd.c: 939: GPIO_PinWrite(LCDConfig.D5,(((dataByte)&((1<<(5))))!=0u));
  3346  0F42  1EF6               	btfss	lcd_SendHigherNibble@dataByte,5
  3347  0F43  2F46               	goto	u1830
  3348  0F44  3001               	movlw	1
  3349  0F45  2F47               	goto	u1840
  3350  0F46                     u1830:	
  3351  0F46  3000               	movlw	0
  3352  0F47                     u1840:	
  3353  0F47  00F5               	movwf	??_lcd_SendHigherNibble
  3354  0F48  0875               	movf	??_lcd_SendHigherNibble,w
  3355  0F49  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  3356  0F4A  1683               	bsf	3,5	;RP0=1, select bank1
  3357  0F4B  1303               	bcf	3,6	;RP1=0, select bank1
  3358  0F4C  082B               	movf	(_LCDConfig^(0+128)+11),w
  3359  0F4D  120A  118A  23E3  120A  158A  	fcall	_GPIO_PinWrite
  3360                           
  3361                           ;lcd.c: 940: GPIO_PinWrite(LCDConfig.D6,(((dataByte)&((1<<(6))))!=0u));
  3362  0F52  1F76               	btfss	lcd_SendHigherNibble@dataByte,6
  3363  0F53  2F56               	goto	u1850
  3364  0F54  3001               	movlw	1
  3365  0F55  2F57               	goto	u1860
  3366  0F56                     u1850:	
  3367  0F56  3000               	movlw	0
  3368  0F57                     u1860:	
  3369  0F57  00F5               	movwf	??_lcd_SendHigherNibble
  3370  0F58  0875               	movf	??_lcd_SendHigherNibble,w
  3371  0F59  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  3372  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  3373  0F5B  1303               	bcf	3,6	;RP1=0, select bank1
  3374  0F5C  082C               	movf	(_LCDConfig^(0+128)+12),w
  3375  0F5D  120A  118A  23E3  120A  158A  	fcall	_GPIO_PinWrite
  3376                           
  3377                           ;lcd.c: 941: GPIO_PinWrite(LCDConfig.D7,(((dataByte)&((1<<(7))))!=0u));
  3378  0F62  1FF6               	btfss	lcd_SendHigherNibble@dataByte,7
  3379  0F63  2F66               	goto	u1870
  3380  0F64  3001               	movlw	1
  3381  0F65  2F67               	goto	u1880
  3382  0F66                     u1870:	
  3383  0F66  3000               	movlw	0
  3384  0F67                     u1880:	
  3385  0F67  00F5               	movwf	??_lcd_SendHigherNibble
  3386  0F68  0875               	movf	??_lcd_SendHigherNibble,w
  3387  0F69  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  3388  0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  3389  0F6B  1303               	bcf	3,6	;RP1=0, select bank1
  3390  0F6C  082D               	movf	(_LCDConfig^(0+128)+13),w
  3391  0F6D  120A  118A  23E3   	fcall	_GPIO_PinWrite
  3392  0F70  0008               	return
  3393  0F71                     __end_of_lcd_SendHigherNibble:	
  3394                           
  3395                           	psect	text18
  3396  0E6C                     __ptext18:	
  3397 ;; *************** function _lcd_SendCmdSignals *****************
  3398 ;; Defined at:
  3399 ;;		line 974 in file "../00-libfiles/lcd.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3413 ;;      Params:         0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0
  3416 ;;      Totals:         0       0       0       0       0
  3417 ;;Total ram usage:        0 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    1
  3420 ;; This function calls:
  3421 ;;		_DELAY_us
  3422 ;;		_GPIO_PinWrite
  3423 ;; This function is called by:
  3424 ;;		_LCD_CmdWrite
  3425 ;;		_lcd_Reset
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           
  3430                           ;psect for function _lcd_SendCmdSignals
  3431  0E6C                     _lcd_SendCmdSignals:	
  3432                           
  3433                           ;lcd.c: 976: GPIO_PinWrite(LCDConfig.RS,0);
  3434                           
  3435                           ;incstack = 0
  3436                           ; Regs used in _lcd_SendCmdSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3437  0E6C  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  3438  0E6D  1683               	bsf	3,5	;RP0=1, select bank1
  3439  0E6E  1303               	bcf	3,6	;RP1=0, select bank1
  3440  0E6F  0823               	movf	(_LCDConfig^(0+128)+3),w
  3441  0E70  120A  118A  23E3  120A  158A  	fcall	_GPIO_PinWrite
  3442                           
  3443                           ;lcd.c: 977: GPIO_PinWrite(LCDConfig.RW,0);
  3444  0E75  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  3445  0E76  1683               	bsf	3,5	;RP0=1, select bank1
  3446  0E77  1303               	bcf	3,6	;RP1=0, select bank1
  3447  0E78  0824               	movf	(_LCDConfig^(0+128)+4),w
  3448  0E79  120A  118A  23E3  120A  158A  	fcall	_GPIO_PinWrite
  3449                           
  3450                           ;lcd.c: 978: GPIO_PinWrite(LCDConfig.EN,1);
  3451  0E7E  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  3452  0E7F  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  3453  0E80  1683               	bsf	3,5	;RP0=1, select bank1
  3454  0E81  1303               	bcf	3,6	;RP1=0, select bank1
  3455  0E82  0825               	movf	(_LCDConfig^(0+128)+5),w
  3456  0E83  120A  118A  23E3  120A  158A  	fcall	_GPIO_PinWrite
  3457                           
  3458                           ;lcd.c: 979: DELAY_us(10);
  3459  0E88  300A               	movlw	10
  3460  0E89  00F0               	movwf	DELAY_us@us_count
  3461  0E8A  3000               	movlw	0
  3462  0E8B  00F1               	movwf	DELAY_us@us_count+1
  3463  0E8C  120A  158A  25DF  120A  158A  	fcall	_DELAY_us
  3464                           
  3465                           ;lcd.c: 980: GPIO_PinWrite(LCDConfig.EN,0);
  3466  0E91  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  3467  0E92  1683               	bsf	3,5	;RP0=1, select bank1
  3468  0E93  1303               	bcf	3,6	;RP1=0, select bank1
  3469  0E94  0825               	movf	(_LCDConfig^(0+128)+5),w
  3470  0E95  120A  118A  23E3   	fcall	_GPIO_PinWrite
  3471  0E98  0008               	return
  3472  0E99                     __end_of_lcd_SendCmdSignals:	
  3473                           
  3474                           	psect	text19
  3475  01AD                     __ptext19:	
  3476 ;; *************** function _lcd_BusyCheck *****************
  3477 ;; Defined at:
  3478 ;;		line 853 in file "../00-libfiles/lcd.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;		None
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;  busyflag        1    6[COMMON] unsigned char 
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  1    wreg      void 
  3485 ;; Registers used:
  3486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3492 ;;      Params:         0       0       0       0       0
  3493 ;;      Locals:         1       0       0       0       0
  3494 ;;      Temps:          1       0       0       0       0
  3495 ;;      Totals:         2       0       0       0       0
  3496 ;;Total ram usage:        2 bytes
  3497 ;; Hardware stack levels used:    1
  3498 ;; Hardware stack levels required when called:    2
  3499 ;; This function calls:
  3500 ;;		_DELAY_ms
  3501 ;;		_DELAY_us
  3502 ;;		_GPIO_PinDirection
  3503 ;;		_GPIO_PinRead
  3504 ;;		_GPIO_PinWrite
  3505 ;; This function is called by:
  3506 ;;		_LCD_CmdWrite
  3507 ;;		_lcd_DataWrite
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _lcd_BusyCheck
  3513  01AD                     _lcd_BusyCheck:	
  3514                           
  3515                           ;lcd.c: 855: uint8_t busyflag;
  3516                           ;lcd.c: 857: if(LCDConfig.RW != P_NC)
  3517                           
  3518                           ;incstack = 0
  3519                           ; Regs used in _lcd_BusyCheck: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3520  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  3521  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  3522  01AF  0A24               	incf	(_LCDConfig^(0+128)+4),w
  3523  01B0  1903               	btfsc	3,2
  3524  01B1  2A31               	goto	l1416
  3525                           
  3526                           ;lcd.c: 858: {
  3527                           ;lcd.c: 859: GPIO_PinDirection(LCDConfig.D7,0x01u);
  3528  01B2  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  3529  01B3  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  3530  01B4  082D               	movf	(_LCDConfig^(0+128)+13),w
  3531  01B5  120A  118A  230A  120A  118A  	fcall	_GPIO_PinDirection
  3532                           
  3533                           ;lcd.c: 860: GPIO_PinWrite(LCDConfig.RS,0);
  3534  01BA  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  3535  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  3536  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  3537  01BD  0823               	movf	(_LCDConfig^(0+128)+3),w
  3538  01BE  120A  118A  23E3  120A  118A  	fcall	_GPIO_PinWrite
  3539                           
  3540                           ;lcd.c: 861: GPIO_PinWrite(LCDConfig.RW,1);
  3541  01C3  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  3542  01C4  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  3543  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  3544  01C6  1303               	bcf	3,6	;RP1=0, select bank1
  3545  01C7  0824               	movf	(_LCDConfig^(0+128)+4),w
  3546  01C8  120A  118A  23E3  120A  118A  	fcall	_GPIO_PinWrite
  3547  01CD                     l179:	
  3548                           ;lcd.c: 862: do
  3549                           
  3550                           
  3551                           ;lcd.c: 863: {
  3552                           ;lcd.c: 865: GPIO_PinWrite(LCDConfig.EN,0);
  3553  01CD  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  3554  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  3555  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  3556  01D0  0825               	movf	(_LCDConfig^(0+128)+5),w
  3557  01D1  120A  118A  23E3  120A  118A  	fcall	_GPIO_PinWrite
  3558                           
  3559                           ;lcd.c: 866: DELAY_us(10);
  3560  01D6  300A               	movlw	10
  3561  01D7  00F0               	movwf	DELAY_us@us_count
  3562  01D8  3000               	movlw	0
  3563  01D9  00F1               	movwf	DELAY_us@us_count+1
  3564  01DA  120A  158A  25DF  120A  118A  	fcall	_DELAY_us
  3565                           
  3566                           ;lcd.c: 867: GPIO_PinWrite(LCDConfig.EN,1);
  3567  01DF  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  3568  01E0  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  3569  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  3570  01E2  1303               	bcf	3,6	;RP1=0, select bank1
  3571  01E3  0825               	movf	(_LCDConfig^(0+128)+5),w
  3572  01E4  120A  118A  23E3  120A  118A  	fcall	_GPIO_PinWrite
  3573                           
  3574                           ;lcd.c: 868: DELAY_us(10);
  3575  01E9  300A               	movlw	10
  3576  01EA  00F0               	movwf	DELAY_us@us_count
  3577  01EB  3000               	movlw	0
  3578  01EC  00F1               	movwf	DELAY_us@us_count+1
  3579  01ED  120A  158A  25DF  120A  118A  	fcall	_DELAY_us
  3580                           
  3581                           ;lcd.c: 869: busyflag = GPIO_PinRead(LCDConfig.D7);
  3582  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  3583  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  3584  01F4  082D               	movf	(_LCDConfig^(0+128)+13),w
  3585  01F5  120A  118A  2138  120A  118A  	fcall	_GPIO_PinRead
  3586  01FA  00F5               	movwf	??_lcd_BusyCheck
  3587  01FB  0875               	movf	??_lcd_BusyCheck,w
  3588  01FC  00F6               	movwf	lcd_BusyCheck@busyflag
  3589                           
  3590                           ;lcd.c: 872: if(LCDConfig.v_LcdMode_U8 == 4)
  3591  01FD  3004               	movlw	4
  3592  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  3593  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  3594  0200  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  3595  0201  1D03               	btfss	3,2
  3596  0202  2A26               	goto	l1412
  3597                           
  3598                           ;lcd.c: 873: {
  3599                           ;lcd.c: 875: GPIO_PinWrite(LCDConfig.EN,0);
  3600  0203  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  3601  0204  0825               	movf	(_LCDConfig^(0+128)+5),w
  3602  0205  120A  118A  23E3  120A  118A  	fcall	_GPIO_PinWrite
  3603                           
  3604                           ;lcd.c: 876: DELAY_us(10);
  3605  020A  300A               	movlw	10
  3606  020B  00F0               	movwf	DELAY_us@us_count
  3607  020C  3000               	movlw	0
  3608  020D  00F1               	movwf	DELAY_us@us_count+1
  3609  020E  120A  158A  25DF  120A  118A  	fcall	_DELAY_us
  3610                           
  3611                           ;lcd.c: 877: GPIO_PinWrite(LCDConfig.EN,1);
  3612  0213  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  3613  0214  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  3614  0215  1683               	bsf	3,5	;RP0=1, select bank1
  3615  0216  1303               	bcf	3,6	;RP1=0, select bank1
  3616  0217  0825               	movf	(_LCDConfig^(0+128)+5),w
  3617  0218  120A  118A  23E3  120A  118A  	fcall	_GPIO_PinWrite
  3618                           
  3619                           ;lcd.c: 878: DELAY_us(10);
  3620  021D  300A               	movlw	10
  3621  021E  00F0               	movwf	DELAY_us@us_count
  3622  021F  3000               	movlw	0
  3623  0220  00F1               	movwf	DELAY_us@us_count+1
  3624  0221  120A  158A  25DF  120A  118A  	fcall	_DELAY_us
  3625  0226                     l1412:	
  3626                           
  3627                           ;lcd.c: 879: }
  3628                           ;lcd.c: 880: }while(busyflag!=0);
  3629  0226  0876               	movf	lcd_BusyCheck@busyflag,w
  3630  0227  1D03               	btfss	3,2
  3631  0228  29CD               	goto	l179
  3632                           
  3633                           ;lcd.c: 882: GPIO_PinDirection(LCDConfig.D7,0x00u);
  3634  0229  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  3635  022A  1683               	bsf	3,5	;RP0=1, select bank1
  3636  022B  1303               	bcf	3,6	;RP1=0, select bank1
  3637  022C  082D               	movf	(_LCDConfig^(0+128)+13),w
  3638  022D  120A  118A  230A   	fcall	_GPIO_PinDirection
  3639                           
  3640                           ;lcd.c: 883: }
  3641  0230  0008               	return
  3642  0231                     l1416:	
  3643                           
  3644                           ;lcd.c: 884: else
  3645                           ;lcd.c: 885: {
  3646                           ;lcd.c: 888: DELAY_ms(1);
  3647  0231  3001               	movlw	1
  3648  0232  00F2               	movwf	DELAY_ms@ms_count
  3649  0233  3000               	movlw	0
  3650  0234  00F3               	movwf	DELAY_ms@ms_count+1
  3651  0235  120A  158A  2608   	fcall	_DELAY_ms
  3652  0238  0008               	return
  3653  0239                     __end_of_lcd_BusyCheck:	
  3654                           
  3655                           	psect	text20
  3656  03E3                     __ptext20:	
  3657 ;; *************** function _GPIO_PinWrite *****************
  3658 ;; Defined at:
  3659 ;;		line 127 in file "../00-libfiles/gpio.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  enm_pinNumbe    1    wreg     enum E1088
  3662 ;;  var_pinValue    1    0[COMMON] unsigned char 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  3665 ;;  var_portNumb    1    3[COMMON] unsigned char 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3675 ;;      Params:         1       0       0       0       0
  3676 ;;      Locals:         2       0       0       0       0
  3677 ;;      Temps:          2       0       0       0       0
  3678 ;;      Totals:         5       0       0       0       0
  3679 ;;Total ram usage:        5 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; This function calls:
  3682 ;;		Nothing
  3683 ;; This function is called by:
  3684 ;;		_lcd_BusyCheck
  3685 ;;		_lcd_SendHigherNibble
  3686 ;;		_lcd_SendLowerNibble
  3687 ;;		_lcd_SendCmdSignals
  3688 ;;		_lcd_SendDataSignals
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           
  3693                           ;psect for function _GPIO_PinWrite
  3694  03E3                     _GPIO_PinWrite:	
  3695                           
  3696                           ;incstack = 0
  3697                           ; Regs used in _GPIO_PinWrite: [wreg-fsr0h+status,2+status,0]
  3698                           ;GPIO_PinWrite@enm_pinNumber stored from wreg
  3699  03E3  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  3700                           
  3701                           ;gpio.c: 130: uint8_t var_portNumber_u8;
  3702                           ;gpio.c: 133: var_portNumber_u8 = (enm_pinNumber>>3);
  3703  03E4  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  3704  03E5  00F1               	movwf	??_GPIO_PinWrite
  3705  03E6  3003               	movlw	3
  3706  03E7                     u1385:	
  3707  03E7  1003               	clrc
  3708  03E8  0CF1               	rrf	??_GPIO_PinWrite,f
  3709  03E9  3EFF               	addlw	-1
  3710  03EA  1D03               	skipz
  3711  03EB  2BE7               	goto	u1385
  3712  03EC  0871               	movf	??_GPIO_PinWrite,w
  3713  03ED  00F2               	movwf	??_GPIO_PinWrite+1
  3714  03EE  0872               	movf	??_GPIO_PinWrite+1,w
  3715  03EF  00F3               	movwf	GPIO_PinWrite@var_portNumber_u8
  3716                           
  3717                           ;gpio.c: 134: enm_pinNumber = enm_pinNumber & 0x07;
  3718  03F0  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  3719  03F1  3907               	andlw	7
  3720  03F2  00F1               	movwf	??_GPIO_PinWrite
  3721  03F3  0871               	movf	??_GPIO_PinWrite,w
  3722  03F4  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  3723                           
  3724                           ;gpio.c: 138: switch(var_portNumber_u8)
  3725  03F5  2CAA               	goto	l1368
  3726  03F6                     l1336:	
  3727                           ;gpio.c: 139: {
  3728                           ;gpio.c: 141: case 0:
  3729                           
  3730                           
  3731                           ;gpio.c: 142: ((var_pinValue_u8)? ((PORTA) |= (1<<(enm_pinNumber))): ((PORTA) &= ~(1<<(e
      +                          nm_pinNumber))));
  3732  03F6  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3733  03F7  1903               	btfsc	3,2
  3734  03F8  2C09               	goto	l1340
  3735  03F9  3001               	movlw	1
  3736  03FA  00F1               	movwf	??_GPIO_PinWrite
  3737  03FB  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  3738  03FC  2BFF               	goto	u1404
  3739  03FD                     u1405:	
  3740  03FD  1003               	clrc
  3741  03FE  0DF1               	rlf	??_GPIO_PinWrite,f
  3742  03FF                     u1404:	
  3743  03FF  3EFF               	addlw	-1
  3744  0400  1D03               	skipz
  3745  0401  2BFD               	goto	u1405
  3746  0402  0871               	movf	??_GPIO_PinWrite,w
  3747  0403  00F2               	movwf	??_GPIO_PinWrite+1
  3748  0404  0872               	movf	??_GPIO_PinWrite+1,w
  3749  0405  1283               	bcf	3,5	;RP0=0, select bank0
  3750  0406  1303               	bcf	3,6	;RP1=0, select bank0
  3751  0407  0485               	iorwf	5,f	;volatile
  3752  0408  0008               	return
  3753  0409                     l1340:	
  3754  0409  3001               	movlw	1
  3755  040A  00F1               	movwf	??_GPIO_PinWrite
  3756  040B  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  3757  040C  2C0F               	goto	u1414
  3758  040D                     u1415:	
  3759  040D  1003               	clrc
  3760  040E  0DF1               	rlf	??_GPIO_PinWrite,f
  3761  040F                     u1414:	
  3762  040F  3EFF               	addlw	-1
  3763  0410  1D03               	skipz
  3764  0411  2C0D               	goto	u1415
  3765  0412  0871               	movf	??_GPIO_PinWrite,w
  3766  0413  3AFF               	xorlw	255
  3767  0414  00F2               	movwf	??_GPIO_PinWrite+1
  3768  0415  0872               	movf	??_GPIO_PinWrite+1,w
  3769  0416  1283               	bcf	3,5	;RP0=0, select bank0
  3770  0417  1303               	bcf	3,6	;RP1=0, select bank0
  3771  0418  0585               	andwf	5,f	;volatile
  3772                           
  3773                           ;gpio.c: 143: break;
  3774  0419  0008               	return
  3775  041A                     l1342:	
  3776                           ;gpio.c: 147: case 1:
  3777                           
  3778                           
  3779                           ;gpio.c: 148: ((var_pinValue_u8)? ((PORTB) |= (1<<(enm_pinNumber))): ((PORTB) &= ~(1<<(e
      +                          nm_pinNumber))));
  3780  041A  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3781  041B  1903               	btfsc	3,2
  3782  041C  2C2D               	goto	l1346
  3783  041D  3001               	movlw	1
  3784  041E  00F1               	movwf	??_GPIO_PinWrite
  3785  041F  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  3786  0420  2C23               	goto	u1434
  3787  0421                     u1435:	
  3788  0421  1003               	clrc
  3789  0422  0DF1               	rlf	??_GPIO_PinWrite,f
  3790  0423                     u1434:	
  3791  0423  3EFF               	addlw	-1
  3792  0424  1D03               	skipz
  3793  0425  2C21               	goto	u1435
  3794  0426  0871               	movf	??_GPIO_PinWrite,w
  3795  0427  00F2               	movwf	??_GPIO_PinWrite+1
  3796  0428  0872               	movf	??_GPIO_PinWrite+1,w
  3797  0429  1283               	bcf	3,5	;RP0=0, select bank0
  3798  042A  1303               	bcf	3,6	;RP1=0, select bank0
  3799  042B  0486               	iorwf	6,f	;volatile
  3800  042C  0008               	return
  3801  042D                     l1346:	
  3802  042D  3001               	movlw	1
  3803  042E  00F1               	movwf	??_GPIO_PinWrite
  3804  042F  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  3805  0430  2C33               	goto	u1444
  3806  0431                     u1445:	
  3807  0431  1003               	clrc
  3808  0432  0DF1               	rlf	??_GPIO_PinWrite,f
  3809  0433                     u1444:	
  3810  0433  3EFF               	addlw	-1
  3811  0434  1D03               	skipz
  3812  0435  2C31               	goto	u1445
  3813  0436  0871               	movf	??_GPIO_PinWrite,w
  3814  0437  3AFF               	xorlw	255
  3815  0438  00F2               	movwf	??_GPIO_PinWrite+1
  3816  0439  0872               	movf	??_GPIO_PinWrite+1,w
  3817  043A  1283               	bcf	3,5	;RP0=0, select bank0
  3818  043B  1303               	bcf	3,6	;RP1=0, select bank0
  3819  043C  0586               	andwf	6,f	;volatile
  3820                           
  3821                           ;gpio.c: 149: break;
  3822  043D  0008               	return
  3823  043E                     l1348:	
  3824                           ;gpio.c: 153: case 2:
  3825                           
  3826                           
  3827                           ;gpio.c: 154: ((var_pinValue_u8)? ((PORTC) |= (1<<(enm_pinNumber))): ((PORTC) &= ~(1<<(e
      +                          nm_pinNumber))));
  3828  043E  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3829  043F  1903               	btfsc	3,2
  3830  0440  2C51               	goto	l1352
  3831  0441  3001               	movlw	1
  3832  0442  00F1               	movwf	??_GPIO_PinWrite
  3833  0443  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  3834  0444  2C47               	goto	u1464
  3835  0445                     u1465:	
  3836  0445  1003               	clrc
  3837  0446  0DF1               	rlf	??_GPIO_PinWrite,f
  3838  0447                     u1464:	
  3839  0447  3EFF               	addlw	-1
  3840  0448  1D03               	skipz
  3841  0449  2C45               	goto	u1465
  3842  044A  0871               	movf	??_GPIO_PinWrite,w
  3843  044B  00F2               	movwf	??_GPIO_PinWrite+1
  3844  044C  0872               	movf	??_GPIO_PinWrite+1,w
  3845  044D  1283               	bcf	3,5	;RP0=0, select bank0
  3846  044E  1303               	bcf	3,6	;RP1=0, select bank0
  3847  044F  0487               	iorwf	7,f	;volatile
  3848  0450  0008               	return
  3849  0451                     l1352:	
  3850  0451  3001               	movlw	1
  3851  0452  00F1               	movwf	??_GPIO_PinWrite
  3852  0453  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  3853  0454  2C57               	goto	u1474
  3854  0455                     u1475:	
  3855  0455  1003               	clrc
  3856  0456  0DF1               	rlf	??_GPIO_PinWrite,f
  3857  0457                     u1474:	
  3858  0457  3EFF               	addlw	-1
  3859  0458  1D03               	skipz
  3860  0459  2C55               	goto	u1475
  3861  045A  0871               	movf	??_GPIO_PinWrite,w
  3862  045B  3AFF               	xorlw	255
  3863  045C  00F2               	movwf	??_GPIO_PinWrite+1
  3864  045D  0872               	movf	??_GPIO_PinWrite+1,w
  3865  045E  1283               	bcf	3,5	;RP0=0, select bank0
  3866  045F  1303               	bcf	3,6	;RP1=0, select bank0
  3867  0460  0587               	andwf	7,f	;volatile
  3868                           
  3869                           ;gpio.c: 155: break;
  3870  0461  0008               	return
  3871  0462                     l1354:	
  3872                           ;gpio.c: 159: case 3:
  3873                           
  3874                           
  3875                           ;gpio.c: 160: ((var_pinValue_u8)? ((PORTD) |= (1<<(enm_pinNumber))): ((PORTD) &= ~(1<<(e
      +                          nm_pinNumber))));
  3876  0462  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3877  0463  1903               	btfsc	3,2
  3878  0464  2C75               	goto	l1358
  3879  0465  3001               	movlw	1
  3880  0466  00F1               	movwf	??_GPIO_PinWrite
  3881  0467  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  3882  0468  2C6B               	goto	u1494
  3883  0469                     u1495:	
  3884  0469  1003               	clrc
  3885  046A  0DF1               	rlf	??_GPIO_PinWrite,f
  3886  046B                     u1494:	
  3887  046B  3EFF               	addlw	-1
  3888  046C  1D03               	skipz
  3889  046D  2C69               	goto	u1495
  3890  046E  0871               	movf	??_GPIO_PinWrite,w
  3891  046F  00F2               	movwf	??_GPIO_PinWrite+1
  3892  0470  0872               	movf	??_GPIO_PinWrite+1,w
  3893  0471  1283               	bcf	3,5	;RP0=0, select bank0
  3894  0472  1303               	bcf	3,6	;RP1=0, select bank0
  3895  0473  0488               	iorwf	8,f	;volatile
  3896  0474  0008               	return
  3897  0475                     l1358:	
  3898  0475  3001               	movlw	1
  3899  0476  00F1               	movwf	??_GPIO_PinWrite
  3900  0477  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  3901  0478  2C7B               	goto	u1504
  3902  0479                     u1505:	
  3903  0479  1003               	clrc
  3904  047A  0DF1               	rlf	??_GPIO_PinWrite,f
  3905  047B                     u1504:	
  3906  047B  3EFF               	addlw	-1
  3907  047C  1D03               	skipz
  3908  047D  2C79               	goto	u1505
  3909  047E  0871               	movf	??_GPIO_PinWrite,w
  3910  047F  3AFF               	xorlw	255
  3911  0480  00F2               	movwf	??_GPIO_PinWrite+1
  3912  0481  0872               	movf	??_GPIO_PinWrite+1,w
  3913  0482  1283               	bcf	3,5	;RP0=0, select bank0
  3914  0483  1303               	bcf	3,6	;RP1=0, select bank0
  3915  0484  0588               	andwf	8,f	;volatile
  3916                           
  3917                           ;gpio.c: 161: break;
  3918  0485  0008               	return
  3919  0486                     l1360:	
  3920                           ;gpio.c: 165: case 4:
  3921                           
  3922                           
  3923                           ;gpio.c: 166: ((var_pinValue_u8)? ((PORTE) |= (1<<(enm_pinNumber))): ((PORTE) &= ~(1<<(e
      +                          nm_pinNumber))));
  3924  0486  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  3925  0487  1903               	btfsc	3,2
  3926  0488  2C99               	goto	l1364
  3927  0489  3001               	movlw	1
  3928  048A  00F1               	movwf	??_GPIO_PinWrite
  3929  048B  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  3930  048C  2C8F               	goto	u1524
  3931  048D                     u1525:	
  3932  048D  1003               	clrc
  3933  048E  0DF1               	rlf	??_GPIO_PinWrite,f
  3934  048F                     u1524:	
  3935  048F  3EFF               	addlw	-1
  3936  0490  1D03               	skipz
  3937  0491  2C8D               	goto	u1525
  3938  0492  0871               	movf	??_GPIO_PinWrite,w
  3939  0493  00F2               	movwf	??_GPIO_PinWrite+1
  3940  0494  0872               	movf	??_GPIO_PinWrite+1,w
  3941  0495  1283               	bcf	3,5	;RP0=0, select bank0
  3942  0496  1303               	bcf	3,6	;RP1=0, select bank0
  3943  0497  0489               	iorwf	9,f	;volatile
  3944  0498  0008               	return
  3945  0499                     l1364:	
  3946  0499  3001               	movlw	1
  3947  049A  00F1               	movwf	??_GPIO_PinWrite
  3948  049B  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  3949  049C  2C9F               	goto	u1534
  3950  049D                     u1535:	
  3951  049D  1003               	clrc
  3952  049E  0DF1               	rlf	??_GPIO_PinWrite,f
  3953  049F                     u1534:	
  3954  049F  3EFF               	addlw	-1
  3955  04A0  1D03               	skipz
  3956  04A1  2C9D               	goto	u1535
  3957  04A2  0871               	movf	??_GPIO_PinWrite,w
  3958  04A3  3AFF               	xorlw	255
  3959  04A4  00F2               	movwf	??_GPIO_PinWrite+1
  3960  04A5  0872               	movf	??_GPIO_PinWrite+1,w
  3961  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  3962  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  3963  04A8  0589               	andwf	9,f	;volatile
  3964                           
  3965                           ;gpio.c: 169: }
  3966                           
  3967                           ;gpio.c: 167: break;
  3968  04A9  0008               	return
  3969  04AA                     l1368:	
  3970  04AA  0873               	movf	GPIO_PinWrite@var_portNumber_u8,w
  3971                           
  3972                           ; Switch size 1, requested type "space"
  3973                           ; Number of cases is 5, Range of values is 0 to 4
  3974                           ; switch strategies available:
  3975                           ; Name         Instructions Cycles
  3976                           ; simple_byte           16     9 (average)
  3977                           ; direct_byte           23     8 (fixed)
  3978                           ; jumptable            260     6 (fixed)
  3979                           ;	Chosen strategy is simple_byte
  3980  04AB  3A00               	xorlw	0	; case 0
  3981  04AC  1903               	skipnz
  3982  04AD  2BF6               	goto	l1336
  3983  04AE  3A01               	xorlw	1	; case 1
  3984  04AF  1903               	skipnz
  3985  04B0  2C1A               	goto	l1342
  3986  04B1  3A03               	xorlw	3	; case 2
  3987  04B2  1903               	skipnz
  3988  04B3  2C3E               	goto	l1348
  3989  04B4  3A01               	xorlw	1	; case 3
  3990  04B5  1903               	skipnz
  3991  04B6  2C62               	goto	l1354
  3992  04B7  3A07               	xorlw	7	; case 4
  3993  04B8  1903               	skipnz
  3994  04B9  2C86               	goto	l1360
  3995  04BA  2CBB               	goto	l278
  3996  04BB                     l278:	
  3997  04BB  0008               	return
  3998  04BC                     __end_of_GPIO_PinWrite:	
  3999                           
  4000                           	psect	text21
  4001  0138                     __ptext21:	
  4002 ;; *************** function _GPIO_PinRead *****************
  4003 ;; Defined at:
  4004 ;;		line 192 in file "../00-libfiles/gpio.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  enm_pinNumbe    1    wreg     enum E1088
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  4009 ;;  returnStatus    1    3[COMMON] unsigned char 
  4010 ;;  var_portNumb    1    2[COMMON] unsigned char 
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      unsigned char 
  4013 ;; Registers used:
  4014 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4020 ;;      Params:         0       0       0       0       0
  4021 ;;      Locals:         3       0       0       0       0
  4022 ;;      Temps:          2       0       0       0       0
  4023 ;;      Totals:         5       0       0       0       0
  4024 ;;Total ram usage:        5 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; This function calls:
  4027 ;;		Nothing
  4028 ;; This function is called by:
  4029 ;;		_lcd_BusyCheck
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           
  4034                           ;psect for function _GPIO_PinRead
  4035  0138                     _GPIO_PinRead:	
  4036                           
  4037                           ;incstack = 0
  4038                           ; Regs used in _GPIO_PinRead: [wreg-fsr0h+status,2+status,0]
  4039                           ;GPIO_PinRead@enm_pinNumber stored from wreg
  4040  0138  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  4041                           
  4042                           ;gpio.c: 194: uint8_t var_portNumber_u8;
  4043                           ;gpio.c: 195: uint8_t returnStatus = 0;
  4044  0139  01F3               	clrf	GPIO_PinRead@returnStatus
  4045                           
  4046                           ;gpio.c: 197: var_portNumber_u8 = (enm_pinNumber>>3);
  4047  013A  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  4048  013B  00F0               	movwf	??_GPIO_PinRead
  4049  013C  3003               	movlw	3
  4050  013D                     u1545:	
  4051  013D  1003               	clrc
  4052  013E  0CF0               	rrf	??_GPIO_PinRead,f
  4053  013F  3EFF               	addlw	-1
  4054  0140  1D03               	skipz
  4055  0141  293D               	goto	u1545
  4056  0142  0870               	movf	??_GPIO_PinRead,w
  4057  0143  00F1               	movwf	??_GPIO_PinRead+1
  4058  0144  0871               	movf	??_GPIO_PinRead+1,w
  4059  0145  00F2               	movwf	GPIO_PinRead@var_portNumber_u8
  4060                           
  4061                           ;gpio.c: 198: enm_pinNumber = enm_pinNumber & 0x07;
  4062  0146  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  4063  0147  3907               	andlw	7
  4064  0148  00F0               	movwf	??_GPIO_PinRead
  4065  0149  0870               	movf	??_GPIO_PinRead,w
  4066  014A  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  4067                           
  4068                           ;gpio.c: 201: switch(var_portNumber_u8)
  4069  014B  299A               	goto	l1388
  4070  014C                     l1376:	
  4071                           ;gpio.c: 202: {
  4072                           ;gpio.c: 204: case 0:
  4073                           
  4074                           
  4075                           ;gpio.c: 205: returnStatus = (((PORTA)&((1<<(enm_pinNumber))))!=0u);
  4076  014C  3001               	movlw	1
  4077  014D  00F0               	movwf	??_GPIO_PinRead
  4078  014E  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  4079  014F  2952               	goto	u1554
  4080  0150                     u1555:	
  4081  0150  1003               	clrc
  4082  0151  0DF0               	rlf	??_GPIO_PinRead,f
  4083  0152                     u1554:	
  4084  0152  3EFF               	addlw	-1
  4085  0153  1D03               	skipz
  4086  0154  2950               	goto	u1555
  4087  0155  0870               	movf	??_GPIO_PinRead,w
  4088  0156  1283               	bcf	3,5	;RP0=0, select bank0
  4089  0157  1303               	bcf	3,6	;RP1=0, select bank0
  4090  0158  0505               	andwf	5,w	;volatile
  4091  0159  2991               	goto	L7
  4092  015A                     l1378:	
  4093                           ;gpio.c: 209: case 1:
  4094                           
  4095                           ;gpio.c: 206: break;
  4096                           
  4097                           
  4098                           ;gpio.c: 210: returnStatus = (((PORTB)&((1<<(enm_pinNumber))))!=0u);
  4099  015A  3001               	movlw	1
  4100  015B  00F0               	movwf	??_GPIO_PinRead
  4101  015C  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  4102  015D  2960               	goto	u1584
  4103  015E                     u1585:	
  4104  015E  1003               	clrc
  4105  015F  0DF0               	rlf	??_GPIO_PinRead,f
  4106  0160                     u1584:	
  4107  0160  3EFF               	addlw	-1
  4108  0161  1D03               	skipz
  4109  0162  295E               	goto	u1585
  4110  0163  0870               	movf	??_GPIO_PinRead,w
  4111  0164  1283               	bcf	3,5	;RP0=0, select bank0
  4112  0165  1303               	bcf	3,6	;RP1=0, select bank0
  4113  0166  0506               	andwf	6,w	;volatile
  4114  0167  2991               	goto	L7
  4115  0168                     l1380:	
  4116                           ;gpio.c: 214: case 2:
  4117                           
  4118                           ;gpio.c: 211: break;
  4119                           
  4120                           
  4121                           ;gpio.c: 215: returnStatus = (((PORTC)&((1<<(enm_pinNumber))))!=0u);
  4122  0168  3001               	movlw	1
  4123  0169  00F0               	movwf	??_GPIO_PinRead
  4124  016A  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  4125  016B  296E               	goto	u1614
  4126  016C                     u1615:	
  4127  016C  1003               	clrc
  4128  016D  0DF0               	rlf	??_GPIO_PinRead,f
  4129  016E                     u1614:	
  4130  016E  3EFF               	addlw	-1
  4131  016F  1D03               	skipz
  4132  0170  296C               	goto	u1615
  4133  0171  0870               	movf	??_GPIO_PinRead,w
  4134  0172  1283               	bcf	3,5	;RP0=0, select bank0
  4135  0173  1303               	bcf	3,6	;RP1=0, select bank0
  4136  0174  0507               	andwf	7,w	;volatile
  4137  0175  2991               	goto	L7
  4138  0176                     l1382:	
  4139                           ;gpio.c: 220: case 3:
  4140                           
  4141                           ;gpio.c: 216: break;
  4142                           
  4143                           
  4144                           ;gpio.c: 221: returnStatus = (((PORTD)&((1<<(enm_pinNumber))))!=0u);
  4145  0176  3001               	movlw	1
  4146  0177  00F0               	movwf	??_GPIO_PinRead
  4147  0178  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  4148  0179  297C               	goto	u1644
  4149  017A                     u1645:	
  4150  017A  1003               	clrc
  4151  017B  0DF0               	rlf	??_GPIO_PinRead,f
  4152  017C                     u1644:	
  4153  017C  3EFF               	addlw	-1
  4154  017D  1D03               	skipz
  4155  017E  297A               	goto	u1645
  4156  017F  0870               	movf	??_GPIO_PinRead,w
  4157  0180  1283               	bcf	3,5	;RP0=0, select bank0
  4158  0181  1303               	bcf	3,6	;RP1=0, select bank0
  4159  0182  0508               	andwf	8,w	;volatile
  4160  0183  2991               	goto	L7
  4161  0184                     l1384:	
  4162                           ;gpio.c: 226: case 4:
  4163                           
  4164                           ;gpio.c: 222: break;
  4165                           
  4166                           
  4167                           ;gpio.c: 227: returnStatus = (((PORTE)&((1<<(enm_pinNumber))))!=0u);
  4168  0184  3001               	movlw	1
  4169  0185  00F0               	movwf	??_GPIO_PinRead
  4170  0186  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  4171  0187  298A               	goto	u1674
  4172  0188                     u1675:	
  4173  0188  1003               	clrc
  4174  0189  0DF0               	rlf	??_GPIO_PinRead,f
  4175  018A                     u1674:	
  4176  018A  3EFF               	addlw	-1
  4177  018B  1D03               	skipz
  4178  018C  2988               	goto	u1675
  4179  018D  0870               	movf	??_GPIO_PinRead,w
  4180  018E  1283               	bcf	3,5	;RP0=0, select bank0
  4181  018F  1303               	bcf	3,6	;RP1=0, select bank0
  4182  0190  0509               	andwf	9,w	;volatile
  4183  0191                     L7:	
  4184  0191  1903               	btfsc	3,2
  4185  0192  2995               	goto	u1680
  4186  0193  3001               	movlw	1
  4187  0194  2996               	goto	u1690
  4188  0195                     u1680:	
  4189  0195  3000               	movlw	0
  4190  0196                     u1690:	
  4191  0196  00F1               	movwf	??_GPIO_PinRead+1
  4192  0197  0871               	movf	??_GPIO_PinRead+1,w
  4193  0198  00F3               	movwf	GPIO_PinRead@returnStatus
  4194                           
  4195                           ;gpio.c: 229: }
  4196                           
  4197                           ;gpio.c: 228: break;
  4198  0199  29AB               	goto	l1390
  4199  019A                     l1388:	
  4200  019A  0872               	movf	GPIO_PinRead@var_portNumber_u8,w
  4201                           
  4202                           ; Switch size 1, requested type "space"
  4203                           ; Number of cases is 5, Range of values is 0 to 4
  4204                           ; switch strategies available:
  4205                           ; Name         Instructions Cycles
  4206                           ; simple_byte           16     9 (average)
  4207                           ; direct_byte           23     8 (fixed)
  4208                           ; jumptable            260     6 (fixed)
  4209                           ;	Chosen strategy is simple_byte
  4210  019B  3A00               	xorlw	0	; case 0
  4211  019C  1903               	skipnz
  4212  019D  294C               	goto	l1376
  4213  019E  3A01               	xorlw	1	; case 1
  4214  019F  1903               	skipnz
  4215  01A0  295A               	goto	l1378
  4216  01A1  3A03               	xorlw	3	; case 2
  4217  01A2  1903               	skipnz
  4218  01A3  2968               	goto	l1380
  4219  01A4  3A01               	xorlw	1	; case 3
  4220  01A5  1903               	skipnz
  4221  01A6  2976               	goto	l1382
  4222  01A7  3A07               	xorlw	7	; case 4
  4223  01A8  1903               	skipnz
  4224  01A9  2984               	goto	l1384
  4225  01AA  29AB               	goto	l1390
  4226  01AB                     l1390:	
  4227                           
  4228                           ;gpio.c: 230: return returnStatus;
  4229  01AB  0873               	movf	GPIO_PinRead@returnStatus,w
  4230  01AC  0008               	return
  4231  01AD                     __end_of_GPIO_PinRead:	
  4232                           
  4233                           	psect	text22
  4234  030A                     __ptext22:	
  4235 ;; *************** function _GPIO_PinDirection *****************
  4236 ;; Defined at:
  4237 ;;		line 60 in file "../00-libfiles/gpio.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  enm_pinNumbe    1    wreg     enum E1088
  4240 ;;  var_pinDirn_    1    0[COMMON] unsigned char 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  4243 ;;  var_portNumb    1    3[COMMON] unsigned char 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  1    wreg      void 
  4246 ;; Registers used:
  4247 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4253 ;;      Params:         1       0       0       0       0
  4254 ;;      Locals:         2       0       0       0       0
  4255 ;;      Temps:          2       0       0       0       0
  4256 ;;      Totals:         5       0       0       0       0
  4257 ;;Total ram usage:        5 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_LCD_SetUp
  4263 ;;		_lcd_BusyCheck
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           
  4268                           ;psect for function _GPIO_PinDirection
  4269  030A                     _GPIO_PinDirection:	
  4270                           
  4271                           ;incstack = 0
  4272                           ; Regs used in _GPIO_PinDirection: [wreg-fsr0h+status,2+status,0]
  4273                           ;GPIO_PinDirection@enm_pinNumber stored from wreg
  4274  030A  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  4275                           
  4276                           ;gpio.c: 63: uint8_t var_portNumber_u8;
  4277                           ;gpio.c: 66: var_portNumber_u8 = (enm_pinNumber>>3);
  4278  030B  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  4279  030C  00F1               	movwf	??_GPIO_PinDirection
  4280  030D  3003               	movlw	3
  4281  030E                     u1225:	
  4282  030E  1003               	clrc
  4283  030F  0CF1               	rrf	??_GPIO_PinDirection,f
  4284  0310  3EFF               	addlw	-1
  4285  0311  1D03               	skipz
  4286  0312  2B0E               	goto	u1225
  4287  0313  0871               	movf	??_GPIO_PinDirection,w
  4288  0314  00F2               	movwf	??_GPIO_PinDirection+1
  4289  0315  0872               	movf	??_GPIO_PinDirection+1,w
  4290  0316  00F3               	movwf	GPIO_PinDirection@var_portNumber_u8
  4291                           
  4292                           ;gpio.c: 67: enm_pinNumber = enm_pinNumber & 0x07;
  4293  0317  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  4294  0318  3907               	andlw	7
  4295  0319  00F1               	movwf	??_GPIO_PinDirection
  4296  031A  0871               	movf	??_GPIO_PinDirection,w
  4297  031B  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  4298                           
  4299                           ;gpio.c: 71: switch(var_portNumber_u8)
  4300  031C  2BD1               	goto	l1330
  4301  031D                     l1298:	
  4302                           ;gpio.c: 72: {
  4303                           ;gpio.c: 74: case 0:
  4304                           
  4305                           
  4306                           ;gpio.c: 75: ((var_pinDirn_u8)? ((TRISA) |= (1<<(enm_pinNumber))): ((TRISA) &= ~(1<<(enm
      +                          _pinNumber))));
  4307  031D  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4308  031E  1903               	btfsc	3,2
  4309  031F  2B30               	goto	l1302
  4310  0320  3001               	movlw	1
  4311  0321  00F1               	movwf	??_GPIO_PinDirection
  4312  0322  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4313  0323  2B26               	goto	u1244
  4314  0324                     u1245:	
  4315  0324  1003               	clrc
  4316  0325  0DF1               	rlf	??_GPIO_PinDirection,f
  4317  0326                     u1244:	
  4318  0326  3EFF               	addlw	-1
  4319  0327  1D03               	skipz
  4320  0328  2B24               	goto	u1245
  4321  0329  0871               	movf	??_GPIO_PinDirection,w
  4322  032A  00F2               	movwf	??_GPIO_PinDirection+1
  4323  032B  0872               	movf	??_GPIO_PinDirection+1,w
  4324  032C  1683               	bsf	3,5	;RP0=1, select bank1
  4325  032D  1303               	bcf	3,6	;RP1=0, select bank1
  4326  032E  0485               	iorwf	5,f	;volatile
  4327  032F  0008               	return
  4328  0330                     l1302:	
  4329  0330  3001               	movlw	1
  4330  0331  00F1               	movwf	??_GPIO_PinDirection
  4331  0332  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4332  0333  2B36               	goto	u1254
  4333  0334                     u1255:	
  4334  0334  1003               	clrc
  4335  0335  0DF1               	rlf	??_GPIO_PinDirection,f
  4336  0336                     u1254:	
  4337  0336  3EFF               	addlw	-1
  4338  0337  1D03               	skipz
  4339  0338  2B34               	goto	u1255
  4340  0339  0871               	movf	??_GPIO_PinDirection,w
  4341  033A  3AFF               	xorlw	255
  4342  033B  00F2               	movwf	??_GPIO_PinDirection+1
  4343  033C  0872               	movf	??_GPIO_PinDirection+1,w
  4344  033D  1683               	bsf	3,5	;RP0=1, select bank1
  4345  033E  1303               	bcf	3,6	;RP1=0, select bank1
  4346  033F  0585               	andwf	5,f	;volatile
  4347                           
  4348                           ;gpio.c: 76: break;
  4349  0340  0008               	return
  4350  0341                     l1304:	
  4351                           ;gpio.c: 80: case 1:
  4352                           
  4353                           
  4354                           ;gpio.c: 81: ((var_pinDirn_u8)? ((TRISB) |= (1<<(enm_pinNumber))): ((TRISB) &= ~(1<<(enm
      +                          _pinNumber))));
  4355  0341  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4356  0342  1903               	btfsc	3,2
  4357  0343  2B54               	goto	l1308
  4358  0344  3001               	movlw	1
  4359  0345  00F1               	movwf	??_GPIO_PinDirection
  4360  0346  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4361  0347  2B4A               	goto	u1274
  4362  0348                     u1275:	
  4363  0348  1003               	clrc
  4364  0349  0DF1               	rlf	??_GPIO_PinDirection,f
  4365  034A                     u1274:	
  4366  034A  3EFF               	addlw	-1
  4367  034B  1D03               	skipz
  4368  034C  2B48               	goto	u1275
  4369  034D  0871               	movf	??_GPIO_PinDirection,w
  4370  034E  00F2               	movwf	??_GPIO_PinDirection+1
  4371  034F  0872               	movf	??_GPIO_PinDirection+1,w
  4372  0350  1683               	bsf	3,5	;RP0=1, select bank1
  4373  0351  1303               	bcf	3,6	;RP1=0, select bank1
  4374  0352  0486               	iorwf	6,f	;volatile
  4375  0353  0008               	return
  4376  0354                     l1308:	
  4377  0354  3001               	movlw	1
  4378  0355  00F1               	movwf	??_GPIO_PinDirection
  4379  0356  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4380  0357  2B5A               	goto	u1284
  4381  0358                     u1285:	
  4382  0358  1003               	clrc
  4383  0359  0DF1               	rlf	??_GPIO_PinDirection,f
  4384  035A                     u1284:	
  4385  035A  3EFF               	addlw	-1
  4386  035B  1D03               	skipz
  4387  035C  2B58               	goto	u1285
  4388  035D  0871               	movf	??_GPIO_PinDirection,w
  4389  035E  3AFF               	xorlw	255
  4390  035F  00F2               	movwf	??_GPIO_PinDirection+1
  4391  0360  0872               	movf	??_GPIO_PinDirection+1,w
  4392  0361  1683               	bsf	3,5	;RP0=1, select bank1
  4393  0362  1303               	bcf	3,6	;RP1=0, select bank1
  4394  0363  0586               	andwf	6,f	;volatile
  4395                           
  4396                           ;gpio.c: 82: break;
  4397  0364  0008               	return
  4398  0365                     l1310:	
  4399                           ;gpio.c: 86: case 2:
  4400                           
  4401                           
  4402                           ;gpio.c: 87: ((var_pinDirn_u8)? ((TRISC) |= (1<<(enm_pinNumber))): ((TRISC) &= ~(1<<(enm
      +                          _pinNumber))));
  4403  0365  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4404  0366  1903               	btfsc	3,2
  4405  0367  2B78               	goto	l1314
  4406  0368  3001               	movlw	1
  4407  0369  00F1               	movwf	??_GPIO_PinDirection
  4408  036A  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4409  036B  2B6E               	goto	u1304
  4410  036C                     u1305:	
  4411  036C  1003               	clrc
  4412  036D  0DF1               	rlf	??_GPIO_PinDirection,f
  4413  036E                     u1304:	
  4414  036E  3EFF               	addlw	-1
  4415  036F  1D03               	skipz
  4416  0370  2B6C               	goto	u1305
  4417  0371  0871               	movf	??_GPIO_PinDirection,w
  4418  0372  00F2               	movwf	??_GPIO_PinDirection+1
  4419  0373  0872               	movf	??_GPIO_PinDirection+1,w
  4420  0374  1683               	bsf	3,5	;RP0=1, select bank1
  4421  0375  1303               	bcf	3,6	;RP1=0, select bank1
  4422  0376  0487               	iorwf	7,f	;volatile
  4423  0377  0008               	return
  4424  0378                     l1314:	
  4425  0378  3001               	movlw	1
  4426  0379  00F1               	movwf	??_GPIO_PinDirection
  4427  037A  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4428  037B  2B7E               	goto	u1314
  4429  037C                     u1315:	
  4430  037C  1003               	clrc
  4431  037D  0DF1               	rlf	??_GPIO_PinDirection,f
  4432  037E                     u1314:	
  4433  037E  3EFF               	addlw	-1
  4434  037F  1D03               	skipz
  4435  0380  2B7C               	goto	u1315
  4436  0381  0871               	movf	??_GPIO_PinDirection,w
  4437  0382  3AFF               	xorlw	255
  4438  0383  00F2               	movwf	??_GPIO_PinDirection+1
  4439  0384  0872               	movf	??_GPIO_PinDirection+1,w
  4440  0385  1683               	bsf	3,5	;RP0=1, select bank1
  4441  0386  1303               	bcf	3,6	;RP1=0, select bank1
  4442  0387  0587               	andwf	7,f	;volatile
  4443                           
  4444                           ;gpio.c: 88: break;
  4445  0388  0008               	return
  4446  0389                     l1316:	
  4447                           ;gpio.c: 92: case 3:
  4448                           
  4449                           
  4450                           ;gpio.c: 93: ((var_pinDirn_u8)? ((TRISD) |= (1<<(enm_pinNumber))): ((TRISD) &= ~(1<<(enm
      +                          _pinNumber))));
  4451  0389  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4452  038A  1903               	btfsc	3,2
  4453  038B  2B9C               	goto	l1320
  4454  038C  3001               	movlw	1
  4455  038D  00F1               	movwf	??_GPIO_PinDirection
  4456  038E  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4457  038F  2B92               	goto	u1334
  4458  0390                     u1335:	
  4459  0390  1003               	clrc
  4460  0391  0DF1               	rlf	??_GPIO_PinDirection,f
  4461  0392                     u1334:	
  4462  0392  3EFF               	addlw	-1
  4463  0393  1D03               	skipz
  4464  0394  2B90               	goto	u1335
  4465  0395  0871               	movf	??_GPIO_PinDirection,w
  4466  0396  00F2               	movwf	??_GPIO_PinDirection+1
  4467  0397  0872               	movf	??_GPIO_PinDirection+1,w
  4468  0398  1683               	bsf	3,5	;RP0=1, select bank1
  4469  0399  1303               	bcf	3,6	;RP1=0, select bank1
  4470  039A  0488               	iorwf	8,f	;volatile
  4471  039B  0008               	return
  4472  039C                     l1320:	
  4473  039C  3001               	movlw	1
  4474  039D  00F1               	movwf	??_GPIO_PinDirection
  4475  039E  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4476  039F  2BA2               	goto	u1344
  4477  03A0                     u1345:	
  4478  03A0  1003               	clrc
  4479  03A1  0DF1               	rlf	??_GPIO_PinDirection,f
  4480  03A2                     u1344:	
  4481  03A2  3EFF               	addlw	-1
  4482  03A3  1D03               	skipz
  4483  03A4  2BA0               	goto	u1345
  4484  03A5  0871               	movf	??_GPIO_PinDirection,w
  4485  03A6  3AFF               	xorlw	255
  4486  03A7  00F2               	movwf	??_GPIO_PinDirection+1
  4487  03A8  0872               	movf	??_GPIO_PinDirection+1,w
  4488  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  4489  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  4490  03AB  0588               	andwf	8,f	;volatile
  4491                           
  4492                           ;gpio.c: 94: break;
  4493  03AC  0008               	return
  4494  03AD                     l1322:	
  4495                           ;gpio.c: 97: case 4:
  4496                           
  4497                           
  4498                           ;gpio.c: 98: ((var_pinDirn_u8)? ((TRISE) |= (1<<(enm_pinNumber))): ((TRISE) &= ~(1<<(enm
      +                          _pinNumber))));
  4499  03AD  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4500  03AE  1903               	btfsc	3,2
  4501  03AF  2BC0               	goto	l1326
  4502  03B0  3001               	movlw	1
  4503  03B1  00F1               	movwf	??_GPIO_PinDirection
  4504  03B2  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4505  03B3  2BB6               	goto	u1364
  4506  03B4                     u1365:	
  4507  03B4  1003               	clrc
  4508  03B5  0DF1               	rlf	??_GPIO_PinDirection,f
  4509  03B6                     u1364:	
  4510  03B6  3EFF               	addlw	-1
  4511  03B7  1D03               	skipz
  4512  03B8  2BB4               	goto	u1365
  4513  03B9  0871               	movf	??_GPIO_PinDirection,w
  4514  03BA  00F2               	movwf	??_GPIO_PinDirection+1
  4515  03BB  0872               	movf	??_GPIO_PinDirection+1,w
  4516  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  4517  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  4518  03BE  0489               	iorwf	9,f	;volatile
  4519  03BF  0008               	return
  4520  03C0                     l1326:	
  4521  03C0  3001               	movlw	1
  4522  03C1  00F1               	movwf	??_GPIO_PinDirection
  4523  03C2  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4524  03C3  2BC6               	goto	u1374
  4525  03C4                     u1375:	
  4526  03C4  1003               	clrc
  4527  03C5  0DF1               	rlf	??_GPIO_PinDirection,f
  4528  03C6                     u1374:	
  4529  03C6  3EFF               	addlw	-1
  4530  03C7  1D03               	skipz
  4531  03C8  2BC4               	goto	u1375
  4532  03C9  0871               	movf	??_GPIO_PinDirection,w
  4533  03CA  3AFF               	xorlw	255
  4534  03CB  00F2               	movwf	??_GPIO_PinDirection+1
  4535  03CC  0872               	movf	??_GPIO_PinDirection+1,w
  4536  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  4537  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  4538  03CF  0589               	andwf	9,f	;volatile
  4539                           
  4540                           ;gpio.c: 101: }
  4541                           
  4542                           ;gpio.c: 99: break;
  4543  03D0  0008               	return
  4544  03D1                     l1330:	
  4545  03D1  0873               	movf	GPIO_PinDirection@var_portNumber_u8,w
  4546                           
  4547                           ; Switch size 1, requested type "space"
  4548                           ; Number of cases is 5, Range of values is 0 to 4
  4549                           ; switch strategies available:
  4550                           ; Name         Instructions Cycles
  4551                           ; simple_byte           16     9 (average)
  4552                           ; direct_byte           23     8 (fixed)
  4553                           ; jumptable            260     6 (fixed)
  4554                           ;	Chosen strategy is simple_byte
  4555  03D2  3A00               	xorlw	0	; case 0
  4556  03D3  1903               	skipnz
  4557  03D4  2B1D               	goto	l1298
  4558  03D5  3A01               	xorlw	1	; case 1
  4559  03D6  1903               	skipnz
  4560  03D7  2B41               	goto	l1304
  4561  03D8  3A03               	xorlw	3	; case 2
  4562  03D9  1903               	skipnz
  4563  03DA  2B65               	goto	l1310
  4564  03DB  3A01               	xorlw	1	; case 3
  4565  03DC  1903               	skipnz
  4566  03DD  2B89               	goto	l1316
  4567  03DE  3A07               	xorlw	7	; case 4
  4568  03DF  1903               	skipnz
  4569  03E0  2BAD               	goto	l1322
  4570  03E1  2BE2               	goto	l248
  4571  03E2                     l248:	
  4572  03E2  0008               	return
  4573  03E3                     __end_of_GPIO_PinDirection:	
  4574                           
  4575                           	psect	text23
  4576  0E08                     __ptext23:	
  4577 ;; *************** function _DELAY_ms *****************
  4578 ;; Defined at:
  4579 ;;		line 75 in file "../00-libfiles/delay.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;  ms_count        2    2[COMMON] unsigned int 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0, pclath, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4593 ;;      Params:         2       0       0       0       0
  4594 ;;      Locals:         0       0       0       0       0
  4595 ;;      Temps:          0       0       0       0       0
  4596 ;;      Totals:         2       0       0       0       0
  4597 ;;Total ram usage:        2 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:    1
  4600 ;; This function calls:
  4601 ;;		_DELAY_us
  4602 ;; This function is called by:
  4603 ;;		_main
  4604 ;;		_LCD_Init
  4605 ;;		_lcd_BusyCheck
  4606 ;;		_lcd_Reset
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           
  4611                           ;psect for function _DELAY_ms
  4612  0E08                     _DELAY_ms:	
  4613  0E08                     l1292:	
  4614                           ;delay.c: 77: while (ms_count != 0)
  4615                           
  4616                           ;incstack = 0
  4617                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  4618                           
  4619  0E08  0872               	movf	DELAY_ms@ms_count,w
  4620  0E09  0473               	iorwf	DELAY_ms@ms_count+1,w
  4621  0E0A  1903               	btfsc	3,2
  4622  0E0B  0008               	return
  4623                           
  4624                           ;delay.c: 78: {
  4625                           ;delay.c: 79: DELAY_us(300u);
  4626  0E0C  302C               	movlw	44
  4627  0E0D  00F0               	movwf	DELAY_us@us_count
  4628  0E0E  3001               	movlw	1
  4629  0E0F  00F1               	movwf	DELAY_us@us_count+1
  4630  0E10  120A  158A  25DF  120A  158A  	fcall	_DELAY_us
  4631                           
  4632                           ;delay.c: 80: ms_count--;
  4633  0E15  3001               	movlw	1
  4634  0E16  02F2               	subwf	DELAY_ms@ms_count,f
  4635  0E17  3000               	movlw	0
  4636  0E18  1C03               	skipc
  4637  0E19  03F3               	decf	DELAY_ms@ms_count+1,f
  4638  0E1A  02F3               	subwf	DELAY_ms@ms_count+1,f
  4639  0E1B  2E08               	goto	l1292
  4640  0E1C                     __end_of_DELAY_ms:	
  4641                           
  4642                           	psect	text24
  4643  0DDF                     __ptext24:	
  4644 ;; *************** function _DELAY_us *****************
  4645 ;; Defined at:
  4646 ;;		line 56 in file "../00-libfiles/delay.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  us_count        2    0[COMMON] unsigned int 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2, status,0
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4660 ;;      Params:         2       0       0       0       0
  4661 ;;      Locals:         0       0       0       0       0
  4662 ;;      Temps:          0       0       0       0       0
  4663 ;;      Totals:         2       0       0       0       0
  4664 ;;Total ram usage:        2 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_lcd_BusyCheck
  4670 ;;		_lcd_Reset
  4671 ;;		_lcd_SendCmdSignals
  4672 ;;		_lcd_SendDataSignals
  4673 ;;		_DELAY_ms
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           
  4678                           ;psect for function _DELAY_us
  4679  0DDF                     _DELAY_us:	
  4680  0DDF                     l1284:	
  4681                           ;delay.c: 58: while (us_count != 0)
  4682                           
  4683                           ;incstack = 0
  4684                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  4685                           
  4686  0DDF  0870               	movf	DELAY_us@us_count,w
  4687  0DE0  0471               	iorwf	DELAY_us@us_count+1,w
  4688  0DE1  1903               	btfsc	3,2
  4689  0DE2  0008               	return
  4690                           
  4691                           ;delay.c: 59: {
  4692                           ;delay.c: 60: us_count--;
  4693  0DE3  3001               	movlw	1
  4694  0DE4  02F0               	subwf	DELAY_us@us_count,f
  4695  0DE5  3000               	movlw	0
  4696  0DE6  1C03               	skipc
  4697  0DE7  03F1               	decf	DELAY_us@us_count+1,f
  4698  0DE8  02F1               	subwf	DELAY_us@us_count+1,f
  4699  0DE9  2DDF               	goto	l1284
  4700  0DEA                     __end_of_DELAY_us:	
  4701  007E                     btemp	set	126	;btemp
  4702  007E                     wtemp	set	126
  4703  007E                     wtemp0	set	126
  4704  0080                     wtemp1	set	128
  4705  0082                     wtemp2	set	130
  4706  0084                     wtemp3	set	132
  4707  0086                     wtemp4	set	134
  4708  0088                     wtemp5	set	136
  4709  007F                     wtemp6	set	127
  4710  007E                     ttemp	set	126
  4711  007E                     ttemp0	set	126
  4712  0081                     ttemp1	set	129
  4713  0084                     ttemp2	set	132
  4714  0087                     ttemp3	set	135
  4715  007F                     ttemp4	set	127
  4716  007E                     ltemp	set	126
  4717  007E                     ltemp0	set	126
  4718  0082                     ltemp1	set	130
  4719  0086                     ltemp2	set	134
  4720  0080                     ltemp3	set	128


Data Sizes:
    Strings     18
    Constant    0
    Data        4
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     69      75
    BANK1            80      0      14
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Printf@str	PTR unsigned char  size(1) Largest target is 0

    LCD_Printf@argList	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_2(CODE[10]), 

    LCD_Printf@ptr	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_2(CODE[10]), 

    LCD_Printf@argp	PTR void [1] size(1) Largest target is 1
		 -> ?_LCD_Printf(BANK0[1]), 

    LCD_DisplayString@ptr_stringPointer_u8	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_LCD_DisplayString
    _main->_LCD_Init
    _LCD_SetUp->_GPIO_PinDirection
    _LCD_Printf->_LCD_DisplayString
    _LCD_DisplayString->_LCD_DisplayChar
    _LCD_DisplayNumber->___lldiv
    ___bmul->___lldiv
    _LCD_DisplayChar->_LCD_GoToNextLine
    _lcd_DataWrite->_lcd_BusyCheck
    _lcd_DataWrite->_lcd_SendHigherNibble
    _lcd_DataWrite->_lcd_SendLowerNibble
    _lcd_SendDataSignals->_GPIO_PinWrite
    _LCD_GoToNextLine->_LCD_CmdWrite
    _lcd_Reset->_lcd_SendHigherNibble
    _LCD_Clear->_LCD_GoToLine
    _LCD_GoToLine->_LCD_CmdWrite
    _LCD_CmdWrite->_lcd_BusyCheck
    _LCD_CmdWrite->_lcd_SendHigherNibble
    _LCD_CmdWrite->_lcd_SendLowerNibble
    _lcd_SendLowerNibble->_GPIO_PinWrite
    _lcd_SendHigherNibble->_GPIO_PinWrite
    _lcd_SendCmdSignals->_GPIO_PinWrite
    _lcd_BusyCheck->_GPIO_PinDirection
    _lcd_BusyCheck->_GPIO_PinRead
    _lcd_BusyCheck->_GPIO_PinWrite
    _DELAY_ms->_DELAY_us

Critical Paths under _main in BANK0

    _main->_LCD_Printf
    _LCD_Printf->_LCD_DisplayNumber
    _LCD_DisplayNumber->___bmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0  129886
                                             57 BANK0     12    12      0
                           _DELAY_ms
                  _LCD_DisplayString
                       _LCD_GoToLine
                           _LCD_Init
                         _LCD_Printf
                          _LCD_SetUp
 ---------------------------------------------------------------------------------
 (1) _LCD_SetUp                                           12     2     10    2189
                                              5 COMMON     2     2      0
                                              0 BANK0     10     0     10
                  _GPIO_PinDirection
 ---------------------------------------------------------------------------------
 (1) _LCD_Printf                                          22    20      2   62141
                                             35 BANK0     22    20      2
                    _LCD_DisplayChar
                  _LCD_DisplayNumber
                  _LCD_DisplayString
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayString                                    2     2      0   19627
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                    _LCD_DisplayChar
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayNumber                                   31    26      5   21670
                                              4 BANK0     31    26      5
                    _LCD_DisplayChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_DisplayChar                                      2     2      0   19528
                                             11 COMMON     2     2      0
                   _LCD_GoToNextLine
                      _lcd_DataWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_DataWrite                                        3     3      0    9731
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                _lcd_SendDataSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendDataSignals                                  0     0      0    2117
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _LCD_GoToNextLine                                     1     1      0    9731
                                             10 COMMON     1     1      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     2      1   35320
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                           _DELAY_ms
                          _LCD_Clear
                       _LCD_CmdWrite
                          _lcd_Reset
 ---------------------------------------------------------------------------------
 (2) _lcd_Reset                                            0     0      0    5110
                           _DELAY_ms
                           _DELAY_us
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0   19528
                       _LCD_CmdWrite
                       _LCD_GoToLine
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToLine                                         2     2      0    9797
                                             10 COMMON     2     2      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (5) _LCD_CmdWrite                                         3     3      0    9731
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendLowerNibble                                  2     2      0    1652
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (5) _lcd_SendHigherNibble                                 2     2      0    1652
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (6) _lcd_SendCmdSignals                                   0     0      0    2117
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (5) _lcd_BusyCheck                                        2     2      0    4221
                                              5 COMMON     2     2      0
                           _DELAY_ms
                           _DELAY_us
                  _GPIO_PinDirection
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (6) _GPIO_PinWrite                                        5     4      1    1564
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (6) _GPIO_PinRead                                         5     5      0     206
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinDirection                                    5     4      1    1087
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (6) _DELAY_ms                                             2     0      2     788
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (6) _DELAY_us                                             2     0      2     553
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_ms
     _DELAY_us
   _LCD_DisplayString
     _LCD_DisplayChar
       _LCD_GoToNextLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _lcd_DataWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendDataSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
   _LCD_GoToLine
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
   _LCD_Init
     _DELAY_ms
       _DELAY_us
     _LCD_Clear
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
       _LCD_GoToLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
     _lcd_Reset
       _DELAY_ms
         _DELAY_us
       _DELAY_us
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
   _LCD_Printf
     _LCD_DisplayChar
       _LCD_GoToNextLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _lcd_DataWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendDataSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
     _LCD_DisplayNumber
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       ___bmul
         ___lldiv (ARG)
       ___lldiv
     _LCD_DisplayString
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     ___bmul
       ___lldiv (ARG)
   _LCD_SetUp
     _GPIO_PinDirection

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       E       7       17.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     45      4B       5       93.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      67      12        0.0%
ABS                  0      0      67       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Feb 20 14:01:03 2016

                                         pc 0002                              ___bmul@product 0022  
                               __CFG_CP$OFF 0000                               ?_LCD_CmdWrite 0070  
                                        l72 0068                                 ?_LCD_Printf 0043  
                                        fsr 0004                               ?_LCD_GoToLine 0070  
                               __CFG_LVP$ON 0000                                         l154 0688  
                                       l248 03E2                                         l179 01CD  
                                       l278 04BB                                __CFG_CPD$OFF 0000  
                                       fsr0 0004                                         indf 0000  
                              __CFG_FOSC$HS 0000                     __end_of_LCD_DisplayChar 0E6C  
                                      l1310 0365                                        l1302 0330  
                                      l1320 039C                                        l1304 0341  
                                      l1322 03AD                                        l1314 0378  
                                      l1330 03D1                                        l1316 0389  
                                      l1308 0354                                        l1340 0409  
                                      l1412 0226                                        l1326 03C0  
                                      l1342 041A                                        l1360 0486  
                                      l1352 0451                                        l1336 03F6  
                                      l1416 0231                                        l1512 0082  
                                      l1600 058F                                        l1354 0462  
                                      l1346 042D                                        l1434 0EDA  
                                      l1522 00BA                                        l1514 0092  
                                      l1602 0524                                        l1284 0DDF  
                                      l1292 0E08                                        l1380 0168  
                                      l1364 0499                                        l1348 043E  
                                      l1604 0594                                        l1700 0630  
                                      l1382 0176                                        l1390 01AB  
                                      l1358 0475                                        l1438 0EF2  
                                      l1526 00C7                                        l1614 05B9  
                                      l1710 064B                                        l1384 0184  
                                      l1376 014C                                        l1368 04AA  
                                      l1464 0F0F                                        l1608 05A4  
                                      l1536 0006                                        l1712 0661  
                                      l1298 031D                                        l1378 015A  
                                      l1570 0503                                        l1722 069D  
                                      l1626 029D                                        l1388 019A  
                                      l1468 0F27                                        l1484 0E58  
                                      l1580 050E                                        l1564 04C5  
                                      l1572 0507                                        l1740 0702  
                                      l1628 02A4                                        l1662 0057  
                                      l1486 0E5D                                        l1494 0DF9  
                                      l1734 06E3                                        l1638 02CE  
                                      l1656 0046                                        l1592 0583  
                                      l1584 0523                                        l1728 06BC  
                                      l1498 0DFF                                        l1754 073E  
                                      l1746 0729                                        l1772 0791  
                                      l1764 076A                                        l1756 074F  
                                      l1780 07CB                                        l1692 061F  
                                      l1766 077D                                        l1694 0624  
                                      l1782 05C8                                        l1776 0793  
                                      l1688 05F7                                        l1792 0114  
                                      l1778 07C5                                        STR_1 0810  
                                      STR_2 0806                                        u2100 04F4  
                                      u2110 04F5                                        u2015 0086  
                                      u1304 036E                                        u1305 036C  
                                      u1225 030E                                        u1314 037E  
                                      u1315 037C                                        u2035 0094  
                                      u1244 0326                                        u1404 03FF  
                                      u1245 0324                                        u1405 03FD  
                                      u2045 00A9                                        u1334 0392  
                                      u1254 0336                                        u1414 040F  
                                      u1335 0390                                        u1255 0334  
                                      u1415 040D                                        u2055 00BB  
                                      u1344 03A2                                        u1504 047B  
                                      u1345 03A0                                        u1505 0479  
                                      u1274 034A                                        u1434 0423  
                                      u1275 0348                                        u1435 0421  
                                      u1364 03B6                                        u1284 035A  
                                      u1524 048F                                        u1444 0433  
                                      u1365 03B4                                        u1285 0358  
                                      u1525 048D                                        u1445 0431  
                                      u1374 03C6                                        u1614 016E  
                                      u1534 049F                                        u2094 04D9  
                                      u1375 03C4                                        u1615 016C  
                                      u1535 049D                                        u2095 04D6  
                                      u1464 0447                                        u1800 0FA7  
                                      u1545 013D                                        u1465 0445  
                                      u1385 03E7                                        u1554 0152  
                                      u1474 0457                                        u1810 0F36  
                                      u1730 0F76                                        u1555 0150  
                                      u1475 0455                                        u1644 017C  
                                      u1820 0F37                                        u1740 0F77  
                                      u1645 017A                                        u1494 046B  
                                      u1830 0F46                                        u1750 0F86  
                                      u1495 0469                                        u1680 0195  
                                      u1584 0160                                        u1840 0F47  
                                      u1760 0F87                                        u1585 015E  
                                      u1905 0EE8                                        u1690 0196  
                                      u1674 018A                                        u1850 0F56  
                                      u1770 0F96                                        u1675 0188  
                                      u1860 0F57                                        u1780 0F97  
                                      u1870 0F66                                        u1790 0FA6  
                                      u1935 0F1D                                        u1880 0F67  
                              __CFG_WRT$OFF 0000                                        _main 00D0  
                        __size_of_LCD_Clear 000B                                        btemp 007E  
                                      ltemp 007E                          __size_of_LCD_SetUp 00D1  
                                      start 0000                                        ttemp 007E  
                                      wtemp 007E                            __end_of_DELAY_ms 0E1C  
                          __end_of_DELAY_us 0DEA                           ___bmul@multiplier 0023  
                             ?_GPIO_PinRead 0070                              ??_LCD_CmdWrite 0077  
                               LCD_SetUp@D0 0022                                 LCD_SetUp@D1 0023  
                               LCD_SetUp@D2 0024                                 LCD_SetUp@D3 0025  
                               LCD_SetUp@D4 0026                                 LCD_SetUp@D5 0027  
                               LCD_SetUp@D6 0028                                 LCD_SetUp@D7 0029  
                               LCD_SetUp@EN 0021                                 LCD_SetUp@RS 0076  
                               LCD_SetUp@RW 0020                              ??_LCD_GoToLine 007A  
                             _GPIO_PinWrite 03E3                            __end_of_LCD_Init 0072  
          LCD_Printf@v_numOfDigitsToDisp_u8 0057                     LCD_CmdWrite@v_lcdCmd_u8 0079  
                                     ?_main 0070                               __CFG_WDTE$OFF 0000  
                           __end_of___lldiv 00D0                       _LCD_DisplayNumber$287 003F  
                                     _PORTA 0005                                       _PORTB 0006  
                                     _PORTC 0007                                       _PORTD 0008  
                                     _PORTE 0009                                       _TRISA 0085  
                                     _TRISB 0086                                       _TRISC 0087  
                                     _TRISD 0088                                       _TRISE 0089  
     LCD_DisplayString@ptr_stringPointer_u8 0020                              __CFG_BOREN$OFF 0000  
                                     pclath 000A                                       ltemp0 007E  
                                     ltemp1 0082                                       ltemp2 0086  
                                     ltemp3 0080                __end_of_lcd_SendHigherNibble 0F71  
                       __size_of_LCD_Printf 0215                                       ttemp0 007E  
                                     ttemp1 0081                                       ttemp2 0084  
                                     ttemp3 0087                                       ttemp4 007F  
                                     status 0003                                       wtemp0 007E  
                                     wtemp1 0080                                       wtemp2 0082  
                                     wtemp3 0084                                       wtemp4 0086  
                                     wtemp5 0088                                       wtemp6 007F  
                            ??_GPIO_PinRead 0070                             __initialization 07D2  
                GPIO_PinWrite@enm_pinNumber 0074                                __end_of_main 0138  
                            ?_GPIO_PinWrite 0070                           _GPIO_PinDirection 030A  
                                    ??_main 0059                 __size_of_lcd_SendCmdSignals 002D  
                         __end_of_LCD_Clear 0DF5                          ?_GPIO_PinDirection 0070  
                         __end_of_LCD_SetUp 030A                            ?_LCD_DisplayChar 0070  
               LCD_DisplayChar@v_lcdData_u8 007C                                LCD_Printf@ch 0056  
                       ??_GPIO_PinDirection 0071                       lcd_BusyCheck@busyflag 0076  
                            __CFG_PWRTE$OFF 0000                   GPIO_PinRead@enm_pinNumber 0074  
                                    ___bmul 0DF5                                   ??___lldiv 0078  
                 __end_of_GPIO_PinDirection 03E3              GPIO_PinDirection@enm_pinNumber 0074  
                          DELAY_ms@ms_count 0072                           ?_LCD_GoToNextLine 0070  
                                 ?_DELAY_ms 0072                                   ?_DELAY_us 0070  
               __end_of_lcd_SendLowerNibble 0FB1                          ??_LCD_GoToNextLine 007A  
                      __end_of_LCD_CmdWrite 0EFC                        __end_of_LCD_GoToLine 0E33  
               lcd_SendLowerNibble@dataByte 0076                     __end_of__initialization 07FC  
                                 ?_LCD_Init 007C                         ___bmul@multiplicand 0020  
                           ??_GPIO_PinWrite 0071                              __pcstackCOMMON 0070  
                              __pidataBANK0 0DDB                       __end_of_lcd_DataWrite 0F31  
                              ??_LCD_Printf 0045                        _lcd_SendHigherNibble 0F31  
                       LCD_Printf@v_num_s16 004D                         LCD_Printf@v_num_s32 0049  
                       LCD_Printf@v_num_u16 0053                         LCD_Printf@v_num_u32 004F  
                        __size_of_lcd_Reset 004F                __size_of_lcd_SendDataSignals 002E  
                                ??_DELAY_ms 0074                                  ??_DELAY_us 0072  
                      __end_of_GPIO_PinRead 01AD              GPIO_PinWrite@var_portNumber_u8 0073  
                                __pbssBANK0 0069                                  __pbssBANK1 00A0  
                     __end_of_lcd_BusyCheck 0239                lcd_SendHigherNibble@dataByte 0076  
              GPIO_PinWrite@var_pinValue_u8 0070                                  ??_LCD_Init 007D  
                        __end_of_LCD_Printf 07D2                                  __pmaintext 00D0  
                                   ?___bmul 0020                  __size_of_GPIO_PinDirection 00D9  
                             LCD_Printf@ptr 0055                               LCD_Printf@str 0047  
                     ?_lcd_SendHigherNibble 0070                            DELAY_us@us_count 0070  
                                __stringtab 0800                           __end_of_lcd_Reset 1000  
                           __size_of___bmul 0013                   LCD_Init@v_lcdNoOfLines_u8 0020  
                                   ___lldiv 0072                          LCD_DisplayNumber@a 0035  
                        LCD_DisplayNumber@i 0042                                     __ptext1 0239  
                                   __ptext2 05BD                                     __ptext3 0003  
                                   __ptext4 04BC                                     __ptext5 0072  
                                   __ptext6 0DF5                                     __ptext7 0E4B  
                                   __ptext8 0EFC                                     __ptext9 0E99  
                     __size_of_LCD_CmdWrite 0035                                   _LCDConfig 00A0  
                     __size_of_LCD_GoToLine 0017                                   _LCD_Clear 0DEA  
                                 _LCD_SetUp 0239                        end_of_initialization 07FC  
              LCD_Init@v_MaxCharsPerLine_u8 007C                             ___lldiv@divisor 0070  
                           ___lldiv@counter 007D                      ??_lcd_SendHigherNibble 0075  
                __end_of_lcd_SendCmdSignals 0E99                                _LCD_CmdWrite 0EC7  
                              _LCD_GoToLine 0E1C                       __size_of_GPIO_PinRead 0075  
                                ?_LCD_Clear 0070                                  ?_LCD_SetUp 0020  
                         __size_of_DELAY_ms 0014                           __size_of_DELAY_us 000B  
                  __size_of_LCD_DisplayChar 0021                           __size_of_LCD_Init 004F  
                 __size_of_LCD_GoToNextLine 0018                         _lcd_SendDataSignals 0E99  
        GPIO_PinDirection@var_portNumber_u8 0073                                _GPIO_PinRead 0138  
                            __end_of___bmul 0E08                           LCD_Printf@argList 0048  
                  _ARR_LcdLineNumAddress_U8 0065                         start_initialization 07D2  
                      ?_lcd_SendDataSignals 0070                      _v_LcdTrackCursorPos_U8 0069  
             GPIO_PinRead@var_portNumber_u8 0072                __size_of_lcd_SendLowerNibble 0040  
           GPIO_PinDirection@var_pinDirn_u8 0070                                    ??___bmul 0021  
                     __end_of_GPIO_PinWrite 04BC                                 __pdataBANK0 0065  
                     ??_lcd_SendDataSignals 0075                        _v_LcdTrackLineNum_U8 006A  
                                 ___latbits 0002                       lcd_DataWrite@dataByte 0079  
                             __pcstackBANK0 0020                                 ??_LCD_Clear 007C  
                               ??_LCD_SetUp 0075                      __size_of_lcd_DataWrite 0035  
               LCD_GoToLine@v_lineNumber_u8 007B                                    ?___lldiv 0070  
                                 _lcd_Reset 0FB1                           ??_LCD_DisplayChar 007B  
                                 __pstrings 0800                      __size_of_lcd_BusyCheck 008C  
                         _LCD_DisplayNumber 04BC                              LCD_Printf@argp 0058  
                         _LCD_DisplayString 0003                                    _DELAY_ms 0E08  
                                  _DELAY_us 0DDF                          ?_LCD_DisplayNumber 0024  
                        ?_LCD_DisplayString 0070                         ??_LCD_DisplayNumber 0029  
                                  _LCD_Init 0023                         ??_LCD_DisplayString 007D  
                          _LCD_GoToNextLine 0E33                                  ?_lcd_Reset 0070  
                             _lcd_DataWrite 0EFC                    GPIO_PinRead@returnStatus 0073  
                 __end_of_LCD_DisplayNumber 05BD                                 __stringbase 0805  
                 __end_of_LCD_DisplayString 0023                                   main@count 0063  
                        _lcd_SendCmdSignals 0E6C                               _lcd_BusyCheck 01AD  
                       ?_lcd_SendCmdSignals 0070                              ?_lcd_DataWrite 0070  
                          __size_of___lldiv 005E                          __end_of__stringtab 0806  
                      ??_lcd_SendCmdSignals 0075               __size_of_lcd_SendHigherNibble 0040  
                       _lcd_SendLowerNibble 0F71                                    __ptext10 0E33  
                                  __ptext11 0023                                    __ptext20 03E3  
                                  __ptext12 0FB1                                    __ptext21 0138  
                                  __ptext13 0DEA                                    __ptext22 030A  
                                  __ptext14 0E1C                                    __ptext23 0E08  
                                  __ptext15 0EC7                                    __ptext24 0DDF  
                                  __ptext16 0F71                                    __ptext17 0F31  
                                  __ptext18 0E6C                                    __ptext19 01AD  
                            ?_lcd_BusyCheck 0070         LCD_DisplayNumber@v_numericSystem_u8 0041  
                             __size_of_main 0068                        ?_lcd_SendLowerNibble 0070  
                               ??_lcd_Reset 0077                                  _LCD_Printf 05BD  
                __size_of_LCD_DisplayNumber 0101                  __size_of_LCD_DisplayString 0020  
                     ??_lcd_SendLowerNibble 0075                            ___lldiv@dividend 0074  
                           _LCD_DisplayChar 0E4B                                   stringcode 0800  
                           ??_lcd_DataWrite 0077                 __end_of_lcd_SendDataSignals 0EC7  
                          ___lldiv@quotient 0079                    __end_of_LCD_GoToNextLine 0E4B  
                                  stringdir 0800                                    stringtab 0800  
LCD_DisplayNumber@v_numOfDigitsToDisplay_u8 0028                             ??_lcd_BusyCheck 0075  
                    __size_of_GPIO_PinWrite 00D9               LCD_DisplayNumber@v_number_u32 0024  
