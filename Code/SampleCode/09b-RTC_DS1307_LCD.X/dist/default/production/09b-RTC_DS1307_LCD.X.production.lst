

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Feb 22 18:02:25 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  0088                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177  0000                     	;# 
   178  0001                     	;# 
   179  0002                     	;# 
   180  0003                     	;# 
   181  0004                     	;# 
   182  0005                     	;# 
   183  0006                     	;# 
   184  0007                     	;# 
   185  0008                     	;# 
   186  0009                     	;# 
   187  000A                     	;# 
   188  000B                     	;# 
   189  000C                     	;# 
   190  000D                     	;# 
   191  000E                     	;# 
   192  000E                     	;# 
   193  000F                     	;# 
   194  0010                     	;# 
   195  0011                     	;# 
   196  0012                     	;# 
   197  0013                     	;# 
   198  0014                     	;# 
   199  0015                     	;# 
   200  0015                     	;# 
   201  0016                     	;# 
   202  0017                     	;# 
   203  0018                     	;# 
   204  0019                     	;# 
   205  001A                     	;# 
   206  001B                     	;# 
   207  001B                     	;# 
   208  001C                     	;# 
   209  001D                     	;# 
   210  001E                     	;# 
   211  001F                     	;# 
   212  0081                     	;# 
   213  0085                     	;# 
   214  0086                     	;# 
   215  0087                     	;# 
   216  0088                     	;# 
   217  0089                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  008E                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237                           
   238                           	psect	idataBANK1
   239  0848                     __pidataBANK1:	
   240                           
   241                           ;initializer for _ARR_LcdLineNumAddress_U8
   242  0848  3480               	retlw	128
   243  0849  34C0               	retlw	192
   244  084A  3490               	retlw	144
   245  084B  34D0               	retlw	208
   246  0005                     _PORTA	set	5
   247  0006                     _PORTB	set	6
   248  0007                     _PORTC	set	7
   249  0008                     _PORTD	set	8
   250  0009                     _PORTE	set	9
   251  0013                     _SSPBUF	set	19
   252  0014                     _SSPCON	set	20
   253  0093                     _SSPADD	set	147
   254  0094                     _SSPSTAT	set	148
   255  0085                     _TRISA	set	133
   256  0086                     _TRISB	set	134
   257  0087                     _TRISC	set	135
   258  0088                     _TRISD	set	136
   259  0089                     _TRISE	set	137
   260  048D                     _ACKDT	set	1165
   261  048C                     _ACKEN	set	1164
   262  04A0                     _BF	set	1184
   263  048A                     _PEN	set	1162
   264  048B                     _RCEN	set	1163
   265  0489                     _RSEN	set	1161
   266  04A2                     _R_W	set	1186
   267  0488                     _SEN	set	1160
   268  043B                     _TRISC3	set	1083
   269  043C                     _TRISC4	set	1084
   270                           
   271                           	psect	strings
   272  0800                     __pstrings:	
   273  0800                     stringtab:	
   274  0800                     __stringtab:	
   275  0800                     stringcode:	
   276                           ;	String table - string pointers are 1 byte each
   277                           
   278  0800                     stringdir:	
   279  0800  3008               	movlw	high stringdir
   280  0801  008A               	movwf	10
   281  0802  0804               	movf	4,w
   282  0803  0A84               	incf	4,f
   283  0804  0782               	addwf	2,f
   284  0805                     __stringbase:	
   285  0805  3400               	retlw	0
   286  0806                     __end_of__stringtab:	
   287  0806                     STR_1:	
   288  0806  3474               	retlw	116	;'t'
   289  0807  3469               	retlw	105	;'i'
   290  0808  346D               	retlw	109	;'m'
   291  0809  3465               	retlw	101	;'e'
   292  080A  343A               	retlw	58	;':'
   293  080B  3425               	retlw	37	;'%'
   294  080C  3432               	retlw	50	;'2'
   295  080D  3478               	retlw	120	;'x'
   296  080E  343A               	retlw	58	;':'
   297  080F  3425               	retlw	37	;'%'
   298  0810  3432               	retlw	50	;'2'
   299  0811  3478               	retlw	120	;'x'
   300  0812  343A               	retlw	58	;':'
   301  0813  3425               	retlw	37	;'%'
   302  0814  3432               	retlw	50	;'2'
   303  0815  3478               	retlw	120	;'x'
   304  0816  3420               	retlw	32	;' '
   305  0817  3420               	retlw	32	;' '
   306  0818  340A               	retlw	10
   307  0819  3444               	retlw	68	;'D'
   308  081A  3461               	retlw	97	;'a'
   309  081B  3474               	retlw	116	;'t'
   310  081C  3465               	retlw	101	;'e'
   311  081D  343A               	retlw	58	;':'
   312  081E  3425               	retlw	37	;'%'
   313  081F  3432               	retlw	50	;'2'
   314  0820  3478               	retlw	120	;'x'
   315  0821  342F               	retlw	47	;'/'
   316  0822  3425               	retlw	37	;'%'
   317  0823  3432               	retlw	50	;'2'
   318  0824  3478               	retlw	120	;'x'
   319  0825  342F               	retlw	47	;'/'
   320  0826  3425               	retlw	37	;'%'
   321  0827  3432               	retlw	50	;'2'
   322  0828  3478               	retlw	120	;'x'
   323  0829  3400               	retlw	0
   324                           
   325                           ; #config settings
   326  0000                     
   327                           	psect	cinit
   328  07D4                     start_initialization:	
   329  07D4                     __initialization:	
   330                           
   331                           ; Clear objects allocated to BANK0
   332  07D4  01EE               	clrf	__pbssBANK0& (0+127)
   333  07D5  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   334                           
   335                           ; Clear objects allocated to BANK1
   336  07D6  1683               	bsf	3,5	;RP0=1, select bank1
   337  07D7  1303               	bcf	3,6	;RP1=0, select bank1
   338  07D8  01B3               	clrf	__pbssBANK1& (0+127)
   339  07D9  01B4               	clrf	(__pbssBANK1+1)& (0+127)
   340  07DA  01B5               	clrf	(__pbssBANK1+2)& (0+127)
   341  07DB  01B6               	clrf	(__pbssBANK1+3)& (0+127)
   342  07DC  01B7               	clrf	(__pbssBANK1+4)& (0+127)
   343  07DD  01B8               	clrf	(__pbssBANK1+5)& (0+127)
   344  07DE  01B9               	clrf	(__pbssBANK1+6)& (0+127)
   345  07DF  01BA               	clrf	(__pbssBANK1+7)& (0+127)
   346  07E0  01BB               	clrf	(__pbssBANK1+8)& (0+127)
   347  07E1  01BC               	clrf	(__pbssBANK1+9)& (0+127)
   348  07E2  01BD               	clrf	(__pbssBANK1+10)& (0+127)
   349  07E3  01BE               	clrf	(__pbssBANK1+11)& (0+127)
   350  07E4  01BF               	clrf	(__pbssBANK1+12)& (0+127)
   351  07E5  01C0               	clrf	(__pbssBANK1+13)& (0+127)
   352                           
   353                           ; Initialize objects allocated to BANK1
   354  07E6  120A  158A  2048  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   355  07EB  00C1               	movwf	__pdataBANK1& (0+127)
   356  07EC  120A  158A  2049  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   357  07F1  00C2               	movwf	(__pdataBANK1+1)& (0+127)
   358  07F2  120A  158A  204A  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   359  07F7  00C3               	movwf	(__pdataBANK1+2)& (0+127)
   360  07F8  120A  158A  204B   	fcall	__pidataBANK1+3	;fetch initializer
   361  07FB  00C4               	movwf	(__pdataBANK1+3)& (0+127)
   362  07FC                     end_of_initialization:	
   363                           ;End of C runtime variable initialization code
   364                           
   365  07FC                     __end_of__initialization:	
   366  07FC  0183               	clrf	3
   367  07FD  120A  118A  2AB6   	ljmp	_main	;jump to C main() function
   368                           
   369                           	psect	bssBANK0
   370  006E                     __pbssBANK0:	
   371  006E                     _v_LcdTrackCursorPos_U8:	
   372  006E                     	ds	1
   373  006F                     _v_LcdTrackLineNum_U8:	
   374  006F                     	ds	1
   375                           
   376                           	psect	bssBANK1
   377  00B3                     __pbssBANK1:	
   378  00B3                     _LCDConfig:	
   379  00B3                     	ds	14
   380                           
   381                           	psect	dataBANK1
   382  00C1                     __pdataBANK1:	
   383  00C1                     _ARR_LcdLineNumAddress_U8:	
   384  00C1                     	ds	4
   385                           
   386                           	psect	cstackBANK1
   387  00A0                     __pcstackBANK1:	
   388  00A0                     ??_main:	
   389                           
   390                           ; 1 bytes @ 0x0
   391  00A0                     	ds	12
   392  00AC                     main@rtc:	
   393                           
   394                           ; 7 bytes @ 0xC
   395  00AC                     	ds	7
   396                           
   397                           	psect	cstackCOMMON
   398  0070                     __pcstackCOMMON:	
   399  0070                     ?_i2c_WaitForIdle:	
   400  0070                     ??_i2c_WaitForIdle:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_i2c_Ack:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ??_i2c_Ack:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_i2c_NoAck:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ??_i2c_NoAck:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_LCD_CmdWrite:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_lcd_Reset:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_LCD_Clear:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_LCD_GoToLine:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_lcd_BusyCheck:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_lcd_SendLowerNibble:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_lcd_SendHigherNibble:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_lcd_SendCmdSignals:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_lcd_DataWrite:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_lcd_SendDataSignals:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_DELAY_us:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_GPIO_PinDirection:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_GPIO_PinWrite:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_GPIO_PinRead:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ??_GPIO_PinRead:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_I2C_Init:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ??_I2C_Init:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?_I2C_Start:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ??_I2C_Start:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_I2C_Stop:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ??_I2C_Stop:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_I2C_Write:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ??_I2C_Write:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_I2C_Read:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ??_I2C_Read:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_LCD_GoToNextLine:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_LCD_DisplayChar:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_LCD_DisplayString:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_RTC_Init:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_RTC_SetDateTime:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_RTC_GetDateTime:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_main:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?___ftpack:	
   512                           ; 2 bytes @ 0x0
   513                           
   514  0070                     ?___lldiv:	
   515                           ; 3 bytes @ 0x0
   516                           
   517  0070                     GPIO_PinDirection@var_pinDirn_u8:	
   518                           ; 4 bytes @ 0x0
   519                           
   520  0070                     GPIO_PinWrite@var_pinValue_u8:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     I2C_Write@v_i2cData_u8:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     DELAY_us@us_count:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ___ftpack@arg:	
   530                           ; 2 bytes @ 0x0
   531                           
   532  0070                     ___lldiv@divisor:	
   533                           ; 3 bytes @ 0x0
   534                           
   535                           
   536                           ; 4 bytes @ 0x0
   537  0070                     	ds	1
   538  0071                     ??_GPIO_PinDirection:	
   539  0071                     ??_GPIO_PinWrite:	
   540                           ; 1 bytes @ 0x1
   541                           
   542  0071                     ??_RTC_Init:	
   543                           ; 1 bytes @ 0x1
   544                           
   545  0071                     ??_RTC_SetDateTime:	
   546                           ; 1 bytes @ 0x1
   547                           
   548  0071                     I2C_Read@v_ackOption_u8:	
   549                           ; 1 bytes @ 0x1
   550                           
   551  0071                     RTC_SetDateTime@rtc:	
   552                           ; 1 bytes @ 0x1
   553                           
   554                           
   555                           ; 1 bytes @ 0x1
   556  0071                     	ds	1
   557  0072                     ??_DELAY_us:	
   558  0072                     ?_DELAY_ms:	
   559                           ; 1 bytes @ 0x2
   560                           
   561  0072                     GPIO_PinRead@var_portNumber_u8:	
   562                           ; 1 bytes @ 0x2
   563                           
   564  0072                     I2C_Read@v_i2cData_u8:	
   565                           ; 1 bytes @ 0x2
   566                           
   567  0072                     DELAY_ms@ms_count:	
   568                           ; 1 bytes @ 0x2
   569                           
   570                           
   571                           ; 2 bytes @ 0x2
   572  0072                     	ds	1
   573  0073                     ??_RTC_GetDateTime:	
   574  0073                     GPIO_PinDirection@var_portNumber_u8:	
   575                           ; 1 bytes @ 0x3
   576                           
   577  0073                     GPIO_PinWrite@var_portNumber_u8:	
   578                           ; 1 bytes @ 0x3
   579                           
   580  0073                     GPIO_PinRead@returnStatus:	
   581                           ; 1 bytes @ 0x3
   582                           
   583  0073                     ___ftpack@exp:	
   584                           ; 1 bytes @ 0x3
   585                           
   586                           
   587                           ; 1 bytes @ 0x3
   588  0073                     	ds	1
   589  0074                     ??_DELAY_ms:	
   590  0074                     GPIO_PinDirection@enm_pinNumber:	
   591                           ; 1 bytes @ 0x4
   592                           
   593  0074                     GPIO_PinWrite@enm_pinNumber:	
   594                           ; 1 bytes @ 0x4
   595                           
   596  0074                     GPIO_PinRead@enm_pinNumber:	
   597                           ; 1 bytes @ 0x4
   598                           
   599  0074                     RTC_GetDateTime@rtc:	
   600                           ; 1 bytes @ 0x4
   601                           
   602  0074                     ___ftpack@sign:	
   603                           ; 1 bytes @ 0x4
   604                           
   605  0074                     ___lldiv@dividend:	
   606                           ; 1 bytes @ 0x4
   607                           
   608                           
   609                           ; 4 bytes @ 0x4
   610  0074                     	ds	1
   611  0075                     ??_lcd_BusyCheck:	
   612  0075                     ??_lcd_SendLowerNibble:	
   613                           ; 1 bytes @ 0x5
   614                           
   615  0075                     ??_lcd_SendHigherNibble:	
   616                           ; 1 bytes @ 0x5
   617                           
   618  0075                     ??_lcd_SendCmdSignals:	
   619                           ; 1 bytes @ 0x5
   620                           
   621  0075                     ??_lcd_SendDataSignals:	
   622                           ; 1 bytes @ 0x5
   623                           
   624  0075                     ??___ftpack:	
   625                           ; 1 bytes @ 0x5
   626                           
   627  0075                     ??_LCD_SetUp:	
   628                           ; 1 bytes @ 0x5
   629                           
   630                           
   631                           ; 1 bytes @ 0x5
   632  0075                     	ds	1
   633  0076                     LCD_SetUp@RS:	
   634  0076                     lcd_BusyCheck@busyflag:	
   635                           ; 1 bytes @ 0x6
   636                           
   637  0076                     lcd_SendHigherNibble@dataByte:	
   638                           ; 1 bytes @ 0x6
   639                           
   640  0076                     lcd_SendLowerNibble@dataByte:	
   641                           ; 1 bytes @ 0x6
   642                           
   643                           
   644                           ; 1 bytes @ 0x6
   645  0076                     	ds	1
   646  0077                     ??_LCD_CmdWrite:	
   647  0077                     ??_lcd_Reset:	
   648                           ; 1 bytes @ 0x7
   649                           
   650  0077                     ??_lcd_DataWrite:	
   651                           ; 1 bytes @ 0x7
   652                           
   653                           
   654                           ; 1 bytes @ 0x7
   655  0077                     	ds	1
   656  0078                     ??___lldiv:	
   657  0078                     ?___ftmul:	
   658                           ; 1 bytes @ 0x8
   659                           
   660  0078                     ?___lltoft:	
   661                           ; 3 bytes @ 0x8
   662                           
   663  0078                     ___ftmul@f1:	
   664                           ; 3 bytes @ 0x8
   665                           
   666  0078                     ___lltoft@c:	
   667                           ; 3 bytes @ 0x8
   668                           
   669                           
   670                           ; 4 bytes @ 0x8
   671  0078                     	ds	1
   672  0079                     LCD_CmdWrite@v_lcdCmd_u8:	
   673  0079                     lcd_DataWrite@dataByte:	
   674                           ; 1 bytes @ 0x9
   675                           
   676  0079                     ___lldiv@quotient:	
   677                           ; 1 bytes @ 0x9
   678                           
   679                           
   680                           ; 4 bytes @ 0x9
   681  0079                     	ds	1
   682  007A                     ??_LCD_GoToLine:	
   683  007A                     ??_LCD_GoToNextLine:	
   684                           ; 1 bytes @ 0xA
   685                           
   686                           
   687                           ; 1 bytes @ 0xA
   688  007A                     	ds	1
   689  007B                     ??_LCD_DisplayChar:	
   690  007B                     LCD_GoToLine@v_lineNumber_u8:	
   691                           ; 1 bytes @ 0xB
   692                           
   693  007B                     ___ftmul@f2:	
   694                           ; 1 bytes @ 0xB
   695                           
   696                           
   697                           ; 3 bytes @ 0xB
   698  007B                     	ds	1
   699  007C                     ??_LCD_Clear:	
   700  007C                     ?_LCD_Init:	
   701                           ; 1 bytes @ 0xC
   702                           
   703  007C                     ??___lltoft:	
   704                           ; 1 bytes @ 0xC
   705                           
   706  007C                     LCD_Init@v_MaxCharsPerLine_u8:	
   707                           ; 1 bytes @ 0xC
   708                           
   709  007C                     LCD_DisplayChar@v_lcdData_u8:	
   710                           ; 1 bytes @ 0xC
   711                           
   712                           
   713                           ; 1 bytes @ 0xC
   714  007C                     	ds	1
   715  007D                     ??_LCD_Init:	
   716  007D                     ??_LCD_DisplayString:	
   717                           ; 1 bytes @ 0xD
   718                           
   719  007D                     ___lldiv@counter:	
   720                           ; 1 bytes @ 0xD
   721                           
   722  007D                     ___lltoft@exp:	
   723                           ; 1 bytes @ 0xD
   724                           
   725                           
   726                           ; 1 bytes @ 0xD
   727  007D                     	ds	1
   728  007E                     ??___ftneg:	
   729                           
   730                           	psect	cstackBANK0
   731  0020                     __pcstackBANK0:	
   732                           ; 1 bytes @ 0xE
   733                           
   734  0020                     ?_LCD_SetUp:	
   735  0020                     ?___bmul:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0020                     ??___ftmul:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0020                     ?___ftneg:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0020                     LCD_SetUp@RW:	
   745                           ; 3 bytes @ 0x0
   746                           
   747  0020                     LCD_Init@v_lcdNoOfLines_u8:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0020                     LCD_DisplayString@ptr_stringPointer_u8:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0020                     ___bmul@multiplicand:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0020                     ___ftneg@f1:	
   757                           ; 1 bytes @ 0x0
   758                           
   759                           
   760                           ; 3 bytes @ 0x0
   761  0020                     	ds	1
   762  0021                     ??___bmul:	
   763  0021                     LCD_SetUp@EN:	
   764                           ; 1 bytes @ 0x1
   765                           
   766                           
   767                           ; 1 bytes @ 0x1
   768  0021                     	ds	1
   769  0022                     LCD_SetUp@D0:	
   770  0022                     ___bmul@product:	
   771                           ; 1 bytes @ 0x2
   772                           
   773                           
   774                           ; 1 bytes @ 0x2
   775  0022                     	ds	1
   776  0023                     ?___ftadd:	
   777  0023                     LCD_SetUp@D1:	
   778                           ; 3 bytes @ 0x3
   779                           
   780  0023                     ___bmul@multiplier:	
   781                           ; 1 bytes @ 0x3
   782                           
   783  0023                     ___ftadd@f1:	
   784                           ; 1 bytes @ 0x3
   785                           
   786                           
   787                           ; 3 bytes @ 0x3
   788  0023                     	ds	1
   789  0024                     ?_LCD_DisplayNumber:	
   790  0024                     LCD_SetUp@D2:	
   791                           ; 1 bytes @ 0x4
   792                           
   793  0024                     ___ftmul@exp:	
   794                           ; 1 bytes @ 0x4
   795                           
   796  0024                     LCD_DisplayNumber@v_number_u32:	
   797                           ; 1 bytes @ 0x4
   798                           
   799                           
   800                           ; 4 bytes @ 0x4
   801  0024                     	ds	1
   802  0025                     LCD_SetUp@D3:	
   803  0025                     ___ftmul@f3_as_product:	
   804                           ; 1 bytes @ 0x5
   805                           
   806                           
   807                           ; 3 bytes @ 0x5
   808  0025                     	ds	1
   809  0026                     LCD_SetUp@D4:	
   810  0026                     ___ftadd@f2:	
   811                           ; 1 bytes @ 0x6
   812                           
   813                           
   814                           ; 3 bytes @ 0x6
   815  0026                     	ds	1
   816  0027                     LCD_SetUp@D5:	
   817                           
   818                           ; 1 bytes @ 0x7
   819  0027                     	ds	1
   820  0028                     LCD_SetUp@D6:	
   821  0028                     LCD_DisplayNumber@v_numOfDigitsToDisplay_u8:	
   822                           ; 1 bytes @ 0x8
   823                           
   824  0028                     ___ftmul@cntr:	
   825                           ; 1 bytes @ 0x8
   826                           
   827                           
   828                           ; 1 bytes @ 0x8
   829  0028                     	ds	1
   830  0029                     ??_LCD_DisplayNumber:	
   831  0029                     ??___ftadd:	
   832                           ; 1 bytes @ 0x9
   833                           
   834  0029                     LCD_SetUp@D7:	
   835                           ; 1 bytes @ 0x9
   836                           
   837  0029                     ___ftmul@sign:	
   838                           ; 1 bytes @ 0x9
   839                           
   840                           
   841                           ; 1 bytes @ 0x9
   842  0029                     	ds	1
   843  002A                     ?___fttol:	
   844  002A                     ___fttol@f1:	
   845                           ; 4 bytes @ 0xA
   846                           
   847                           
   848                           ; 3 bytes @ 0xA
   849  002A                     	ds	3
   850  002D                     ___ftadd@sign:	
   851                           
   852                           ; 1 bytes @ 0xD
   853  002D                     	ds	1
   854  002E                     ??___fttol:	
   855  002E                     ___ftadd@exp2:	
   856                           ; 1 bytes @ 0xE
   857                           
   858                           
   859                           ; 1 bytes @ 0xE
   860  002E                     	ds	1
   861  002F                     ___ftadd@exp1:	
   862                           
   863                           ; 1 bytes @ 0xF
   864  002F                     	ds	3
   865  0032                     ___fttol@sign1:	
   866                           
   867                           ; 1 bytes @ 0x12
   868  0032                     	ds	1
   869  0033                     ___fttol@lval:	
   870                           
   871                           ; 4 bytes @ 0x13
   872  0033                     	ds	2
   873  0035                     LCD_DisplayNumber@a:	
   874                           
   875                           ; 10 bytes @ 0x15
   876  0035                     	ds	2
   877  0037                     ___fttol@exp1:	
   878                           
   879                           ; 1 bytes @ 0x17
   880  0037                     	ds	8
   881  003F                     _LCD_DisplayNumber$300:	
   882                           
   883                           ; 2 bytes @ 0x1F
   884  003F                     	ds	2
   885  0041                     LCD_DisplayNumber@v_numericSystem_u8:	
   886                           
   887                           ; 1 bytes @ 0x21
   888  0041                     	ds	1
   889  0042                     LCD_DisplayNumber@i:	
   890                           
   891                           ; 1 bytes @ 0x22
   892  0042                     	ds	1
   893  0043                     ?_LCD_DisplayFloatNumber:	
   894  0043                     LCD_DisplayFloatNumber@v_floatNum_f32:	
   895                           ; 1 bytes @ 0x23
   896                           
   897                           
   898                           ; 3 bytes @ 0x23
   899  0043                     	ds	3
   900  0046                     ??_LCD_DisplayFloatNumber:	
   901                           
   902                           ; 1 bytes @ 0x26
   903  0046                     	ds	1
   904  0047                     LCD_DisplayFloatNumber@v_temp_u32:	
   905                           
   906                           ; 4 bytes @ 0x27
   907  0047                     	ds	4
   908  004B                     ?_LCD_Printf:	
   909                           
   910                           ; 1 bytes @ 0x2B
   911  004B                     	ds	12
   912  0057                     ??_LCD_Printf:	
   913                           
   914                           ; 1 bytes @ 0x37
   915  0057                     	ds	2
   916  0059                     LCD_Printf@v_floatNum_f32:	
   917                           
   918                           ; 3 bytes @ 0x39
   919  0059                     	ds	3
   920  005C                     LCD_Printf@str:	
   921                           
   922                           ; 1 bytes @ 0x3C
   923  005C                     	ds	1
   924  005D                     LCD_Printf@argList:	
   925                           
   926                           ; 1 bytes @ 0x3D
   927  005D                     	ds	1
   928  005E                     LCD_Printf@v_num_s32:	
   929                           
   930                           ; 4 bytes @ 0x3E
   931  005E                     	ds	4
   932  0062                     LCD_Printf@v_num_s16:	
   933                           
   934                           ; 2 bytes @ 0x42
   935  0062                     	ds	2
   936  0064                     LCD_Printf@v_num_u32:	
   937                           
   938                           ; 4 bytes @ 0x44
   939  0064                     	ds	4
   940  0068                     LCD_Printf@v_num_u16:	
   941                           
   942                           ; 2 bytes @ 0x48
   943  0068                     	ds	2
   944  006A                     LCD_Printf@ptr:	
   945                           
   946                           ; 1 bytes @ 0x4A
   947  006A                     	ds	1
   948  006B                     LCD_Printf@ch:	
   949                           
   950                           ; 1 bytes @ 0x4B
   951  006B                     	ds	1
   952  006C                     LCD_Printf@v_numOfDigitsToDisp_u8:	
   953                           
   954                           ; 1 bytes @ 0x4C
   955  006C                     	ds	1
   956  006D                     LCD_Printf@argp:	
   957                           
   958                           ; 1 bytes @ 0x4D
   959  006D                     	ds	1
   960                           
   961                           	psect	maintext
   962  02B6                     __pmaintext:	
   963 ;;
   964 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
   965 ;;
   966 ;; *************** function _main *****************
   967 ;; Defined at:
   968 ;;		line 42 in file "main.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;  rtc             7   12[BANK1 ] struct .
   973 ;; Return value:  Size  Location     Type
   974 ;;                  2  417[None  ] int 
   975 ;; Registers used:
   976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   977 ;; Tracked objects:
   978 ;;		On entry : B00/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   982 ;;      Params:         0       0       0       0       0
   983 ;;      Locals:         0       0       7       0       0
   984 ;;      Temps:          0       0      12       0       0
   985 ;;      Totals:         0       0      19       0       0
   986 ;;Total ram usage:       19 bytes
   987 ;; Hardware stack levels required when called:    9
   988 ;; This function calls:
   989 ;;		_LCD_GoToLine
   990 ;;		_LCD_Init
   991 ;;		_LCD_Printf
   992 ;;		_LCD_SetUp
   993 ;;		_RTC_GetDateTime
   994 ;;		_RTC_Init
   995 ;;		_RTC_SetDateTime
   996 ;; This function is called by:
   997 ;;		Startup code after reset
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           
  1002                           ;psect for function _main
  1003  02B6                     _main:	
  1004                           
  1005                           ;main.c: 44: rtc_t rtc;
  1006                           ;main.c: 47: LCD_SetUp(PB_0,PB_1,PB_2,P_NC,P_NC,P_NC,P_NC,PB_4,PB_5,PB_6,PB_7);
  1007                           
  1008                           ;incstack = 0
  1009 ;; hardware stack exceeded
  1010                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1011  02B6  3009               	movlw	9
  1012  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  1013  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  1014  02B9  00A0               	movwf	??_main^(0+128)
  1015  02BA  0820               	movf	??_main^(0+128),w
  1016  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1017  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1018  02BD  00A0               	movwf	LCD_SetUp@RW
  1019  02BE  300A               	movlw	10
  1020  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  1021  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  1022  02C1  00A1               	movwf	(??_main+1)^(0+128)
  1023  02C2  0821               	movf	(??_main+1)^(0+128),w
  1024  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  1025  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  1026  02C5  00A1               	movwf	LCD_SetUp@EN
  1027  02C6  30FF               	movlw	255
  1028  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  1029  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  1030  02C9  00A2               	movwf	(??_main+2)^(0+128)
  1031  02CA  0822               	movf	(??_main+2)^(0+128),w
  1032  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1033  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1034  02CD  00A2               	movwf	LCD_SetUp@D0
  1035  02CE  30FF               	movlw	255
  1036  02CF  1683               	bsf	3,5	;RP0=1, select bank1
  1037  02D0  1303               	bcf	3,6	;RP1=0, select bank1
  1038  02D1  00A3               	movwf	(??_main+3)^(0+128)
  1039  02D2  0823               	movf	(??_main+3)^(0+128),w
  1040  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  1041  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  1042  02D5  00A3               	movwf	LCD_SetUp@D1
  1043  02D6  30FF               	movlw	255
  1044  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  1045  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  1046  02D9  00A4               	movwf	(??_main+4)^(0+128)
  1047  02DA  0824               	movf	(??_main+4)^(0+128),w
  1048  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1049  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1050  02DD  00A4               	movwf	LCD_SetUp@D2
  1051  02DE  30FF               	movlw	255
  1052  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  1053  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  1054  02E1  00A5               	movwf	(??_main+5)^(0+128)
  1055  02E2  0825               	movf	(??_main+5)^(0+128),w
  1056  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  1057  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  1058  02E5  00A5               	movwf	LCD_SetUp@D3
  1059  02E6  300C               	movlw	12
  1060  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  1061  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  1062  02E9  00A6               	movwf	(??_main+6)^(0+128)
  1063  02EA  0826               	movf	(??_main+6)^(0+128),w
  1064  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1065  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1066  02ED  00A6               	movwf	LCD_SetUp@D4
  1067  02EE  300D               	movlw	13
  1068  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  1069  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  1070  02F1  00A7               	movwf	(??_main+7)^(0+128)
  1071  02F2  0827               	movf	(??_main+7)^(0+128),w
  1072  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  1073  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  1074  02F5  00A7               	movwf	LCD_SetUp@D5
  1075  02F6  300E               	movlw	14
  1076  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  1077  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  1078  02F9  00A8               	movwf	(??_main+8)^(0+128)
  1079  02FA  0828               	movf	(??_main+8)^(0+128),w
  1080  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1081  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1082  02FD  00A8               	movwf	LCD_SetUp@D6
  1083  02FE  300F               	movlw	15
  1084  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  1085  0300  1303               	bcf	3,6	;RP1=0, select bank1
  1086  0301  00A9               	movwf	(??_main+9)^(0+128)
  1087  0302  0829               	movf	(??_main+9)^(0+128),w
  1088  0303  1283               	bcf	3,5	;RP0=0, select bank0
  1089  0304  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0305  00A9               	movwf	LCD_SetUp@D7
  1091  0306  3008               	movlw	8
  1092  0307  120A  118A  2033  120A  118A  	fcall	_LCD_SetUp
  1093                           
  1094                           ;main.c: 48: LCD_Init(2,16);
  1095  030C  3010               	movlw	16
  1096  030D  1683               	bsf	3,5	;RP0=1, select bank1
  1097  030E  1303               	bcf	3,6	;RP1=0, select bank1
  1098  030F  00A0               	movwf	??_main^(0+128)
  1099  0310  0820               	movf	??_main^(0+128),w
  1100  0311  00FC               	movwf	LCD_Init@v_MaxCharsPerLine_u8
  1101  0312  3002               	movlw	2
  1102  0313  120A  158A  230D  120A  118A  	fcall	_LCD_Init
  1103                           
  1104                           ;main.c: 50: RTC_Init();
  1105  0318  120A  158A  213B  120A  118A  	fcall	_RTC_Init
  1106                           
  1107                           ;main.c: 51: rtc.hour = 0x10;
  1108  031D  3010               	movlw	16
  1109  031E  1683               	bsf	3,5	;RP0=1, select bank1
  1110  031F  1303               	bcf	3,6	;RP1=0, select bank1
  1111  0320  00A0               	movwf	??_main^(0+128)
  1112  0321  0820               	movf	??_main^(0+128),w
  1113  0322  00AE               	movwf	(main@rtc^(0+128)+2)
  1114                           
  1115                           ;main.c: 52: rtc.min = 0x40;
  1116  0323  3040               	movlw	64
  1117  0324  00A0               	movwf	??_main^(0+128)
  1118  0325  0820               	movf	??_main^(0+128),w
  1119  0326  00AD               	movwf	(main@rtc^(0+128)+1)
  1120                           
  1121                           ;main.c: 53: rtc.sec = 0x00;
  1122  0327  01AC               	clrf	main@rtc^(0+128)
  1123                           
  1124                           ;main.c: 55: rtc.date = 0x01;
  1125  0328  01B0               	clrf	(main@rtc^(0+128)+4)
  1126  0329  0AB0               	incf	(main@rtc^(0+128)+4),f
  1127                           
  1128                           ;main.c: 56: rtc.month = 0x01;
  1129  032A  01B1               	clrf	(main@rtc^(0+128)+5)
  1130  032B  0AB1               	incf	(main@rtc^(0+128)+5),f
  1131                           
  1132                           ;main.c: 57: rtc.year = 0x16;
  1133  032C  3016               	movlw	22
  1134  032D  00A0               	movwf	??_main^(0+128)
  1135  032E  0820               	movf	??_main^(0+128),w
  1136  032F  00B2               	movwf	(main@rtc^(0+128)+6)
  1137                           
  1138                           ;main.c: 58: rtc.weekDay = 5;
  1139  0330  3005               	movlw	5
  1140  0331  00A0               	movwf	??_main^(0+128)
  1141  0332  0820               	movf	??_main^(0+128),w
  1142  0333  00AF               	movwf	(main@rtc^(0+128)+3)
  1143                           
  1144                           ;main.c: 65: RTC_SetDateTime(&rtc);
  1145  0334  30AC               	movlw	(low (main@rtc| 0))& (0+255)
  1146  0335  120A  158A  235E  120A  118A  	fcall	_RTC_SetDateTime
  1147  033A                     l2641:	
  1148                           ;main.c: 69: while(1)
  1149                           
  1150                           
  1151                           ;main.c: 70: {
  1152                           ;main.c: 71: RTC_GetDateTime(&rtc);
  1153  033A  30AC               	movlw	(low (main@rtc| 0))& (0+255)
  1154  033B  120A  158A  24F7  120A  118A  	fcall	_RTC_GetDateTime
  1155                           
  1156                           ;main.c: 72: LCD_GoToLine(0);
  1157  0340  3000               	movlw	0
  1158  0341  120A  158A  20D3  120A  118A  	fcall	_LCD_GoToLine
  1159                           
  1160                           ;main.c: 73: LCD_Printf("time:%2x:%2x:%2x  \nDate:%2x/%2x/%2x",(uint16_t)rtc.hour,(uint1
      +                          6_t)rtc.min,(uint16_t)rtc.sec,(uint16_t)rtc.date,(uint16_t)rtc.month,(uint16_t)rtc.year)
      +                          ;
  1161  0346  1683               	bsf	3,5	;RP0=1, select bank1
  1162  0347  1303               	bcf	3,6	;RP1=0, select bank1
  1163  0348  082E               	movf	(main@rtc^(0+128)+2),w
  1164  0349  00A0               	movwf	??_main^(0+128)
  1165  034A  01A1               	clrf	(??_main^(0+128)+1)
  1166  034B  0820               	movf	??_main^(0+128),w
  1167  034C  1283               	bcf	3,5	;RP0=0, select bank0
  1168  034D  1303               	bcf	3,6	;RP1=0, select bank0
  1169  034E  00CB               	movwf	?_LCD_Printf
  1170  034F  1683               	bsf	3,5	;RP0=1, select bank1
  1171  0350  1303               	bcf	3,6	;RP1=0, select bank1
  1172  0351  0821               	movf	(??_main+1)^(0+128),w
  1173  0352  1283               	bcf	3,5	;RP0=0, select bank0
  1174  0353  1303               	bcf	3,6	;RP1=0, select bank0
  1175  0354  00CC               	movwf	?_LCD_Printf+1
  1176  0355  1683               	bsf	3,5	;RP0=1, select bank1
  1177  0356  1303               	bcf	3,6	;RP1=0, select bank1
  1178  0357  082D               	movf	(main@rtc^(0+128)+1),w
  1179  0358  00A2               	movwf	(??_main+2)^(0+128)
  1180  0359  01A3               	clrf	((??_main+2)^(0+128)+1)
  1181  035A  0822               	movf	(??_main+2)^(0+128),w
  1182  035B  1283               	bcf	3,5	;RP0=0, select bank0
  1183  035C  1303               	bcf	3,6	;RP1=0, select bank0
  1184  035D  00CD               	movwf	?_LCD_Printf+2
  1185  035E  1683               	bsf	3,5	;RP0=1, select bank1
  1186  035F  1303               	bcf	3,6	;RP1=0, select bank1
  1187  0360  0823               	movf	(??_main+3)^(0+128),w
  1188  0361  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0362  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0363  00CE               	movwf	?_LCD_Printf+3
  1191  0364  1683               	bsf	3,5	;RP0=1, select bank1
  1192  0365  1303               	bcf	3,6	;RP1=0, select bank1
  1193  0366  082C               	movf	main@rtc^(0+128),w
  1194  0367  00A4               	movwf	(??_main+4)^(0+128)
  1195  0368  01A5               	clrf	((??_main+4)^(0+128)+1)
  1196  0369  0824               	movf	(??_main+4)^(0+128),w
  1197  036A  1283               	bcf	3,5	;RP0=0, select bank0
  1198  036B  1303               	bcf	3,6	;RP1=0, select bank0
  1199  036C  00CF               	movwf	?_LCD_Printf+4
  1200  036D  1683               	bsf	3,5	;RP0=1, select bank1
  1201  036E  1303               	bcf	3,6	;RP1=0, select bank1
  1202  036F  0825               	movf	(??_main+5)^(0+128),w
  1203  0370  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0371  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0372  00D0               	movwf	?_LCD_Printf+5
  1206  0373  1683               	bsf	3,5	;RP0=1, select bank1
  1207  0374  1303               	bcf	3,6	;RP1=0, select bank1
  1208  0375  0830               	movf	(main@rtc^(0+128)+4),w
  1209  0376  00A6               	movwf	(??_main+6)^(0+128)
  1210  0377  01A7               	clrf	((??_main+6)^(0+128)+1)
  1211  0378  0826               	movf	(??_main+6)^(0+128),w
  1212  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1213  037A  1303               	bcf	3,6	;RP1=0, select bank0
  1214  037B  00D1               	movwf	?_LCD_Printf+6
  1215  037C  1683               	bsf	3,5	;RP0=1, select bank1
  1216  037D  1303               	bcf	3,6	;RP1=0, select bank1
  1217  037E  0827               	movf	(??_main+7)^(0+128),w
  1218  037F  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0380  1303               	bcf	3,6	;RP1=0, select bank0
  1220  0381  00D2               	movwf	?_LCD_Printf+7
  1221  0382  1683               	bsf	3,5	;RP0=1, select bank1
  1222  0383  1303               	bcf	3,6	;RP1=0, select bank1
  1223  0384  0831               	movf	(main@rtc^(0+128)+5),w
  1224  0385  00A8               	movwf	(??_main+8)^(0+128)
  1225  0386  01A9               	clrf	((??_main+8)^(0+128)+1)
  1226  0387  0828               	movf	(??_main+8)^(0+128),w
  1227  0388  1283               	bcf	3,5	;RP0=0, select bank0
  1228  0389  1303               	bcf	3,6	;RP1=0, select bank0
  1229  038A  00D3               	movwf	?_LCD_Printf+8
  1230  038B  1683               	bsf	3,5	;RP0=1, select bank1
  1231  038C  1303               	bcf	3,6	;RP1=0, select bank1
  1232  038D  0829               	movf	(??_main+9)^(0+128),w
  1233  038E  1283               	bcf	3,5	;RP0=0, select bank0
  1234  038F  1303               	bcf	3,6	;RP1=0, select bank0
  1235  0390  00D4               	movwf	?_LCD_Printf+9
  1236  0391  1683               	bsf	3,5	;RP0=1, select bank1
  1237  0392  1303               	bcf	3,6	;RP1=0, select bank1
  1238  0393  0832               	movf	(main@rtc^(0+128)+6),w
  1239  0394  00AA               	movwf	(??_main+10)^(0+128)
  1240  0395  01AB               	clrf	((??_main+10)^(0+128)+1)
  1241  0396  082A               	movf	(??_main+10)^(0+128),w
  1242  0397  1283               	bcf	3,5	;RP0=0, select bank0
  1243  0398  1303               	bcf	3,6	;RP1=0, select bank0
  1244  0399  00D5               	movwf	?_LCD_Printf+10
  1245  039A  1683               	bsf	3,5	;RP0=1, select bank1
  1246  039B  1303               	bcf	3,6	;RP1=0, select bank1
  1247  039C  082B               	movf	(??_main+11)^(0+128),w
  1248  039D  1283               	bcf	3,5	;RP0=0, select bank0
  1249  039E  1303               	bcf	3,6	;RP1=0, select bank0
  1250  039F  00D6               	movwf	?_LCD_Printf+11
  1251  03A0  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1252  03A1  120A  118A  25A2  120A  118A  	fcall	_LCD_Printf
  1253  03A6  2B3A               	goto	l2641
  1254  03A7                     __end_of_main:	
  1255                           ;main.c: 74: }
  1256                           ;main.c: 76: return (0);
  1257                           ;	Return value of _main is never used
  1258                           
  1259                           
  1260                           	psect	text1
  1261  0B5E                     __ptext1:	
  1262 ;; *************** function _RTC_SetDateTime *****************
  1263 ;; Defined at:
  1264 ;;		line 95 in file "../00-libfiles/rtc.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  rtc             1    wreg     PTR struct .
  1267 ;;		 -> main@rtc(7), 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  rtc             1    1[COMMON] PTR struct .
  1270 ;;		 -> main@rtc(7), 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1280 ;;      Params:         0       0       0       0       0
  1281 ;;      Locals:         1       0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0
  1283 ;;      Totals:         1       0       0       0       0
  1284 ;;Total ram usage:        1 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    2
  1287 ;; This function calls:
  1288 ;;		_I2C_Start
  1289 ;;		_I2C_Stop
  1290 ;;		_I2C_Write
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           
  1297                           ;psect for function _RTC_SetDateTime
  1298  0B5E                     _RTC_SetDateTime:	
  1299                           
  1300                           ;incstack = 0
  1301                           ; Regs used in _RTC_SetDateTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1302                           ;RTC_SetDateTime@rtc stored from wreg
  1303  0B5E  00F1               	movwf	RTC_SetDateTime@rtc
  1304                           
  1305                           ;rtc.c: 97: I2C_Start();
  1306  0B5F  120A  158A  204C  120A  158A  	fcall	_I2C_Start
  1307                           
  1308                           ;rtc.c: 99: I2C_Write(0xD0u);
  1309  0B64  30D0               	movlw	208
  1310  0B65  120A  158A  2091  120A  158A  	fcall	_I2C_Write
  1311                           
  1312                           ;rtc.c: 100: I2C_Write(0x00u);
  1313  0B6A  3000               	movlw	0
  1314  0B6B  120A  158A  2091  120A  158A  	fcall	_I2C_Write
  1315                           
  1316                           ;rtc.c: 102: I2C_Write(rtc->sec);
  1317  0B70  0871               	movf	RTC_SetDateTime@rtc,w
  1318  0B71  0084               	movwf	4
  1319  0B72  1383               	bcf	3,7	;select IRP bank0
  1320  0B73  0800               	movf	0,w
  1321  0B74  120A  158A  2091  120A  158A  	fcall	_I2C_Write
  1322                           
  1323                           ;rtc.c: 103: I2C_Write(rtc->min);
  1324  0B79  0A71               	incf	RTC_SetDateTime@rtc,w
  1325  0B7A  0084               	movwf	4
  1326  0B7B  1383               	bcf	3,7	;select IRP bank0
  1327  0B7C  0800               	movf	0,w
  1328  0B7D  120A  158A  2091  120A  158A  	fcall	_I2C_Write
  1329                           
  1330                           ;rtc.c: 104: I2C_Write(rtc->hour);
  1331  0B82  0871               	movf	RTC_SetDateTime@rtc,w
  1332  0B83  3E02               	addlw	2
  1333  0B84  0084               	movwf	4
  1334  0B85  1383               	bcf	3,7	;select IRP bank0
  1335  0B86  0800               	movf	0,w
  1336  0B87  120A  158A  2091  120A  158A  	fcall	_I2C_Write
  1337                           
  1338                           ;rtc.c: 105: I2C_Write(rtc->weekDay);
  1339  0B8C  0871               	movf	RTC_SetDateTime@rtc,w
  1340  0B8D  3E03               	addlw	3
  1341  0B8E  0084               	movwf	4
  1342  0B8F  1383               	bcf	3,7	;select IRP bank0
  1343  0B90  0800               	movf	0,w
  1344  0B91  120A  158A  2091  120A  158A  	fcall	_I2C_Write
  1345                           
  1346                           ;rtc.c: 106: I2C_Write(rtc->date);
  1347  0B96  0871               	movf	RTC_SetDateTime@rtc,w
  1348  0B97  3E04               	addlw	4
  1349  0B98  0084               	movwf	4
  1350  0B99  1383               	bcf	3,7	;select IRP bank0
  1351  0B9A  0800               	movf	0,w
  1352  0B9B  120A  158A  2091  120A  158A  	fcall	_I2C_Write
  1353                           
  1354                           ;rtc.c: 107: I2C_Write(rtc->month);
  1355  0BA0  0871               	movf	RTC_SetDateTime@rtc,w
  1356  0BA1  3E05               	addlw	5
  1357  0BA2  0084               	movwf	4
  1358  0BA3  1383               	bcf	3,7	;select IRP bank0
  1359  0BA4  0800               	movf	0,w
  1360  0BA5  120A  158A  2091  120A  158A  	fcall	_I2C_Write
  1361                           
  1362                           ;rtc.c: 108: I2C_Write(rtc->year);
  1363  0BAA  0871               	movf	RTC_SetDateTime@rtc,w
  1364  0BAB  3E06               	addlw	6
  1365  0BAC  0084               	movwf	4
  1366  0BAD  1383               	bcf	3,7	;select IRP bank0
  1367  0BAE  0800               	movf	0,w
  1368  0BAF  120A  158A  2091  120A  158A  	fcall	_I2C_Write
  1369                           
  1370                           ;rtc.c: 110: I2C_Stop();
  1371  0BB4  120A  158A  2052   	fcall	_I2C_Stop
  1372  0BB7  0008               	return
  1373  0BB8                     __end_of_RTC_SetDateTime:	
  1374                           
  1375                           	psect	text2
  1376  093B                     __ptext2:	
  1377 ;; *************** function _RTC_Init *****************
  1378 ;; Defined at:
  1379 ;;		line 57 in file "../00-libfiles/rtc.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, pclath, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1393 ;;      Params:         0       0       0       0       0
  1394 ;;      Locals:         0       0       0       0       0
  1395 ;;      Temps:          0       0       0       0       0
  1396 ;;      Totals:         0       0       0       0       0
  1397 ;;Total ram usage:        0 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    2
  1400 ;; This function calls:
  1401 ;;		_I2C_Init
  1402 ;;		_I2C_Start
  1403 ;;		_I2C_Stop
  1404 ;;		_I2C_Write
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           
  1411                           ;psect for function _RTC_Init
  1412  093B                     _RTC_Init:	
  1413                           
  1414                           ;rtc.c: 59: I2C_Init();
  1415                           
  1416                           ;incstack = 0
  1417                           ; Regs used in _RTC_Init: [wreg+status,2+status,0+pclath+cstack]
  1418  093B  120A  158A  209E  120A  158A  	fcall	_I2C_Init
  1419                           
  1420                           ;rtc.c: 60: I2C_Start();
  1421  0940  120A  158A  204C  120A  158A  	fcall	_I2C_Start
  1422                           
  1423                           ;rtc.c: 62: I2C_Write(0xD0u);
  1424  0945  30D0               	movlw	208
  1425  0946  120A  158A  2091  120A  158A  	fcall	_I2C_Write
  1426                           
  1427                           ;rtc.c: 63: I2C_Write(0x07u);
  1428  094B  3007               	movlw	7
  1429  094C  120A  158A  2091  120A  158A  	fcall	_I2C_Write
  1430                           
  1431                           ;rtc.c: 65: I2C_Write(0x00);
  1432  0951  3000               	movlw	0
  1433  0952  120A  158A  2091  120A  158A  	fcall	_I2C_Write
  1434                           
  1435                           ;rtc.c: 67: I2C_Stop();
  1436  0957  120A  158A  2052   	fcall	_I2C_Stop
  1437  095A  0008               	return
  1438  095B                     __end_of_RTC_Init:	
  1439                           
  1440                           	psect	text3
  1441  089E                     __ptext3:	
  1442 ;; *************** function _I2C_Init *****************
  1443 ;; Defined at:
  1444 ;;		line 87 in file "../00-libfiles/i2c.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1458 ;;      Params:         0       0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0
  1461 ;;      Totals:         0       0       0       0       0
  1462 ;;Total ram usage:        0 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; This function calls:
  1465 ;;		Nothing
  1466 ;; This function is called by:
  1467 ;;		_RTC_Init
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function _I2C_Init
  1473  089E                     _I2C_Init:	
  1474                           
  1475                           ;i2c.c: 89: TRISC3 = 0x01u;
  1476                           
  1477                           ;incstack = 0
  1478                           ; Regs used in _I2C_Init: [wreg]
  1479  089E  1683               	bsf	3,5	;RP0=1, select bank1
  1480  089F  1303               	bcf	3,6	;RP1=0, select bank1
  1481  08A0  1587               	bsf	7,3	;volatile
  1482                           
  1483                           ;i2c.c: 90: TRISC4 = 0x01u;
  1484  08A1  1607               	bsf	7,4	;volatile
  1485                           
  1486                           ;i2c.c: 92: SSPSTAT |= 0x80;
  1487  08A2  1794               	bsf	20,7	;volatile
  1488                           
  1489                           ;i2c.c: 93: SSPCON = 0x28;
  1490  08A3  3028               	movlw	40
  1491  08A4  1283               	bcf	3,5	;RP0=0, select bank0
  1492  08A5  1303               	bcf	3,6	;RP1=0, select bank0
  1493  08A6  0094               	movwf	20	;volatile
  1494                           
  1495                           ;i2c.c: 94: SSPADD = 50;
  1496  08A7  3032               	movlw	50
  1497  08A8  1683               	bsf	3,5	;RP0=1, select bank1
  1498  08A9  1303               	bcf	3,6	;RP1=0, select bank1
  1499  08AA  0093               	movwf	19	;volatile
  1500  08AB  0008               	return
  1501  08AC                     __end_of_I2C_Init:	
  1502                           
  1503                           	psect	text4
  1504  0CF7                     __ptext4:	
  1505 ;; *************** function _RTC_GetDateTime *****************
  1506 ;; Defined at:
  1507 ;;		line 131 in file "../00-libfiles/rtc.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  rtc             1    wreg     PTR struct .
  1510 ;;		 -> main@rtc(7), 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  rtc             1    4[COMMON] PTR struct .
  1513 ;;		 -> main@rtc(7), 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1523 ;;      Params:         0       0       0       0       0
  1524 ;;      Locals:         1       0       0       0       0
  1525 ;;      Temps:          1       0       0       0       0
  1526 ;;      Totals:         2       0       0       0       0
  1527 ;;Total ram usage:        2 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; Hardware stack levels required when called:    2
  1530 ;; This function calls:
  1531 ;;		_I2C_Read
  1532 ;;		_I2C_Start
  1533 ;;		_I2C_Stop
  1534 ;;		_I2C_Write
  1535 ;; This function is called by:
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _RTC_GetDateTime
  1542  0CF7                     _RTC_GetDateTime:	
  1543                           
  1544                           ;incstack = 0
  1545                           ; Regs used in _RTC_GetDateTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1546                           ;RTC_GetDateTime@rtc stored from wreg
  1547  0CF7  00F4               	movwf	RTC_GetDateTime@rtc
  1548                           
  1549                           ;rtc.c: 133: I2C_Start();
  1550  0CF8  120A  158A  204C  120A  158A  	fcall	_I2C_Start
  1551                           
  1552                           ;rtc.c: 135: I2C_Write(0xD0u);
  1553  0CFD  30D0               	movlw	208
  1554  0CFE  120A  158A  2091  120A  158A  	fcall	_I2C_Write
  1555                           
  1556                           ;rtc.c: 136: I2C_Write(0x00u);
  1557  0D03  3000               	movlw	0
  1558  0D04  120A  158A  2091  120A  158A  	fcall	_I2C_Write
  1559                           
  1560                           ;rtc.c: 138: I2C_Stop();
  1561  0D09  120A  158A  2052  120A  158A  	fcall	_I2C_Stop
  1562                           
  1563                           ;rtc.c: 140: I2C_Start();
  1564  0D0E  120A  158A  204C  120A  158A  	fcall	_I2C_Start
  1565                           
  1566                           ;rtc.c: 141: I2C_Write(0xD1u);
  1567  0D13  30D1               	movlw	209
  1568  0D14  120A  158A  2091  120A  158A  	fcall	_I2C_Write
  1569                           
  1570                           ;rtc.c: 143: rtc->sec = I2C_Read(1);
  1571  0D19  3001               	movlw	1
  1572  0D1A  120A  158A  211B  120A  158A  	fcall	_I2C_Read
  1573  0D1F  00F3               	movwf	??_RTC_GetDateTime
  1574  0D20  0874               	movf	RTC_GetDateTime@rtc,w
  1575  0D21  0084               	movwf	4
  1576  0D22  0873               	movf	??_RTC_GetDateTime,w
  1577  0D23  1383               	bcf	3,7	;select IRP bank0
  1578  0D24  0080               	movwf	0
  1579                           
  1580                           ;rtc.c: 144: rtc->min = I2C_Read(1);
  1581  0D25  3001               	movlw	1
  1582  0D26  120A  158A  211B  120A  158A  	fcall	_I2C_Read
  1583  0D2B  00F3               	movwf	??_RTC_GetDateTime
  1584  0D2C  0A74               	incf	RTC_GetDateTime@rtc,w
  1585  0D2D  0084               	movwf	4
  1586  0D2E  0873               	movf	??_RTC_GetDateTime,w
  1587  0D2F  1383               	bcf	3,7	;select IRP bank0
  1588  0D30  0080               	movwf	0
  1589                           
  1590                           ;rtc.c: 145: rtc->hour= I2C_Read(1);
  1591  0D31  3001               	movlw	1
  1592  0D32  120A  158A  211B  120A  158A  	fcall	_I2C_Read
  1593  0D37  00F3               	movwf	??_RTC_GetDateTime
  1594  0D38  0874               	movf	RTC_GetDateTime@rtc,w
  1595  0D39  3E02               	addlw	2
  1596  0D3A  0084               	movwf	4
  1597  0D3B  0873               	movf	??_RTC_GetDateTime,w
  1598  0D3C  1383               	bcf	3,7	;select IRP bank0
  1599  0D3D  0080               	movwf	0
  1600                           
  1601                           ;rtc.c: 146: rtc->weekDay = I2C_Read(1);
  1602  0D3E  3001               	movlw	1
  1603  0D3F  120A  158A  211B  120A  158A  	fcall	_I2C_Read
  1604  0D44  00F3               	movwf	??_RTC_GetDateTime
  1605  0D45  0874               	movf	RTC_GetDateTime@rtc,w
  1606  0D46  3E03               	addlw	3
  1607  0D47  0084               	movwf	4
  1608  0D48  0873               	movf	??_RTC_GetDateTime,w
  1609  0D49  1383               	bcf	3,7	;select IRP bank0
  1610  0D4A  0080               	movwf	0
  1611                           
  1612                           ;rtc.c: 147: rtc->date= I2C_Read(1);
  1613  0D4B  3001               	movlw	1
  1614  0D4C  120A  158A  211B  120A  158A  	fcall	_I2C_Read
  1615  0D51  00F3               	movwf	??_RTC_GetDateTime
  1616  0D52  0874               	movf	RTC_GetDateTime@rtc,w
  1617  0D53  3E04               	addlw	4
  1618  0D54  0084               	movwf	4
  1619  0D55  0873               	movf	??_RTC_GetDateTime,w
  1620  0D56  1383               	bcf	3,7	;select IRP bank0
  1621  0D57  0080               	movwf	0
  1622                           
  1623                           ;rtc.c: 148: rtc->month=I2C_Read(1);
  1624  0D58  3001               	movlw	1
  1625  0D59  120A  158A  211B  120A  158A  	fcall	_I2C_Read
  1626  0D5E  00F3               	movwf	??_RTC_GetDateTime
  1627  0D5F  0874               	movf	RTC_GetDateTime@rtc,w
  1628  0D60  3E05               	addlw	5
  1629  0D61  0084               	movwf	4
  1630  0D62  0873               	movf	??_RTC_GetDateTime,w
  1631  0D63  1383               	bcf	3,7	;select IRP bank0
  1632  0D64  0080               	movwf	0
  1633                           
  1634                           ;rtc.c: 149: rtc->year =I2C_Read(0);
  1635  0D65  3000               	movlw	0
  1636  0D66  120A  158A  211B  120A  158A  	fcall	_I2C_Read
  1637  0D6B  00F3               	movwf	??_RTC_GetDateTime
  1638  0D6C  0874               	movf	RTC_GetDateTime@rtc,w
  1639  0D6D  3E06               	addlw	6
  1640  0D6E  0084               	movwf	4
  1641  0D6F  0873               	movf	??_RTC_GetDateTime,w
  1642  0D70  1383               	bcf	3,7	;select IRP bank0
  1643  0D71  0080               	movwf	0
  1644                           
  1645                           ;rtc.c: 151: I2C_Stop();
  1646  0D72  120A  158A  2052   	fcall	_I2C_Stop
  1647  0D75  0008               	return
  1648  0D76                     __end_of_RTC_GetDateTime:	
  1649                           
  1650                           	psect	text5
  1651  0891                     __ptext5:	
  1652 ;; *************** function _I2C_Write *****************
  1653 ;; Defined at:
  1654 ;;		line 179 in file "../00-libfiles/i2c.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  v_i2cData_u8    1    wreg     unsigned char 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  v_i2cData_u8    1    0[COMMON] unsigned char 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0, pclath, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1668 ;;      Params:         0       0       0       0       0
  1669 ;;      Locals:         1       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0
  1671 ;;      Totals:         1       0       0       0       0
  1672 ;;Total ram usage:        1 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    1
  1675 ;; This function calls:
  1676 ;;		_i2c_WaitForIdle
  1677 ;; This function is called by:
  1678 ;;		_RTC_Init
  1679 ;;		_RTC_SetDateTime
  1680 ;;		_RTC_GetDateTime
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           
  1685                           ;psect for function _I2C_Write
  1686  0891                     _I2C_Write:	
  1687                           
  1688                           ;incstack = 0
  1689                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  1690                           ;I2C_Write@v_i2cData_u8 stored from wreg
  1691  0891  00F0               	movwf	I2C_Write@v_i2cData_u8
  1692                           
  1693                           ;i2c.c: 183: SSPBUF = v_i2cData_u8;
  1694  0892  0870               	movf	I2C_Write@v_i2cData_u8,w
  1695  0893  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0894  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0895  0093               	movwf	19	;volatile
  1698  0896                     l160:	
  1699                           ;i2c.c: 184: while(BF==1);
  1700                           
  1701  0896  1683               	bsf	3,5	;RP0=1, select bank1
  1702  0897  1303               	bcf	3,6	;RP1=0, select bank1
  1703  0898  1814               	btfsc	20,0	;volatile
  1704  0899  2896               	goto	l160
  1705                           
  1706                           ;i2c.c: 185: i2c_WaitForIdle();
  1707  089A  120A  158A  2086   	fcall	_i2c_WaitForIdle
  1708  089D  0008               	return
  1709  089E                     __end_of_I2C_Write:	
  1710                           
  1711                           	psect	text6
  1712  0852                     __ptext6:	
  1713 ;; *************** function _I2C_Stop *****************
  1714 ;; Defined at:
  1715 ;;		line 147 in file "../00-libfiles/i2c.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		None
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1729 ;;      Params:         0       0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0
  1732 ;;      Totals:         0       0       0       0       0
  1733 ;;Total ram usage:        0 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_RTC_Init
  1739 ;;		_RTC_SetDateTime
  1740 ;;		_RTC_GetDateTime
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           
  1745                           ;psect for function _I2C_Stop
  1746  0852                     _I2C_Stop:	
  1747                           
  1748                           ;i2c.c: 149: PEN = 1;
  1749                           
  1750                           ;incstack = 0
  1751                           ; Regs used in _I2C_Stop: []
  1752  0852  1683               	bsf	3,5	;RP0=1, select bank1
  1753  0853  1303               	bcf	3,6	;RP1=0, select bank1
  1754  0854  1511               	bsf	17,2	;volatile
  1755  0855                     l154:	
  1756                           ;i2c.c: 150: while(PEN == 1);
  1757                           
  1758  0855  1D11               	btfss	17,2	;volatile
  1759  0856  0008               	return
  1760  0857  2855               	goto	l154
  1761  0858                     __end_of_I2C_Stop:	
  1762                           
  1763                           	psect	text7
  1764  084C                     __ptext7:	
  1765 ;; *************** function _I2C_Start *****************
  1766 ;; Defined at:
  1767 ;;		line 118 in file "../00-libfiles/i2c.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		None
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1781 ;;      Params:         0       0       0       0       0
  1782 ;;      Locals:         0       0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0
  1784 ;;      Totals:         0       0       0       0       0
  1785 ;;Total ram usage:        0 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; This function calls:
  1788 ;;		Nothing
  1789 ;; This function is called by:
  1790 ;;		_RTC_Init
  1791 ;;		_RTC_SetDateTime
  1792 ;;		_RTC_GetDateTime
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _I2C_Start
  1798  084C                     _I2C_Start:	
  1799                           
  1800                           ;i2c.c: 120: SEN = 1;
  1801                           
  1802                           ;incstack = 0
  1803                           ; Regs used in _I2C_Start: []
  1804  084C  1683               	bsf	3,5	;RP0=1, select bank1
  1805  084D  1303               	bcf	3,6	;RP1=0, select bank1
  1806  084E  1411               	bsf	17,0	;volatile
  1807  084F                     l148:	
  1808                           ;i2c.c: 121: while(SEN == 1);
  1809                           
  1810  084F  1C11               	btfss	17,0	;volatile
  1811  0850  0008               	return
  1812  0851  284F               	goto	l148
  1813  0852                     __end_of_I2C_Start:	
  1814                           
  1815                           	psect	text8
  1816  091B                     __ptext8:	
  1817 ;; *************** function _I2C_Read *****************
  1818 ;; Defined at:
  1819 ;;		line 214 in file "../00-libfiles/i2c.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  v_ackOption_    1    wreg     unsigned char 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  v_ackOption_    1    1[COMMON] unsigned char 
  1824 ;;  v_i2cData_u8    1    2[COMMON] unsigned char 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      unsigned char 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0, pclath, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1834 ;;      Params:         0       0       0       0       0
  1835 ;;      Locals:         2       0       0       0       0
  1836 ;;      Temps:          1       0       0       0       0
  1837 ;;      Totals:         3       0       0       0       0
  1838 ;;Total ram usage:        3 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    1
  1841 ;; This function calls:
  1842 ;;		_i2c_Ack
  1843 ;;		_i2c_NoAck
  1844 ;;		_i2c_WaitForIdle
  1845 ;; This function is called by:
  1846 ;;		_RTC_GetDateTime
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           
  1851                           ;psect for function _I2C_Read
  1852  091B                     _I2C_Read:	
  1853                           
  1854                           ;incstack = 0
  1855                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  1856                           ;I2C_Read@v_ackOption_u8 stored from wreg
  1857  091B  00F1               	movwf	I2C_Read@v_ackOption_u8
  1858                           
  1859                           ;i2c.c: 216: uint8_t v_i2cData_u8=0x00;
  1860  091C  01F2               	clrf	I2C_Read@v_i2cData_u8
  1861                           
  1862                           ;i2c.c: 218: RCEN = 1;
  1863  091D  1683               	bsf	3,5	;RP0=1, select bank1
  1864  091E  1303               	bcf	3,6	;RP1=0, select bank1
  1865  091F  1591               	bsf	17,3	;volatile
  1866  0920                     l166:	
  1867                           ;i2c.c: 219: while(BF==0);
  1868                           
  1869  0920  1C14               	btfss	20,0	;volatile
  1870  0921  2920               	goto	l166
  1871                           
  1872                           ;i2c.c: 220: v_i2cData_u8 = SSPBUF;
  1873  0922  1283               	bcf	3,5	;RP0=0, select bank0
  1874  0923  1303               	bcf	3,6	;RP1=0, select bank0
  1875  0924  0813               	movf	19,w	;volatile
  1876  0925  00F0               	movwf	??_I2C_Read
  1877  0926  0870               	movf	??_I2C_Read,w
  1878  0927  00F2               	movwf	I2C_Read@v_i2cData_u8
  1879                           
  1880                           ;i2c.c: 221: i2c_WaitForIdle();
  1881  0928  120A  158A  2086  120A  158A  	fcall	_i2c_WaitForIdle
  1882                           
  1883                           ;i2c.c: 223: if(v_ackOption_u8==1)
  1884  092D  0371               	decf	I2C_Read@v_ackOption_u8,w
  1885  092E  1D03               	btfss	3,2
  1886  092F  2936               	goto	l2315
  1887                           
  1888                           ;i2c.c: 224: {
  1889                           ;i2c.c: 225: i2c_Ack();
  1890  0930  120A  158A  2058  120A  158A  	fcall	_i2c_Ack
  1891                           
  1892                           ;i2c.c: 226: }
  1893  0935  2939               	goto	l2317
  1894  0936                     l2315:	
  1895                           
  1896                           ;i2c.c: 227: else
  1897                           ;i2c.c: 228: {
  1898                           ;i2c.c: 229: i2c_NoAck();
  1899  0936  120A  158A  205F   	fcall	_i2c_NoAck
  1900  0939                     l2317:	
  1901                           
  1902                           ;i2c.c: 230: }
  1903                           ;i2c.c: 232: return v_i2cData_u8;
  1904  0939  0872               	movf	I2C_Read@v_i2cData_u8,w
  1905  093A  0008               	return
  1906  093B                     __end_of_I2C_Read:	
  1907                           
  1908                           	psect	text9
  1909  0886                     __ptext9:	
  1910 ;; *************** function _i2c_WaitForIdle *****************
  1911 ;; Defined at:
  1912 ;;		line 258 in file "../00-libfiles/i2c.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;		None
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;		None
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      void 
  1919 ;; Registers used:
  1920 ;;		None
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1926 ;;      Params:         0       0       0       0       0
  1927 ;;      Locals:         0       0       0       0       0
  1928 ;;      Temps:          0       0       0       0       0
  1929 ;;      Totals:         0       0       0       0       0
  1930 ;;Total ram usage:        0 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; This function calls:
  1933 ;;		Nothing
  1934 ;; This function is called by:
  1935 ;;		_I2C_Write
  1936 ;;		_I2C_Read
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           
  1941                           ;psect for function _i2c_WaitForIdle
  1942  0886                     _i2c_WaitForIdle:	
  1943  0886                     l174:	
  1944                           ;i2c.c: 260: while ( (SEN == 1) || (RSEN == 1) || (PEN == 1) || (RCEN == 1) || (R_W == 1
      +                          ) );
  1945                           
  1946                           ;incstack = 0
  1947                           ; Regs used in _i2c_WaitForIdle: []
  1948                           
  1949  0886  1683               	bsf	3,5	;RP0=1, select bank1
  1950  0887  1303               	bcf	3,6	;RP1=0, select bank1
  1951  0888  1C11               	btfss	17,0	;volatile
  1952  0889  1891               	btfsc	17,1	;volatile
  1953  088A  2886               	goto	l174
  1954  088B  1D11               	btfss	17,2	;volatile
  1955  088C  1991               	btfsc	17,3	;volatile
  1956  088D  2886               	goto	l174
  1957  088E  1D14               	btfss	20,2	;volatile
  1958  088F  0008               	return
  1959  0890  2886               	goto	l174
  1960  0891                     __end_of_i2c_WaitForIdle:	
  1961                           
  1962                           	psect	text10
  1963  085F                     __ptext10:	
  1964 ;; *************** function _i2c_NoAck *****************
  1965 ;; Defined at:
  1966 ;;		line 299 in file "../00-libfiles/i2c.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		None
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1980 ;;      Params:         0       0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0
  1983 ;;      Totals:         0       0       0       0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_I2C_Read
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           
  1994                           ;psect for function _i2c_NoAck
  1995  085F                     _i2c_NoAck:	
  1996                           
  1997                           ;i2c.c: 301: ACKDT = 1;
  1998                           
  1999                           ;incstack = 0
  2000                           ; Regs used in _i2c_NoAck: []
  2001  085F  1683               	bsf	3,5	;RP0=1, select bank1
  2002  0860  1303               	bcf	3,6	;RP1=0, select bank1
  2003  0861  1691               	bsf	17,5	;volatile
  2004                           
  2005                           ;i2c.c: 302: ACKEN = 1;
  2006  0862  1611               	bsf	17,4	;volatile
  2007  0863                     l186:	
  2008                           ;i2c.c: 303: while(ACKEN == 1);
  2009                           
  2010  0863  1E11               	btfss	17,4	;volatile
  2011  0864  0008               	return
  2012  0865  2863               	goto	l186
  2013  0866                     __end_of_i2c_NoAck:	
  2014                           
  2015                           	psect	text11
  2016  0858                     __ptext11:	
  2017 ;; *************** function _i2c_Ack *****************
  2018 ;; Defined at:
  2019 ;;		line 279 in file "../00-libfiles/i2c.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;		None
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;		None
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		None
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2033 ;;      Params:         0       0       0       0       0
  2034 ;;      Locals:         0       0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0
  2036 ;;      Totals:         0       0       0       0       0
  2037 ;;Total ram usage:        0 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_I2C_Read
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           
  2047                           ;psect for function _i2c_Ack
  2048  0858                     _i2c_Ack:	
  2049                           
  2050                           ;i2c.c: 281: ACKDT = 0;
  2051                           
  2052                           ;incstack = 0
  2053                           ; Regs used in _i2c_Ack: []
  2054  0858  1683               	bsf	3,5	;RP0=1, select bank1
  2055  0859  1303               	bcf	3,6	;RP1=0, select bank1
  2056  085A  1291               	bcf	17,5	;volatile
  2057                           
  2058                           ;i2c.c: 282: ACKEN = 1;
  2059  085B  1611               	bsf	17,4	;volatile
  2060  085C                     l180:	
  2061                           ;i2c.c: 283: while(ACKEN == 1);
  2062                           
  2063  085C  1E11               	btfss	17,4	;volatile
  2064  085D  0008               	return
  2065  085E  285C               	goto	l180
  2066  085F                     __end_of_i2c_Ack:	
  2067                           
  2068                           	psect	text12
  2069  0033                     __ptext12:	
  2070 ;; *************** function _LCD_SetUp *****************
  2071 ;; Defined at:
  2072 ;;		line 135 in file "../00-libfiles/lcd.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  RS              1    wreg     enum E33
  2075 ;;  RW              1    0[BANK0 ] enum E33
  2076 ;;  EN              1    1[BANK0 ] enum E33
  2077 ;;  D0              1    2[BANK0 ] enum E33
  2078 ;;  D1              1    3[BANK0 ] enum E33
  2079 ;;  D2              1    4[BANK0 ] enum E33
  2080 ;;  D3              1    5[BANK0 ] enum E33
  2081 ;;  D4              1    6[BANK0 ] enum E33
  2082 ;;  D5              1    7[BANK0 ] enum E33
  2083 ;;  D6              1    8[BANK0 ] enum E33
  2084 ;;  D7              1    9[BANK0 ] enum E33
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  RS              1    6[COMMON] enum E33
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2096 ;;      Params:         0      10       0       0       0
  2097 ;;      Locals:         1       0       0       0       0
  2098 ;;      Temps:          1       0       0       0       0
  2099 ;;      Totals:         2      10       0       0       0
  2100 ;;Total ram usage:       12 bytes
  2101 ;; Hardware stack levels used:    1
  2102 ;; Hardware stack levels required when called:    1
  2103 ;; This function calls:
  2104 ;;		_GPIO_PinDirection
  2105 ;; This function is called by:
  2106 ;;		_main
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           
  2111                           ;psect for function _LCD_SetUp
  2112  0033                     _LCD_SetUp:	
  2113                           
  2114                           ;incstack = 0
  2115                           ; Regs used in _LCD_SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2116                           ;LCD_SetUp@RS stored from wreg
  2117  0033  00F6               	movwf	LCD_SetUp@RS
  2118                           
  2119                           ;lcd.c: 148: LCDConfig.RS = RS;
  2120  0034  0876               	movf	LCD_SetUp@RS,w
  2121  0035  00F5               	movwf	??_LCD_SetUp
  2122  0036  0875               	movf	??_LCD_SetUp,w
  2123  0037  1683               	bsf	3,5	;RP0=1, select bank1
  2124  0038  1303               	bcf	3,6	;RP1=0, select bank1
  2125  0039  00B6               	movwf	(_LCDConfig^(0+128)+3)
  2126                           
  2127                           ;lcd.c: 149: LCDConfig.RW = RW;
  2128  003A  1283               	bcf	3,5	;RP0=0, select bank0
  2129  003B  1303               	bcf	3,6	;RP1=0, select bank0
  2130  003C  0820               	movf	LCD_SetUp@RW,w
  2131  003D  00F5               	movwf	??_LCD_SetUp
  2132  003E  0875               	movf	??_LCD_SetUp,w
  2133  003F  1683               	bsf	3,5	;RP0=1, select bank1
  2134  0040  1303               	bcf	3,6	;RP1=0, select bank1
  2135  0041  00B7               	movwf	(_LCDConfig^(0+128)+4)
  2136                           
  2137                           ;lcd.c: 150: LCDConfig.EN = EN;
  2138  0042  1283               	bcf	3,5	;RP0=0, select bank0
  2139  0043  1303               	bcf	3,6	;RP1=0, select bank0
  2140  0044  0821               	movf	LCD_SetUp@EN,w
  2141  0045  00F5               	movwf	??_LCD_SetUp
  2142  0046  0875               	movf	??_LCD_SetUp,w
  2143  0047  1683               	bsf	3,5	;RP0=1, select bank1
  2144  0048  1303               	bcf	3,6	;RP1=0, select bank1
  2145  0049  00B8               	movwf	(_LCDConfig^(0+128)+5)
  2146                           
  2147                           ;lcd.c: 152: LCDConfig.D0 = D0;
  2148  004A  1283               	bcf	3,5	;RP0=0, select bank0
  2149  004B  1303               	bcf	3,6	;RP1=0, select bank0
  2150  004C  0822               	movf	LCD_SetUp@D0,w
  2151  004D  00F5               	movwf	??_LCD_SetUp
  2152  004E  0875               	movf	??_LCD_SetUp,w
  2153  004F  1683               	bsf	3,5	;RP0=1, select bank1
  2154  0050  1303               	bcf	3,6	;RP1=0, select bank1
  2155  0051  00B9               	movwf	(_LCDConfig^(0+128)+6)
  2156                           
  2157                           ;lcd.c: 153: LCDConfig.D1 = D1;
  2158  0052  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0053  1303               	bcf	3,6	;RP1=0, select bank0
  2160  0054  0823               	movf	LCD_SetUp@D1,w
  2161  0055  00F5               	movwf	??_LCD_SetUp
  2162  0056  0875               	movf	??_LCD_SetUp,w
  2163  0057  1683               	bsf	3,5	;RP0=1, select bank1
  2164  0058  1303               	bcf	3,6	;RP1=0, select bank1
  2165  0059  00BA               	movwf	(_LCDConfig^(0+128)+7)
  2166                           
  2167                           ;lcd.c: 154: LCDConfig.D2 = D2;
  2168  005A  1283               	bcf	3,5	;RP0=0, select bank0
  2169  005B  1303               	bcf	3,6	;RP1=0, select bank0
  2170  005C  0824               	movf	LCD_SetUp@D2,w
  2171  005D  00F5               	movwf	??_LCD_SetUp
  2172  005E  0875               	movf	??_LCD_SetUp,w
  2173  005F  1683               	bsf	3,5	;RP0=1, select bank1
  2174  0060  1303               	bcf	3,6	;RP1=0, select bank1
  2175  0061  00BB               	movwf	(_LCDConfig^(0+128)+8)
  2176                           
  2177                           ;lcd.c: 155: LCDConfig.D3 = D3;
  2178  0062  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0063  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0064  0825               	movf	LCD_SetUp@D3,w
  2181  0065  00F5               	movwf	??_LCD_SetUp
  2182  0066  0875               	movf	??_LCD_SetUp,w
  2183  0067  1683               	bsf	3,5	;RP0=1, select bank1
  2184  0068  1303               	bcf	3,6	;RP1=0, select bank1
  2185  0069  00BC               	movwf	(_LCDConfig^(0+128)+9)
  2186                           
  2187                           ;lcd.c: 156: LCDConfig.D4 = D4;
  2188  006A  1283               	bcf	3,5	;RP0=0, select bank0
  2189  006B  1303               	bcf	3,6	;RP1=0, select bank0
  2190  006C  0826               	movf	LCD_SetUp@D4,w
  2191  006D  00F5               	movwf	??_LCD_SetUp
  2192  006E  0875               	movf	??_LCD_SetUp,w
  2193  006F  1683               	bsf	3,5	;RP0=1, select bank1
  2194  0070  1303               	bcf	3,6	;RP1=0, select bank1
  2195  0071  00BD               	movwf	(_LCDConfig^(0+128)+10)
  2196                           
  2197                           ;lcd.c: 157: LCDConfig.D5 = D5;
  2198  0072  1283               	bcf	3,5	;RP0=0, select bank0
  2199  0073  1303               	bcf	3,6	;RP1=0, select bank0
  2200  0074  0827               	movf	LCD_SetUp@D5,w
  2201  0075  00F5               	movwf	??_LCD_SetUp
  2202  0076  0875               	movf	??_LCD_SetUp,w
  2203  0077  1683               	bsf	3,5	;RP0=1, select bank1
  2204  0078  1303               	bcf	3,6	;RP1=0, select bank1
  2205  0079  00BE               	movwf	(_LCDConfig^(0+128)+11)
  2206                           
  2207                           ;lcd.c: 158: LCDConfig.D6 = D6;
  2208  007A  1283               	bcf	3,5	;RP0=0, select bank0
  2209  007B  1303               	bcf	3,6	;RP1=0, select bank0
  2210  007C  0828               	movf	LCD_SetUp@D6,w
  2211  007D  00F5               	movwf	??_LCD_SetUp
  2212  007E  0875               	movf	??_LCD_SetUp,w
  2213  007F  1683               	bsf	3,5	;RP0=1, select bank1
  2214  0080  1303               	bcf	3,6	;RP1=0, select bank1
  2215  0081  00BF               	movwf	(_LCDConfig^(0+128)+12)
  2216                           
  2217                           ;lcd.c: 159: LCDConfig.D7 = D7;
  2218  0082  1283               	bcf	3,5	;RP0=0, select bank0
  2219  0083  1303               	bcf	3,6	;RP1=0, select bank0
  2220  0084  0829               	movf	LCD_SetUp@D7,w
  2221  0085  00F5               	movwf	??_LCD_SetUp
  2222  0086  0875               	movf	??_LCD_SetUp,w
  2223  0087  1683               	bsf	3,5	;RP0=1, select bank1
  2224  0088  1303               	bcf	3,6	;RP1=0, select bank1
  2225  0089  00C0               	movwf	(_LCDConfig^(0+128)+13)
  2226                           
  2227                           ;lcd.c: 162: if((D0 == P_NC) || (D1 == P_NC) || (D2 == P_NC) || (D3 == P_NC))
  2228  008A  1283               	bcf	3,5	;RP0=0, select bank0
  2229  008B  1303               	bcf	3,6	;RP1=0, select bank0
  2230  008C  0A22               	incf	LCD_SetUp@D0,w
  2231  008D  1903               	btfsc	3,2
  2232  008E  2897               	goto	l2367
  2233  008F  0A23               	incf	LCD_SetUp@D1,w
  2234  0090  1903               	btfsc	3,2
  2235  0091  2897               	goto	l2367
  2236  0092  0A24               	incf	LCD_SetUp@D2,w
  2237  0093  1D03               	btfss	3,2
  2238  0094  0A25               	incf	LCD_SetUp@D3,w
  2239  0095  1D03               	btfss	3,2
  2240  0096  289E               	goto	l2369
  2241  0097                     l2367:	
  2242                           
  2243                           ;lcd.c: 163: {
  2244                           ;lcd.c: 164: LCDConfig.v_LcdMode_U8 = 4;
  2245  0097  3004               	movlw	4
  2246  0098  00F5               	movwf	??_LCD_SetUp
  2247  0099  0875               	movf	??_LCD_SetUp,w
  2248  009A  1683               	bsf	3,5	;RP0=1, select bank1
  2249  009B  1303               	bcf	3,6	;RP1=0, select bank1
  2250  009C  00B5               	movwf	(_LCDConfig^(0+128)+2)
  2251                           
  2252                           ;lcd.c: 165: }
  2253  009D  28C8               	goto	l2379
  2254  009E                     l2369:	
  2255                           
  2256                           ;lcd.c: 166: else
  2257                           ;lcd.c: 167: {
  2258                           ;lcd.c: 168: LCDConfig.v_LcdMode_U8 = 8;
  2259  009E  3008               	movlw	8
  2260  009F  00F5               	movwf	??_LCD_SetUp
  2261  00A0  0875               	movf	??_LCD_SetUp,w
  2262  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  2263  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  2264  00A3  00B5               	movwf	(_LCDConfig^(0+128)+2)
  2265                           
  2266                           ;lcd.c: 169: GPIO_PinDirection(D0,0x00u);
  2267  00A4  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2268  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  2269  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  2270  00A7  0822               	movf	LCD_SetUp@D0,w
  2271  00A8  120A  118A  2104  120A  118A  	fcall	_GPIO_PinDirection
  2272                           
  2273                           ;lcd.c: 170: GPIO_PinDirection(D1,0x00u);
  2274  00AD  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2275  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  2276  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  2277  00B0  0823               	movf	LCD_SetUp@D1,w
  2278  00B1  120A  118A  2104  120A  118A  	fcall	_GPIO_PinDirection
  2279                           
  2280                           ;lcd.c: 171: GPIO_PinDirection(D2,0x00u);
  2281  00B6  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2282  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  2283  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  2284  00B9  0824               	movf	LCD_SetUp@D2,w
  2285  00BA  120A  118A  2104  120A  118A  	fcall	_GPIO_PinDirection
  2286                           
  2287                           ;lcd.c: 172: GPIO_PinDirection(D3,0x00u);
  2288  00BF  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2289  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  2290  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  2291  00C2  0825               	movf	LCD_SetUp@D3,w
  2292  00C3  120A  118A  2104  120A  118A  	fcall	_GPIO_PinDirection
  2293  00C8                     l2379:	
  2294                           
  2295                           ;lcd.c: 173: }
  2296                           ;lcd.c: 176: GPIO_PinDirection(RS,0x00u);
  2297  00C8  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2298  00C9  0876               	movf	LCD_SetUp@RS,w
  2299  00CA  120A  118A  2104  120A  118A  	fcall	_GPIO_PinDirection
  2300                           
  2301                           ;lcd.c: 177: GPIO_PinDirection(RW,0x00u);
  2302  00CF  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2303  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  2304  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  2305  00D2  0820               	movf	LCD_SetUp@RW,w
  2306  00D3  120A  118A  2104  120A  118A  	fcall	_GPIO_PinDirection
  2307                           
  2308                           ;lcd.c: 178: GPIO_PinDirection(EN,0x00u);
  2309  00D8  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2310  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  2311  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  2312  00DB  0821               	movf	LCD_SetUp@EN,w
  2313  00DC  120A  118A  2104  120A  118A  	fcall	_GPIO_PinDirection
  2314                           
  2315                           ;lcd.c: 180: GPIO_PinDirection(D4,0x00u);
  2316  00E1  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2317  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  2318  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  2319  00E4  0826               	movf	LCD_SetUp@D4,w
  2320  00E5  120A  118A  2104  120A  118A  	fcall	_GPIO_PinDirection
  2321                           
  2322                           ;lcd.c: 181: GPIO_PinDirection(D5,0x00u);
  2323  00EA  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2324  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  2325  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  2326  00ED  0827               	movf	LCD_SetUp@D5,w
  2327  00EE  120A  118A  2104  120A  118A  	fcall	_GPIO_PinDirection
  2328                           
  2329                           ;lcd.c: 182: GPIO_PinDirection(D6,0x00u);
  2330  00F3  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2331  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  2332  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  2333  00F6  0828               	movf	LCD_SetUp@D6,w
  2334  00F7  120A  118A  2104  120A  118A  	fcall	_GPIO_PinDirection
  2335                           
  2336                           ;lcd.c: 183: GPIO_PinDirection(D7,0x00u);
  2337  00FC  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2338  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  2339  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  2340  00FF  0829               	movf	LCD_SetUp@D7,w
  2341  0100  120A  118A  2104   	fcall	_GPIO_PinDirection
  2342  0103  0008               	return
  2343  0104                     __end_of_LCD_SetUp:	
  2344                           
  2345                           	psect	text13
  2346  05A2                     __ptext13:	
  2347 ;; *************** function _LCD_Printf *****************
  2348 ;; Defined at:
  2349 ;;		line 675 in file "../00-libfiles/lcd.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  argList         1    wreg     PTR const unsigned char 
  2352 ;;		 -> STR_1(36), 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  argList         1   61[BANK0 ] PTR const unsigned char 
  2355 ;;		 -> STR_1(36), 
  2356 ;;  v_num_u32       4   68[BANK0 ] unsigned long 
  2357 ;;  v_num_s32       4   62[BANK0 ] long 
  2358 ;;  v_floatNum_f    3   57[BANK0 ] long 
  2359 ;;  v_num_u16       2   72[BANK0 ] unsigned int 
  2360 ;;  v_num_s16       2   66[BANK0 ] int 
  2361 ;;  argp            1   77[BANK0 ] PTR void [1]
  2362 ;;		 -> ?_LCD_Printf(1), 
  2363 ;;  v_numOfDigit    1   76[BANK0 ] unsigned char 
  2364 ;;  ch              1   75[BANK0 ] unsigned char 
  2365 ;;  ptr             1   74[BANK0 ] PTR const unsigned char 
  2366 ;;		 -> STR_1(36), 
  2367 ;;  str             1   60[BANK0 ] PTR unsigned char 
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  1    wreg      void 
  2370 ;; Registers used:
  2371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2377 ;;      Params:         0      12       0       0       0
  2378 ;;      Locals:         0      21       0       0       0
  2379 ;;      Temps:          0       2       0       0       0
  2380 ;;      Totals:         0      35       0       0       0
  2381 ;;Total ram usage:       35 bytes
  2382 ;; Hardware stack levels used:    1
  2383 ;; Hardware stack levels required when called:    8
  2384 ;; This function calls:
  2385 ;;		_LCD_DisplayChar
  2386 ;;		_LCD_DisplayFloatNumber
  2387 ;;		_LCD_DisplayNumber
  2388 ;;		_LCD_DisplayString
  2389 ;;		___bmul
  2390 ;; This function is called by:
  2391 ;;		_main
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           
  2396                           ;psect for function _LCD_Printf
  2397  05A2                     _LCD_Printf:	
  2398                           
  2399                           ;incstack = 0
  2400 ;; hardware stack exceeded
  2401                           ; Regs used in _LCD_Printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2402                           ;LCD_Printf@argList stored from wreg
  2403  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  2404  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  2405  05A4  00DD               	movwf	LCD_Printf@argList
  2406                           
  2407                           ;lcd.c: 677: const char *ptr;
  2408                           ;lcd.c: 678: va_list argp;
  2409                           ;lcd.c: 679: sint16_t v_num_s16;
  2410                           ;lcd.c: 680: sint32_t v_num_s32;
  2411                           ;lcd.c: 681: uint16_t v_num_u16;
  2412                           ;lcd.c: 682: uint32_t v_num_u32;
  2413                           ;lcd.c: 683: char *str;
  2414                           ;lcd.c: 684: char ch;
  2415                           ;lcd.c: 685: uint8_t v_numOfDigitsToDisp_u8;
  2416                           ;lcd.c: 687: double v_floatNum_f32;
  2417                           ;lcd.c: 690: *argp = __va_start();
  2418  05A5  304B               	movlw	(low (?_LCD_Printf| 0))& (0+255)
  2419  05A6  00D7               	movwf	??_LCD_Printf
  2420  05A7  0857               	movf	??_LCD_Printf,w
  2421  05A8  00ED               	movwf	LCD_Printf@argp
  2422                           
  2423                           ;lcd.c: 693: for(ptr = argList; *ptr != '\0'; ptr++)
  2424  05A9  085D               	movf	LCD_Printf@argList,w
  2425  05AA  00D7               	movwf	??_LCD_Printf
  2426  05AB  0857               	movf	??_LCD_Printf,w
  2427  05AC  00EA               	movwf	LCD_Printf@ptr
  2428  05AD                     l2529:	
  2429  05AD  086A               	movf	LCD_Printf@ptr,w
  2430  05AE  0084               	movwf	4
  2431  05AF  120A  158A  2000  120A  118A  	fcall	stringdir
  2432  05B4  3A00               	xorlw	0
  2433  05B5  1903               	btfsc	3,2
  2434  05B6  0008               	return
  2435                           
  2436                           ;lcd.c: 694: {
  2437                           ;lcd.c: 696: ch= *ptr;
  2438  05B7  086A               	movf	LCD_Printf@ptr,w
  2439  05B8  0084               	movwf	4
  2440  05B9  120A  158A  2000  120A  118A  	fcall	stringdir
  2441  05BE  00D7               	movwf	??_LCD_Printf
  2442  05BF  0857               	movf	??_LCD_Printf,w
  2443  05C0  00EB               	movwf	LCD_Printf@ch
  2444                           
  2445                           ;lcd.c: 697: if(ch == '%')
  2446  05C1  3025               	movlw	37
  2447  05C2  066B               	xorwf	LCD_Printf@ch,w
  2448  05C3  1D03               	btfss	3,2
  2449  05C4  2FC7               	goto	l2525
  2450                           
  2451                           ;lcd.c: 698: {
  2452                           ;lcd.c: 699: ptr++;
  2453  05C5  3001               	movlw	1
  2454  05C6  00D7               	movwf	??_LCD_Printf
  2455  05C7  0857               	movf	??_LCD_Printf,w
  2456  05C8  07EA               	addwf	LCD_Printf@ptr,f
  2457                           
  2458                           ;lcd.c: 700: ch = *ptr;
  2459  05C9  086A               	movf	LCD_Printf@ptr,w
  2460  05CA  0084               	movwf	4
  2461  05CB  120A  158A  2000  120A  118A  	fcall	stringdir
  2462  05D0  00D7               	movwf	??_LCD_Printf
  2463  05D1  0857               	movf	??_LCD_Printf,w
  2464  05D2  00EB               	movwf	LCD_Printf@ch
  2465                           
  2466                           ;lcd.c: 701: if((ch>=0x30) && (ch<=0x39))
  2467  05D3  3030               	movlw	48
  2468  05D4  026B               	subwf	LCD_Printf@ch,w
  2469  05D5  1C03               	skipc
  2470  05D6  2E04               	goto	l2433
  2471  05D7  303A               	movlw	58
  2472  05D8  026B               	subwf	LCD_Printf@ch,w
  2473  05D9  1803               	skipnc
  2474  05DA  2E04               	goto	l2433
  2475                           
  2476                           ;lcd.c: 702: {
  2477                           ;lcd.c: 703: v_numOfDigitsToDisp_u8 = 0;
  2478  05DB  01EC               	clrf	LCD_Printf@v_numOfDigitsToDisp_u8
  2479  05DC                     l2429:	
  2480                           ;lcd.c: 704: while((ch>=0x30) && (ch<=0x39))
  2481                           
  2482  05DC  3030               	movlw	48
  2483  05DD  026B               	subwf	LCD_Printf@ch,w
  2484  05DE  1C03               	skipc
  2485  05DF  2F95               	goto	l2523
  2486  05E0  303A               	movlw	58
  2487  05E1  026B               	subwf	LCD_Printf@ch,w
  2488  05E2  1803               	btfsc	3,0
  2489  05E3  2F95               	goto	l2523
  2490                           
  2491                           ;lcd.c: 705: {
  2492                           ;lcd.c: 706: v_numOfDigitsToDisp_u8 = (v_numOfDigitsToDisp_u8 * 10) + (ch-0x30);
  2493  05E4  300A               	movlw	10
  2494  05E5  00D7               	movwf	??_LCD_Printf
  2495  05E6  0857               	movf	??_LCD_Printf,w
  2496  05E7  00A0               	movwf	___bmul@multiplicand
  2497  05E8  086C               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2498  05E9  120A  158A  20AC  120A  118A  	fcall	___bmul
  2499  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  2500  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  2501  05F0  076B               	addwf	LCD_Printf@ch,w
  2502  05F1  3ED0               	addlw	208
  2503  05F2  00D8               	movwf	??_LCD_Printf+1
  2504  05F3  0858               	movf	??_LCD_Printf+1,w
  2505  05F4  00EC               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  2506                           
  2507                           ;lcd.c: 707: ptr++;
  2508  05F5  3001               	movlw	1
  2509  05F6  00D7               	movwf	??_LCD_Printf
  2510  05F7  0857               	movf	??_LCD_Printf,w
  2511  05F8  07EA               	addwf	LCD_Printf@ptr,f
  2512                           
  2513                           ;lcd.c: 708: ch = *ptr;
  2514  05F9  086A               	movf	LCD_Printf@ptr,w
  2515  05FA  0084               	movwf	4
  2516  05FB  120A  158A  2000  120A  118A  	fcall	stringdir
  2517  0600  00D7               	movwf	??_LCD_Printf
  2518  0601  0857               	movf	??_LCD_Printf,w
  2519  0602  00EB               	movwf	LCD_Printf@ch
  2520  0603  2DDC               	goto	l2429
  2521  0604                     l2433:	
  2522                           ;lcd.c: 709: }
  2523                           ;lcd.c: 710: }
  2524                           
  2525                           
  2526                           ;lcd.c: 711: else
  2527                           ;lcd.c: 712: {
  2528                           ;lcd.c: 713: v_numOfDigitsToDisp_u8 = 0xffu;
  2529  0604  30FF               	movlw	255
  2530  0605  00D7               	movwf	??_LCD_Printf
  2531  0606  0857               	movf	??_LCD_Printf,w
  2532  0607  00EC               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  2533                           
  2534                           ;lcd.c: 714: }
  2535                           ;lcd.c: 717: switch(ch)
  2536  0608  2F95               	goto	l2523
  2537  0609                     l2435:	
  2538                           ;lcd.c: 718: {
  2539                           ;lcd.c: 719: case 'C':
  2540                           
  2541                           
  2542                           ;lcd.c: 720: case 'c':
  2543                           ;lcd.c: 721: ch = (*(int *)__va_arg((*(int **)argp), (int)0));
  2544  0609  086D               	movf	LCD_Printf@argp,w
  2545  060A  0084               	movwf	4
  2546  060B  1383               	bcf	3,7	;select IRP bank0
  2547  060C  0800               	movf	0,w
  2548  060D  00D7               	movwf	??_LCD_Printf
  2549  060E  0857               	movf	??_LCD_Printf,w
  2550  060F  00EB               	movwf	LCD_Printf@ch
  2551  0610  3002               	movlw	2
  2552  0611  00D7               	movwf	??_LCD_Printf
  2553  0612  0857               	movf	??_LCD_Printf,w
  2554  0613  07ED               	addwf	LCD_Printf@argp,f
  2555  0614  2FC7               	goto	l2525
  2556  0615                     l2441:	
  2557                           ;lcd.c: 725: case 'd':
  2558                           
  2559                           ;lcd.c: 723: break;
  2560                           
  2561                           ;lcd.c: 722: LCD_DisplayChar(ch);
  2562                           
  2563                           
  2564                           ;lcd.c: 726: v_num_s16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  2565  0615  1283               	bcf	3,5	;RP0=0, select bank0
  2566  0616  1303               	bcf	3,6	;RP1=0, select bank0
  2567  0617  086D               	movf	LCD_Printf@argp,w
  2568  0618  0084               	movwf	4
  2569  0619  1383               	bcf	3,7	;select IRP bank0
  2570  061A  0800               	movf	0,w
  2571  061B  00E2               	movwf	LCD_Printf@v_num_s16
  2572  061C  0A84               	incf	4,f
  2573  061D  0800               	movf	0,w
  2574  061E  00E3               	movwf	LCD_Printf@v_num_s16+1
  2575  061F  3002               	movlw	2
  2576  0620  00D7               	movwf	??_LCD_Printf
  2577  0621  0857               	movf	??_LCD_Printf,w
  2578  0622  07ED               	addwf	LCD_Printf@argp,f
  2579                           
  2580                           ;lcd.c: 727: if(v_num_s16<0)
  2581  0623  1FE3               	btfss	LCD_Printf@v_num_s16+1,7
  2582  0624  2E30               	goto	l2451
  2583                           
  2584                           ;lcd.c: 728: {
  2585                           ;lcd.c: 729: v_num_s16 = -v_num_s16;
  2586  0625  09E2               	comf	LCD_Printf@v_num_s16,f
  2587  0626  09E3               	comf	LCD_Printf@v_num_s16+1,f
  2588  0627  0AE2               	incf	LCD_Printf@v_num_s16,f
  2589  0628  1903               	skipnz
  2590  0629  0AE3               	incf	LCD_Printf@v_num_s16+1,f
  2591                           
  2592                           ;lcd.c: 730: LCD_DisplayChar('-');
  2593  062A  302D               	movlw	45
  2594  062B  120A  158A  215B  120A  118A  	fcall	_LCD_DisplayChar
  2595  0630                     l2451:	
  2596                           
  2597                           ;lcd.c: 731: }
  2598                           ;lcd.c: 732: LCD_DisplayNumber(10u,v_num_s16,v_numOfDigitsToDisp_u8);
  2599  0630  1283               	bcf	3,5	;RP0=0, select bank0
  2600  0631  1303               	bcf	3,6	;RP1=0, select bank0
  2601  0632  0862               	movf	LCD_Printf@v_num_s16,w
  2602  0633  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2603  0634  0863               	movf	LCD_Printf@v_num_s16+1,w
  2604  0635  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2605  0636  3000               	movlw	0
  2606  0637  1BA5               	btfsc	LCD_DisplayNumber@v_number_u32+1,7
  2607  0638  30FF               	movlw	255
  2608  0639  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2609  063A  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2610  063B  086C               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2611  063C  00D7               	movwf	??_LCD_Printf
  2612  063D  0857               	movf	??_LCD_Printf,w
  2613  063E  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2614  063F  300A               	movlw	10
  2615  0640  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2616                           
  2617                           ;lcd.c: 733: break;
  2618  0645  2FCD               	goto	l2527
  2619  0646                     l2453:	
  2620                           ;lcd.c: 735: case 'D':
  2621                           
  2622                           
  2623                           ;lcd.c: 736: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
  2624  0646  1283               	bcf	3,5	;RP0=0, select bank0
  2625  0647  1303               	bcf	3,6	;RP1=0, select bank0
  2626  0648  086D               	movf	LCD_Printf@argp,w
  2627  0649  0084               	movwf	4
  2628  064A  1383               	bcf	3,7	;select IRP bank0
  2629  064B  0800               	movf	0,w
  2630  064C  00DE               	movwf	LCD_Printf@v_num_s32
  2631  064D  0A84               	incf	4,f
  2632  064E  0800               	movf	0,w
  2633  064F  00DF               	movwf	LCD_Printf@v_num_s32+1
  2634  0650  0A84               	incf	4,f
  2635  0651  0800               	movf	0,w
  2636  0652  00E0               	movwf	LCD_Printf@v_num_s32+2
  2637  0653  0A84               	incf	4,f
  2638  0654  0800               	movf	0,w
  2639  0655  00E1               	movwf	LCD_Printf@v_num_s32+3
  2640  0656  3004               	movlw	4
  2641  0657  00D7               	movwf	??_LCD_Printf
  2642  0658  0857               	movf	??_LCD_Printf,w
  2643  0659  07ED               	addwf	LCD_Printf@argp,f
  2644                           
  2645                           ;lcd.c: 737: if(v_num_s32<0)
  2646  065A  1FE1               	btfss	LCD_Printf@v_num_s32+3,7
  2647  065B  2E6D               	goto	l338
  2648                           
  2649                           ;lcd.c: 738: {
  2650                           ;lcd.c: 739: v_num_s32 = -v_num_s32;
  2651  065C  09DE               	comf	LCD_Printf@v_num_s32,f
  2652  065D  09DF               	comf	LCD_Printf@v_num_s32+1,f
  2653  065E  09E0               	comf	LCD_Printf@v_num_s32+2,f
  2654  065F  09E1               	comf	LCD_Printf@v_num_s32+3,f
  2655  0660  0ADE               	incf	LCD_Printf@v_num_s32,f
  2656  0661  1903               	skipnz
  2657  0662  0ADF               	incf	LCD_Printf@v_num_s32+1,f
  2658  0663  1903               	skipnz
  2659  0664  0AE0               	incf	LCD_Printf@v_num_s32+2,f
  2660  0665  1903               	skipnz
  2661  0666  0AE1               	incf	LCD_Printf@v_num_s32+3,f
  2662                           
  2663                           ;lcd.c: 740: LCD_DisplayChar('-');
  2664  0667  302D               	movlw	45
  2665  0668  120A  158A  215B  120A  118A  	fcall	_LCD_DisplayChar
  2666  066D                     l338:	
  2667                           
  2668                           ;lcd.c: 741: }
  2669                           ;lcd.c: 742: LCD_DisplayNumber(10u,v_num_s32,v_numOfDigitsToDisp_u8);
  2670  066D  1283               	bcf	3,5	;RP0=0, select bank0
  2671  066E  1303               	bcf	3,6	;RP1=0, select bank0
  2672  066F  0861               	movf	LCD_Printf@v_num_s32+3,w
  2673  0670  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2674  0671  0860               	movf	LCD_Printf@v_num_s32+2,w
  2675  0672  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2676  0673  085F               	movf	LCD_Printf@v_num_s32+1,w
  2677  0674  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2678  0675  085E               	movf	LCD_Printf@v_num_s32,w
  2679  0676  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2680  0677  086C               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2681  0678  00D7               	movwf	??_LCD_Printf
  2682  0679  0857               	movf	??_LCD_Printf,w
  2683  067A  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2684  067B  300A               	movlw	10
  2685  067C  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2686                           
  2687                           ;lcd.c: 743: break;
  2688  0681  2FCD               	goto	l2527
  2689  0682                     l2463:	
  2690                           ;lcd.c: 745: case 'u':
  2691                           
  2692                           
  2693                           ;lcd.c: 746: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  2694  0682  1283               	bcf	3,5	;RP0=0, select bank0
  2695  0683  1303               	bcf	3,6	;RP1=0, select bank0
  2696  0684  086D               	movf	LCD_Printf@argp,w
  2697  0685  0084               	movwf	4
  2698  0686  1383               	bcf	3,7	;select IRP bank0
  2699  0687  0800               	movf	0,w
  2700  0688  00E8               	movwf	LCD_Printf@v_num_u16
  2701  0689  0A84               	incf	4,f
  2702  068A  0800               	movf	0,w
  2703  068B  00E9               	movwf	LCD_Printf@v_num_u16+1
  2704  068C  3002               	movlw	2
  2705  068D  00D7               	movwf	??_LCD_Printf
  2706  068E  0857               	movf	??_LCD_Printf,w
  2707  068F  07ED               	addwf	LCD_Printf@argp,f
  2708                           
  2709                           ;lcd.c: 747: LCD_DisplayNumber(10u,v_num_u16,v_numOfDigitsToDisp_u8);
  2710  0690  0868               	movf	LCD_Printf@v_num_u16,w
  2711  0691  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2712  0692  0869               	movf	LCD_Printf@v_num_u16+1,w
  2713  0693  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2714  0694  01A6               	clrf	LCD_DisplayNumber@v_number_u32+2
  2715  0695  01A7               	clrf	LCD_DisplayNumber@v_number_u32+3
  2716  0696  086C               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2717  0697  00D7               	movwf	??_LCD_Printf
  2718  0698  0857               	movf	??_LCD_Printf,w
  2719  0699  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2720  069A  300A               	movlw	10
  2721  069B  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2722                           
  2723                           ;lcd.c: 748: break;
  2724  06A0  2FCD               	goto	l2527
  2725  06A1                     l2469:	
  2726                           ;lcd.c: 750: case 'U':
  2727                           
  2728                           
  2729                           ;lcd.c: 751: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  2730  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  2731  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  2732  06A3  086D               	movf	LCD_Printf@argp,w
  2733  06A4  0084               	movwf	4
  2734  06A5  1383               	bcf	3,7	;select IRP bank0
  2735  06A6  0800               	movf	0,w
  2736  06A7  00E4               	movwf	LCD_Printf@v_num_u32
  2737  06A8  0A84               	incf	4,f
  2738  06A9  0800               	movf	0,w
  2739  06AA  00E5               	movwf	LCD_Printf@v_num_u32+1
  2740  06AB  0A84               	incf	4,f
  2741  06AC  0800               	movf	0,w
  2742  06AD  00E6               	movwf	LCD_Printf@v_num_u32+2
  2743  06AE  0A84               	incf	4,f
  2744  06AF  0800               	movf	0,w
  2745  06B0  00E7               	movwf	LCD_Printf@v_num_u32+3
  2746  06B1  3004               	movlw	4
  2747  06B2  00D7               	movwf	??_LCD_Printf
  2748  06B3  0857               	movf	??_LCD_Printf,w
  2749  06B4  07ED               	addwf	LCD_Printf@argp,f
  2750                           
  2751                           ;lcd.c: 752: LCD_DisplayNumber(10u,v_num_u32,v_numOfDigitsToDisp_u8);
  2752  06B5  0867               	movf	LCD_Printf@v_num_u32+3,w
  2753  06B6  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2754  06B7  0866               	movf	LCD_Printf@v_num_u32+2,w
  2755  06B8  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2756  06B9  0865               	movf	LCD_Printf@v_num_u32+1,w
  2757  06BA  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2758  06BB  0864               	movf	LCD_Printf@v_num_u32,w
  2759  06BC  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2760  06BD  086C               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2761  06BE  00D7               	movwf	??_LCD_Printf
  2762  06BF  0857               	movf	??_LCD_Printf,w
  2763  06C0  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2764  06C1  300A               	movlw	10
  2765  06C2  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2766                           
  2767                           ;lcd.c: 753: break;
  2768  06C7  2FCD               	goto	l2527
  2769  06C8                     l2475:	
  2770                           ;lcd.c: 755: case 'x':
  2771                           
  2772                           
  2773                           ;lcd.c: 756: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  2774  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2775  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2776  06CA  086D               	movf	LCD_Printf@argp,w
  2777  06CB  0084               	movwf	4
  2778  06CC  1383               	bcf	3,7	;select IRP bank0
  2779  06CD  0800               	movf	0,w
  2780  06CE  00E8               	movwf	LCD_Printf@v_num_u16
  2781  06CF  0A84               	incf	4,f
  2782  06D0  0800               	movf	0,w
  2783  06D1  00E9               	movwf	LCD_Printf@v_num_u16+1
  2784  06D2  3002               	movlw	2
  2785  06D3  00D7               	movwf	??_LCD_Printf
  2786  06D4  0857               	movf	??_LCD_Printf,w
  2787  06D5  07ED               	addwf	LCD_Printf@argp,f
  2788                           
  2789                           ;lcd.c: 757: LCD_DisplayNumber(16u,v_num_u16,v_numOfDigitsToDisp_u8);
  2790  06D6  0868               	movf	LCD_Printf@v_num_u16,w
  2791  06D7  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2792  06D8  0869               	movf	LCD_Printf@v_num_u16+1,w
  2793  06D9  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2794  06DA  01A6               	clrf	LCD_DisplayNumber@v_number_u32+2
  2795  06DB  01A7               	clrf	LCD_DisplayNumber@v_number_u32+3
  2796  06DC  086C               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2797  06DD  00D7               	movwf	??_LCD_Printf
  2798  06DE  0857               	movf	??_LCD_Printf,w
  2799  06DF  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2800  06E0  3010               	movlw	16
  2801  06E1  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2802                           
  2803                           ;lcd.c: 758: break;
  2804  06E6  2FCD               	goto	l2527
  2805  06E7                     l2481:	
  2806                           ;lcd.c: 760: case 'X':
  2807                           
  2808                           
  2809                           ;lcd.c: 761: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  2810  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  2811  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  2812  06E9  086D               	movf	LCD_Printf@argp,w
  2813  06EA  0084               	movwf	4
  2814  06EB  1383               	bcf	3,7	;select IRP bank0
  2815  06EC  0800               	movf	0,w
  2816  06ED  00E4               	movwf	LCD_Printf@v_num_u32
  2817  06EE  0A84               	incf	4,f
  2818  06EF  0800               	movf	0,w
  2819  06F0  00E5               	movwf	LCD_Printf@v_num_u32+1
  2820  06F1  0A84               	incf	4,f
  2821  06F2  0800               	movf	0,w
  2822  06F3  00E6               	movwf	LCD_Printf@v_num_u32+2
  2823  06F4  0A84               	incf	4,f
  2824  06F5  0800               	movf	0,w
  2825  06F6  00E7               	movwf	LCD_Printf@v_num_u32+3
  2826  06F7  3004               	movlw	4
  2827  06F8  00D7               	movwf	??_LCD_Printf
  2828  06F9  0857               	movf	??_LCD_Printf,w
  2829  06FA  07ED               	addwf	LCD_Printf@argp,f
  2830                           
  2831                           ;lcd.c: 762: LCD_DisplayNumber(16u,v_num_u32,v_numOfDigitsToDisp_u8);
  2832  06FB  0867               	movf	LCD_Printf@v_num_u32+3,w
  2833  06FC  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2834  06FD  0866               	movf	LCD_Printf@v_num_u32+2,w
  2835  06FE  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2836  06FF  0865               	movf	LCD_Printf@v_num_u32+1,w
  2837  0700  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2838  0701  0864               	movf	LCD_Printf@v_num_u32,w
  2839  0702  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2840  0703  086C               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2841  0704  00D7               	movwf	??_LCD_Printf
  2842  0705  0857               	movf	??_LCD_Printf,w
  2843  0706  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2844  0707  3010               	movlw	16
  2845  0708  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2846                           
  2847                           ;lcd.c: 763: break;
  2848  070D  2FCD               	goto	l2527
  2849  070E                     l2487:	
  2850                           ;lcd.c: 766: case 'b':
  2851                           
  2852                           
  2853                           ;lcd.c: 767: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  2854  070E  1283               	bcf	3,5	;RP0=0, select bank0
  2855  070F  1303               	bcf	3,6	;RP1=0, select bank0
  2856  0710  086D               	movf	LCD_Printf@argp,w
  2857  0711  0084               	movwf	4
  2858  0712  1383               	bcf	3,7	;select IRP bank0
  2859  0713  0800               	movf	0,w
  2860  0714  00E8               	movwf	LCD_Printf@v_num_u16
  2861  0715  0A84               	incf	4,f
  2862  0716  0800               	movf	0,w
  2863  0717  00E9               	movwf	LCD_Printf@v_num_u16+1
  2864  0718  3002               	movlw	2
  2865  0719  00D7               	movwf	??_LCD_Printf
  2866  071A  0857               	movf	??_LCD_Printf,w
  2867  071B  07ED               	addwf	LCD_Printf@argp,f
  2868                           
  2869                           ;lcd.c: 768: if(v_numOfDigitsToDisp_u8 == 0xffu)
  2870  071C  0A6C               	incf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2871  071D  1D03               	btfss	3,2
  2872  071E  2F23               	goto	l2495
  2873                           
  2874                           ;lcd.c: 769: v_numOfDigitsToDisp_u8 = 16;
  2875  071F  3010               	movlw	16
  2876  0720  00D7               	movwf	??_LCD_Printf
  2877  0721  0857               	movf	??_LCD_Printf,w
  2878  0722  00EC               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  2879  0723                     l2495:	
  2880                           
  2881                           ;lcd.c: 770: LCD_DisplayNumber(2u,v_num_u16,v_numOfDigitsToDisp_u8);
  2882  0723  0868               	movf	LCD_Printf@v_num_u16,w
  2883  0724  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2884  0725  0869               	movf	LCD_Printf@v_num_u16+1,w
  2885  0726  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2886  0727  01A6               	clrf	LCD_DisplayNumber@v_number_u32+2
  2887  0728  01A7               	clrf	LCD_DisplayNumber@v_number_u32+3
  2888  0729  086C               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2889  072A  00D7               	movwf	??_LCD_Printf
  2890  072B  0857               	movf	??_LCD_Printf,w
  2891  072C  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2892  072D  3002               	movlw	2
  2893  072E  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2894                           
  2895                           ;lcd.c: 771: break;
  2896  0733  2FCD               	goto	l2527
  2897  0734                     l2497:	
  2898                           ;lcd.c: 773: case 'B':
  2899                           
  2900                           
  2901                           ;lcd.c: 774: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  2902  0734  1283               	bcf	3,5	;RP0=0, select bank0
  2903  0735  1303               	bcf	3,6	;RP1=0, select bank0
  2904  0736  086D               	movf	LCD_Printf@argp,w
  2905  0737  0084               	movwf	4
  2906  0738  1383               	bcf	3,7	;select IRP bank0
  2907  0739  0800               	movf	0,w
  2908  073A  00E4               	movwf	LCD_Printf@v_num_u32
  2909  073B  0A84               	incf	4,f
  2910  073C  0800               	movf	0,w
  2911  073D  00E5               	movwf	LCD_Printf@v_num_u32+1
  2912  073E  0A84               	incf	4,f
  2913  073F  0800               	movf	0,w
  2914  0740  00E6               	movwf	LCD_Printf@v_num_u32+2
  2915  0741  0A84               	incf	4,f
  2916  0742  0800               	movf	0,w
  2917  0743  00E7               	movwf	LCD_Printf@v_num_u32+3
  2918  0744  3004               	movlw	4
  2919  0745  00D7               	movwf	??_LCD_Printf
  2920  0746  0857               	movf	??_LCD_Printf,w
  2921  0747  07ED               	addwf	LCD_Printf@argp,f
  2922                           
  2923                           ;lcd.c: 775: if(v_numOfDigitsToDisp_u8 == 0xffu)
  2924  0748  0A6C               	incf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2925  0749  1D03               	btfss	3,2
  2926  074A  2F4F               	goto	l2505
  2927                           
  2928                           ;lcd.c: 776: v_numOfDigitsToDisp_u8 = 16;
  2929  074B  3010               	movlw	16
  2930  074C  00D7               	movwf	??_LCD_Printf
  2931  074D  0857               	movf	??_LCD_Printf,w
  2932  074E  00EC               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  2933  074F                     l2505:	
  2934                           
  2935                           ;lcd.c: 777: LCD_DisplayNumber(2u,v_num_u32,v_numOfDigitsToDisp_u8);
  2936  074F  0867               	movf	LCD_Printf@v_num_u32+3,w
  2937  0750  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2938  0751  0866               	movf	LCD_Printf@v_num_u32+2,w
  2939  0752  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2940  0753  0865               	movf	LCD_Printf@v_num_u32+1,w
  2941  0754  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2942  0755  0864               	movf	LCD_Printf@v_num_u32,w
  2943  0756  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2944  0757  086C               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2945  0758  00D7               	movwf	??_LCD_Printf
  2946  0759  0857               	movf	??_LCD_Printf,w
  2947  075A  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2948  075B  3002               	movlw	2
  2949  075C  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2950                           
  2951                           ;lcd.c: 778: break;
  2952  0761  2FCD               	goto	l2527
  2953  0762                     l2507:	
  2954                           ;lcd.c: 781: case 'F':
  2955                           
  2956                           
  2957                           ;lcd.c: 782: case 'f':
  2958                           ;lcd.c: 784: v_floatNum_f32 = (*(double *)__va_arg((*(double **)argp), (double)0));
  2959  0762  1283               	bcf	3,5	;RP0=0, select bank0
  2960  0763  1303               	bcf	3,6	;RP1=0, select bank0
  2961  0764  086D               	movf	LCD_Printf@argp,w
  2962  0765  0084               	movwf	4
  2963  0766  1383               	bcf	3,7	;select IRP bank0
  2964  0767  0800               	movf	0,w
  2965  0768  00D9               	movwf	LCD_Printf@v_floatNum_f32
  2966  0769  0A84               	incf	4,f
  2967  076A  0800               	movf	0,w
  2968  076B  00DA               	movwf	LCD_Printf@v_floatNum_f32+1
  2969  076C  0A84               	incf	4,f
  2970  076D  0800               	movf	0,w
  2971  076E  00DB               	movwf	LCD_Printf@v_floatNum_f32+2
  2972  076F  3003               	movlw	3
  2973  0770  00D7               	movwf	??_LCD_Printf
  2974  0771  0857               	movf	??_LCD_Printf,w
  2975  0772  07ED               	addwf	LCD_Printf@argp,f
  2976                           
  2977                           ;lcd.c: 785: LCD_DisplayFloatNumber(v_floatNum_f32);
  2978  0773  0859               	movf	LCD_Printf@v_floatNum_f32,w
  2979  0774  00C3               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32
  2980  0775  085A               	movf	LCD_Printf@v_floatNum_f32+1,w
  2981  0776  00C4               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+1
  2982  0777  085B               	movf	LCD_Printf@v_floatNum_f32+2,w
  2983  0778  00C5               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+2
  2984  0779  120A  158A  2690  120A  118A  	fcall	_LCD_DisplayFloatNumber
  2985                           
  2986                           ;lcd.c: 787: break;
  2987  077E  2FCD               	goto	l2527
  2988  077F                     l2513:	
  2989                           ;lcd.c: 790: case 'S':
  2990                           
  2991                           
  2992                           ;lcd.c: 791: case 's':
  2993                           ;lcd.c: 792: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  2994  077F  1283               	bcf	3,5	;RP0=0, select bank0
  2995  0780  1303               	bcf	3,6	;RP1=0, select bank0
  2996  0781  086D               	movf	LCD_Printf@argp,w
  2997  0782  0084               	movwf	4
  2998  0783  1383               	bcf	3,7	;select IRP bank0
  2999  0784  0800               	movf	0,w
  3000  0785  00D7               	movwf	??_LCD_Printf
  3001  0786  0857               	movf	??_LCD_Printf,w
  3002  0787  00DC               	movwf	LCD_Printf@str
  3003  0788  3001               	movlw	1
  3004  0789  00D7               	movwf	??_LCD_Printf
  3005  078A  0857               	movf	??_LCD_Printf,w
  3006  078B  07ED               	addwf	LCD_Printf@argp,f
  3007                           
  3008                           ;lcd.c: 793: LCD_DisplayString(str);
  3009  078C  085C               	movf	LCD_Printf@str,w
  3010  078D  120A  158A  2102  120A  118A  	fcall	_LCD_DisplayString
  3011                           
  3012                           ;lcd.c: 794: break;
  3013  0792  2FCD               	goto	l2527
  3014  0793                     l2519:	
  3015                           ;lcd.c: 796: case '%':
  3016                           
  3017                           
  3018                           ;lcd.c: 797: LCD_DisplayChar('%');
  3019  0793  3025               	movlw	37
  3020  0794  2FC8               	goto	L1
  3021  0795                     l2523:	
  3022                           ;lcd.c: 799: }
  3023                           
  3024                           ;lcd.c: 798: break;
  3025                           
  3026  0795  1283               	bcf	3,5	;RP0=0, select bank0
  3027  0796  1303               	bcf	3,6	;RP1=0, select bank0
  3028  0797  086B               	movf	LCD_Printf@ch,w
  3029                           
  3030                           ; Switch size 1, requested type "space"
  3031                           ; Number of cases is 15, Range of values is 37 to 120
  3032                           ; switch strategies available:
  3033                           ; Name         Instructions Cycles
  3034                           ; simple_byte           46    24 (average)
  3035                           ; direct_byte          263    11 (fixed)
  3036                           ; jumptable            263     9 (fixed)
  3037                           ;	Chosen strategy is simple_byte
  3038  0798  3A25               	xorlw	37	; case 37
  3039  0799  1903               	skipnz
  3040  079A  2F93               	goto	l2519
  3041  079B  3A67               	xorlw	103	; case 66
  3042  079C  1903               	skipnz
  3043  079D  2F34               	goto	l2497
  3044  079E  3A01               	xorlw	1	; case 67
  3045  079F  1903               	skipnz
  3046  07A0  2E09               	goto	l2435
  3047  07A1  3A07               	xorlw	7	; case 68
  3048  07A2  1903               	skipnz
  3049  07A3  2E46               	goto	l2453
  3050  07A4  3A02               	xorlw	2	; case 70
  3051  07A5  1903               	skipnz
  3052  07A6  2F62               	goto	l2507
  3053  07A7  3A15               	xorlw	21	; case 83
  3054  07A8  1903               	skipnz
  3055  07A9  2F7F               	goto	l2513
  3056  07AA  3A06               	xorlw	6	; case 85
  3057  07AB  1903               	skipnz
  3058  07AC  2EA1               	goto	l2469
  3059  07AD  3A0D               	xorlw	13	; case 88
  3060  07AE  1903               	skipnz
  3061  07AF  2EE7               	goto	l2481
  3062  07B0  3A3A               	xorlw	58	; case 98
  3063  07B1  1903               	skipnz
  3064  07B2  2F0E               	goto	l2487
  3065  07B3  3A01               	xorlw	1	; case 99
  3066  07B4  1903               	skipnz
  3067  07B5  2E09               	goto	l2435
  3068  07B6  3A07               	xorlw	7	; case 100
  3069  07B7  1903               	skipnz
  3070  07B8  2E15               	goto	l2441
  3071  07B9  3A02               	xorlw	2	; case 102
  3072  07BA  1903               	skipnz
  3073  07BB  2F62               	goto	l2507
  3074  07BC  3A15               	xorlw	21	; case 115
  3075  07BD  1903               	skipnz
  3076  07BE  2F7F               	goto	l2513
  3077  07BF  3A06               	xorlw	6	; case 117
  3078  07C0  1903               	skipnz
  3079  07C1  2E82               	goto	l2463
  3080  07C2  3A0D               	xorlw	13	; case 120
  3081  07C3  1903               	skipnz
  3082  07C4  2EC8               	goto	l2475
  3083  07C5  2FCD               	goto	l2527
  3084                           
  3085                           ;lcd.c: 800: }
  3086  07C6  2FCD               	goto	l2527
  3087  07C7                     l2525:	
  3088                           
  3089                           ;lcd.c: 801: else
  3090                           ;lcd.c: 802: {
  3091                           ;lcd.c: 804: LCD_DisplayChar(ch);
  3092  07C7  086B               	movf	LCD_Printf@ch,w
  3093  07C8                     L1:	
  3094  07C8  120A  158A  215B  120A  118A  	fcall	_LCD_DisplayChar
  3095  07CD                     l2527:	
  3096  07CD  3001               	movlw	1
  3097  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  3098  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  3099  07D0  00D7               	movwf	??_LCD_Printf
  3100  07D1  0857               	movf	??_LCD_Printf,w
  3101  07D2  07EA               	addwf	LCD_Printf@ptr,f
  3102  07D3  2DAD               	goto	l2529
  3103  07D4                     __end_of_LCD_Printf:	
  3104                           
  3105                           	psect	text14
  3106  0902                     __ptext14:	
  3107 ;; *************** function _LCD_DisplayString *****************
  3108 ;; Defined at:
  3109 ;;		line 427 in file "../00-libfiles/lcd.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  ptr_stringPo    1    wreg     PTR const unsigned char 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  ptr_stringPo    1    0[BANK0 ] PTR const unsigned char 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3123 ;;      Params:         0       0       0       0       0
  3124 ;;      Locals:         0       1       0       0       0
  3125 ;;      Temps:          1       0       0       0       0
  3126 ;;      Totals:         1       1       0       0       0
  3127 ;;Total ram usage:        2 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    6
  3130 ;; This function calls:
  3131 ;;		_LCD_DisplayChar
  3132 ;; This function is called by:
  3133 ;;		_LCD_Printf
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           
  3138                           ;psect for function _LCD_DisplayString
  3139  0902                     _LCD_DisplayString:	
  3140                           
  3141                           ;incstack = 0
  3142                           ; Regs used in _LCD_DisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3143                           ;LCD_DisplayString@ptr_stringPointer_u8 stored from wreg
  3144  0902  1283               	bcf	3,5	;RP0=0, select bank0
  3145  0903  1303               	bcf	3,6	;RP1=0, select bank0
  3146  0904  00A0               	movwf	LCD_DisplayString@ptr_stringPointer_u8
  3147  0905                     l2347:	
  3148                           ;lcd.c: 429: while((*ptr_stringPointer_u8)!=0)
  3149                           
  3150  0905  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  3151  0906  0084               	movwf	4
  3152  0907  1383               	bcf	3,7	;select IRP bank0
  3153  0908  0800               	movf	0,w
  3154  0909  1903               	btfsc	3,2
  3155  090A  0008               	return
  3156                           
  3157                           ;lcd.c: 430: LCD_DisplayChar(*ptr_stringPointer_u8++);
  3158  090B  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  3159  090C  0084               	movwf	4
  3160  090D  1383               	bcf	3,7	;select IRP bank0
  3161  090E  0800               	movf	0,w
  3162  090F  120A  158A  215B  120A  158A  	fcall	_LCD_DisplayChar
  3163  0914  3001               	movlw	1
  3164  0915  00FD               	movwf	??_LCD_DisplayString
  3165  0916  087D               	movf	??_LCD_DisplayString,w
  3166  0917  1283               	bcf	3,5	;RP0=0, select bank0
  3167  0918  1303               	bcf	3,6	;RP1=0, select bank0
  3168  0919  07A0               	addwf	LCD_DisplayString@ptr_stringPointer_u8,f
  3169  091A  2905               	goto	l2347
  3170  091B                     __end_of_LCD_DisplayString:	
  3171                           
  3172                           	psect	text15
  3173  0E90                     __ptext15:	
  3174 ;; *************** function _LCD_DisplayFloatNumber *****************
  3175 ;; Defined at:
  3176 ;;		line 615 in file "../00-libfiles/lcd.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  v_floatNum_f    3   35[BANK0 ] void 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  v_temp_u32      4   39[BANK0 ] unsigned long 
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1    wreg      void 
  3183 ;; Registers used:
  3184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3190 ;;      Params:         0       3       0       0       0
  3191 ;;      Locals:         0       4       0       0       0
  3192 ;;      Temps:          0       1       0       0       0
  3193 ;;      Totals:         0       8       0       0       0
  3194 ;;Total ram usage:        8 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; Hardware stack levels required when called:    7
  3197 ;; This function calls:
  3198 ;;		_LCD_DisplayChar
  3199 ;;		_LCD_DisplayNumber
  3200 ;;		___ftadd
  3201 ;;		___ftmul
  3202 ;;		___ftneg
  3203 ;;		___fttol
  3204 ;;		___lltoft
  3205 ;; This function is called by:
  3206 ;;		_LCD_Printf
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           
  3211                           ;psect for function _LCD_DisplayFloatNumber
  3212  0E90                     _LCD_DisplayFloatNumber:	
  3213                           
  3214                           ;lcd.c: 617: uint32_t v_temp_u32;
  3215                           ;lcd.c: 624: v_temp_u32 = (uint32_t) v_floatNum_f32;
  3216                           
  3217                           ;incstack = 0
  3218 ;; hardware stack exceeded
  3219                           ; Regs used in _LCD_DisplayFloatNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3220  0E90  1283               	bcf	3,5	;RP0=0, select bank0
  3221  0E91  1303               	bcf	3,6	;RP1=0, select bank0
  3222  0E92  0843               	movf	LCD_DisplayFloatNumber@v_floatNum_f32,w
  3223  0E93  00AA               	movwf	___fttol@f1
  3224  0E94  0844               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+1,w
  3225  0E95  00AB               	movwf	___fttol@f1+1
  3226  0E96  0845               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+2,w
  3227  0E97  00AC               	movwf	___fttol@f1+2
  3228  0E98  120A  158A  2602  120A  158A  	fcall	___fttol
  3229  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  3230  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  3231  0E9F  082D               	movf	?___fttol+3,w
  3232  0EA0  00CA               	movwf	LCD_DisplayFloatNumber@v_temp_u32+3
  3233  0EA1  082C               	movf	?___fttol+2,w
  3234  0EA2  00C9               	movwf	LCD_DisplayFloatNumber@v_temp_u32+2
  3235  0EA3  082B               	movf	?___fttol+1,w
  3236  0EA4  00C8               	movwf	LCD_DisplayFloatNumber@v_temp_u32+1
  3237  0EA5  082A               	movf	?___fttol,w
  3238  0EA6  00C7               	movwf	LCD_DisplayFloatNumber@v_temp_u32
  3239                           
  3240                           ;lcd.c: 625: LCD_DisplayNumber(10u,v_temp_u32,0xffu);
  3241  0EA7  084A               	movf	LCD_DisplayFloatNumber@v_temp_u32+3,w
  3242  0EA8  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  3243  0EA9  0849               	movf	LCD_DisplayFloatNumber@v_temp_u32+2,w
  3244  0EAA  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  3245  0EAB  0848               	movf	LCD_DisplayFloatNumber@v_temp_u32+1,w
  3246  0EAC  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  3247  0EAD  0847               	movf	LCD_DisplayFloatNumber@v_temp_u32,w
  3248  0EAE  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  3249  0EAF  30FF               	movlw	255
  3250  0EB0  00C6               	movwf	??_LCD_DisplayFloatNumber
  3251  0EB1  0846               	movf	??_LCD_DisplayFloatNumber,w
  3252  0EB2  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  3253  0EB3  300A               	movlw	10
  3254  0EB4  120A  118A  23A7  120A  158A  	fcall	_LCD_DisplayNumber
  3255                           
  3256                           ;lcd.c: 627: LCD_DisplayChar('.');
  3257  0EB9  302E               	movlw	46
  3258  0EBA  120A  158A  215B  120A  158A  	fcall	_LCD_DisplayChar
  3259                           
  3260                           ;lcd.c: 629: v_floatNum_f32 = v_floatNum_f32 - v_temp_u32;
  3261  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  3262  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  3263  0EC1  0843               	movf	LCD_DisplayFloatNumber@v_floatNum_f32,w
  3264  0EC2  00A3               	movwf	___ftadd@f1
  3265  0EC3  0844               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+1,w
  3266  0EC4  00A4               	movwf	___ftadd@f1+1
  3267  0EC5  0845               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+2,w
  3268  0EC6  00A5               	movwf	___ftadd@f1+2
  3269  0EC7  084A               	movf	LCD_DisplayFloatNumber@v_temp_u32+3,w
  3270  0EC8  00FB               	movwf	___lltoft@c+3
  3271  0EC9  0849               	movf	LCD_DisplayFloatNumber@v_temp_u32+2,w
  3272  0ECA  00FA               	movwf	___lltoft@c+2
  3273  0ECB  0848               	movf	LCD_DisplayFloatNumber@v_temp_u32+1,w
  3274  0ECC  00F9               	movwf	___lltoft@c+1
  3275  0ECD  0847               	movf	LCD_DisplayFloatNumber@v_temp_u32,w
  3276  0ECE  00F8               	movwf	___lltoft@c
  3277  0ECF  120A  158A  217C  120A  158A  	fcall	___lltoft
  3278  0ED4  0878               	movf	?___lltoft,w
  3279  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  3280  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  3281  0ED7  00A0               	movwf	___ftneg@f1
  3282  0ED8  0879               	movf	?___lltoft+1,w
  3283  0ED9  00A1               	movwf	___ftneg@f1+1
  3284  0EDA  087A               	movf	?___lltoft+2,w
  3285  0EDB  00A2               	movwf	___ftneg@f1+2
  3286  0EDC  120A  158A  2066  120A  158A  	fcall	___ftneg
  3287  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3288  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  3289  0EE3  0820               	movf	?___ftneg,w
  3290  0EE4  00A6               	movwf	___ftadd@f2
  3291  0EE5  0821               	movf	?___ftneg+1,w
  3292  0EE6  00A7               	movwf	___ftadd@f2+1
  3293  0EE7  0822               	movf	?___ftneg+2,w
  3294  0EE8  00A8               	movwf	___ftadd@f2+2
  3295  0EE9  120A  118A  2499  120A  158A  	fcall	___ftadd
  3296  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3297  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3298  0EF0  0823               	movf	?___ftadd,w
  3299  0EF1  00C3               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32
  3300  0EF2  0824               	movf	?___ftadd+1,w
  3301  0EF3  00C4               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+1
  3302  0EF4  0825               	movf	?___ftadd+2,w
  3303  0EF5  00C5               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+2
  3304                           
  3305                           ;lcd.c: 630: v_temp_u32 = v_floatNum_f32 * 1000000;
  3306  0EF6  0843               	movf	LCD_DisplayFloatNumber@v_floatNum_f32,w
  3307  0EF7  00FB               	movwf	___ftmul@f2
  3308  0EF8  0844               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+1,w
  3309  0EF9  00FC               	movwf	___ftmul@f2+1
  3310  0EFA  0845               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+2,w
  3311  0EFB  00FD               	movwf	___ftmul@f2+2
  3312  0EFC  3024               	movlw	36
  3313  0EFD  00F8               	movwf	___ftmul@f1
  3314  0EFE  3074               	movlw	116
  3315  0EFF  00F9               	movwf	___ftmul@f1+1
  3316  0F00  3049               	movlw	73
  3317  0F01  00FA               	movwf	___ftmul@f1+2
  3318  0F02  120A  158A  272F  120A  158A  	fcall	___ftmul
  3319  0F07  0878               	movf	?___ftmul,w
  3320  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  3321  0F09  1303               	bcf	3,6	;RP1=0, select bank0
  3322  0F0A  00AA               	movwf	___fttol@f1
  3323  0F0B  0879               	movf	?___ftmul+1,w
  3324  0F0C  00AB               	movwf	___fttol@f1+1
  3325  0F0D  087A               	movf	?___ftmul+2,w
  3326  0F0E  00AC               	movwf	___fttol@f1+2
  3327  0F0F  120A  158A  2602  120A  158A  	fcall	___fttol
  3328  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  3329  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  3330  0F16  082D               	movf	?___fttol+3,w
  3331  0F17  00CA               	movwf	LCD_DisplayFloatNumber@v_temp_u32+3
  3332  0F18  082C               	movf	?___fttol+2,w
  3333  0F19  00C9               	movwf	LCD_DisplayFloatNumber@v_temp_u32+2
  3334  0F1A  082B               	movf	?___fttol+1,w
  3335  0F1B  00C8               	movwf	LCD_DisplayFloatNumber@v_temp_u32+1
  3336  0F1C  082A               	movf	?___fttol,w
  3337  0F1D  00C7               	movwf	LCD_DisplayFloatNumber@v_temp_u32
  3338                           
  3339                           ;lcd.c: 631: LCD_DisplayNumber(10u,v_temp_u32,0xffu);
  3340  0F1E  084A               	movf	LCD_DisplayFloatNumber@v_temp_u32+3,w
  3341  0F1F  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  3342  0F20  0849               	movf	LCD_DisplayFloatNumber@v_temp_u32+2,w
  3343  0F21  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  3344  0F22  0848               	movf	LCD_DisplayFloatNumber@v_temp_u32+1,w
  3345  0F23  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  3346  0F24  0847               	movf	LCD_DisplayFloatNumber@v_temp_u32,w
  3347  0F25  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  3348  0F26  30FF               	movlw	255
  3349  0F27  00C6               	movwf	??_LCD_DisplayFloatNumber
  3350  0F28  0846               	movf	??_LCD_DisplayFloatNumber,w
  3351  0F29  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  3352  0F2A  300A               	movlw	10
  3353  0F2B  120A  118A  23A7   	fcall	_LCD_DisplayNumber
  3354  0F2E  0008               	return
  3355  0F2F                     __end_of_LCD_DisplayFloatNumber:	
  3356                           
  3357                           	psect	text16
  3358  097C                     __ptext16:	
  3359 ;; *************** function ___lltoft *****************
  3360 ;; Defined at:
  3361 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lltoft.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  c               4    8[COMMON] unsigned long 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  exp             1   13[COMMON] unsigned char 
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  3    8[COMMON] float 
  3368 ;; Registers used:
  3369 ;;		wreg, status,2, status,0, pclath, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3375 ;;      Params:         4       0       0       0       0
  3376 ;;      Locals:         1       0       0       0       0
  3377 ;;      Temps:          1       0       0       0       0
  3378 ;;      Totals:         6       0       0       0       0
  3379 ;;Total ram usage:        6 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:    1
  3382 ;; This function calls:
  3383 ;;		___ftpack
  3384 ;; This function is called by:
  3385 ;;		_LCD_DisplayFloatNumber
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           
  3390                           ;psect for function ___lltoft
  3391  097C                     ___lltoft:	
  3392                           
  3393                           ;incstack = 0
  3394                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  3395  097C  308E               	movlw	142
  3396  097D  00FC               	movwf	??___lltoft
  3397  097E  087C               	movf	??___lltoft,w
  3398  097F  00FD               	movwf	___lltoft@exp
  3399  0980                     l2285:	
  3400  0980  30FF               	movlw	255
  3401  0981  057B               	andwf	___lltoft@c+3,w
  3402  0982  1903               	btfsc	3,2
  3403  0983  2992               	goto	l2287
  3404  0984  3001               	movlw	1
  3405  0985                     u3665:	
  3406  0985  1003               	clrc
  3407  0986  0CFB               	rrf	___lltoft@c+3,f
  3408  0987  0CFA               	rrf	___lltoft@c+2,f
  3409  0988  0CF9               	rrf	___lltoft@c+1,f
  3410  0989  0CF8               	rrf	___lltoft@c,f
  3411  098A  3EFF               	addlw	-1
  3412  098B  1D03               	skipz
  3413  098C  2985               	goto	u3665
  3414  098D  3001               	movlw	1
  3415  098E  00FC               	movwf	??___lltoft
  3416  098F  087C               	movf	??___lltoft,w
  3417  0990  07FD               	addwf	___lltoft@exp,f
  3418  0991  2980               	goto	l2285
  3419  0992                     l2287:	
  3420  0992  0878               	movf	___lltoft@c,w
  3421  0993  00F0               	movwf	___ftpack@arg
  3422  0994  0879               	movf	___lltoft@c+1,w
  3423  0995  00F1               	movwf	___ftpack@arg+1
  3424  0996  087A               	movf	___lltoft@c+2,w
  3425  0997  00F2               	movwf	___ftpack@arg+2
  3426  0998  087D               	movf	___lltoft@exp,w
  3427  0999  00FC               	movwf	??___lltoft
  3428  099A  087C               	movf	??___lltoft,w
  3429  099B  00F3               	movwf	___ftpack@exp
  3430  099C  01F4               	clrf	___ftpack@sign
  3431  099D  120A  158A  2416   	fcall	___ftpack
  3432  09A0  0870               	movf	?___ftpack,w
  3433  09A1  00F8               	movwf	?___lltoft
  3434  09A2  0871               	movf	?___ftpack+1,w
  3435  09A3  00F9               	movwf	?___lltoft+1
  3436  09A4  0872               	movf	?___ftpack+2,w
  3437  09A5  00FA               	movwf	?___lltoft+2
  3438  09A6  0008               	return
  3439  09A7                     __end_of___lltoft:	
  3440                           
  3441                           	psect	text17
  3442  0E02                     __ptext17:	
  3443 ;; *************** function ___fttol *****************
  3444 ;; Defined at:
  3445 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\fttol.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  f1              3   10[BANK0 ] float 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  lval            4   19[BANK0 ] unsigned long 
  3450 ;;  exp1            1   23[BANK0 ] unsigned char 
  3451 ;;  sign1           1   18[BANK0 ] unsigned char 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  4   10[BANK0 ] long 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3461 ;;      Params:         0       4       0       0       0
  3462 ;;      Locals:         0       6       0       0       0
  3463 ;;      Temps:          0       4       0       0       0
  3464 ;;      Totals:         0      14       0       0       0
  3465 ;;Total ram usage:       14 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_LCD_DisplayFloatNumber
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           
  3475                           ;psect for function ___fttol
  3476  0E02                     ___fttol:	
  3477                           
  3478                           ;incstack = 0
  3479                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3480  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  3481  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  3482  0E04  082A               	movf	___fttol@f1,w
  3483  0E05  00AE               	movwf	??___fttol
  3484  0E06  082B               	movf	___fttol@f1+1,w
  3485  0E07  00AF               	movwf	??___fttol+1
  3486  0E08  082C               	movf	___fttol@f1+2,w
  3487  0E09  00B0               	movwf	??___fttol+2
  3488  0E0A  1003               	clrc
  3489  0E0B  0D2F               	rlf	??___fttol+1,w
  3490  0E0C  0D30               	rlf	??___fttol+2,w
  3491  0E0D  00B1               	movwf	??___fttol+3
  3492  0E0E  0831               	movf	??___fttol+3,w
  3493  0E0F  00B7               	movwf	___fttol@exp1
  3494  0E10  0837               	movf	___fttol@exp1,w
  3495  0E11  1D03               	btfss	3,2
  3496  0E12  2E1C               	goto	l2245
  3497  0E13  3000               	movlw	0
  3498  0E14  00AD               	movwf	?___fttol+3
  3499  0E15  3000               	movlw	0
  3500  0E16  00AC               	movwf	?___fttol+2
  3501  0E17  3000               	movlw	0
  3502  0E18  00AB               	movwf	?___fttol+1
  3503  0E19  3000               	movlw	0
  3504  0E1A  00AA               	movwf	?___fttol
  3505  0E1B  0008               	return
  3506  0E1C                     l2245:	
  3507  0E1C  082A               	movf	___fttol@f1,w
  3508  0E1D  00AE               	movwf	??___fttol
  3509  0E1E  082B               	movf	___fttol@f1+1,w
  3510  0E1F  00AF               	movwf	??___fttol+1
  3511  0E20  082C               	movf	___fttol@f1+2,w
  3512  0E21  00B0               	movwf	??___fttol+2
  3513  0E22  3017               	movlw	23
  3514  0E23                     u3575:	
  3515  0E23  1003               	clrc
  3516  0E24  0CB0               	rrf	??___fttol+2,f
  3517  0E25  0CAF               	rrf	??___fttol+1,f
  3518  0E26  0CAE               	rrf	??___fttol,f
  3519  0E27  3EFF               	addlw	-1
  3520  0E28  1D03               	skipz
  3521  0E29  2E23               	goto	u3575
  3522  0E2A  082E               	movf	??___fttol,w
  3523  0E2B  00B1               	movwf	??___fttol+3
  3524  0E2C  0831               	movf	??___fttol+3,w
  3525  0E2D  00B2               	movwf	___fttol@sign1
  3526  0E2E  17AB               	bsf	___fttol@f1+1,7
  3527  0E2F  30FF               	movlw	255
  3528  0E30  05AA               	andwf	___fttol@f1,f
  3529  0E31  30FF               	movlw	255
  3530  0E32  05AB               	andwf	___fttol@f1+1,f
  3531  0E33  3000               	movlw	0
  3532  0E34  05AC               	andwf	___fttol@f1+2,f
  3533  0E35  082A               	movf	___fttol@f1,w
  3534  0E36  00B3               	movwf	___fttol@lval
  3535  0E37  082B               	movf	___fttol@f1+1,w
  3536  0E38  00B4               	movwf	___fttol@lval+1
  3537  0E39  082C               	movf	___fttol@f1+2,w
  3538  0E3A  00B5               	movwf	___fttol@lval+2
  3539  0E3B  01B6               	clrf	___fttol@lval+3
  3540  0E3C  308E               	movlw	142
  3541  0E3D  02B7               	subwf	___fttol@exp1,f
  3542  0E3E  1FB7               	btfss	___fttol@exp1,7
  3543  0E3F  2E5E               	goto	l2265
  3544  0E40  0837               	movf	___fttol@exp1,w
  3545  0E41  3A80               	xorlw	128
  3546  0E42  3E8F               	addlw	143
  3547  0E43  1803               	skipnc
  3548  0E44  2E4E               	goto	l2263
  3549  0E45  3000               	movlw	0
  3550  0E46  00AD               	movwf	?___fttol+3
  3551  0E47  3000               	movlw	0
  3552  0E48  00AC               	movwf	?___fttol+2
  3553  0E49  3000               	movlw	0
  3554  0E4A  00AB               	movwf	?___fttol+1
  3555  0E4B  3000               	movlw	0
  3556  0E4C  00AA               	movwf	?___fttol
  3557  0E4D  0008               	return
  3558  0E4E                     l2263:	
  3559  0E4E  3001               	movlw	1
  3560  0E4F                     u3605:	
  3561  0E4F  1003               	clrc
  3562  0E50  0CB6               	rrf	___fttol@lval+3,f
  3563  0E51  0CB5               	rrf	___fttol@lval+2,f
  3564  0E52  0CB4               	rrf	___fttol@lval+1,f
  3565  0E53  0CB3               	rrf	___fttol@lval,f
  3566  0E54  3EFF               	addlw	-1
  3567  0E55  1D03               	skipz
  3568  0E56  2E4F               	goto	u3605
  3569  0E57  3001               	movlw	1
  3570  0E58  00AE               	movwf	??___fttol
  3571  0E59  082E               	movf	??___fttol,w
  3572  0E5A  07B7               	addwf	___fttol@exp1,f
  3573  0E5B  1903               	btfsc	3,2
  3574  0E5C  2E79               	goto	l2273
  3575  0E5D  2E4E               	goto	l2263
  3576  0E5E                     l2265:	
  3577  0E5E  3018               	movlw	24
  3578  0E5F  0237               	subwf	___fttol@exp1,w
  3579  0E60  1C03               	skipc
  3580  0E61  2E76               	goto	l757
  3581  0E62  3000               	movlw	0
  3582  0E63  00AD               	movwf	?___fttol+3
  3583  0E64  3000               	movlw	0
  3584  0E65  00AC               	movwf	?___fttol+2
  3585  0E66  3000               	movlw	0
  3586  0E67  00AB               	movwf	?___fttol+1
  3587  0E68  3000               	movlw	0
  3588  0E69  00AA               	movwf	?___fttol
  3589  0E6A  0008               	return
  3590  0E6B                     l2271:	
  3591  0E6B  3001               	movlw	1
  3592  0E6C  00AE               	movwf	??___fttol
  3593  0E6D                     u3635:	
  3594  0E6D  1003               	clrc
  3595  0E6E  0DB3               	rlf	___fttol@lval,f
  3596  0E6F  0DB4               	rlf	___fttol@lval+1,f
  3597  0E70  0DB5               	rlf	___fttol@lval+2,f
  3598  0E71  0DB6               	rlf	___fttol@lval+3,f
  3599  0E72  0BAE               	decfsz	??___fttol,f
  3600  0E73  2E6D               	goto	u3635
  3601  0E74  3001               	movlw	1
  3602  0E75  02B7               	subwf	___fttol@exp1,f
  3603  0E76                     l757:	
  3604  0E76  0837               	movf	___fttol@exp1,w
  3605  0E77  1D03               	btfss	3,2
  3606  0E78  2E6B               	goto	l2271
  3607  0E79                     l2273:	
  3608  0E79  0832               	movf	___fttol@sign1,w
  3609  0E7A  1903               	btfsc	3,2
  3610  0E7B  2E87               	goto	l2277
  3611  0E7C  09B3               	comf	___fttol@lval,f
  3612  0E7D  09B4               	comf	___fttol@lval+1,f
  3613  0E7E  09B5               	comf	___fttol@lval+2,f
  3614  0E7F  09B6               	comf	___fttol@lval+3,f
  3615  0E80  0AB3               	incf	___fttol@lval,f
  3616  0E81  1903               	skipnz
  3617  0E82  0AB4               	incf	___fttol@lval+1,f
  3618  0E83  1903               	skipnz
  3619  0E84  0AB5               	incf	___fttol@lval+2,f
  3620  0E85  1903               	skipnz
  3621  0E86  0AB6               	incf	___fttol@lval+3,f
  3622  0E87                     l2277:	
  3623  0E87  0836               	movf	___fttol@lval+3,w
  3624  0E88  00AD               	movwf	?___fttol+3
  3625  0E89  0835               	movf	___fttol@lval+2,w
  3626  0E8A  00AC               	movwf	?___fttol+2
  3627  0E8B  0834               	movf	___fttol@lval+1,w
  3628  0E8C  00AB               	movwf	?___fttol+1
  3629  0E8D  0833               	movf	___fttol@lval,w
  3630  0E8E  00AA               	movwf	?___fttol
  3631  0E8F  0008               	return
  3632  0E90                     __end_of___fttol:	
  3633                           
  3634                           	psect	text18
  3635  0866                     __ptext18:	
  3636 ;; *************** function ___ftneg *****************
  3637 ;; Defined at:
  3638 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftneg.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  f1              3    0[BANK0 ] float 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;		None
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  3    0[BANK0 ] float 
  3645 ;; Registers used:
  3646 ;;		wreg
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3652 ;;      Params:         0       3       0       0       0
  3653 ;;      Locals:         0       0       0       0       0
  3654 ;;      Temps:          0       0       0       0       0
  3655 ;;      Totals:         0       3       0       0       0
  3656 ;;Total ram usage:        3 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		_LCD_DisplayFloatNumber
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           
  3666                           ;psect for function ___ftneg
  3667  0866                     ___ftneg:	
  3668                           
  3669                           ;incstack = 0
  3670                           ; Regs used in ___ftneg: [wreg]
  3671  0866  1283               	bcf	3,5	;RP0=0, select bank0
  3672  0867  1303               	bcf	3,6	;RP1=0, select bank0
  3673  0868  0822               	movf	___ftneg@f1+2,w
  3674  0869  0421               	iorwf	___ftneg@f1+1,w
  3675  086A  0420               	iorwf	___ftneg@f1,w
  3676  086B  1903               	skipnz
  3677  086C  0008               	return
  3678  086D  3080               	movlw	128
  3679  086E  06A2               	xorwf	___ftneg@f1+2,f
  3680  086F  0008               	return
  3681  0870                     __end_of___ftneg:	
  3682                           
  3683                           	psect	text19
  3684  0F2F                     __ptext19:	
  3685 ;; *************** function ___ftmul *****************
  3686 ;; Defined at:
  3687 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftmul.c"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;  f1              3    8[COMMON] float 
  3690 ;;  f2              3   11[COMMON] float 
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  3693 ;;  sign            1    9[BANK0 ] unsigned char 
  3694 ;;  cntr            1    8[BANK0 ] unsigned char 
  3695 ;;  exp             1    4[BANK0 ] unsigned char 
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  3    8[COMMON] float 
  3698 ;; Registers used:
  3699 ;;		wreg, status,2, status,0, pclath, cstack
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3705 ;;      Params:         6       0       0       0       0
  3706 ;;      Locals:         0       6       0       0       0
  3707 ;;      Temps:          0       4       0       0       0
  3708 ;;      Totals:         6      10       0       0       0
  3709 ;;Total ram usage:       16 bytes
  3710 ;; Hardware stack levels used:    1
  3711 ;; Hardware stack levels required when called:    1
  3712 ;; This function calls:
  3713 ;;		___ftpack
  3714 ;; This function is called by:
  3715 ;;		_LCD_DisplayFloatNumber
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           
  3720                           ;psect for function ___ftmul
  3721  0F2F                     ___ftmul:	
  3722                           
  3723                           ;incstack = 0
  3724                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3725  0F2F  0878               	movf	___ftmul@f1,w
  3726  0F30  1283               	bcf	3,5	;RP0=0, select bank0
  3727  0F31  1303               	bcf	3,6	;RP1=0, select bank0
  3728  0F32  00A0               	movwf	??___ftmul
  3729  0F33  0879               	movf	___ftmul@f1+1,w
  3730  0F34  00A1               	movwf	??___ftmul+1
  3731  0F35  087A               	movf	___ftmul@f1+2,w
  3732  0F36  00A2               	movwf	??___ftmul+2
  3733  0F37  1003               	clrc
  3734  0F38  0D21               	rlf	??___ftmul+1,w
  3735  0F39  0D22               	rlf	??___ftmul+2,w
  3736  0F3A  00A3               	movwf	??___ftmul+3
  3737  0F3B  0823               	movf	??___ftmul+3,w
  3738  0F3C  00A4               	movwf	___ftmul@exp
  3739  0F3D  0824               	movf	___ftmul@exp,w
  3740  0F3E  1D03               	btfss	3,2
  3741  0F3F  2F47               	goto	l2187
  3742  0F40  3000               	movlw	0
  3743  0F41  00F8               	movwf	?___ftmul
  3744  0F42  3000               	movlw	0
  3745  0F43  00F9               	movwf	?___ftmul+1
  3746  0F44  3000               	movlw	0
  3747  0F45  00FA               	movwf	?___ftmul+2
  3748  0F46  0008               	return
  3749  0F47                     l2187:	
  3750  0F47  087B               	movf	___ftmul@f2,w
  3751  0F48  00A0               	movwf	??___ftmul
  3752  0F49  087C               	movf	___ftmul@f2+1,w
  3753  0F4A  00A1               	movwf	??___ftmul+1
  3754  0F4B  087D               	movf	___ftmul@f2+2,w
  3755  0F4C  00A2               	movwf	??___ftmul+2
  3756  0F4D  1003               	clrc
  3757  0F4E  0D21               	rlf	??___ftmul+1,w
  3758  0F4F  0D22               	rlf	??___ftmul+2,w
  3759  0F50  00A3               	movwf	??___ftmul+3
  3760  0F51  0823               	movf	??___ftmul+3,w
  3761  0F52  00A9               	movwf	___ftmul@sign
  3762  0F53  0829               	movf	___ftmul@sign,w
  3763  0F54  1D03               	btfss	3,2
  3764  0F55  2F5D               	goto	l2193
  3765  0F56  3000               	movlw	0
  3766  0F57  00F8               	movwf	?___ftmul
  3767  0F58  3000               	movlw	0
  3768  0F59  00F9               	movwf	?___ftmul+1
  3769  0F5A  3000               	movlw	0
  3770  0F5B  00FA               	movwf	?___ftmul+2
  3771  0F5C  0008               	return
  3772  0F5D                     l2193:	
  3773  0F5D  0829               	movf	___ftmul@sign,w
  3774  0F5E  3E7B               	addlw	123
  3775  0F5F  00A0               	movwf	??___ftmul
  3776  0F60  0820               	movf	??___ftmul,w
  3777  0F61  07A4               	addwf	___ftmul@exp,f
  3778  0F62  0878               	movf	___ftmul@f1,w
  3779  0F63  00A0               	movwf	??___ftmul
  3780  0F64  0879               	movf	___ftmul@f1+1,w
  3781  0F65  00A1               	movwf	??___ftmul+1
  3782  0F66  087A               	movf	___ftmul@f1+2,w
  3783  0F67  00A2               	movwf	??___ftmul+2
  3784  0F68  3010               	movlw	16
  3785  0F69                     u3435:	
  3786  0F69  1003               	clrc
  3787  0F6A  0CA2               	rrf	??___ftmul+2,f
  3788  0F6B  0CA1               	rrf	??___ftmul+1,f
  3789  0F6C  0CA0               	rrf	??___ftmul,f
  3790  0F6D  3EFF               	addlw	-1
  3791  0F6E  1D03               	skipz
  3792  0F6F  2F69               	goto	u3435
  3793  0F70  0820               	movf	??___ftmul,w
  3794  0F71  00A3               	movwf	??___ftmul+3
  3795  0F72  0823               	movf	??___ftmul+3,w
  3796  0F73  00A9               	movwf	___ftmul@sign
  3797  0F74  087B               	movf	___ftmul@f2,w
  3798  0F75  00A0               	movwf	??___ftmul
  3799  0F76  087C               	movf	___ftmul@f2+1,w
  3800  0F77  00A1               	movwf	??___ftmul+1
  3801  0F78  087D               	movf	___ftmul@f2+2,w
  3802  0F79  00A2               	movwf	??___ftmul+2
  3803  0F7A  3010               	movlw	16
  3804  0F7B                     u3445:	
  3805  0F7B  1003               	clrc
  3806  0F7C  0CA2               	rrf	??___ftmul+2,f
  3807  0F7D  0CA1               	rrf	??___ftmul+1,f
  3808  0F7E  0CA0               	rrf	??___ftmul,f
  3809  0F7F  3EFF               	addlw	-1
  3810  0F80  1D03               	skipz
  3811  0F81  2F7B               	goto	u3445
  3812  0F82  0820               	movf	??___ftmul,w
  3813  0F83  00A3               	movwf	??___ftmul+3
  3814  0F84  0823               	movf	??___ftmul+3,w
  3815  0F85  06A9               	xorwf	___ftmul@sign,f
  3816  0F86  3080               	movlw	128
  3817  0F87  00A0               	movwf	??___ftmul
  3818  0F88  0820               	movf	??___ftmul,w
  3819  0F89  05A9               	andwf	___ftmul@sign,f
  3820  0F8A  17F9               	bsf	___ftmul@f1+1,7
  3821  0F8B  17FC               	bsf	___ftmul@f2+1,7
  3822  0F8C  30FF               	movlw	255
  3823  0F8D  05FB               	andwf	___ftmul@f2,f
  3824  0F8E  30FF               	movlw	255
  3825  0F8F  05FC               	andwf	___ftmul@f2+1,f
  3826  0F90  3000               	movlw	0
  3827  0F91  05FD               	andwf	___ftmul@f2+2,f
  3828  0F92  3000               	movlw	0
  3829  0F93  00A5               	movwf	___ftmul@f3_as_product
  3830  0F94  3000               	movlw	0
  3831  0F95  00A6               	movwf	___ftmul@f3_as_product+1
  3832  0F96  3000               	movlw	0
  3833  0F97  00A7               	movwf	___ftmul@f3_as_product+2
  3834  0F98  3007               	movlw	7
  3835  0F99  00A0               	movwf	??___ftmul
  3836  0F9A  0820               	movf	??___ftmul,w
  3837  0F9B  00A8               	movwf	___ftmul@cntr
  3838  0F9C                     l2205:	
  3839  0F9C  1C78               	btfss	___ftmul@f1,0
  3840  0F9D  2FAC               	goto	l2209
  3841  0F9E  087B               	movf	___ftmul@f2,w
  3842  0F9F  07A5               	addwf	___ftmul@f3_as_product,f
  3843  0FA0  087C               	movf	___ftmul@f2+1,w
  3844  0FA1  1103               	clrz
  3845  0FA2  1803               	skipnc
  3846  0FA3  0A7C               	incf	___ftmul@f2+1,w
  3847  0FA4  1D03               	btfss	3,2
  3848  0FA5  07A6               	addwf	___ftmul@f3_as_product+1,f
  3849  0FA6  087D               	movf	___ftmul@f2+2,w
  3850  0FA7  1103               	clrz
  3851  0FA8  1803               	skipnc
  3852  0FA9  0A7D               	incf	___ftmul@f2+2,w
  3853  0FAA  1D03               	btfss	3,2
  3854  0FAB  07A7               	addwf	___ftmul@f3_as_product+2,f
  3855  0FAC                     l2209:	
  3856  0FAC  3001               	movlw	1
  3857  0FAD                     u3475:	
  3858  0FAD  1003               	clrc
  3859  0FAE  0CFA               	rrf	___ftmul@f1+2,f
  3860  0FAF  0CF9               	rrf	___ftmul@f1+1,f
  3861  0FB0  0CF8               	rrf	___ftmul@f1,f
  3862  0FB1  3EFF               	addlw	-1
  3863  0FB2  1D03               	skipz
  3864  0FB3  2FAD               	goto	u3475
  3865  0FB4  3001               	movlw	1
  3866  0FB5                     u3485:	
  3867  0FB5  1003               	clrc
  3868  0FB6  0DFB               	rlf	___ftmul@f2,f
  3869  0FB7  0DFC               	rlf	___ftmul@f2+1,f
  3870  0FB8  0DFD               	rlf	___ftmul@f2+2,f
  3871  0FB9  3EFF               	addlw	-1
  3872  0FBA  1D03               	skipz
  3873  0FBB  2FB5               	goto	u3485
  3874  0FBC  3001               	movlw	1
  3875  0FBD  02A8               	subwf	___ftmul@cntr,f
  3876  0FBE  1D03               	btfss	3,2
  3877  0FBF  2F9C               	goto	l2205
  3878  0FC0  3009               	movlw	9
  3879  0FC1  00A0               	movwf	??___ftmul
  3880  0FC2  0820               	movf	??___ftmul,w
  3881  0FC3  00A8               	movwf	___ftmul@cntr
  3882  0FC4                     l2217:	
  3883  0FC4  1C78               	btfss	___ftmul@f1,0
  3884  0FC5  2FD4               	goto	l2221
  3885  0FC6  087B               	movf	___ftmul@f2,w
  3886  0FC7  07A5               	addwf	___ftmul@f3_as_product,f
  3887  0FC8  087C               	movf	___ftmul@f2+1,w
  3888  0FC9  1103               	clrz
  3889  0FCA  1803               	skipnc
  3890  0FCB  0A7C               	incf	___ftmul@f2+1,w
  3891  0FCC  1D03               	btfss	3,2
  3892  0FCD  07A6               	addwf	___ftmul@f3_as_product+1,f
  3893  0FCE  087D               	movf	___ftmul@f2+2,w
  3894  0FCF  1103               	clrz
  3895  0FD0  1803               	skipnc
  3896  0FD1  0A7D               	incf	___ftmul@f2+2,w
  3897  0FD2  1D03               	btfss	3,2
  3898  0FD3  07A7               	addwf	___ftmul@f3_as_product+2,f
  3899  0FD4                     l2221:	
  3900  0FD4  3001               	movlw	1
  3901  0FD5                     u3525:	
  3902  0FD5  1003               	clrc
  3903  0FD6  0CFA               	rrf	___ftmul@f1+2,f
  3904  0FD7  0CF9               	rrf	___ftmul@f1+1,f
  3905  0FD8  0CF8               	rrf	___ftmul@f1,f
  3906  0FD9  3EFF               	addlw	-1
  3907  0FDA  1D03               	skipz
  3908  0FDB  2FD5               	goto	u3525
  3909  0FDC  3001               	movlw	1
  3910  0FDD                     u3535:	
  3911  0FDD  1003               	clrc
  3912  0FDE  0CA7               	rrf	___ftmul@f3_as_product+2,f
  3913  0FDF  0CA6               	rrf	___ftmul@f3_as_product+1,f
  3914  0FE0  0CA5               	rrf	___ftmul@f3_as_product,f
  3915  0FE1  3EFF               	addlw	-1
  3916  0FE2  1D03               	skipz
  3917  0FE3  2FDD               	goto	u3535
  3918  0FE4  3001               	movlw	1
  3919  0FE5  02A8               	subwf	___ftmul@cntr,f
  3920  0FE6  1D03               	btfss	3,2
  3921  0FE7  2FC4               	goto	l2217
  3922  0FE8  0825               	movf	___ftmul@f3_as_product,w
  3923  0FE9  00F0               	movwf	___ftpack@arg
  3924  0FEA  0826               	movf	___ftmul@f3_as_product+1,w
  3925  0FEB  00F1               	movwf	___ftpack@arg+1
  3926  0FEC  0827               	movf	___ftmul@f3_as_product+2,w
  3927  0FED  00F2               	movwf	___ftpack@arg+2
  3928  0FEE  0824               	movf	___ftmul@exp,w
  3929  0FEF  00A0               	movwf	??___ftmul
  3930  0FF0  0820               	movf	??___ftmul,w
  3931  0FF1  00F3               	movwf	___ftpack@exp
  3932  0FF2  0829               	movf	___ftmul@sign,w
  3933  0FF3  00A1               	movwf	??___ftmul+1
  3934  0FF4  0821               	movf	??___ftmul+1,w
  3935  0FF5  00F4               	movwf	___ftpack@sign
  3936  0FF6  120A  158A  2416   	fcall	___ftpack
  3937  0FF9  0870               	movf	?___ftpack,w
  3938  0FFA  00F8               	movwf	?___ftmul
  3939  0FFB  0871               	movf	?___ftpack+1,w
  3940  0FFC  00F9               	movwf	?___ftmul+1
  3941  0FFD  0872               	movf	?___ftpack+2,w
  3942  0FFE  00FA               	movwf	?___ftmul+2
  3943  0FFF  0008               	return
  3944  1000                     __end_of___ftmul:	
  3945                           
  3946                           	psect	text20
  3947  0499                     __ptext20:	
  3948 ;; *************** function ___ftadd *****************
  3949 ;; Defined at:
  3950 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftadd.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  f1              3    3[BANK0 ] float 
  3953 ;;  f2              3    6[BANK0 ] float 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  exp1            1   15[BANK0 ] unsigned char 
  3956 ;;  exp2            1   14[BANK0 ] unsigned char 
  3957 ;;  sign            1   13[BANK0 ] unsigned char 
  3958 ;; Return value:  Size  Location     Type
  3959 ;;                  3    3[BANK0 ] float 
  3960 ;; Registers used:
  3961 ;;		wreg, status,2, status,0, pclath, cstack
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3967 ;;      Params:         0       6       0       0       0
  3968 ;;      Locals:         0       3       0       0       0
  3969 ;;      Temps:          0       4       0       0       0
  3970 ;;      Totals:         0      13       0       0       0
  3971 ;;Total ram usage:       13 bytes
  3972 ;; Hardware stack levels used:    1
  3973 ;; Hardware stack levels required when called:    1
  3974 ;; This function calls:
  3975 ;;		___ftpack
  3976 ;; This function is called by:
  3977 ;;		_LCD_DisplayFloatNumber
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           
  3982                           ;psect for function ___ftadd
  3983  0499                     ___ftadd:	
  3984                           
  3985                           ;incstack = 0
  3986                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3987  0499  1283               	bcf	3,5	;RP0=0, select bank0
  3988  049A  1303               	bcf	3,6	;RP1=0, select bank0
  3989  049B  0823               	movf	___ftadd@f1,w
  3990  049C  00A9               	movwf	??___ftadd
  3991  049D  0824               	movf	___ftadd@f1+1,w
  3992  049E  00AA               	movwf	??___ftadd+1
  3993  049F  0825               	movf	___ftadd@f1+2,w
  3994  04A0  00AB               	movwf	??___ftadd+2
  3995  04A1  1003               	clrc
  3996  04A2  0D2A               	rlf	??___ftadd+1,w
  3997  04A3  0D2B               	rlf	??___ftadd+2,w
  3998  04A4  00AC               	movwf	??___ftadd+3
  3999  04A5  082C               	movf	??___ftadd+3,w
  4000  04A6  00AF               	movwf	___ftadd@exp1
  4001  04A7  0826               	movf	___ftadd@f2,w
  4002  04A8  00A9               	movwf	??___ftadd
  4003  04A9  0827               	movf	___ftadd@f2+1,w
  4004  04AA  00AA               	movwf	??___ftadd+1
  4005  04AB  0828               	movf	___ftadd@f2+2,w
  4006  04AC  00AB               	movwf	??___ftadd+2
  4007  04AD  1003               	clrc
  4008  04AE  0D2A               	rlf	??___ftadd+1,w
  4009  04AF  0D2B               	rlf	??___ftadd+2,w
  4010  04B0  00AC               	movwf	??___ftadd+3
  4011  04B1  082C               	movf	??___ftadd+3,w
  4012  04B2  00AE               	movwf	___ftadd@exp2
  4013  04B3  082F               	movf	___ftadd@exp1,w
  4014  04B4  1903               	btfsc	3,2
  4015  04B5  2CC2               	goto	l2117
  4016  04B6  082E               	movf	___ftadd@exp2,w
  4017  04B7  022F               	subwf	___ftadd@exp1,w
  4018  04B8  1803               	skipnc
  4019  04B9  2CC9               	goto	l2121
  4020  04BA  032F               	decf	___ftadd@exp1,w
  4021  04BB  3AFF               	xorlw	255
  4022  04BC  072E               	addwf	___ftadd@exp2,w
  4023  04BD  00A9               	movwf	??___ftadd
  4024  04BE  3019               	movlw	25
  4025  04BF  0229               	subwf	??___ftadd,w
  4026  04C0  1C03               	skipc
  4027  04C1  2CC9               	goto	l2121
  4028  04C2                     l2117:	
  4029  04C2  0826               	movf	___ftadd@f2,w
  4030  04C3  00A3               	movwf	?___ftadd
  4031  04C4  0827               	movf	___ftadd@f2+1,w
  4032  04C5  00A4               	movwf	?___ftadd+1
  4033  04C6  0828               	movf	___ftadd@f2+2,w
  4034  04C7  00A5               	movwf	?___ftadd+2
  4035  04C8  0008               	return
  4036  04C9                     l2121:	
  4037  04C9  082E               	movf	___ftadd@exp2,w
  4038  04CA  1903               	btfsc	3,2
  4039  04CB  0008               	return
  4040  04CC  082F               	movf	___ftadd@exp1,w
  4041  04CD  022E               	subwf	___ftadd@exp2,w
  4042  04CE  1803               	skipnc
  4043  04CF  2CD8               	goto	l2127
  4044  04D0  032E               	decf	___ftadd@exp2,w
  4045  04D1  3AFF               	xorlw	255
  4046  04D2  072F               	addwf	___ftadd@exp1,w
  4047  04D3  00A9               	movwf	??___ftadd
  4048  04D4  3019               	movlw	25
  4049  04D5  0229               	subwf	??___ftadd,w
  4050  04D6  1803               	btfsc	3,0
  4051  04D7  0008               	return
  4052  04D8                     l2127:	
  4053  04D8  3006               	movlw	6
  4054  04D9  00A9               	movwf	??___ftadd
  4055  04DA  0829               	movf	??___ftadd,w
  4056  04DB  00AD               	movwf	___ftadd@sign
  4057  04DC  1BA5               	btfsc	___ftadd@f1+2,7
  4058  04DD  17AD               	bsf	___ftadd@sign,7
  4059  04DE  1BA8               	btfsc	___ftadd@f2+2,7
  4060  04DF  172D               	bsf	___ftadd@sign,6
  4061  04E0  17A4               	bsf	___ftadd@f1+1,7
  4062  04E1  30FF               	movlw	255
  4063  04E2  05A3               	andwf	___ftadd@f1,f
  4064  04E3  30FF               	movlw	255
  4065  04E4  05A4               	andwf	___ftadd@f1+1,f
  4066  04E5  3000               	movlw	0
  4067  04E6  05A5               	andwf	___ftadd@f1+2,f
  4068  04E7  17A7               	bsf	___ftadd@f2+1,7
  4069  04E8  30FF               	movlw	255
  4070  04E9  05A6               	andwf	___ftadd@f2,f
  4071  04EA  30FF               	movlw	255
  4072  04EB  05A7               	andwf	___ftadd@f2+1,f
  4073  04EC  3000               	movlw	0
  4074  04ED  05A8               	andwf	___ftadd@f2+2,f
  4075  04EE  082E               	movf	___ftadd@exp2,w
  4076  04EF  022F               	subwf	___ftadd@exp1,w
  4077  04F0  1803               	skipnc
  4078  04F1  2D18               	goto	l2149
  4079  04F2                     l2139:	
  4080  04F2  3001               	movlw	1
  4081  04F3                     u3265:	
  4082  04F3  1003               	clrc
  4083  04F4  0DA6               	rlf	___ftadd@f2,f
  4084  04F5  0DA7               	rlf	___ftadd@f2+1,f
  4085  04F6  0DA8               	rlf	___ftadd@f2+2,f
  4086  04F7  3EFF               	addlw	-1
  4087  04F8  1D03               	skipz
  4088  04F9  2CF3               	goto	u3265
  4089  04FA  3001               	movlw	1
  4090  04FB  02AE               	subwf	___ftadd@exp2,f
  4091  04FC  082E               	movf	___ftadd@exp2,w
  4092  04FD  062F               	xorwf	___ftadd@exp1,w
  4093  04FE  1903               	skipnz
  4094  04FF  2D13               	goto	l2147
  4095  0500  3001               	movlw	1
  4096  0501  02AD               	subwf	___ftadd@sign,f
  4097  0502  082D               	movf	___ftadd@sign,w
  4098  0503  3907               	andlw	7
  4099  0504  1903               	btfsc	3,2
  4100  0505  2D13               	goto	l2147
  4101  0506  2CF2               	goto	l2139
  4102  0507                     l2145:	
  4103  0507  3001               	movlw	1
  4104  0508                     u3295:	
  4105  0508  1003               	clrc
  4106  0509  0CA5               	rrf	___ftadd@f1+2,f
  4107  050A  0CA4               	rrf	___ftadd@f1+1,f
  4108  050B  0CA3               	rrf	___ftadd@f1,f
  4109  050C  3EFF               	addlw	-1
  4110  050D  1D03               	skipz
  4111  050E  2D08               	goto	u3295
  4112  050F  3001               	movlw	1
  4113  0510  00A9               	movwf	??___ftadd
  4114  0511  0829               	movf	??___ftadd,w
  4115  0512  07AF               	addwf	___ftadd@exp1,f
  4116  0513                     l2147:	
  4117  0513  082F               	movf	___ftadd@exp1,w
  4118  0514  062E               	xorwf	___ftadd@exp2,w
  4119  0515  1903               	btfsc	3,2
  4120  0516  2D41               	goto	l697
  4121  0517  2D07               	goto	l2145
  4122  0518                     l2149:	
  4123  0518  082F               	movf	___ftadd@exp1,w
  4124  0519  022E               	subwf	___ftadd@exp2,w
  4125  051A  1803               	skipnc
  4126  051B  2D41               	goto	l697
  4127  051C                     l2151:	
  4128  051C  3001               	movlw	1
  4129  051D                     u3325:	
  4130  051D  1003               	clrc
  4131  051E  0DA3               	rlf	___ftadd@f1,f
  4132  051F  0DA4               	rlf	___ftadd@f1+1,f
  4133  0520  0DA5               	rlf	___ftadd@f1+2,f
  4134  0521  3EFF               	addlw	-1
  4135  0522  1D03               	skipz
  4136  0523  2D1D               	goto	u3325
  4137  0524  3001               	movlw	1
  4138  0525  02AF               	subwf	___ftadd@exp1,f
  4139  0526  082E               	movf	___ftadd@exp2,w
  4140  0527  062F               	xorwf	___ftadd@exp1,w
  4141  0528  1903               	skipnz
  4142  0529  2D3D               	goto	l2159
  4143  052A  3001               	movlw	1
  4144  052B  02AD               	subwf	___ftadd@sign,f
  4145  052C  082D               	movf	___ftadd@sign,w
  4146  052D  3907               	andlw	7
  4147  052E  1903               	btfsc	3,2
  4148  052F  2D3D               	goto	l2159
  4149  0530  2D1C               	goto	l2151
  4150  0531                     l2157:	
  4151  0531  3001               	movlw	1
  4152  0532                     u3355:	
  4153  0532  1003               	clrc
  4154  0533  0CA8               	rrf	___ftadd@f2+2,f
  4155  0534  0CA7               	rrf	___ftadd@f2+1,f
  4156  0535  0CA6               	rrf	___ftadd@f2,f
  4157  0536  3EFF               	addlw	-1
  4158  0537  1D03               	skipz
  4159  0538  2D32               	goto	u3355
  4160  0539  3001               	movlw	1
  4161  053A  00A9               	movwf	??___ftadd
  4162  053B  0829               	movf	??___ftadd,w
  4163  053C  07AE               	addwf	___ftadd@exp2,f
  4164  053D                     l2159:	
  4165  053D  082F               	movf	___ftadd@exp1,w
  4166  053E  062E               	xorwf	___ftadd@exp2,w
  4167  053F  1D03               	skipz
  4168  0540  2D31               	goto	l2157
  4169  0541                     l697:	
  4170  0541  1FAD               	btfss	___ftadd@sign,7
  4171  0542  2D53               	goto	l2163
  4172  0543  30FF               	movlw	255
  4173  0544  06A3               	xorwf	___ftadd@f1,f
  4174  0545  30FF               	movlw	255
  4175  0546  06A4               	xorwf	___ftadd@f1+1,f
  4176  0547  30FF               	movlw	255
  4177  0548  06A5               	xorwf	___ftadd@f1+2,f
  4178  0549  3001               	movlw	1
  4179  054A  07A3               	addwf	___ftadd@f1,f
  4180  054B  3000               	movlw	0
  4181  054C  1803               	skipnc
  4182  054D  3001               	movlw	1
  4183  054E  07A4               	addwf	___ftadd@f1+1,f
  4184  054F  3000               	movlw	0
  4185  0550  1803               	skipnc
  4186  0551  3001               	movlw	1
  4187  0552  07A5               	addwf	___ftadd@f1+2,f
  4188  0553                     l2163:	
  4189  0553  1F2D               	btfss	___ftadd@sign,6
  4190  0554  2D65               	goto	l2167
  4191  0555  30FF               	movlw	255
  4192  0556  06A6               	xorwf	___ftadd@f2,f
  4193  0557  30FF               	movlw	255
  4194  0558  06A7               	xorwf	___ftadd@f2+1,f
  4195  0559  30FF               	movlw	255
  4196  055A  06A8               	xorwf	___ftadd@f2+2,f
  4197  055B  3001               	movlw	1
  4198  055C  07A6               	addwf	___ftadd@f2,f
  4199  055D  3000               	movlw	0
  4200  055E  1803               	skipnc
  4201  055F  3001               	movlw	1
  4202  0560  07A7               	addwf	___ftadd@f2+1,f
  4203  0561  3000               	movlw	0
  4204  0562  1803               	skipnc
  4205  0563  3001               	movlw	1
  4206  0564  07A8               	addwf	___ftadd@f2+2,f
  4207  0565                     l2167:	
  4208  0565  01AD               	clrf	___ftadd@sign
  4209  0566  0823               	movf	___ftadd@f1,w
  4210  0567  07A6               	addwf	___ftadd@f2,f
  4211  0568  0824               	movf	___ftadd@f1+1,w
  4212  0569  1103               	clrz
  4213  056A  1803               	skipnc
  4214  056B  0A24               	incf	___ftadd@f1+1,w
  4215  056C  1D03               	btfss	3,2
  4216  056D  07A7               	addwf	___ftadd@f2+1,f
  4217  056E  0825               	movf	___ftadd@f1+2,w
  4218  056F  1103               	clrz
  4219  0570  1803               	skipnc
  4220  0571  0A25               	incf	___ftadd@f1+2,w
  4221  0572  1D03               	btfss	3,2
  4222  0573  07A8               	addwf	___ftadd@f2+2,f
  4223  0574  1FA8               	btfss	___ftadd@f2+2,7
  4224  0575  2D88               	goto	l2177
  4225  0576  30FF               	movlw	255
  4226  0577  06A6               	xorwf	___ftadd@f2,f
  4227  0578  30FF               	movlw	255
  4228  0579  06A7               	xorwf	___ftadd@f2+1,f
  4229  057A  30FF               	movlw	255
  4230  057B  06A8               	xorwf	___ftadd@f2+2,f
  4231  057C  3001               	movlw	1
  4232  057D  07A6               	addwf	___ftadd@f2,f
  4233  057E  3000               	movlw	0
  4234  057F  1803               	skipnc
  4235  0580  3001               	movlw	1
  4236  0581  07A7               	addwf	___ftadd@f2+1,f
  4237  0582  3000               	movlw	0
  4238  0583  1803               	skipnc
  4239  0584  3001               	movlw	1
  4240  0585  07A8               	addwf	___ftadd@f2+2,f
  4241  0586  01AD               	clrf	___ftadd@sign
  4242  0587  0AAD               	incf	___ftadd@sign,f
  4243  0588                     l2177:	
  4244  0588  0826               	movf	___ftadd@f2,w
  4245  0589  00F0               	movwf	___ftpack@arg
  4246  058A  0827               	movf	___ftadd@f2+1,w
  4247  058B  00F1               	movwf	___ftpack@arg+1
  4248  058C  0828               	movf	___ftadd@f2+2,w
  4249  058D  00F2               	movwf	___ftpack@arg+2
  4250  058E  082F               	movf	___ftadd@exp1,w
  4251  058F  00A9               	movwf	??___ftadd
  4252  0590  0829               	movf	??___ftadd,w
  4253  0591  00F3               	movwf	___ftpack@exp
  4254  0592  082D               	movf	___ftadd@sign,w
  4255  0593  00AA               	movwf	??___ftadd+1
  4256  0594  082A               	movf	??___ftadd+1,w
  4257  0595  00F4               	movwf	___ftpack@sign
  4258  0596  120A  158A  2416   	fcall	___ftpack
  4259  0599  0870               	movf	?___ftpack,w
  4260  059A  1283               	bcf	3,5	;RP0=0, select bank0
  4261  059B  1303               	bcf	3,6	;RP1=0, select bank0
  4262  059C  00A3               	movwf	?___ftadd
  4263  059D  0871               	movf	?___ftpack+1,w
  4264  059E  00A4               	movwf	?___ftadd+1
  4265  059F  0872               	movf	?___ftpack+2,w
  4266  05A0  00A5               	movwf	?___ftadd+2
  4267  05A1  0008               	return
  4268  05A2                     __end_of___ftadd:	
  4269                           
  4270                           	psect	text21
  4271  0C16                     __ptext21:	
  4272 ;; *************** function ___ftpack *****************
  4273 ;; Defined at:
  4274 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\float.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  arg             3    0[COMMON] unsigned um
  4277 ;;  exp             1    3[COMMON] unsigned char 
  4278 ;;  sign            1    4[COMMON] unsigned char 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;		None
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  3    0[COMMON] float 
  4283 ;; Registers used:
  4284 ;;		wreg, status,2, status,0
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4290 ;;      Params:         5       0       0       0       0
  4291 ;;      Locals:         0       0       0       0       0
  4292 ;;      Temps:          3       0       0       0       0
  4293 ;;      Totals:         8       0       0       0       0
  4294 ;;Total ram usage:        8 bytes
  4295 ;; Hardware stack levels used:    1
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		___ftadd
  4300 ;;		___ftmul
  4301 ;;		___lltoft
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           
  4306                           ;psect for function ___ftpack
  4307  0C16                     ___ftpack:	
  4308                           
  4309                           ;incstack = 0
  4310                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4311  0C16  0873               	movf	___ftpack@exp,w
  4312  0C17  1903               	btfsc	3,2
  4313  0C18  2C1E               	goto	l1987
  4314  0C19  0872               	movf	___ftpack@arg+2,w
  4315  0C1A  0471               	iorwf	___ftpack@arg+1,w
  4316  0C1B  0470               	iorwf	___ftpack@arg,w
  4317  0C1C  1D03               	skipz
  4318  0C1D  2C31               	goto	l1993
  4319  0C1E                     l1987:	
  4320  0C1E  3000               	movlw	0
  4321  0C1F  00F0               	movwf	?___ftpack
  4322  0C20  3000               	movlw	0
  4323  0C21  00F1               	movwf	?___ftpack+1
  4324  0C22  3000               	movlw	0
  4325  0C23  00F2               	movwf	?___ftpack+2
  4326  0C24  0008               	return
  4327  0C25                     l1991:	
  4328  0C25  3001               	movlw	1
  4329  0C26  00F5               	movwf	??___ftpack
  4330  0C27  0875               	movf	??___ftpack,w
  4331  0C28  07F3               	addwf	___ftpack@exp,f
  4332  0C29  3001               	movlw	1
  4333  0C2A                     u2805:	
  4334  0C2A  1003               	clrc
  4335  0C2B  0CF2               	rrf	___ftpack@arg+2,f
  4336  0C2C  0CF1               	rrf	___ftpack@arg+1,f
  4337  0C2D  0CF0               	rrf	___ftpack@arg,f
  4338  0C2E  3EFF               	addlw	-1
  4339  0C2F  1D03               	skipz
  4340  0C30  2C2A               	goto	u2805
  4341  0C31                     l1993:	
  4342  0C31  30FE               	movlw	254
  4343  0C32  0572               	andwf	___ftpack@arg+2,w
  4344  0C33  1903               	btfsc	3,2
  4345  0C34  2C4C               	goto	l666
  4346  0C35  2C25               	goto	l1991
  4347  0C36                     l1995:	
  4348  0C36  3001               	movlw	1
  4349  0C37  00F5               	movwf	??___ftpack
  4350  0C38  0875               	movf	??___ftpack,w
  4351  0C39  07F3               	addwf	___ftpack@exp,f
  4352  0C3A  3001               	movlw	1
  4353  0C3B  07F0               	addwf	___ftpack@arg,f
  4354  0C3C  3000               	movlw	0
  4355  0C3D  1803               	skipnc
  4356  0C3E  3001               	movlw	1
  4357  0C3F  07F1               	addwf	___ftpack@arg+1,f
  4358  0C40  3000               	movlw	0
  4359  0C41  1803               	skipnc
  4360  0C42  3001               	movlw	1
  4361  0C43  07F2               	addwf	___ftpack@arg+2,f
  4362  0C44  3001               	movlw	1
  4363  0C45                     u2825:	
  4364  0C45  1003               	clrc
  4365  0C46  0CF2               	rrf	___ftpack@arg+2,f
  4366  0C47  0CF1               	rrf	___ftpack@arg+1,f
  4367  0C48  0CF0               	rrf	___ftpack@arg,f
  4368  0C49  3EFF               	addlw	-1
  4369  0C4A  1D03               	skipz
  4370  0C4B  2C45               	goto	u2825
  4371  0C4C                     l666:	
  4372  0C4C  30FF               	movlw	255
  4373  0C4D  0572               	andwf	___ftpack@arg+2,w
  4374  0C4E  1903               	btfsc	3,2
  4375  0C4F  2C5B               	goto	l2003
  4376  0C50  2C36               	goto	l1995
  4377  0C51                     l2001:	
  4378  0C51  3001               	movlw	1
  4379  0C52  02F3               	subwf	___ftpack@exp,f
  4380  0C53  3001               	movlw	1
  4381  0C54                     u2845:	
  4382  0C54  1003               	clrc
  4383  0C55  0DF0               	rlf	___ftpack@arg,f
  4384  0C56  0DF1               	rlf	___ftpack@arg+1,f
  4385  0C57  0DF2               	rlf	___ftpack@arg+2,f
  4386  0C58  3EFF               	addlw	-1
  4387  0C59  1D03               	skipz
  4388  0C5A  2C54               	goto	u2845
  4389  0C5B                     l2003:	
  4390  0C5B  1BF1               	btfsc	___ftpack@arg+1,7
  4391  0C5C  2C61               	goto	l673
  4392  0C5D  3002               	movlw	2
  4393  0C5E  0273               	subwf	___ftpack@exp,w
  4394  0C5F  1803               	skipnc
  4395  0C60  2C51               	goto	l2001
  4396  0C61                     l673:	
  4397  0C61  1873               	btfsc	___ftpack@exp,0
  4398  0C62  2C69               	goto	l674
  4399  0C63  30FF               	movlw	255
  4400  0C64  05F0               	andwf	___ftpack@arg,f
  4401  0C65  307F               	movlw	127
  4402  0C66  05F1               	andwf	___ftpack@arg+1,f
  4403  0C67  30FF               	movlw	255
  4404  0C68  05F2               	andwf	___ftpack@arg+2,f
  4405  0C69                     l674:	
  4406  0C69  1003               	clrc
  4407  0C6A  0CF3               	rrf	___ftpack@exp,f
  4408  0C6B  0873               	movf	___ftpack@exp,w
  4409  0C6C  00F5               	movwf	??___ftpack
  4410  0C6D  01F6               	clrf	??___ftpack+1
  4411  0C6E  01F7               	clrf	??___ftpack+2
  4412  0C6F  3010               	movlw	16
  4413  0C70                     u2885:	
  4414  0C70  1003               	clrc
  4415  0C71  0DF5               	rlf	??___ftpack,f
  4416  0C72  0DF6               	rlf	??___ftpack+1,f
  4417  0C73  0DF7               	rlf	??___ftpack+2,f
  4418  0C74  3EFF               	addlw	-1
  4419  0C75  1D03               	skipz
  4420  0C76  2C70               	goto	u2885
  4421  0C77  0875               	movf	??___ftpack,w
  4422  0C78  04F0               	iorwf	___ftpack@arg,f
  4423  0C79  0876               	movf	??___ftpack+1,w
  4424  0C7A  04F1               	iorwf	___ftpack@arg+1,f
  4425  0C7B  0877               	movf	??___ftpack+2,w
  4426  0C7C  04F2               	iorwf	___ftpack@arg+2,f
  4427  0C7D  0874               	movf	___ftpack@sign,w
  4428  0C7E  1903               	btfsc	3,2
  4429  0C7F  0008               	return
  4430  0C80  17F2               	bsf	___ftpack@arg+2,7
  4431  0C81  0008               	return
  4432  0C82                     __end_of___ftpack:	
  4433                           
  4434                           	psect	text22
  4435  03A7                     __ptext22:	
  4436 ;; *************** function _LCD_DisplayNumber *****************
  4437 ;; Defined at:
  4438 ;;		line 529 in file "../00-libfiles/lcd.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  v_numericSys    1    wreg     unsigned char 
  4441 ;;  v_number_u32    4    4[BANK0 ] unsigned long 
  4442 ;;  v_numOfDigit    1    8[BANK0 ] unsigned char 
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;  v_numericSys    1   33[BANK0 ] unsigned char 
  4445 ;;  a              10   21[BANK0 ] unsigned char [10]
  4446 ;;  i               1   34[BANK0 ] unsigned char 
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  1    wreg      void 
  4449 ;; Registers used:
  4450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4456 ;;      Params:         0       5       0       0       0
  4457 ;;      Locals:         0      14       0       0       0
  4458 ;;      Temps:          0      12       0       0       0
  4459 ;;      Totals:         0      31       0       0       0
  4460 ;;Total ram usage:       31 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; Hardware stack levels required when called:    6
  4463 ;; This function calls:
  4464 ;;		_LCD_DisplayChar
  4465 ;;		___bmul
  4466 ;;		___lldiv
  4467 ;; This function is called by:
  4468 ;;		_LCD_DisplayFloatNumber
  4469 ;;		_LCD_Printf
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           
  4474                           ;psect for function _LCD_DisplayNumber
  4475  03A7                     _LCD_DisplayNumber:	
  4476                           
  4477                           ;incstack = 0
  4478                           ; Regs used in _LCD_DisplayNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4479                           ;LCD_DisplayNumber@v_numericSystem_u8 stored from wreg
  4480  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  4481  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  4482  03A9  00C1               	movwf	LCD_DisplayNumber@v_numericSystem_u8
  4483                           
  4484                           ;lcd.c: 531: uint8_t i=0,a[10];
  4485  03AA  01C2               	clrf	LCD_DisplayNumber@i
  4486                           
  4487                           ;lcd.c: 533: if(2u == v_numericSystem_u8)
  4488  03AB  3002               	movlw	2
  4489  03AC  0641               	xorwf	LCD_DisplayNumber@v_numericSystem_u8,w
  4490  03AD  1903               	btfsc	3,2
  4491  03AE  2BEE               	goto	l2073
  4492  03AF  2BF2               	goto	l2075
  4493  03B0                     l2067:	
  4494                           ;lcd.c: 534: {
  4495                           ;lcd.c: 535: while(v_numOfDigitsToDisplay_u8!=0)
  4496                           
  4497                           
  4498                           ;lcd.c: 536: {
  4499                           ;lcd.c: 539: i = (((v_number_u32)&((1<<((v_numOfDigitsToDisplay_u8-1)))))!=0u);
  4500  03B0  0824               	movf	LCD_DisplayNumber@v_number_u32,w
  4501  03B1  00A9               	movwf	??_LCD_DisplayNumber
  4502  03B2  0825               	movf	LCD_DisplayNumber@v_number_u32+1,w
  4503  03B3  00AA               	movwf	??_LCD_DisplayNumber+1
  4504  03B4  0826               	movf	LCD_DisplayNumber@v_number_u32+2,w
  4505  03B5  00AB               	movwf	??_LCD_DisplayNumber+2
  4506  03B6  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  4507  03B7  00AC               	movwf	??_LCD_DisplayNumber+3
  4508  03B8  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  4509  03B9  3EFF               	addlw	-1
  4510  03BA  00AD               	movwf	??_LCD_DisplayNumber+4
  4511  03BB  0AAD               	incf	??_LCD_DisplayNumber+4,f
  4512  03BC  3001               	movlw	1
  4513  03BD  00AE               	movwf	??_LCD_DisplayNumber+5
  4514  03BE  3000               	movlw	0
  4515  03BF  00AF               	movwf	??_LCD_DisplayNumber+6
  4516  03C0  2BC4               	goto	u3064
  4517  03C1                     u3065:	
  4518  03C1  1003               	clrc
  4519  03C2  0DAE               	rlf	??_LCD_DisplayNumber+5,f
  4520  03C3  0DAF               	rlf	??_LCD_DisplayNumber+6,f
  4521  03C4                     u3064:	
  4522  03C4  0BAD               	decfsz	??_LCD_DisplayNumber+4,f
  4523  03C5  2BC1               	goto	u3065
  4524  03C6  082E               	movf	??_LCD_DisplayNumber+5,w
  4525  03C7  00B0               	movwf	??_LCD_DisplayNumber+7
  4526  03C8  082F               	movf	??_LCD_DisplayNumber+6,w
  4527  03C9  00B1               	movwf	??_LCD_DisplayNumber+8
  4528  03CA  3000               	movlw	0
  4529  03CB  1BB1               	btfsc	??_LCD_DisplayNumber+8,7
  4530  03CC  30FF               	movlw	255
  4531  03CD  00B2               	movwf	??_LCD_DisplayNumber+9
  4532  03CE  00B3               	movwf	??_LCD_DisplayNumber+10
  4533  03CF  0830               	movf	??_LCD_DisplayNumber+7,w
  4534  03D0  05A9               	andwf	??_LCD_DisplayNumber,f
  4535  03D1  0831               	movf	??_LCD_DisplayNumber+8,w
  4536  03D2  05AA               	andwf	??_LCD_DisplayNumber+1,f
  4537  03D3  0832               	movf	??_LCD_DisplayNumber+9,w
  4538  03D4  05AB               	andwf	??_LCD_DisplayNumber+2,f
  4539  03D5  0833               	movf	??_LCD_DisplayNumber+10,w
  4540  03D6  05AC               	andwf	??_LCD_DisplayNumber+3,f
  4541  03D7  082C               	movf	??_LCD_DisplayNumber+3,w
  4542  03D8  042B               	iorwf	??_LCD_DisplayNumber+2,w
  4543  03D9  042A               	iorwf	??_LCD_DisplayNumber+1,w
  4544  03DA  0429               	iorwf	??_LCD_DisplayNumber,w
  4545  03DB  1903               	btfsc	3,2
  4546  03DC  2BDF               	goto	u3070
  4547  03DD  3001               	movlw	1
  4548  03DE  2BE0               	goto	u3080
  4549  03DF                     u3070:	
  4550  03DF  3000               	movlw	0
  4551  03E0                     u3080:	
  4552  03E0  00B4               	movwf	??_LCD_DisplayNumber+11
  4553  03E1  0834               	movf	??_LCD_DisplayNumber+11,w
  4554  03E2  00C2               	movwf	LCD_DisplayNumber@i
  4555                           
  4556                           ;lcd.c: 540: LCD_DisplayChar(((i)+0x30));
  4557  03E3  0842               	movf	LCD_DisplayNumber@i,w
  4558  03E4  3E30               	addlw	48
  4559  03E5  120A  158A  215B  120A  118A  	fcall	_LCD_DisplayChar
  4560                           
  4561                           ;lcd.c: 541: v_numOfDigitsToDisplay_u8--;
  4562  03EA  3001               	movlw	1
  4563  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  4564  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  4565  03ED  02A8               	subwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,f
  4566  03EE                     l2073:	
  4567  03EE  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  4568  03EF  1903               	btfsc	3,2
  4569  03F0  0008               	return
  4570  03F1  2BB0               	goto	l2067
  4571  03F2                     l2075:	
  4572                           ;lcd.c: 542: }
  4573                           ;lcd.c: 543: }
  4574                           
  4575                           
  4576                           ;lcd.c: 544: else if(v_number_u32==0)
  4577  03F2  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  4578  03F3  0426               	iorwf	LCD_DisplayNumber@v_number_u32+2,w
  4579  03F4  0425               	iorwf	LCD_DisplayNumber@v_number_u32+1,w
  4580  03F5  0424               	iorwf	LCD_DisplayNumber@v_number_u32,w
  4581  03F6  1D03               	skipz
  4582  03F7  2BFD               	goto	l2079
  4583                           
  4584                           ;lcd.c: 545: {
  4585                           ;lcd.c: 548: LCD_DisplayChar('0');
  4586  03F8  3030               	movlw	48
  4587  03F9  120A  158A  215B   	fcall	_LCD_DisplayChar
  4588                           
  4589                           ;lcd.c: 549: }
  4590  03FC  0008               	return
  4591  03FD                     l2079:	
  4592                           
  4593                           ;lcd.c: 550: else
  4594                           ;lcd.c: 551: {
  4595                           ;lcd.c: 552: for(i=0;i<v_numOfDigitsToDisplay_u8;i++)
  4596  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  4597  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  4598  03FF  01C2               	clrf	LCD_DisplayNumber@i
  4599  0400                     l2097:	
  4600  0400  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  4601  0401  0242               	subwf	LCD_DisplayNumber@i,w
  4602  0402  1803               	btfsc	3,0
  4603  0403  2C95               	goto	l2109
  4604                           
  4605                           ;lcd.c: 553: {
  4606                           ;lcd.c: 556: if(v_number_u32!=0)
  4607  0404  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  4608  0405  0426               	iorwf	LCD_DisplayNumber@v_number_u32+2,w
  4609  0406  0425               	iorwf	LCD_DisplayNumber@v_number_u32+1,w
  4610  0407  0424               	iorwf	LCD_DisplayNumber@v_number_u32,w
  4611  0408  1903               	skipnz
  4612  0409  2C5F               	goto	l2087
  4613                           
  4614                           ;lcd.c: 557: {
  4615                           ;lcd.c: 564: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u3
      +                          2/v_numericSystem_u8)));
  4616  040A  0841               	movf	LCD_DisplayNumber@v_numericSystem_u8,w
  4617  040B  00A9               	movwf	??_LCD_DisplayNumber
  4618  040C  0829               	movf	??_LCD_DisplayNumber,w
  4619  040D  00A0               	movwf	___bmul@multiplicand
  4620  040E  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  4621  040F  00F7               	movwf	___lldiv@dividend+3
  4622  0410  0826               	movf	LCD_DisplayNumber@v_number_u32+2,w
  4623  0411  00F6               	movwf	___lldiv@dividend+2
  4624  0412  0825               	movf	LCD_DisplayNumber@v_number_u32+1,w
  4625  0413  00F5               	movwf	___lldiv@dividend+1
  4626  0414  0824               	movf	LCD_DisplayNumber@v_number_u32,w
  4627  0415  00F4               	movwf	___lldiv@dividend
  4628  0416  0841               	movf	LCD_DisplayNumber@v_numericSystem_u8,w
  4629  0417  00AA               	movwf	??_LCD_DisplayNumber+1
  4630  0418  01AB               	clrf	??_LCD_DisplayNumber+2
  4631  0419  01AC               	clrf	??_LCD_DisplayNumber+3
  4632  041A  01AD               	clrf	??_LCD_DisplayNumber+4
  4633  041B  082D               	movf	??_LCD_DisplayNumber+4,w
  4634  041C  00F3               	movwf	___lldiv@divisor+3
  4635  041D  082C               	movf	??_LCD_DisplayNumber+3,w
  4636  041E  00F2               	movwf	___lldiv@divisor+2
  4637  041F  082B               	movf	??_LCD_DisplayNumber+2,w
  4638  0420  00F1               	movwf	___lldiv@divisor+1
  4639  0421  082A               	movf	??_LCD_DisplayNumber+1,w
  4640  0422  00F0               	movwf	___lldiv@divisor
  4641  0423  120A  158A  23B8  120A  118A  	fcall	___lldiv
  4642  0428  0870               	movf	?___lldiv,w
  4643  0429  120A  158A  20AC  120A  118A  	fcall	___bmul
  4644  042E  3AFF               	xorlw	255
  4645  042F  3E01               	addlw	1
  4646  0430  1283               	bcf	3,5	;RP0=0, select bank0
  4647  0431  1303               	bcf	3,6	;RP1=0, select bank0
  4648  0432  0724               	addwf	LCD_DisplayNumber@v_number_u32,w
  4649  0433  00AE               	movwf	??_LCD_DisplayNumber+5
  4650  0434  0842               	movf	LCD_DisplayNumber@i,w
  4651  0435  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  4652  0436  0084               	movwf	4
  4653  0437  082E               	movf	??_LCD_DisplayNumber+5,w
  4654  0438  1383               	bcf	3,7	;select IRP bank0
  4655  0439  0080               	movwf	0
  4656                           
  4657                           ;lcd.c: 565: v_number_u32=v_number_u32/v_numericSystem_u8;
  4658  043A  0841               	movf	LCD_DisplayNumber@v_numericSystem_u8,w
  4659  043B  00A9               	movwf	??_LCD_DisplayNumber
  4660  043C  01AA               	clrf	??_LCD_DisplayNumber+1
  4661  043D  01AB               	clrf	??_LCD_DisplayNumber+2
  4662  043E  01AC               	clrf	??_LCD_DisplayNumber+3
  4663  043F  082C               	movf	??_LCD_DisplayNumber+3,w
  4664  0440  00F3               	movwf	___lldiv@divisor+3
  4665  0441  082B               	movf	??_LCD_DisplayNumber+2,w
  4666  0442  00F2               	movwf	___lldiv@divisor+2
  4667  0443  082A               	movf	??_LCD_DisplayNumber+1,w
  4668  0444  00F1               	movwf	___lldiv@divisor+1
  4669  0445  0829               	movf	??_LCD_DisplayNumber,w
  4670  0446  00F0               	movwf	___lldiv@divisor
  4671  0447  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  4672  0448  00F7               	movwf	___lldiv@dividend+3
  4673  0449  0826               	movf	LCD_DisplayNumber@v_number_u32+2,w
  4674  044A  00F6               	movwf	___lldiv@dividend+2
  4675  044B  0825               	movf	LCD_DisplayNumber@v_number_u32+1,w
  4676  044C  00F5               	movwf	___lldiv@dividend+1
  4677  044D  0824               	movf	LCD_DisplayNumber@v_number_u32,w
  4678  044E  00F4               	movwf	___lldiv@dividend
  4679  044F  120A  158A  23B8  120A  118A  	fcall	___lldiv
  4680  0454  0873               	movf	?___lldiv+3,w
  4681  0455  1283               	bcf	3,5	;RP0=0, select bank0
  4682  0456  1303               	bcf	3,6	;RP1=0, select bank0
  4683  0457  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  4684  0458  0872               	movf	?___lldiv+2,w
  4685  0459  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  4686  045A  0871               	movf	?___lldiv+1,w
  4687  045B  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  4688  045C  0870               	movf	?___lldiv,w
  4689  045D  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  4690                           
  4691                           ;lcd.c: 566: }
  4692  045E  2C6B               	goto	l2095
  4693  045F                     l2087:	
  4694                           
  4695                           ;lcd.c: 567: else if( (v_numOfDigitsToDisplay_u8 == 0xffu) ||
  4696                           ;lcd.c: 568: (v_numOfDigitsToDisplay_u8 > 10u))
  4697  045F  0A28               	incf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  4698  0460  1903               	btfsc	3,2
  4699  0461  2C95               	goto	l2109
  4700  0462  300B               	movlw	11
  4701  0463  0228               	subwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  4702  0464  1803               	btfsc	3,0
  4703  0465  2C95               	goto	l2109
  4704                           
  4705                           ;lcd.c: 574: else
  4706                           ;lcd.c: 575: {
  4707                           ;lcd.c: 579: a[i]=0;
  4708                           
  4709                           ;lcd.c: 573: }
  4710                           
  4711                           ;lcd.c: 569: {
  4712                           ;lcd.c: 572: break;
  4713  0466  0842               	movf	LCD_DisplayNumber@i,w
  4714  0467  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  4715  0468  0084               	movwf	4
  4716  0469  1383               	bcf	3,7	;select IRP bank0
  4717  046A  0180               	clrf	0
  4718  046B                     l2095:	
  4719  046B  3001               	movlw	1
  4720  046C  00A9               	movwf	??_LCD_DisplayNumber
  4721  046D  0829               	movf	??_LCD_DisplayNumber,w
  4722  046E  07C2               	addwf	LCD_DisplayNumber@i,f
  4723  046F  2C00               	goto	l2097
  4724  0470                     l2099:	
  4725                           ;lcd.c: 580: }
  4726                           ;lcd.c: 581: }
  4727                           ;lcd.c: 583: while(i!=0)
  4728                           
  4729                           
  4730                           ;lcd.c: 584: {
  4731                           ;lcd.c: 586: LCD_DisplayChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  4732  0470  0842               	movf	LCD_DisplayNumber@i,w
  4733  0471  3EFF               	addlw	255
  4734  0472  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  4735  0473  0084               	movwf	4
  4736  0474  300A               	movlw	10
  4737  0475  1383               	bcf	3,7	;select IRP bank0
  4738  0476  0200               	subwf	0,w
  4739  0477  1803               	skipnc
  4740  0478  2C80               	goto	l2103
  4741  0479  0842               	movf	LCD_DisplayNumber@i,w
  4742  047A  3EFF               	addlw	255
  4743  047B  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  4744  047C  0084               	movwf	4
  4745  047D  0800               	movf	0,w
  4746  047E  3E30               	addlw	48
  4747  047F  2C86               	goto	L2
  4748  0480                     l2103:	
  4749  0480  0842               	movf	LCD_DisplayNumber@i,w
  4750  0481  3EFF               	addlw	255
  4751  0482  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  4752  0483  0084               	movwf	4
  4753  0484  0800               	movf	0,w
  4754  0485  3E37               	addlw	55
  4755  0486                     L2:	
  4756  0486  00BF               	movwf	_LCD_DisplayNumber$300
  4757  0487  3000               	movlw	0
  4758  0488  1803               	skipnc
  4759  0489  3001               	movlw	1
  4760  048A  00C0               	movwf	_LCD_DisplayNumber$300+1
  4761  048B  083F               	movf	_LCD_DisplayNumber$300,w
  4762  048C  120A  158A  215B  120A  118A  	fcall	_LCD_DisplayChar
  4763                           
  4764                           ;lcd.c: 587: i--;
  4765  0491  3001               	movlw	1
  4766  0492  1283               	bcf	3,5	;RP0=0, select bank0
  4767  0493  1303               	bcf	3,6	;RP1=0, select bank0
  4768  0494  02C2               	subwf	LCD_DisplayNumber@i,f
  4769  0495                     l2109:	
  4770  0495  0842               	movf	LCD_DisplayNumber@i,w
  4771  0496  1903               	btfsc	3,2
  4772  0497  0008               	return
  4773  0498  2C70               	goto	l2099
  4774  0499                     __end_of_LCD_DisplayNumber:	
  4775                           
  4776                           	psect	text23
  4777  0BB8                     __ptext23:	
  4778 ;; *************** function ___lldiv *****************
  4779 ;; Defined at:
  4780 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;  divisor         4    0[COMMON] unsigned long 
  4783 ;;  dividend        4    4[COMMON] unsigned long 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  quotient        4    9[COMMON] unsigned long 
  4786 ;;  counter         1   13[COMMON] unsigned char 
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  4    0[COMMON] unsigned long 
  4789 ;; Registers used:
  4790 ;;		wreg, status,2, status,0
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4796 ;;      Params:         8       0       0       0       0
  4797 ;;      Locals:         5       0       0       0       0
  4798 ;;      Temps:          1       0       0       0       0
  4799 ;;      Totals:        14       0       0       0       0
  4800 ;;Total ram usage:       14 bytes
  4801 ;; Hardware stack levels used:    1
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_LCD_DisplayNumber
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           
  4810                           ;psect for function ___lldiv
  4811  0BB8                     ___lldiv:	
  4812                           
  4813                           ;incstack = 0
  4814                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4815  0BB8  3000               	movlw	0
  4816  0BB9  00FC               	movwf	___lldiv@quotient+3
  4817  0BBA  3000               	movlw	0
  4818  0BBB  00FB               	movwf	___lldiv@quotient+2
  4819  0BBC  3000               	movlw	0
  4820  0BBD  00FA               	movwf	___lldiv@quotient+1
  4821  0BBE  3000               	movlw	0
  4822  0BBF  00F9               	movwf	___lldiv@quotient
  4823  0BC0  0873               	movf	___lldiv@divisor+3,w
  4824  0BC1  0472               	iorwf	___lldiv@divisor+2,w
  4825  0BC2  0471               	iorwf	___lldiv@divisor+1,w
  4826  0BC3  0470               	iorwf	___lldiv@divisor,w
  4827  0BC4  1903               	skipnz
  4828  0BC5  2C0D               	goto	l2035
  4829  0BC6  01FD               	clrf	___lldiv@counter
  4830  0BC7  0AFD               	incf	___lldiv@counter,f
  4831  0BC8                     l2021:	
  4832  0BC8  1BF3               	btfsc	___lldiv@divisor+3,7
  4833  0BC9  2BD8               	goto	l2023
  4834  0BCA  3001               	movlw	1
  4835  0BCB  00F8               	movwf	??___lldiv
  4836  0BCC                     u2915:	
  4837  0BCC  1003               	clrc
  4838  0BCD  0DF0               	rlf	___lldiv@divisor,f
  4839  0BCE  0DF1               	rlf	___lldiv@divisor+1,f
  4840  0BCF  0DF2               	rlf	___lldiv@divisor+2,f
  4841  0BD0  0DF3               	rlf	___lldiv@divisor+3,f
  4842  0BD1  0BF8               	decfsz	??___lldiv,f
  4843  0BD2  2BCC               	goto	u2915
  4844  0BD3  3001               	movlw	1
  4845  0BD4  00F8               	movwf	??___lldiv
  4846  0BD5  0878               	movf	??___lldiv,w
  4847  0BD6  07FD               	addwf	___lldiv@counter,f
  4848  0BD7  2BC8               	goto	l2021
  4849  0BD8                     l2023:	
  4850  0BD8  3001               	movlw	1
  4851  0BD9  00F8               	movwf	??___lldiv
  4852  0BDA                     u2935:	
  4853  0BDA  1003               	clrc
  4854  0BDB  0DF9               	rlf	___lldiv@quotient,f
  4855  0BDC  0DFA               	rlf	___lldiv@quotient+1,f
  4856  0BDD  0DFB               	rlf	___lldiv@quotient+2,f
  4857  0BDE  0DFC               	rlf	___lldiv@quotient+3,f
  4858  0BDF  0BF8               	decfsz	??___lldiv,f
  4859  0BE0  2BDA               	goto	u2935
  4860  0BE1  0873               	movf	___lldiv@divisor+3,w
  4861  0BE2  0277               	subwf	___lldiv@dividend+3,w
  4862  0BE3  1D03               	skipz
  4863  0BE4  2BEF               	goto	u2945
  4864  0BE5  0872               	movf	___lldiv@divisor+2,w
  4865  0BE6  0276               	subwf	___lldiv@dividend+2,w
  4866  0BE7  1D03               	skipz
  4867  0BE8  2BEF               	goto	u2945
  4868  0BE9  0871               	movf	___lldiv@divisor+1,w
  4869  0BEA  0275               	subwf	___lldiv@dividend+1,w
  4870  0BEB  1D03               	skipz
  4871  0BEC  2BEF               	goto	u2945
  4872  0BED  0870               	movf	___lldiv@divisor,w
  4873  0BEE  0274               	subwf	___lldiv@dividend,w
  4874  0BEF                     u2945:	
  4875  0BEF  1C03               	skipc
  4876  0BF0  2C00               	goto	l2031
  4877  0BF1  0870               	movf	___lldiv@divisor,w
  4878  0BF2  02F4               	subwf	___lldiv@dividend,f
  4879  0BF3  0871               	movf	___lldiv@divisor+1,w
  4880  0BF4  1C03               	skipc
  4881  0BF5  0F71               	incfsz	___lldiv@divisor+1,w
  4882  0BF6  02F5               	subwf	___lldiv@dividend+1,f
  4883  0BF7  0872               	movf	___lldiv@divisor+2,w
  4884  0BF8  1C03               	skipc
  4885  0BF9  0F72               	incfsz	___lldiv@divisor+2,w
  4886  0BFA  02F6               	subwf	___lldiv@dividend+2,f
  4887  0BFB  0873               	movf	___lldiv@divisor+3,w
  4888  0BFC  1C03               	skipc
  4889  0BFD  0F73               	incfsz	___lldiv@divisor+3,w
  4890  0BFE  02F7               	subwf	___lldiv@dividend+3,f
  4891  0BFF  1479               	bsf	___lldiv@quotient,0
  4892  0C00                     l2031:	
  4893  0C00  3001               	movlw	1
  4894  0C01                     u2955:	
  4895  0C01  1003               	clrc
  4896  0C02  0CF3               	rrf	___lldiv@divisor+3,f
  4897  0C03  0CF2               	rrf	___lldiv@divisor+2,f
  4898  0C04  0CF1               	rrf	___lldiv@divisor+1,f
  4899  0C05  0CF0               	rrf	___lldiv@divisor,f
  4900  0C06  3EFF               	addlw	-1
  4901  0C07  1D03               	skipz
  4902  0C08  2C01               	goto	u2955
  4903  0C09  3001               	movlw	1
  4904  0C0A  02FD               	subwf	___lldiv@counter,f
  4905  0C0B  1D03               	btfss	3,2
  4906  0C0C  2BD8               	goto	l2023
  4907  0C0D                     l2035:	
  4908  0C0D  087C               	movf	___lldiv@quotient+3,w
  4909  0C0E  00F3               	movwf	?___lldiv+3
  4910  0C0F  087B               	movf	___lldiv@quotient+2,w
  4911  0C10  00F2               	movwf	?___lldiv+2
  4912  0C11  087A               	movf	___lldiv@quotient+1,w
  4913  0C12  00F1               	movwf	?___lldiv+1
  4914  0C13  0879               	movf	___lldiv@quotient,w
  4915  0C14  00F0               	movwf	?___lldiv
  4916  0C15  0008               	return
  4917  0C16                     __end_of___lldiv:	
  4918                           
  4919                           	psect	text24
  4920  08AC                     __ptext24:	
  4921 ;; *************** function ___bmul *****************
  4922 ;; Defined at:
  4923 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\Umul8.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;  multiplier      1    wreg     unsigned char 
  4926 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;  multiplier      1    3[BANK0 ] unsigned char 
  4929 ;;  product         1    2[BANK0 ] unsigned char 
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      unsigned char 
  4932 ;; Registers used:
  4933 ;;		wreg, status,2, status,0
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4939 ;;      Params:         0       1       0       0       0
  4940 ;;      Locals:         0       2       0       0       0
  4941 ;;      Temps:          0       1       0       0       0
  4942 ;;      Totals:         0       4       0       0       0
  4943 ;;Total ram usage:        4 bytes
  4944 ;; Hardware stack levels used:    1
  4945 ;; This function calls:
  4946 ;;		Nothing
  4947 ;; This function is called by:
  4948 ;;		_LCD_DisplayNumber
  4949 ;;		_LCD_Printf
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           
  4954                           ;psect for function ___bmul
  4955  08AC                     ___bmul:	
  4956                           
  4957                           ;incstack = 0
  4958                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4959                           ;___bmul@multiplier stored from wreg
  4960  08AC  1283               	bcf	3,5	;RP0=0, select bank0
  4961  08AD  1303               	bcf	3,6	;RP1=0, select bank0
  4962  08AE  00A3               	movwf	___bmul@multiplier
  4963  08AF  01A2               	clrf	___bmul@product
  4964  08B0                     l1971:	
  4965  08B0  1C23               	btfss	___bmul@multiplier,0
  4966  08B1  28B6               	goto	l1975
  4967  08B2  0820               	movf	___bmul@multiplicand,w
  4968  08B3  00A1               	movwf	??___bmul
  4969  08B4  0821               	movf	??___bmul,w
  4970  08B5  07A2               	addwf	___bmul@product,f
  4971  08B6                     l1975:	
  4972  08B6  1003               	clrc
  4973  08B7  0DA0               	rlf	___bmul@multiplicand,f
  4974  08B8  1003               	clrc
  4975  08B9  0CA3               	rrf	___bmul@multiplier,f
  4976  08BA  0823               	movf	___bmul@multiplier,w
  4977  08BB  1D03               	btfss	3,2
  4978  08BC  28B0               	goto	l1971
  4979  08BD  0822               	movf	___bmul@product,w
  4980  08BE  0008               	return
  4981  08BF                     __end_of___bmul:	
  4982                           
  4983                           	psect	text25
  4984  095B                     __ptext25:	
  4985 ;; *************** function _LCD_DisplayChar *****************
  4986 ;; Defined at:
  4987 ;;		line 392 in file "../00-libfiles/lcd.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;  v_lcdData_u8    1    wreg     unsigned char 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  v_lcdData_u8    1   12[COMMON] unsigned char 
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  1    wreg      void 
  4994 ;; Registers used:
  4995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5001 ;;      Params:         0       0       0       0       0
  5002 ;;      Locals:         1       0       0       0       0
  5003 ;;      Temps:          1       0       0       0       0
  5004 ;;      Totals:         2       0       0       0       0
  5005 ;;Total ram usage:        2 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:    5
  5008 ;; This function calls:
  5009 ;;		_LCD_GoToNextLine
  5010 ;;		_lcd_DataWrite
  5011 ;; This function is called by:
  5012 ;;		_LCD_DisplayString
  5013 ;;		_LCD_DisplayNumber
  5014 ;;		_LCD_DisplayFloatNumber
  5015 ;;		_LCD_Printf
  5016 ;;		_LCD_ScrollMessage
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           
  5021                           ;psect for function _LCD_DisplayChar
  5022  095B                     _LCD_DisplayChar:	
  5023                           
  5024                           ;incstack = 0
  5025                           ; Regs used in _LCD_DisplayChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5026                           ;LCD_DisplayChar@v_lcdData_u8 stored from wreg
  5027  095B  00FC               	movwf	LCD_DisplayChar@v_lcdData_u8
  5028                           
  5029                           ;lcd.c: 394: if((v_LcdTrackCursorPos_U8>=LCDConfig.v_MaxSupportedChars_U8) || (v_lcdData
      +                          _u8=='\n'))
  5030  095C  1683               	bsf	3,5	;RP0=1, select bank1
  5031  095D  1303               	bcf	3,6	;RP1=0, select bank1
  5032  095E  0834               	movf	(_LCDConfig^(0+128)+1),w
  5033  095F  1283               	bcf	3,5	;RP0=0, select bank0
  5034  0960  1303               	bcf	3,6	;RP1=0, select bank0
  5035  0961  026E               	subwf	_v_LcdTrackCursorPos_U8,w
  5036  0962  1803               	skipnc
  5037  0963  2968               	goto	l1961
  5038  0964  300A               	movlw	10
  5039  0965  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  5040  0966  1D03               	btfss	3,2
  5041  0967  296D               	goto	l1963
  5042  0968                     l1961:	
  5043                           
  5044                           ;lcd.c: 395: {
  5045                           ;lcd.c: 398: LCD_GoToNextLine();
  5046  0968  120A  158A  20EA  120A  158A  	fcall	_LCD_GoToNextLine
  5047  096D                     l1963:	
  5048                           
  5049                           ;lcd.c: 399: }
  5050                           ;lcd.c: 400: if(v_lcdData_u8!='\n')
  5051  096D  300A               	movlw	10
  5052  096E  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  5053  096F  1903               	btfsc	3,2
  5054  0970  0008               	return
  5055                           
  5056                           ;lcd.c: 401: {
  5057                           ;lcd.c: 403: lcd_DataWrite(v_lcdData_u8);
  5058  0971  087C               	movf	LCD_DisplayChar@v_lcdData_u8,w
  5059  0972  120A  158A  2209   	fcall	_lcd_DataWrite
  5060                           
  5061                           ;lcd.c: 404: v_LcdTrackCursorPos_U8++;
  5062  0975  3001               	movlw	1
  5063  0976  00FB               	movwf	??_LCD_DisplayChar
  5064  0977  087B               	movf	??_LCD_DisplayChar,w
  5065  0978  1283               	bcf	3,5	;RP0=0, select bank0
  5066  0979  1303               	bcf	3,6	;RP1=0, select bank0
  5067  097A  07EE               	addwf	_v_LcdTrackCursorPos_U8,f
  5068  097B  0008               	return
  5069  097C                     __end_of_LCD_DisplayChar:	
  5070                           
  5071                           	psect	text26
  5072  0A09                     __ptext26:	
  5073 ;; *************** function _lcd_DataWrite *****************
  5074 ;; Defined at:
  5075 ;;		line 825 in file "../00-libfiles/lcd.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;  dataByte        1    wreg     unsigned char 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  dataByte        1    9[COMMON] unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5089 ;;      Params:         0       0       0       0       0
  5090 ;;      Locals:         1       0       0       0       0
  5091 ;;      Temps:          2       0       0       0       0
  5092 ;;      Totals:         3       0       0       0       0
  5093 ;;Total ram usage:        3 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:    3
  5096 ;; This function calls:
  5097 ;;		_lcd_BusyCheck
  5098 ;;		_lcd_SendDataSignals
  5099 ;;		_lcd_SendHigherNibble
  5100 ;;		_lcd_SendLowerNibble
  5101 ;; This function is called by:
  5102 ;;		_LCD_DisplayChar
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           
  5107                           ;psect for function _lcd_DataWrite
  5108  0A09                     _lcd_DataWrite:	
  5109                           
  5110                           ;incstack = 0
  5111                           ; Regs used in _lcd_DataWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5112                           ;lcd_DataWrite@dataByte stored from wreg
  5113  0A09  00F9               	movwf	lcd_DataWrite@dataByte
  5114                           
  5115                           ;lcd.c: 827: lcd_BusyCheck();
  5116  0A0A  120A  158A  2576  120A  158A  	fcall	_lcd_BusyCheck
  5117                           
  5118                           ;lcd.c: 828: if(LCDConfig.v_LcdMode_U8 == 8u)
  5119  0A0F  3008               	movlw	8
  5120  0A10  1683               	bsf	3,5	;RP0=1, select bank1
  5121  0A11  1303               	bcf	3,6	;RP1=0, select bank1
  5122  0A12  0635               	xorwf	(_LCDConfig^(0+128)+2),w
  5123  0A13  1D03               	btfss	3,2
  5124  0A14  2A1C               	goto	l1949
  5125                           
  5126                           ;lcd.c: 829: {
  5127                           ;lcd.c: 830: lcd_SendLowerNibble(dataByte);
  5128  0A15  0879               	movf	lcd_DataWrite@dataByte,w
  5129  0A16  120A  158A  227E  120A  158A  	fcall	_lcd_SendLowerNibble
  5130                           
  5131                           ;lcd.c: 831: }
  5132  0A1B  2A34               	goto	l1953
  5133  0A1C                     l1949:	
  5134                           
  5135                           ;lcd.c: 832: else
  5136                           ;lcd.c: 833: {
  5137                           ;lcd.c: 834: lcd_SendHigherNibble(dataByte);
  5138  0A1C  0879               	movf	lcd_DataWrite@dataByte,w
  5139  0A1D  120A  158A  223E  120A  158A  	fcall	_lcd_SendHigherNibble
  5140                           
  5141                           ;lcd.c: 835: lcd_SendDataSignals();
  5142  0A22  120A  118A  2005  120A  158A  	fcall	_lcd_SendDataSignals
  5143                           
  5144                           ;lcd.c: 836: dataByte = dataByte << 4;
  5145  0A27  0879               	movf	lcd_DataWrite@dataByte,w
  5146  0A28  00F7               	movwf	??_lcd_DataWrite
  5147  0A29  3003               	movlw	3
  5148  0A2A                     u2725:	
  5149  0A2A  1003               	clrc
  5150  0A2B  0DF7               	rlf	??_lcd_DataWrite,f
  5151  0A2C  3EFF               	addlw	-1
  5152  0A2D  1D03               	skipz
  5153  0A2E  2A2A               	goto	u2725
  5154  0A2F  1003               	clrc
  5155  0A30  0D77               	rlf	??_lcd_DataWrite,w
  5156  0A31  00F8               	movwf	??_lcd_DataWrite+1
  5157  0A32  0878               	movf	??_lcd_DataWrite+1,w
  5158  0A33  00F9               	movwf	lcd_DataWrite@dataByte
  5159  0A34                     l1953:	
  5160                           
  5161                           ;lcd.c: 837: }
  5162                           ;lcd.c: 839: lcd_SendHigherNibble(dataByte);
  5163  0A34  0879               	movf	lcd_DataWrite@dataByte,w
  5164  0A35  120A  158A  223E  120A  158A  	fcall	_lcd_SendHigherNibble
  5165                           
  5166                           ;lcd.c: 840: lcd_SendDataSignals();
  5167  0A3A  120A  118A  2005   	fcall	_lcd_SendDataSignals
  5168  0A3D  0008               	return
  5169  0A3E                     __end_of_lcd_DataWrite:	
  5170                           
  5171                           	psect	text27
  5172  0005                     __ptext27:	
  5173 ;; *************** function _lcd_SendDataSignals *****************
  5174 ;; Defined at:
  5175 ;;		line 1001 in file "../00-libfiles/lcd.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;		None
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;		None
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  1    wreg      void 
  5182 ;; Registers used:
  5183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5189 ;;      Params:         0       0       0       0       0
  5190 ;;      Locals:         0       0       0       0       0
  5191 ;;      Temps:          0       0       0       0       0
  5192 ;;      Totals:         0       0       0       0       0
  5193 ;;Total ram usage:        0 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:    1
  5196 ;; This function calls:
  5197 ;;		_DELAY_us
  5198 ;;		_GPIO_PinWrite
  5199 ;; This function is called by:
  5200 ;;		_lcd_DataWrite
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           
  5205                           ;psect for function _lcd_SendDataSignals
  5206  0005                     _lcd_SendDataSignals:	
  5207                           
  5208                           ;lcd.c: 1003: GPIO_PinWrite(LCDConfig.RS,1);
  5209                           
  5210                           ;incstack = 0
  5211                           ; Regs used in _lcd_SendDataSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5212  0005  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5213  0006  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  5214  0007  1683               	bsf	3,5	;RP0=1, select bank1
  5215  0008  1303               	bcf	3,6	;RP1=0, select bank1
  5216  0009  0836               	movf	(_LCDConfig^(0+128)+3),w
  5217  000A  120A  118A  21DD  120A  118A  	fcall	_GPIO_PinWrite
  5218                           
  5219                           ;lcd.c: 1004: GPIO_PinWrite(LCDConfig.RW,0);
  5220  000F  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5221  0010  1683               	bsf	3,5	;RP0=1, select bank1
  5222  0011  1303               	bcf	3,6	;RP1=0, select bank1
  5223  0012  0837               	movf	(_LCDConfig^(0+128)+4),w
  5224  0013  120A  118A  21DD  120A  118A  	fcall	_GPIO_PinWrite
  5225                           
  5226                           ;lcd.c: 1005: GPIO_PinWrite(LCDConfig.EN,1);
  5227  0018  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5228  0019  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  5229  001A  1683               	bsf	3,5	;RP0=1, select bank1
  5230  001B  1303               	bcf	3,6	;RP1=0, select bank1
  5231  001C  0838               	movf	(_LCDConfig^(0+128)+5),w
  5232  001D  120A  118A  21DD  120A  118A  	fcall	_GPIO_PinWrite
  5233                           
  5234                           ;lcd.c: 1006: DELAY_us(10);
  5235  0022  300A               	movlw	10
  5236  0023  00F0               	movwf	DELAY_us@us_count
  5237  0024  3000               	movlw	0
  5238  0025  00F1               	movwf	DELAY_us@us_count+1
  5239  0026  120A  158A  2070  120A  118A  	fcall	_DELAY_us
  5240                           
  5241                           ;lcd.c: 1007: GPIO_PinWrite(LCDConfig.EN,0);
  5242  002B  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5243  002C  1683               	bsf	3,5	;RP0=1, select bank1
  5244  002D  1303               	bcf	3,6	;RP1=0, select bank1
  5245  002E  0838               	movf	(_LCDConfig^(0+128)+5),w
  5246  002F  120A  118A  21DD   	fcall	_GPIO_PinWrite
  5247  0032  0008               	return
  5248  0033                     __end_of_lcd_SendDataSignals:	
  5249                           
  5250                           	psect	text28
  5251  08EA                     __ptext28:	
  5252 ;; *************** function _LCD_GoToNextLine *****************
  5253 ;; Defined at:
  5254 ;;		line 292 in file "../00-libfiles/lcd.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;		None
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;		None
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  1    wreg      void 
  5261 ;; Registers used:
  5262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5268 ;;      Params:         0       0       0       0       0
  5269 ;;      Locals:         0       0       0       0       0
  5270 ;;      Temps:          1       0       0       0       0
  5271 ;;      Totals:         1       0       0       0       0
  5272 ;;Total ram usage:        1 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    4
  5275 ;; This function calls:
  5276 ;;		_LCD_CmdWrite
  5277 ;; This function is called by:
  5278 ;;		_LCD_DisplayChar
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           
  5283                           ;psect for function _LCD_GoToNextLine
  5284  08EA                     _LCD_GoToNextLine:	
  5285                           
  5286                           ;lcd.c: 296: v_LcdTrackLineNum_U8++;
  5287                           
  5288                           ;incstack = 0
  5289                           ; Regs used in _LCD_GoToNextLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5290  08EA  3001               	movlw	1
  5291  08EB  00FA               	movwf	??_LCD_GoToNextLine
  5292  08EC  087A               	movf	??_LCD_GoToNextLine,w
  5293  08ED  1283               	bcf	3,5	;RP0=0, select bank0
  5294  08EE  1303               	bcf	3,6	;RP1=0, select bank0
  5295  08EF  07EF               	addwf	_v_LcdTrackLineNum_U8,f
  5296                           
  5297                           ;lcd.c: 297: v_LcdTrackCursorPos_U8 = 0x00;
  5298  08F0  01EE               	clrf	_v_LcdTrackCursorPos_U8
  5299                           
  5300                           ;lcd.c: 298: if(v_LcdTrackLineNum_U8 >= LCDConfig.v_MaxSupportedLines_U8)
  5301  08F1  1683               	bsf	3,5	;RP0=1, select bank1
  5302  08F2  1303               	bcf	3,6	;RP1=0, select bank1
  5303  08F3  0833               	movf	_LCDConfig^(0+128),w
  5304  08F4  1283               	bcf	3,5	;RP0=0, select bank0
  5305  08F5  1303               	bcf	3,6	;RP1=0, select bank0
  5306  08F6  026F               	subwf	_v_LcdTrackLineNum_U8,w
  5307  08F7  1803               	btfsc	3,0
  5308                           
  5309                           ;lcd.c: 299: v_LcdTrackLineNum_U8 = 0x00;
  5310  08F8  01EF               	clrf	_v_LcdTrackLineNum_U8
  5311                           
  5312                           ;lcd.c: 300: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_LcdTrackLineNum_U8]);
  5313  08F9  086F               	movf	_v_LcdTrackLineNum_U8,w
  5314  08FA  3EC1               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  5315  08FB  0084               	movwf	4
  5316  08FC  1383               	bcf	3,7	;select IRP bank1
  5317  08FD  0800               	movf	0,w
  5318  08FE  120A  158A  21D4   	fcall	_LCD_CmdWrite
  5319  0901  0008               	return
  5320  0902                     __end_of_LCD_GoToNextLine:	
  5321                           
  5322                           	psect	text29
  5323  0B0D                     __ptext29:	
  5324 ;; *************** function _LCD_Init *****************
  5325 ;; Defined at:
  5326 ;;		line 198 in file "../00-libfiles/lcd.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  v_lcdNoOfLin    1    wreg     unsigned char 
  5329 ;;  v_MaxCharsPe    1   12[COMMON] unsigned char 
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;  v_lcdNoOfLin    1    0[BANK0 ] unsigned char 
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  1    wreg      void 
  5334 ;; Registers used:
  5335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5341 ;;      Params:         1       0       0       0       0
  5342 ;;      Locals:         0       1       0       0       0
  5343 ;;      Temps:          1       0       0       0       0
  5344 ;;      Totals:         2       1       0       0       0
  5345 ;;Total ram usage:        3 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; Hardware stack levels required when called:    6
  5348 ;; This function calls:
  5349 ;;		_DELAY_ms
  5350 ;;		_LCD_Clear
  5351 ;;		_LCD_CmdWrite
  5352 ;;		_lcd_Reset
  5353 ;; This function is called by:
  5354 ;;		_main
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           
  5359                           ;psect for function _LCD_Init
  5360  0B0D                     _LCD_Init:	
  5361                           
  5362                           ;incstack = 0
  5363                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5364                           ;LCD_Init@v_lcdNoOfLines_u8 stored from wreg
  5365  0B0D  1283               	bcf	3,5	;RP0=0, select bank0
  5366  0B0E  1303               	bcf	3,6	;RP1=0, select bank0
  5367  0B0F  00A0               	movwf	LCD_Init@v_lcdNoOfLines_u8
  5368                           
  5369                           ;lcd.c: 202: LCDConfig.v_MaxSupportedChars_U8 = v_MaxCharsPerLine_u8;
  5370  0B10  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  5371  0B11  00FD               	movwf	??_LCD_Init
  5372  0B12  087D               	movf	??_LCD_Init,w
  5373  0B13  1683               	bsf	3,5	;RP0=1, select bank1
  5374  0B14  1303               	bcf	3,6	;RP1=0, select bank1
  5375  0B15  00B4               	movwf	(_LCDConfig^(0+128)+1)
  5376                           
  5377                           ;lcd.c: 203: LCDConfig.v_MaxSupportedLines_U8 = v_lcdNoOfLines_u8;
  5378  0B16  1283               	bcf	3,5	;RP0=0, select bank0
  5379  0B17  1303               	bcf	3,6	;RP1=0, select bank0
  5380  0B18  0820               	movf	LCD_Init@v_lcdNoOfLines_u8,w
  5381  0B19  00FD               	movwf	??_LCD_Init
  5382  0B1A  087D               	movf	??_LCD_Init,w
  5383  0B1B  1683               	bsf	3,5	;RP0=1, select bank1
  5384  0B1C  1303               	bcf	3,6	;RP1=0, select bank1
  5385  0B1D  00B3               	movwf	_LCDConfig^(0+128)
  5386                           
  5387                           ;lcd.c: 204: if(v_lcdNoOfLines_u8 > 0x02)
  5388  0B1E  3003               	movlw	3
  5389  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  5390  0B20  1303               	bcf	3,6	;RP1=0, select bank0
  5391  0B21  0220               	subwf	LCD_Init@v_lcdNoOfLines_u8,w
  5392  0B22  1C03               	skipc
  5393  0B23  2B32               	goto	l2397
  5394                           
  5395                           ;lcd.c: 205: {
  5396                           ;lcd.c: 206: ARR_LcdLineNumAddress_U8[0x02] = 0x90 + (v_MaxCharsPerLine_u8 & 0x0fu);
  5397  0B24  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  5398  0B25  390F               	andlw	15
  5399  0B26  3E90               	addlw	144
  5400  0B27  00FD               	movwf	??_LCD_Init
  5401  0B28  087D               	movf	??_LCD_Init,w
  5402  0B29  1683               	bsf	3,5	;RP0=1, select bank1
  5403  0B2A  1303               	bcf	3,6	;RP1=0, select bank1
  5404  0B2B  00C3               	movwf	(_ARR_LcdLineNumAddress_U8^(0+128)+2)
  5405                           
  5406                           ;lcd.c: 207: ARR_LcdLineNumAddress_U8[0x03] = 0xd0 + (v_MaxCharsPerLine_u8 & 0x0fu);
  5407  0B2C  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  5408  0B2D  390F               	andlw	15
  5409  0B2E  3ED0               	addlw	208
  5410  0B2F  00FD               	movwf	??_LCD_Init
  5411  0B30  087D               	movf	??_LCD_Init,w
  5412  0B31  00C4               	movwf	(_ARR_LcdLineNumAddress_U8^(0+128)+3)
  5413  0B32                     l2397:	
  5414                           
  5415                           ;lcd.c: 208: }
  5416                           ;lcd.c: 210: DELAY_ms(100);
  5417  0B32  3064               	movlw	100
  5418  0B33  00F2               	movwf	DELAY_ms@ms_count
  5419  0B34  3000               	movlw	0
  5420  0B35  00F3               	movwf	DELAY_ms@ms_count+1
  5421  0B36  120A  158A  20BF  120A  158A  	fcall	_DELAY_ms
  5422                           
  5423                           ;lcd.c: 212: if(LCDConfig.v_LcdMode_U8 == 8u)
  5424  0B3B  3008               	movlw	8
  5425  0B3C  1683               	bsf	3,5	;RP0=1, select bank1
  5426  0B3D  1303               	bcf	3,6	;RP1=0, select bank1
  5427  0B3E  0635               	xorwf	(_LCDConfig^(0+128)+2),w
  5428  0B3F  1D03               	btfss	3,2
  5429  0B40  2B43               	goto	l2403
  5430                           
  5431                           ;lcd.c: 213: {
  5432                           ;lcd.c: 214: LCD_CmdWrite(0x38u);
  5433  0B41  3038               	movlw	56
  5434  0B42  2B4F               	goto	L3
  5435  0B43                     l2403:	
  5436                           ;lcd.c: 215: }
  5437                           
  5438                           
  5439                           ;lcd.c: 216: else if(LCDConfig.v_LcdMode_U8 == 4u)
  5440  0B43  3004               	movlw	4
  5441  0B44  1683               	bsf	3,5	;RP0=1, select bank1
  5442  0B45  1303               	bcf	3,6	;RP1=0, select bank1
  5443  0B46  0635               	xorwf	(_LCDConfig^(0+128)+2),w
  5444  0B47  1D03               	btfss	3,2
  5445  0B48  2B54               	goto	l243
  5446                           
  5447                           ;lcd.c: 217: {
  5448                           ;lcd.c: 218: lcd_Reset();
  5449  0B49  120A  158A  22BE  120A  158A  	fcall	_lcd_Reset
  5450                           
  5451                           ;lcd.c: 219: LCD_CmdWrite(0x28u);
  5452  0B4E  3028               	movlw	40
  5453  0B4F                     L3:	
  5454  0B4F  120A  158A  21D4  120A  158A  	fcall	_LCD_CmdWrite
  5455  0B54                     l243:	
  5456                           
  5457                           ;lcd.c: 220: }
  5458                           ;lcd.c: 222: LCD_CmdWrite(0x0Eu);
  5459  0B54  300E               	movlw	14
  5460  0B55  120A  158A  21D4  120A  158A  	fcall	_LCD_CmdWrite
  5461                           
  5462                           ;lcd.c: 223: LCD_Clear();
  5463  0B5A  120A  158A  207B   	fcall	_LCD_Clear
  5464  0B5D  0008               	return
  5465  0B5E                     __end_of_LCD_Init:	
  5466                           
  5467                           	psect	text30
  5468  0ABE                     __ptext30:	
  5469 ;; *************** function _lcd_Reset *****************
  5470 ;; Defined at:
  5471 ;;		line 912 in file "../00-libfiles/lcd.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      void 
  5478 ;; Registers used:
  5479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5485 ;;      Params:         0       0       0       0       0
  5486 ;;      Locals:         0       0       0       0       0
  5487 ;;      Temps:          0       0       0       0       0
  5488 ;;      Totals:         0       0       0       0       0
  5489 ;;Total ram usage:        0 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    2
  5492 ;; This function calls:
  5493 ;;		_DELAY_ms
  5494 ;;		_DELAY_us
  5495 ;;		_lcd_SendCmdSignals
  5496 ;;		_lcd_SendHigherNibble
  5497 ;; This function is called by:
  5498 ;;		_LCD_Init
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           
  5503                           ;psect for function _lcd_Reset
  5504  0ABE                     _lcd_Reset:	
  5505                           
  5506                           ;lcd.c: 915: lcd_SendHigherNibble(0x30);
  5507                           
  5508                           ;incstack = 0
  5509                           ; Regs used in _lcd_Reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5510  0ABE  3030               	movlw	48
  5511  0ABF  120A  158A  223E  120A  158A  	fcall	_lcd_SendHigherNibble
  5512                           
  5513                           ;lcd.c: 916: lcd_SendCmdSignals();
  5514  0AC4  120A  158A  21A7  120A  158A  	fcall	_lcd_SendCmdSignals
  5515                           
  5516                           ;lcd.c: 917: DELAY_ms(100);
  5517  0AC9  3064               	movlw	100
  5518  0ACA  00F2               	movwf	DELAY_ms@ms_count
  5519  0ACB  3000               	movlw	0
  5520  0ACC  00F3               	movwf	DELAY_ms@ms_count+1
  5521  0ACD  120A  158A  20BF  120A  158A  	fcall	_DELAY_ms
  5522                           
  5523                           ;lcd.c: 918: lcd_SendHigherNibble(0x30);
  5524  0AD2  3030               	movlw	48
  5525  0AD3  120A  158A  223E  120A  158A  	fcall	_lcd_SendHigherNibble
  5526                           
  5527                           ;lcd.c: 919: lcd_SendCmdSignals();
  5528  0AD8  120A  158A  21A7  120A  158A  	fcall	_lcd_SendCmdSignals
  5529                           
  5530                           ;lcd.c: 920: DELAY_us(200);
  5531  0ADD  30C8               	movlw	200
  5532  0ADE  00F0               	movwf	DELAY_us@us_count
  5533  0ADF  3000               	movlw	0
  5534  0AE0  00F1               	movwf	DELAY_us@us_count+1
  5535  0AE1  120A  158A  2070  120A  158A  	fcall	_DELAY_us
  5536                           
  5537                           ;lcd.c: 921: lcd_SendHigherNibble(0x30);
  5538  0AE6  3030               	movlw	48
  5539  0AE7  120A  158A  223E  120A  158A  	fcall	_lcd_SendHigherNibble
  5540                           
  5541                           ;lcd.c: 922: lcd_SendCmdSignals();
  5542  0AEC  120A  158A  21A7  120A  158A  	fcall	_lcd_SendCmdSignals
  5543                           
  5544                           ;lcd.c: 923: DELAY_us(200);
  5545  0AF1  30C8               	movlw	200
  5546  0AF2  00F0               	movwf	DELAY_us@us_count
  5547  0AF3  3000               	movlw	0
  5548  0AF4  00F1               	movwf	DELAY_us@us_count+1
  5549  0AF5  120A  158A  2070  120A  158A  	fcall	_DELAY_us
  5550                           
  5551                           ;lcd.c: 924: lcd_SendHigherNibble(0x20);
  5552  0AFA  3020               	movlw	32
  5553  0AFB  120A  158A  223E  120A  158A  	fcall	_lcd_SendHigherNibble
  5554                           
  5555                           ;lcd.c: 925: lcd_SendCmdSignals();
  5556  0B00  120A  158A  21A7  120A  158A  	fcall	_lcd_SendCmdSignals
  5557                           
  5558                           ;lcd.c: 926: DELAY_us(200);
  5559  0B05  30C8               	movlw	200
  5560  0B06  00F0               	movwf	DELAY_us@us_count
  5561  0B07  3000               	movlw	0
  5562  0B08  00F1               	movwf	DELAY_us@us_count+1
  5563  0B09  120A  158A  2070   	fcall	_DELAY_us
  5564  0B0C  0008               	return
  5565  0B0D                     __end_of_lcd_Reset:	
  5566                           
  5567                           	psect	text31
  5568  087B                     __ptext31:	
  5569 ;; *************** function _LCD_Clear *****************
  5570 ;; Defined at:
  5571 ;;		line 237 in file "../00-libfiles/lcd.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;		None
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;		None
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  1    wreg      void 
  5578 ;; Registers used:
  5579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5585 ;;      Params:         0       0       0       0       0
  5586 ;;      Locals:         0       0       0       0       0
  5587 ;;      Temps:          0       0       0       0       0
  5588 ;;      Totals:         0       0       0       0       0
  5589 ;;Total ram usage:        0 bytes
  5590 ;; Hardware stack levels used:    1
  5591 ;; Hardware stack levels required when called:    5
  5592 ;; This function calls:
  5593 ;;		_LCD_CmdWrite
  5594 ;;		_LCD_GoToLine
  5595 ;; This function is called by:
  5596 ;;		_LCD_Init
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           
  5601                           ;psect for function _LCD_Clear
  5602  087B                     _LCD_Clear:	
  5603                           
  5604                           ;lcd.c: 239: LCD_CmdWrite(0x01u);
  5605                           
  5606                           ;incstack = 0
  5607                           ; Regs used in _LCD_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5608  087B  3001               	movlw	1
  5609  087C  120A  158A  21D4  120A  158A  	fcall	_LCD_CmdWrite
  5610                           
  5611                           ;lcd.c: 240: LCD_GoToLine(0x00);
  5612  0881  3000               	movlw	0
  5613  0882  120A  158A  20D3   	fcall	_LCD_GoToLine
  5614  0885  0008               	return
  5615  0886                     __end_of_LCD_Clear:	
  5616                           
  5617                           	psect	text32
  5618  08D3                     __ptext32:	
  5619 ;; *************** function _LCD_GoToLine *****************
  5620 ;; Defined at:
  5621 ;;		line 265 in file "../00-libfiles/lcd.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;  v_lineNumber    1    wreg     unsigned char 
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;  v_lineNumber    1   11[COMMON] unsigned char 
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  1    wreg      void 
  5628 ;; Registers used:
  5629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5635 ;;      Params:         0       0       0       0       0
  5636 ;;      Locals:         1       0       0       0       0
  5637 ;;      Temps:          1       0       0       0       0
  5638 ;;      Totals:         2       0       0       0       0
  5639 ;;Total ram usage:        2 bytes
  5640 ;; Hardware stack levels used:    1
  5641 ;; Hardware stack levels required when called:    4
  5642 ;; This function calls:
  5643 ;;		_LCD_CmdWrite
  5644 ;; This function is called by:
  5645 ;;		_LCD_Clear
  5646 ;;		_main
  5647 ;;		_LCD_ScrollMessage
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650                           
  5651                           
  5652                           ;psect for function _LCD_GoToLine
  5653  08D3                     _LCD_GoToLine:	
  5654                           
  5655                           ;incstack = 0
  5656                           ; Regs used in _LCD_GoToLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5657                           ;LCD_GoToLine@v_lineNumber_u8 stored from wreg
  5658  08D3  00FB               	movwf	LCD_GoToLine@v_lineNumber_u8
  5659                           
  5660                           ;lcd.c: 267: if(v_lineNumber_u8 < LCDConfig.v_MaxSupportedLines_U8)
  5661  08D4  1683               	bsf	3,5	;RP0=1, select bank1
  5662  08D5  1303               	bcf	3,6	;RP1=0, select bank1
  5663  08D6  0833               	movf	_LCDConfig^(0+128),w
  5664  08D7  027B               	subwf	LCD_GoToLine@v_lineNumber_u8,w
  5665  08D8  1803               	skipnc
  5666  08D9  0008               	return
  5667                           
  5668                           ;lcd.c: 268: {
  5669                           ;lcd.c: 271: v_LcdTrackCursorPos_U8 = 0x00;
  5670  08DA  1283               	bcf	3,5	;RP0=0, select bank0
  5671  08DB  1303               	bcf	3,6	;RP1=0, select bank0
  5672  08DC  01EE               	clrf	_v_LcdTrackCursorPos_U8
  5673                           
  5674                           ;lcd.c: 272: v_LcdTrackLineNum_U8 = v_lineNumber_u8;
  5675  08DD  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  5676  08DE  00FA               	movwf	??_LCD_GoToLine
  5677  08DF  087A               	movf	??_LCD_GoToLine,w
  5678  08E0  00EF               	movwf	_v_LcdTrackLineNum_U8
  5679                           
  5680                           ;lcd.c: 273: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_lineNumber_u8]);
  5681  08E1  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  5682  08E2  3EC1               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  5683  08E3  0084               	movwf	4
  5684  08E4  1383               	bcf	3,7	;select IRP bank1
  5685  08E5  0800               	movf	0,w
  5686  08E6  120A  158A  21D4   	fcall	_LCD_CmdWrite
  5687  08E9  0008               	return
  5688  08EA                     __end_of_LCD_GoToLine:	
  5689                           
  5690                           	psect	text33
  5691  09D4                     __ptext33:	
  5692 ;; *************** function _LCD_CmdWrite *****************
  5693 ;; Defined at:
  5694 ;;		line 358 in file "../00-libfiles/lcd.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;  v_lcdCmd_u8     1    wreg     unsigned char 
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;  v_lcdCmd_u8     1    9[COMMON] unsigned char 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  1    wreg      void 
  5701 ;; Registers used:
  5702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5708 ;;      Params:         0       0       0       0       0
  5709 ;;      Locals:         1       0       0       0       0
  5710 ;;      Temps:          2       0       0       0       0
  5711 ;;      Totals:         3       0       0       0       0
  5712 ;;Total ram usage:        3 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:    3
  5715 ;; This function calls:
  5716 ;;		_lcd_BusyCheck
  5717 ;;		_lcd_SendCmdSignals
  5718 ;;		_lcd_SendHigherNibble
  5719 ;;		_lcd_SendLowerNibble
  5720 ;; This function is called by:
  5721 ;;		_LCD_Init
  5722 ;;		_LCD_Clear
  5723 ;;		_LCD_GoToLine
  5724 ;;		_LCD_GoToNextLine
  5725 ;;		_LCD_ScrollMessage
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           
  5730                           ;psect for function _LCD_CmdWrite
  5731  09D4                     _LCD_CmdWrite:	
  5732                           
  5733                           ;incstack = 0
  5734                           ; Regs used in _LCD_CmdWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5735                           ;LCD_CmdWrite@v_lcdCmd_u8 stored from wreg
  5736  09D4  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  5737                           
  5738                           ;lcd.c: 360: lcd_BusyCheck();
  5739  09D5  120A  158A  2576  120A  158A  	fcall	_lcd_BusyCheck
  5740                           
  5741                           ;lcd.c: 361: if(LCDConfig.v_LcdMode_U8 == 8u)
  5742  09DA  3008               	movlw	8
  5743  09DB  1683               	bsf	3,5	;RP0=1, select bank1
  5744  09DC  1303               	bcf	3,6	;RP1=0, select bank1
  5745  09DD  0635               	xorwf	(_LCDConfig^(0+128)+2),w
  5746  09DE  1D03               	btfss	3,2
  5747  09DF  29E7               	goto	l1919
  5748                           
  5749                           ;lcd.c: 362: {
  5750                           ;lcd.c: 363: lcd_SendLowerNibble(v_lcdCmd_u8);
  5751  09E0  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  5752  09E1  120A  158A  227E  120A  158A  	fcall	_lcd_SendLowerNibble
  5753                           
  5754                           ;lcd.c: 364: }
  5755  09E6  29FF               	goto	l1923
  5756  09E7                     l1919:	
  5757                           
  5758                           ;lcd.c: 365: else
  5759                           ;lcd.c: 366: {
  5760                           ;lcd.c: 367: lcd_SendHigherNibble(v_lcdCmd_u8);
  5761  09E7  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  5762  09E8  120A  158A  223E  120A  158A  	fcall	_lcd_SendHigherNibble
  5763                           
  5764                           ;lcd.c: 368: lcd_SendCmdSignals();
  5765  09ED  120A  158A  21A7  120A  158A  	fcall	_lcd_SendCmdSignals
  5766                           
  5767                           ;lcd.c: 369: v_lcdCmd_u8 = v_lcdCmd_u8 << 4;
  5768  09F2  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  5769  09F3  00F7               	movwf	??_LCD_CmdWrite
  5770  09F4  3003               	movlw	3
  5771  09F5                     u2695:	
  5772  09F5  1003               	clrc
  5773  09F6  0DF7               	rlf	??_LCD_CmdWrite,f
  5774  09F7  3EFF               	addlw	-1
  5775  09F8  1D03               	skipz
  5776  09F9  29F5               	goto	u2695
  5777  09FA  1003               	clrc
  5778  09FB  0D77               	rlf	??_LCD_CmdWrite,w
  5779  09FC  00F8               	movwf	??_LCD_CmdWrite+1
  5780  09FD  0878               	movf	??_LCD_CmdWrite+1,w
  5781  09FE  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  5782  09FF                     l1923:	
  5783                           
  5784                           ;lcd.c: 370: }
  5785                           ;lcd.c: 372: lcd_SendHigherNibble(v_lcdCmd_u8);
  5786  09FF  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  5787  0A00  120A  158A  223E  120A  158A  	fcall	_lcd_SendHigherNibble
  5788                           
  5789                           ;lcd.c: 373: lcd_SendCmdSignals();
  5790  0A05  120A  158A  21A7   	fcall	_lcd_SendCmdSignals
  5791  0A08  0008               	return
  5792  0A09                     __end_of_LCD_CmdWrite:	
  5793                           
  5794                           	psect	text34
  5795  0A7E                     __ptext34:	
  5796 ;; *************** function _lcd_SendLowerNibble *****************
  5797 ;; Defined at:
  5798 ;;		line 961 in file "../00-libfiles/lcd.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  dataByte        1    wreg     unsigned char 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;  dataByte        1    6[COMMON] unsigned char 
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1    wreg      void 
  5805 ;; Registers used:
  5806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5812 ;;      Params:         0       0       0       0       0
  5813 ;;      Locals:         1       0       0       0       0
  5814 ;;      Temps:          1       0       0       0       0
  5815 ;;      Totals:         2       0       0       0       0
  5816 ;;Total ram usage:        2 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    1
  5819 ;; This function calls:
  5820 ;;		_GPIO_PinWrite
  5821 ;; This function is called by:
  5822 ;;		_LCD_CmdWrite
  5823 ;;		_lcd_DataWrite
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           
  5828                           ;psect for function _lcd_SendLowerNibble
  5829  0A7E                     _lcd_SendLowerNibble:	
  5830                           
  5831                           ;incstack = 0
  5832                           ; Regs used in _lcd_SendLowerNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5833                           ;lcd_SendLowerNibble@dataByte stored from wreg
  5834  0A7E  00F6               	movwf	lcd_SendLowerNibble@dataByte
  5835                           
  5836                           ;lcd.c: 963: GPIO_PinWrite(LCDConfig.D0,(((dataByte)&((1<<(0))))!=0u));
  5837  0A7F  1C76               	btfss	lcd_SendLowerNibble@dataByte,0
  5838  0A80  2A83               	goto	u2520
  5839  0A81  3001               	movlw	1
  5840  0A82  2A84               	goto	u2530
  5841  0A83                     u2520:	
  5842  0A83  3000               	movlw	0
  5843  0A84                     u2530:	
  5844  0A84  00F5               	movwf	??_lcd_SendLowerNibble
  5845  0A85  0875               	movf	??_lcd_SendLowerNibble,w
  5846  0A86  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5847  0A87  1683               	bsf	3,5	;RP0=1, select bank1
  5848  0A88  1303               	bcf	3,6	;RP1=0, select bank1
  5849  0A89  0839               	movf	(_LCDConfig^(0+128)+6),w
  5850  0A8A  120A  118A  21DD  120A  158A  	fcall	_GPIO_PinWrite
  5851                           
  5852                           ;lcd.c: 964: GPIO_PinWrite(LCDConfig.D1,(((dataByte)&((1<<(1))))!=0u));
  5853  0A8F  1CF6               	btfss	lcd_SendLowerNibble@dataByte,1
  5854  0A90  2A93               	goto	u2540
  5855  0A91  3001               	movlw	1
  5856  0A92  2A94               	goto	u2550
  5857  0A93                     u2540:	
  5858  0A93  3000               	movlw	0
  5859  0A94                     u2550:	
  5860  0A94  00F5               	movwf	??_lcd_SendLowerNibble
  5861  0A95  0875               	movf	??_lcd_SendLowerNibble,w
  5862  0A96  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5863  0A97  1683               	bsf	3,5	;RP0=1, select bank1
  5864  0A98  1303               	bcf	3,6	;RP1=0, select bank1
  5865  0A99  083A               	movf	(_LCDConfig^(0+128)+7),w
  5866  0A9A  120A  118A  21DD  120A  158A  	fcall	_GPIO_PinWrite
  5867                           
  5868                           ;lcd.c: 965: GPIO_PinWrite(LCDConfig.D2,(((dataByte)&((1<<(2))))!=0u));
  5869  0A9F  1D76               	btfss	lcd_SendLowerNibble@dataByte,2
  5870  0AA0  2AA3               	goto	u2560
  5871  0AA1  3001               	movlw	1
  5872  0AA2  2AA4               	goto	u2570
  5873  0AA3                     u2560:	
  5874  0AA3  3000               	movlw	0
  5875  0AA4                     u2570:	
  5876  0AA4  00F5               	movwf	??_lcd_SendLowerNibble
  5877  0AA5  0875               	movf	??_lcd_SendLowerNibble,w
  5878  0AA6  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5879  0AA7  1683               	bsf	3,5	;RP0=1, select bank1
  5880  0AA8  1303               	bcf	3,6	;RP1=0, select bank1
  5881  0AA9  083B               	movf	(_LCDConfig^(0+128)+8),w
  5882  0AAA  120A  118A  21DD  120A  158A  	fcall	_GPIO_PinWrite
  5883                           
  5884                           ;lcd.c: 966: GPIO_PinWrite(LCDConfig.D3,(((dataByte)&((1<<(3))))!=0u));
  5885  0AAF  1DF6               	btfss	lcd_SendLowerNibble@dataByte,3
  5886  0AB0  2AB3               	goto	u2580
  5887  0AB1  3001               	movlw	1
  5888  0AB2  2AB4               	goto	u2590
  5889  0AB3                     u2580:	
  5890  0AB3  3000               	movlw	0
  5891  0AB4                     u2590:	
  5892  0AB4  00F5               	movwf	??_lcd_SendLowerNibble
  5893  0AB5  0875               	movf	??_lcd_SendLowerNibble,w
  5894  0AB6  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5895  0AB7  1683               	bsf	3,5	;RP0=1, select bank1
  5896  0AB8  1303               	bcf	3,6	;RP1=0, select bank1
  5897  0AB9  083C               	movf	(_LCDConfig^(0+128)+9),w
  5898  0ABA  120A  118A  21DD   	fcall	_GPIO_PinWrite
  5899  0ABD  0008               	return
  5900  0ABE                     __end_of_lcd_SendLowerNibble:	
  5901                           
  5902                           	psect	text35
  5903  0A3E                     __ptext35:	
  5904 ;; *************** function _lcd_SendHigherNibble *****************
  5905 ;; Defined at:
  5906 ;;		line 942 in file "../00-libfiles/lcd.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;  dataByte        1    wreg     unsigned char 
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;  dataByte        1    6[COMMON] unsigned char 
  5911 ;; Return value:  Size  Location     Type
  5912 ;;                  1    wreg      void 
  5913 ;; Registers used:
  5914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5915 ;; Tracked objects:
  5916 ;;		On entry : 0/0
  5917 ;;		On exit  : 0/0
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5920 ;;      Params:         0       0       0       0       0
  5921 ;;      Locals:         1       0       0       0       0
  5922 ;;      Temps:          1       0       0       0       0
  5923 ;;      Totals:         2       0       0       0       0
  5924 ;;Total ram usage:        2 bytes
  5925 ;; Hardware stack levels used:    1
  5926 ;; Hardware stack levels required when called:    1
  5927 ;; This function calls:
  5928 ;;		_GPIO_PinWrite
  5929 ;; This function is called by:
  5930 ;;		_LCD_CmdWrite
  5931 ;;		_lcd_DataWrite
  5932 ;;		_lcd_Reset
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           
  5937                           ;psect for function _lcd_SendHigherNibble
  5938  0A3E                     _lcd_SendHigherNibble:	
  5939                           
  5940                           ;incstack = 0
  5941                           ; Regs used in _lcd_SendHigherNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5942                           ;lcd_SendHigherNibble@dataByte stored from wreg
  5943  0A3E  00F6               	movwf	lcd_SendHigherNibble@dataByte
  5944                           
  5945                           ;lcd.c: 944: GPIO_PinWrite(LCDConfig.D4,(((dataByte)&((1<<(4))))!=0u));
  5946  0A3F  1E76               	btfss	lcd_SendHigherNibble@dataByte,4
  5947  0A40  2A43               	goto	u2600
  5948  0A41  3001               	movlw	1
  5949  0A42  2A44               	goto	u2610
  5950  0A43                     u2600:	
  5951  0A43  3000               	movlw	0
  5952  0A44                     u2610:	
  5953  0A44  00F5               	movwf	??_lcd_SendHigherNibble
  5954  0A45  0875               	movf	??_lcd_SendHigherNibble,w
  5955  0A46  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5956  0A47  1683               	bsf	3,5	;RP0=1, select bank1
  5957  0A48  1303               	bcf	3,6	;RP1=0, select bank1
  5958  0A49  083D               	movf	(_LCDConfig^(0+128)+10),w
  5959  0A4A  120A  118A  21DD  120A  158A  	fcall	_GPIO_PinWrite
  5960                           
  5961                           ;lcd.c: 945: GPIO_PinWrite(LCDConfig.D5,(((dataByte)&((1<<(5))))!=0u));
  5962  0A4F  1EF6               	btfss	lcd_SendHigherNibble@dataByte,5
  5963  0A50  2A53               	goto	u2620
  5964  0A51  3001               	movlw	1
  5965  0A52  2A54               	goto	u2630
  5966  0A53                     u2620:	
  5967  0A53  3000               	movlw	0
  5968  0A54                     u2630:	
  5969  0A54  00F5               	movwf	??_lcd_SendHigherNibble
  5970  0A55  0875               	movf	??_lcd_SendHigherNibble,w
  5971  0A56  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5972  0A57  1683               	bsf	3,5	;RP0=1, select bank1
  5973  0A58  1303               	bcf	3,6	;RP1=0, select bank1
  5974  0A59  083E               	movf	(_LCDConfig^(0+128)+11),w
  5975  0A5A  120A  118A  21DD  120A  158A  	fcall	_GPIO_PinWrite
  5976                           
  5977                           ;lcd.c: 946: GPIO_PinWrite(LCDConfig.D6,(((dataByte)&((1<<(6))))!=0u));
  5978  0A5F  1F76               	btfss	lcd_SendHigherNibble@dataByte,6
  5979  0A60  2A63               	goto	u2640
  5980  0A61  3001               	movlw	1
  5981  0A62  2A64               	goto	u2650
  5982  0A63                     u2640:	
  5983  0A63  3000               	movlw	0
  5984  0A64                     u2650:	
  5985  0A64  00F5               	movwf	??_lcd_SendHigherNibble
  5986  0A65  0875               	movf	??_lcd_SendHigherNibble,w
  5987  0A66  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5988  0A67  1683               	bsf	3,5	;RP0=1, select bank1
  5989  0A68  1303               	bcf	3,6	;RP1=0, select bank1
  5990  0A69  083F               	movf	(_LCDConfig^(0+128)+12),w
  5991  0A6A  120A  118A  21DD  120A  158A  	fcall	_GPIO_PinWrite
  5992                           
  5993                           ;lcd.c: 947: GPIO_PinWrite(LCDConfig.D7,(((dataByte)&((1<<(7))))!=0u));
  5994  0A6F  1FF6               	btfss	lcd_SendHigherNibble@dataByte,7
  5995  0A70  2A73               	goto	u2660
  5996  0A71  3001               	movlw	1
  5997  0A72  2A74               	goto	u2670
  5998  0A73                     u2660:	
  5999  0A73  3000               	movlw	0
  6000  0A74                     u2670:	
  6001  0A74  00F5               	movwf	??_lcd_SendHigherNibble
  6002  0A75  0875               	movf	??_lcd_SendHigherNibble,w
  6003  0A76  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  6004  0A77  1683               	bsf	3,5	;RP0=1, select bank1
  6005  0A78  1303               	bcf	3,6	;RP1=0, select bank1
  6006  0A79  0840               	movf	(_LCDConfig^(0+128)+13),w
  6007  0A7A  120A  118A  21DD   	fcall	_GPIO_PinWrite
  6008  0A7D  0008               	return
  6009  0A7E                     __end_of_lcd_SendHigherNibble:	
  6010                           
  6011                           	psect	text36
  6012  09A7                     __ptext36:	
  6013 ;; *************** function _lcd_SendCmdSignals *****************
  6014 ;; Defined at:
  6015 ;;		line 980 in file "../00-libfiles/lcd.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;		None
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;		None
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  1    wreg      void 
  6022 ;; Registers used:
  6023 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6029 ;;      Params:         0       0       0       0       0
  6030 ;;      Locals:         0       0       0       0       0
  6031 ;;      Temps:          0       0       0       0       0
  6032 ;;      Totals:         0       0       0       0       0
  6033 ;;Total ram usage:        0 bytes
  6034 ;; Hardware stack levels used:    1
  6035 ;; Hardware stack levels required when called:    1
  6036 ;; This function calls:
  6037 ;;		_DELAY_us
  6038 ;;		_GPIO_PinWrite
  6039 ;; This function is called by:
  6040 ;;		_LCD_CmdWrite
  6041 ;;		_lcd_Reset
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           
  6046                           ;psect for function _lcd_SendCmdSignals
  6047  09A7                     _lcd_SendCmdSignals:	
  6048                           
  6049                           ;lcd.c: 982: GPIO_PinWrite(LCDConfig.RS,0);
  6050                           
  6051                           ;incstack = 0
  6052                           ; Regs used in _lcd_SendCmdSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6053  09A7  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  6054  09A8  1683               	bsf	3,5	;RP0=1, select bank1
  6055  09A9  1303               	bcf	3,6	;RP1=0, select bank1
  6056  09AA  0836               	movf	(_LCDConfig^(0+128)+3),w
  6057  09AB  120A  118A  21DD  120A  158A  	fcall	_GPIO_PinWrite
  6058                           
  6059                           ;lcd.c: 983: GPIO_PinWrite(LCDConfig.RW,0);
  6060  09B0  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  6061  09B1  1683               	bsf	3,5	;RP0=1, select bank1
  6062  09B2  1303               	bcf	3,6	;RP1=0, select bank1
  6063  09B3  0837               	movf	(_LCDConfig^(0+128)+4),w
  6064  09B4  120A  118A  21DD  120A  158A  	fcall	_GPIO_PinWrite
  6065                           
  6066                           ;lcd.c: 984: GPIO_PinWrite(LCDConfig.EN,1);
  6067  09B9  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  6068  09BA  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  6069  09BB  1683               	bsf	3,5	;RP0=1, select bank1
  6070  09BC  1303               	bcf	3,6	;RP1=0, select bank1
  6071  09BD  0838               	movf	(_LCDConfig^(0+128)+5),w
  6072  09BE  120A  118A  21DD  120A  158A  	fcall	_GPIO_PinWrite
  6073                           
  6074                           ;lcd.c: 985: DELAY_us(10);
  6075  09C3  300A               	movlw	10
  6076  09C4  00F0               	movwf	DELAY_us@us_count
  6077  09C5  3000               	movlw	0
  6078  09C6  00F1               	movwf	DELAY_us@us_count+1
  6079  09C7  120A  158A  2070  120A  158A  	fcall	_DELAY_us
  6080                           
  6081                           ;lcd.c: 986: GPIO_PinWrite(LCDConfig.EN,0);
  6082  09CC  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  6083  09CD  1683               	bsf	3,5	;RP0=1, select bank1
  6084  09CE  1303               	bcf	3,6	;RP1=0, select bank1
  6085  09CF  0838               	movf	(_LCDConfig^(0+128)+5),w
  6086  09D0  120A  118A  21DD   	fcall	_GPIO_PinWrite
  6087  09D3  0008               	return
  6088  09D4                     __end_of_lcd_SendCmdSignals:	
  6089                           
  6090                           	psect	text37
  6091  0D76                     __ptext37:	
  6092 ;; *************** function _lcd_BusyCheck *****************
  6093 ;; Defined at:
  6094 ;;		line 859 in file "../00-libfiles/lcd.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;		None
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  busyflag        1    6[COMMON] unsigned char 
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  1    wreg      void 
  6101 ;; Registers used:
  6102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6108 ;;      Params:         0       0       0       0       0
  6109 ;;      Locals:         1       0       0       0       0
  6110 ;;      Temps:          1       0       0       0       0
  6111 ;;      Totals:         2       0       0       0       0
  6112 ;;Total ram usage:        2 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:    2
  6115 ;; This function calls:
  6116 ;;		_DELAY_ms
  6117 ;;		_DELAY_us
  6118 ;;		_GPIO_PinDirection
  6119 ;;		_GPIO_PinRead
  6120 ;;		_GPIO_PinWrite
  6121 ;; This function is called by:
  6122 ;;		_LCD_CmdWrite
  6123 ;;		_lcd_DataWrite
  6124 ;; This function uses a non-reentrant model
  6125 ;;
  6126                           
  6127                           
  6128                           ;psect for function _lcd_BusyCheck
  6129  0D76                     _lcd_BusyCheck:	
  6130                           
  6131                           ;lcd.c: 861: uint8_t busyflag;
  6132                           ;lcd.c: 863: if(LCDConfig.RW == P_NC)
  6133                           
  6134                           ;incstack = 0
  6135                           ; Regs used in _lcd_BusyCheck: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6136  0D76  1683               	bsf	3,5	;RP0=1, select bank1
  6137  0D77  1303               	bcf	3,6	;RP1=0, select bank1
  6138  0D78  0A37               	incf	(_LCDConfig^(0+128)+4),w
  6139  0D79  1D03               	btfss	3,2
  6140  0D7A  2DFA               	goto	l1901
  6141                           
  6142                           ;lcd.c: 864: {
  6143                           ;lcd.c: 865: GPIO_PinDirection(LCDConfig.D7,0x01u);
  6144  0D7B  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  6145  0D7C  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  6146  0D7D  0840               	movf	(_LCDConfig^(0+128)+13),w
  6147  0D7E  120A  118A  2104  120A  158A  	fcall	_GPIO_PinDirection
  6148                           
  6149                           ;lcd.c: 866: GPIO_PinWrite(LCDConfig.RS,0);
  6150  0D83  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  6151  0D84  1683               	bsf	3,5	;RP0=1, select bank1
  6152  0D85  1303               	bcf	3,6	;RP1=0, select bank1
  6153  0D86  0836               	movf	(_LCDConfig^(0+128)+3),w
  6154  0D87  120A  118A  21DD  120A  158A  	fcall	_GPIO_PinWrite
  6155                           
  6156                           ;lcd.c: 867: GPIO_PinWrite(LCDConfig.RW,1);
  6157  0D8C  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  6158  0D8D  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  6159  0D8E  1683               	bsf	3,5	;RP0=1, select bank1
  6160  0D8F  1303               	bcf	3,6	;RP1=0, select bank1
  6161  0D90  0837               	movf	(_LCDConfig^(0+128)+4),w
  6162  0D91  120A  118A  21DD  120A  158A  	fcall	_GPIO_PinWrite
  6163  0D96                     l363:	
  6164                           ;lcd.c: 868: do
  6165                           
  6166                           
  6167                           ;lcd.c: 869: {
  6168                           ;lcd.c: 871: GPIO_PinWrite(LCDConfig.EN,0);
  6169  0D96  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  6170  0D97  1683               	bsf	3,5	;RP0=1, select bank1
  6171  0D98  1303               	bcf	3,6	;RP1=0, select bank1
  6172  0D99  0838               	movf	(_LCDConfig^(0+128)+5),w
  6173  0D9A  120A  118A  21DD  120A  158A  	fcall	_GPIO_PinWrite
  6174                           
  6175                           ;lcd.c: 872: DELAY_us(10);
  6176  0D9F  300A               	movlw	10
  6177  0DA0  00F0               	movwf	DELAY_us@us_count
  6178  0DA1  3000               	movlw	0
  6179  0DA2  00F1               	movwf	DELAY_us@us_count+1
  6180  0DA3  120A  158A  2070  120A  158A  	fcall	_DELAY_us
  6181                           
  6182                           ;lcd.c: 873: GPIO_PinWrite(LCDConfig.EN,1);
  6183  0DA8  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  6184  0DA9  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  6185  0DAA  1683               	bsf	3,5	;RP0=1, select bank1
  6186  0DAB  1303               	bcf	3,6	;RP1=0, select bank1
  6187  0DAC  0838               	movf	(_LCDConfig^(0+128)+5),w
  6188  0DAD  120A  118A  21DD  120A  158A  	fcall	_GPIO_PinWrite
  6189                           
  6190                           ;lcd.c: 874: DELAY_us(10);
  6191  0DB2  300A               	movlw	10
  6192  0DB3  00F0               	movwf	DELAY_us@us_count
  6193  0DB4  3000               	movlw	0
  6194  0DB5  00F1               	movwf	DELAY_us@us_count+1
  6195  0DB6  120A  158A  2070  120A  158A  	fcall	_DELAY_us
  6196                           
  6197                           ;lcd.c: 875: busyflag = GPIO_PinRead(LCDConfig.D7);
  6198  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  6199  0DBC  1303               	bcf	3,6	;RP1=0, select bank1
  6200  0DBD  0840               	movf	(_LCDConfig^(0+128)+13),w
  6201  0DBE  120A  158A  2482  120A  158A  	fcall	_GPIO_PinRead
  6202  0DC3  00F5               	movwf	??_lcd_BusyCheck
  6203  0DC4  0875               	movf	??_lcd_BusyCheck,w
  6204  0DC5  00F6               	movwf	lcd_BusyCheck@busyflag
  6205                           
  6206                           ;lcd.c: 878: if(LCDConfig.v_LcdMode_U8 == 4)
  6207  0DC6  3004               	movlw	4
  6208  0DC7  1683               	bsf	3,5	;RP0=1, select bank1
  6209  0DC8  1303               	bcf	3,6	;RP1=0, select bank1
  6210  0DC9  0635               	xorwf	(_LCDConfig^(0+128)+2),w
  6211  0DCA  1D03               	btfss	3,2
  6212  0DCB  2DEF               	goto	l1897
  6213                           
  6214                           ;lcd.c: 879: {
  6215                           ;lcd.c: 881: GPIO_PinWrite(LCDConfig.EN,0);
  6216  0DCC  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  6217  0DCD  0838               	movf	(_LCDConfig^(0+128)+5),w
  6218  0DCE  120A  118A  21DD  120A  158A  	fcall	_GPIO_PinWrite
  6219                           
  6220                           ;lcd.c: 882: DELAY_us(10);
  6221  0DD3  300A               	movlw	10
  6222  0DD4  00F0               	movwf	DELAY_us@us_count
  6223  0DD5  3000               	movlw	0
  6224  0DD6  00F1               	movwf	DELAY_us@us_count+1
  6225  0DD7  120A  158A  2070  120A  158A  	fcall	_DELAY_us
  6226                           
  6227                           ;lcd.c: 883: GPIO_PinWrite(LCDConfig.EN,1);
  6228  0DDC  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  6229  0DDD  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  6230  0DDE  1683               	bsf	3,5	;RP0=1, select bank1
  6231  0DDF  1303               	bcf	3,6	;RP1=0, select bank1
  6232  0DE0  0838               	movf	(_LCDConfig^(0+128)+5),w
  6233  0DE1  120A  118A  21DD  120A  158A  	fcall	_GPIO_PinWrite
  6234                           
  6235                           ;lcd.c: 884: DELAY_us(10);
  6236  0DE6  300A               	movlw	10
  6237  0DE7  00F0               	movwf	DELAY_us@us_count
  6238  0DE8  3000               	movlw	0
  6239  0DE9  00F1               	movwf	DELAY_us@us_count+1
  6240  0DEA  120A  158A  2070  120A  158A  	fcall	_DELAY_us
  6241  0DEF                     l1897:	
  6242                           
  6243                           ;lcd.c: 885: }
  6244                           ;lcd.c: 886: }while(busyflag!=0);
  6245  0DEF  0876               	movf	lcd_BusyCheck@busyflag,w
  6246  0DF0  1D03               	btfss	3,2
  6247  0DF1  2D96               	goto	l363
  6248                           
  6249                           ;lcd.c: 888: GPIO_PinDirection(LCDConfig.D7,0x00u);
  6250  0DF2  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  6251  0DF3  1683               	bsf	3,5	;RP0=1, select bank1
  6252  0DF4  1303               	bcf	3,6	;RP1=0, select bank1
  6253  0DF5  0840               	movf	(_LCDConfig^(0+128)+13),w
  6254  0DF6  120A  118A  2104   	fcall	_GPIO_PinDirection
  6255                           
  6256                           ;lcd.c: 889: }
  6257  0DF9  0008               	return
  6258  0DFA                     l1901:	
  6259                           
  6260                           ;lcd.c: 890: else
  6261                           ;lcd.c: 891: {
  6262                           ;lcd.c: 894: DELAY_ms(1);
  6263  0DFA  3001               	movlw	1
  6264  0DFB  00F2               	movwf	DELAY_ms@ms_count
  6265  0DFC  3000               	movlw	0
  6266  0DFD  00F3               	movwf	DELAY_ms@ms_count+1
  6267  0DFE  120A  158A  20BF   	fcall	_DELAY_ms
  6268  0E01  0008               	return
  6269  0E02                     __end_of_lcd_BusyCheck:	
  6270                           
  6271                           	psect	text38
  6272  01DD                     __ptext38:	
  6273 ;; *************** function _GPIO_PinWrite *****************
  6274 ;; Defined at:
  6275 ;;		line 127 in file "../00-libfiles/gpio.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;  enm_pinNumbe    1    wreg     enum E1088
  6278 ;;  var_pinValue    1    0[COMMON] unsigned char 
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  6281 ;;  var_portNumb    1    3[COMMON] unsigned char 
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  1    wreg      void 
  6284 ;; Registers used:
  6285 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6291 ;;      Params:         1       0       0       0       0
  6292 ;;      Locals:         2       0       0       0       0
  6293 ;;      Temps:          2       0       0       0       0
  6294 ;;      Totals:         5       0       0       0       0
  6295 ;;Total ram usage:        5 bytes
  6296 ;; Hardware stack levels used:    1
  6297 ;; This function calls:
  6298 ;;		Nothing
  6299 ;; This function is called by:
  6300 ;;		_lcd_BusyCheck
  6301 ;;		_lcd_SendHigherNibble
  6302 ;;		_lcd_SendLowerNibble
  6303 ;;		_lcd_SendCmdSignals
  6304 ;;		_lcd_SendDataSignals
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           
  6309                           ;psect for function _GPIO_PinWrite
  6310  01DD                     _GPIO_PinWrite:	
  6311                           
  6312                           ;incstack = 0
  6313                           ; Regs used in _GPIO_PinWrite: [wreg-fsr0h+status,2+status,0]
  6314                           ;GPIO_PinWrite@enm_pinNumber stored from wreg
  6315  01DD  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  6316                           
  6317                           ;gpio.c: 130: uint8_t var_portNumber_u8;
  6318                           ;gpio.c: 133: var_portNumber_u8 = (enm_pinNumber>>3);
  6319  01DE  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  6320  01DF  00F1               	movwf	??_GPIO_PinWrite
  6321  01E0  3003               	movlw	3
  6322  01E1                     u2175:	
  6323  01E1  1003               	clrc
  6324  01E2  0CF1               	rrf	??_GPIO_PinWrite,f
  6325  01E3  3EFF               	addlw	-1
  6326  01E4  1D03               	skipz
  6327  01E5  29E1               	goto	u2175
  6328  01E6  0871               	movf	??_GPIO_PinWrite,w
  6329  01E7  00F2               	movwf	??_GPIO_PinWrite+1
  6330  01E8  0872               	movf	??_GPIO_PinWrite+1,w
  6331  01E9  00F3               	movwf	GPIO_PinWrite@var_portNumber_u8
  6332                           
  6333                           ;gpio.c: 134: enm_pinNumber = enm_pinNumber & 0x07;
  6334  01EA  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  6335  01EB  3907               	andlw	7
  6336  01EC  00F1               	movwf	??_GPIO_PinWrite
  6337  01ED  0871               	movf	??_GPIO_PinWrite,w
  6338  01EE  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  6339                           
  6340                           ;gpio.c: 138: switch(var_portNumber_u8)
  6341  01EF  2AA4               	goto	l1853
  6342  01F0                     l1821:	
  6343                           ;gpio.c: 139: {
  6344                           ;gpio.c: 141: case 0:
  6345                           
  6346                           
  6347                           ;gpio.c: 142: ((var_pinValue_u8)? ((PORTA) |= (1<<(enm_pinNumber))): ((PORTA) &= ~(1<<(e
      +                          nm_pinNumber))));
  6348  01F0  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  6349  01F1  1903               	btfsc	3,2
  6350  01F2  2A03               	goto	l1825
  6351  01F3  3001               	movlw	1
  6352  01F4  00F1               	movwf	??_GPIO_PinWrite
  6353  01F5  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6354  01F6  29F9               	goto	u2194
  6355  01F7                     u2195:	
  6356  01F7  1003               	clrc
  6357  01F8  0DF1               	rlf	??_GPIO_PinWrite,f
  6358  01F9                     u2194:	
  6359  01F9  3EFF               	addlw	-1
  6360  01FA  1D03               	skipz
  6361  01FB  29F7               	goto	u2195
  6362  01FC  0871               	movf	??_GPIO_PinWrite,w
  6363  01FD  00F2               	movwf	??_GPIO_PinWrite+1
  6364  01FE  0872               	movf	??_GPIO_PinWrite+1,w
  6365  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  6366  0200  1303               	bcf	3,6	;RP1=0, select bank0
  6367  0201  0485               	iorwf	5,f	;volatile
  6368  0202  0008               	return
  6369  0203                     l1825:	
  6370  0203  3001               	movlw	1
  6371  0204  00F1               	movwf	??_GPIO_PinWrite
  6372  0205  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6373  0206  2A09               	goto	u2204
  6374  0207                     u2205:	
  6375  0207  1003               	clrc
  6376  0208  0DF1               	rlf	??_GPIO_PinWrite,f
  6377  0209                     u2204:	
  6378  0209  3EFF               	addlw	-1
  6379  020A  1D03               	skipz
  6380  020B  2A07               	goto	u2205
  6381  020C  0871               	movf	??_GPIO_PinWrite,w
  6382  020D  3AFF               	xorlw	255
  6383  020E  00F2               	movwf	??_GPIO_PinWrite+1
  6384  020F  0872               	movf	??_GPIO_PinWrite+1,w
  6385  0210  1283               	bcf	3,5	;RP0=0, select bank0
  6386  0211  1303               	bcf	3,6	;RP1=0, select bank0
  6387  0212  0585               	andwf	5,f	;volatile
  6388                           
  6389                           ;gpio.c: 143: break;
  6390  0213  0008               	return
  6391  0214                     l1827:	
  6392                           ;gpio.c: 147: case 1:
  6393                           
  6394                           
  6395                           ;gpio.c: 148: ((var_pinValue_u8)? ((PORTB) |= (1<<(enm_pinNumber))): ((PORTB) &= ~(1<<(e
      +                          nm_pinNumber))));
  6396  0214  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  6397  0215  1903               	btfsc	3,2
  6398  0216  2A27               	goto	l1831
  6399  0217  3001               	movlw	1
  6400  0218  00F1               	movwf	??_GPIO_PinWrite
  6401  0219  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6402  021A  2A1D               	goto	u2224
  6403  021B                     u2225:	
  6404  021B  1003               	clrc
  6405  021C  0DF1               	rlf	??_GPIO_PinWrite,f
  6406  021D                     u2224:	
  6407  021D  3EFF               	addlw	-1
  6408  021E  1D03               	skipz
  6409  021F  2A1B               	goto	u2225
  6410  0220  0871               	movf	??_GPIO_PinWrite,w
  6411  0221  00F2               	movwf	??_GPIO_PinWrite+1
  6412  0222  0872               	movf	??_GPIO_PinWrite+1,w
  6413  0223  1283               	bcf	3,5	;RP0=0, select bank0
  6414  0224  1303               	bcf	3,6	;RP1=0, select bank0
  6415  0225  0486               	iorwf	6,f	;volatile
  6416  0226  0008               	return
  6417  0227                     l1831:	
  6418  0227  3001               	movlw	1
  6419  0228  00F1               	movwf	??_GPIO_PinWrite
  6420  0229  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6421  022A  2A2D               	goto	u2234
  6422  022B                     u2235:	
  6423  022B  1003               	clrc
  6424  022C  0DF1               	rlf	??_GPIO_PinWrite,f
  6425  022D                     u2234:	
  6426  022D  3EFF               	addlw	-1
  6427  022E  1D03               	skipz
  6428  022F  2A2B               	goto	u2235
  6429  0230  0871               	movf	??_GPIO_PinWrite,w
  6430  0231  3AFF               	xorlw	255
  6431  0232  00F2               	movwf	??_GPIO_PinWrite+1
  6432  0233  0872               	movf	??_GPIO_PinWrite+1,w
  6433  0234  1283               	bcf	3,5	;RP0=0, select bank0
  6434  0235  1303               	bcf	3,6	;RP1=0, select bank0
  6435  0236  0586               	andwf	6,f	;volatile
  6436                           
  6437                           ;gpio.c: 149: break;
  6438  0237  0008               	return
  6439  0238                     l1833:	
  6440                           ;gpio.c: 153: case 2:
  6441                           
  6442                           
  6443                           ;gpio.c: 154: ((var_pinValue_u8)? ((PORTC) |= (1<<(enm_pinNumber))): ((PORTC) &= ~(1<<(e
      +                          nm_pinNumber))));
  6444  0238  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  6445  0239  1903               	btfsc	3,2
  6446  023A  2A4B               	goto	l1837
  6447  023B  3001               	movlw	1
  6448  023C  00F1               	movwf	??_GPIO_PinWrite
  6449  023D  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6450  023E  2A41               	goto	u2254
  6451  023F                     u2255:	
  6452  023F  1003               	clrc
  6453  0240  0DF1               	rlf	??_GPIO_PinWrite,f
  6454  0241                     u2254:	
  6455  0241  3EFF               	addlw	-1
  6456  0242  1D03               	skipz
  6457  0243  2A3F               	goto	u2255
  6458  0244  0871               	movf	??_GPIO_PinWrite,w
  6459  0245  00F2               	movwf	??_GPIO_PinWrite+1
  6460  0246  0872               	movf	??_GPIO_PinWrite+1,w
  6461  0247  1283               	bcf	3,5	;RP0=0, select bank0
  6462  0248  1303               	bcf	3,6	;RP1=0, select bank0
  6463  0249  0487               	iorwf	7,f	;volatile
  6464  024A  0008               	return
  6465  024B                     l1837:	
  6466  024B  3001               	movlw	1
  6467  024C  00F1               	movwf	??_GPIO_PinWrite
  6468  024D  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6469  024E  2A51               	goto	u2264
  6470  024F                     u2265:	
  6471  024F  1003               	clrc
  6472  0250  0DF1               	rlf	??_GPIO_PinWrite,f
  6473  0251                     u2264:	
  6474  0251  3EFF               	addlw	-1
  6475  0252  1D03               	skipz
  6476  0253  2A4F               	goto	u2265
  6477  0254  0871               	movf	??_GPIO_PinWrite,w
  6478  0255  3AFF               	xorlw	255
  6479  0256  00F2               	movwf	??_GPIO_PinWrite+1
  6480  0257  0872               	movf	??_GPIO_PinWrite+1,w
  6481  0258  1283               	bcf	3,5	;RP0=0, select bank0
  6482  0259  1303               	bcf	3,6	;RP1=0, select bank0
  6483  025A  0587               	andwf	7,f	;volatile
  6484                           
  6485                           ;gpio.c: 155: break;
  6486  025B  0008               	return
  6487  025C                     l1839:	
  6488                           ;gpio.c: 159: case 3:
  6489                           
  6490                           
  6491                           ;gpio.c: 160: ((var_pinValue_u8)? ((PORTD) |= (1<<(enm_pinNumber))): ((PORTD) &= ~(1<<(e
      +                          nm_pinNumber))));
  6492  025C  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  6493  025D  1903               	btfsc	3,2
  6494  025E  2A6F               	goto	l1843
  6495  025F  3001               	movlw	1
  6496  0260  00F1               	movwf	??_GPIO_PinWrite
  6497  0261  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6498  0262  2A65               	goto	u2284
  6499  0263                     u2285:	
  6500  0263  1003               	clrc
  6501  0264  0DF1               	rlf	??_GPIO_PinWrite,f
  6502  0265                     u2284:	
  6503  0265  3EFF               	addlw	-1
  6504  0266  1D03               	skipz
  6505  0267  2A63               	goto	u2285
  6506  0268  0871               	movf	??_GPIO_PinWrite,w
  6507  0269  00F2               	movwf	??_GPIO_PinWrite+1
  6508  026A  0872               	movf	??_GPIO_PinWrite+1,w
  6509  026B  1283               	bcf	3,5	;RP0=0, select bank0
  6510  026C  1303               	bcf	3,6	;RP1=0, select bank0
  6511  026D  0488               	iorwf	8,f	;volatile
  6512  026E  0008               	return
  6513  026F                     l1843:	
  6514  026F  3001               	movlw	1
  6515  0270  00F1               	movwf	??_GPIO_PinWrite
  6516  0271  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6517  0272  2A75               	goto	u2294
  6518  0273                     u2295:	
  6519  0273  1003               	clrc
  6520  0274  0DF1               	rlf	??_GPIO_PinWrite,f
  6521  0275                     u2294:	
  6522  0275  3EFF               	addlw	-1
  6523  0276  1D03               	skipz
  6524  0277  2A73               	goto	u2295
  6525  0278  0871               	movf	??_GPIO_PinWrite,w
  6526  0279  3AFF               	xorlw	255
  6527  027A  00F2               	movwf	??_GPIO_PinWrite+1
  6528  027B  0872               	movf	??_GPIO_PinWrite+1,w
  6529  027C  1283               	bcf	3,5	;RP0=0, select bank0
  6530  027D  1303               	bcf	3,6	;RP1=0, select bank0
  6531  027E  0588               	andwf	8,f	;volatile
  6532                           
  6533                           ;gpio.c: 161: break;
  6534  027F  0008               	return
  6535  0280                     l1845:	
  6536                           ;gpio.c: 165: case 4:
  6537                           
  6538                           
  6539                           ;gpio.c: 166: ((var_pinValue_u8)? ((PORTE) |= (1<<(enm_pinNumber))): ((PORTE) &= ~(1<<(e
      +                          nm_pinNumber))));
  6540  0280  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  6541  0281  1903               	btfsc	3,2
  6542  0282  2A93               	goto	l1849
  6543  0283  3001               	movlw	1
  6544  0284  00F1               	movwf	??_GPIO_PinWrite
  6545  0285  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6546  0286  2A89               	goto	u2314
  6547  0287                     u2315:	
  6548  0287  1003               	clrc
  6549  0288  0DF1               	rlf	??_GPIO_PinWrite,f
  6550  0289                     u2314:	
  6551  0289  3EFF               	addlw	-1
  6552  028A  1D03               	skipz
  6553  028B  2A87               	goto	u2315
  6554  028C  0871               	movf	??_GPIO_PinWrite,w
  6555  028D  00F2               	movwf	??_GPIO_PinWrite+1
  6556  028E  0872               	movf	??_GPIO_PinWrite+1,w
  6557  028F  1283               	bcf	3,5	;RP0=0, select bank0
  6558  0290  1303               	bcf	3,6	;RP1=0, select bank0
  6559  0291  0489               	iorwf	9,f	;volatile
  6560  0292  0008               	return
  6561  0293                     l1849:	
  6562  0293  3001               	movlw	1
  6563  0294  00F1               	movwf	??_GPIO_PinWrite
  6564  0295  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6565  0296  2A99               	goto	u2324
  6566  0297                     u2325:	
  6567  0297  1003               	clrc
  6568  0298  0DF1               	rlf	??_GPIO_PinWrite,f
  6569  0299                     u2324:	
  6570  0299  3EFF               	addlw	-1
  6571  029A  1D03               	skipz
  6572  029B  2A97               	goto	u2325
  6573  029C  0871               	movf	??_GPIO_PinWrite,w
  6574  029D  3AFF               	xorlw	255
  6575  029E  00F2               	movwf	??_GPIO_PinWrite+1
  6576  029F  0872               	movf	??_GPIO_PinWrite+1,w
  6577  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  6578  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  6579  02A2  0589               	andwf	9,f	;volatile
  6580                           
  6581                           ;gpio.c: 169: }
  6582                           
  6583                           ;gpio.c: 167: break;
  6584  02A3  0008               	return
  6585  02A4                     l1853:	
  6586  02A4  0873               	movf	GPIO_PinWrite@var_portNumber_u8,w
  6587                           
  6588                           ; Switch size 1, requested type "space"
  6589                           ; Number of cases is 5, Range of values is 0 to 4
  6590                           ; switch strategies available:
  6591                           ; Name         Instructions Cycles
  6592                           ; simple_byte           16     9 (average)
  6593                           ; direct_byte           23     8 (fixed)
  6594                           ; jumptable            260     6 (fixed)
  6595                           ;	Chosen strategy is simple_byte
  6596  02A5  3A00               	xorlw	0	; case 0
  6597  02A6  1903               	skipnz
  6598  02A7  29F0               	goto	l1821
  6599  02A8  3A01               	xorlw	1	; case 1
  6600  02A9  1903               	skipnz
  6601  02AA  2A14               	goto	l1827
  6602  02AB  3A03               	xorlw	3	; case 2
  6603  02AC  1903               	skipnz
  6604  02AD  2A38               	goto	l1833
  6605  02AE  3A01               	xorlw	1	; case 3
  6606  02AF  1903               	skipnz
  6607  02B0  2A5C               	goto	l1839
  6608  02B1  3A07               	xorlw	7	; case 4
  6609  02B2  1903               	skipnz
  6610  02B3  2A80               	goto	l1845
  6611  02B4  2AB5               	goto	l92
  6612  02B5                     l92:	
  6613  02B5  0008               	return
  6614  02B6                     __end_of_GPIO_PinWrite:	
  6615                           
  6616                           	psect	text39
  6617  0C82                     __ptext39:	
  6618 ;; *************** function _GPIO_PinRead *****************
  6619 ;; Defined at:
  6620 ;;		line 192 in file "../00-libfiles/gpio.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;  enm_pinNumbe    1    wreg     enum E1088
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  6625 ;;  returnStatus    1    3[COMMON] unsigned char 
  6626 ;;  var_portNumb    1    2[COMMON] unsigned char 
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  1    wreg      unsigned char 
  6629 ;; Registers used:
  6630 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6636 ;;      Params:         0       0       0       0       0
  6637 ;;      Locals:         3       0       0       0       0
  6638 ;;      Temps:          2       0       0       0       0
  6639 ;;      Totals:         5       0       0       0       0
  6640 ;;Total ram usage:        5 bytes
  6641 ;; Hardware stack levels used:    1
  6642 ;; This function calls:
  6643 ;;		Nothing
  6644 ;; This function is called by:
  6645 ;;		_lcd_BusyCheck
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           
  6650                           ;psect for function _GPIO_PinRead
  6651  0C82                     _GPIO_PinRead:	
  6652                           
  6653                           ;incstack = 0
  6654                           ; Regs used in _GPIO_PinRead: [wreg-fsr0h+status,2+status,0]
  6655                           ;GPIO_PinRead@enm_pinNumber stored from wreg
  6656  0C82  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  6657                           
  6658                           ;gpio.c: 194: uint8_t var_portNumber_u8;
  6659                           ;gpio.c: 195: uint8_t returnStatus = 0;
  6660  0C83  01F3               	clrf	GPIO_PinRead@returnStatus
  6661                           
  6662                           ;gpio.c: 197: var_portNumber_u8 = (enm_pinNumber>>3);
  6663  0C84  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  6664  0C85  00F0               	movwf	??_GPIO_PinRead
  6665  0C86  3003               	movlw	3
  6666  0C87                     u2335:	
  6667  0C87  1003               	clrc
  6668  0C88  0CF0               	rrf	??_GPIO_PinRead,f
  6669  0C89  3EFF               	addlw	-1
  6670  0C8A  1D03               	skipz
  6671  0C8B  2C87               	goto	u2335
  6672  0C8C  0870               	movf	??_GPIO_PinRead,w
  6673  0C8D  00F1               	movwf	??_GPIO_PinRead+1
  6674  0C8E  0871               	movf	??_GPIO_PinRead+1,w
  6675  0C8F  00F2               	movwf	GPIO_PinRead@var_portNumber_u8
  6676                           
  6677                           ;gpio.c: 198: enm_pinNumber = enm_pinNumber & 0x07;
  6678  0C90  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  6679  0C91  3907               	andlw	7
  6680  0C92  00F0               	movwf	??_GPIO_PinRead
  6681  0C93  0870               	movf	??_GPIO_PinRead,w
  6682  0C94  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  6683                           
  6684                           ;gpio.c: 201: switch(var_portNumber_u8)
  6685  0C95  2CE4               	goto	l1873
  6686  0C96                     l1861:	
  6687                           ;gpio.c: 202: {
  6688                           ;gpio.c: 204: case 0:
  6689                           
  6690                           
  6691                           ;gpio.c: 205: returnStatus = (((PORTA)&((1<<(enm_pinNumber))))!=0u);
  6692  0C96  3001               	movlw	1
  6693  0C97  00F0               	movwf	??_GPIO_PinRead
  6694  0C98  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6695  0C99  2C9C               	goto	u2344
  6696  0C9A                     u2345:	
  6697  0C9A  1003               	clrc
  6698  0C9B  0DF0               	rlf	??_GPIO_PinRead,f
  6699  0C9C                     u2344:	
  6700  0C9C  3EFF               	addlw	-1
  6701  0C9D  1D03               	skipz
  6702  0C9E  2C9A               	goto	u2345
  6703  0C9F  0870               	movf	??_GPIO_PinRead,w
  6704  0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  6705  0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  6706  0CA2  0505               	andwf	5,w	;volatile
  6707  0CA3  2CDB               	goto	L7
  6708  0CA4                     l1863:	
  6709                           ;gpio.c: 209: case 1:
  6710                           
  6711                           ;gpio.c: 206: break;
  6712                           
  6713                           
  6714                           ;gpio.c: 210: returnStatus = (((PORTB)&((1<<(enm_pinNumber))))!=0u);
  6715  0CA4  3001               	movlw	1
  6716  0CA5  00F0               	movwf	??_GPIO_PinRead
  6717  0CA6  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6718  0CA7  2CAA               	goto	u2374
  6719  0CA8                     u2375:	
  6720  0CA8  1003               	clrc
  6721  0CA9  0DF0               	rlf	??_GPIO_PinRead,f
  6722  0CAA                     u2374:	
  6723  0CAA  3EFF               	addlw	-1
  6724  0CAB  1D03               	skipz
  6725  0CAC  2CA8               	goto	u2375
  6726  0CAD  0870               	movf	??_GPIO_PinRead,w
  6727  0CAE  1283               	bcf	3,5	;RP0=0, select bank0
  6728  0CAF  1303               	bcf	3,6	;RP1=0, select bank0
  6729  0CB0  0506               	andwf	6,w	;volatile
  6730  0CB1  2CDB               	goto	L7
  6731  0CB2                     l1865:	
  6732                           ;gpio.c: 214: case 2:
  6733                           
  6734                           ;gpio.c: 211: break;
  6735                           
  6736                           
  6737                           ;gpio.c: 215: returnStatus = (((PORTC)&((1<<(enm_pinNumber))))!=0u);
  6738  0CB2  3001               	movlw	1
  6739  0CB3  00F0               	movwf	??_GPIO_PinRead
  6740  0CB4  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6741  0CB5  2CB8               	goto	u2404
  6742  0CB6                     u2405:	
  6743  0CB6  1003               	clrc
  6744  0CB7  0DF0               	rlf	??_GPIO_PinRead,f
  6745  0CB8                     u2404:	
  6746  0CB8  3EFF               	addlw	-1
  6747  0CB9  1D03               	skipz
  6748  0CBA  2CB6               	goto	u2405
  6749  0CBB  0870               	movf	??_GPIO_PinRead,w
  6750  0CBC  1283               	bcf	3,5	;RP0=0, select bank0
  6751  0CBD  1303               	bcf	3,6	;RP1=0, select bank0
  6752  0CBE  0507               	andwf	7,w	;volatile
  6753  0CBF  2CDB               	goto	L7
  6754  0CC0                     l1867:	
  6755                           ;gpio.c: 220: case 3:
  6756                           
  6757                           ;gpio.c: 216: break;
  6758                           
  6759                           
  6760                           ;gpio.c: 221: returnStatus = (((PORTD)&((1<<(enm_pinNumber))))!=0u);
  6761  0CC0  3001               	movlw	1
  6762  0CC1  00F0               	movwf	??_GPIO_PinRead
  6763  0CC2  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6764  0CC3  2CC6               	goto	u2434
  6765  0CC4                     u2435:	
  6766  0CC4  1003               	clrc
  6767  0CC5  0DF0               	rlf	??_GPIO_PinRead,f
  6768  0CC6                     u2434:	
  6769  0CC6  3EFF               	addlw	-1
  6770  0CC7  1D03               	skipz
  6771  0CC8  2CC4               	goto	u2435
  6772  0CC9  0870               	movf	??_GPIO_PinRead,w
  6773  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  6774  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  6775  0CCC  0508               	andwf	8,w	;volatile
  6776  0CCD  2CDB               	goto	L7
  6777  0CCE                     l1869:	
  6778                           ;gpio.c: 226: case 4:
  6779                           
  6780                           ;gpio.c: 222: break;
  6781                           
  6782                           
  6783                           ;gpio.c: 227: returnStatus = (((PORTE)&((1<<(enm_pinNumber))))!=0u);
  6784  0CCE  3001               	movlw	1
  6785  0CCF  00F0               	movwf	??_GPIO_PinRead
  6786  0CD0  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6787  0CD1  2CD4               	goto	u2464
  6788  0CD2                     u2465:	
  6789  0CD2  1003               	clrc
  6790  0CD3  0DF0               	rlf	??_GPIO_PinRead,f
  6791  0CD4                     u2464:	
  6792  0CD4  3EFF               	addlw	-1
  6793  0CD5  1D03               	skipz
  6794  0CD6  2CD2               	goto	u2465
  6795  0CD7  0870               	movf	??_GPIO_PinRead,w
  6796  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  6797  0CD9  1303               	bcf	3,6	;RP1=0, select bank0
  6798  0CDA  0509               	andwf	9,w	;volatile
  6799  0CDB                     L7:	
  6800  0CDB  1903               	btfsc	3,2
  6801  0CDC  2CDF               	goto	u2470
  6802  0CDD  3001               	movlw	1
  6803  0CDE  2CE0               	goto	u2480
  6804  0CDF                     u2470:	
  6805  0CDF  3000               	movlw	0
  6806  0CE0                     u2480:	
  6807  0CE0  00F1               	movwf	??_GPIO_PinRead+1
  6808  0CE1  0871               	movf	??_GPIO_PinRead+1,w
  6809  0CE2  00F3               	movwf	GPIO_PinRead@returnStatus
  6810                           
  6811                           ;gpio.c: 229: }
  6812                           
  6813                           ;gpio.c: 228: break;
  6814  0CE3  2CF5               	goto	l1875
  6815  0CE4                     l1873:	
  6816  0CE4  0872               	movf	GPIO_PinRead@var_portNumber_u8,w
  6817                           
  6818                           ; Switch size 1, requested type "space"
  6819                           ; Number of cases is 5, Range of values is 0 to 4
  6820                           ; switch strategies available:
  6821                           ; Name         Instructions Cycles
  6822                           ; simple_byte           16     9 (average)
  6823                           ; direct_byte           23     8 (fixed)
  6824                           ; jumptable            260     6 (fixed)
  6825                           ;	Chosen strategy is simple_byte
  6826  0CE5  3A00               	xorlw	0	; case 0
  6827  0CE6  1903               	skipnz
  6828  0CE7  2C96               	goto	l1861
  6829  0CE8  3A01               	xorlw	1	; case 1
  6830  0CE9  1903               	skipnz
  6831  0CEA  2CA4               	goto	l1863
  6832  0CEB  3A03               	xorlw	3	; case 2
  6833  0CEC  1903               	skipnz
  6834  0CED  2CB2               	goto	l1865
  6835  0CEE  3A01               	xorlw	1	; case 3
  6836  0CEF  1903               	skipnz
  6837  0CF0  2CC0               	goto	l1867
  6838  0CF1  3A07               	xorlw	7	; case 4
  6839  0CF2  1903               	skipnz
  6840  0CF3  2CCE               	goto	l1869
  6841  0CF4  2CF5               	goto	l1875
  6842  0CF5                     l1875:	
  6843                           
  6844                           ;gpio.c: 230: return returnStatus;
  6845  0CF5  0873               	movf	GPIO_PinRead@returnStatus,w
  6846  0CF6  0008               	return
  6847  0CF7                     __end_of_GPIO_PinRead:	
  6848                           
  6849                           	psect	text40
  6850  0104                     __ptext40:	
  6851 ;; *************** function _GPIO_PinDirection *****************
  6852 ;; Defined at:
  6853 ;;		line 60 in file "../00-libfiles/gpio.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  enm_pinNumbe    1    wreg     enum E1088
  6856 ;;  var_pinDirn_    1    0[COMMON] unsigned char 
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  6859 ;;  var_portNumb    1    3[COMMON] unsigned char 
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  1    wreg      void 
  6862 ;; Registers used:
  6863 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6869 ;;      Params:         1       0       0       0       0
  6870 ;;      Locals:         2       0       0       0       0
  6871 ;;      Temps:          2       0       0       0       0
  6872 ;;      Totals:         5       0       0       0       0
  6873 ;;Total ram usage:        5 bytes
  6874 ;; Hardware stack levels used:    1
  6875 ;; This function calls:
  6876 ;;		Nothing
  6877 ;; This function is called by:
  6878 ;;		_LCD_SetUp
  6879 ;;		_lcd_BusyCheck
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           
  6884                           ;psect for function _GPIO_PinDirection
  6885  0104                     _GPIO_PinDirection:	
  6886                           
  6887                           ;incstack = 0
  6888                           ; Regs used in _GPIO_PinDirection: [wreg-fsr0h+status,2+status,0]
  6889                           ;GPIO_PinDirection@enm_pinNumber stored from wreg
  6890  0104  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  6891                           
  6892                           ;gpio.c: 63: uint8_t var_portNumber_u8;
  6893                           ;gpio.c: 66: var_portNumber_u8 = (enm_pinNumber>>3);
  6894  0105  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  6895  0106  00F1               	movwf	??_GPIO_PinDirection
  6896  0107  3003               	movlw	3
  6897  0108                     u2015:	
  6898  0108  1003               	clrc
  6899  0109  0CF1               	rrf	??_GPIO_PinDirection,f
  6900  010A  3EFF               	addlw	-1
  6901  010B  1D03               	skipz
  6902  010C  2908               	goto	u2015
  6903  010D  0871               	movf	??_GPIO_PinDirection,w
  6904  010E  00F2               	movwf	??_GPIO_PinDirection+1
  6905  010F  0872               	movf	??_GPIO_PinDirection+1,w
  6906  0110  00F3               	movwf	GPIO_PinDirection@var_portNumber_u8
  6907                           
  6908                           ;gpio.c: 67: enm_pinNumber = enm_pinNumber & 0x07;
  6909  0111  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  6910  0112  3907               	andlw	7
  6911  0113  00F1               	movwf	??_GPIO_PinDirection
  6912  0114  0871               	movf	??_GPIO_PinDirection,w
  6913  0115  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  6914                           
  6915                           ;gpio.c: 71: switch(var_portNumber_u8)
  6916  0116  29CB               	goto	l1815
  6917  0117                     l1783:	
  6918                           ;gpio.c: 72: {
  6919                           ;gpio.c: 74: case 0:
  6920                           
  6921                           
  6922                           ;gpio.c: 75: ((var_pinDirn_u8)? ((TRISA) |= (1<<(enm_pinNumber))): ((TRISA) &= ~(1<<(enm
      +                          _pinNumber))));
  6923  0117  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  6924  0118  1903               	btfsc	3,2
  6925  0119  292A               	goto	l1787
  6926  011A  3001               	movlw	1
  6927  011B  00F1               	movwf	??_GPIO_PinDirection
  6928  011C  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6929  011D  2920               	goto	u2034
  6930  011E                     u2035:	
  6931  011E  1003               	clrc
  6932  011F  0DF1               	rlf	??_GPIO_PinDirection,f
  6933  0120                     u2034:	
  6934  0120  3EFF               	addlw	-1
  6935  0121  1D03               	skipz
  6936  0122  291E               	goto	u2035
  6937  0123  0871               	movf	??_GPIO_PinDirection,w
  6938  0124  00F2               	movwf	??_GPIO_PinDirection+1
  6939  0125  0872               	movf	??_GPIO_PinDirection+1,w
  6940  0126  1683               	bsf	3,5	;RP0=1, select bank1
  6941  0127  1303               	bcf	3,6	;RP1=0, select bank1
  6942  0128  0485               	iorwf	5,f	;volatile
  6943  0129  0008               	return
  6944  012A                     l1787:	
  6945  012A  3001               	movlw	1
  6946  012B  00F1               	movwf	??_GPIO_PinDirection
  6947  012C  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6948  012D  2930               	goto	u2044
  6949  012E                     u2045:	
  6950  012E  1003               	clrc
  6951  012F  0DF1               	rlf	??_GPIO_PinDirection,f
  6952  0130                     u2044:	
  6953  0130  3EFF               	addlw	-1
  6954  0131  1D03               	skipz
  6955  0132  292E               	goto	u2045
  6956  0133  0871               	movf	??_GPIO_PinDirection,w
  6957  0134  3AFF               	xorlw	255
  6958  0135  00F2               	movwf	??_GPIO_PinDirection+1
  6959  0136  0872               	movf	??_GPIO_PinDirection+1,w
  6960  0137  1683               	bsf	3,5	;RP0=1, select bank1
  6961  0138  1303               	bcf	3,6	;RP1=0, select bank1
  6962  0139  0585               	andwf	5,f	;volatile
  6963                           
  6964                           ;gpio.c: 76: break;
  6965  013A  0008               	return
  6966  013B                     l1789:	
  6967                           ;gpio.c: 80: case 1:
  6968                           
  6969                           
  6970                           ;gpio.c: 81: ((var_pinDirn_u8)? ((TRISB) |= (1<<(enm_pinNumber))): ((TRISB) &= ~(1<<(enm
      +                          _pinNumber))));
  6971  013B  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  6972  013C  1903               	btfsc	3,2
  6973  013D  294E               	goto	l1793
  6974  013E  3001               	movlw	1
  6975  013F  00F1               	movwf	??_GPIO_PinDirection
  6976  0140  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6977  0141  2944               	goto	u2064
  6978  0142                     u2065:	
  6979  0142  1003               	clrc
  6980  0143  0DF1               	rlf	??_GPIO_PinDirection,f
  6981  0144                     u2064:	
  6982  0144  3EFF               	addlw	-1
  6983  0145  1D03               	skipz
  6984  0146  2942               	goto	u2065
  6985  0147  0871               	movf	??_GPIO_PinDirection,w
  6986  0148  00F2               	movwf	??_GPIO_PinDirection+1
  6987  0149  0872               	movf	??_GPIO_PinDirection+1,w
  6988  014A  1683               	bsf	3,5	;RP0=1, select bank1
  6989  014B  1303               	bcf	3,6	;RP1=0, select bank1
  6990  014C  0486               	iorwf	6,f	;volatile
  6991  014D  0008               	return
  6992  014E                     l1793:	
  6993  014E  3001               	movlw	1
  6994  014F  00F1               	movwf	??_GPIO_PinDirection
  6995  0150  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6996  0151  2954               	goto	u2074
  6997  0152                     u2075:	
  6998  0152  1003               	clrc
  6999  0153  0DF1               	rlf	??_GPIO_PinDirection,f
  7000  0154                     u2074:	
  7001  0154  3EFF               	addlw	-1
  7002  0155  1D03               	skipz
  7003  0156  2952               	goto	u2075
  7004  0157  0871               	movf	??_GPIO_PinDirection,w
  7005  0158  3AFF               	xorlw	255
  7006  0159  00F2               	movwf	??_GPIO_PinDirection+1
  7007  015A  0872               	movf	??_GPIO_PinDirection+1,w
  7008  015B  1683               	bsf	3,5	;RP0=1, select bank1
  7009  015C  1303               	bcf	3,6	;RP1=0, select bank1
  7010  015D  0586               	andwf	6,f	;volatile
  7011                           
  7012                           ;gpio.c: 82: break;
  7013  015E  0008               	return
  7014  015F                     l1795:	
  7015                           ;gpio.c: 86: case 2:
  7016                           
  7017                           
  7018                           ;gpio.c: 87: ((var_pinDirn_u8)? ((TRISC) |= (1<<(enm_pinNumber))): ((TRISC) &= ~(1<<(enm
      +                          _pinNumber))));
  7019  015F  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  7020  0160  1903               	btfsc	3,2
  7021  0161  2972               	goto	l1799
  7022  0162  3001               	movlw	1
  7023  0163  00F1               	movwf	??_GPIO_PinDirection
  7024  0164  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  7025  0165  2968               	goto	u2094
  7026  0166                     u2095:	
  7027  0166  1003               	clrc
  7028  0167  0DF1               	rlf	??_GPIO_PinDirection,f
  7029  0168                     u2094:	
  7030  0168  3EFF               	addlw	-1
  7031  0169  1D03               	skipz
  7032  016A  2966               	goto	u2095
  7033  016B  0871               	movf	??_GPIO_PinDirection,w
  7034  016C  00F2               	movwf	??_GPIO_PinDirection+1
  7035  016D  0872               	movf	??_GPIO_PinDirection+1,w
  7036  016E  1683               	bsf	3,5	;RP0=1, select bank1
  7037  016F  1303               	bcf	3,6	;RP1=0, select bank1
  7038  0170  0487               	iorwf	7,f	;volatile
  7039  0171  0008               	return
  7040  0172                     l1799:	
  7041  0172  3001               	movlw	1
  7042  0173  00F1               	movwf	??_GPIO_PinDirection
  7043  0174  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  7044  0175  2978               	goto	u2104
  7045  0176                     u2105:	
  7046  0176  1003               	clrc
  7047  0177  0DF1               	rlf	??_GPIO_PinDirection,f
  7048  0178                     u2104:	
  7049  0178  3EFF               	addlw	-1
  7050  0179  1D03               	skipz
  7051  017A  2976               	goto	u2105
  7052  017B  0871               	movf	??_GPIO_PinDirection,w
  7053  017C  3AFF               	xorlw	255
  7054  017D  00F2               	movwf	??_GPIO_PinDirection+1
  7055  017E  0872               	movf	??_GPIO_PinDirection+1,w
  7056  017F  1683               	bsf	3,5	;RP0=1, select bank1
  7057  0180  1303               	bcf	3,6	;RP1=0, select bank1
  7058  0181  0587               	andwf	7,f	;volatile
  7059                           
  7060                           ;gpio.c: 88: break;
  7061  0182  0008               	return
  7062  0183                     l1801:	
  7063                           ;gpio.c: 92: case 3:
  7064                           
  7065                           
  7066                           ;gpio.c: 93: ((var_pinDirn_u8)? ((TRISD) |= (1<<(enm_pinNumber))): ((TRISD) &= ~(1<<(enm
      +                          _pinNumber))));
  7067  0183  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  7068  0184  1903               	btfsc	3,2
  7069  0185  2996               	goto	l1805
  7070  0186  3001               	movlw	1
  7071  0187  00F1               	movwf	??_GPIO_PinDirection
  7072  0188  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  7073  0189  298C               	goto	u2124
  7074  018A                     u2125:	
  7075  018A  1003               	clrc
  7076  018B  0DF1               	rlf	??_GPIO_PinDirection,f
  7077  018C                     u2124:	
  7078  018C  3EFF               	addlw	-1
  7079  018D  1D03               	skipz
  7080  018E  298A               	goto	u2125
  7081  018F  0871               	movf	??_GPIO_PinDirection,w
  7082  0190  00F2               	movwf	??_GPIO_PinDirection+1
  7083  0191  0872               	movf	??_GPIO_PinDirection+1,w
  7084  0192  1683               	bsf	3,5	;RP0=1, select bank1
  7085  0193  1303               	bcf	3,6	;RP1=0, select bank1
  7086  0194  0488               	iorwf	8,f	;volatile
  7087  0195  0008               	return
  7088  0196                     l1805:	
  7089  0196  3001               	movlw	1
  7090  0197  00F1               	movwf	??_GPIO_PinDirection
  7091  0198  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  7092  0199  299C               	goto	u2134
  7093  019A                     u2135:	
  7094  019A  1003               	clrc
  7095  019B  0DF1               	rlf	??_GPIO_PinDirection,f
  7096  019C                     u2134:	
  7097  019C  3EFF               	addlw	-1
  7098  019D  1D03               	skipz
  7099  019E  299A               	goto	u2135
  7100  019F  0871               	movf	??_GPIO_PinDirection,w
  7101  01A0  3AFF               	xorlw	255
  7102  01A1  00F2               	movwf	??_GPIO_PinDirection+1
  7103  01A2  0872               	movf	??_GPIO_PinDirection+1,w
  7104  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  7105  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  7106  01A5  0588               	andwf	8,f	;volatile
  7107                           
  7108                           ;gpio.c: 94: break;
  7109  01A6  0008               	return
  7110  01A7                     l1807:	
  7111                           ;gpio.c: 97: case 4:
  7112                           
  7113                           
  7114                           ;gpio.c: 98: ((var_pinDirn_u8)? ((TRISE) |= (1<<(enm_pinNumber))): ((TRISE) &= ~(1<<(enm
      +                          _pinNumber))));
  7115  01A7  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  7116  01A8  1903               	btfsc	3,2
  7117  01A9  29BA               	goto	l1811
  7118  01AA  3001               	movlw	1
  7119  01AB  00F1               	movwf	??_GPIO_PinDirection
  7120  01AC  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  7121  01AD  29B0               	goto	u2154
  7122  01AE                     u2155:	
  7123  01AE  1003               	clrc
  7124  01AF  0DF1               	rlf	??_GPIO_PinDirection,f
  7125  01B0                     u2154:	
  7126  01B0  3EFF               	addlw	-1
  7127  01B1  1D03               	skipz
  7128  01B2  29AE               	goto	u2155
  7129  01B3  0871               	movf	??_GPIO_PinDirection,w
  7130  01B4  00F2               	movwf	??_GPIO_PinDirection+1
  7131  01B5  0872               	movf	??_GPIO_PinDirection+1,w
  7132  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  7133  01B7  1303               	bcf	3,6	;RP1=0, select bank1
  7134  01B8  0489               	iorwf	9,f	;volatile
  7135  01B9  0008               	return
  7136  01BA                     l1811:	
  7137  01BA  3001               	movlw	1
  7138  01BB  00F1               	movwf	??_GPIO_PinDirection
  7139  01BC  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  7140  01BD  29C0               	goto	u2164
  7141  01BE                     u2165:	
  7142  01BE  1003               	clrc
  7143  01BF  0DF1               	rlf	??_GPIO_PinDirection,f
  7144  01C0                     u2164:	
  7145  01C0  3EFF               	addlw	-1
  7146  01C1  1D03               	skipz
  7147  01C2  29BE               	goto	u2165
  7148  01C3  0871               	movf	??_GPIO_PinDirection,w
  7149  01C4  3AFF               	xorlw	255
  7150  01C5  00F2               	movwf	??_GPIO_PinDirection+1
  7151  01C6  0872               	movf	??_GPIO_PinDirection+1,w
  7152  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  7153  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  7154  01C9  0589               	andwf	9,f	;volatile
  7155                           
  7156                           ;gpio.c: 101: }
  7157                           
  7158                           ;gpio.c: 99: break;
  7159  01CA  0008               	return
  7160  01CB                     l1815:	
  7161  01CB  0873               	movf	GPIO_PinDirection@var_portNumber_u8,w
  7162                           
  7163                           ; Switch size 1, requested type "space"
  7164                           ; Number of cases is 5, Range of values is 0 to 4
  7165                           ; switch strategies available:
  7166                           ; Name         Instructions Cycles
  7167                           ; simple_byte           16     9 (average)
  7168                           ; direct_byte           23     8 (fixed)
  7169                           ; jumptable            260     6 (fixed)
  7170                           ;	Chosen strategy is simple_byte
  7171  01CC  3A00               	xorlw	0	; case 0
  7172  01CD  1903               	skipnz
  7173  01CE  2917               	goto	l1783
  7174  01CF  3A01               	xorlw	1	; case 1
  7175  01D0  1903               	skipnz
  7176  01D1  293B               	goto	l1789
  7177  01D2  3A03               	xorlw	3	; case 2
  7178  01D3  1903               	skipnz
  7179  01D4  295F               	goto	l1795
  7180  01D5  3A01               	xorlw	1	; case 3
  7181  01D6  1903               	skipnz
  7182  01D7  2983               	goto	l1801
  7183  01D8  3A07               	xorlw	7	; case 4
  7184  01D9  1903               	skipnz
  7185  01DA  29A7               	goto	l1807
  7186  01DB  29DC               	goto	l62
  7187  01DC                     l62:	
  7188  01DC  0008               	return
  7189  01DD                     __end_of_GPIO_PinDirection:	
  7190                           
  7191                           	psect	text41
  7192  08BF                     __ptext41:	
  7193 ;; *************** function _DELAY_ms *****************
  7194 ;; Defined at:
  7195 ;;		line 75 in file "../00-libfiles/delay.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;  ms_count        2    2[COMMON] unsigned int 
  7198 ;; Auto vars:     Size  Location     Type
  7199 ;;		None
  7200 ;; Return value:  Size  Location     Type
  7201 ;;                  1    wreg      void 
  7202 ;; Registers used:
  7203 ;;		wreg, status,2, status,0, pclath, cstack
  7204 ;; Tracked objects:
  7205 ;;		On entry : 0/0
  7206 ;;		On exit  : 0/0
  7207 ;;		Unchanged: 0/0
  7208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7209 ;;      Params:         2       0       0       0       0
  7210 ;;      Locals:         0       0       0       0       0
  7211 ;;      Temps:          0       0       0       0       0
  7212 ;;      Totals:         2       0       0       0       0
  7213 ;;Total ram usage:        2 bytes
  7214 ;; Hardware stack levels used:    1
  7215 ;; Hardware stack levels required when called:    1
  7216 ;; This function calls:
  7217 ;;		_DELAY_us
  7218 ;; This function is called by:
  7219 ;;		_LCD_Init
  7220 ;;		_lcd_BusyCheck
  7221 ;;		_lcd_Reset
  7222 ;;		_LCD_ScrollMessage
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           
  7227                           ;psect for function _DELAY_ms
  7228  08BF                     _DELAY_ms:	
  7229  08BF                     l1777:	
  7230                           ;delay.c: 77: while (ms_count != 0)
  7231                           
  7232                           ;incstack = 0
  7233                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  7234                           
  7235  08BF  0872               	movf	DELAY_ms@ms_count,w
  7236  08C0  0473               	iorwf	DELAY_ms@ms_count+1,w
  7237  08C1  1903               	btfsc	3,2
  7238  08C2  0008               	return
  7239                           
  7240                           ;delay.c: 78: {
  7241                           ;delay.c: 79: DELAY_us(300u);
  7242  08C3  302C               	movlw	44
  7243  08C4  00F0               	movwf	DELAY_us@us_count
  7244  08C5  3001               	movlw	1
  7245  08C6  00F1               	movwf	DELAY_us@us_count+1
  7246  08C7  120A  158A  2070  120A  158A  	fcall	_DELAY_us
  7247                           
  7248                           ;delay.c: 80: ms_count--;
  7249  08CC  3001               	movlw	1
  7250  08CD  02F2               	subwf	DELAY_ms@ms_count,f
  7251  08CE  3000               	movlw	0
  7252  08CF  1C03               	skipc
  7253  08D0  03F3               	decf	DELAY_ms@ms_count+1,f
  7254  08D1  02F3               	subwf	DELAY_ms@ms_count+1,f
  7255  08D2  28BF               	goto	l1777
  7256  08D3                     __end_of_DELAY_ms:	
  7257                           
  7258                           	psect	text42
  7259  0870                     __ptext42:	
  7260 ;; *************** function _DELAY_us *****************
  7261 ;; Defined at:
  7262 ;;		line 56 in file "../00-libfiles/delay.c"
  7263 ;; Parameters:    Size  Location     Type
  7264 ;;  us_count        2    0[COMMON] unsigned int 
  7265 ;; Auto vars:     Size  Location     Type
  7266 ;;		None
  7267 ;; Return value:  Size  Location     Type
  7268 ;;                  1    wreg      void 
  7269 ;; Registers used:
  7270 ;;		wreg, status,2, status,0
  7271 ;; Tracked objects:
  7272 ;;		On entry : 0/0
  7273 ;;		On exit  : 0/0
  7274 ;;		Unchanged: 0/0
  7275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7276 ;;      Params:         2       0       0       0       0
  7277 ;;      Locals:         0       0       0       0       0
  7278 ;;      Temps:          0       0       0       0       0
  7279 ;;      Totals:         2       0       0       0       0
  7280 ;;Total ram usage:        2 bytes
  7281 ;; Hardware stack levels used:    1
  7282 ;; This function calls:
  7283 ;;		Nothing
  7284 ;; This function is called by:
  7285 ;;		_DELAY_ms
  7286 ;;		_lcd_BusyCheck
  7287 ;;		_lcd_Reset
  7288 ;;		_lcd_SendCmdSignals
  7289 ;;		_lcd_SendDataSignals
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293                           
  7294                           ;psect for function _DELAY_us
  7295  0870                     _DELAY_us:	
  7296  0870                     l1769:	
  7297                           ;delay.c: 58: while (us_count != 0)
  7298                           
  7299                           ;incstack = 0
  7300                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  7301                           
  7302  0870  0870               	movf	DELAY_us@us_count,w
  7303  0871  0471               	iorwf	DELAY_us@us_count+1,w
  7304  0872  1903               	btfsc	3,2
  7305  0873  0008               	return
  7306                           
  7307                           ;delay.c: 59: {
  7308                           ;delay.c: 60: us_count--;
  7309  0874  3001               	movlw	1
  7310  0875  02F0               	subwf	DELAY_us@us_count,f
  7311  0876  3000               	movlw	0
  7312  0877  1C03               	skipc
  7313  0878  03F1               	decf	DELAY_us@us_count+1,f
  7314  0879  02F1               	subwf	DELAY_us@us_count+1,f
  7315  087A  2870               	goto	l1769
  7316  087B                     __end_of_DELAY_us:	
  7317  007E                     btemp	set	126	;btemp
  7318  007E                     wtemp	set	126
  7319  007E                     wtemp0	set	126
  7320  0080                     wtemp1	set	128
  7321  0082                     wtemp2	set	130
  7322  0084                     wtemp3	set	132
  7323  0086                     wtemp4	set	134
  7324  0088                     wtemp5	set	136
  7325  007F                     wtemp6	set	127
  7326  007E                     ttemp	set	126
  7327  007E                     ttemp0	set	126
  7328  0081                     ttemp1	set	129
  7329  0084                     ttemp2	set	132
  7330  0087                     ttemp3	set	135
  7331  007F                     ttemp4	set	127
  7332  007E                     ltemp	set	126
  7333  007E                     ltemp0	set	126
  7334  0082                     ltemp1	set	130
  7335  0086                     ltemp2	set	134
  7336  0080                     ltemp3	set	128


Data Sizes:
    Strings     36
    Constant    0
    Data        4
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     19      37
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    RTC_GetDateTime@rtc	PTR struct . size(1) Largest target is 7
		 -> main@rtc(BANK1[7]), 

    RTC_SetDateTime@rtc	PTR struct . size(1) Largest target is 7
		 -> main@rtc(BANK1[7]), 

    LCD_Printf@str	PTR unsigned char  size(1) Largest target is 0

    LCD_Printf@argList	PTR const unsigned char  size(1) Largest target is 36
		 -> STR_1(CODE[36]), 

    LCD_Printf@ptr	PTR const unsigned char  size(1) Largest target is 36
		 -> STR_1(CODE[36]), 

    LCD_Printf@argp	PTR void [1] size(1) Largest target is 1
		 -> ?_LCD_Printf(BANK0[1]), 

    LCD_DisplayString@ptr_stringPointer_u8	PTR const unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _RTC_SetDateTime->_I2C_Write
    _RTC_Init->_I2C_Write
    _RTC_GetDateTime->_I2C_Read
    _LCD_SetUp->_GPIO_PinDirection
    _LCD_Printf->_LCD_DisplayString
    _LCD_DisplayString->_LCD_DisplayChar
    _LCD_DisplayFloatNumber->___ftmul
    _LCD_DisplayFloatNumber->___lltoft
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftneg->___lltoft
    ___ftmul->___ftpack
    ___ftadd->___lltoft
    _LCD_DisplayNumber->___lldiv
    ___bmul->___lldiv
    _LCD_DisplayChar->_LCD_GoToNextLine
    _lcd_DataWrite->_lcd_BusyCheck
    _lcd_DataWrite->_lcd_SendHigherNibble
    _lcd_DataWrite->_lcd_SendLowerNibble
    _lcd_SendDataSignals->_GPIO_PinWrite
    _LCD_GoToNextLine->_LCD_CmdWrite
    _lcd_Reset->_lcd_SendHigherNibble
    _LCD_Clear->_LCD_GoToLine
    _LCD_GoToLine->_LCD_CmdWrite
    _LCD_CmdWrite->_lcd_BusyCheck
    _LCD_CmdWrite->_lcd_SendHigherNibble
    _LCD_CmdWrite->_lcd_SendLowerNibble
    _lcd_SendLowerNibble->_GPIO_PinWrite
    _lcd_SendHigherNibble->_GPIO_PinWrite
    _lcd_SendCmdSignals->_GPIO_PinWrite
    _lcd_BusyCheck->_GPIO_PinDirection
    _lcd_BusyCheck->_GPIO_PinRead
    _lcd_BusyCheck->_GPIO_PinWrite
    _DELAY_ms->_DELAY_us

Critical Paths under _main in BANK0

    _main->_LCD_Printf
    _LCD_Printf->_LCD_DisplayFloatNumber
    _LCD_DisplayFloatNumber->_LCD_DisplayNumber
    ___fttol->___ftmul
    ___ftadd->___ftneg
    _LCD_DisplayNumber->___bmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0  159001
                                              0 BANK1     19    19      0
                       _LCD_GoToLine
                           _LCD_Init
                         _LCD_Printf
                          _LCD_SetUp
                    _RTC_GetDateTime
                           _RTC_Init
                    _RTC_SetDateTime
 ---------------------------------------------------------------------------------
 (1) _RTC_SetDateTime                                      1     1      0     203
                                              1 COMMON     1     1      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_Init                                             0     0      0      22
                           _I2C_Init
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_GetDateTime                                      2     2      0     249
                                              3 COMMON     2     2      0
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                    _i2c_WaitForIdle
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      46
                                              0 COMMON     3     3      0
                            _i2c_Ack
                          _i2c_NoAck
                    _i2c_WaitForIdle
 ---------------------------------------------------------------------------------
 (3) _i2c_WaitForIdle                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_NoAck                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_SetUp                                           12     2     10    2189
                                              5 COMMON     2     2      0
                                              0 BANK0     10     0     10
                  _GPIO_PinDirection
 ---------------------------------------------------------------------------------
 (1) _LCD_Printf                                          35    23     12  110874
                                             43 BANK0     35    23     12
                    _LCD_DisplayChar
             _LCD_DisplayFloatNumber
                  _LCD_DisplayNumber
                  _LCD_DisplayString
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayString                                    2     2      0   19600
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                    _LCD_DisplayChar
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayFloatNumber                               8     5      3   48570
                                             35 BANK0      8     5      3
                    _LCD_DisplayChar
                  _LCD_DisplayNumber
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    1790
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     358
                                             10 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                              0 BANK0      3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2100
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2694
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayNumber                                   31    26      5   21814
                                              4 BANK0     31    26      5
                    _LCD_DisplayChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_DisplayChar                                      2     2      0   19528
                                             11 COMMON     2     2      0
                   _LCD_GoToNextLine
                      _lcd_DataWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_DataWrite                                        3     3      0    9731
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                _lcd_SendDataSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendDataSignals                                  0     0      0    2117
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _LCD_GoToNextLine                                     1     1      0    9731
                                             10 COMMON     1     1      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     2      1   35320
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                           _DELAY_ms
                          _LCD_Clear
                       _LCD_CmdWrite
                          _lcd_Reset
 ---------------------------------------------------------------------------------
 (2) _lcd_Reset                                            0     0      0    5110
                           _DELAY_ms
                           _DELAY_us
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0   19528
                       _LCD_CmdWrite
                       _LCD_GoToLine
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToLine                                         2     2      0    9797
                                             10 COMMON     2     2      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (5) _LCD_CmdWrite                                         3     3      0    9731
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendLowerNibble                                  2     2      0    1652
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (5) _lcd_SendHigherNibble                                 2     2      0    1652
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (6) _lcd_SendCmdSignals                                   0     0      0    2117
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (5) _lcd_BusyCheck                                        2     2      0    4221
                                              5 COMMON     2     2      0
                           _DELAY_ms
                           _DELAY_us
                  _GPIO_PinDirection
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (6) _GPIO_PinWrite                                        5     4      1    1564
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (6) _GPIO_PinRead                                         5     5      0     206
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinDirection                                    5     4      1    1087
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (6) _DELAY_ms                                             2     0      2     788
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (6) _DELAY_us                                             2     0      2     553
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_GoToLine
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
   _LCD_Init
     _DELAY_ms
       _DELAY_us
     _LCD_Clear
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
       _LCD_GoToLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
     _lcd_Reset
       _DELAY_ms
         _DELAY_us
       _DELAY_us
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
   _LCD_Printf
     _LCD_DisplayChar
       _LCD_GoToNextLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _lcd_DataWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendDataSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
     _LCD_DisplayFloatNumber
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _LCD_DisplayNumber
         _LCD_DisplayChar
           _LCD_GoToNextLine
             _LCD_CmdWrite
               _lcd_BusyCheck
                 _DELAY_ms
                   _DELAY_us
                 _DELAY_us
                 _GPIO_PinDirection
                 _GPIO_PinRead
                 _GPIO_PinWrite
               _lcd_SendCmdSignals
                 _DELAY_us
                 _GPIO_PinWrite
               _lcd_SendHigherNibble
                 _GPIO_PinWrite
               _lcd_SendLowerNibble
                 _GPIO_PinWrite
           _lcd_DataWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendDataSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       ___ftadd
         ___ftneg (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
     _LCD_DisplayNumber
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       ___bmul
         ___lldiv (ARG)
       ___lldiv
     _LCD_DisplayString
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     ___bmul
       ___lldiv (ARG)
   _LCD_SetUp
     _GPIO_PinDirection
   _RTC_GetDateTime
     _I2C_Read
       _i2c_Ack
       _i2c_NoAck
       _i2c_WaitForIdle
     _I2C_Start
     _I2C_Stop
     _I2C_Write
       _i2c_WaitForIdle
   _RTC_Init
     _I2C_Init
     _I2C_Start
     _I2C_Stop
     _I2C_Write
       _i2c_WaitForIdle
   _RTC_SetDateTime
     _I2C_Start
     _I2C_Stop
     _I2C_Write
       _i2c_WaitForIdle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     13      25       7       46.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      83      12        0.0%
ABS                  0      0      83       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Feb 22 18:02:25 2016

                    _LCD_DisplayFloatNumber 0E90                                           pc 0002  
                            ___bmul@product 0022                          __size_of_I2C_Start 0006  
                               __CFG_CP$OFF 0000                            ?_i2c_WaitForIdle 0070  
                             ?_LCD_CmdWrite 0070                          __size_of_I2C_Write 000D  
                                        _BF 04A0                                          l62 01DC  
                                        l92 02B5                                 ?_LCD_Printf 004B  
                                        fsr 0004                               ?_LCD_GoToLine 0070  
                              ___ftadd@exp1 002F                                ___ftadd@exp2 002E  
                               __CFG_LVP$ON 0000                                ___ftadd@sign 002D  
                                       l160 0896                                         l154 0855  
                                       l243 0B54                                         l180 085C  
                                       l148 084F                                         l174 0886  
                                       l166 0920                                         l338 066D  
                                       l186 0863                                         l363 0D96  
                                       l673 0C61                                         l674 0C69  
                                       l666 0C4C                                         l757 0E76  
                                       l697 0541                                         _PEN 048A  
                              __CFG_CPD$OFF 0000                                         _SEN 0488  
                                       _R_W 04A2                     __end_of_RTC_SetDateTime 0BB8  
                                       fsr0 0004                                         indf 0000  
                              __CFG_FOSC$HS 0000                     __end_of_LCD_DisplayChar 097C  
                                      l2001 0C51                                        l2003 0C5B  
                                      l2021 0BC8                                        l2031 0C00  
                                      l2023 0BD8                                        l2103 0480  
                                      l2121 04C9                                        l2035 0C0D  
                                      l2109 0495                                        l2117 04C2  
                                      l2221 0FD4                                        l2205 0F9C  
                                      l2151 051C                                        l2127 04D8  
                                      l2073 03EE                                        l2145 0507  
                                      l2217 0FC4                                        l2209 0FAC  
                                      l2403 0B43                                        l2067 03B0  
                                      l2075 03F2                                        l2163 0553  
                                      l2147 0513                                        l2139 04F2  
                                      l2315 0936                                        l2157 0531  
                                      l2149 0518                                        l2245 0E1C  
                                      l2317 0939                                        l2095 046B  
                                      l2087 045F                                        l2079 03FD  
                                      l2167 0565                                        l2159 053D  
                                      l2271 0E6B                                        l2263 0E4E  
                                      l1801 0183                                        l2097 0400  
                                      l2177 0588                                        l2193 0F5D  
                                      l2273 0E79                                        l2265 0E5E  
                                      l2513 077F                                        l2505 074F  
                                      l2441 0615                                        l2433 0604  
                                      l1811 01BA                                        l2099 0470  
                                      l2187 0F47                                        l2347 0905  
                                      l2507 0762                                        l2451 0630  
                                      l2435 0609                                        l2523 0795  
                                      l1805 0196                                        l1821 01F0  
                                      l1901 0DFA                                        l2277 0E87  
                                      l2285 0980                                        l2453 0646  
                                      l2429 05DC                                        l2525 07C7  
                                      l1807 01A7                                        l1815 01CB  
                                      l1831 0227                                        l2287 0992  
                                      l2519 0793                                        l2463 0682  
                                      l2527 07CD                                        l2367 0097  
                                      l1833 0238                                        l1825 0203  
                                      l2481 06E7                                        l2529 05AD  
                                      l2369 009E                                        l2641 033A  
                                      l1843 026F                                        l1827 0214  
                                      l1923 09FF                                        l2475 06C8  
                                      l2379 00C8                                        l1861 0C96  
                                      l1845 0280                                        l1837 024B  
                                      l1853 02A4                                        l2397 0B32  
                                      l2469 06A1                                        l1783 0117  
                                      l1863 0CA4                                        l1839 025C  
                                      l1919 09E7                                        l2495 0723  
                                      l2487 070E                                        l1769 0870  
                                      l1777 08BF                                        l1793 014E  
                                      l1865 0CB2                                        l1873 0CE4  
                                      l1849 0293                                        l1953 0A34  
                                      l1961 0968                                        l2497 0734  
                                      l1795 015F                                        l1787 012A  
                                      l1867 0CC0                                        l1875 0CF5  
                                      l1963 096D                                        l1971 08B0  
                                      l1789 013B                                        l1869 0CCE  
                                      l1949 0A1C                                        l1799 0172  
                                      l1975 08B6                                        l1991 0C25  
                                      l1897 0DEF                                        l1993 0C31  
                                      l1995 0C36                                        l1987 0C1E  
                                      STR_1 0806                                        u2015 0108  
                                      u2104 0178                                        u2105 0176  
                                      u2034 0120                                        u2035 011E  
                                      u2124 018C                                        u2044 0130  
                                      u2204 0209                                        u2125 018A  
                                      u2045 012E                                        u2205 0207  
                                      u2134 019C                                        u2135 019A  
                                      u2064 0144                                        u2224 021D  
                                      u2065 0142                                        u2225 021B  
                                      u2154 01B0                                        u2074 0154  
                                      u2314 0289                                        u2234 022D  
                                      u2155 01AE                                        u2075 0152  
                                      u2315 0287                                        u2235 022B  
                                      u2164 01C0                                        u2404 0CB8  
                                      u2324 0299                                        u2165 01BE  
                                      u2405 0CB6                                        u2325 0297  
                                      u2094 0168                                        u2254 0241  
                                      u3070 03DF                                        u2095 0166  
                                      u2335 0C87                                        u2255 023F  
                                      u2175 01E1                                        u2344 0C9C  
                                      u2264 0251                                        u2600 0A43  
                                      u2520 0A83                                        u3080 03E0  
                                      u3064 03C4                                        u2345 0C9A  
                                      u2265 024F                                        u3065 03C1  
                                      u2434 0CC6                                        u2194 01F9  
                                      u2610 0A44                                        u2530 0A84  
                                      u2435 0CC4                                        u2195 01F7  
                                      u2284 0265                                        u2620 0A53  
                                      u2540 0A93                                        u2285 0263  
                                      u3325 051D                                        u2470 0CDF  
                                      u2374 0CAA                                        u2294 0275  
                                      u2630 0A54                                        u2550 0A94  
                                      u2375 0CA8                                        u2295 0273  
                                      u2480 0CE0                                        u2464 0CD4  
                                      u2640 0A63                                        u2560 0AA3  
                                      u2465 0CD2                                        u3265 04F3  
                                      u2650 0A64                                        u2570 0AA4  
                                      u3355 0532                                        u3435 0F69  
                                      u2660 0A73                                        u2580 0AB3  
                                      u2725 0A2A                                        u2805 0C2A  
                                      u3525 0FD5                                        u3445 0F7B  
                                      u3605 0E4F                                        u2670 0A74  
                                      u2590 0AB4                                        u3295 0508  
                                      u3535 0FDD                                        u2825 0C45  
                                      u2915 0BCC                                        u3475 0FAD  
                                      u3635 0E6D                                        u2845 0C54  
                                      u3485 0FB5                                        u2695 09F5  
                                      u2935 0BDA                                        u3575 0E23  
                                      u2945 0BEF                                        u3665 0985  
                                      u2955 0C01                                        _RCEN 048B  
                                      u2885 0C70                                        _RSEN 0489  
                              __CFG_WRT$OFF 0000                                        _main 02B6  
                              ___ftpack@arg 0070                          __size_of_LCD_Clear 000B  
                              ___ftpack@exp 0073                            __end_of_I2C_Init 08AC  
                          __end_of_I2C_Read 093B                                        btemp 007E  
                          __end_of_I2C_Stop 0858                                        ltemp 007E  
                        __size_of_LCD_SetUp 00D1                                        start 0000  
                                      ttemp 007E                                        wtemp 007E  
                          __end_of_DELAY_ms 08D3                            __end_of_DELAY_us 087B  
                         ___bmul@multiplier 0023                                ___ftmul@cntr 0028  
                             ?_GPIO_PinRead 0070                             __end_of_i2c_Ack 085F  
                              ___ftmul@sign 0029                              ??_LCD_CmdWrite 0077  
                               LCD_SetUp@D0 0022                                 LCD_SetUp@D1 0023  
                               LCD_SetUp@D2 0024                                 LCD_SetUp@D3 0025  
                               LCD_SetUp@D4 0026                                 LCD_SetUp@D5 0027  
                               LCD_SetUp@D6 0028                                 LCD_SetUp@D7 0029  
                               LCD_SetUp@EN 0021                                ___fttol@exp1 0037  
                               LCD_SetUp@RS 0076                                 LCD_SetUp@RW 0020  
                              ___fttol@lval 0033                              ??_LCD_GoToLine 007A  
                             _GPIO_PinWrite 01DD                            __end_of_LCD_Init 0B5E  
          LCD_Printf@v_numOfDigitsToDisp_u8 006C                     LCD_CmdWrite@v_lcdCmd_u8 0079  
                                     ?_main 0070                                       _ACKEN 048C  
                                     _ACKDT 048D                             __end_of___ftadd 05A2  
                             __CFG_WDTE$OFF 0000                             __end_of___ftneg 0870  
                           __end_of___lldiv 0C16                             __end_of___ftmul 1000  
                           __end_of___fttol 0E90                       _LCD_DisplayNumber$300 003F  
                                     _PORTA 0005                                       _PORTB 0006  
                                     _PORTC 0007                                       _PORTD 0008  
                                     _PORTE 0009                                       _TRISA 0085  
                                     _TRISB 0086                                       _TRISC 0087  
                                     _TRISD 0088                                       _TRISE 0089  
                              ___lltoft@exp 007D       LCD_DisplayString@ptr_stringPointer_u8 0020  
                             ___ftpack@sign 0074                            __end_of_RTC_Init 095B  
                         __end_of_I2C_Start 0852                           __end_of_I2C_Write 089E  
                            __CFG_BOREN$OFF 0000                                       pclath 000A  
                                     ltemp0 007E                                       ltemp1 0082  
                                     ltemp2 0086                                       ltemp3 0080  
              __end_of_lcd_SendHigherNibble 0A7E                         __size_of_LCD_Printf 0232  
                                     ttemp0 007E                                       ttemp1 0081  
                                     ttemp2 0084                                       ttemp3 0087  
                                     ttemp4 007F                                       status 0003  
                                     wtemp0 007E                                       wtemp1 0080  
                                     wtemp2 0082                                       wtemp3 0084  
                                     wtemp4 0086                                       wtemp5 0088  
                                     wtemp6 007F                              ??_GPIO_PinRead 0070  
                           __initialization 07D4                  GPIO_PinWrite@enm_pinNumber 0074  
                              __end_of_main 03A7                              ?_GPIO_PinWrite 0070  
                         _GPIO_PinDirection 0104                                      ??_main 00A0  
                             ___fttol@sign1 0032                 __size_of_lcd_SendCmdSignals 002D  
                         __end_of_LCD_Clear 0886                          RTC_SetDateTime@rtc 0071  
                          ?_RTC_SetDateTime 0070                          ?_GPIO_PinDirection 0070  
                         __end_of_LCD_SetUp 0104                            ?_LCD_DisplayChar 0070  
               LCD_DisplayChar@v_lcdData_u8 007C                                LCD_Printf@ch 006B  
                        __size_of_i2c_NoAck 0007                         ??_GPIO_PinDirection 0071  
                          __end_of___ftpack 0C82                            __end_of___lltoft 09A7  
                                    _SSPADD 0093                                      _TRISC3 043B  
                                    _TRISC4 043C                                      _SSPCON 0014  
                                    _SSPBUF 0013                                   ??_i2c_Ack 0070  
                     lcd_BusyCheck@busyflag 0076                              __CFG_PWRTE$OFF 0000  
                     I2C_Write@v_i2cData_u8 0070                   GPIO_PinRead@enm_pinNumber 0074  
                                    ___bmul 08AC                                   ??___ftadd 0029  
                                 ??___ftneg 007E                                   ??___lldiv 0078  
                                 ??___ftmul 0020                                   ??___fttol 002E  
                 __end_of_GPIO_PinDirection 01DD              GPIO_PinDirection@enm_pinNumber 0074  
                          DELAY_ms@ms_count 0072                       ___ftmul@f3_as_product 0025  
                                 ?_I2C_Init 0070                                   ?_I2C_Read 0070  
                                 ?_I2C_Stop 0070                           ?_LCD_GoToNextLine 0070  
                                 ?_DELAY_ms 0072                                   ?_DELAY_us 0070  
               __end_of_lcd_SendLowerNibble 0ABE                          ??_LCD_GoToNextLine 007A  
                      __end_of_LCD_CmdWrite 0A09                        __end_of_LCD_GoToLine 08EA  
               lcd_SendLowerNibble@dataByte 0076                     __end_of__initialization 07FC  
                                 ?_LCD_Init 007C                                  ___ftadd@f1 0023  
                                ___ftadd@f2 0026                     ?_LCD_DisplayFloatNumber 0043  
                                ___ftneg@f1 0020                         ___bmul@multiplicand 0020  
                                ___ftmul@f1 0078                                  ___ftmul@f2 007B  
                           ??_GPIO_PinWrite 0071                                  ___fttol@f1 002A  
                            __pcstackCOMMON 0070                                __pidataBANK1 0848  
                                ___lltoft@c 0078                       __end_of_lcd_DataWrite 0A3E  
                         __end_of_i2c_NoAck 0866                                ??_LCD_Printf 0057  
                                 ?_RTC_Init 0070                        _lcd_SendHigherNibble 0A3E  
                       LCD_Printf@v_num_s16 0062                         LCD_Printf@v_num_s32 005E  
                       LCD_Printf@v_num_u16 0068                         LCD_Printf@v_num_u32 0064  
                                ??_I2C_Init 0070                                  ??_I2C_Read 0070  
                        __size_of_lcd_Reset 004F                                  ??_I2C_Stop 0070  
              __size_of_lcd_SendDataSignals 002E                                  ??_DELAY_ms 0074  
                                ??_DELAY_us 0072                        __end_of_GPIO_PinRead 0CF7  
            GPIO_PinWrite@var_portNumber_u8 0073                    __size_of_RTC_GetDateTime 007F  
                                __pbssBANK0 006E                                  __pbssBANK1 00B3  
                     __end_of_lcd_BusyCheck 0E02                lcd_SendHigherNibble@dataByte 0076  
              GPIO_PinWrite@var_pinValue_u8 0070                                  ??_LCD_Init 007D  
            __end_of_LCD_DisplayFloatNumber 0F2F                          __end_of_LCD_Printf 07D4  
                                __pmaintext 02B6                                     ?___bmul 0020  
                __size_of_GPIO_PinDirection 00D9                               LCD_Printf@ptr 006A  
                                ??_RTC_Init 0071                               LCD_Printf@str 005C  
                                 ?___ftpack 0070                       ?_lcd_SendHigherNibble 0070  
                                 ?___lltoft 0078                    __size_of_i2c_WaitForIdle 000B  
                          DELAY_us@us_count 0070                                     _SSPSTAT 0094  
                                __stringtab 0800                                     _i2c_Ack 0858  
                                 _I2C_Start 084C                                   _I2C_Write 0891  
                         __end_of_lcd_Reset 0B0D                             __size_of___bmul 0013  
                 LCD_Init@v_lcdNoOfLines_u8 0020                                     ___ftadd 0499  
                                   ___ftneg 0866                                     ___lldiv 0BB8  
                                   ___ftmul 0F2F                                     ___fttol 0E02  
                                ??___ftpack 0075                          LCD_DisplayNumber@a 0035  
                        LCD_DisplayNumber@i 0042                                  ??___lltoft 007C  
                                   __ptext1 0B5E                                     __ptext2 093B  
                                   __ptext3 089E                                     __ptext4 0CF7  
                                   __ptext5 0891                                     __ptext6 0852  
                                   __ptext7 084C                                     __ptext8 091B  
                                   __ptext9 0886                       __size_of_LCD_CmdWrite 0035  
                                 _LCDConfig 00B3                       __size_of_LCD_GoToLine 0017  
                                 _LCD_Clear 087B                                   _LCD_SetUp 0033  
                                   main@rtc 00AC                        end_of_initialization 07FC  
                    I2C_Read@v_ackOption_u8 0071                LCD_Init@v_MaxCharsPerLine_u8 007C  
                                ?_I2C_Start 0070                                  ?_I2C_Write 0070  
                         ??_RTC_GetDateTime 0073                             ___lldiv@divisor 0070  
                           ___lldiv@counter 007D            LCD_DisplayFloatNumber@v_temp_u32 0047  
                    ??_lcd_SendHigherNibble 0075                  __end_of_lcd_SendCmdSignals 09D4  
                              _LCD_CmdWrite 09D4                                _LCD_GoToLine 08D3  
                     __size_of_GPIO_PinRead 0075                                  ?_LCD_Clear 0070  
                         __size_of_I2C_Init 000E                           __size_of_I2C_Read 0020  
                         __size_of_I2C_Stop 0006                                  ?_LCD_SetUp 0020  
                         __size_of_DELAY_ms 0014                           __size_of_DELAY_us 000B  
                  __size_of_RTC_SetDateTime 005A                           ??_i2c_WaitForIdle 0070  
                  __size_of_LCD_DisplayChar 0021                           __size_of_LCD_Init 0051  
                 __size_of_LCD_GoToNextLine 0018                         _lcd_SendDataSignals 0005  
                               ___ftmul@exp 0024          GPIO_PinDirection@var_portNumber_u8 0073  
                              _GPIO_PinRead 0C82                              __end_of___bmul 08BF  
                         LCD_Printf@argList 005D                                   _i2c_NoAck 085F  
                  _ARR_LcdLineNumAddress_U8 00C1                           __size_of_RTC_Init 0020  
                       start_initialization 07D4                        ?_lcd_SendDataSignals 0070  
                    _v_LcdTrackCursorPos_U8 006E               GPIO_PinRead@var_portNumber_u8 0072  
                               ??_I2C_Start 0070                __size_of_lcd_SendLowerNibble 0040  
                               ??_I2C_Write 0070             GPIO_PinDirection@var_pinDirn_u8 0070  
                                  ??___bmul 0021                       __end_of_GPIO_PinWrite 02B6  
                               __pdataBANK1 00C1        LCD_DisplayFloatNumber@v_floatNum_f32 0043  
                                ?_i2c_NoAck 0070                           __size_of___ftpack 006C  
                     ??_lcd_SendDataSignals 0075                        _v_LcdTrackLineNum_U8 006F  
                         __size_of___lltoft 002B                                   ___latbits 0002  
                     lcd_DataWrite@dataByte 0079                               __pcstackBANK0 0020  
                             __pcstackBANK1 00A0                                 ??_LCD_Clear 007C  
                               ??_LCD_SetUp 0075                      __size_of_lcd_DataWrite 0035  
                                  ?_i2c_Ack 0070                 LCD_GoToLine@v_lineNumber_u8 007B  
                         ??_RTC_SetDateTime 0071                                    ?___ftadd 0023  
                                  ?___ftneg 0020                                    ?___lldiv 0070  
                                  ?___ftmul 0078                                    ?___fttol 002A  
                                 _lcd_Reset 0ABE                           ??_LCD_DisplayChar 007B  
                      I2C_Read@v_i2cData_u8 0072                                   __pstrings 0800  
                    __size_of_lcd_BusyCheck 008C                                    _I2C_Init 089E  
                         _LCD_DisplayNumber 03A7                                    _I2C_Read 091B  
                            LCD_Printf@argp 006D                                    _I2C_Stop 0852  
                         _LCD_DisplayString 0902                                    _DELAY_ms 08BF  
                                  _DELAY_us 0870                          ?_LCD_DisplayNumber 0024  
                           _RTC_GetDateTime 0CF7                          ?_LCD_DisplayString 0070  
                       ??_LCD_DisplayNumber 0029                                    _LCD_Init 0B0D  
                       ??_LCD_DisplayString 007D                            _LCD_GoToNextLine 08EA  
                                ?_lcd_Reset 0070                               _lcd_DataWrite 0A09  
                                  _RTC_Init 093B                    GPIO_PinRead@returnStatus 0073  
                 __end_of_LCD_DisplayNumber 0499                                 __stringbase 0805  
                               ??_i2c_NoAck 0070                   __end_of_LCD_DisplayString 091B  
                           _i2c_WaitForIdle 0886                          _lcd_SendCmdSignals 09A7  
                  ??_LCD_DisplayFloatNumber 0046                               _lcd_BusyCheck 0D76  
                       ?_lcd_SendCmdSignals 0070                            __size_of_i2c_Ack 0007  
                            ?_lcd_DataWrite 0070                            __size_of___ftadd 0109  
                          __size_of___ftneg 000A                            __size_of___lldiv 005E  
                          __size_of___ftmul 00D1                            __size_of___fttol 008E  
                                  ___ftpack 0C16                          __end_of__stringtab 0806  
                      ??_lcd_SendCmdSignals 0075                                    ___lltoft 097C  
             __size_of_lcd_SendHigherNibble 0040                     __end_of_RTC_GetDateTime 0D76  
                       _lcd_SendLowerNibble 0A7E                                    __ptext10 085F  
                                  __ptext11 0858                                    __ptext20 0499  
                                  __ptext12 0033                                    __ptext21 0C16  
                                  __ptext13 05A2                                    __ptext30 0ABE  
                                  __ptext22 03A7                                    __ptext14 0902  
                                  __ptext31 087B                                    __ptext23 0BB8  
                                  __ptext15 0E90                                    __ptext40 0104  
                                  __ptext32 08D3                                    __ptext24 08AC  
                                  __ptext16 097C                                    __ptext41 08BF  
                                  __ptext33 09D4                                    __ptext25 095B  
                                  __ptext17 0E02                                    __ptext42 0870  
                                  __ptext34 0A7E                                    __ptext26 0A09  
                                  __ptext18 0866                                    __ptext35 0A3E  
                                  __ptext27 0005                                    __ptext19 0F2F  
                                  __ptext36 09A7                                    __ptext28 08EA  
                                  __ptext37 0D76                                    __ptext29 0B0D  
                                  __ptext38 01DD                                    __ptext39 0C82  
                            ?_lcd_BusyCheck 0070         LCD_DisplayNumber@v_numericSystem_u8 0041  
                             __size_of_main 00F1                        ?_lcd_SendLowerNibble 0070  
                   __end_of_i2c_WaitForIdle 0891                                 ??_lcd_Reset 0077  
                                _LCD_Printf 05A2                  __size_of_LCD_DisplayNumber 00F2  
                __size_of_LCD_DisplayString 0019                          RTC_GetDateTime@rtc 0074  
                           _RTC_SetDateTime 0B5E             __size_of_LCD_DisplayFloatNumber 009F  
                     ??_lcd_SendLowerNibble 0075                            ___lldiv@dividend 0074  
                           _LCD_DisplayChar 095B                                   stringcode 0800  
                           ??_lcd_DataWrite 0077                 __end_of_lcd_SendDataSignals 0033  
                  LCD_Printf@v_floatNum_f32 0059                            ?_RTC_GetDateTime 0070  
                          ___lldiv@quotient 0079                    __end_of_LCD_GoToNextLine 0902  
                                  stringdir 0800                                    stringtab 0800  
LCD_DisplayNumber@v_numOfDigitsToDisplay_u8 0028                             ??_lcd_BusyCheck 0075  
                    __size_of_GPIO_PinWrite 00D9               LCD_DisplayNumber@v_number_u32 0024  
