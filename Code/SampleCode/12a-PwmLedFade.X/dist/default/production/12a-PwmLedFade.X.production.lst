

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu May 19 10:57:23 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     	;# 
    12  0001                     	;# 
    13  0002                     	;# 
    14  0003                     	;# 
    15  0004                     	;# 
    16  0005                     	;# 
    17  0006                     	;# 
    18  0007                     	;# 
    19  0008                     	;# 
    20  0009                     	;# 
    21  000A                     	;# 
    22  000B                     	;# 
    23  000C                     	;# 
    24  000D                     	;# 
    25  000E                     	;# 
    26  000E                     	;# 
    27  000F                     	;# 
    28  0010                     	;# 
    29  0011                     	;# 
    30  0012                     	;# 
    31  0013                     	;# 
    32  0014                     	;# 
    33  0015                     	;# 
    34  0015                     	;# 
    35  0016                     	;# 
    36  0017                     	;# 
    37  0018                     	;# 
    38  0019                     	;# 
    39  001A                     	;# 
    40  001B                     	;# 
    41  001B                     	;# 
    42  001C                     	;# 
    43  001D                     	;# 
    44  001E                     	;# 
    45  001F                     	;# 
    46  0081                     	;# 
    47  0085                     	;# 
    48  0086                     	;# 
    49  0087                     	;# 
    50  0088                     	;# 
    51  0089                     	;# 
    52  008C                     	;# 
    53  008D                     	;# 
    54  008E                     	;# 
    55  0091                     	;# 
    56  0092                     	;# 
    57  0093                     	;# 
    58  0094                     	;# 
    59  0098                     	;# 
    60  0099                     	;# 
    61  009C                     	;# 
    62  009D                     	;# 
    63  009E                     	;# 
    64  009F                     	;# 
    65  010C                     	;# 
    66  010D                     	;# 
    67  010E                     	;# 
    68  010F                     	;# 
    69  018C                     	;# 
    70  018D                     	;# 
    71  0017                     _CCP1CON	set	23
    72  001D                     _CCP2CON	set	29
    73  0015                     _CCPR1L	set	21
    74  001B                     _CCPR2L	set	27
    75  0092                     _TMR2ON	set	146
    76  0092                     _PR2	set	146
    77  0087                     _TRISC	set	135
    78                           
    79                           ; #config settings
    80  0000                     
    81                           	psect	cinit
    82  07FC                     start_initialization:	
    83  07FC                     __initialization:	
    84  07FC                     end_of_initialization:	
    85                           ;End of C runtime variable initialization code
    86                           
    87  07FC                     __end_of__initialization:	
    88  07FC  0183               	clrf	3
    89  07FD  120A  118A  2F9E   	ljmp	_main	;jump to C main() function
    90                           
    91                           	psect	cstackCOMMON
    92  0070                     __pcstackCOMMON:	
    93  0070                     ?_PWM_Init:	
    94  0070                     ??_PWM_Init:	
    95                           ; 1 bytes @ 0x0
    96                           
    97  0070                     ?_PWM_Start:	
    98                           ; 1 bytes @ 0x0
    99                           
   100  0070                     ??_PWM_Start:	
   101                           ; 1 bytes @ 0x0
   102                           
   103  0070                     ?_PWM_SetDutyCycle:	
   104                           ; 1 bytes @ 0x0
   105                           
   106  0070                     ?_main:	
   107                           ; 1 bytes @ 0x0
   108                           
   109  0070                     PWM_SetDutyCycle@dutyCycle:	
   110                           ; 2 bytes @ 0x0
   111                           
   112  0070                     PWM_Start@channel:	
   113                           ; 1 bytes @ 0x0
   114                           
   115                           
   116                           ; 1 bytes @ 0x0
   117  0070                     	ds	1
   118  0071                     ??_PWM_SetDutyCycle:	
   119  0071                     PWM_Init@channel:	
   120                           ; 1 bytes @ 0x1
   121                           
   122                           
   123                           ; 1 bytes @ 0x1
   124  0071                     	ds	1
   125  0072                     PWM_SetDutyCycle@channel:	
   126                           
   127                           ; 1 bytes @ 0x2
   128  0072                     	ds	1
   129  0073                     ??_main:	
   130                           
   131                           ; 1 bytes @ 0x3
   132  0073                     	ds	1
   133                           
   134                           	psect	maintext
   135  079E                     __pmaintext:	
   136 ;;
   137 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   138 ;;
   139 ;; *************** function _main *****************
   140 ;; Defined at:
   141 ;;		line 41 in file "main.c"
   142 ;; Parameters:    Size  Location     Type
   143 ;;		None
   144 ;; Auto vars:     Size  Location     Type
   145 ;;		None
   146 ;; Return value:  Size  Location     Type
   147 ;;                  2    8[None  ] int 
   148 ;; Registers used:
   149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   150 ;; Tracked objects:
   151 ;;		On entry : B00/0
   152 ;;		On exit  : 0/0
   153 ;;		Unchanged: 0/0
   154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   155 ;;      Params:         0       0       0       0       0
   156 ;;      Locals:         0       0       0       0       0
   157 ;;      Temps:          1       0       0       0       0
   158 ;;      Totals:         1       0       0       0       0
   159 ;;Total ram usage:        1 bytes
   160 ;; Hardware stack levels required when called:    1
   161 ;; This function calls:
   162 ;;		_PWM_Init
   163 ;;		_PWM_SetDutyCycle
   164 ;;		_PWM_Start
   165 ;; This function is called by:
   166 ;;		Startup code after reset
   167 ;; This function uses a non-reentrant model
   168 ;;
   169                           
   170                           
   171                           ;psect for function _main
   172  079E                     _main:	
   173                           
   174                           ;main.c: 43: PWM_Init(0);
   175                           
   176                           ;incstack = 0
   177                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   178  079E  3000               	movlw	0
   179  079F  120A  118A  27CB  120A  118A  	fcall	_PWM_Init
   180                           
   181                           ;main.c: 44: PWM_Init(1);
   182  07A4  3001               	movlw	1
   183  07A5  120A  118A  27CB  120A  118A  	fcall	_PWM_Init
   184                           
   185                           ;main.c: 45: PWM_Start(0);
   186  07AA  3000               	movlw	0
   187  07AB  120A  118A  277D  120A  118A  	fcall	_PWM_Start
   188                           
   189                           ;main.c: 46: PWM_Start(1);
   190  07B0  3001               	movlw	1
   191  07B1  120A  118A  277D  120A  118A  	fcall	_PWM_Start
   192                           
   193                           ;main.c: 48: PWM_SetDutyCycle(0,25);
   194  07B6  3019               	movlw	25
   195  07B7  00F3               	movwf	??_main
   196  07B8  0873               	movf	??_main,w
   197  07B9  00F0               	movwf	PWM_SetDutyCycle@dutyCycle
   198  07BA  3000               	movlw	0
   199  07BB  120A  118A  2781  120A  118A  	fcall	_PWM_SetDutyCycle
   200                           
   201                           ;main.c: 49: PWM_SetDutyCycle(1,75);
   202  07C0  304B               	movlw	75
   203  07C1  00F3               	movwf	??_main
   204  07C2  0873               	movf	??_main,w
   205  07C3  00F0               	movwf	PWM_SetDutyCycle@dutyCycle
   206  07C4  3001               	movlw	1
   207  07C5  120A  118A  2781  120A  118A  	fcall	_PWM_SetDutyCycle
   208  07CA                     l9:	
   209                           ;main.c: 51: while(1);
   210                           
   211  07CA  2FCA               	goto	l9
   212  07CB                     __end_of_main:	
   213                           
   214                           	psect	text1
   215  077D                     __ptext1:	
   216 ;; *************** function _PWM_Start *****************
   217 ;; Defined at:
   218 ;;		line 119 in file "../00-libfiles/pwm.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;  channel         1    wreg     unsigned char 
   221 ;; Auto vars:     Size  Location     Type
   222 ;;  channel         1    0[COMMON] unsigned char 
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg
   227 ;; Tracked objects:
   228 ;;		On entry : 0/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   232 ;;      Params:         0       0       0       0       0
   233 ;;      Locals:         0       0       0       0       0
   234 ;;      Temps:          0       0       0       0       0
   235 ;;      Totals:         0       0       0       0       0
   236 ;;Total ram usage:        0 bytes
   237 ;; Hardware stack levels used:    1
   238 ;; This function calls:
   239 ;;		Nothing
   240 ;; This function is called by:
   241 ;;		_main
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           
   246                           ;psect for function _PWM_Start
   247  077D                     _PWM_Start:	
   248                           
   249                           ;pwm.c: 121: TMR2ON = 1;
   250                           
   251                           ;incstack = 0
   252                           ; Regs used in _PWM_Start: [wreg]
   253  077D  1283               	bcf	3,5	;RP0=0, select bank0
   254  077E  1303               	bcf	3,6	;RP1=0, select bank0
   255  077F  1512               	bsf	18,2	;volatile
   256  0780  0008               	return
   257  0781                     __end_of_PWM_Start:	
   258                           
   259                           	psect	text2
   260  0781                     __ptext2:	
   261 ;; *************** function _PWM_SetDutyCycle *****************
   262 ;; Defined at:
   263 ;;		line 89 in file "../00-libfiles/pwm.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;  channel         1    wreg     unsigned char 
   266 ;;  dutyCycle       1    0[COMMON] unsigned char 
   267 ;; Auto vars:     Size  Location     Type
   268 ;;  channel         1    2[COMMON] unsigned char 
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      void 
   271 ;; Registers used:
   272 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   273 ;; Tracked objects:
   274 ;;		On entry : 0/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   278 ;;      Params:         1       0       0       0       0
   279 ;;      Locals:         1       0       0       0       0
   280 ;;      Temps:          1       0       0       0       0
   281 ;;      Totals:         3       0       0       0       0
   282 ;;Total ram usage:        3 bytes
   283 ;; Hardware stack levels used:    1
   284 ;; This function calls:
   285 ;;		Nothing
   286 ;; This function is called by:
   287 ;;		_main
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291                           
   292                           ;psect for function _PWM_SetDutyCycle
   293  0781                     _PWM_SetDutyCycle:	
   294                           
   295                           ;incstack = 0
   296                           ; Regs used in _PWM_SetDutyCycle: [wreg-fsr0h+status,2+status,0]
   297                           ;PWM_SetDutyCycle@channel stored from wreg
   298  0781  00F2               	movwf	PWM_SetDutyCycle@channel
   299                           
   300                           ;pwm.c: 91: if(dutyCycle>100)
   301  0782  3065               	movlw	101
   302  0783  0270               	subwf	PWM_SetDutyCycle@dutyCycle,w
   303  0784  1C03               	skipc
   304  0785  2F95               	goto	l565
   305                           
   306                           ;pwm.c: 92: dutyCycle = 100;
   307  0786  3064               	movlw	100
   308  0787  00F1               	movwf	??_PWM_SetDutyCycle
   309  0788  0871               	movf	??_PWM_SetDutyCycle,w
   310  0789  00F0               	movwf	PWM_SetDutyCycle@dutyCycle
   311                           
   312                           ;pwm.c: 94: switch (channel)
   313  078A  2F95               	goto	l565
   314  078B                     l559:	
   315                           ;pwm.c: 95: {
   316                           ;pwm.c: 96: case 0 :
   317                           
   318                           
   319                           ;pwm.c: 97: CCPR1L = dutyCycle;
   320  078B  0870               	movf	PWM_SetDutyCycle@dutyCycle,w
   321  078C  1283               	bcf	3,5	;RP0=0, select bank0
   322  078D  1303               	bcf	3,6	;RP1=0, select bank0
   323  078E  0095               	movwf	21	;volatile
   324                           
   325                           ;pwm.c: 98: break;
   326  078F  0008               	return
   327  0790                     l561:	
   328                           ;pwm.c: 100: case 1 :
   329                           
   330                           
   331                           ;pwm.c: 101: CCPR2L = dutyCycle;
   332  0790  0870               	movf	PWM_SetDutyCycle@dutyCycle,w
   333  0791  1283               	bcf	3,5	;RP0=0, select bank0
   334  0792  1303               	bcf	3,6	;RP1=0, select bank0
   335  0793  009B               	movwf	27	;volatile
   336                           
   337                           ;pwm.c: 103: }
   338                           
   339                           ;pwm.c: 102: break;
   340  0794  0008               	return
   341  0795                     l565:	
   342  0795  0872               	movf	PWM_SetDutyCycle@channel,w
   343                           
   344                           ; Switch size 1, requested type "space"
   345                           ; Number of cases is 2, Range of values is 0 to 1
   346                           ; switch strategies available:
   347                           ; Name         Instructions Cycles
   348                           ; simple_byte            7     4 (average)
   349                           ; direct_byte           14     8 (fixed)
   350                           ; jumptable            260     6 (fixed)
   351                           ;	Chosen strategy is simple_byte
   352  0796  3A00               	xorlw	0	; case 0
   353  0797  1903               	skipnz
   354  0798  2F8B               	goto	l559
   355  0799  3A01               	xorlw	1	; case 1
   356  079A  1903               	skipnz
   357  079B  2F90               	goto	l561
   358  079C  2F9D               	goto	l41
   359  079D                     l41:	
   360  079D  0008               	return
   361  079E                     __end_of_PWM_SetDutyCycle:	
   362                           
   363                           	psect	text3
   364  07CB                     __ptext3:	
   365 ;; *************** function _PWM_Init *****************
   366 ;; Defined at:
   367 ;;		line 50 in file "../00-libfiles/pwm.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;  channel         1    wreg     unsigned char 
   370 ;; Auto vars:     Size  Location     Type
   371 ;;  channel         1    1[COMMON] unsigned char 
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   381 ;;      Params:         0       0       0       0       0
   382 ;;      Locals:         1       0       0       0       0
   383 ;;      Temps:          1       0       0       0       0
   384 ;;      Totals:         2       0       0       0       0
   385 ;;Total ram usage:        2 bytes
   386 ;; Hardware stack levels used:    1
   387 ;; This function calls:
   388 ;;		Nothing
   389 ;; This function is called by:
   390 ;;		_main
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           
   395                           ;psect for function _PWM_Init
   396  07CB                     _PWM_Init:	
   397                           
   398                           ;incstack = 0
   399                           ; Regs used in _PWM_Init: [wreg-fsr0h+status,2+status,0]
   400                           ;PWM_Init@channel stored from wreg
   401  07CB  00F1               	movwf	PWM_Init@channel
   402                           
   403                           ;pwm.c: 52: switch (channel)
   404  07CC  2FF3               	goto	l523
   405  07CD                     l513:	
   406                           ;pwm.c: 53: {
   407                           ;pwm.c: 54: case 0 :
   408                           
   409                           
   410                           ;pwm.c: 55: CCP1CON = 0x0F;
   411  07CD  300F               	movlw	15
   412  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   413  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   414  07D0  0097               	movwf	23	;volatile
   415                           
   416                           ;pwm.c: 56: PR2 = 100;
   417  07D1  3064               	movlw	100
   418  07D2  1683               	bsf	3,5	;RP0=1, select bank1
   419  07D3  1303               	bcf	3,6	;RP1=0, select bank1
   420  07D4  0092               	movwf	18	;volatile
   421                           
   422                           ;pwm.c: 57: CCPR1L = 50;
   423  07D5  3032               	movlw	50
   424  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   425  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   426  07D8  0095               	movwf	21	;volatile
   427                           
   428                           ;pwm.c: 58: ((TRISC) &= ~(1<<(2)));
   429  07D9  30FB               	movlw	251
   430  07DA  00F0               	movwf	??_PWM_Init
   431  07DB  0870               	movf	??_PWM_Init,w
   432  07DC  1683               	bsf	3,5	;RP0=1, select bank1
   433  07DD  1303               	bcf	3,6	;RP1=0, select bank1
   434  07DE  0587               	andwf	7,f	;volatile
   435                           
   436                           ;pwm.c: 59: break;
   437  07DF  0008               	return
   438  07E0                     l517:	
   439                           ;pwm.c: 61: case 1 :
   440                           
   441                           
   442                           ;pwm.c: 62: CCP2CON = 0x0F;
   443  07E0  300F               	movlw	15
   444  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   445  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   446  07E3  009D               	movwf	29	;volatile
   447                           
   448                           ;pwm.c: 63: PR2 = 100;
   449  07E4  3064               	movlw	100
   450  07E5  1683               	bsf	3,5	;RP0=1, select bank1
   451  07E6  1303               	bcf	3,6	;RP1=0, select bank1
   452  07E7  0092               	movwf	18	;volatile
   453                           
   454                           ;pwm.c: 64: CCPR2L = 50;
   455  07E8  3032               	movlw	50
   456  07E9  1283               	bcf	3,5	;RP0=0, select bank0
   457  07EA  1303               	bcf	3,6	;RP1=0, select bank0
   458  07EB  009B               	movwf	27	;volatile
   459                           
   460                           ;pwm.c: 65: ((TRISC) &= ~(1<<(1)));
   461  07EC  30FD               	movlw	253
   462  07ED  00F0               	movwf	??_PWM_Init
   463  07EE  0870               	movf	??_PWM_Init,w
   464  07EF  1683               	bsf	3,5	;RP0=1, select bank1
   465  07F0  1303               	bcf	3,6	;RP1=0, select bank1
   466  07F1  0587               	andwf	7,f	;volatile
   467                           
   468                           ;pwm.c: 67: }
   469                           
   470                           ;pwm.c: 66: break;
   471  07F2  0008               	return
   472  07F3                     l523:	
   473  07F3  0871               	movf	PWM_Init@channel,w
   474                           
   475                           ; Switch size 1, requested type "space"
   476                           ; Number of cases is 2, Range of values is 0 to 1
   477                           ; switch strategies available:
   478                           ; Name         Instructions Cycles
   479                           ; simple_byte            7     4 (average)
   480                           ; direct_byte           14     8 (fixed)
   481                           ; jumptable            260     6 (fixed)
   482                           ;	Chosen strategy is simple_byte
   483  07F4  3A00               	xorlw	0	; case 0
   484  07F5  1903               	skipnz
   485  07F6  2FCD               	goto	l513
   486  07F7  3A01               	xorlw	1	; case 1
   487  07F8  1903               	skipnz
   488  07F9  2FE0               	goto	l517
   489  07FA  2FFB               	goto	l33
   490  07FB                     l33:	
   491  07FB  0008               	return
   492  07FC                     __end_of_PWM_Init:	
   493  007E                     btemp	set	126	;btemp
   494  007E                     wtemp	set	126
   495  007E                     wtemp0	set	126
   496  0080                     wtemp1	set	128
   497  0082                     wtemp2	set	130
   498  0084                     wtemp3	set	132
   499  0086                     wtemp4	set	134
   500  0088                     wtemp5	set	136
   501  007F                     wtemp6	set	127
   502  007E                     ttemp	set	126
   503  007E                     ttemp0	set	126
   504  0081                     ttemp1	set	129
   505  0084                     ttemp2	set	132
   506  0087                     ttemp3	set	135
   507  007F                     ttemp4	set	127
   508  007E                     ltemp	set	126
   509  007E                     ltemp0	set	126
   510  0082                     ltemp1	set	130
   511  0086                     ltemp2	set	134
   512  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM_SetDutyCycle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     210
                                              3 COMMON     1     1      0
                           _PWM_Init
                   _PWM_SetDutyCycle
                          _PWM_Start
 ---------------------------------------------------------------------------------
 (1) _PWM_Start                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_SetDutyCycle                                     3     2      1     195
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_Init
   _PWM_SetDutyCycle
   _PWM_Start

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu May 19 10:57:23 2016

                        l9 07CA                __CFG_CP$OFF 0000                         l33 07FB  
                       l41 079D                __CFG_LVP$ON 0000                        l513 07CD  
                      l523 07F3                        l517 07E0                        l561 0790  
                      l565 0795                        l559 078B                        _PR2 0092  
             __CFG_CPD$OFF 0000               __CFG_FOSC$HS 0000               __CFG_WRT$OFF 0000  
                     _main 079E                       btemp 007E                       ltemp 007E  
                     start 0000                       ttemp 007E                       wtemp 007E  
                    ?_main 0070              __CFG_WDTE$OFF 0000                      _TRISC 0087  
           __CFG_BOREN$OFF 0000           __end_of_PWM_Init 07FC                      ltemp0 007E  
                    ltemp1 0082                      ltemp2 0086                      ltemp3 0080  
                    ttemp0 007E                      ttemp1 0081                      ttemp2 0084  
                    ttemp3 0087                      ttemp4 007F                      status 0003  
                    wtemp0 007E                      wtemp1 0080                      wtemp2 0082  
                    wtemp3 0084                      wtemp4 0086                      wtemp5 0088  
                    wtemp6 007F         __size_of_PWM_Start 0004            __initialization 07FC  
             __end_of_main 07CB                     ??_main 0073                     _CCPR1L 0015  
                   _CCPR2L 001B   __end_of_PWM_SetDutyCycle 079E    PWM_SetDutyCycle@channel 0072  
                   _TMR2ON 0092             __CFG_PWRTE$OFF 0000          __end_of_PWM_Start 0781  
  __end_of__initialization 07FC             __pcstackCOMMON 0070                  ?_PWM_Init 0070  
               __pmaintext 079E                    _CCP1CON 0017                    _CCP2CON 001D  
               ??_PWM_Init 0070  PWM_SetDutyCycle@dutyCycle 0070                    __ptext1 077D  
                  __ptext2 0781                    __ptext3 07CB       end_of_initialization 07FC  
        ?_PWM_SetDutyCycle 0070         ??_PWM_SetDutyCycle 0071                  _PWM_Start 077D  
         PWM_Start@channel 0070          __size_of_PWM_Init 0031        start_initialization 07FC  
               ?_PWM_Start 0070                  ___latbits 0002                ??_PWM_Start 0070  
__size_of_PWM_SetDutyCycle 001D                   _PWM_Init 07CB            PWM_Init@channel 0071  
            __size_of_main 002D           _PWM_SetDutyCycle 0781  
