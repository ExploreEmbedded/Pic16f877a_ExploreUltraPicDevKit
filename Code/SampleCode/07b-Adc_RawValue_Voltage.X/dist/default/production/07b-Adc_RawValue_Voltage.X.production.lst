

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Feb 20 16:47:51 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	text19,local,class=CODE,merge=1,delta=2
    28                           	psect	text20,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  0008                     	;# 
    39  0009                     	;# 
    40  000A                     	;# 
    41  000B                     	;# 
    42  000C                     	;# 
    43  000D                     	;# 
    44  000E                     	;# 
    45  000E                     	;# 
    46  000F                     	;# 
    47  0010                     	;# 
    48  0011                     	;# 
    49  0012                     	;# 
    50  0013                     	;# 
    51  0014                     	;# 
    52  0015                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0017                     	;# 
    56  0018                     	;# 
    57  0019                     	;# 
    58  001A                     	;# 
    59  001B                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  001D                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  0081                     	;# 
    66  0085                     	;# 
    67  0086                     	;# 
    68  0087                     	;# 
    69  0088                     	;# 
    70  0089                     	;# 
    71  008C                     	;# 
    72  008D                     	;# 
    73  008E                     	;# 
    74  0091                     	;# 
    75  0092                     	;# 
    76  0093                     	;# 
    77  0094                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009E                     	;# 
    83  009F                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  010E                     	;# 
    87  010F                     	;# 
    88  018C                     	;# 
    89  018D                     	;# 
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  0081                     	;# 
   126  0085                     	;# 
   127  0086                     	;# 
   128  0087                     	;# 
   129  0088                     	;# 
   130  0089                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0098                     	;# 
   139  0099                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  001F                     _ADCON0	set	31
   211  001E                     _ADRESH	set	30
   212  001A                     _RCREG	set	26
   213  0018                     _RCSTA	set	24
   214  0019                     _TXREG	set	25
   215  00F8                     _ADON	set	248
   216  00FA                     _GO	set	250
   217  00FA                     _GO_DONE	set	250
   218  0065                     _RCIF	set	101
   219  0064                     _TXIF	set	100
   220  009F                     _ADCON1	set	159
   221  009E                     _ADRESL	set	158
   222  0099                     _SPBRG	set	153
   223  0087                     _TRISC	set	135
   224  0098                     _TXSTA	set	152
   225                           
   226                           	psect	strings
   227  0003                     __pstrings:	
   228  0003                     stringtab:	
   229  0003                     __stringtab:	
   230  0003                     stringcode:	
   231                           ;	String table - string pointers are 1 byte each
   232                           
   233  0003                     stringdir:	
   234  0003  3000               	movlw	high stringdir
   235  0004  008A               	movwf	10
   236  0005  0804               	movf	4,w
   237  0006  0A84               	incf	4,f
   238  0007  0782               	addwf	2,f
   239  0008                     __stringbase:	
   240  0008  3400               	retlw	0
   241  0009                     __end_of__stringtab:	
   242  0009                     STR_1:	
   243  0009  3441               	retlw	65	;'A'
   244  000A  3444               	retlw	68	;'D'
   245  000B  3443               	retlw	67	;'C'
   246  000C  3430               	retlw	48	;'0'
   247  000D  3420               	retlw	32	;' '
   248  000E  3456               	retlw	86	;'V'
   249  000F  3461               	retlw	97	;'a'
   250  0010  346C               	retlw	108	;'l'
   251  0011  3475               	retlw	117	;'u'
   252  0012  3465               	retlw	101	;'e'
   253  0013  343A               	retlw	58	;':'
   254  0014  3425               	retlw	37	;'%'
   255  0015  3434               	retlw	52	;'4'
   256  0016  3464               	retlw	100	;'d'
   257  0017  3420               	retlw	32	;' '
   258  0018  3420               	retlw	32	;' '
   259  0019  3445               	retlw	69	;'E'
   260  001A  3471               	retlw	113	;'q'
   261  001B  3475               	retlw	117	;'u'
   262  001C  3469               	retlw	105	;'i'
   263  001D  3476               	retlw	118	;'v'
   264  001E  3461               	retlw	97	;'a'
   265  001F  346C               	retlw	108	;'l'
   266  0020  3465               	retlw	101	;'e'
   267  0021  346E               	retlw	110	;'n'
   268  0022  3474               	retlw	116	;'t'
   269  0023  3420               	retlw	32	;' '
   270  0024  3456               	retlw	86	;'V'
   271  0025  346F               	retlw	111	;'o'
   272  0026  346C               	retlw	108	;'l'
   273  0027  3474               	retlw	116	;'t'
   274  0028  3461               	retlw	97	;'a'
   275  0029  3467               	retlw	103	;'g'
   276  002A  3465               	retlw	101	;'e'
   277  002B  343A               	retlw	58	;':'
   278  002C  3425               	retlw	37	;'%'
   279  002D  3466               	retlw	102	;'f'
   280  002E  340A               	retlw	10
   281  002F  340D               	retlw	13
   282  0030  3400               	retlw	0
   283                           
   284                           ; #config settings
   285  0000                     
   286                           	psect	cinit
   287  07FC                     start_initialization:	
   288  07FC                     __initialization:	
   289  07FC                     end_of_initialization:	
   290                           ;End of C runtime variable initialization code
   291                           
   292  07FC                     __end_of__initialization:	
   293  07FC  0183               	clrf	3
   294  07FD  120A  158A  2F98   	ljmp	_main	;jump to C main() function
   295                           
   296                           	psect	cstackCOMMON
   297  0070                     __pcstackCOMMON:	
   298  0070                     ?_UART_TxChar:	
   299  0070                     ??_UART_TxChar:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_UART_TxString:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_DELAY_us:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_ADC_Init:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ??_ADC_Init:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_main:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?___ftpack:	
   318                           ; 2 bytes @ 0x0
   319                           
   320  0070                     ?___lldiv:	
   321                           ; 3 bytes @ 0x0
   322                           
   323  0070                     UART_TxChar@var_uartData_u8:	
   324                           ; 4 bytes @ 0x0
   325                           
   326  0070                     DELAY_us@us_count:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ___ftpack@arg:	
   330                           ; 2 bytes @ 0x0
   331                           
   332  0070                     ___lldiv@divisor:	
   333                           ; 3 bytes @ 0x0
   334                           
   335                           
   336                           ; 4 bytes @ 0x0
   337  0070                     	ds	1
   338  0071                     ??_UART_TxString:	
   339                           
   340                           ; 1 bytes @ 0x1
   341  0071                     	ds	1
   342  0072                     ??_DELAY_us:	
   343  0072                     ?_ADC_GetAdcValue:	
   344                           ; 1 bytes @ 0x2
   345                           
   346  0072                     UART_TxString@ptr_string:	
   347                           ; 2 bytes @ 0x2
   348                           
   349                           
   350                           ; 1 bytes @ 0x2
   351  0072                     	ds	1
   352  0073                     ___ftpack@exp:	
   353                           
   354                           ; 1 bytes @ 0x3
   355  0073                     	ds	1
   356  0074                     ??_ADC_GetAdcValue:	
   357  0074                     ___ftpack@sign:	
   358                           ; 1 bytes @ 0x4
   359                           
   360  0074                     ___lldiv@dividend:	
   361                           ; 1 bytes @ 0x4
   362                           
   363                           
   364                           ; 4 bytes @ 0x4
   365  0074                     	ds	1
   366  0075                     ??___ftpack:	
   367  0075                     ADC_GetAdcValue@var_adcChannel_u8:	
   368                           ; 1 bytes @ 0x5
   369                           
   370                           
   371                           ; 1 bytes @ 0x5
   372  0075                     	ds	3
   373  0078                     ??___lldiv:	
   374  0078                     ?___awtoft:	
   375                           ; 1 bytes @ 0x8
   376                           
   377  0078                     ?___lltoft:	
   378                           ; 3 bytes @ 0x8
   379                           
   380  0078                     ___awtoft@c:	
   381                           ; 3 bytes @ 0x8
   382                           
   383  0078                     ___lltoft@c:	
   384                           ; 2 bytes @ 0x8
   385                           
   386                           
   387                           ; 4 bytes @ 0x8
   388  0078                     	ds	1
   389  0079                     ___lldiv@quotient:	
   390                           
   391                           ; 4 bytes @ 0x9
   392  0079                     	ds	2
   393  007B                     ??___awtoft:	
   394                           
   395                           ; 1 bytes @ 0xB
   396  007B                     	ds	1
   397  007C                     ??___lltoft:	
   398                           
   399                           ; 1 bytes @ 0xC
   400  007C                     	ds	1
   401  007D                     ___awtoft@sign:	
   402  007D                     ___lldiv@counter:	
   403                           ; 1 bytes @ 0xD
   404                           
   405  007D                     ___lltoft@exp:	
   406                           ; 1 bytes @ 0xD
   407                           
   408                           
   409                           ; 1 bytes @ 0xD
   410  007D                     	ds	1
   411  007E                     ??_UART_Init:	
   412  007E                     ??_main:	
   413                           ; 1 bytes @ 0xE
   414                           
   415  007E                     ??___ftneg:	
   416                           ; 1 bytes @ 0xE
   417                           
   418                           
   419                           	psect	cstackBANK0
   420  0020                     __pcstackBANK0:	
   421                           ; 1 bytes @ 0xE
   422                           
   423  0020                     ?_UART_SetBaudRate:	
   424  0020                     ?___bmul:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0020                     ?___ftmul:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0020                     ?___ftneg:	
   431                           ; 3 bytes @ 0x0
   432                           
   433  0020                     ___bmul@multiplicand:	
   434                           ; 3 bytes @ 0x0
   435                           
   436  0020                     ___ftmul@f1:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0020                     ___ftneg@f1:	
   440                           ; 3 bytes @ 0x0
   441                           
   442  0020                     UART_SetBaudRate@var_baudRate_u32:	
   443                           ; 3 bytes @ 0x0
   444                           
   445                           
   446                           ; 4 bytes @ 0x0
   447  0020                     	ds	1
   448  0021                     ??___bmul:	
   449                           
   450                           ; 1 bytes @ 0x1
   451  0021                     	ds	1
   452  0022                     ___bmul@product:	
   453                           
   454                           ; 1 bytes @ 0x2
   455  0022                     	ds	1
   456  0023                     ?___ftadd:	
   457  0023                     ___bmul@multiplier:	
   458                           ; 3 bytes @ 0x3
   459                           
   460  0023                     ___ftadd@f1:	
   461                           ; 1 bytes @ 0x3
   462                           
   463  0023                     ___ftmul@f2:	
   464                           ; 3 bytes @ 0x3
   465                           
   466                           
   467                           ; 3 bytes @ 0x3
   468  0023                     	ds	1
   469  0024                     ??_UART_SetBaudRate:	
   470  0024                     ?_UART_TxNumber:	
   471                           ; 1 bytes @ 0x4
   472                           
   473  0024                     UART_TxNumber@v_number_u32:	
   474                           ; 1 bytes @ 0x4
   475                           
   476                           
   477                           ; 4 bytes @ 0x4
   478  0024                     	ds	2
   479  0026                     ??___ftmul:	
   480  0026                     ___ftadd@f2:	
   481                           ; 1 bytes @ 0x6
   482                           
   483                           
   484                           ; 3 bytes @ 0x6
   485  0026                     	ds	2
   486  0028                     UART_TxNumber@v_numOfDigitsToTransmit_u8:	
   487                           
   488                           ; 1 bytes @ 0x8
   489  0028                     	ds	1
   490  0029                     ??_UART_TxNumber:	
   491  0029                     ??___ftadd:	
   492                           ; 1 bytes @ 0x9
   493                           
   494                           
   495                           ; 1 bytes @ 0x9
   496  0029                     	ds	1
   497  002A                     ___ftmul@exp:	
   498                           
   499                           ; 1 bytes @ 0xA
   500  002A                     	ds	1
   501  002B                     ___ftmul@f3_as_product:	
   502                           
   503                           ; 3 bytes @ 0xB
   504  002B                     	ds	1
   505  002C                     UART_SetBaudRate@RegValue:	
   506                           
   507                           ; 4 bytes @ 0xC
   508  002C                     	ds	1
   509  002D                     ___ftadd@sign:	
   510                           
   511                           ; 1 bytes @ 0xD
   512  002D                     	ds	1
   513  002E                     ___ftadd@exp2:	
   514  002E                     ___ftmul@cntr:	
   515                           ; 1 bytes @ 0xE
   516                           
   517                           
   518                           ; 1 bytes @ 0xE
   519  002E                     	ds	1
   520  002F                     ___ftadd@exp1:	
   521  002F                     ___ftmul@sign:	
   522                           ; 1 bytes @ 0xF
   523                           
   524                           
   525                           ; 1 bytes @ 0xF
   526  002F                     	ds	1
   527  0030                     ?_UART_Init:	
   528  0030                     ?___ftdiv:	
   529                           ; 1 bytes @ 0x10
   530                           
   531  0030                     ?___fttol:	
   532                           ; 3 bytes @ 0x10
   533                           
   534  0030                     ___ftdiv@f2:	
   535                           ; 4 bytes @ 0x10
   536                           
   537  0030                     ___fttol@f1:	
   538                           ; 3 bytes @ 0x10
   539                           
   540  0030                     UART_Init@var_baudRate_u32:	
   541                           ; 3 bytes @ 0x10
   542                           
   543                           
   544                           ; 4 bytes @ 0x10
   545  0030                     	ds	3
   546  0033                     ___ftdiv@f1:	
   547                           
   548                           ; 3 bytes @ 0x13
   549  0033                     	ds	1
   550  0034                     ??___fttol:	
   551                           
   552                           ; 1 bytes @ 0x14
   553  0034                     	ds	1
   554  0035                     UART_TxNumber@a:	
   555                           
   556                           ; 10 bytes @ 0x15
   557  0035                     	ds	1
   558  0036                     ??___ftdiv:	
   559                           
   560                           ; 1 bytes @ 0x16
   561  0036                     	ds	2
   562  0038                     ___fttol@sign1:	
   563                           
   564                           ; 1 bytes @ 0x18
   565  0038                     	ds	1
   566  0039                     ___fttol@lval:	
   567                           
   568                           ; 4 bytes @ 0x19
   569  0039                     	ds	1
   570  003A                     ___ftdiv@cntr:	
   571                           
   572                           ; 1 bytes @ 0x1A
   573  003A                     	ds	1
   574  003B                     ___ftdiv@f3:	
   575                           
   576                           ; 3 bytes @ 0x1B
   577  003B                     	ds	2
   578  003D                     ___fttol@exp1:	
   579                           
   580                           ; 1 bytes @ 0x1D
   581  003D                     	ds	1
   582  003E                     ___ftdiv@exp:	
   583                           
   584                           ; 1 bytes @ 0x1E
   585  003E                     	ds	1
   586  003F                     ___ftdiv@sign:	
   587  003F                     _UART_TxNumber$63:	
   588                           ; 1 bytes @ 0x1F
   589                           
   590                           
   591                           ; 2 bytes @ 0x1F
   592  003F                     	ds	2
   593  0041                     UART_TxNumber@v_numericSystem_u8:	
   594                           
   595                           ; 1 bytes @ 0x21
   596  0041                     	ds	1
   597  0042                     UART_TxNumber@i:	
   598                           
   599                           ; 1 bytes @ 0x22
   600  0042                     	ds	1
   601  0043                     ?_UART_TxFloatNumber:	
   602  0043                     UART_TxFloatNumber@v_floatNumber_f32:	
   603                           ; 1 bytes @ 0x23
   604                           
   605                           
   606                           ; 3 bytes @ 0x23
   607  0043                     	ds	3
   608  0046                     ??_UART_TxFloatNumber:	
   609                           
   610                           ; 1 bytes @ 0x26
   611  0046                     	ds	1
   612  0047                     UART_TxFloatNumber@v_tempNumber_u32:	
   613                           
   614                           ; 4 bytes @ 0x27
   615  0047                     	ds	4
   616  004B                     ?_UART_Printf:	
   617                           
   618                           ; 1 bytes @ 0x2B
   619  004B                     	ds	5
   620  0050                     ??_UART_Printf:	
   621                           
   622                           ; 1 bytes @ 0x30
   623  0050                     	ds	2
   624  0052                     UART_Printf@v_floatNum_f32:	
   625                           
   626                           ; 3 bytes @ 0x32
   627  0052                     	ds	3
   628  0055                     UART_Printf@str:	
   629                           
   630                           ; 1 bytes @ 0x35
   631  0055                     	ds	1
   632  0056                     UART_Printf@argList:	
   633                           
   634                           ; 1 bytes @ 0x36
   635  0056                     	ds	1
   636  0057                     UART_Printf@v_num_s32:	
   637                           
   638                           ; 4 bytes @ 0x37
   639  0057                     	ds	4
   640  005B                     UART_Printf@v_num_s16:	
   641                           
   642                           ; 2 bytes @ 0x3B
   643  005B                     	ds	2
   644  005D                     UART_Printf@v_num_u32:	
   645                           
   646                           ; 4 bytes @ 0x3D
   647  005D                     	ds	4
   648  0061                     UART_Printf@v_num_u16:	
   649                           
   650                           ; 2 bytes @ 0x41
   651  0061                     	ds	2
   652  0063                     UART_Printf@ptr:	
   653                           
   654                           ; 1 bytes @ 0x43
   655  0063                     	ds	1
   656  0064                     UART_Printf@ch:	
   657                           
   658                           ; 1 bytes @ 0x44
   659  0064                     	ds	1
   660  0065                     UART_Printf@v_numOfDigitsToTransmit_u8:	
   661                           
   662                           ; 1 bytes @ 0x45
   663  0065                     	ds	1
   664  0066                     UART_Printf@argp:	
   665                           
   666                           ; 1 bytes @ 0x46
   667  0066                     	ds	1
   668  0067                     main@volt:	
   669                           
   670                           ; 3 bytes @ 0x47
   671  0067                     	ds	3
   672  006A                     main@adcValue:	
   673                           
   674                           ; 2 bytes @ 0x4A
   675  006A                     	ds	2
   676                           
   677                           	psect	maintext
   678  0F98                     __pmaintext:	
   679 ;;
   680 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   681 ;;
   682 ;; *************** function _main *****************
   683 ;; Defined at:
   684 ;;		line 41 in file "main.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;		None
   687 ;; Auto vars:     Size  Location     Type
   688 ;;  volt            3   71[BANK0 ] float 
   689 ;;  adcValue        2   74[BANK0 ] int 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  2  172[None  ] int 
   692 ;; Registers used:
   693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : B00/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   699 ;;      Params:         0       0       0       0       0
   700 ;;      Locals:         0       5       0       0       0
   701 ;;      Temps:          0       0       0       0       0
   702 ;;      Totals:         0       5       0       0       0
   703 ;;Total ram usage:        5 bytes
   704 ;; Hardware stack levels required when called:    4
   705 ;; This function calls:
   706 ;;		_ADC_GetAdcValue
   707 ;;		_ADC_Init
   708 ;;		_UART_Init
   709 ;;		_UART_Printf
   710 ;;		___awtoft
   711 ;;		___ftdiv
   712 ;;		___ftmul
   713 ;; This function is called by:
   714 ;;		Startup code after reset
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           
   719                           ;psect for function _main
   720  0F98                     _main:	
   721                           
   722                           ;main.c: 43: int adcValue;
   723                           ;main.c: 44: float volt;
   724                           ;main.c: 46: ADC_Init();
   725                           
   726                           ;incstack = 0
   727                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   728  0F98  120A  158A  2666  120A  158A  	fcall	_ADC_Init
   729                           
   730                           ;main.c: 47: UART_Init(9600);
   731  0F9D  3000               	movlw	0
   732  0F9E  1283               	bcf	3,5	;RP0=0, select bank0
   733  0F9F  1303               	bcf	3,6	;RP1=0, select bank0
   734  0FA0  00B3               	movwf	UART_Init@var_baudRate_u32+3
   735  0FA1  3000               	movlw	0
   736  0FA2  00B2               	movwf	UART_Init@var_baudRate_u32+2
   737  0FA3  3025               	movlw	37
   738  0FA4  00B1               	movwf	UART_Init@var_baudRate_u32+1
   739  0FA5  3080               	movlw	128
   740  0FA6  00B0               	movwf	UART_Init@var_baudRate_u32
   741  0FA7  120A  158A  26B4  120A  158A  	fcall	_UART_Init
   742  0FAC                     l173:	
   743                           ;main.c: 49: while(1)
   744                           
   745                           
   746                           ;main.c: 50: {
   747                           ;main.c: 51: adcValue = ADC_GetAdcValue(0);
   748  0FAC  3000               	movlw	0
   749  0FAD  120A  158A  26EB  120A  158A  	fcall	_ADC_GetAdcValue
   750  0FB2  0873               	movf	?_ADC_GetAdcValue+1,w
   751  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
   752  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
   753  0FB5  00EB               	movwf	main@adcValue+1
   754  0FB6  0872               	movf	?_ADC_GetAdcValue,w
   755  0FB7  00EA               	movwf	main@adcValue
   756                           
   757                           ;main.c: 52: volt = (adcValue*5.00)/1023;
   758  0FB8  30C0               	movlw	192
   759  0FB9  00B0               	movwf	___ftdiv@f2
   760  0FBA  307F               	movlw	127
   761  0FBB  00B1               	movwf	___ftdiv@f2+1
   762  0FBC  3044               	movlw	68
   763  0FBD  00B2               	movwf	___ftdiv@f2+2
   764  0FBE  3000               	movlw	0
   765  0FBF  00A0               	movwf	___ftmul@f1
   766  0FC0  30A0               	movlw	160
   767  0FC1  00A1               	movwf	___ftmul@f1+1
   768  0FC2  3040               	movlw	64
   769  0FC3  00A2               	movwf	___ftmul@f1+2
   770  0FC4  086B               	movf	main@adcValue+1,w
   771  0FC5  00F9               	movwf	___awtoft@c+1
   772  0FC6  086A               	movf	main@adcValue,w
   773  0FC7  00F8               	movwf	___awtoft@c
   774  0FC8  120A  158A  26CA  120A  158A  	fcall	___awtoft
   775  0FCD  0878               	movf	?___awtoft,w
   776  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
   777  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
   778  0FD0  00A3               	movwf	___ftmul@f2
   779  0FD1  0879               	movf	?___awtoft+1,w
   780  0FD2  00A4               	movwf	___ftmul@f2+1
   781  0FD3  087A               	movf	?___awtoft+2,w
   782  0FD4  00A5               	movwf	___ftmul@f2+2
   783  0FD5  120A  118A  22FC  120A  158A  	fcall	___ftmul
   784  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
   785  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
   786  0FDC  0820               	movf	?___ftmul,w
   787  0FDD  00B3               	movwf	___ftdiv@f1
   788  0FDE  0821               	movf	?___ftmul+1,w
   789  0FDF  00B4               	movwf	___ftdiv@f1+1
   790  0FE0  0822               	movf	?___ftmul+2,w
   791  0FE1  00B5               	movwf	___ftdiv@f1+2
   792  0FE2  120A  118A  2244  120A  158A  	fcall	___ftdiv
   793  0FE7  1283               	bcf	3,5	;RP0=0, select bank0
   794  0FE8  1303               	bcf	3,6	;RP1=0, select bank0
   795  0FE9  0830               	movf	?___ftdiv,w
   796  0FEA  00E7               	movwf	main@volt
   797  0FEB  0831               	movf	?___ftdiv+1,w
   798  0FEC  00E8               	movwf	main@volt+1
   799  0FED  0832               	movf	?___ftdiv+2,w
   800  0FEE  00E9               	movwf	main@volt+2
   801                           
   802                           ;main.c: 53: UART_Printf("ADC0 Value:%4d  Equivalent Voltage:%f\n\r",adcValue,volt);
   803  0FEF  086B               	movf	main@adcValue+1,w
   804  0FF0  00CC               	movwf	?_UART_Printf+1
   805  0FF1  086A               	movf	main@adcValue,w
   806  0FF2  00CB               	movwf	?_UART_Printf
   807  0FF3  0867               	movf	main@volt,w
   808  0FF4  00CD               	movwf	?_UART_Printf+2
   809  0FF5  0868               	movf	main@volt+1,w
   810  0FF6  00CE               	movwf	?_UART_Printf+3
   811  0FF7  0869               	movf	main@volt+2,w
   812  0FF8  00CF               	movwf	?_UART_Printf+4
   813  0FF9  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   814  0FFA  120A  118A  25CA  120A  158A  	fcall	_UART_Printf
   815  0FFF  2FAC               	goto	l173
   816  1000                     __end_of_main:	
   817                           ;main.c: 54: }
   818                           ;main.c: 56: return (0);
   819                           ;	Return value of _main is never used
   820                           
   821                           
   822                           	psect	text1
   823  0244                     __ptext1:	
   824 ;; *************** function ___ftdiv *****************
   825 ;; Defined at:
   826 ;;		line 56 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftdiv.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;  f2              3   16[BANK0 ] float 
   829 ;;  f1              3   19[BANK0 ] float 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  f3              3   27[BANK0 ] float 
   832 ;;  sign            1   31[BANK0 ] unsigned char 
   833 ;;  exp             1   30[BANK0 ] unsigned char 
   834 ;;  cntr            1   26[BANK0 ] unsigned char 
   835 ;; Return value:  Size  Location     Type
   836 ;;                  3   16[BANK0 ] float 
   837 ;; Registers used:
   838 ;;		wreg, status,2, status,0, pclath, cstack
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   844 ;;      Params:         0       6       0       0       0
   845 ;;      Locals:         0       6       0       0       0
   846 ;;      Temps:          0       4       0       0       0
   847 ;;      Totals:         0      16       0       0       0
   848 ;;Total ram usage:       16 bytes
   849 ;; Hardware stack levels used:    1
   850 ;; Hardware stack levels required when called:    1
   851 ;; This function calls:
   852 ;;		___ftpack
   853 ;; This function is called by:
   854 ;;		_main
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           
   859                           ;psect for function ___ftdiv
   860  0244                     ___ftdiv:	
   861                           
   862                           ;incstack = 0
   863                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
   864  0244  1283               	bcf	3,5	;RP0=0, select bank0
   865  0245  1303               	bcf	3,6	;RP1=0, select bank0
   866  0246  0833               	movf	___ftdiv@f1,w
   867  0247  00B6               	movwf	??___ftdiv
   868  0248  0834               	movf	___ftdiv@f1+1,w
   869  0249  00B7               	movwf	??___ftdiv+1
   870  024A  0835               	movf	___ftdiv@f1+2,w
   871  024B  00B8               	movwf	??___ftdiv+2
   872  024C  1003               	clrc
   873  024D  0D37               	rlf	??___ftdiv+1,w
   874  024E  0D38               	rlf	??___ftdiv+2,w
   875  024F  00B9               	movwf	??___ftdiv+3
   876  0250  0839               	movf	??___ftdiv+3,w
   877  0251  00BE               	movwf	___ftdiv@exp
   878  0252  083E               	movf	___ftdiv@exp,w
   879  0253  1D03               	btfss	3,2
   880  0254  2A5C               	goto	l1710
   881  0255  3000               	movlw	0
   882  0256  00B0               	movwf	?___ftdiv
   883  0257  3000               	movlw	0
   884  0258  00B1               	movwf	?___ftdiv+1
   885  0259  3000               	movlw	0
   886  025A  00B2               	movwf	?___ftdiv+2
   887  025B  0008               	return
   888  025C                     l1710:	
   889  025C  0830               	movf	___ftdiv@f2,w
   890  025D  00B6               	movwf	??___ftdiv
   891  025E  0831               	movf	___ftdiv@f2+1,w
   892  025F  00B7               	movwf	??___ftdiv+1
   893  0260  0832               	movf	___ftdiv@f2+2,w
   894  0261  00B8               	movwf	??___ftdiv+2
   895  0262  1003               	clrc
   896  0263  0D37               	rlf	??___ftdiv+1,w
   897  0264  0D38               	rlf	??___ftdiv+2,w
   898  0265  00B9               	movwf	??___ftdiv+3
   899  0266  0839               	movf	??___ftdiv+3,w
   900  0267  00BF               	movwf	___ftdiv@sign
   901  0268  083F               	movf	___ftdiv@sign,w
   902  0269  1D03               	btfss	3,2
   903  026A  2A72               	goto	l1716
   904  026B  3000               	movlw	0
   905  026C  00B0               	movwf	?___ftdiv
   906  026D  3000               	movlw	0
   907  026E  00B1               	movwf	?___ftdiv+1
   908  026F  3000               	movlw	0
   909  0270  00B2               	movwf	?___ftdiv+2
   910  0271  0008               	return
   911  0272                     l1716:	
   912  0272  3000               	movlw	0
   913  0273  00BB               	movwf	___ftdiv@f3
   914  0274  3000               	movlw	0
   915  0275  00BC               	movwf	___ftdiv@f3+1
   916  0276  3000               	movlw	0
   917  0277  00BD               	movwf	___ftdiv@f3+2
   918  0278  3089               	movlw	137
   919  0279  073F               	addwf	___ftdiv@sign,w
   920  027A  00B6               	movwf	??___ftdiv
   921  027B  0836               	movf	??___ftdiv,w
   922  027C  02BE               	subwf	___ftdiv@exp,f
   923  027D  0833               	movf	___ftdiv@f1,w
   924  027E  00B6               	movwf	??___ftdiv
   925  027F  0834               	movf	___ftdiv@f1+1,w
   926  0280  00B7               	movwf	??___ftdiv+1
   927  0281  0835               	movf	___ftdiv@f1+2,w
   928  0282  00B8               	movwf	??___ftdiv+2
   929  0283  3010               	movlw	16
   930  0284                     u2255:	
   931  0284  1003               	clrc
   932  0285  0CB8               	rrf	??___ftdiv+2,f
   933  0286  0CB7               	rrf	??___ftdiv+1,f
   934  0287  0CB6               	rrf	??___ftdiv,f
   935  0288  3EFF               	addlw	-1
   936  0289  1D03               	skipz
   937  028A  2A84               	goto	u2255
   938  028B  0836               	movf	??___ftdiv,w
   939  028C  00B9               	movwf	??___ftdiv+3
   940  028D  0839               	movf	??___ftdiv+3,w
   941  028E  00BF               	movwf	___ftdiv@sign
   942  028F  0830               	movf	___ftdiv@f2,w
   943  0290  00B6               	movwf	??___ftdiv
   944  0291  0831               	movf	___ftdiv@f2+1,w
   945  0292  00B7               	movwf	??___ftdiv+1
   946  0293  0832               	movf	___ftdiv@f2+2,w
   947  0294  00B8               	movwf	??___ftdiv+2
   948  0295  3010               	movlw	16
   949  0296                     u2265:	
   950  0296  1003               	clrc
   951  0297  0CB8               	rrf	??___ftdiv+2,f
   952  0298  0CB7               	rrf	??___ftdiv+1,f
   953  0299  0CB6               	rrf	??___ftdiv,f
   954  029A  3EFF               	addlw	-1
   955  029B  1D03               	skipz
   956  029C  2A96               	goto	u2265
   957  029D  0836               	movf	??___ftdiv,w
   958  029E  00B9               	movwf	??___ftdiv+3
   959  029F  0839               	movf	??___ftdiv+3,w
   960  02A0  06BF               	xorwf	___ftdiv@sign,f
   961  02A1  3080               	movlw	128
   962  02A2  00B6               	movwf	??___ftdiv
   963  02A3  0836               	movf	??___ftdiv,w
   964  02A4  05BF               	andwf	___ftdiv@sign,f
   965  02A5  17B4               	bsf	___ftdiv@f1+1,7
   966  02A6  30FF               	movlw	255
   967  02A7  05B3               	andwf	___ftdiv@f1,f
   968  02A8  30FF               	movlw	255
   969  02A9  05B4               	andwf	___ftdiv@f1+1,f
   970  02AA  3000               	movlw	0
   971  02AB  05B5               	andwf	___ftdiv@f1+2,f
   972  02AC  17B1               	bsf	___ftdiv@f2+1,7
   973  02AD  30FF               	movlw	255
   974  02AE  05B0               	andwf	___ftdiv@f2,f
   975  02AF  30FF               	movlw	255
   976  02B0  05B1               	andwf	___ftdiv@f2+1,f
   977  02B1  3000               	movlw	0
   978  02B2  05B2               	andwf	___ftdiv@f2+2,f
   979  02B3  3018               	movlw	24
   980  02B4  00B6               	movwf	??___ftdiv
   981  02B5  0836               	movf	??___ftdiv,w
   982  02B6  00BA               	movwf	___ftdiv@cntr
   983  02B7                     l1730:	
   984  02B7  3001               	movlw	1
   985  02B8                     u2275:	
   986  02B8  1003               	clrc
   987  02B9  0DBB               	rlf	___ftdiv@f3,f
   988  02BA  0DBC               	rlf	___ftdiv@f3+1,f
   989  02BB  0DBD               	rlf	___ftdiv@f3+2,f
   990  02BC  3EFF               	addlw	-1
   991  02BD  1D03               	skipz
   992  02BE  2AB8               	goto	u2275
   993  02BF  0832               	movf	___ftdiv@f2+2,w
   994  02C0  0235               	subwf	___ftdiv@f1+2,w
   995  02C1  1D03               	skipz
   996  02C2  2AC9               	goto	u2285
   997  02C3  0831               	movf	___ftdiv@f2+1,w
   998  02C4  0234               	subwf	___ftdiv@f1+1,w
   999  02C5  1D03               	skipz
  1000  02C6  2AC9               	goto	u2285
  1001  02C7  0830               	movf	___ftdiv@f2,w
  1002  02C8  0233               	subwf	___ftdiv@f1,w
  1003  02C9                     u2285:	
  1004  02C9  1C03               	skipc
  1005  02CA  2AD6               	goto	l1738
  1006  02CB  0830               	movf	___ftdiv@f2,w
  1007  02CC  02B3               	subwf	___ftdiv@f1,f
  1008  02CD  0831               	movf	___ftdiv@f2+1,w
  1009  02CE  1C03               	skipc
  1010  02CF  0F31               	incfsz	___ftdiv@f2+1,w
  1011  02D0  02B4               	subwf	___ftdiv@f1+1,f
  1012  02D1  0832               	movf	___ftdiv@f2+2,w
  1013  02D2  1C03               	skipc
  1014  02D3  0A32               	incf	___ftdiv@f2+2,w
  1015  02D4  02B5               	subwf	___ftdiv@f1+2,f
  1016  02D5  143B               	bsf	___ftdiv@f3,0
  1017  02D6                     l1738:	
  1018  02D6  3001               	movlw	1
  1019  02D7                     u2295:	
  1020  02D7  1003               	clrc
  1021  02D8  0DB3               	rlf	___ftdiv@f1,f
  1022  02D9  0DB4               	rlf	___ftdiv@f1+1,f
  1023  02DA  0DB5               	rlf	___ftdiv@f1+2,f
  1024  02DB  3EFF               	addlw	-1
  1025  02DC  1D03               	skipz
  1026  02DD  2AD7               	goto	u2295
  1027  02DE  3001               	movlw	1
  1028  02DF  02BA               	subwf	___ftdiv@cntr,f
  1029  02E0  1D03               	btfss	3,2
  1030  02E1  2AB7               	goto	l1730
  1031  02E2  083B               	movf	___ftdiv@f3,w
  1032  02E3  00F0               	movwf	___ftpack@arg
  1033  02E4  083C               	movf	___ftdiv@f3+1,w
  1034  02E5  00F1               	movwf	___ftpack@arg+1
  1035  02E6  083D               	movf	___ftdiv@f3+2,w
  1036  02E7  00F2               	movwf	___ftpack@arg+2
  1037  02E8  083E               	movf	___ftdiv@exp,w
  1038  02E9  00B6               	movwf	??___ftdiv
  1039  02EA  0836               	movf	??___ftdiv,w
  1040  02EB  00F3               	movwf	___ftpack@exp
  1041  02EC  083F               	movf	___ftdiv@sign,w
  1042  02ED  00B7               	movwf	??___ftdiv+1
  1043  02EE  0837               	movf	??___ftdiv+1,w
  1044  02EF  00F4               	movwf	___ftpack@sign
  1045  02F0  120A  118A  2031   	fcall	___ftpack
  1046  02F3  0870               	movf	?___ftpack,w
  1047  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  1048  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  1049  02F6  00B0               	movwf	?___ftdiv
  1050  02F7  0871               	movf	?___ftpack+1,w
  1051  02F8  00B1               	movwf	?___ftdiv+1
  1052  02F9  0872               	movf	?___ftpack+2,w
  1053  02FA  00B2               	movwf	?___ftdiv+2
  1054  02FB  0008               	return
  1055  02FC                     __end_of___ftdiv:	
  1056                           
  1057                           	psect	text2
  1058  0ECA                     __ptext2:	
  1059 ;; *************** function ___awtoft *****************
  1060 ;; Defined at:
  1061 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\awtoft.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  c               2    8[COMMON] int 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  sign            1   13[COMMON] unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  3    8[COMMON] float 
  1068 ;; Registers used:
  1069 ;;		wreg, status,2, status,0, pclath, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1075 ;;      Params:         3       0       0       0       0
  1076 ;;      Locals:         1       0       0       0       0
  1077 ;;      Temps:          2       0       0       0       0
  1078 ;;      Totals:         6       0       0       0       0
  1079 ;;Total ram usage:        6 bytes
  1080 ;; Hardware stack levels used:    1
  1081 ;; Hardware stack levels required when called:    1
  1082 ;; This function calls:
  1083 ;;		___ftpack
  1084 ;; This function is called by:
  1085 ;;		_main
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           
  1090                           ;psect for function ___awtoft
  1091  0ECA                     ___awtoft:	
  1092                           
  1093                           ;incstack = 0
  1094                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1095  0ECA  01FD               	clrf	___awtoft@sign
  1096  0ECB  1FF9               	btfss	___awtoft@c+1,7
  1097  0ECC  2ED4               	goto	l1700
  1098  0ECD  09F8               	comf	___awtoft@c,f
  1099  0ECE  09F9               	comf	___awtoft@c+1,f
  1100  0ECF  0AF8               	incf	___awtoft@c,f
  1101  0ED0  1903               	skipnz
  1102  0ED1  0AF9               	incf	___awtoft@c+1,f
  1103  0ED2  01FD               	clrf	___awtoft@sign
  1104  0ED3  0AFD               	incf	___awtoft@sign,f
  1105  0ED4                     l1700:	
  1106  0ED4  0878               	movf	___awtoft@c,w
  1107  0ED5  00F0               	movwf	___ftpack@arg
  1108  0ED6  0879               	movf	___awtoft@c+1,w
  1109  0ED7  00F1               	movwf	___ftpack@arg+1
  1110  0ED8  01F2               	clrf	___ftpack@arg+2
  1111  0ED9  308E               	movlw	142
  1112  0EDA  00FB               	movwf	??___awtoft
  1113  0EDB  087B               	movf	??___awtoft,w
  1114  0EDC  00F3               	movwf	___ftpack@exp
  1115  0EDD  087D               	movf	___awtoft@sign,w
  1116  0EDE  00FC               	movwf	??___awtoft+1
  1117  0EDF  087C               	movf	??___awtoft+1,w
  1118  0EE0  00F4               	movwf	___ftpack@sign
  1119  0EE1  120A  118A  2031   	fcall	___ftpack
  1120  0EE4  0870               	movf	?___ftpack,w
  1121  0EE5  00F8               	movwf	?___awtoft
  1122  0EE6  0871               	movf	?___ftpack+1,w
  1123  0EE7  00F9               	movwf	?___awtoft+1
  1124  0EE8  0872               	movf	?___ftpack+2,w
  1125  0EE9  00FA               	movwf	?___awtoft+2
  1126  0EEA  0008               	return
  1127  0EEB                     __end_of___awtoft:	
  1128                           
  1129                           	psect	text3
  1130  05CA                     __ptext3:	
  1131 ;; *************** function _UART_Printf *****************
  1132 ;; Defined at:
  1133 ;;		line 411 in file "../00-libfiles/uart.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  argList         1    wreg     PTR const unsigned char 
  1136 ;;		 -> STR_1(40), 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  argList         1   54[BANK0 ] PTR const unsigned char 
  1139 ;;		 -> STR_1(40), 
  1140 ;;  v_num_u32       4   61[BANK0 ] unsigned long 
  1141 ;;  v_num_s32       4   55[BANK0 ] long 
  1142 ;;  v_floatNum_f    3   50[BANK0 ] long 
  1143 ;;  v_num_u16       2   65[BANK0 ] unsigned int 
  1144 ;;  v_num_s16       2   59[BANK0 ] int 
  1145 ;;  argp            1   70[BANK0 ] PTR void [1]
  1146 ;;		 -> ?_UART_Printf(1), 
  1147 ;;  v_numOfDigit    1   69[BANK0 ] unsigned char 
  1148 ;;  ch              1   68[BANK0 ] unsigned char 
  1149 ;;  ptr             1   67[BANK0 ] PTR const unsigned char 
  1150 ;;		 -> STR_1(40), 
  1151 ;;  str             1   53[BANK0 ] PTR unsigned char 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         0       5       0       0       0
  1162 ;;      Locals:         0      21       0       0       0
  1163 ;;      Temps:          0       2       0       0       0
  1164 ;;      Totals:         0      28       0       0       0
  1165 ;;Total ram usage:       28 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    3
  1168 ;; This function calls:
  1169 ;;		_UART_TxChar
  1170 ;;		_UART_TxFloatNumber
  1171 ;;		_UART_TxNumber
  1172 ;;		_UART_TxString
  1173 ;;		___bmul
  1174 ;; This function is called by:
  1175 ;;		_main
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _UART_Printf
  1181  05CA                     _UART_Printf:	
  1182                           
  1183                           ;incstack = 0
  1184                           ; Regs used in _UART_Printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1185                           ;UART_Printf@argList stored from wreg
  1186  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1187  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1188  05CC  00D6               	movwf	UART_Printf@argList
  1189                           
  1190                           ;uart.c: 413: const char *ptr;
  1191                           ;uart.c: 414: va_list argp;
  1192                           ;uart.c: 415: sint16_t v_num_s16;
  1193                           ;uart.c: 416: sint32_t v_num_s32;
  1194                           ;uart.c: 417: uint16_t v_num_u16;
  1195                           ;uart.c: 418: uint32_t v_num_u32;
  1196                           ;uart.c: 419: char *str;
  1197                           ;uart.c: 420: char ch;
  1198                           ;uart.c: 421: uint8_t v_numOfDigitsToTransmit_u8;
  1199                           ;uart.c: 423: double v_floatNum_f32;
  1200                           ;uart.c: 427: *argp = __va_start();
  1201  05CD  304B               	movlw	(low (?_UART_Printf| 0))& (0+255)
  1202  05CE  00D0               	movwf	??_UART_Printf
  1203  05CF  0850               	movf	??_UART_Printf,w
  1204  05D0  00E6               	movwf	UART_Printf@argp
  1205                           
  1206                           ;uart.c: 430: for(ptr = argList; *ptr != '\0'; ptr++)
  1207  05D1  0856               	movf	UART_Printf@argList,w
  1208  05D2  00D0               	movwf	??_UART_Printf
  1209  05D3  0850               	movf	??_UART_Printf,w
  1210  05D4  00E3               	movwf	UART_Printf@ptr
  1211  05D5                     l1674:	
  1212  05D5  0863               	movf	UART_Printf@ptr,w
  1213  05D6  0084               	movwf	4
  1214  05D7  120A  118A  2003  120A  118A  	fcall	stringdir
  1215  05DC  3A00               	xorlw	0
  1216  05DD  1903               	btfsc	3,2
  1217  05DE  0008               	return
  1218                           
  1219                           ;uart.c: 431: {
  1220                           ;uart.c: 433: ch= *ptr;
  1221  05DF  0863               	movf	UART_Printf@ptr,w
  1222  05E0  0084               	movwf	4
  1223  05E1  120A  118A  2003  120A  118A  	fcall	stringdir
  1224  05E6  00D0               	movwf	??_UART_Printf
  1225  05E7  0850               	movf	??_UART_Printf,w
  1226  05E8  00E4               	movwf	UART_Printf@ch
  1227                           
  1228                           ;uart.c: 434: if(ch == '%')
  1229  05E9  3025               	movlw	37
  1230  05EA  0664               	xorwf	UART_Printf@ch,w
  1231  05EB  1D03               	btfss	3,2
  1232  05EC  2FEF               	goto	l1670
  1233                           
  1234                           ;uart.c: 435: {
  1235                           ;uart.c: 436: ptr++;
  1236  05ED  3001               	movlw	1
  1237  05EE  00D0               	movwf	??_UART_Printf
  1238  05EF  0850               	movf	??_UART_Printf,w
  1239  05F0  07E3               	addwf	UART_Printf@ptr,f
  1240                           
  1241                           ;uart.c: 437: ch = *ptr;
  1242  05F1  0863               	movf	UART_Printf@ptr,w
  1243  05F2  0084               	movwf	4
  1244  05F3  120A  118A  2003  120A  118A  	fcall	stringdir
  1245  05F8  00D0               	movwf	??_UART_Printf
  1246  05F9  0850               	movf	??_UART_Printf,w
  1247  05FA  00E4               	movwf	UART_Printf@ch
  1248                           
  1249                           ;uart.c: 438: if((ch>=0x30) && (ch<=0x39))
  1250  05FB  3030               	movlw	48
  1251  05FC  0264               	subwf	UART_Printf@ch,w
  1252  05FD  1C03               	skipc
  1253  05FE  2E2C               	goto	l1576
  1254  05FF  303A               	movlw	58
  1255  0600  0264               	subwf	UART_Printf@ch,w
  1256  0601  1803               	skipnc
  1257  0602  2E2C               	goto	l1576
  1258                           
  1259                           ;uart.c: 439: {
  1260                           ;uart.c: 440: v_numOfDigitsToTransmit_u8 = 0;
  1261  0603  01E5               	clrf	UART_Printf@v_numOfDigitsToTransmit_u8
  1262  0604                     l1572:	
  1263                           ;uart.c: 441: while((ch>=0x30) && (ch<=0x39))
  1264                           
  1265  0604  3030               	movlw	48
  1266  0605  0264               	subwf	UART_Printf@ch,w
  1267  0606  1C03               	skipc
  1268  0607  2FBD               	goto	l1668
  1269  0608  303A               	movlw	58
  1270  0609  0264               	subwf	UART_Printf@ch,w
  1271  060A  1803               	btfsc	3,0
  1272  060B  2FBD               	goto	l1668
  1273                           
  1274                           ;uart.c: 442: {
  1275                           ;uart.c: 443: v_numOfDigitsToTransmit_u8 = (v_numOfDigitsToTransmit_u8 * 10) + (ch-0x30)
      +                          ;
  1276  060C  300A               	movlw	10
  1277  060D  00D0               	movwf	??_UART_Printf
  1278  060E  0850               	movf	??_UART_Printf,w
  1279  060F  00A0               	movwf	___bmul@multiplicand
  1280  0610  0865               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1281  0611  120A  158A  268C  120A  118A  	fcall	___bmul
  1282  0616  1283               	bcf	3,5	;RP0=0, select bank0
  1283  0617  1303               	bcf	3,6	;RP1=0, select bank0
  1284  0618  0764               	addwf	UART_Printf@ch,w
  1285  0619  3ED0               	addlw	208
  1286  061A  00D1               	movwf	??_UART_Printf+1
  1287  061B  0851               	movf	??_UART_Printf+1,w
  1288  061C  00E5               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1289                           
  1290                           ;uart.c: 444: ptr++;
  1291  061D  3001               	movlw	1
  1292  061E  00D0               	movwf	??_UART_Printf
  1293  061F  0850               	movf	??_UART_Printf,w
  1294  0620  07E3               	addwf	UART_Printf@ptr,f
  1295                           
  1296                           ;uart.c: 445: ch = *ptr;
  1297  0621  0863               	movf	UART_Printf@ptr,w
  1298  0622  0084               	movwf	4
  1299  0623  120A  118A  2003  120A  118A  	fcall	stringdir
  1300  0628  00D0               	movwf	??_UART_Printf
  1301  0629  0850               	movf	??_UART_Printf,w
  1302  062A  00E4               	movwf	UART_Printf@ch
  1303  062B  2E04               	goto	l1572
  1304  062C                     l1576:	
  1305                           ;uart.c: 446: }
  1306                           ;uart.c: 447: }
  1307                           
  1308                           
  1309                           ;uart.c: 448: else
  1310                           ;uart.c: 449: {
  1311                           ;uart.c: 450: v_numOfDigitsToTransmit_u8 = 0xffu;
  1312  062C  30FF               	movlw	255
  1313  062D  00D0               	movwf	??_UART_Printf
  1314  062E  0850               	movf	??_UART_Printf,w
  1315  062F  00E5               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1316                           
  1317                           ;uart.c: 451: }
  1318                           ;uart.c: 454: switch(ch)
  1319  0630  2FBD               	goto	l1668
  1320  0631                     l1578:	
  1321                           ;uart.c: 455: {
  1322                           ;uart.c: 456: case 'C':
  1323                           
  1324                           
  1325                           ;uart.c: 457: case 'c':
  1326                           ;uart.c: 458: ch = (*(uint8_t *)__va_arg((*(uint8_t **)argp), (uint8_t)0));
  1327  0631  0866               	movf	UART_Printf@argp,w
  1328  0632  0084               	movwf	4
  1329  0633  1383               	bcf	3,7	;select IRP bank0
  1330  0634  0800               	movf	0,w
  1331  0635  00D0               	movwf	??_UART_Printf
  1332  0636  0850               	movf	??_UART_Printf,w
  1333  0637  00E4               	movwf	UART_Printf@ch
  1334  0638  3002               	movlw	2
  1335  0639  00D0               	movwf	??_UART_Printf
  1336  063A  0850               	movf	??_UART_Printf,w
  1337  063B  07E6               	addwf	UART_Printf@argp,f
  1338  063C  2FEF               	goto	l1670
  1339  063D                     l1584:	
  1340                           ;uart.c: 462: case 'd':
  1341                           
  1342                           ;uart.c: 460: break;
  1343                           
  1344                           ;uart.c: 459: UART_TxChar(ch);
  1345                           
  1346                           
  1347                           ;uart.c: 463: v_num_s16 = (*(sint16_t *)__va_arg((*(sint16_t **)argp), (sint16_t)0));
  1348  063D  1283               	bcf	3,5	;RP0=0, select bank0
  1349  063E  1303               	bcf	3,6	;RP1=0, select bank0
  1350  063F  0866               	movf	UART_Printf@argp,w
  1351  0640  0084               	movwf	4
  1352  0641  1383               	bcf	3,7	;select IRP bank0
  1353  0642  0800               	movf	0,w
  1354  0643  00DB               	movwf	UART_Printf@v_num_s16
  1355  0644  0A84               	incf	4,f
  1356  0645  0800               	movf	0,w
  1357  0646  00DC               	movwf	UART_Printf@v_num_s16+1
  1358  0647  3002               	movlw	2
  1359  0648  00D0               	movwf	??_UART_Printf
  1360  0649  0850               	movf	??_UART_Printf,w
  1361  064A  07E6               	addwf	UART_Printf@argp,f
  1362                           
  1363                           ;uart.c: 464: if(v_num_s16<0)
  1364  064B  1FDC               	btfss	UART_Printf@v_num_s16+1,7
  1365  064C  2E58               	goto	l1594
  1366                           
  1367                           ;uart.c: 465: {
  1368                           ;uart.c: 466: v_num_s16 = -v_num_s16;
  1369  064D  09DB               	comf	UART_Printf@v_num_s16,f
  1370  064E  09DC               	comf	UART_Printf@v_num_s16+1,f
  1371  064F  0ADB               	incf	UART_Printf@v_num_s16,f
  1372  0650  1903               	skipnz
  1373  0651  0ADC               	incf	UART_Printf@v_num_s16+1,f
  1374                           
  1375                           ;uart.c: 467: UART_TxChar('-');
  1376  0652  302D               	movlw	45
  1377  0653  120A  158A  266E  120A  118A  	fcall	_UART_TxChar
  1378  0658                     l1594:	
  1379                           
  1380                           ;uart.c: 468: }
  1381                           ;uart.c: 469: UART_TxNumber(10u,v_num_s16,v_numOfDigitsToTransmit_u8);
  1382  0658  1283               	bcf	3,5	;RP0=0, select bank0
  1383  0659  1303               	bcf	3,6	;RP1=0, select bank0
  1384  065A  085B               	movf	UART_Printf@v_num_s16,w
  1385  065B  00A4               	movwf	UART_TxNumber@v_number_u32
  1386  065C  085C               	movf	UART_Printf@v_num_s16+1,w
  1387  065D  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1388  065E  3000               	movlw	0
  1389  065F  1BA5               	btfsc	UART_TxNumber@v_number_u32+1,7
  1390  0660  30FF               	movlw	255
  1391  0661  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1392  0662  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1393  0663  0865               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1394  0664  00D0               	movwf	??_UART_Printf
  1395  0665  0850               	movf	??_UART_Printf,w
  1396  0666  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1397  0667  300A               	movlw	10
  1398  0668  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1399                           
  1400                           ;uart.c: 470: break;
  1401  066D  2FF5               	goto	l1672
  1402  066E                     l1596:	
  1403                           ;uart.c: 472: case 'D':
  1404                           
  1405                           
  1406                           ;uart.c: 473: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
  1407  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1408  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1409  0670  0866               	movf	UART_Printf@argp,w
  1410  0671  0084               	movwf	4
  1411  0672  1383               	bcf	3,7	;select IRP bank0
  1412  0673  0800               	movf	0,w
  1413  0674  00D7               	movwf	UART_Printf@v_num_s32
  1414  0675  0A84               	incf	4,f
  1415  0676  0800               	movf	0,w
  1416  0677  00D8               	movwf	UART_Printf@v_num_s32+1
  1417  0678  0A84               	incf	4,f
  1418  0679  0800               	movf	0,w
  1419  067A  00D9               	movwf	UART_Printf@v_num_s32+2
  1420  067B  0A84               	incf	4,f
  1421  067C  0800               	movf	0,w
  1422  067D  00DA               	movwf	UART_Printf@v_num_s32+3
  1423  067E  3004               	movlw	4
  1424  067F  00D0               	movwf	??_UART_Printf
  1425  0680  0850               	movf	??_UART_Printf,w
  1426  0681  07E6               	addwf	UART_Printf@argp,f
  1427                           
  1428                           ;uart.c: 474: if(v_num_s32<0)
  1429  0682  1FDA               	btfss	UART_Printf@v_num_s32+3,7
  1430  0683  2E95               	goto	l1606
  1431                           
  1432                           ;uart.c: 475: {
  1433                           ;uart.c: 476: v_num_s32 = -v_num_s32;
  1434  0684  09D7               	comf	UART_Printf@v_num_s32,f
  1435  0685  09D8               	comf	UART_Printf@v_num_s32+1,f
  1436  0686  09D9               	comf	UART_Printf@v_num_s32+2,f
  1437  0687  09DA               	comf	UART_Printf@v_num_s32+3,f
  1438  0688  0AD7               	incf	UART_Printf@v_num_s32,f
  1439  0689  1903               	skipnz
  1440  068A  0AD8               	incf	UART_Printf@v_num_s32+1,f
  1441  068B  1903               	skipnz
  1442  068C  0AD9               	incf	UART_Printf@v_num_s32+2,f
  1443  068D  1903               	skipnz
  1444  068E  0ADA               	incf	UART_Printf@v_num_s32+3,f
  1445                           
  1446                           ;uart.c: 477: UART_TxChar('-');
  1447  068F  302D               	movlw	45
  1448  0690  120A  158A  266E  120A  118A  	fcall	_UART_TxChar
  1449  0695                     l1606:	
  1450                           
  1451                           ;uart.c: 478: }
  1452                           ;uart.c: 479: UART_TxNumber(10u,v_num_s32,v_numOfDigitsToTransmit_u8);
  1453  0695  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0696  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0697  085A               	movf	UART_Printf@v_num_s32+3,w
  1456  0698  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1457  0699  0859               	movf	UART_Printf@v_num_s32+2,w
  1458  069A  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1459  069B  0858               	movf	UART_Printf@v_num_s32+1,w
  1460  069C  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1461  069D  0857               	movf	UART_Printf@v_num_s32,w
  1462  069E  00A4               	movwf	UART_TxNumber@v_number_u32
  1463  069F  0865               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1464  06A0  00D0               	movwf	??_UART_Printf
  1465  06A1  0850               	movf	??_UART_Printf,w
  1466  06A2  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1467  06A3  300A               	movlw	10
  1468  06A4  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1469                           
  1470                           ;uart.c: 480: break;
  1471  06A9  2FF5               	goto	l1672
  1472  06AA                     l1608:	
  1473                           ;uart.c: 482: case 'u':
  1474                           
  1475                           
  1476                           ;uart.c: 483: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1477  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  1478  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  1479  06AC  0866               	movf	UART_Printf@argp,w
  1480  06AD  0084               	movwf	4
  1481  06AE  1383               	bcf	3,7	;select IRP bank0
  1482  06AF  0800               	movf	0,w
  1483  06B0  00E1               	movwf	UART_Printf@v_num_u16
  1484  06B1  0A84               	incf	4,f
  1485  06B2  0800               	movf	0,w
  1486  06B3  00E2               	movwf	UART_Printf@v_num_u16+1
  1487  06B4  3002               	movlw	2
  1488  06B5  00D0               	movwf	??_UART_Printf
  1489  06B6  0850               	movf	??_UART_Printf,w
  1490  06B7  07E6               	addwf	UART_Printf@argp,f
  1491                           
  1492                           ;uart.c: 484: UART_TxNumber(10u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1493  06B8  0861               	movf	UART_Printf@v_num_u16,w
  1494  06B9  00A4               	movwf	UART_TxNumber@v_number_u32
  1495  06BA  0862               	movf	UART_Printf@v_num_u16+1,w
  1496  06BB  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1497  06BC  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1498  06BD  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1499  06BE  0865               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1500  06BF  00D0               	movwf	??_UART_Printf
  1501  06C0  0850               	movf	??_UART_Printf,w
  1502  06C1  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1503  06C2  300A               	movlw	10
  1504  06C3  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1505                           
  1506                           ;uart.c: 485: break;
  1507  06C8  2FF5               	goto	l1672
  1508  06C9                     l1614:	
  1509                           ;uart.c: 487: case 'U':
  1510                           
  1511                           
  1512                           ;uart.c: 488: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1513  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1514  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1515  06CB  0866               	movf	UART_Printf@argp,w
  1516  06CC  0084               	movwf	4
  1517  06CD  1383               	bcf	3,7	;select IRP bank0
  1518  06CE  0800               	movf	0,w
  1519  06CF  00DD               	movwf	UART_Printf@v_num_u32
  1520  06D0  0A84               	incf	4,f
  1521  06D1  0800               	movf	0,w
  1522  06D2  00DE               	movwf	UART_Printf@v_num_u32+1
  1523  06D3  0A84               	incf	4,f
  1524  06D4  0800               	movf	0,w
  1525  06D5  00DF               	movwf	UART_Printf@v_num_u32+2
  1526  06D6  0A84               	incf	4,f
  1527  06D7  0800               	movf	0,w
  1528  06D8  00E0               	movwf	UART_Printf@v_num_u32+3
  1529  06D9  3004               	movlw	4
  1530  06DA  00D0               	movwf	??_UART_Printf
  1531  06DB  0850               	movf	??_UART_Printf,w
  1532  06DC  07E6               	addwf	UART_Printf@argp,f
  1533                           
  1534                           ;uart.c: 489: UART_TxNumber(10u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1535  06DD  0860               	movf	UART_Printf@v_num_u32+3,w
  1536  06DE  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1537  06DF  085F               	movf	UART_Printf@v_num_u32+2,w
  1538  06E0  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1539  06E1  085E               	movf	UART_Printf@v_num_u32+1,w
  1540  06E2  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1541  06E3  085D               	movf	UART_Printf@v_num_u32,w
  1542  06E4  00A4               	movwf	UART_TxNumber@v_number_u32
  1543  06E5  0865               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1544  06E6  00D0               	movwf	??_UART_Printf
  1545  06E7  0850               	movf	??_UART_Printf,w
  1546  06E8  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1547  06E9  300A               	movlw	10
  1548  06EA  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1549                           
  1550                           ;uart.c: 490: break;
  1551  06EF  2FF5               	goto	l1672
  1552  06F0                     l1620:	
  1553                           ;uart.c: 492: case 'x':
  1554                           
  1555                           
  1556                           ;uart.c: 493: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1557  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  1558  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  1559  06F2  0866               	movf	UART_Printf@argp,w
  1560  06F3  0084               	movwf	4
  1561  06F4  1383               	bcf	3,7	;select IRP bank0
  1562  06F5  0800               	movf	0,w
  1563  06F6  00E1               	movwf	UART_Printf@v_num_u16
  1564  06F7  0A84               	incf	4,f
  1565  06F8  0800               	movf	0,w
  1566  06F9  00E2               	movwf	UART_Printf@v_num_u16+1
  1567  06FA  3002               	movlw	2
  1568  06FB  00D0               	movwf	??_UART_Printf
  1569  06FC  0850               	movf	??_UART_Printf,w
  1570  06FD  07E6               	addwf	UART_Printf@argp,f
  1571                           
  1572                           ;uart.c: 494: UART_TxNumber(16u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1573  06FE  0861               	movf	UART_Printf@v_num_u16,w
  1574  06FF  00A4               	movwf	UART_TxNumber@v_number_u32
  1575  0700  0862               	movf	UART_Printf@v_num_u16+1,w
  1576  0701  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1577  0702  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1578  0703  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1579  0704  0865               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1580  0705  00D0               	movwf	??_UART_Printf
  1581  0706  0850               	movf	??_UART_Printf,w
  1582  0707  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1583  0708  3010               	movlw	16
  1584  0709  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1585                           
  1586                           ;uart.c: 495: break;
  1587  070E  2FF5               	goto	l1672
  1588  070F                     l1626:	
  1589                           ;uart.c: 497: case 'X':
  1590                           
  1591                           
  1592                           ;uart.c: 498: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1593  070F  1283               	bcf	3,5	;RP0=0, select bank0
  1594  0710  1303               	bcf	3,6	;RP1=0, select bank0
  1595  0711  0866               	movf	UART_Printf@argp,w
  1596  0712  0084               	movwf	4
  1597  0713  1383               	bcf	3,7	;select IRP bank0
  1598  0714  0800               	movf	0,w
  1599  0715  00DD               	movwf	UART_Printf@v_num_u32
  1600  0716  0A84               	incf	4,f
  1601  0717  0800               	movf	0,w
  1602  0718  00DE               	movwf	UART_Printf@v_num_u32+1
  1603  0719  0A84               	incf	4,f
  1604  071A  0800               	movf	0,w
  1605  071B  00DF               	movwf	UART_Printf@v_num_u32+2
  1606  071C  0A84               	incf	4,f
  1607  071D  0800               	movf	0,w
  1608  071E  00E0               	movwf	UART_Printf@v_num_u32+3
  1609  071F  3004               	movlw	4
  1610  0720  00D0               	movwf	??_UART_Printf
  1611  0721  0850               	movf	??_UART_Printf,w
  1612  0722  07E6               	addwf	UART_Printf@argp,f
  1613                           
  1614                           ;uart.c: 499: UART_TxNumber(16u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1615  0723  0860               	movf	UART_Printf@v_num_u32+3,w
  1616  0724  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1617  0725  085F               	movf	UART_Printf@v_num_u32+2,w
  1618  0726  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1619  0727  085E               	movf	UART_Printf@v_num_u32+1,w
  1620  0728  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1621  0729  085D               	movf	UART_Printf@v_num_u32,w
  1622  072A  00A4               	movwf	UART_TxNumber@v_number_u32
  1623  072B  0865               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1624  072C  00D0               	movwf	??_UART_Printf
  1625  072D  0850               	movf	??_UART_Printf,w
  1626  072E  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1627  072F  3010               	movlw	16
  1628  0730  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1629                           
  1630                           ;uart.c: 500: break;
  1631  0735  2FF5               	goto	l1672
  1632  0736                     l1632:	
  1633                           ;uart.c: 503: case 'b':
  1634                           
  1635                           
  1636                           ;uart.c: 504: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1637  0736  1283               	bcf	3,5	;RP0=0, select bank0
  1638  0737  1303               	bcf	3,6	;RP1=0, select bank0
  1639  0738  0866               	movf	UART_Printf@argp,w
  1640  0739  0084               	movwf	4
  1641  073A  1383               	bcf	3,7	;select IRP bank0
  1642  073B  0800               	movf	0,w
  1643  073C  00E1               	movwf	UART_Printf@v_num_u16
  1644  073D  0A84               	incf	4,f
  1645  073E  0800               	movf	0,w
  1646  073F  00E2               	movwf	UART_Printf@v_num_u16+1
  1647  0740  3002               	movlw	2
  1648  0741  00D0               	movwf	??_UART_Printf
  1649  0742  0850               	movf	??_UART_Printf,w
  1650  0743  07E6               	addwf	UART_Printf@argp,f
  1651                           
  1652                           ;uart.c: 506: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1653  0744  0A65               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1654  0745  1D03               	btfss	3,2
  1655  0746  2F4B               	goto	l1640
  1656                           
  1657                           ;uart.c: 507: v_numOfDigitsToTransmit_u8 = 16;
  1658  0747  3010               	movlw	16
  1659  0748  00D0               	movwf	??_UART_Printf
  1660  0749  0850               	movf	??_UART_Printf,w
  1661  074A  00E5               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1662  074B                     l1640:	
  1663                           
  1664                           ;uart.c: 509: UART_TxNumber(2u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1665  074B  0861               	movf	UART_Printf@v_num_u16,w
  1666  074C  00A4               	movwf	UART_TxNumber@v_number_u32
  1667  074D  0862               	movf	UART_Printf@v_num_u16+1,w
  1668  074E  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1669  074F  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1670  0750  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1671  0751  0865               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1672  0752  00D0               	movwf	??_UART_Printf
  1673  0753  0850               	movf	??_UART_Printf,w
  1674  0754  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1675  0755  3002               	movlw	2
  1676  0756  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1677                           
  1678                           ;uart.c: 510: break;
  1679  075B  2FF5               	goto	l1672
  1680  075C                     l1642:	
  1681                           ;uart.c: 512: case 'B':
  1682                           
  1683                           
  1684                           ;uart.c: 513: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1685  075C  1283               	bcf	3,5	;RP0=0, select bank0
  1686  075D  1303               	bcf	3,6	;RP1=0, select bank0
  1687  075E  0866               	movf	UART_Printf@argp,w
  1688  075F  0084               	movwf	4
  1689  0760  1383               	bcf	3,7	;select IRP bank0
  1690  0761  0800               	movf	0,w
  1691  0762  00DD               	movwf	UART_Printf@v_num_u32
  1692  0763  0A84               	incf	4,f
  1693  0764  0800               	movf	0,w
  1694  0765  00DE               	movwf	UART_Printf@v_num_u32+1
  1695  0766  0A84               	incf	4,f
  1696  0767  0800               	movf	0,w
  1697  0768  00DF               	movwf	UART_Printf@v_num_u32+2
  1698  0769  0A84               	incf	4,f
  1699  076A  0800               	movf	0,w
  1700  076B  00E0               	movwf	UART_Printf@v_num_u32+3
  1701  076C  3004               	movlw	4
  1702  076D  00D0               	movwf	??_UART_Printf
  1703  076E  0850               	movf	??_UART_Printf,w
  1704  076F  07E6               	addwf	UART_Printf@argp,f
  1705                           
  1706                           ;uart.c: 515: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1707  0770  0A65               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1708  0771  1D03               	btfss	3,2
  1709  0772  2F77               	goto	l1650
  1710                           
  1711                           ;uart.c: 516: v_numOfDigitsToTransmit_u8 = 32;
  1712  0773  3020               	movlw	32
  1713  0774  00D0               	movwf	??_UART_Printf
  1714  0775  0850               	movf	??_UART_Printf,w
  1715  0776  00E5               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1716  0777                     l1650:	
  1717                           
  1718                           ;uart.c: 518: UART_TxNumber(2u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1719  0777  0860               	movf	UART_Printf@v_num_u32+3,w
  1720  0778  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1721  0779  085F               	movf	UART_Printf@v_num_u32+2,w
  1722  077A  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1723  077B  085E               	movf	UART_Printf@v_num_u32+1,w
  1724  077C  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1725  077D  085D               	movf	UART_Printf@v_num_u32,w
  1726  077E  00A4               	movwf	UART_TxNumber@v_number_u32
  1727  077F  0865               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1728  0780  00D0               	movwf	??_UART_Printf
  1729  0781  0850               	movf	??_UART_Printf,w
  1730  0782  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1731  0783  3002               	movlw	2
  1732  0784  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1733                           
  1734                           ;uart.c: 519: break;
  1735  0789  2FF5               	goto	l1672
  1736  078A                     l1652:	
  1737                           ;uart.c: 522: case 'F':
  1738                           
  1739                           
  1740                           ;uart.c: 523: case 'f':
  1741                           ;uart.c: 525: v_floatNum_f32 = (*(double *)__va_arg((*(double **)argp), (double)0));
  1742  078A  1283               	bcf	3,5	;RP0=0, select bank0
  1743  078B  1303               	bcf	3,6	;RP1=0, select bank0
  1744  078C  0866               	movf	UART_Printf@argp,w
  1745  078D  0084               	movwf	4
  1746  078E  1383               	bcf	3,7	;select IRP bank0
  1747  078F  0800               	movf	0,w
  1748  0790  00D2               	movwf	UART_Printf@v_floatNum_f32
  1749  0791  0A84               	incf	4,f
  1750  0792  0800               	movf	0,w
  1751  0793  00D3               	movwf	UART_Printf@v_floatNum_f32+1
  1752  0794  0A84               	incf	4,f
  1753  0795  0800               	movf	0,w
  1754  0796  00D4               	movwf	UART_Printf@v_floatNum_f32+2
  1755  0797  3003               	movlw	3
  1756  0798  00D0               	movwf	??_UART_Printf
  1757  0799  0850               	movf	??_UART_Printf,w
  1758  079A  07E6               	addwf	UART_Printf@argp,f
  1759                           
  1760                           ;uart.c: 526: UART_TxFloatNumber(v_floatNum_f32);
  1761  079B  0852               	movf	UART_Printf@v_floatNum_f32,w
  1762  079C  00C3               	movwf	UART_TxFloatNumber@v_floatNumber_f32
  1763  079D  0853               	movf	UART_Printf@v_floatNum_f32+1,w
  1764  079E  00C4               	movwf	UART_TxFloatNumber@v_floatNumber_f32+1
  1765  079F  0854               	movf	UART_Printf@v_floatNum_f32+2,w
  1766  07A0  00C5               	movwf	UART_TxFloatNumber@v_floatNumber_f32+2
  1767  07A1  120A  118A  21A5  120A  118A  	fcall	_UART_TxFloatNumber
  1768                           
  1769                           ;uart.c: 528: break;
  1770  07A6  2FF5               	goto	l1672
  1771  07A7                     l1658:	
  1772                           ;uart.c: 531: case 'S':
  1773                           
  1774                           
  1775                           ;uart.c: 532: case 's':
  1776                           ;uart.c: 533: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  1777  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1778  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1779  07A9  0866               	movf	UART_Printf@argp,w
  1780  07AA  0084               	movwf	4
  1781  07AB  1383               	bcf	3,7	;select IRP bank0
  1782  07AC  0800               	movf	0,w
  1783  07AD  00D0               	movwf	??_UART_Printf
  1784  07AE  0850               	movf	??_UART_Printf,w
  1785  07AF  00D5               	movwf	UART_Printf@str
  1786  07B0  3001               	movlw	1
  1787  07B1  00D0               	movwf	??_UART_Printf
  1788  07B2  0850               	movf	??_UART_Printf,w
  1789  07B3  07E6               	addwf	UART_Printf@argp,f
  1790                           
  1791                           ;uart.c: 534: UART_TxString(str);
  1792  07B4  0855               	movf	UART_Printf@str,w
  1793  07B5  120A  158A  269F  120A  118A  	fcall	_UART_TxString
  1794                           
  1795                           ;uart.c: 535: break;
  1796  07BA  2FF5               	goto	l1672
  1797  07BB                     l1664:	
  1798                           ;uart.c: 537: case '%':
  1799                           
  1800                           
  1801                           ;uart.c: 538: UART_TxChar('%');
  1802  07BB  3025               	movlw	37
  1803  07BC  2FF0               	goto	L1
  1804  07BD                     l1668:	
  1805                           ;uart.c: 540: }
  1806                           
  1807                           ;uart.c: 539: break;
  1808                           
  1809  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1810  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1811  07BF  0864               	movf	UART_Printf@ch,w
  1812                           
  1813                           ; Switch size 1, requested type "space"
  1814                           ; Number of cases is 15, Range of values is 37 to 120
  1815                           ; switch strategies available:
  1816                           ; Name         Instructions Cycles
  1817                           ; simple_byte           46    24 (average)
  1818                           ; direct_byte          263    11 (fixed)
  1819                           ; jumptable            263     9 (fixed)
  1820                           ;	Chosen strategy is simple_byte
  1821  07C0  3A25               	xorlw	37	; case 37
  1822  07C1  1903               	skipnz
  1823  07C2  2FBB               	goto	l1664
  1824  07C3  3A67               	xorlw	103	; case 66
  1825  07C4  1903               	skipnz
  1826  07C5  2F5C               	goto	l1642
  1827  07C6  3A01               	xorlw	1	; case 67
  1828  07C7  1903               	skipnz
  1829  07C8  2E31               	goto	l1578
  1830  07C9  3A07               	xorlw	7	; case 68
  1831  07CA  1903               	skipnz
  1832  07CB  2E6E               	goto	l1596
  1833  07CC  3A02               	xorlw	2	; case 70
  1834  07CD  1903               	skipnz
  1835  07CE  2F8A               	goto	l1652
  1836  07CF  3A15               	xorlw	21	; case 83
  1837  07D0  1903               	skipnz
  1838  07D1  2FA7               	goto	l1658
  1839  07D2  3A06               	xorlw	6	; case 85
  1840  07D3  1903               	skipnz
  1841  07D4  2EC9               	goto	l1614
  1842  07D5  3A0D               	xorlw	13	; case 88
  1843  07D6  1903               	skipnz
  1844  07D7  2F0F               	goto	l1626
  1845  07D8  3A3A               	xorlw	58	; case 98
  1846  07D9  1903               	skipnz
  1847  07DA  2F36               	goto	l1632
  1848  07DB  3A01               	xorlw	1	; case 99
  1849  07DC  1903               	skipnz
  1850  07DD  2E31               	goto	l1578
  1851  07DE  3A07               	xorlw	7	; case 100
  1852  07DF  1903               	skipnz
  1853  07E0  2E3D               	goto	l1584
  1854  07E1  3A02               	xorlw	2	; case 102
  1855  07E2  1903               	skipnz
  1856  07E3  2F8A               	goto	l1652
  1857  07E4  3A15               	xorlw	21	; case 115
  1858  07E5  1903               	skipnz
  1859  07E6  2FA7               	goto	l1658
  1860  07E7  3A06               	xorlw	6	; case 117
  1861  07E8  1903               	skipnz
  1862  07E9  2EAA               	goto	l1608
  1863  07EA  3A0D               	xorlw	13	; case 120
  1864  07EB  1903               	skipnz
  1865  07EC  2EF0               	goto	l1620
  1866  07ED  2FF5               	goto	l1672
  1867                           
  1868                           ;uart.c: 541: }
  1869  07EE  2FF5               	goto	l1672
  1870  07EF                     l1670:	
  1871                           
  1872                           ;uart.c: 542: else
  1873                           ;uart.c: 543: {
  1874                           ;uart.c: 545: UART_TxChar(ch);
  1875  07EF  0864               	movf	UART_Printf@ch,w
  1876  07F0                     L1:	
  1877  07F0  120A  158A  266E  120A  118A  	fcall	_UART_TxChar
  1878  07F5                     l1672:	
  1879  07F5  3001               	movlw	1
  1880  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  1881  07F7  1303               	bcf	3,6	;RP1=0, select bank0
  1882  07F8  00D0               	movwf	??_UART_Printf
  1883  07F9  0850               	movf	??_UART_Printf,w
  1884  07FA  07E3               	addwf	UART_Printf@ptr,f
  1885  07FB  2DD5               	goto	l1674
  1886  07FC                     __end_of_UART_Printf:	
  1887                           
  1888                           	psect	text4
  1889  0E9F                     __ptext4:	
  1890 ;; *************** function _UART_TxString *****************
  1891 ;; Defined at:
  1892 ;;		line 168 in file "../00-libfiles/uart.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  ptr_string      1    wreg     PTR unsigned char 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  ptr_string      1    2[COMMON] PTR unsigned char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1906 ;;      Params:         0       0       0       0       0
  1907 ;;      Locals:         1       0       0       0       0
  1908 ;;      Temps:          1       0       0       0       0
  1909 ;;      Totals:         2       0       0       0       0
  1910 ;;Total ram usage:        2 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:    1
  1913 ;; This function calls:
  1914 ;;		_UART_TxChar
  1915 ;; This function is called by:
  1916 ;;		_UART_Printf
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           
  1921                           ;psect for function _UART_TxString
  1922  0E9F                     _UART_TxString:	
  1923                           
  1924                           ;incstack = 0
  1925                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1926                           ;UART_TxString@ptr_string stored from wreg
  1927  0E9F  00F2               	movwf	UART_TxString@ptr_string
  1928  0EA0                     l1528:	
  1929                           ;uart.c: 170: while(*ptr_string)
  1930                           
  1931  0EA0  0872               	movf	UART_TxString@ptr_string,w
  1932  0EA1  0084               	movwf	4
  1933  0EA2  1383               	bcf	3,7	;select IRP bank0
  1934  0EA3  0800               	movf	0,w
  1935  0EA4  1903               	btfsc	3,2
  1936  0EA5  0008               	return
  1937                           
  1938                           ;uart.c: 171: UART_TxChar(*ptr_string++);
  1939  0EA6  0872               	movf	UART_TxString@ptr_string,w
  1940  0EA7  0084               	movwf	4
  1941  0EA8  1383               	bcf	3,7	;select IRP bank0
  1942  0EA9  0800               	movf	0,w
  1943  0EAA  120A  158A  266E  120A  158A  	fcall	_UART_TxChar
  1944  0EAF  3001               	movlw	1
  1945  0EB0  00F1               	movwf	??_UART_TxString
  1946  0EB1  0871               	movf	??_UART_TxString,w
  1947  0EB2  07F2               	addwf	UART_TxString@ptr_string,f
  1948  0EB3  2EA0               	goto	l1528
  1949  0EB4                     __end_of_UART_TxString:	
  1950                           
  1951                           	psect	text5
  1952  01A5                     __ptext5:	
  1953 ;; *************** function _UART_TxFloatNumber *****************
  1954 ;; Defined at:
  1955 ;;		line 348 in file "../00-libfiles/uart.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;  v_floatNumbe    3   35[BANK0 ] float 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  v_tempNumber    4   39[BANK0 ] unsigned long 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1969 ;;      Params:         0       3       0       0       0
  1970 ;;      Locals:         0       4       0       0       0
  1971 ;;      Temps:          0       1       0       0       0
  1972 ;;      Totals:         0       8       0       0       0
  1973 ;;Total ram usage:        8 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:    2
  1976 ;; This function calls:
  1977 ;;		_UART_TxChar
  1978 ;;		_UART_TxNumber
  1979 ;;		___ftadd
  1980 ;;		___ftmul
  1981 ;;		___ftneg
  1982 ;;		___fttol
  1983 ;;		___lltoft
  1984 ;; This function is called by:
  1985 ;;		_UART_Printf
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           
  1990                           ;psect for function _UART_TxFloatNumber
  1991  01A5                     _UART_TxFloatNumber:	
  1992                           
  1993                           ;uart.c: 350: uint32_t v_tempNumber_u32;
  1994                           ;uart.c: 357: v_tempNumber_u32 = (uint32_t) v_floatNumber_f32;
  1995                           
  1996                           ;incstack = 0
  1997                           ; Regs used in _UART_TxFloatNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1998  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1999  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  2000  01A7  0843               	movf	UART_TxFloatNumber@v_floatNumber_f32,w
  2001  01A8  00B0               	movwf	___fttol@f1
  2002  01A9  0844               	movf	UART_TxFloatNumber@v_floatNumber_f32+1,w
  2003  01AA  00B1               	movwf	___fttol@f1+1
  2004  01AB  0845               	movf	UART_TxFloatNumber@v_floatNumber_f32+2,w
  2005  01AC  00B2               	movwf	___fttol@f1+2
  2006  01AD  120A  118A  2117  120A  118A  	fcall	___fttol
  2007  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  2008  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  2009  01B4  0833               	movf	?___fttol+3,w
  2010  01B5  00CA               	movwf	UART_TxFloatNumber@v_tempNumber_u32+3
  2011  01B6  0832               	movf	?___fttol+2,w
  2012  01B7  00C9               	movwf	UART_TxFloatNumber@v_tempNumber_u32+2
  2013  01B8  0831               	movf	?___fttol+1,w
  2014  01B9  00C8               	movwf	UART_TxFloatNumber@v_tempNumber_u32+1
  2015  01BA  0830               	movf	?___fttol,w
  2016  01BB  00C7               	movwf	UART_TxFloatNumber@v_tempNumber_u32
  2017                           
  2018                           ;uart.c: 358: UART_TxNumber(10u,v_tempNumber_u32,0xffu);
  2019  01BC  084A               	movf	UART_TxFloatNumber@v_tempNumber_u32+3,w
  2020  01BD  00A7               	movwf	UART_TxNumber@v_number_u32+3
  2021  01BE  0849               	movf	UART_TxFloatNumber@v_tempNumber_u32+2,w
  2022  01BF  00A6               	movwf	UART_TxNumber@v_number_u32+2
  2023  01C0  0848               	movf	UART_TxFloatNumber@v_tempNumber_u32+1,w
  2024  01C1  00A5               	movwf	UART_TxNumber@v_number_u32+1
  2025  01C2  0847               	movf	UART_TxFloatNumber@v_tempNumber_u32,w
  2026  01C3  00A4               	movwf	UART_TxNumber@v_number_u32
  2027  01C4  30FF               	movlw	255
  2028  01C5  00C6               	movwf	??_UART_TxFloatNumber
  2029  01C6  0846               	movf	??_UART_TxFloatNumber,w
  2030  01C7  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  2031  01C8  300A               	movlw	10
  2032  01C9  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  2033                           
  2034                           ;uart.c: 360: UART_TxChar('.');
  2035  01CE  302E               	movlw	46
  2036  01CF  120A  158A  266E  120A  118A  	fcall	_UART_TxChar
  2037                           
  2038                           ;uart.c: 362: v_floatNumber_f32 = v_floatNumber_f32 - v_tempNumber_u32;
  2039  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  2040  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  2041  01D6  0843               	movf	UART_TxFloatNumber@v_floatNumber_f32,w
  2042  01D7  00A3               	movwf	___ftadd@f1
  2043  01D8  0844               	movf	UART_TxFloatNumber@v_floatNumber_f32+1,w
  2044  01D9  00A4               	movwf	___ftadd@f1+1
  2045  01DA  0845               	movf	UART_TxFloatNumber@v_floatNumber_f32+2,w
  2046  01DB  00A5               	movwf	___ftadd@f1+2
  2047  01DC  084A               	movf	UART_TxFloatNumber@v_tempNumber_u32+3,w
  2048  01DD  00FB               	movwf	___lltoft@c+3
  2049  01DE  0849               	movf	UART_TxFloatNumber@v_tempNumber_u32+2,w
  2050  01DF  00FA               	movwf	___lltoft@c+2
  2051  01E0  0848               	movf	UART_TxFloatNumber@v_tempNumber_u32+1,w
  2052  01E1  00F9               	movwf	___lltoft@c+1
  2053  01E2  0847               	movf	UART_TxFloatNumber@v_tempNumber_u32,w
  2054  01E3  00F8               	movwf	___lltoft@c
  2055  01E4  120A  158A  270F  120A  118A  	fcall	___lltoft
  2056  01E9  0878               	movf	?___lltoft,w
  2057  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  2058  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  2059  01EC  00A0               	movwf	___ftneg@f1
  2060  01ED  0879               	movf	?___lltoft+1,w
  2061  01EE  00A1               	movwf	___ftneg@f1+1
  2062  01EF  087A               	movf	?___lltoft+2,w
  2063  01F0  00A2               	movwf	___ftneg@f1+2
  2064  01F1  120A  158A  2677  120A  118A  	fcall	___ftneg
  2065  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  2066  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  2067  01F8  0820               	movf	?___ftneg,w
  2068  01F9  00A6               	movwf	___ftadd@f2
  2069  01FA  0821               	movf	?___ftneg+1,w
  2070  01FB  00A7               	movwf	___ftadd@f2+1
  2071  01FC  0822               	movf	?___ftneg+2,w
  2072  01FD  00A8               	movwf	___ftadd@f2+2
  2073  01FE  120A  118A  24C1  120A  118A  	fcall	___ftadd
  2074  0203  1283               	bcf	3,5	;RP0=0, select bank0
  2075  0204  1303               	bcf	3,6	;RP1=0, select bank0
  2076  0205  0823               	movf	?___ftadd,w
  2077  0206  00C3               	movwf	UART_TxFloatNumber@v_floatNumber_f32
  2078  0207  0824               	movf	?___ftadd+1,w
  2079  0208  00C4               	movwf	UART_TxFloatNumber@v_floatNumber_f32+1
  2080  0209  0825               	movf	?___ftadd+2,w
  2081  020A  00C5               	movwf	UART_TxFloatNumber@v_floatNumber_f32+2
  2082                           
  2083                           ;uart.c: 363: v_tempNumber_u32 = v_floatNumber_f32 * 1000000;
  2084  020B  0843               	movf	UART_TxFloatNumber@v_floatNumber_f32,w
  2085  020C  00A3               	movwf	___ftmul@f2
  2086  020D  0844               	movf	UART_TxFloatNumber@v_floatNumber_f32+1,w
  2087  020E  00A4               	movwf	___ftmul@f2+1
  2088  020F  0845               	movf	UART_TxFloatNumber@v_floatNumber_f32+2,w
  2089  0210  00A5               	movwf	___ftmul@f2+2
  2090  0211  3024               	movlw	36
  2091  0212  00A0               	movwf	___ftmul@f1
  2092  0213  3074               	movlw	116
  2093  0214  00A1               	movwf	___ftmul@f1+1
  2094  0215  3049               	movlw	73
  2095  0216  00A2               	movwf	___ftmul@f1+2
  2096  0217  120A  118A  22FC  120A  118A  	fcall	___ftmul
  2097  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2098  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2099  021E  0820               	movf	?___ftmul,w
  2100  021F  00B0               	movwf	___fttol@f1
  2101  0220  0821               	movf	?___ftmul+1,w
  2102  0221  00B1               	movwf	___fttol@f1+1
  2103  0222  0822               	movf	?___ftmul+2,w
  2104  0223  00B2               	movwf	___fttol@f1+2
  2105  0224  120A  118A  2117  120A  118A  	fcall	___fttol
  2106  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2107  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2108  022B  0833               	movf	?___fttol+3,w
  2109  022C  00CA               	movwf	UART_TxFloatNumber@v_tempNumber_u32+3
  2110  022D  0832               	movf	?___fttol+2,w
  2111  022E  00C9               	movwf	UART_TxFloatNumber@v_tempNumber_u32+2
  2112  022F  0831               	movf	?___fttol+1,w
  2113  0230  00C8               	movwf	UART_TxFloatNumber@v_tempNumber_u32+1
  2114  0231  0830               	movf	?___fttol,w
  2115  0232  00C7               	movwf	UART_TxFloatNumber@v_tempNumber_u32
  2116                           
  2117                           ;uart.c: 364: UART_TxNumber(10u,v_tempNumber_u32,0xffu);
  2118  0233  084A               	movf	UART_TxFloatNumber@v_tempNumber_u32+3,w
  2119  0234  00A7               	movwf	UART_TxNumber@v_number_u32+3
  2120  0235  0849               	movf	UART_TxFloatNumber@v_tempNumber_u32+2,w
  2121  0236  00A6               	movwf	UART_TxNumber@v_number_u32+2
  2122  0237  0848               	movf	UART_TxFloatNumber@v_tempNumber_u32+1,w
  2123  0238  00A5               	movwf	UART_TxNumber@v_number_u32+1
  2124  0239  0847               	movf	UART_TxFloatNumber@v_tempNumber_u32,w
  2125  023A  00A4               	movwf	UART_TxNumber@v_number_u32
  2126  023B  30FF               	movlw	255
  2127  023C  00C6               	movwf	??_UART_TxFloatNumber
  2128  023D  0846               	movf	??_UART_TxFloatNumber,w
  2129  023E  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  2130  023F  300A               	movlw	10
  2131  0240  120A  118A  23CF   	fcall	_UART_TxNumber
  2132  0243  0008               	return
  2133  0244                     __end_of_UART_TxFloatNumber:	
  2134                           
  2135                           	psect	text6
  2136  0F0F                     __ptext6:	
  2137 ;; *************** function ___lltoft *****************
  2138 ;; Defined at:
  2139 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lltoft.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  c               4    8[COMMON] unsigned long 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  exp             1   13[COMMON] unsigned char 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  3    8[COMMON] float 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0, pclath, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2153 ;;      Params:         4       0       0       0       0
  2154 ;;      Locals:         1       0       0       0       0
  2155 ;;      Temps:          1       0       0       0       0
  2156 ;;      Totals:         6       0       0       0       0
  2157 ;;Total ram usage:        6 bytes
  2158 ;; Hardware stack levels used:    1
  2159 ;; Hardware stack levels required when called:    1
  2160 ;; This function calls:
  2161 ;;		___ftpack
  2162 ;; This function is called by:
  2163 ;;		_UART_TxFloatNumber
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           
  2168                           ;psect for function ___lltoft
  2169  0F0F                     ___lltoft:	
  2170                           
  2171                           ;incstack = 0
  2172                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  2173  0F0F  308E               	movlw	142
  2174  0F10  00FC               	movwf	??___lltoft
  2175  0F11  087C               	movf	??___lltoft,w
  2176  0F12  00FD               	movwf	___lltoft@exp
  2177  0F13                     l1508:	
  2178  0F13  30FF               	movlw	255
  2179  0F14  057B               	andwf	___lltoft@c+3,w
  2180  0F15  1903               	btfsc	3,2
  2181  0F16  2F25               	goto	l1510
  2182  0F17  3001               	movlw	1
  2183  0F18                     u2025:	
  2184  0F18  1003               	clrc
  2185  0F19  0CFB               	rrf	___lltoft@c+3,f
  2186  0F1A  0CFA               	rrf	___lltoft@c+2,f
  2187  0F1B  0CF9               	rrf	___lltoft@c+1,f
  2188  0F1C  0CF8               	rrf	___lltoft@c,f
  2189  0F1D  3EFF               	addlw	-1
  2190  0F1E  1D03               	skipz
  2191  0F1F  2F18               	goto	u2025
  2192  0F20  3001               	movlw	1
  2193  0F21  00FC               	movwf	??___lltoft
  2194  0F22  087C               	movf	??___lltoft,w
  2195  0F23  07FD               	addwf	___lltoft@exp,f
  2196  0F24  2F13               	goto	l1508
  2197  0F25                     l1510:	
  2198  0F25  0878               	movf	___lltoft@c,w
  2199  0F26  00F0               	movwf	___ftpack@arg
  2200  0F27  0879               	movf	___lltoft@c+1,w
  2201  0F28  00F1               	movwf	___ftpack@arg+1
  2202  0F29  087A               	movf	___lltoft@c+2,w
  2203  0F2A  00F2               	movwf	___ftpack@arg+2
  2204  0F2B  087D               	movf	___lltoft@exp,w
  2205  0F2C  00FC               	movwf	??___lltoft
  2206  0F2D  087C               	movf	??___lltoft,w
  2207  0F2E  00F3               	movwf	___ftpack@exp
  2208  0F2F  01F4               	clrf	___ftpack@sign
  2209  0F30  120A  118A  2031   	fcall	___ftpack
  2210  0F33  0870               	movf	?___ftpack,w
  2211  0F34  00F8               	movwf	?___lltoft
  2212  0F35  0871               	movf	?___ftpack+1,w
  2213  0F36  00F9               	movwf	?___lltoft+1
  2214  0F37  0872               	movf	?___ftpack+2,w
  2215  0F38  00FA               	movwf	?___lltoft+2
  2216  0F39  0008               	return
  2217  0F3A                     __end_of___lltoft:	
  2218                           
  2219                           	psect	text7
  2220  0117                     __ptext7:	
  2221 ;; *************** function ___fttol *****************
  2222 ;; Defined at:
  2223 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\fttol.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  f1              3   16[BANK0 ] float 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  lval            4   25[BANK0 ] unsigned long 
  2228 ;;  exp1            1   29[BANK0 ] unsigned char 
  2229 ;;  sign1           1   24[BANK0 ] unsigned char 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  4   16[BANK0 ] long 
  2232 ;; Registers used:
  2233 ;;		wreg, status,2, status,0
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2239 ;;      Params:         0       4       0       0       0
  2240 ;;      Locals:         0       6       0       0       0
  2241 ;;      Temps:          0       4       0       0       0
  2242 ;;      Totals:         0      14       0       0       0
  2243 ;;Total ram usage:       14 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_UART_TxFloatNumber
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function ___fttol
  2254  0117                     ___fttol:	
  2255                           
  2256                           ;incstack = 0
  2257                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2258  0117  1283               	bcf	3,5	;RP0=0, select bank0
  2259  0118  1303               	bcf	3,6	;RP1=0, select bank0
  2260  0119  0830               	movf	___fttol@f1,w
  2261  011A  00B4               	movwf	??___fttol
  2262  011B  0831               	movf	___fttol@f1+1,w
  2263  011C  00B5               	movwf	??___fttol+1
  2264  011D  0832               	movf	___fttol@f1+2,w
  2265  011E  00B6               	movwf	??___fttol+2
  2266  011F  1003               	clrc
  2267  0120  0D35               	rlf	??___fttol+1,w
  2268  0121  0D36               	rlf	??___fttol+2,w
  2269  0122  00B7               	movwf	??___fttol+3
  2270  0123  0837               	movf	??___fttol+3,w
  2271  0124  00BD               	movwf	___fttol@exp1
  2272  0125  083D               	movf	___fttol@exp1,w
  2273  0126  1D03               	btfss	3,2
  2274  0127  2931               	goto	l1468
  2275  0128  3000               	movlw	0
  2276  0129  00B3               	movwf	?___fttol+3
  2277  012A  3000               	movlw	0
  2278  012B  00B2               	movwf	?___fttol+2
  2279  012C  3000               	movlw	0
  2280  012D  00B1               	movwf	?___fttol+1
  2281  012E  3000               	movlw	0
  2282  012F  00B0               	movwf	?___fttol
  2283  0130  0008               	return
  2284  0131                     l1468:	
  2285  0131  0830               	movf	___fttol@f1,w
  2286  0132  00B4               	movwf	??___fttol
  2287  0133  0831               	movf	___fttol@f1+1,w
  2288  0134  00B5               	movwf	??___fttol+1
  2289  0135  0832               	movf	___fttol@f1+2,w
  2290  0136  00B6               	movwf	??___fttol+2
  2291  0137  3017               	movlw	23
  2292  0138                     u1935:	
  2293  0138  1003               	clrc
  2294  0139  0CB6               	rrf	??___fttol+2,f
  2295  013A  0CB5               	rrf	??___fttol+1,f
  2296  013B  0CB4               	rrf	??___fttol,f
  2297  013C  3EFF               	addlw	-1
  2298  013D  1D03               	skipz
  2299  013E  2938               	goto	u1935
  2300  013F  0834               	movf	??___fttol,w
  2301  0140  00B7               	movwf	??___fttol+3
  2302  0141  0837               	movf	??___fttol+3,w
  2303  0142  00B8               	movwf	___fttol@sign1
  2304  0143  17B1               	bsf	___fttol@f1+1,7
  2305  0144  30FF               	movlw	255
  2306  0145  05B0               	andwf	___fttol@f1,f
  2307  0146  30FF               	movlw	255
  2308  0147  05B1               	andwf	___fttol@f1+1,f
  2309  0148  3000               	movlw	0
  2310  0149  05B2               	andwf	___fttol@f1+2,f
  2311  014A  0830               	movf	___fttol@f1,w
  2312  014B  00B9               	movwf	___fttol@lval
  2313  014C  0831               	movf	___fttol@f1+1,w
  2314  014D  00BA               	movwf	___fttol@lval+1
  2315  014E  0832               	movf	___fttol@f1+2,w
  2316  014F  00BB               	movwf	___fttol@lval+2
  2317  0150  01BC               	clrf	___fttol@lval+3
  2318  0151  308E               	movlw	142
  2319  0152  02BD               	subwf	___fttol@exp1,f
  2320  0153  1FBD               	btfss	___fttol@exp1,7
  2321  0154  2973               	goto	l1488
  2322  0155  083D               	movf	___fttol@exp1,w
  2323  0156  3A80               	xorlw	128
  2324  0157  3E8F               	addlw	143
  2325  0158  1803               	skipnc
  2326  0159  2963               	goto	l1486
  2327  015A  3000               	movlw	0
  2328  015B  00B3               	movwf	?___fttol+3
  2329  015C  3000               	movlw	0
  2330  015D  00B2               	movwf	?___fttol+2
  2331  015E  3000               	movlw	0
  2332  015F  00B1               	movwf	?___fttol+1
  2333  0160  3000               	movlw	0
  2334  0161  00B0               	movwf	?___fttol
  2335  0162  0008               	return
  2336  0163                     l1486:	
  2337  0163  3001               	movlw	1
  2338  0164                     u1965:	
  2339  0164  1003               	clrc
  2340  0165  0CBC               	rrf	___fttol@lval+3,f
  2341  0166  0CBB               	rrf	___fttol@lval+2,f
  2342  0167  0CBA               	rrf	___fttol@lval+1,f
  2343  0168  0CB9               	rrf	___fttol@lval,f
  2344  0169  3EFF               	addlw	-1
  2345  016A  1D03               	skipz
  2346  016B  2964               	goto	u1965
  2347  016C  3001               	movlw	1
  2348  016D  00B4               	movwf	??___fttol
  2349  016E  0834               	movf	??___fttol,w
  2350  016F  07BD               	addwf	___fttol@exp1,f
  2351  0170  1903               	btfsc	3,2
  2352  0171  298E               	goto	l1496
  2353  0172  2963               	goto	l1486
  2354  0173                     l1488:	
  2355  0173  3018               	movlw	24
  2356  0174  023D               	subwf	___fttol@exp1,w
  2357  0175  1C03               	skipc
  2358  0176  298B               	goto	l512
  2359  0177  3000               	movlw	0
  2360  0178  00B3               	movwf	?___fttol+3
  2361  0179  3000               	movlw	0
  2362  017A  00B2               	movwf	?___fttol+2
  2363  017B  3000               	movlw	0
  2364  017C  00B1               	movwf	?___fttol+1
  2365  017D  3000               	movlw	0
  2366  017E  00B0               	movwf	?___fttol
  2367  017F  0008               	return
  2368  0180                     l1494:	
  2369  0180  3001               	movlw	1
  2370  0181  00B4               	movwf	??___fttol
  2371  0182                     u1995:	
  2372  0182  1003               	clrc
  2373  0183  0DB9               	rlf	___fttol@lval,f
  2374  0184  0DBA               	rlf	___fttol@lval+1,f
  2375  0185  0DBB               	rlf	___fttol@lval+2,f
  2376  0186  0DBC               	rlf	___fttol@lval+3,f
  2377  0187  0BB4               	decfsz	??___fttol,f
  2378  0188  2982               	goto	u1995
  2379  0189  3001               	movlw	1
  2380  018A  02BD               	subwf	___fttol@exp1,f
  2381  018B                     l512:	
  2382  018B  083D               	movf	___fttol@exp1,w
  2383  018C  1D03               	btfss	3,2
  2384  018D  2980               	goto	l1494
  2385  018E                     l1496:	
  2386  018E  0838               	movf	___fttol@sign1,w
  2387  018F  1903               	btfsc	3,2
  2388  0190  299C               	goto	l1500
  2389  0191  09B9               	comf	___fttol@lval,f
  2390  0192  09BA               	comf	___fttol@lval+1,f
  2391  0193  09BB               	comf	___fttol@lval+2,f
  2392  0194  09BC               	comf	___fttol@lval+3,f
  2393  0195  0AB9               	incf	___fttol@lval,f
  2394  0196  1903               	skipnz
  2395  0197  0ABA               	incf	___fttol@lval+1,f
  2396  0198  1903               	skipnz
  2397  0199  0ABB               	incf	___fttol@lval+2,f
  2398  019A  1903               	skipnz
  2399  019B  0ABC               	incf	___fttol@lval+3,f
  2400  019C                     l1500:	
  2401  019C  083C               	movf	___fttol@lval+3,w
  2402  019D  00B3               	movwf	?___fttol+3
  2403  019E  083B               	movf	___fttol@lval+2,w
  2404  019F  00B2               	movwf	?___fttol+2
  2405  01A0  083A               	movf	___fttol@lval+1,w
  2406  01A1  00B1               	movwf	?___fttol+1
  2407  01A2  0839               	movf	___fttol@lval,w
  2408  01A3  00B0               	movwf	?___fttol
  2409  01A4  0008               	return
  2410  01A5                     __end_of___fttol:	
  2411                           
  2412                           	psect	text8
  2413  0E77                     __ptext8:	
  2414 ;; *************** function ___ftneg *****************
  2415 ;; Defined at:
  2416 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftneg.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  f1              3    0[BANK0 ] float 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;		None
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  3    0[BANK0 ] float 
  2423 ;; Registers used:
  2424 ;;		wreg
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2430 ;;      Params:         0       3       0       0       0
  2431 ;;      Locals:         0       0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0
  2433 ;;      Totals:         0       3       0       0       0
  2434 ;;Total ram usage:        3 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_UART_TxFloatNumber
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           
  2444                           ;psect for function ___ftneg
  2445  0E77                     ___ftneg:	
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in ___ftneg: [wreg]
  2449  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2450  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0E79  0822               	movf	___ftneg@f1+2,w
  2452  0E7A  0421               	iorwf	___ftneg@f1+1,w
  2453  0E7B  0420               	iorwf	___ftneg@f1,w
  2454  0E7C  1903               	skipnz
  2455  0E7D  0008               	return
  2456  0E7E  3080               	movlw	128
  2457  0E7F  06A2               	xorwf	___ftneg@f1+2,f
  2458  0E80  0008               	return
  2459  0E81                     __end_of___ftneg:	
  2460                           
  2461                           	psect	text9
  2462  02FC                     __ptext9:	
  2463 ;; *************** function ___ftmul *****************
  2464 ;; Defined at:
  2465 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftmul.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  f1              3    0[BANK0 ] float 
  2468 ;;  f2              3    3[BANK0 ] float 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  2471 ;;  sign            1   15[BANK0 ] unsigned char 
  2472 ;;  cntr            1   14[BANK0 ] unsigned char 
  2473 ;;  exp             1   10[BANK0 ] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  3    0[BANK0 ] float 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0, pclath, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2483 ;;      Params:         0       6       0       0       0
  2484 ;;      Locals:         0       6       0       0       0
  2485 ;;      Temps:          0       4       0       0       0
  2486 ;;      Totals:         0      16       0       0       0
  2487 ;;Total ram usage:       16 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    1
  2490 ;; This function calls:
  2491 ;;		___ftpack
  2492 ;; This function is called by:
  2493 ;;		_UART_TxFloatNumber
  2494 ;;		_main
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           
  2499                           ;psect for function ___ftmul
  2500  02FC                     ___ftmul:	
  2501                           
  2502                           ;incstack = 0
  2503                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2504  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2505  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  2506  02FE  0820               	movf	___ftmul@f1,w
  2507  02FF  00A6               	movwf	??___ftmul
  2508  0300  0821               	movf	___ftmul@f1+1,w
  2509  0301  00A7               	movwf	??___ftmul+1
  2510  0302  0822               	movf	___ftmul@f1+2,w
  2511  0303  00A8               	movwf	??___ftmul+2
  2512  0304  1003               	clrc
  2513  0305  0D27               	rlf	??___ftmul+1,w
  2514  0306  0D28               	rlf	??___ftmul+2,w
  2515  0307  00A9               	movwf	??___ftmul+3
  2516  0308  0829               	movf	??___ftmul+3,w
  2517  0309  00AA               	movwf	___ftmul@exp
  2518  030A  082A               	movf	___ftmul@exp,w
  2519  030B  1D03               	btfss	3,2
  2520  030C  2B14               	goto	l1410
  2521  030D  3000               	movlw	0
  2522  030E  00A0               	movwf	?___ftmul
  2523  030F  3000               	movlw	0
  2524  0310  00A1               	movwf	?___ftmul+1
  2525  0311  3000               	movlw	0
  2526  0312  00A2               	movwf	?___ftmul+2
  2527  0313  0008               	return
  2528  0314                     l1410:	
  2529  0314  0823               	movf	___ftmul@f2,w
  2530  0315  00A6               	movwf	??___ftmul
  2531  0316  0824               	movf	___ftmul@f2+1,w
  2532  0317  00A7               	movwf	??___ftmul+1
  2533  0318  0825               	movf	___ftmul@f2+2,w
  2534  0319  00A8               	movwf	??___ftmul+2
  2535  031A  1003               	clrc
  2536  031B  0D27               	rlf	??___ftmul+1,w
  2537  031C  0D28               	rlf	??___ftmul+2,w
  2538  031D  00A9               	movwf	??___ftmul+3
  2539  031E  0829               	movf	??___ftmul+3,w
  2540  031F  00AF               	movwf	___ftmul@sign
  2541  0320  082F               	movf	___ftmul@sign,w
  2542  0321  1D03               	btfss	3,2
  2543  0322  2B2A               	goto	l1416
  2544  0323  3000               	movlw	0
  2545  0324  00A0               	movwf	?___ftmul
  2546  0325  3000               	movlw	0
  2547  0326  00A1               	movwf	?___ftmul+1
  2548  0327  3000               	movlw	0
  2549  0328  00A2               	movwf	?___ftmul+2
  2550  0329  0008               	return
  2551  032A                     l1416:	
  2552  032A  082F               	movf	___ftmul@sign,w
  2553  032B  3E7B               	addlw	123
  2554  032C  00A6               	movwf	??___ftmul
  2555  032D  0826               	movf	??___ftmul,w
  2556  032E  07AA               	addwf	___ftmul@exp,f
  2557  032F  0820               	movf	___ftmul@f1,w
  2558  0330  00A6               	movwf	??___ftmul
  2559  0331  0821               	movf	___ftmul@f1+1,w
  2560  0332  00A7               	movwf	??___ftmul+1
  2561  0333  0822               	movf	___ftmul@f1+2,w
  2562  0334  00A8               	movwf	??___ftmul+2
  2563  0335  3010               	movlw	16
  2564  0336                     u1795:	
  2565  0336  1003               	clrc
  2566  0337  0CA8               	rrf	??___ftmul+2,f
  2567  0338  0CA7               	rrf	??___ftmul+1,f
  2568  0339  0CA6               	rrf	??___ftmul,f
  2569  033A  3EFF               	addlw	-1
  2570  033B  1D03               	skipz
  2571  033C  2B36               	goto	u1795
  2572  033D  0826               	movf	??___ftmul,w
  2573  033E  00A9               	movwf	??___ftmul+3
  2574  033F  0829               	movf	??___ftmul+3,w
  2575  0340  00AF               	movwf	___ftmul@sign
  2576  0341  0823               	movf	___ftmul@f2,w
  2577  0342  00A6               	movwf	??___ftmul
  2578  0343  0824               	movf	___ftmul@f2+1,w
  2579  0344  00A7               	movwf	??___ftmul+1
  2580  0345  0825               	movf	___ftmul@f2+2,w
  2581  0346  00A8               	movwf	??___ftmul+2
  2582  0347  3010               	movlw	16
  2583  0348                     u1805:	
  2584  0348  1003               	clrc
  2585  0349  0CA8               	rrf	??___ftmul+2,f
  2586  034A  0CA7               	rrf	??___ftmul+1,f
  2587  034B  0CA6               	rrf	??___ftmul,f
  2588  034C  3EFF               	addlw	-1
  2589  034D  1D03               	skipz
  2590  034E  2B48               	goto	u1805
  2591  034F  0826               	movf	??___ftmul,w
  2592  0350  00A9               	movwf	??___ftmul+3
  2593  0351  0829               	movf	??___ftmul+3,w
  2594  0352  06AF               	xorwf	___ftmul@sign,f
  2595  0353  3080               	movlw	128
  2596  0354  00A6               	movwf	??___ftmul
  2597  0355  0826               	movf	??___ftmul,w
  2598  0356  05AF               	andwf	___ftmul@sign,f
  2599  0357  17A1               	bsf	___ftmul@f1+1,7
  2600  0358  17A4               	bsf	___ftmul@f2+1,7
  2601  0359  30FF               	movlw	255
  2602  035A  05A3               	andwf	___ftmul@f2,f
  2603  035B  30FF               	movlw	255
  2604  035C  05A4               	andwf	___ftmul@f2+1,f
  2605  035D  3000               	movlw	0
  2606  035E  05A5               	andwf	___ftmul@f2+2,f
  2607  035F  3000               	movlw	0
  2608  0360  00AB               	movwf	___ftmul@f3_as_product
  2609  0361  3000               	movlw	0
  2610  0362  00AC               	movwf	___ftmul@f3_as_product+1
  2611  0363  3000               	movlw	0
  2612  0364  00AD               	movwf	___ftmul@f3_as_product+2
  2613  0365  3007               	movlw	7
  2614  0366  00A6               	movwf	??___ftmul
  2615  0367  0826               	movf	??___ftmul,w
  2616  0368  00AE               	movwf	___ftmul@cntr
  2617  0369                     l1428:	
  2618  0369  1C20               	btfss	___ftmul@f1,0
  2619  036A  2B79               	goto	l1432
  2620  036B  0823               	movf	___ftmul@f2,w
  2621  036C  07AB               	addwf	___ftmul@f3_as_product,f
  2622  036D  0824               	movf	___ftmul@f2+1,w
  2623  036E  1103               	clrz
  2624  036F  1803               	skipnc
  2625  0370  0A24               	incf	___ftmul@f2+1,w
  2626  0371  1D03               	btfss	3,2
  2627  0372  07AC               	addwf	___ftmul@f3_as_product+1,f
  2628  0373  0825               	movf	___ftmul@f2+2,w
  2629  0374  1103               	clrz
  2630  0375  1803               	skipnc
  2631  0376  0A25               	incf	___ftmul@f2+2,w
  2632  0377  1D03               	btfss	3,2
  2633  0378  07AD               	addwf	___ftmul@f3_as_product+2,f
  2634  0379                     l1432:	
  2635  0379  3001               	movlw	1
  2636  037A                     u1835:	
  2637  037A  1003               	clrc
  2638  037B  0CA2               	rrf	___ftmul@f1+2,f
  2639  037C  0CA1               	rrf	___ftmul@f1+1,f
  2640  037D  0CA0               	rrf	___ftmul@f1,f
  2641  037E  3EFF               	addlw	-1
  2642  037F  1D03               	skipz
  2643  0380  2B7A               	goto	u1835
  2644  0381  3001               	movlw	1
  2645  0382                     u1845:	
  2646  0382  1003               	clrc
  2647  0383  0DA3               	rlf	___ftmul@f2,f
  2648  0384  0DA4               	rlf	___ftmul@f2+1,f
  2649  0385  0DA5               	rlf	___ftmul@f2+2,f
  2650  0386  3EFF               	addlw	-1
  2651  0387  1D03               	skipz
  2652  0388  2B82               	goto	u1845
  2653  0389  3001               	movlw	1
  2654  038A  02AE               	subwf	___ftmul@cntr,f
  2655  038B  1D03               	btfss	3,2
  2656  038C  2B69               	goto	l1428
  2657  038D  3009               	movlw	9
  2658  038E  00A6               	movwf	??___ftmul
  2659  038F  0826               	movf	??___ftmul,w
  2660  0390  00AE               	movwf	___ftmul@cntr
  2661  0391                     l1440:	
  2662  0391  1C20               	btfss	___ftmul@f1,0
  2663  0392  2BA1               	goto	l1444
  2664  0393  0823               	movf	___ftmul@f2,w
  2665  0394  07AB               	addwf	___ftmul@f3_as_product,f
  2666  0395  0824               	movf	___ftmul@f2+1,w
  2667  0396  1103               	clrz
  2668  0397  1803               	skipnc
  2669  0398  0A24               	incf	___ftmul@f2+1,w
  2670  0399  1D03               	btfss	3,2
  2671  039A  07AC               	addwf	___ftmul@f3_as_product+1,f
  2672  039B  0825               	movf	___ftmul@f2+2,w
  2673  039C  1103               	clrz
  2674  039D  1803               	skipnc
  2675  039E  0A25               	incf	___ftmul@f2+2,w
  2676  039F  1D03               	btfss	3,2
  2677  03A0  07AD               	addwf	___ftmul@f3_as_product+2,f
  2678  03A1                     l1444:	
  2679  03A1  3001               	movlw	1
  2680  03A2                     u1885:	
  2681  03A2  1003               	clrc
  2682  03A3  0CA2               	rrf	___ftmul@f1+2,f
  2683  03A4  0CA1               	rrf	___ftmul@f1+1,f
  2684  03A5  0CA0               	rrf	___ftmul@f1,f
  2685  03A6  3EFF               	addlw	-1
  2686  03A7  1D03               	skipz
  2687  03A8  2BA2               	goto	u1885
  2688  03A9  3001               	movlw	1
  2689  03AA                     u1895:	
  2690  03AA  1003               	clrc
  2691  03AB  0CAD               	rrf	___ftmul@f3_as_product+2,f
  2692  03AC  0CAC               	rrf	___ftmul@f3_as_product+1,f
  2693  03AD  0CAB               	rrf	___ftmul@f3_as_product,f
  2694  03AE  3EFF               	addlw	-1
  2695  03AF  1D03               	skipz
  2696  03B0  2BAA               	goto	u1895
  2697  03B1  3001               	movlw	1
  2698  03B2  02AE               	subwf	___ftmul@cntr,f
  2699  03B3  1D03               	btfss	3,2
  2700  03B4  2B91               	goto	l1440
  2701  03B5  082B               	movf	___ftmul@f3_as_product,w
  2702  03B6  00F0               	movwf	___ftpack@arg
  2703  03B7  082C               	movf	___ftmul@f3_as_product+1,w
  2704  03B8  00F1               	movwf	___ftpack@arg+1
  2705  03B9  082D               	movf	___ftmul@f3_as_product+2,w
  2706  03BA  00F2               	movwf	___ftpack@arg+2
  2707  03BB  082A               	movf	___ftmul@exp,w
  2708  03BC  00A6               	movwf	??___ftmul
  2709  03BD  0826               	movf	??___ftmul,w
  2710  03BE  00F3               	movwf	___ftpack@exp
  2711  03BF  082F               	movf	___ftmul@sign,w
  2712  03C0  00A7               	movwf	??___ftmul+1
  2713  03C1  0827               	movf	??___ftmul+1,w
  2714  03C2  00F4               	movwf	___ftpack@sign
  2715  03C3  120A  118A  2031   	fcall	___ftpack
  2716  03C6  0870               	movf	?___ftpack,w
  2717  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2718  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2719  03C9  00A0               	movwf	?___ftmul
  2720  03CA  0871               	movf	?___ftpack+1,w
  2721  03CB  00A1               	movwf	?___ftmul+1
  2722  03CC  0872               	movf	?___ftpack+2,w
  2723  03CD  00A2               	movwf	?___ftmul+2
  2724  03CE  0008               	return
  2725  03CF                     __end_of___ftmul:	
  2726                           
  2727                           	psect	text10
  2728  04C1                     __ptext10:	
  2729 ;; *************** function ___ftadd *****************
  2730 ;; Defined at:
  2731 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftadd.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  f1              3    3[BANK0 ] float 
  2734 ;;  f2              3    6[BANK0 ] float 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  exp1            1   15[BANK0 ] unsigned char 
  2737 ;;  exp2            1   14[BANK0 ] unsigned char 
  2738 ;;  sign            1   13[BANK0 ] unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  3    3[BANK0 ] float 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0, pclath, cstack
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2748 ;;      Params:         0       6       0       0       0
  2749 ;;      Locals:         0       3       0       0       0
  2750 ;;      Temps:          0       4       0       0       0
  2751 ;;      Totals:         0      13       0       0       0
  2752 ;;Total ram usage:       13 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    1
  2755 ;; This function calls:
  2756 ;;		___ftpack
  2757 ;; This function is called by:
  2758 ;;		_UART_TxFloatNumber
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           
  2763                           ;psect for function ___ftadd
  2764  04C1                     ___ftadd:	
  2765                           
  2766                           ;incstack = 0
  2767                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2768  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2769  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2770  04C3  0823               	movf	___ftadd@f1,w
  2771  04C4  00A9               	movwf	??___ftadd
  2772  04C5  0824               	movf	___ftadd@f1+1,w
  2773  04C6  00AA               	movwf	??___ftadd+1
  2774  04C7  0825               	movf	___ftadd@f1+2,w
  2775  04C8  00AB               	movwf	??___ftadd+2
  2776  04C9  1003               	clrc
  2777  04CA  0D2A               	rlf	??___ftadd+1,w
  2778  04CB  0D2B               	rlf	??___ftadd+2,w
  2779  04CC  00AC               	movwf	??___ftadd+3
  2780  04CD  082C               	movf	??___ftadd+3,w
  2781  04CE  00AF               	movwf	___ftadd@exp1
  2782  04CF  0826               	movf	___ftadd@f2,w
  2783  04D0  00A9               	movwf	??___ftadd
  2784  04D1  0827               	movf	___ftadd@f2+1,w
  2785  04D2  00AA               	movwf	??___ftadd+1
  2786  04D3  0828               	movf	___ftadd@f2+2,w
  2787  04D4  00AB               	movwf	??___ftadd+2
  2788  04D5  1003               	clrc
  2789  04D6  0D2A               	rlf	??___ftadd+1,w
  2790  04D7  0D2B               	rlf	??___ftadd+2,w
  2791  04D8  00AC               	movwf	??___ftadd+3
  2792  04D9  082C               	movf	??___ftadd+3,w
  2793  04DA  00AE               	movwf	___ftadd@exp2
  2794  04DB  082F               	movf	___ftadd@exp1,w
  2795  04DC  1903               	btfsc	3,2
  2796  04DD  2CEA               	goto	l1340
  2797  04DE  082E               	movf	___ftadd@exp2,w
  2798  04DF  022F               	subwf	___ftadd@exp1,w
  2799  04E0  1803               	skipnc
  2800  04E1  2CF1               	goto	l1344
  2801  04E2  032F               	decf	___ftadd@exp1,w
  2802  04E3  3AFF               	xorlw	255
  2803  04E4  072E               	addwf	___ftadd@exp2,w
  2804  04E5  00A9               	movwf	??___ftadd
  2805  04E6  3019               	movlw	25
  2806  04E7  0229               	subwf	??___ftadd,w
  2807  04E8  1C03               	skipc
  2808  04E9  2CF1               	goto	l1344
  2809  04EA                     l1340:	
  2810  04EA  0826               	movf	___ftadd@f2,w
  2811  04EB  00A3               	movwf	?___ftadd
  2812  04EC  0827               	movf	___ftadd@f2+1,w
  2813  04ED  00A4               	movwf	?___ftadd+1
  2814  04EE  0828               	movf	___ftadd@f2+2,w
  2815  04EF  00A5               	movwf	?___ftadd+2
  2816  04F0  0008               	return
  2817  04F1                     l1344:	
  2818  04F1  082E               	movf	___ftadd@exp2,w
  2819  04F2  1903               	btfsc	3,2
  2820  04F3  0008               	return
  2821  04F4  082F               	movf	___ftadd@exp1,w
  2822  04F5  022E               	subwf	___ftadd@exp2,w
  2823  04F6  1803               	skipnc
  2824  04F7  2D00               	goto	l1350
  2825  04F8  032E               	decf	___ftadd@exp2,w
  2826  04F9  3AFF               	xorlw	255
  2827  04FA  072F               	addwf	___ftadd@exp1,w
  2828  04FB  00A9               	movwf	??___ftadd
  2829  04FC  3019               	movlw	25
  2830  04FD  0229               	subwf	??___ftadd,w
  2831  04FE  1803               	btfsc	3,0
  2832  04FF  0008               	return
  2833  0500                     l1350:	
  2834  0500  3006               	movlw	6
  2835  0501  00A9               	movwf	??___ftadd
  2836  0502  0829               	movf	??___ftadd,w
  2837  0503  00AD               	movwf	___ftadd@sign
  2838  0504  1BA5               	btfsc	___ftadd@f1+2,7
  2839  0505  17AD               	bsf	___ftadd@sign,7
  2840  0506  1BA8               	btfsc	___ftadd@f2+2,7
  2841  0507  172D               	bsf	___ftadd@sign,6
  2842  0508  17A4               	bsf	___ftadd@f1+1,7
  2843  0509  30FF               	movlw	255
  2844  050A  05A3               	andwf	___ftadd@f1,f
  2845  050B  30FF               	movlw	255
  2846  050C  05A4               	andwf	___ftadd@f1+1,f
  2847  050D  3000               	movlw	0
  2848  050E  05A5               	andwf	___ftadd@f1+2,f
  2849  050F  17A7               	bsf	___ftadd@f2+1,7
  2850  0510  30FF               	movlw	255
  2851  0511  05A6               	andwf	___ftadd@f2,f
  2852  0512  30FF               	movlw	255
  2853  0513  05A7               	andwf	___ftadd@f2+1,f
  2854  0514  3000               	movlw	0
  2855  0515  05A8               	andwf	___ftadd@f2+2,f
  2856  0516  082E               	movf	___ftadd@exp2,w
  2857  0517  022F               	subwf	___ftadd@exp1,w
  2858  0518  1803               	skipnc
  2859  0519  2D40               	goto	l1372
  2860  051A                     l1362:	
  2861  051A  3001               	movlw	1
  2862  051B                     u1625:	
  2863  051B  1003               	clrc
  2864  051C  0DA6               	rlf	___ftadd@f2,f
  2865  051D  0DA7               	rlf	___ftadd@f2+1,f
  2866  051E  0DA8               	rlf	___ftadd@f2+2,f
  2867  051F  3EFF               	addlw	-1
  2868  0520  1D03               	skipz
  2869  0521  2D1B               	goto	u1625
  2870  0522  3001               	movlw	1
  2871  0523  02AE               	subwf	___ftadd@exp2,f
  2872  0524  082E               	movf	___ftadd@exp2,w
  2873  0525  062F               	xorwf	___ftadd@exp1,w
  2874  0526  1903               	skipnz
  2875  0527  2D3B               	goto	l1370
  2876  0528  3001               	movlw	1
  2877  0529  02AD               	subwf	___ftadd@sign,f
  2878  052A  082D               	movf	___ftadd@sign,w
  2879  052B  3907               	andlw	7
  2880  052C  1903               	btfsc	3,2
  2881  052D  2D3B               	goto	l1370
  2882  052E  2D1A               	goto	l1362
  2883  052F                     l1368:	
  2884  052F  3001               	movlw	1
  2885  0530                     u1655:	
  2886  0530  1003               	clrc
  2887  0531  0CA5               	rrf	___ftadd@f1+2,f
  2888  0532  0CA4               	rrf	___ftadd@f1+1,f
  2889  0533  0CA3               	rrf	___ftadd@f1,f
  2890  0534  3EFF               	addlw	-1
  2891  0535  1D03               	skipz
  2892  0536  2D30               	goto	u1655
  2893  0537  3001               	movlw	1
  2894  0538  00A9               	movwf	??___ftadd
  2895  0539  0829               	movf	??___ftadd,w
  2896  053A  07AF               	addwf	___ftadd@exp1,f
  2897  053B                     l1370:	
  2898  053B  082F               	movf	___ftadd@exp1,w
  2899  053C  062E               	xorwf	___ftadd@exp2,w
  2900  053D  1903               	btfsc	3,2
  2901  053E  2D69               	goto	l452
  2902  053F  2D2F               	goto	l1368
  2903  0540                     l1372:	
  2904  0540  082F               	movf	___ftadd@exp1,w
  2905  0541  022E               	subwf	___ftadd@exp2,w
  2906  0542  1803               	skipnc
  2907  0543  2D69               	goto	l452
  2908  0544                     l1374:	
  2909  0544  3001               	movlw	1
  2910  0545                     u1685:	
  2911  0545  1003               	clrc
  2912  0546  0DA3               	rlf	___ftadd@f1,f
  2913  0547  0DA4               	rlf	___ftadd@f1+1,f
  2914  0548  0DA5               	rlf	___ftadd@f1+2,f
  2915  0549  3EFF               	addlw	-1
  2916  054A  1D03               	skipz
  2917  054B  2D45               	goto	u1685
  2918  054C  3001               	movlw	1
  2919  054D  02AF               	subwf	___ftadd@exp1,f
  2920  054E  082E               	movf	___ftadd@exp2,w
  2921  054F  062F               	xorwf	___ftadd@exp1,w
  2922  0550  1903               	skipnz
  2923  0551  2D65               	goto	l1382
  2924  0552  3001               	movlw	1
  2925  0553  02AD               	subwf	___ftadd@sign,f
  2926  0554  082D               	movf	___ftadd@sign,w
  2927  0555  3907               	andlw	7
  2928  0556  1903               	btfsc	3,2
  2929  0557  2D65               	goto	l1382
  2930  0558  2D44               	goto	l1374
  2931  0559                     l1380:	
  2932  0559  3001               	movlw	1
  2933  055A                     u1715:	
  2934  055A  1003               	clrc
  2935  055B  0CA8               	rrf	___ftadd@f2+2,f
  2936  055C  0CA7               	rrf	___ftadd@f2+1,f
  2937  055D  0CA6               	rrf	___ftadd@f2,f
  2938  055E  3EFF               	addlw	-1
  2939  055F  1D03               	skipz
  2940  0560  2D5A               	goto	u1715
  2941  0561  3001               	movlw	1
  2942  0562  00A9               	movwf	??___ftadd
  2943  0563  0829               	movf	??___ftadd,w
  2944  0564  07AE               	addwf	___ftadd@exp2,f
  2945  0565                     l1382:	
  2946  0565  082F               	movf	___ftadd@exp1,w
  2947  0566  062E               	xorwf	___ftadd@exp2,w
  2948  0567  1D03               	skipz
  2949  0568  2D59               	goto	l1380
  2950  0569                     l452:	
  2951  0569  1FAD               	btfss	___ftadd@sign,7
  2952  056A  2D7B               	goto	l1386
  2953  056B  30FF               	movlw	255
  2954  056C  06A3               	xorwf	___ftadd@f1,f
  2955  056D  30FF               	movlw	255
  2956  056E  06A4               	xorwf	___ftadd@f1+1,f
  2957  056F  30FF               	movlw	255
  2958  0570  06A5               	xorwf	___ftadd@f1+2,f
  2959  0571  3001               	movlw	1
  2960  0572  07A3               	addwf	___ftadd@f1,f
  2961  0573  3000               	movlw	0
  2962  0574  1803               	skipnc
  2963  0575  3001               	movlw	1
  2964  0576  07A4               	addwf	___ftadd@f1+1,f
  2965  0577  3000               	movlw	0
  2966  0578  1803               	skipnc
  2967  0579  3001               	movlw	1
  2968  057A  07A5               	addwf	___ftadd@f1+2,f
  2969  057B                     l1386:	
  2970  057B  1F2D               	btfss	___ftadd@sign,6
  2971  057C  2D8D               	goto	l1390
  2972  057D  30FF               	movlw	255
  2973  057E  06A6               	xorwf	___ftadd@f2,f
  2974  057F  30FF               	movlw	255
  2975  0580  06A7               	xorwf	___ftadd@f2+1,f
  2976  0581  30FF               	movlw	255
  2977  0582  06A8               	xorwf	___ftadd@f2+2,f
  2978  0583  3001               	movlw	1
  2979  0584  07A6               	addwf	___ftadd@f2,f
  2980  0585  3000               	movlw	0
  2981  0586  1803               	skipnc
  2982  0587  3001               	movlw	1
  2983  0588  07A7               	addwf	___ftadd@f2+1,f
  2984  0589  3000               	movlw	0
  2985  058A  1803               	skipnc
  2986  058B  3001               	movlw	1
  2987  058C  07A8               	addwf	___ftadd@f2+2,f
  2988  058D                     l1390:	
  2989  058D  01AD               	clrf	___ftadd@sign
  2990  058E  0823               	movf	___ftadd@f1,w
  2991  058F  07A6               	addwf	___ftadd@f2,f
  2992  0590  0824               	movf	___ftadd@f1+1,w
  2993  0591  1103               	clrz
  2994  0592  1803               	skipnc
  2995  0593  0A24               	incf	___ftadd@f1+1,w
  2996  0594  1D03               	btfss	3,2
  2997  0595  07A7               	addwf	___ftadd@f2+1,f
  2998  0596  0825               	movf	___ftadd@f1+2,w
  2999  0597  1103               	clrz
  3000  0598  1803               	skipnc
  3001  0599  0A25               	incf	___ftadd@f1+2,w
  3002  059A  1D03               	btfss	3,2
  3003  059B  07A8               	addwf	___ftadd@f2+2,f
  3004  059C  1FA8               	btfss	___ftadd@f2+2,7
  3005  059D  2DB0               	goto	l1400
  3006  059E  30FF               	movlw	255
  3007  059F  06A6               	xorwf	___ftadd@f2,f
  3008  05A0  30FF               	movlw	255
  3009  05A1  06A7               	xorwf	___ftadd@f2+1,f
  3010  05A2  30FF               	movlw	255
  3011  05A3  06A8               	xorwf	___ftadd@f2+2,f
  3012  05A4  3001               	movlw	1
  3013  05A5  07A6               	addwf	___ftadd@f2,f
  3014  05A6  3000               	movlw	0
  3015  05A7  1803               	skipnc
  3016  05A8  3001               	movlw	1
  3017  05A9  07A7               	addwf	___ftadd@f2+1,f
  3018  05AA  3000               	movlw	0
  3019  05AB  1803               	skipnc
  3020  05AC  3001               	movlw	1
  3021  05AD  07A8               	addwf	___ftadd@f2+2,f
  3022  05AE  01AD               	clrf	___ftadd@sign
  3023  05AF  0AAD               	incf	___ftadd@sign,f
  3024  05B0                     l1400:	
  3025  05B0  0826               	movf	___ftadd@f2,w
  3026  05B1  00F0               	movwf	___ftpack@arg
  3027  05B2  0827               	movf	___ftadd@f2+1,w
  3028  05B3  00F1               	movwf	___ftpack@arg+1
  3029  05B4  0828               	movf	___ftadd@f2+2,w
  3030  05B5  00F2               	movwf	___ftpack@arg+2
  3031  05B6  082F               	movf	___ftadd@exp1,w
  3032  05B7  00A9               	movwf	??___ftadd
  3033  05B8  0829               	movf	??___ftadd,w
  3034  05B9  00F3               	movwf	___ftpack@exp
  3035  05BA  082D               	movf	___ftadd@sign,w
  3036  05BB  00AA               	movwf	??___ftadd+1
  3037  05BC  082A               	movf	??___ftadd+1,w
  3038  05BD  00F4               	movwf	___ftpack@sign
  3039  05BE  120A  118A  2031   	fcall	___ftpack
  3040  05C1  0870               	movf	?___ftpack,w
  3041  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  3042  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  3043  05C4  00A3               	movwf	?___ftadd
  3044  05C5  0871               	movf	?___ftpack+1,w
  3045  05C6  00A4               	movwf	?___ftadd+1
  3046  05C7  0872               	movf	?___ftpack+2,w
  3047  05C8  00A5               	movwf	?___ftadd+2
  3048  05C9  0008               	return
  3049  05CA                     __end_of___ftadd:	
  3050                           
  3051                           	psect	text11
  3052  0031                     __ptext11:	
  3053 ;; *************** function ___ftpack *****************
  3054 ;; Defined at:
  3055 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\float.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  arg             3    0[COMMON] unsigned um
  3058 ;;  exp             1    3[COMMON] unsigned char 
  3059 ;;  sign            1    4[COMMON] unsigned char 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;		None
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  3    0[COMMON] float 
  3064 ;; Registers used:
  3065 ;;		wreg, status,2, status,0
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3071 ;;      Params:         5       0       0       0       0
  3072 ;;      Locals:         0       0       0       0       0
  3073 ;;      Temps:          3       0       0       0       0
  3074 ;;      Totals:         8       0       0       0       0
  3075 ;;Total ram usage:        8 bytes
  3076 ;; Hardware stack levels used:    1
  3077 ;; This function calls:
  3078 ;;		Nothing
  3079 ;; This function is called by:
  3080 ;;		___awtoft
  3081 ;;		___ftadd
  3082 ;;		___ftdiv
  3083 ;;		___ftmul
  3084 ;;		___lltoft
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           
  3089                           ;psect for function ___ftpack
  3090  0031                     ___ftpack:	
  3091                           
  3092                           ;incstack = 0
  3093                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3094  0031  0873               	movf	___ftpack@exp,w
  3095  0032  1903               	btfsc	3,2
  3096  0033  2839               	goto	l1232
  3097  0034  0872               	movf	___ftpack@arg+2,w
  3098  0035  0471               	iorwf	___ftpack@arg+1,w
  3099  0036  0470               	iorwf	___ftpack@arg,w
  3100  0037  1D03               	skipz
  3101  0038  284C               	goto	l1238
  3102  0039                     l1232:	
  3103  0039  3000               	movlw	0
  3104  003A  00F0               	movwf	?___ftpack
  3105  003B  3000               	movlw	0
  3106  003C  00F1               	movwf	?___ftpack+1
  3107  003D  3000               	movlw	0
  3108  003E  00F2               	movwf	?___ftpack+2
  3109  003F  0008               	return
  3110  0040                     l1236:	
  3111  0040  3001               	movlw	1
  3112  0041  00F5               	movwf	??___ftpack
  3113  0042  0875               	movf	??___ftpack,w
  3114  0043  07F3               	addwf	___ftpack@exp,f
  3115  0044  3001               	movlw	1
  3116  0045                     u1245:	
  3117  0045  1003               	clrc
  3118  0046  0CF2               	rrf	___ftpack@arg+2,f
  3119  0047  0CF1               	rrf	___ftpack@arg+1,f
  3120  0048  0CF0               	rrf	___ftpack@arg,f
  3121  0049  3EFF               	addlw	-1
  3122  004A  1D03               	skipz
  3123  004B  2845               	goto	u1245
  3124  004C                     l1238:	
  3125  004C  30FE               	movlw	254
  3126  004D  0572               	andwf	___ftpack@arg+2,w
  3127  004E  1903               	btfsc	3,2
  3128  004F  2867               	goto	l421
  3129  0050  2840               	goto	l1236
  3130  0051                     l1240:	
  3131  0051  3001               	movlw	1
  3132  0052  00F5               	movwf	??___ftpack
  3133  0053  0875               	movf	??___ftpack,w
  3134  0054  07F3               	addwf	___ftpack@exp,f
  3135  0055  3001               	movlw	1
  3136  0056  07F0               	addwf	___ftpack@arg,f
  3137  0057  3000               	movlw	0
  3138  0058  1803               	skipnc
  3139  0059  3001               	movlw	1
  3140  005A  07F1               	addwf	___ftpack@arg+1,f
  3141  005B  3000               	movlw	0
  3142  005C  1803               	skipnc
  3143  005D  3001               	movlw	1
  3144  005E  07F2               	addwf	___ftpack@arg+2,f
  3145  005F  3001               	movlw	1
  3146  0060                     u1265:	
  3147  0060  1003               	clrc
  3148  0061  0CF2               	rrf	___ftpack@arg+2,f
  3149  0062  0CF1               	rrf	___ftpack@arg+1,f
  3150  0063  0CF0               	rrf	___ftpack@arg,f
  3151  0064  3EFF               	addlw	-1
  3152  0065  1D03               	skipz
  3153  0066  2860               	goto	u1265
  3154  0067                     l421:	
  3155  0067  30FF               	movlw	255
  3156  0068  0572               	andwf	___ftpack@arg+2,w
  3157  0069  1903               	btfsc	3,2
  3158  006A  2876               	goto	l1248
  3159  006B  2851               	goto	l1240
  3160  006C                     l1246:	
  3161  006C  3001               	movlw	1
  3162  006D  02F3               	subwf	___ftpack@exp,f
  3163  006E  3001               	movlw	1
  3164  006F                     u1285:	
  3165  006F  1003               	clrc
  3166  0070  0DF0               	rlf	___ftpack@arg,f
  3167  0071  0DF1               	rlf	___ftpack@arg+1,f
  3168  0072  0DF2               	rlf	___ftpack@arg+2,f
  3169  0073  3EFF               	addlw	-1
  3170  0074  1D03               	skipz
  3171  0075  286F               	goto	u1285
  3172  0076                     l1248:	
  3173  0076  1BF1               	btfsc	___ftpack@arg+1,7
  3174  0077  287C               	goto	l428
  3175  0078  3002               	movlw	2
  3176  0079  0273               	subwf	___ftpack@exp,w
  3177  007A  1803               	skipnc
  3178  007B  286C               	goto	l1246
  3179  007C                     l428:	
  3180  007C  1873               	btfsc	___ftpack@exp,0
  3181  007D  2884               	goto	l429
  3182  007E  30FF               	movlw	255
  3183  007F  05F0               	andwf	___ftpack@arg,f
  3184  0080  307F               	movlw	127
  3185  0081  05F1               	andwf	___ftpack@arg+1,f
  3186  0082  30FF               	movlw	255
  3187  0083  05F2               	andwf	___ftpack@arg+2,f
  3188  0084                     l429:	
  3189  0084  1003               	clrc
  3190  0085  0CF3               	rrf	___ftpack@exp,f
  3191  0086  0873               	movf	___ftpack@exp,w
  3192  0087  00F5               	movwf	??___ftpack
  3193  0088  01F6               	clrf	??___ftpack+1
  3194  0089  01F7               	clrf	??___ftpack+2
  3195  008A  3010               	movlw	16
  3196  008B                     u1325:	
  3197  008B  1003               	clrc
  3198  008C  0DF5               	rlf	??___ftpack,f
  3199  008D  0DF6               	rlf	??___ftpack+1,f
  3200  008E  0DF7               	rlf	??___ftpack+2,f
  3201  008F  3EFF               	addlw	-1
  3202  0090  1D03               	skipz
  3203  0091  288B               	goto	u1325
  3204  0092  0875               	movf	??___ftpack,w
  3205  0093  04F0               	iorwf	___ftpack@arg,f
  3206  0094  0876               	movf	??___ftpack+1,w
  3207  0095  04F1               	iorwf	___ftpack@arg+1,f
  3208  0096  0877               	movf	??___ftpack+2,w
  3209  0097  04F2               	iorwf	___ftpack@arg+2,f
  3210  0098  0874               	movf	___ftpack@sign,w
  3211  0099  1903               	btfsc	3,2
  3212  009A  0008               	return
  3213  009B  17F2               	bsf	___ftpack@arg+2,7
  3214  009C  0008               	return
  3215  009D                     __end_of___ftpack:	
  3216                           
  3217                           	psect	text12
  3218  03CF                     __ptext12:	
  3219 ;; *************** function _UART_TxNumber *****************
  3220 ;; Defined at:
  3221 ;;		line 259 in file "../00-libfiles/uart.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  v_numericSys    1    wreg     unsigned char 
  3224 ;;  v_number_u32    4    4[BANK0 ] unsigned long 
  3225 ;;  v_numOfDigit    1    8[BANK0 ] unsigned char 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  v_numericSys    1   33[BANK0 ] unsigned char 
  3228 ;;  a              10   21[BANK0 ] unsigned char [10]
  3229 ;;  i               1   34[BANK0 ] unsigned char 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3239 ;;      Params:         0       5       0       0       0
  3240 ;;      Locals:         0      14       0       0       0
  3241 ;;      Temps:          0      12       0       0       0
  3242 ;;      Totals:         0      31       0       0       0
  3243 ;;Total ram usage:       31 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    1
  3246 ;; This function calls:
  3247 ;;		_UART_TxChar
  3248 ;;		___bmul
  3249 ;;		___lldiv
  3250 ;; This function is called by:
  3251 ;;		_UART_TxFloatNumber
  3252 ;;		_UART_Printf
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           
  3257                           ;psect for function _UART_TxNumber
  3258  03CF                     _UART_TxNumber:	
  3259                           
  3260                           ;incstack = 0
  3261                           ; Regs used in _UART_TxNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3262                           ;UART_TxNumber@v_numericSystem_u8 stored from wreg
  3263  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  3264  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  3265  03D1  00C1               	movwf	UART_TxNumber@v_numericSystem_u8
  3266                           
  3267                           ;uart.c: 261: uint8_t i=0,a[10];
  3268  03D2  01C2               	clrf	UART_TxNumber@i
  3269                           
  3270                           ;uart.c: 263: if(2u == v_numericSystem_u8)
  3271  03D3  3002               	movlw	2
  3272  03D4  0641               	xorwf	UART_TxNumber@v_numericSystem_u8,w
  3273  03D5  1903               	btfsc	3,2
  3274  03D6  2C16               	goto	l1296
  3275  03D7  2C1A               	goto	l1298
  3276  03D8                     l1290:	
  3277                           ;uart.c: 264: {
  3278                           ;uart.c: 265: while(v_numOfDigitsToTransmit_u8!=0)
  3279                           
  3280                           
  3281                           ;uart.c: 266: {
  3282                           ;uart.c: 269: i = (((v_number_u32)&((1<<((v_numOfDigitsToTransmit_u8-1)))))!=0u);
  3283  03D8  0824               	movf	UART_TxNumber@v_number_u32,w
  3284  03D9  00A9               	movwf	??_UART_TxNumber
  3285  03DA  0825               	movf	UART_TxNumber@v_number_u32+1,w
  3286  03DB  00AA               	movwf	??_UART_TxNumber+1
  3287  03DC  0826               	movf	UART_TxNumber@v_number_u32+2,w
  3288  03DD  00AB               	movwf	??_UART_TxNumber+2
  3289  03DE  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3290  03DF  00AC               	movwf	??_UART_TxNumber+3
  3291  03E0  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3292  03E1  3EFF               	addlw	-1
  3293  03E2  00AD               	movwf	??_UART_TxNumber+4
  3294  03E3  0AAD               	incf	??_UART_TxNumber+4,f
  3295  03E4  3001               	movlw	1
  3296  03E5  00AE               	movwf	??_UART_TxNumber+5
  3297  03E6  3000               	movlw	0
  3298  03E7  00AF               	movwf	??_UART_TxNumber+6
  3299  03E8  2BEC               	goto	u1424
  3300  03E9                     u1425:	
  3301  03E9  1003               	clrc
  3302  03EA  0DAE               	rlf	??_UART_TxNumber+5,f
  3303  03EB  0DAF               	rlf	??_UART_TxNumber+6,f
  3304  03EC                     u1424:	
  3305  03EC  0BAD               	decfsz	??_UART_TxNumber+4,f
  3306  03ED  2BE9               	goto	u1425
  3307  03EE  082E               	movf	??_UART_TxNumber+5,w
  3308  03EF  00B0               	movwf	??_UART_TxNumber+7
  3309  03F0  082F               	movf	??_UART_TxNumber+6,w
  3310  03F1  00B1               	movwf	??_UART_TxNumber+8
  3311  03F2  3000               	movlw	0
  3312  03F3  1BB1               	btfsc	??_UART_TxNumber+8,7
  3313  03F4  30FF               	movlw	255
  3314  03F5  00B2               	movwf	??_UART_TxNumber+9
  3315  03F6  00B3               	movwf	??_UART_TxNumber+10
  3316  03F7  0830               	movf	??_UART_TxNumber+7,w
  3317  03F8  05A9               	andwf	??_UART_TxNumber,f
  3318  03F9  0831               	movf	??_UART_TxNumber+8,w
  3319  03FA  05AA               	andwf	??_UART_TxNumber+1,f
  3320  03FB  0832               	movf	??_UART_TxNumber+9,w
  3321  03FC  05AB               	andwf	??_UART_TxNumber+2,f
  3322  03FD  0833               	movf	??_UART_TxNumber+10,w
  3323  03FE  05AC               	andwf	??_UART_TxNumber+3,f
  3324  03FF  082C               	movf	??_UART_TxNumber+3,w
  3325  0400  042B               	iorwf	??_UART_TxNumber+2,w
  3326  0401  042A               	iorwf	??_UART_TxNumber+1,w
  3327  0402  0429               	iorwf	??_UART_TxNumber,w
  3328  0403  1903               	btfsc	3,2
  3329  0404  2C07               	goto	u1430
  3330  0405  3001               	movlw	1
  3331  0406  2C08               	goto	u1440
  3332  0407                     u1430:	
  3333  0407  3000               	movlw	0
  3334  0408                     u1440:	
  3335  0408  00B4               	movwf	??_UART_TxNumber+11
  3336  0409  0834               	movf	??_UART_TxNumber+11,w
  3337  040A  00C2               	movwf	UART_TxNumber@i
  3338                           
  3339                           ;uart.c: 270: UART_TxChar(((i)+0x30));
  3340  040B  0842               	movf	UART_TxNumber@i,w
  3341  040C  3E30               	addlw	48
  3342  040D  120A  158A  266E  120A  118A  	fcall	_UART_TxChar
  3343                           
  3344                           ;uart.c: 271: v_numOfDigitsToTransmit_u8--;
  3345  0412  3001               	movlw	1
  3346  0413  1283               	bcf	3,5	;RP0=0, select bank0
  3347  0414  1303               	bcf	3,6	;RP1=0, select bank0
  3348  0415  02A8               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,f
  3349  0416                     l1296:	
  3350  0416  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3351  0417  1903               	btfsc	3,2
  3352  0418  0008               	return
  3353  0419  2BD8               	goto	l1290
  3354  041A                     l1298:	
  3355                           ;uart.c: 272: }
  3356                           ;uart.c: 273: }
  3357                           
  3358                           
  3359                           ;uart.c: 274: else if(v_number_u32==0)
  3360  041A  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3361  041B  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  3362  041C  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  3363  041D  0424               	iorwf	UART_TxNumber@v_number_u32,w
  3364  041E  1D03               	skipz
  3365  041F  2C25               	goto	l1302
  3366                           
  3367                           ;uart.c: 275: {
  3368                           ;uart.c: 278: UART_TxChar('0');
  3369  0420  3030               	movlw	48
  3370  0421  120A  158A  266E   	fcall	_UART_TxChar
  3371                           
  3372                           ;uart.c: 279: }
  3373  0424  0008               	return
  3374  0425                     l1302:	
  3375                           
  3376                           ;uart.c: 280: else
  3377                           ;uart.c: 281: {
  3378                           ;uart.c: 282: for(i=0;i<v_numOfDigitsToTransmit_u8;i++)
  3379  0425  1283               	bcf	3,5	;RP0=0, select bank0
  3380  0426  1303               	bcf	3,6	;RP1=0, select bank0
  3381  0427  01C2               	clrf	UART_TxNumber@i
  3382  0428                     l1320:	
  3383  0428  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3384  0429  0242               	subwf	UART_TxNumber@i,w
  3385  042A  1803               	btfsc	3,0
  3386  042B  2CBD               	goto	l1332
  3387                           
  3388                           ;uart.c: 283: {
  3389                           ;uart.c: 286: if(v_number_u32!=0)
  3390  042C  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3391  042D  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  3392  042E  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  3393  042F  0424               	iorwf	UART_TxNumber@v_number_u32,w
  3394  0430  1903               	skipnz
  3395  0431  2C87               	goto	l1310
  3396                           
  3397                           ;uart.c: 287: {
  3398                           ;uart.c: 294: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u
      +                          32/v_numericSystem_u8)));
  3399  0432  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  3400  0433  00A9               	movwf	??_UART_TxNumber
  3401  0434  0829               	movf	??_UART_TxNumber,w
  3402  0435  00A0               	movwf	___bmul@multiplicand
  3403  0436  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3404  0437  00F7               	movwf	___lldiv@dividend+3
  3405  0438  0826               	movf	UART_TxNumber@v_number_u32+2,w
  3406  0439  00F6               	movwf	___lldiv@dividend+2
  3407  043A  0825               	movf	UART_TxNumber@v_number_u32+1,w
  3408  043B  00F5               	movwf	___lldiv@dividend+1
  3409  043C  0824               	movf	UART_TxNumber@v_number_u32,w
  3410  043D  00F4               	movwf	___lldiv@dividend
  3411  043E  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  3412  043F  00AA               	movwf	??_UART_TxNumber+1
  3413  0440  01AB               	clrf	??_UART_TxNumber+2
  3414  0441  01AC               	clrf	??_UART_TxNumber+3
  3415  0442  01AD               	clrf	??_UART_TxNumber+4
  3416  0443  082D               	movf	??_UART_TxNumber+4,w
  3417  0444  00F3               	movwf	___lldiv@divisor+3
  3418  0445  082C               	movf	??_UART_TxNumber+3,w
  3419  0446  00F2               	movwf	___lldiv@divisor+2
  3420  0447  082B               	movf	??_UART_TxNumber+2,w
  3421  0448  00F1               	movwf	___lldiv@divisor+1
  3422  0449  082A               	movf	??_UART_TxNumber+1,w
  3423  044A  00F0               	movwf	___lldiv@divisor
  3424  044B  120A  158A  273A  120A  118A  	fcall	___lldiv
  3425  0450  0870               	movf	?___lldiv,w
  3426  0451  120A  158A  268C  120A  118A  	fcall	___bmul
  3427  0456  3AFF               	xorlw	255
  3428  0457  3E01               	addlw	1
  3429  0458  1283               	bcf	3,5	;RP0=0, select bank0
  3430  0459  1303               	bcf	3,6	;RP1=0, select bank0
  3431  045A  0724               	addwf	UART_TxNumber@v_number_u32,w
  3432  045B  00AE               	movwf	??_UART_TxNumber+5
  3433  045C  0842               	movf	UART_TxNumber@i,w
  3434  045D  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3435  045E  0084               	movwf	4
  3436  045F  082E               	movf	??_UART_TxNumber+5,w
  3437  0460  1383               	bcf	3,7	;select IRP bank0
  3438  0461  0080               	movwf	0
  3439                           
  3440                           ;uart.c: 295: v_number_u32=v_number_u32/v_numericSystem_u8;
  3441  0462  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  3442  0463  00A9               	movwf	??_UART_TxNumber
  3443  0464  01AA               	clrf	??_UART_TxNumber+1
  3444  0465  01AB               	clrf	??_UART_TxNumber+2
  3445  0466  01AC               	clrf	??_UART_TxNumber+3
  3446  0467  082C               	movf	??_UART_TxNumber+3,w
  3447  0468  00F3               	movwf	___lldiv@divisor+3
  3448  0469  082B               	movf	??_UART_TxNumber+2,w
  3449  046A  00F2               	movwf	___lldiv@divisor+2
  3450  046B  082A               	movf	??_UART_TxNumber+1,w
  3451  046C  00F1               	movwf	___lldiv@divisor+1
  3452  046D  0829               	movf	??_UART_TxNumber,w
  3453  046E  00F0               	movwf	___lldiv@divisor
  3454  046F  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3455  0470  00F7               	movwf	___lldiv@dividend+3
  3456  0471  0826               	movf	UART_TxNumber@v_number_u32+2,w
  3457  0472  00F6               	movwf	___lldiv@dividend+2
  3458  0473  0825               	movf	UART_TxNumber@v_number_u32+1,w
  3459  0474  00F5               	movwf	___lldiv@dividend+1
  3460  0475  0824               	movf	UART_TxNumber@v_number_u32,w
  3461  0476  00F4               	movwf	___lldiv@dividend
  3462  0477  120A  158A  273A  120A  118A  	fcall	___lldiv
  3463  047C  0873               	movf	?___lldiv+3,w
  3464  047D  1283               	bcf	3,5	;RP0=0, select bank0
  3465  047E  1303               	bcf	3,6	;RP1=0, select bank0
  3466  047F  00A7               	movwf	UART_TxNumber@v_number_u32+3
  3467  0480  0872               	movf	?___lldiv+2,w
  3468  0481  00A6               	movwf	UART_TxNumber@v_number_u32+2
  3469  0482  0871               	movf	?___lldiv+1,w
  3470  0483  00A5               	movwf	UART_TxNumber@v_number_u32+1
  3471  0484  0870               	movf	?___lldiv,w
  3472  0485  00A4               	movwf	UART_TxNumber@v_number_u32
  3473                           
  3474                           ;uart.c: 296: }
  3475  0486  2C93               	goto	l1318
  3476  0487                     l1310:	
  3477                           
  3478                           ;uart.c: 297: else if( (v_numOfDigitsToTransmit_u8 == 0xffu) ||
  3479                           ;uart.c: 298: (v_numOfDigitsToTransmit_u8 > 10u))
  3480  0487  0A28               	incf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3481  0488  1903               	btfsc	3,2
  3482  0489  2CBD               	goto	l1332
  3483  048A  300B               	movlw	11
  3484  048B  0228               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3485  048C  1803               	btfsc	3,0
  3486  048D  2CBD               	goto	l1332
  3487                           
  3488                           ;uart.c: 304: else
  3489                           ;uart.c: 305: {
  3490                           ;uart.c: 309: a[i]=0;
  3491                           
  3492                           ;uart.c: 303: }
  3493                           
  3494                           ;uart.c: 299: {
  3495                           ;uart.c: 302: break;
  3496  048E  0842               	movf	UART_TxNumber@i,w
  3497  048F  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3498  0490  0084               	movwf	4
  3499  0491  1383               	bcf	3,7	;select IRP bank0
  3500  0492  0180               	clrf	0
  3501  0493                     l1318:	
  3502  0493  3001               	movlw	1
  3503  0494  00A9               	movwf	??_UART_TxNumber
  3504  0495  0829               	movf	??_UART_TxNumber,w
  3505  0496  07C2               	addwf	UART_TxNumber@i,f
  3506  0497  2C28               	goto	l1320
  3507  0498                     l1322:	
  3508                           ;uart.c: 310: }
  3509                           ;uart.c: 311: }
  3510                           ;uart.c: 313: while(i)
  3511                           
  3512                           
  3513                           ;uart.c: 314: {
  3514                           ;uart.c: 316: UART_TxChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  3515  0498  0842               	movf	UART_TxNumber@i,w
  3516  0499  3EFF               	addlw	255
  3517  049A  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3518  049B  0084               	movwf	4
  3519  049C  300A               	movlw	10
  3520  049D  1383               	bcf	3,7	;select IRP bank0
  3521  049E  0200               	subwf	0,w
  3522  049F  1803               	skipnc
  3523  04A0  2CA8               	goto	l1326
  3524  04A1  0842               	movf	UART_TxNumber@i,w
  3525  04A2  3EFF               	addlw	255
  3526  04A3  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3527  04A4  0084               	movwf	4
  3528  04A5  0800               	movf	0,w
  3529  04A6  3E30               	addlw	48
  3530  04A7  2CAE               	goto	L2
  3531  04A8                     l1326:	
  3532  04A8  0842               	movf	UART_TxNumber@i,w
  3533  04A9  3EFF               	addlw	255
  3534  04AA  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3535  04AB  0084               	movwf	4
  3536  04AC  0800               	movf	0,w
  3537  04AD  3E37               	addlw	55
  3538  04AE                     L2:	
  3539  04AE  00BF               	movwf	_UART_TxNumber$63
  3540  04AF  3000               	movlw	0
  3541  04B0  1803               	skipnc
  3542  04B1  3001               	movlw	1
  3543  04B2  00C0               	movwf	_UART_TxNumber$63+1
  3544  04B3  083F               	movf	_UART_TxNumber$63,w
  3545  04B4  120A  158A  266E  120A  118A  	fcall	_UART_TxChar
  3546                           
  3547                           ;uart.c: 317: i--;
  3548  04B9  3001               	movlw	1
  3549  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  3550  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  3551  04BC  02C2               	subwf	UART_TxNumber@i,f
  3552  04BD                     l1332:	
  3553  04BD  0842               	movf	UART_TxNumber@i,w
  3554  04BE  1903               	btfsc	3,2
  3555  04BF  0008               	return
  3556  04C0  2C98               	goto	l1322
  3557  04C1                     __end_of_UART_TxNumber:	
  3558                           
  3559                           	psect	text13
  3560  0E8C                     __ptext13:	
  3561 ;; *************** function ___bmul *****************
  3562 ;; Defined at:
  3563 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\Umul8.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;  multiplier      1    wreg     unsigned char 
  3566 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3569 ;;  product         1    2[BANK0 ] unsigned char 
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      unsigned char 
  3572 ;; Registers used:
  3573 ;;		wreg, status,2, status,0
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3579 ;;      Params:         0       1       0       0       0
  3580 ;;      Locals:         0       2       0       0       0
  3581 ;;      Temps:          0       1       0       0       0
  3582 ;;      Totals:         0       4       0       0       0
  3583 ;;Total ram usage:        4 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; This function calls:
  3586 ;;		Nothing
  3587 ;; This function is called by:
  3588 ;;		_UART_TxNumber
  3589 ;;		_UART_Printf
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           
  3594                           ;psect for function ___bmul
  3595  0E8C                     ___bmul:	
  3596                           
  3597                           ;incstack = 0
  3598                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3599                           ;___bmul@multiplier stored from wreg
  3600  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  3601  0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  3602  0E8E  00A3               	movwf	___bmul@multiplier
  3603  0E8F  01A2               	clrf	___bmul@product
  3604  0E90                     l1216:	
  3605  0E90  1C23               	btfss	___bmul@multiplier,0
  3606  0E91  2E96               	goto	l1220
  3607  0E92  0820               	movf	___bmul@multiplicand,w
  3608  0E93  00A1               	movwf	??___bmul
  3609  0E94  0821               	movf	??___bmul,w
  3610  0E95  07A2               	addwf	___bmul@product,f
  3611  0E96                     l1220:	
  3612  0E96  1003               	clrc
  3613  0E97  0DA0               	rlf	___bmul@multiplicand,f
  3614  0E98  1003               	clrc
  3615  0E99  0CA3               	rrf	___bmul@multiplier,f
  3616  0E9A  0823               	movf	___bmul@multiplier,w
  3617  0E9B  1D03               	btfss	3,2
  3618  0E9C  2E90               	goto	l1216
  3619  0E9D  0822               	movf	___bmul@product,w
  3620  0E9E  0008               	return
  3621  0E9F                     __end_of___bmul:	
  3622                           
  3623                           	psect	text14
  3624  0E6E                     __ptext14:	
  3625 ;; *************** function _UART_TxChar *****************
  3626 ;; Defined at:
  3627 ;;		line 144 in file "../00-libfiles/uart.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;  var_uartData    1    wreg     unsigned char 
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;  var_uartData    1    0[COMMON] unsigned char 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      void 
  3634 ;; Registers used:
  3635 ;;		wreg
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3641 ;;      Params:         0       0       0       0       0
  3642 ;;      Locals:         1       0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0
  3644 ;;      Totals:         1       0       0       0       0
  3645 ;;Total ram usage:        1 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		_UART_TxString
  3651 ;;		_UART_TxNumber
  3652 ;;		_UART_TxFloatNumber
  3653 ;;		_UART_Printf
  3654 ;;		_UART_RxString
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           
  3659                           ;psect for function _UART_TxChar
  3660  0E6E                     _UART_TxChar:	
  3661                           
  3662                           ;incstack = 0
  3663                           ; Regs used in _UART_TxChar: [wreg]
  3664                           ;UART_TxChar@var_uartData_u8 stored from wreg
  3665  0E6E  00F0               	movwf	UART_TxChar@var_uartData_u8
  3666  0E6F                     l39:	
  3667                           ;uart.c: 146: while(TXIF==0);
  3668                           
  3669  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  3670  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  3671  0E71  1E0C               	btfss	12,4	;volatile
  3672  0E72  2E6F               	goto	l39
  3673                           
  3674                           ;uart.c: 147: TXIF=0;
  3675  0E73  120C               	bcf	12,4	;volatile
  3676                           
  3677                           ;uart.c: 148: TXREG=var_uartData_u8;
  3678  0E74  0870               	movf	UART_TxChar@var_uartData_u8,w
  3679  0E75  0099               	movwf	25	;volatile
  3680  0E76  0008               	return
  3681  0E77                     __end_of_UART_TxChar:	
  3682                           
  3683                           	psect	text15
  3684  0EB4                     __ptext15:	
  3685 ;; *************** function _UART_Init *****************
  3686 ;; Defined at:
  3687 ;;		line 65 in file "../00-libfiles/uart.c"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;  var_baudRate    4   16[BANK0 ] unsigned long 
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;		None
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      void 
  3694 ;; Registers used:
  3695 ;;		wreg, status,2, status,0, pclath, cstack
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3701 ;;      Params:         0       4       0       0       0
  3702 ;;      Locals:         0       0       0       0       0
  3703 ;;      Temps:          0       0       0       0       0
  3704 ;;      Totals:         0       4       0       0       0
  3705 ;;Total ram usage:        4 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; Hardware stack levels required when called:    2
  3708 ;; This function calls:
  3709 ;;		_UART_SetBaudRate
  3710 ;; This function is called by:
  3711 ;;		_main
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           
  3716                           ;psect for function _UART_Init
  3717  0EB4                     _UART_Init:	
  3718                           
  3719                           ;uart.c: 67: TRISC=0x80;
  3720                           
  3721                           ;incstack = 0
  3722                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3723  0EB4  3080               	movlw	128
  3724  0EB5  1683               	bsf	3,5	;RP0=1, select bank1
  3725  0EB6  1303               	bcf	3,6	;RP1=0, select bank1
  3726  0EB7  0087               	movwf	7	;volatile
  3727                           
  3728                           ;uart.c: 68: TXSTA=0x20;
  3729  0EB8  3020               	movlw	32
  3730  0EB9  0098               	movwf	24	;volatile
  3731                           
  3732                           ;uart.c: 69: RCSTA=0x90;
  3733  0EBA  3090               	movlw	144
  3734  0EBB  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0EBC  1303               	bcf	3,6	;RP1=0, select bank0
  3736  0EBD  0098               	movwf	24	;volatile
  3737                           
  3738                           ;uart.c: 70: UART_SetBaudRate(var_baudRate_u32);
  3739  0EBE  0833               	movf	UART_Init@var_baudRate_u32+3,w
  3740  0EBF  00A3               	movwf	UART_SetBaudRate@var_baudRate_u32+3
  3741  0EC0  0832               	movf	UART_Init@var_baudRate_u32+2,w
  3742  0EC1  00A2               	movwf	UART_SetBaudRate@var_baudRate_u32+2
  3743  0EC2  0831               	movf	UART_Init@var_baudRate_u32+1,w
  3744  0EC3  00A1               	movwf	UART_SetBaudRate@var_baudRate_u32+1
  3745  0EC4  0830               	movf	UART_Init@var_baudRate_u32,w
  3746  0EC5  00A0               	movwf	UART_SetBaudRate@var_baudRate_u32
  3747  0EC6  120A  118A  209D   	fcall	_UART_SetBaudRate
  3748  0EC9  0008               	return
  3749  0ECA                     __end_of_UART_Init:	
  3750                           
  3751                           	psect	text16
  3752  009D                     __ptext16:	
  3753 ;; *************** function _UART_SetBaudRate *****************
  3754 ;; Defined at:
  3755 ;;		line 90 in file "../00-libfiles/uart.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  var_baudRate    4    0[BANK0 ] unsigned long 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;  RegValue        4   12[BANK0 ] unsigned long 
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  1    wreg      void 
  3762 ;; Registers used:
  3763 ;;		wreg, status,2, status,0, pclath, cstack
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3769 ;;      Params:         0       4       0       0       0
  3770 ;;      Locals:         0       4       0       0       0
  3771 ;;      Temps:          0       8       0       0       0
  3772 ;;      Totals:         0      16       0       0       0
  3773 ;;Total ram usage:       16 bytes
  3774 ;; Hardware stack levels used:    1
  3775 ;; Hardware stack levels required when called:    1
  3776 ;; This function calls:
  3777 ;;		___lldiv
  3778 ;; This function is called by:
  3779 ;;		_UART_Init
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782                           
  3783                           
  3784                           ;psect for function _UART_SetBaudRate
  3785  009D                     _UART_SetBaudRate:	
  3786                           
  3787                           ;uart.c: 92: uint32_t RegValue;
  3788                           ;uart.c: 94: if((var_baudRate_u32 >= 2400) && (var_baudRate_u32<=115200UL))
  3789                           
  3790                           ;incstack = 0
  3791                           ; Regs used in _UART_SetBaudRate: [wreg+status,2+status,0+pclath+cstack]
  3792  009D  1283               	bcf	3,5	;RP0=0, select bank0
  3793  009E  1303               	bcf	3,6	;RP1=0, select bank0
  3794  009F  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  3795  00A0  1D03               	btfss	3,2
  3796  00A1  28AF               	goto	l1516
  3797  00A2  0822               	movf	UART_SetBaudRate@var_baudRate_u32+2,w
  3798  00A3  1D03               	btfss	3,2
  3799  00A4  28AF               	goto	l1516
  3800  00A5  3009               	movlw	9
  3801  00A6  0221               	subwf	UART_SetBaudRate@var_baudRate_u32+1,w
  3802  00A7  1D03               	skipz
  3803  00A8  28AD               	goto	u2043
  3804  00A9  3060               	movlw	96
  3805  00AA  0220               	subwf	UART_SetBaudRate@var_baudRate_u32,w
  3806  00AB  1D03               	skipz
  3807  00AC  28AD               	goto	u2043
  3808  00AD                     u2043:	
  3809  00AD  1C03               	btfss	3,0
  3810  00AE  290A               	goto	l1520
  3811  00AF                     l1516:	
  3812  00AF  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  3813  00B0  1D03               	btfss	3,2
  3814  00B1  290A               	goto	l1520
  3815  00B2  3001               	movlw	1
  3816  00B3  0222               	subwf	UART_SetBaudRate@var_baudRate_u32+2,w
  3817  00B4  1D03               	skipz
  3818  00B5  28BE               	goto	u2053
  3819  00B6  30C2               	movlw	194
  3820  00B7  0221               	subwf	UART_SetBaudRate@var_baudRate_u32+1,w
  3821  00B8  1D03               	skipz
  3822  00B9  28BE               	goto	u2053
  3823  00BA  3001               	movlw	1
  3824  00BB  0220               	subwf	UART_SetBaudRate@var_baudRate_u32,w
  3825  00BC  1D03               	skipz
  3826  00BD  28BE               	goto	u2053
  3827  00BE                     u2053:	
  3828  00BE  1803               	btfsc	3,0
  3829  00BF  290A               	goto	l1520
  3830                           
  3831                           ;uart.c: 95: {
  3832                           ;uart.c: 98: RegValue = (uint32_t)((20000000UL / (64*(uint32_t)var_baudRate_u32)) - 1);
  3833  00C0  30FF               	movlw	255
  3834  00C1  00A4               	movwf	??_UART_SetBaudRate
  3835  00C2  30FF               	movlw	255
  3836  00C3  00A5               	movwf	??_UART_SetBaudRate+1
  3837  00C4  30FF               	movlw	255
  3838  00C5  00A6               	movwf	??_UART_SetBaudRate+2
  3839  00C6  30FF               	movlw	255
  3840  00C7  00A7               	movwf	??_UART_SetBaudRate+3
  3841  00C8  0820               	movf	UART_SetBaudRate@var_baudRate_u32,w
  3842  00C9  00A8               	movwf	??_UART_SetBaudRate+4
  3843  00CA  0821               	movf	UART_SetBaudRate@var_baudRate_u32+1,w
  3844  00CB  00A9               	movwf	??_UART_SetBaudRate+5
  3845  00CC  0822               	movf	UART_SetBaudRate@var_baudRate_u32+2,w
  3846  00CD  00AA               	movwf	??_UART_SetBaudRate+6
  3847  00CE  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  3848  00CF  00AB               	movwf	??_UART_SetBaudRate+7
  3849  00D0  3006               	movlw	6
  3850  00D1                     u2065:	
  3851  00D1  1003               	clrc
  3852  00D2  0DA8               	rlf	??_UART_SetBaudRate+4,f
  3853  00D3  0DA9               	rlf	??_UART_SetBaudRate+5,f
  3854  00D4  0DAA               	rlf	??_UART_SetBaudRate+6,f
  3855  00D5  0DAB               	rlf	??_UART_SetBaudRate+7,f
  3856  00D6  3EFF               	addlw	-1
  3857  00D7  1D03               	skipz
  3858  00D8  28D1               	goto	u2065
  3859  00D9  082B               	movf	??_UART_SetBaudRate+7,w
  3860  00DA  00F3               	movwf	___lldiv@divisor+3
  3861  00DB  082A               	movf	??_UART_SetBaudRate+6,w
  3862  00DC  00F2               	movwf	___lldiv@divisor+2
  3863  00DD  0829               	movf	??_UART_SetBaudRate+5,w
  3864  00DE  00F1               	movwf	___lldiv@divisor+1
  3865  00DF  0828               	movf	??_UART_SetBaudRate+4,w
  3866  00E0  00F0               	movwf	___lldiv@divisor
  3867  00E1  3001               	movlw	1
  3868  00E2  00F7               	movwf	___lldiv@dividend+3
  3869  00E3  3031               	movlw	49
  3870  00E4  00F6               	movwf	___lldiv@dividend+2
  3871  00E5  302D               	movlw	45
  3872  00E6  00F5               	movwf	___lldiv@dividend+1
  3873  00E7  3000               	movlw	0
  3874  00E8  00F4               	movwf	___lldiv@dividend
  3875  00E9  120A  158A  273A  120A  118A  	fcall	___lldiv
  3876  00EE  0870               	movf	?___lldiv,w
  3877  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  3878  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  3879  00F1  07A4               	addwf	??_UART_SetBaudRate,f
  3880  00F2  0871               	movf	?___lldiv+1,w
  3881  00F3  1803               	skipnc
  3882  00F4  0F71               	incfsz	?___lldiv+1,w
  3883  00F5  28F7               	goto	u2070
  3884  00F6  28F8               	goto	u2071
  3885  00F7                     u2070:	
  3886  00F7  07A5               	addwf	??_UART_SetBaudRate+1,f
  3887  00F8                     u2071:	
  3888  00F8  0872               	movf	?___lldiv+2,w
  3889  00F9  1803               	skipnc
  3890  00FA  0F72               	incfsz	?___lldiv+2,w
  3891  00FB  28FD               	goto	u2072
  3892  00FC  28FE               	goto	u2073
  3893  00FD                     u2072:	
  3894  00FD  07A6               	addwf	??_UART_SetBaudRate+2,f
  3895  00FE                     u2073:	
  3896  00FE  0873               	movf	?___lldiv+3,w
  3897  00FF  1803               	skipnc
  3898  0100  0A73               	incf	?___lldiv+3,w
  3899  0101  07A7               	addwf	??_UART_SetBaudRate+3,f
  3900  0102  0827               	movf	??_UART_SetBaudRate+3,w
  3901  0103  00AF               	movwf	UART_SetBaudRate@RegValue+3
  3902  0104  0826               	movf	??_UART_SetBaudRate+2,w
  3903  0105  00AE               	movwf	UART_SetBaudRate@RegValue+2
  3904  0106  0825               	movf	??_UART_SetBaudRate+1,w
  3905  0107  00AD               	movwf	UART_SetBaudRate@RegValue+1
  3906  0108  0824               	movf	??_UART_SetBaudRate,w
  3907  0109  2911               	goto	L3
  3908  010A                     l1520:	
  3909                           ;uart.c: 99: }
  3910                           
  3911                           
  3912                           ;uart.c: 100: else
  3913                           ;uart.c: 101: {
  3914                           ;uart.c: 103: RegValue = (uint32_t)((20000000UL / (64*(uint32_t)9600)) - 1);
  3915  010A  3000               	movlw	0
  3916  010B  00AF               	movwf	UART_SetBaudRate@RegValue+3
  3917  010C  3000               	movlw	0
  3918  010D  00AE               	movwf	UART_SetBaudRate@RegValue+2
  3919  010E  3000               	movlw	0
  3920  010F  00AD               	movwf	UART_SetBaudRate@RegValue+1
  3921  0110  301F               	movlw	31
  3922  0111                     L3:	
  3923  0111  00AC               	movwf	UART_SetBaudRate@RegValue
  3924                           
  3925                           ;uart.c: 104: }
  3926                           ;uart.c: 106: SPBRG = (uint8_t)RegValue;
  3927  0112  082C               	movf	UART_SetBaudRate@RegValue,w
  3928  0113  1683               	bsf	3,5	;RP0=1, select bank1
  3929  0114  1303               	bcf	3,6	;RP1=0, select bank1
  3930  0115  0099               	movwf	25	;volatile
  3931  0116  0008               	return
  3932  0117                     __end_of_UART_SetBaudRate:	
  3933                           
  3934                           	psect	text17
  3935  0F3A                     __ptext17:	
  3936 ;; *************** function ___lldiv *****************
  3937 ;; Defined at:
  3938 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  divisor         4    0[COMMON] unsigned long 
  3941 ;;  dividend        4    4[COMMON] unsigned long 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  quotient        4    9[COMMON] unsigned long 
  3944 ;;  counter         1   13[COMMON] unsigned char 
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  4    0[COMMON] unsigned long 
  3947 ;; Registers used:
  3948 ;;		wreg, status,2, status,0
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3954 ;;      Params:         8       0       0       0       0
  3955 ;;      Locals:         5       0       0       0       0
  3956 ;;      Temps:          1       0       0       0       0
  3957 ;;      Totals:        14       0       0       0       0
  3958 ;;Total ram usage:       14 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; This function calls:
  3961 ;;		Nothing
  3962 ;; This function is called by:
  3963 ;;		_UART_SetBaudRate
  3964 ;;		_UART_TxNumber
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           
  3969                           ;psect for function ___lldiv
  3970  0F3A                     ___lldiv:	
  3971                           
  3972                           ;incstack = 0
  3973                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3974  0F3A  3000               	movlw	0
  3975  0F3B  00FC               	movwf	___lldiv@quotient+3
  3976  0F3C  3000               	movlw	0
  3977  0F3D  00FB               	movwf	___lldiv@quotient+2
  3978  0F3E  3000               	movlw	0
  3979  0F3F  00FA               	movwf	___lldiv@quotient+1
  3980  0F40  3000               	movlw	0
  3981  0F41  00F9               	movwf	___lldiv@quotient
  3982  0F42  0873               	movf	___lldiv@divisor+3,w
  3983  0F43  0472               	iorwf	___lldiv@divisor+2,w
  3984  0F44  0471               	iorwf	___lldiv@divisor+1,w
  3985  0F45  0470               	iorwf	___lldiv@divisor,w
  3986  0F46  1903               	skipnz
  3987  0F47  2F8F               	goto	l1280
  3988  0F48  01FD               	clrf	___lldiv@counter
  3989  0F49  0AFD               	incf	___lldiv@counter,f
  3990  0F4A                     l1266:	
  3991  0F4A  1BF3               	btfsc	___lldiv@divisor+3,7
  3992  0F4B  2F5A               	goto	l1268
  3993  0F4C  3001               	movlw	1
  3994  0F4D  00F8               	movwf	??___lldiv
  3995  0F4E                     u1355:	
  3996  0F4E  1003               	clrc
  3997  0F4F  0DF0               	rlf	___lldiv@divisor,f
  3998  0F50  0DF1               	rlf	___lldiv@divisor+1,f
  3999  0F51  0DF2               	rlf	___lldiv@divisor+2,f
  4000  0F52  0DF3               	rlf	___lldiv@divisor+3,f
  4001  0F53  0BF8               	decfsz	??___lldiv,f
  4002  0F54  2F4E               	goto	u1355
  4003  0F55  3001               	movlw	1
  4004  0F56  00F8               	movwf	??___lldiv
  4005  0F57  0878               	movf	??___lldiv,w
  4006  0F58  07FD               	addwf	___lldiv@counter,f
  4007  0F59  2F4A               	goto	l1266
  4008  0F5A                     l1268:	
  4009  0F5A  3001               	movlw	1
  4010  0F5B  00F8               	movwf	??___lldiv
  4011  0F5C                     u1375:	
  4012  0F5C  1003               	clrc
  4013  0F5D  0DF9               	rlf	___lldiv@quotient,f
  4014  0F5E  0DFA               	rlf	___lldiv@quotient+1,f
  4015  0F5F  0DFB               	rlf	___lldiv@quotient+2,f
  4016  0F60  0DFC               	rlf	___lldiv@quotient+3,f
  4017  0F61  0BF8               	decfsz	??___lldiv,f
  4018  0F62  2F5C               	goto	u1375
  4019  0F63  0873               	movf	___lldiv@divisor+3,w
  4020  0F64  0277               	subwf	___lldiv@dividend+3,w
  4021  0F65  1D03               	skipz
  4022  0F66  2F71               	goto	u1385
  4023  0F67  0872               	movf	___lldiv@divisor+2,w
  4024  0F68  0276               	subwf	___lldiv@dividend+2,w
  4025  0F69  1D03               	skipz
  4026  0F6A  2F71               	goto	u1385
  4027  0F6B  0871               	movf	___lldiv@divisor+1,w
  4028  0F6C  0275               	subwf	___lldiv@dividend+1,w
  4029  0F6D  1D03               	skipz
  4030  0F6E  2F71               	goto	u1385
  4031  0F6F  0870               	movf	___lldiv@divisor,w
  4032  0F70  0274               	subwf	___lldiv@dividend,w
  4033  0F71                     u1385:	
  4034  0F71  1C03               	skipc
  4035  0F72  2F82               	goto	l1276
  4036  0F73  0870               	movf	___lldiv@divisor,w
  4037  0F74  02F4               	subwf	___lldiv@dividend,f
  4038  0F75  0871               	movf	___lldiv@divisor+1,w
  4039  0F76  1C03               	skipc
  4040  0F77  0F71               	incfsz	___lldiv@divisor+1,w
  4041  0F78  02F5               	subwf	___lldiv@dividend+1,f
  4042  0F79  0872               	movf	___lldiv@divisor+2,w
  4043  0F7A  1C03               	skipc
  4044  0F7B  0F72               	incfsz	___lldiv@divisor+2,w
  4045  0F7C  02F6               	subwf	___lldiv@dividend+2,f
  4046  0F7D  0873               	movf	___lldiv@divisor+3,w
  4047  0F7E  1C03               	skipc
  4048  0F7F  0F73               	incfsz	___lldiv@divisor+3,w
  4049  0F80  02F7               	subwf	___lldiv@dividend+3,f
  4050  0F81  1479               	bsf	___lldiv@quotient,0
  4051  0F82                     l1276:	
  4052  0F82  3001               	movlw	1
  4053  0F83                     u1395:	
  4054  0F83  1003               	clrc
  4055  0F84  0CF3               	rrf	___lldiv@divisor+3,f
  4056  0F85  0CF2               	rrf	___lldiv@divisor+2,f
  4057  0F86  0CF1               	rrf	___lldiv@divisor+1,f
  4058  0F87  0CF0               	rrf	___lldiv@divisor,f
  4059  0F88  3EFF               	addlw	-1
  4060  0F89  1D03               	skipz
  4061  0F8A  2F83               	goto	u1395
  4062  0F8B  3001               	movlw	1
  4063  0F8C  02FD               	subwf	___lldiv@counter,f
  4064  0F8D  1D03               	btfss	3,2
  4065  0F8E  2F5A               	goto	l1268
  4066  0F8F                     l1280:	
  4067  0F8F  087C               	movf	___lldiv@quotient+3,w
  4068  0F90  00F3               	movwf	?___lldiv+3
  4069  0F91  087B               	movf	___lldiv@quotient+2,w
  4070  0F92  00F2               	movwf	?___lldiv+2
  4071  0F93  087A               	movf	___lldiv@quotient+1,w
  4072  0F94  00F1               	movwf	?___lldiv+1
  4073  0F95  0879               	movf	___lldiv@quotient,w
  4074  0F96  00F0               	movwf	?___lldiv
  4075  0F97  0008               	return
  4076  0F98                     __end_of___lldiv:	
  4077                           
  4078                           	psect	text18
  4079  0E66                     __ptext18:	
  4080 ;; *************** function _ADC_Init *****************
  4081 ;; Defined at:
  4082 ;;		line 54 in file "../00-libfiles/adc.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, status,2
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4096 ;;      Params:         0       0       0       0       0
  4097 ;;      Locals:         0       0       0       0       0
  4098 ;;      Temps:          0       0       0       0       0
  4099 ;;      Totals:         0       0       0       0       0
  4100 ;;Total ram usage:        0 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; This function calls:
  4103 ;;		Nothing
  4104 ;; This function is called by:
  4105 ;;		_main
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           
  4110                           ;psect for function _ADC_Init
  4111  0E66                     _ADC_Init:	
  4112                           
  4113                           ;adc.c: 56: ADCON0=0x00;
  4114                           
  4115                           ;incstack = 0
  4116                           ; Regs used in _ADC_Init: [wreg+status,2]
  4117  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  4118  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  4119  0E68  019F               	clrf	31	;volatile
  4120                           
  4121                           ;adc.c: 57: ADCON1=0x80;
  4122  0E69  3080               	movlw	128
  4123  0E6A  1683               	bsf	3,5	;RP0=1, select bank1
  4124  0E6B  1303               	bcf	3,6	;RP1=0, select bank1
  4125  0E6C  009F               	movwf	31	;volatile
  4126  0E6D  0008               	return
  4127  0E6E                     __end_of_ADC_Init:	
  4128                           
  4129                           	psect	text19
  4130  0EEB                     __ptext19:	
  4131 ;; *************** function _ADC_GetAdcValue *****************
  4132 ;; Defined at:
  4133 ;;		line 76 in file "../00-libfiles/adc.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  var_adcChann    1    wreg     unsigned char 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;  var_adcChann    1    5[COMMON] unsigned char 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  2    2[COMMON] unsigned int 
  4140 ;; Registers used:
  4141 ;;		wreg, status,2, status,0, pclath, cstack
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4147 ;;      Params:         2       0       0       0       0
  4148 ;;      Locals:         1       0       0       0       0
  4149 ;;      Temps:          1       0       0       0       0
  4150 ;;      Totals:         4       0       0       0       0
  4151 ;;Total ram usage:        4 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; Hardware stack levels required when called:    1
  4154 ;; This function calls:
  4155 ;;		_DELAY_us
  4156 ;; This function is called by:
  4157 ;;		_main
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           
  4162                           ;psect for function _ADC_GetAdcValue
  4163  0EEB                     _ADC_GetAdcValue:	
  4164                           
  4165                           ;incstack = 0
  4166                           ; Regs used in _ADC_GetAdcValue: [wreg+status,2+status,0+pclath+cstack]
  4167                           ;ADC_GetAdcValue@var_adcChannel_u8 stored from wreg
  4168  0EEB  00F5               	movwf	ADC_GetAdcValue@var_adcChannel_u8
  4169                           
  4170                           ;adc.c: 79: ADCON0= (var_adcChannel_u8<<3);
  4171  0EEC  0875               	movf	ADC_GetAdcValue@var_adcChannel_u8,w
  4172  0EED  00F4               	movwf	??_ADC_GetAdcValue
  4173  0EEE  3002               	movlw	2
  4174  0EEF                     u2205:	
  4175  0EEF  1003               	clrc
  4176  0EF0  0DF4               	rlf	??_ADC_GetAdcValue,f
  4177  0EF1  3EFF               	addlw	-1
  4178  0EF2  1D03               	skipz
  4179  0EF3  2EEF               	goto	u2205
  4180  0EF4  1003               	clrc
  4181  0EF5  0D74               	rlf	??_ADC_GetAdcValue,w
  4182  0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  4183  0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  4184  0EF8  009F               	movwf	31	;volatile
  4185                           
  4186                           ;adc.c: 80: ADON = 1;
  4187  0EF9  141F               	bsf	31,0	;volatile
  4188                           
  4189                           ;adc.c: 81: DELAY_us(50);
  4190  0EFA  3032               	movlw	50
  4191  0EFB  00F0               	movwf	DELAY_us@us_count
  4192  0EFC  3000               	movlw	0
  4193  0EFD  00F1               	movwf	DELAY_us@us_count+1
  4194  0EFE  120A  158A  2681  120A  158A  	fcall	_DELAY_us
  4195                           
  4196                           ;adc.c: 83: GO=1;
  4197  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  4198  0F04  1303               	bcf	3,6	;RP1=0, select bank0
  4199  0F05  151F               	bsf	31,2	;volatile
  4200  0F06                     l159:	
  4201                           ;adc.c: 84: while(GO_DONE==1);
  4202                           
  4203  0F06  191F               	btfsc	31,2	;volatile
  4204  0F07  2F06               	goto	l159
  4205                           
  4206                           ;adc.c: 87: return((ADRESH<<8) + ADRESL);
  4207  0F08  081E               	movf	30,w	;volatile
  4208  0F09  00F3               	movwf	?_ADC_GetAdcValue+1
  4209  0F0A  1683               	bsf	3,5	;RP0=1, select bank1
  4210  0F0B  1303               	bcf	3,6	;RP1=0, select bank1
  4211  0F0C  081E               	movf	30,w	;volatile
  4212  0F0D  00F2               	movwf	?_ADC_GetAdcValue
  4213  0F0E  0008               	return
  4214  0F0F                     __end_of_ADC_GetAdcValue:	
  4215                           
  4216                           	psect	text20
  4217  0E81                     __ptext20:	
  4218 ;; *************** function _DELAY_us *****************
  4219 ;; Defined at:
  4220 ;;		line 56 in file "../00-libfiles/delay.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;  us_count        2    0[COMMON] unsigned int 
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;		None
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  1    wreg      void 
  4227 ;; Registers used:
  4228 ;;		wreg, status,2, status,0
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4234 ;;      Params:         2       0       0       0       0
  4235 ;;      Locals:         0       0       0       0       0
  4236 ;;      Temps:          0       0       0       0       0
  4237 ;;      Totals:         2       0       0       0       0
  4238 ;;Total ram usage:        2 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; This function calls:
  4241 ;;		Nothing
  4242 ;; This function is called by:
  4243 ;;		_ADC_GetAdcValue
  4244 ;;		_DELAY_ms
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           
  4249                           ;psect for function _DELAY_us
  4250  0E81                     _DELAY_us:	
  4251  0E81                     l1544:	
  4252                           ;delay.c: 58: while (us_count != 0)
  4253                           
  4254                           ;incstack = 0
  4255                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  4256                           
  4257  0E81  0870               	movf	DELAY_us@us_count,w
  4258  0E82  0471               	iorwf	DELAY_us@us_count+1,w
  4259  0E83  1903               	btfsc	3,2
  4260  0E84  0008               	return
  4261                           
  4262                           ;delay.c: 59: {
  4263                           ;delay.c: 60: us_count--;
  4264  0E85  3001               	movlw	1
  4265  0E86  02F0               	subwf	DELAY_us@us_count,f
  4266  0E87  3000               	movlw	0
  4267  0E88  1C03               	skipc
  4268  0E89  03F1               	decf	DELAY_us@us_count+1,f
  4269  0E8A  02F1               	subwf	DELAY_us@us_count+1,f
  4270  0E8B  2E81               	goto	l1544
  4271  0E8C                     __end_of_DELAY_us:	
  4272  007E                     btemp	set	126	;btemp
  4273  007E                     wtemp	set	126
  4274  007E                     wtemp0	set	126
  4275  0080                     wtemp1	set	128
  4276  0082                     wtemp2	set	130
  4277  0084                     wtemp3	set	132
  4278  0086                     wtemp4	set	134
  4279  0088                     wtemp5	set	136
  4280  007F                     wtemp6	set	127
  4281  007E                     ttemp	set	126
  4282  007E                     ttemp0	set	126
  4283  0081                     ttemp1	set	129
  4284  0084                     ttemp2	set	132
  4285  0087                     ttemp3	set	135
  4286  007F                     ttemp4	set	127
  4287  007E                     ltemp	set	126
  4288  007E                     ltemp0	set	126
  4289  0082                     ltemp1	set	130
  4290  0086                     ltemp2	set	134
  4291  0080                     ltemp3	set	128


Data Sizes:
    Strings     40
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      76
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Printf@str	PTR unsigned char  size(1) Largest target is 0

    UART_Printf@argList	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_1(CODE[40]), 

    UART_Printf@ptr	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_1(CODE[40]), 

    UART_Printf@argp	PTR void [1] size(1) Largest target is 1
		 -> ?_UART_Printf(BANK0[1]), 

    UART_TxString@ptr_string	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _UART_TxString->_UART_TxChar
    _UART_TxFloatNumber->___lltoft
    ___lltoft->___ftpack
    ___ftneg->___lltoft
    ___ftmul->___awtoft
    ___ftadd->___lltoft
    _UART_TxNumber->___lldiv
    ___bmul->___lldiv
    _UART_SetBaudRate->___lldiv
    _ADC_GetAdcValue->_DELAY_us

Critical Paths under _main in BANK0

    _main->_UART_Printf
    ___ftdiv->___ftmul
    _UART_Printf->_UART_TxFloatNumber
    _UART_TxFloatNumber->_UART_TxNumber
    ___fttol->___ftmul
    ___ftadd->___ftneg
    _UART_TxNumber->___bmul
    _UART_Init->_UART_SetBaudRate

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   21119
                                             71 BANK0      5     5      0
                    _ADC_GetAdcValue
                           _ADC_Init
                          _UART_Init
                        _UART_Printf
                           ___awtoft
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2132
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    1890
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _UART_Printf                                         28    23      5   13896
                                             43 BANK0     28    23      5
                        _UART_TxChar
                 _UART_TxFloatNumber
                      _UART_TxNumber
                      _UART_TxString
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _UART_TxString                                        2     2      0      94
                                              1 COMMON     2     2      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxFloatNumber                                   8     5      3   10004
                                             35 BANK0      8     5      3
                        _UART_TxChar
                      _UART_TxNumber
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    1868
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     358
                                             16 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                              0 BANK0      3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2284
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2772
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _UART_TxNumber                                       31    26      5    2414
                                              4 BANK0     31    26      5
                        _UART_TxChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4     698
                                             16 BANK0      4     0      4
                   _UART_SetBaudRate
 ---------------------------------------------------------------------------------
 (2) _UART_SetBaudRate                                    16    12      4     623
                                              0 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetAdcValue                                      4     2      2     151
                                              2 COMMON     4     2      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (2) _DELAY_us                                             2     0      2     129
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetAdcValue
     _DELAY_us
   _ADC_Init
   _UART_Init
     _UART_SetBaudRate
       ___lldiv
   _UART_Printf
     _UART_TxChar
     _UART_TxFloatNumber
       _UART_TxChar
       _UART_TxNumber
         _UART_TxChar
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       ___ftadd
         ___ftneg (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___lltoft
         ___ftpack
     _UART_TxNumber
       _UART_TxChar
       ___bmul
         ___lldiv (ARG)
       ___lldiv
     _UART_TxString
       _UART_TxChar
     ___bmul
       ___lldiv (ARG)
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4C       5       95.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Feb 20 16:47:51 2016

       UART_SetBaudRate@var_baudRate_u32 0020                                        pc 0002  
                         ___bmul@product 0022                              __CFG_CP$OFF 0000  
                                     l39 0E6F                                       _GO 00FA  
                                     fsr 0004                             ___ftadd@exp1 002F  
                           ___ftadd@exp2 002E                              __CFG_LVP$ON 0000  
                           ___ftadd@sign 002D                                      l421 0067  
                                    l173 0FAC                                      l159 0F06  
                                    l512 018B                                      l428 007C  
                                    l452 0569                                      l429 0084  
                           __CFG_CPD$OFF 0000                                      fsr0 0004  
                                    indf 0000                             __CFG_FOSC$HS 0000  
                __end_of_ADC_GetAdcValue 0F0F                             ___ftdiv@cntr 003A  
                           ___ftdiv@sign 003F                                     l1220 0E96  
                                   l1310 0487                                     l1302 0425  
                                   l1216 0E90                                     l1320 0428  
                                   l1240 0051                                     l1232 0039  
                                   l1400 05B0                                     l1322 0498  
                                   l1410 0314                                     l1332 04BD  
                                   l1236 0040                                     l1340 04EA  
                                   l1500 019C                                     l1326 04A8  
                                   l1318 0493                                     l1246 006C  
                                   l1238 004C                                     l1350 0500  
                                   l1510 0F25                                     l1280 0F8F  
                                   l1520 010A                                     l1248 0076  
                                   l1344 04F1                                     l1440 0391  
                                   l1432 0379                                     l1416 032A  
                                   l1266 0F4A                                     l1290 03D8  
                                   l1370 053B                                     l1362 051A  
                                   l1276 0F82                                     l1268 0F5A  
                                   l1516 00AF                                     l1380 0559  
                                   l1372 0540                                     l1444 03A1  
                                   l1428 0369                                     l1508 0F13  
                                   l1620 06F0                                     l1700 0ED4  
                                   l1390 058D                                     l1382 0565  
                                   l1374 0544                                     l1614 06C9  
                                   l1606 0695                                     l1710 025C  
                                   l1544 0E81                                     l1296 0416  
                                   l1368 052F                                     l1528 0EA0  
                                   l1640 074B                                     l1632 0736  
                                   l1608 06AA                                     l1298 041A  
                                   l1386 057B                                     l1650 0777  
                                   l1642 075C                                     l1626 070F  
                                   l1730 02B7                                     l1468 0131  
                                   l1652 078A                                     l1572 0604  
                                   l1716 0272                                     l1494 0180  
                                   l1486 0163                                     l1670 07EF  
                                   l1496 018E                                     l1488 0173  
                                   l1664 07BB                                     l1584 063D  
                                   l1672 07F5                                     l1576 062C  
                                   l1658 07A7                                     l1594 0658  
                                   l1578 0631                                     l1674 05D5  
                                   l1738 02D6                                     l1596 066E  
                                   l1668 07BD                                     _ADON 00F8  
                                   STR_1 0009                                     u2025 0F18  
                                   u2043 00AD                                     u2205 0EEF  
                                   u2053 00BE                                     u1325 008B  
                                   u1245 0045                                     u2070 00F7  
                                   u1430 0407                                     u2071 00F8  
                                   u2072 00FD                                     u1440 0408  
                                   u1424 03EC                                     u2073 00FE  
                                   u2065 00D1                                     u1425 03E9  
                                   u1265 0060                                     u1355 0F4E  
                                   u1285 006F                                     u1375 0F5C  
                                   u2255 0284                                     u1385 0F71  
                                   u1625 051B                                     u2265 0296  
                                   u1395 0F83                                     u1715 055A  
                                   u2275 02B8                                     u1805 0348  
                                   u2285 02C9                                     u1655 0530  
                                   u2295 02D7                                     u1835 037A  
                                   u1685 0545                                     u1845 0382  
                                   u1935 0138                                     u1795 0336  
                                   u1885 03A2                                     u1965 0164  
                                   u1895 03AA                                     u1995 0182  
                                   _RCIF 0065                                     _TXIF 0064  
                           __CFG_WRT$OFF 0000                       _UART_TxFloatNumber 01A5  
                                   _main 0F98                             ___ftpack@arg 0070  
                           ___ftpack@exp 0073                                     btemp 007E  
                       __end_of_ADC_Init 0E6E                             main@adcValue 006A  
                                   ltemp 007E                                     start 0000  
                                   ttemp 007E                                     wtemp 007E  
                       __end_of_DELAY_us 0E8C                      ?_UART_TxFloatNumber 0043  
                      ___bmul@multiplier 0023                             ___ftmul@cntr 002E  
                           ___ftmul@sign 002F      UART_TxFloatNumber@v_floatNumber_f32 0043  
                           ___fttol@exp1 003D                             ___fttol@lval 0039  
                                  ?_main 0070                          __end_of___ftadd 05CA  
                          __CFG_WDTE$OFF 0000                          __end_of___ftdiv 02FC  
                        __end_of___ftneg 0E81                          __end_of___lldiv 0F98  
                        __end_of___ftmul 03CF                          __end_of___fttol 01A5  
                                  _RCREG 001A                                    _RCSTA 0018  
                                  _SPBRG 0099                                    _TRISC 0087  
                                  _TXREG 0019                                    _TXSTA 0098  
                   ??_UART_TxFloatNumber 0046                             ___lltoft@exp 007D  
                     __size_of_UART_Init 0016                            ___awtoft@sign 007D  
                          ___ftpack@sign 0074                           __CFG_BOREN$OFF 0000  
                                  pclath 000A                                    ltemp0 007E  
                                  ltemp1 0082                                    ltemp2 0086  
                                  ltemp3 0080                                    ttemp0 007E  
                                  ttemp1 0081                                    ttemp2 0084  
                                  ttemp3 0087                                    ttemp4 007F  
                                  status 0003                                    wtemp0 007E  
                                  wtemp1 0080                                    wtemp2 0082  
                                  wtemp3 0084                                    wtemp4 0086  
                                  wtemp5 0088                                    wtemp6 007F  
                        __initialization 07FC                             __end_of_main 1000  
                                 ??_main 007E                            ___fttol@sign1 0038  
                       ?_ADC_GetAdcValue 0072                                   _ADCON0 001F  
                                 _ADCON1 009F                                   _ADRESH 001E  
                                 _ADRESL 009E                         __end_of___awtoft 0EEB  
                       __end_of___ftpack 009D                         __end_of___lltoft 0F3A  
                      ?_UART_SetBaudRate 0020                       ??_UART_SetBaudRate 0024  
                         __CFG_PWRTE$OFF 0000                             ?_UART_TxChar 0070  
                           ?_UART_Printf 004B                        __end_of_UART_Init 0ECA  
                                 ___bmul 0E8C                                ??___ftadd 0029  
                              ??___ftdiv 0036                                ??___ftneg 007E  
                              ??___lldiv 0078                                ??___ftmul 0026  
                              ??___fttol 0034  UART_TxNumber@v_numOfDigitsToTransmit_u8 0028  
                  ___ftmul@f3_as_product 002B                                ?_ADC_Init 0070  
                              ?_DELAY_us 0070                  __end_of__initialization 07FC  
                             ___ftadd@f1 0023                               ___ftadd@f2 0026  
                  __end_of_UART_TxNumber 04C1                               ___ftdiv@f1 0033  
                             ___ftdiv@f2 0030                               ___ftdiv@f3 003B  
                  __end_of_UART_TxString 0EB4                UART_Printf@v_floatNum_f32 0052  
                             ___ftneg@f1 0020                               ___awtoft@c 0078  
                    ___bmul@multiplicand 0020                               ___ftmul@f1 0020  
                             ___ftmul@f2 0023                               ___fttol@f1 0030  
                         __pcstackCOMMON 0070                               ___lltoft@c 0078  
                             ??_ADC_Init 0070                               ??_DELAY_us 0072  
                             __pmaintext 0F98                                  ?___bmul 0020  
                              ?___awtoft 0078                                ?___ftpack 0070  
                              ?___lltoft 0078                                  _GO_DONE 00FA  
                       DELAY_us@us_count 0070                               __stringtab 0003  
                   __size_of_UART_TxChar 0009                          __size_of___bmul 0013  
                   __size_of_UART_Printf 0232                                  ___ftadd 04C1  
                                ___ftdiv 0244                                  ___ftneg 0E77  
                                ___lldiv 0F3A                                  ___ftmul 02FC  
                                ___fttol 0117                               ??___awtoft 007B  
                             ??___ftpack 0075                               ??___lltoft 007C  
                                __ptext1 0244                                  __ptext2 0ECA  
                                __ptext3 05CA                                  __ptext4 0E9F  
                                __ptext5 01A5                                  __ptext6 0F0F  
                                __ptext7 0117                                  __ptext8 0E77  
                                __ptext9 02FC              __size_of_UART_TxFloatNumber 009F  
                         UART_Printf@ptr 0063                           UART_Printf@str 0055  
                   end_of_initialization 07FC                           UART_TxNumber@a 0035  
                         UART_TxNumber@i 0042               UART_TxChar@var_uartData_u8 0070  
                        ___lldiv@divisor 0070                          ___lldiv@counter 007D  
                              _UART_Init 0EB4                __size_of_UART_SetBaudRate 007A  
       ADC_GetAdcValue@var_adcChannel_u8 0075                        __size_of_ADC_Init 0008  
                      __size_of_DELAY_us 000B                              ___ftdiv@exp 003E  
               __size_of_ADC_GetAdcValue 0024          UART_TxNumber@v_numericSystem_u8 0041  
                            ___ftmul@exp 002A                           __end_of___bmul 0E9F  
                             ?_UART_Init 0030                      start_initialization 07FC  
                               ??___bmul 0021                        __size_of___awtoft 0021  
                      __size_of___ftpack 006C                   __size_of_UART_TxNumber 00F2  
                      __size_of___lltoft 002B                                ___latbits 0002  
                 __size_of_UART_TxString 0015                            __pcstackBANK0 0020  
              UART_Init@var_baudRate_u32 0030                                 ?___ftadd 0023  
                               ?___ftdiv 0030                                 ?___ftneg 0020  
                               ?___lldiv 0070                        ??_ADC_GetAdcValue 0074  
                               ?___ftmul 0020                                 ?___fttol 0030  
                            ??_UART_Init 007E                         _UART_SetBaudRate 009D  
                              __pstrings 0003                                 _ADC_Init 0E66  
                               _DELAY_us 0E81                            UART_Printf@ch 0064  
                          ??_UART_TxChar 0070                            _UART_TxNumber 03CF  
                          ??_UART_Printf 0050                            _UART_TxString 0E9F  
                UART_TxString@ptr_string 0072                              __stringbase 0008  
             __end_of_UART_TxFloatNumber 0244                UART_TxNumber@v_number_u32 0024  
                         ?_UART_TxNumber 0024                           ?_UART_TxString 0070  
                       _UART_TxNumber$63 003F                      __end_of_UART_TxChar 0E77  
                       __size_of___ftadd 0109                         __size_of___ftdiv 00B8  
                       __size_of___ftneg 000A                         __size_of___lldiv 005E  
                       __size_of___ftmul 00D3                         __size_of___fttol 008E  
                    __end_of_UART_Printf 07FC                                 ___awtoft 0ECA  
                               ___ftpack 0031                       __end_of__stringtab 0009  
                               ___lltoft 0F0F                                 __ptext10 04C1  
                               __ptext11 0031                                 __ptext20 0E81  
                               __ptext12 03CF                                 __ptext13 0E8C  
                               __ptext14 0E6E                                 __ptext15 0EB4  
                               __ptext16 009D                                 __ptext17 0F3A  
                               __ptext18 0E66                                 __ptext19 0EEB  
                          __size_of_main 0068                          UART_Printf@argp 0066  
               UART_SetBaudRate@RegValue 002C                                 main@volt 0067  
                        ??_UART_TxNumber 0029                 __end_of_UART_SetBaudRate 0117  
                        _ADC_GetAdcValue 0EEB                          ??_UART_TxString 0071  
                       ___lldiv@dividend 0074                                stringcode 0003  
                            _UART_TxChar 0E6E                              _UART_Printf 05CA  
                       ___lldiv@quotient 0079       UART_TxFloatNumber@v_tempNumber_u32 0047  
                               stringdir 0003                                 stringtab 0003  
  UART_Printf@v_numOfDigitsToTransmit_u8 0065                       UART_Printf@argList 0056  
                   UART_Printf@v_num_s16 005B                     UART_Printf@v_num_s32 0057  
                   UART_Printf@v_num_u16 0061                     UART_Printf@v_num_u32 005D  
