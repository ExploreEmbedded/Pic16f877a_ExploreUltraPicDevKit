

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Feb 20 14:46:31 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     	;# 
    35  0001                     	;# 
    36  0002                     	;# 
    37  0003                     	;# 
    38  0004                     	;# 
    39  0005                     	;# 
    40  0006                     	;# 
    41  0007                     	;# 
    42  0008                     	;# 
    43  0009                     	;# 
    44  000A                     	;# 
    45  000B                     	;# 
    46  000C                     	;# 
    47  000D                     	;# 
    48  000E                     	;# 
    49  000E                     	;# 
    50  000F                     	;# 
    51  0010                     	;# 
    52  0011                     	;# 
    53  0012                     	;# 
    54  0013                     	;# 
    55  0014                     	;# 
    56  0015                     	;# 
    57  0015                     	;# 
    58  0016                     	;# 
    59  0017                     	;# 
    60  0018                     	;# 
    61  0019                     	;# 
    62  001A                     	;# 
    63  001B                     	;# 
    64  001B                     	;# 
    65  001C                     	;# 
    66  001D                     	;# 
    67  001E                     	;# 
    68  001F                     	;# 
    69  0081                     	;# 
    70  0085                     	;# 
    71  0086                     	;# 
    72  0087                     	;# 
    73  0088                     	;# 
    74  0089                     	;# 
    75  008C                     	;# 
    76  008D                     	;# 
    77  008E                     	;# 
    78  0091                     	;# 
    79  0092                     	;# 
    80  0093                     	;# 
    81  0094                     	;# 
    82  0098                     	;# 
    83  0099                     	;# 
    84  009C                     	;# 
    85  009D                     	;# 
    86  009E                     	;# 
    87  009F                     	;# 
    88  010C                     	;# 
    89  010D                     	;# 
    90  010E                     	;# 
    91  010F                     	;# 
    92  018C                     	;# 
    93  018D                     	;# 
    94                           
    95                           	psect	idataBANK0
    96  01C7                     __pidataBANK0:	
    97                           
    98                           ;initializer for _ARR_LcdLineNumAddress_U8
    99  01C7  3480               	retlw	128
   100  01C8  34C0               	retlw	192
   101  01C9  3490               	retlw	144
   102  01CA  34D0               	retlw	208
   103  0005                     _PORTA	set	5
   104  0006                     _PORTB	set	6
   105  0007                     _PORTC	set	7
   106  0008                     _PORTD	set	8
   107  0009                     _PORTE	set	9
   108  0085                     _TRISA	set	133
   109  0086                     _TRISB	set	134
   110  0087                     _TRISC	set	135
   111  0088                     _TRISD	set	136
   112  0089                     _TRISE	set	137
   113                           
   114                           	psect	strings
   115  0003                     __pstrings:	
   116  0003                     stringtab:	
   117  0003                     __stringtab:	
   118  0003                     stringcode:	
   119                           ;	String table - string pointers are 1 byte each
   120                           
   121  0003                     stringdir:	
   122  0003  3000               	movlw	high stringdir
   123  0004  008A               	movwf	10
   124  0005  0804               	movf	4,w
   125  0006  0A84               	incf	4,f
   126  0007  0782               	addwf	2,f
   127  0008                     __stringbase:	
   128  0008  3400               	retlw	0
   129  0009                     __end_of__stringtab:	
   130  0009                     STR_1:	
   131  0009  3445               	retlw	69	;'E'
   132  000A  3478               	retlw	120	;'x'
   133  000B  3470               	retlw	112	;'p'
   134  000C  346C               	retlw	108	;'l'
   135  000D  346F               	retlw	111	;'o'
   136  000E  3472               	retlw	114	;'r'
   137  000F  3465               	retlw	101	;'e'
   138  0010  3420               	retlw	32	;' '
   139  0011  3445               	retlw	69	;'E'
   140  0012  346D               	retlw	109	;'m'
   141  0013  3462               	retlw	98	;'b'
   142  0014  3465               	retlw	101	;'e'
   143  0015  3464               	retlw	100	;'d'
   144  0016  3464               	retlw	100	;'d'
   145  0017  3465               	retlw	101	;'e'
   146  0018  3464               	retlw	100	;'d'
   147  0019  3400               	retlw	0
   148  001A                     STR_2:	
   149  001A  344C               	retlw	76	;'L'
   150  001B  3463               	retlw	99	;'c'
   151  001C  3464               	retlw	100	;'d'
   152  001D  3420               	retlw	32	;' '
   153  001E  3438               	retlw	56	;'8'
   154  001F  342D               	retlw	45	;'-'
   155  0020  3462               	retlw	98	;'b'
   156  0021  3469               	retlw	105	;'i'
   157  0022  3474               	retlw	116	;'t'
   158  0023  3420               	retlw	32	;' '
   159  0024  344D               	retlw	77	;'M'
   160  0025  346F               	retlw	111	;'o'
   161  0026  3464               	retlw	100	;'d'
   162  0027  3465               	retlw	101	;'e'
   163  0028  3400               	retlw	0
   164                           
   165                           ; #config settings
   166  0000                     
   167                           	psect	cinit
   168  07DD                     start_initialization:	
   169  07DD                     __initialization:	
   170                           
   171                           ; Clear objects allocated to BANK0
   172  07DD  1383               	bcf	3,7	;select IRP bank0
   173  07DE  3034               	movlw	low __pbssBANK0
   174  07DF  0084               	movwf	4
   175  07E0  3044               	movlw	low (__pbssBANK0+16)
   176  07E1  120A  118A  21CB  120A  118A  	fcall	clear_ram0
   177                           
   178                           ; Initialize objects allocated to BANK0
   179  07E6  120A  118A  21C7  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   180  07EB  00C4               	movwf	__pdataBANK0& (0+127)
   181  07EC  120A  118A  21C8  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   182  07F1  00C5               	movwf	(__pdataBANK0+1)& (0+127)
   183  07F2  120A  118A  21C9  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   184  07F7  00C6               	movwf	(__pdataBANK0+2)& (0+127)
   185  07F8  120A  118A  21CA   	fcall	__pidataBANK0+3	;fetch initializer
   186  07FB  00C7               	movwf	(__pdataBANK0+3)& (0+127)
   187  07FC                     end_of_initialization:	
   188                           ;End of C runtime variable initialization code
   189                           
   190  07FC                     __end_of__initialization:	
   191  07FC  0183               	clrf	3
   192  07FD  120A  118A  2BF1   	ljmp	_main	;jump to C main() function
   193                           
   194                           	psect	bssBANK0
   195  0034                     __pbssBANK0:	
   196  0034                     _LCDConfig:	
   197  0034                     	ds	14
   198  0042                     _v_LcdTrackCursorPos_U8:	
   199  0042                     	ds	1
   200  0043                     _v_LcdTrackLineNum_U8:	
   201  0043                     	ds	1
   202                           
   203                           	psect	dataBANK0
   204  0044                     __pdataBANK0:	
   205  0044                     _ARR_LcdLineNumAddress_U8:	
   206  0044                     	ds	4
   207                           
   208                           	psect	clrtext
   209  01CB                     clear_ram0:	
   210                           ;	Called with FSR containing the base address, and
   211                           ;	W with the last address+1
   212                           
   213  01CB  0064               	clrwdt	;clear the watchdog before getting into this loop
   214  01CC                     clrloop0:	
   215  01CC  0180               	clrf	0	;clear RAM location pointed to by FSR
   216  01CD  0A84               	incf	4,f	;increment pointer
   217  01CE  0604               	xorwf	4,w	;XOR with final address
   218  01CF  1903               	btfsc	3,2	;have we reached the end yet?
   219  01D0  3400               	retlw	0	;all done for this memory range, return
   220  01D1  0604               	xorwf	4,w	;XOR again to restore value
   221  01D2  29CC               	goto	clrloop0	;do the next byte
   222                           
   223                           	psect	cstackCOMMON
   224  0070                     __pcstackCOMMON:	
   225  0070                     ?_LCD_CmdWrite:	
   226  0070                     ?_lcd_Reset:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0070                     ?_LCD_Clear:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ?_LCD_GoToLine:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_lcd_BusyCheck:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_lcd_SendLowerNibble:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?_lcd_SendHigherNibble:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?_lcd_SendCmdSignals:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_lcd_DataWrite:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ?_lcd_SendDataSignals:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_GPIO_PinDirection:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ?_GPIO_PinWrite:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_GPIO_PinRead:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ??_GPIO_PinRead:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ?_DELAY_us:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ?_LCD_GoToNextLine:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ?_LCD_DisplayChar:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ?_LCD_DisplayString:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_main:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     GPIO_PinDirection@var_pinDirn_u8:	
   281                           ; 2 bytes @ 0x0
   282                           
   283  0070                     GPIO_PinWrite@var_pinValue_u8:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     DELAY_us@us_count:	
   287                           ; 1 bytes @ 0x0
   288                           
   289                           
   290                           ; 2 bytes @ 0x0
   291  0070                     	ds	1
   292  0071                     ??_GPIO_PinDirection:	
   293  0071                     ??_GPIO_PinWrite:	
   294                           ; 1 bytes @ 0x1
   295                           
   296                           
   297                           ; 1 bytes @ 0x1
   298  0071                     	ds	1
   299  0072                     ??_DELAY_us:	
   300  0072                     ?_DELAY_ms:	
   301                           ; 1 bytes @ 0x2
   302                           
   303  0072                     GPIO_PinRead@var_portNumber_u8:	
   304                           ; 1 bytes @ 0x2
   305                           
   306  0072                     DELAY_ms@ms_count:	
   307                           ; 1 bytes @ 0x2
   308                           
   309                           
   310                           ; 2 bytes @ 0x2
   311  0072                     	ds	1
   312  0073                     GPIO_PinDirection@var_portNumber_u8:	
   313  0073                     GPIO_PinWrite@var_portNumber_u8:	
   314                           ; 1 bytes @ 0x3
   315                           
   316  0073                     GPIO_PinRead@returnStatus:	
   317                           ; 1 bytes @ 0x3
   318                           
   319                           
   320                           ; 1 bytes @ 0x3
   321  0073                     	ds	1
   322  0074                     ??_DELAY_ms:	
   323  0074                     GPIO_PinDirection@enm_pinNumber:	
   324                           ; 1 bytes @ 0x4
   325                           
   326  0074                     GPIO_PinWrite@enm_pinNumber:	
   327                           ; 1 bytes @ 0x4
   328                           
   329  0074                     GPIO_PinRead@enm_pinNumber:	
   330                           ; 1 bytes @ 0x4
   331                           
   332                           
   333                           ; 1 bytes @ 0x4
   334  0074                     	ds	1
   335  0075                     ??_lcd_BusyCheck:	
   336  0075                     ??_lcd_SendLowerNibble:	
   337                           ; 1 bytes @ 0x5
   338                           
   339  0075                     ??_lcd_SendHigherNibble:	
   340                           ; 1 bytes @ 0x5
   341                           
   342  0075                     ??_lcd_SendCmdSignals:	
   343                           ; 1 bytes @ 0x5
   344                           
   345  0075                     ??_lcd_SendDataSignals:	
   346                           ; 1 bytes @ 0x5
   347                           
   348  0075                     ??_LCD_SetUp:	
   349                           ; 1 bytes @ 0x5
   350                           
   351                           
   352                           ; 1 bytes @ 0x5
   353  0075                     	ds	1
   354  0076                     LCD_SetUp@RS:	
   355  0076                     lcd_BusyCheck@busyflag:	
   356                           ; 1 bytes @ 0x6
   357                           
   358  0076                     lcd_SendHigherNibble@dataByte:	
   359                           ; 1 bytes @ 0x6
   360                           
   361  0076                     lcd_SendLowerNibble@dataByte:	
   362                           ; 1 bytes @ 0x6
   363                           
   364                           
   365                           ; 1 bytes @ 0x6
   366  0076                     	ds	1
   367  0077                     ??_LCD_CmdWrite:	
   368  0077                     ??_lcd_Reset:	
   369                           ; 1 bytes @ 0x7
   370                           
   371  0077                     ??_lcd_DataWrite:	
   372                           ; 1 bytes @ 0x7
   373                           
   374                           
   375                           ; 1 bytes @ 0x7
   376  0077                     	ds	2
   377  0079                     LCD_CmdWrite@v_lcdCmd_u8:	
   378  0079                     lcd_DataWrite@dataByte:	
   379                           ; 1 bytes @ 0x9
   380                           
   381                           
   382                           ; 1 bytes @ 0x9
   383  0079                     	ds	1
   384  007A                     ??_LCD_GoToLine:	
   385  007A                     ??_LCD_GoToNextLine:	
   386                           ; 1 bytes @ 0xA
   387                           
   388                           
   389                           ; 1 bytes @ 0xA
   390  007A                     	ds	1
   391  007B                     ??_LCD_DisplayChar:	
   392  007B                     LCD_GoToLine@v_lineNumber_u8:	
   393                           ; 1 bytes @ 0xB
   394                           
   395                           
   396                           ; 1 bytes @ 0xB
   397  007B                     	ds	1
   398  007C                     ??_LCD_Clear:	
   399  007C                     ?_LCD_Init:	
   400                           ; 1 bytes @ 0xC
   401                           
   402  007C                     LCD_Init@v_MaxCharsPerLine_u8:	
   403                           ; 1 bytes @ 0xC
   404                           
   405  007C                     LCD_DisplayChar@v_lcdData_u8:	
   406                           ; 1 bytes @ 0xC
   407                           
   408                           
   409                           ; 1 bytes @ 0xC
   410  007C                     	ds	1
   411  007D                     ??_LCD_Init:	
   412  007D                     ??_LCD_DisplayString:	
   413                           ; 1 bytes @ 0xD
   414                           
   415                           
   416                           ; 1 bytes @ 0xD
   417  007D                     	ds	1
   418                           
   419                           	psect	cstackBANK0
   420  0020                     __pcstackBANK0:	
   421  0020                     ?_LCD_SetUp:	
   422  0020                     LCD_SetUp@RW:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0020                     LCD_Init@v_lcdNoOfLines_u8:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0020                     LCD_DisplayString@ptr_stringPointer_u8:	
   429                           ; 1 bytes @ 0x0
   430                           
   431                           
   432                           ; 1 bytes @ 0x0
   433  0020                     	ds	1
   434  0021                     LCD_SetUp@EN:	
   435                           
   436                           ; 1 bytes @ 0x1
   437  0021                     	ds	1
   438  0022                     LCD_SetUp@D0:	
   439                           
   440                           ; 1 bytes @ 0x2
   441  0022                     	ds	1
   442  0023                     LCD_SetUp@D1:	
   443                           
   444                           ; 1 bytes @ 0x3
   445  0023                     	ds	1
   446  0024                     LCD_SetUp@D2:	
   447                           
   448                           ; 1 bytes @ 0x4
   449  0024                     	ds	1
   450  0025                     LCD_SetUp@D3:	
   451                           
   452                           ; 1 bytes @ 0x5
   453  0025                     	ds	1
   454  0026                     LCD_SetUp@D4:	
   455                           
   456                           ; 1 bytes @ 0x6
   457  0026                     	ds	1
   458  0027                     LCD_SetUp@D5:	
   459                           
   460                           ; 1 bytes @ 0x7
   461  0027                     	ds	1
   462  0028                     LCD_SetUp@D6:	
   463                           
   464                           ; 1 bytes @ 0x8
   465  0028                     	ds	1
   466  0029                     LCD_SetUp@D7:	
   467                           
   468                           ; 1 bytes @ 0x9
   469  0029                     	ds	1
   470  002A                     ??_main:	
   471                           
   472                           ; 1 bytes @ 0xA
   473  002A                     	ds	10
   474                           
   475                           	psect	maintext
   476  03F1                     __pmaintext:	
   477 ;;
   478 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   479 ;;
   480 ;; *************** function _main *****************
   481 ;; Defined at:
   482 ;;		line 42 in file "main.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  2  305[None  ] int 
   489 ;; Registers used:
   490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : B00/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   496 ;;      Params:         0       0       0       0       0
   497 ;;      Locals:         0       0       0       0       0
   498 ;;      Temps:          0      10       0       0       0
   499 ;;      Totals:         0      10       0       0       0
   500 ;;Total ram usage:       10 bytes
   501 ;; Hardware stack levels required when called:    7
   502 ;; This function calls:
   503 ;;		_LCD_DisplayString
   504 ;;		_LCD_Init
   505 ;;		_LCD_SetUp
   506 ;; This function is called by:
   507 ;;		Startup code after reset
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           
   512                           ;psect for function _main
   513  03F1                     _main:	
   514                           
   515                           ;main.c: 45: LCD_SetUp(PB_0,PB_1,PB_2,P_NC,P_NC,P_NC,P_NC,PB_4,PB_5,PB_6,PB_7);
   516                           
   517                           ;incstack = 0
   518                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   519  03F1  3009               	movlw	9
   520  03F2  1283               	bcf	3,5	;RP0=0, select bank0
   521  03F3  1303               	bcf	3,6	;RP1=0, select bank0
   522  03F4  00AA               	movwf	??_main
   523  03F5  082A               	movf	??_main,w
   524  03F6  00A0               	movwf	LCD_SetUp@RW
   525  03F7  300A               	movlw	10
   526  03F8  00AB               	movwf	??_main+1
   527  03F9  082B               	movf	??_main+1,w
   528  03FA  00A1               	movwf	LCD_SetUp@EN
   529  03FB  30FF               	movlw	255
   530  03FC  00AC               	movwf	??_main+2
   531  03FD  082C               	movf	??_main+2,w
   532  03FE  00A2               	movwf	LCD_SetUp@D0
   533  03FF  30FF               	movlw	255
   534  0400  00AD               	movwf	??_main+3
   535  0401  082D               	movf	??_main+3,w
   536  0402  00A3               	movwf	LCD_SetUp@D1
   537  0403  30FF               	movlw	255
   538  0404  00AE               	movwf	??_main+4
   539  0405  082E               	movf	??_main+4,w
   540  0406  00A4               	movwf	LCD_SetUp@D2
   541  0407  30FF               	movlw	255
   542  0408  00AF               	movwf	??_main+5
   543  0409  082F               	movf	??_main+5,w
   544  040A  00A5               	movwf	LCD_SetUp@D3
   545  040B  300C               	movlw	12
   546  040C  00B0               	movwf	??_main+6
   547  040D  0830               	movf	??_main+6,w
   548  040E  00A6               	movwf	LCD_SetUp@D4
   549  040F  300D               	movlw	13
   550  0410  00B1               	movwf	??_main+7
   551  0411  0831               	movf	??_main+7,w
   552  0412  00A7               	movwf	LCD_SetUp@D5
   553  0413  300E               	movlw	14
   554  0414  00B2               	movwf	??_main+8
   555  0415  0832               	movf	??_main+8,w
   556  0416  00A8               	movwf	LCD_SetUp@D6
   557  0417  300F               	movlw	15
   558  0418  00B3               	movwf	??_main+9
   559  0419  0833               	movf	??_main+9,w
   560  041A  00A9               	movwf	LCD_SetUp@D7
   561  041B  3008               	movlw	8
   562  041C  120A  118A  258A  120A  118A  	fcall	_LCD_SetUp
   563                           
   564                           ;main.c: 46: LCD_Init(2,16);
   565  0421  3010               	movlw	16
   566  0422  1283               	bcf	3,5	;RP0=0, select bank0
   567  0423  1303               	bcf	3,6	;RP1=0, select bank0
   568  0424  00AA               	movwf	??_main
   569  0425  082A               	movf	??_main,w
   570  0426  00FC               	movwf	LCD_Init@v_MaxCharsPerLine_u8
   571  0427  3002               	movlw	2
   572  0428  120A  118A  23AA  120A  118A  	fcall	_LCD_Init
   573                           
   574                           ;main.c: 48: LCD_DisplayString("Explore Embedded");
   575  042D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   576  042E  120A  118A  2245  120A  118A  	fcall	_LCD_DisplayString
   577                           
   578                           ;main.c: 49: LCD_DisplayString("Lcd 8-bit Mode");
   579  0433  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   580  0434  120A  118A  2245  120A  118A  	fcall	_LCD_DisplayString
   581  0439                     l306:	
   582                           ;main.c: 50: while(1);
   583                           
   584  0439  2C39               	goto	l306
   585  043A                     __end_of_main:	
   586                           ;main.c: 52: return (0);
   587                           ;	Return value of _main is never used
   588                           
   589                           
   590                           	psect	text1
   591  058A                     __ptext1:	
   592 ;; *************** function _LCD_SetUp *****************
   593 ;; Defined at:
   594 ;;		line 129 in file "../00-libfiles/lcd.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  RS              1    wreg     enum E33
   597 ;;  RW              1    0[BANK0 ] enum E33
   598 ;;  EN              1    1[BANK0 ] enum E33
   599 ;;  D0              1    2[BANK0 ] enum E33
   600 ;;  D1              1    3[BANK0 ] enum E33
   601 ;;  D2              1    4[BANK0 ] enum E33
   602 ;;  D3              1    5[BANK0 ] enum E33
   603 ;;  D4              1    6[BANK0 ] enum E33
   604 ;;  D5              1    7[BANK0 ] enum E33
   605 ;;  D6              1    8[BANK0 ] enum E33
   606 ;;  D7              1    9[BANK0 ] enum E33
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  RS              1    6[COMMON] enum E33
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   618 ;;      Params:         0      10       0       0       0
   619 ;;      Locals:         1       0       0       0       0
   620 ;;      Temps:          1       0       0       0       0
   621 ;;      Totals:         2      10       0       0       0
   622 ;;Total ram usage:       12 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; Hardware stack levels required when called:    1
   625 ;; This function calls:
   626 ;;		_GPIO_PinDirection
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           
   633                           ;psect for function _LCD_SetUp
   634  058A                     _LCD_SetUp:	
   635                           
   636                           ;incstack = 0
   637                           ; Regs used in _LCD_SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   638                           ;LCD_SetUp@RS stored from wreg
   639  058A  00F6               	movwf	LCD_SetUp@RS
   640                           
   641                           ;lcd.c: 142: LCDConfig.RS = RS;
   642  058B  0876               	movf	LCD_SetUp@RS,w
   643  058C  00F5               	movwf	??_LCD_SetUp
   644  058D  0875               	movf	??_LCD_SetUp,w
   645  058E  1283               	bcf	3,5	;RP0=0, select bank0
   646  058F  1303               	bcf	3,6	;RP1=0, select bank0
   647  0590  00B7               	movwf	_LCDConfig+3
   648                           
   649                           ;lcd.c: 143: LCDConfig.RW = RW;
   650  0591  0820               	movf	LCD_SetUp@RW,w
   651  0592  00F5               	movwf	??_LCD_SetUp
   652  0593  0875               	movf	??_LCD_SetUp,w
   653  0594  00B8               	movwf	_LCDConfig+4
   654                           
   655                           ;lcd.c: 144: LCDConfig.EN = EN;
   656  0595  0821               	movf	LCD_SetUp@EN,w
   657  0596  00F5               	movwf	??_LCD_SetUp
   658  0597  0875               	movf	??_LCD_SetUp,w
   659  0598  00B9               	movwf	_LCDConfig+5
   660                           
   661                           ;lcd.c: 146: LCDConfig.D0 = D0;
   662  0599  0822               	movf	LCD_SetUp@D0,w
   663  059A  00F5               	movwf	??_LCD_SetUp
   664  059B  0875               	movf	??_LCD_SetUp,w
   665  059C  00BA               	movwf	_LCDConfig+6
   666                           
   667                           ;lcd.c: 147: LCDConfig.D1 = D1;
   668  059D  0823               	movf	LCD_SetUp@D1,w
   669  059E  00F5               	movwf	??_LCD_SetUp
   670  059F  0875               	movf	??_LCD_SetUp,w
   671  05A0  00BB               	movwf	_LCDConfig+7
   672                           
   673                           ;lcd.c: 148: LCDConfig.D2 = D2;
   674  05A1  0824               	movf	LCD_SetUp@D2,w
   675  05A2  00F5               	movwf	??_LCD_SetUp
   676  05A3  0875               	movf	??_LCD_SetUp,w
   677  05A4  00BC               	movwf	_LCDConfig+8
   678                           
   679                           ;lcd.c: 149: LCDConfig.D3 = D3;
   680  05A5  0825               	movf	LCD_SetUp@D3,w
   681  05A6  00F5               	movwf	??_LCD_SetUp
   682  05A7  0875               	movf	??_LCD_SetUp,w
   683  05A8  00BD               	movwf	_LCDConfig+9
   684                           
   685                           ;lcd.c: 150: LCDConfig.D4 = D4;
   686  05A9  0826               	movf	LCD_SetUp@D4,w
   687  05AA  00F5               	movwf	??_LCD_SetUp
   688  05AB  0875               	movf	??_LCD_SetUp,w
   689  05AC  00BE               	movwf	_LCDConfig+10
   690                           
   691                           ;lcd.c: 151: LCDConfig.D5 = D5;
   692  05AD  0827               	movf	LCD_SetUp@D5,w
   693  05AE  00F5               	movwf	??_LCD_SetUp
   694  05AF  0875               	movf	??_LCD_SetUp,w
   695  05B0  00BF               	movwf	_LCDConfig+11
   696                           
   697                           ;lcd.c: 152: LCDConfig.D6 = D6;
   698  05B1  0828               	movf	LCD_SetUp@D6,w
   699  05B2  00F5               	movwf	??_LCD_SetUp
   700  05B3  0875               	movf	??_LCD_SetUp,w
   701  05B4  00C0               	movwf	_LCDConfig+12
   702                           
   703                           ;lcd.c: 153: LCDConfig.D7 = D7;
   704  05B5  0829               	movf	LCD_SetUp@D7,w
   705  05B6  00F5               	movwf	??_LCD_SetUp
   706  05B7  0875               	movf	??_LCD_SetUp,w
   707  05B8  00C1               	movwf	_LCDConfig+13
   708                           
   709                           ;lcd.c: 156: if((D0 == P_NC) || (D1 == P_NC) || (D2 == P_NC) || (D3 == P_NC))
   710  05B9  0A22               	incf	LCD_SetUp@D0,w
   711  05BA  1903               	btfsc	3,2
   712  05BB  2DC4               	goto	l1513
   713  05BC  0A23               	incf	LCD_SetUp@D1,w
   714  05BD  1903               	btfsc	3,2
   715  05BE  2DC4               	goto	l1513
   716  05BF  0A24               	incf	LCD_SetUp@D2,w
   717  05C0  1D03               	btfss	3,2
   718  05C1  0A25               	incf	LCD_SetUp@D3,w
   719  05C2  1D03               	btfss	3,2
   720  05C3  2DC9               	goto	l1515
   721  05C4                     l1513:	
   722                           
   723                           ;lcd.c: 157: {
   724                           ;lcd.c: 158: LCDConfig.v_LcdMode_U8 = 4;
   725  05C4  3004               	movlw	4
   726  05C5  00F5               	movwf	??_LCD_SetUp
   727  05C6  0875               	movf	??_LCD_SetUp,w
   728  05C7  00B6               	movwf	_LCDConfig+2
   729                           
   730                           ;lcd.c: 159: }
   731  05C8  2DEF               	goto	l1525
   732  05C9                     l1515:	
   733                           
   734                           ;lcd.c: 160: else
   735                           ;lcd.c: 161: {
   736                           ;lcd.c: 162: LCDConfig.v_LcdMode_U8 = 8;
   737  05C9  3008               	movlw	8
   738  05CA  00F5               	movwf	??_LCD_SetUp
   739  05CB  0875               	movf	??_LCD_SetUp,w
   740  05CC  00B6               	movwf	_LCDConfig+2
   741                           
   742                           ;lcd.c: 163: GPIO_PinDirection(D0,0x00u);
   743  05CD  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   744  05CE  0822               	movf	LCD_SetUp@D0,w
   745  05CF  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   746                           
   747                           ;lcd.c: 164: GPIO_PinDirection(D1,0x00u);
   748  05D4  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   749  05D5  1283               	bcf	3,5	;RP0=0, select bank0
   750  05D6  1303               	bcf	3,6	;RP1=0, select bank0
   751  05D7  0823               	movf	LCD_SetUp@D1,w
   752  05D8  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   753                           
   754                           ;lcd.c: 165: GPIO_PinDirection(D2,0x00u);
   755  05DD  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   756  05DE  1283               	bcf	3,5	;RP0=0, select bank0
   757  05DF  1303               	bcf	3,6	;RP1=0, select bank0
   758  05E0  0824               	movf	LCD_SetUp@D2,w
   759  05E1  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   760                           
   761                           ;lcd.c: 166: GPIO_PinDirection(D3,0x00u);
   762  05E6  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   763  05E7  1283               	bcf	3,5	;RP0=0, select bank0
   764  05E8  1303               	bcf	3,6	;RP1=0, select bank0
   765  05E9  0825               	movf	LCD_SetUp@D3,w
   766  05EA  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   767  05EF                     l1525:	
   768                           
   769                           ;lcd.c: 167: }
   770                           ;lcd.c: 170: GPIO_PinDirection(RS,0x00u);
   771  05EF  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   772  05F0  0876               	movf	LCD_SetUp@RS,w
   773  05F1  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   774                           
   775                           ;lcd.c: 171: GPIO_PinDirection(RW,0x00u);
   776  05F6  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   777  05F7  1283               	bcf	3,5	;RP0=0, select bank0
   778  05F8  1303               	bcf	3,6	;RP1=0, select bank0
   779  05F9  0820               	movf	LCD_SetUp@RW,w
   780  05FA  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   781                           
   782                           ;lcd.c: 172: GPIO_PinDirection(EN,0x00u);
   783  05FF  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   784  0600  1283               	bcf	3,5	;RP0=0, select bank0
   785  0601  1303               	bcf	3,6	;RP1=0, select bank0
   786  0602  0821               	movf	LCD_SetUp@EN,w
   787  0603  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   788                           
   789                           ;lcd.c: 174: GPIO_PinDirection(D4,0x00u);
   790  0608  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   791  0609  1283               	bcf	3,5	;RP0=0, select bank0
   792  060A  1303               	bcf	3,6	;RP1=0, select bank0
   793  060B  0826               	movf	LCD_SetUp@D4,w
   794  060C  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   795                           
   796                           ;lcd.c: 175: GPIO_PinDirection(D5,0x00u);
   797  0611  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   798  0612  1283               	bcf	3,5	;RP0=0, select bank0
   799  0613  1303               	bcf	3,6	;RP1=0, select bank0
   800  0614  0827               	movf	LCD_SetUp@D5,w
   801  0615  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   802                           
   803                           ;lcd.c: 176: GPIO_PinDirection(D6,0x00u);
   804  061A  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   805  061B  1283               	bcf	3,5	;RP0=0, select bank0
   806  061C  1303               	bcf	3,6	;RP1=0, select bank0
   807  061D  0828               	movf	LCD_SetUp@D6,w
   808  061E  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
   809                           
   810                           ;lcd.c: 177: GPIO_PinDirection(D7,0x00u);
   811  0623  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
   812  0624  1283               	bcf	3,5	;RP0=0, select bank0
   813  0625  1303               	bcf	3,6	;RP1=0, select bank0
   814  0626  0829               	movf	LCD_SetUp@D7,w
   815  0627  120A  118A  262B   	fcall	_GPIO_PinDirection
   816  062A  0008               	return
   817  062B                     __end_of_LCD_SetUp:	
   818                           
   819                           	psect	text2
   820  03AA                     __ptext2:	
   821 ;; *************** function _LCD_Init *****************
   822 ;; Defined at:
   823 ;;		line 192 in file "../00-libfiles/lcd.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;  v_lcdNoOfLin    1    wreg     unsigned char 
   826 ;;  v_MaxCharsPe    1   12[COMMON] unsigned char 
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  v_lcdNoOfLin    1    0[BANK0 ] unsigned char 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   838 ;;      Params:         1       0       0       0       0
   839 ;;      Locals:         0       1       0       0       0
   840 ;;      Temps:          1       0       0       0       0
   841 ;;      Totals:         2       1       0       0       0
   842 ;;Total ram usage:        3 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:    6
   845 ;; This function calls:
   846 ;;		_DELAY_ms
   847 ;;		_LCD_Clear
   848 ;;		_LCD_CmdWrite
   849 ;;		_lcd_Reset
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           
   856                           ;psect for function _LCD_Init
   857  03AA                     _LCD_Init:	
   858                           
   859                           ;incstack = 0
   860                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   861                           ;LCD_Init@v_lcdNoOfLines_u8 stored from wreg
   862  03AA  1283               	bcf	3,5	;RP0=0, select bank0
   863  03AB  1303               	bcf	3,6	;RP1=0, select bank0
   864  03AC  00A0               	movwf	LCD_Init@v_lcdNoOfLines_u8
   865                           
   866                           ;lcd.c: 196: LCDConfig.v_MaxSupportedChars_U8 = v_MaxCharsPerLine_u8;
   867  03AD  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
   868  03AE  00FD               	movwf	??_LCD_Init
   869  03AF  087D               	movf	??_LCD_Init,w
   870  03B0  00B5               	movwf	_LCDConfig+1
   871                           
   872                           ;lcd.c: 197: LCDConfig.v_MaxSupportedLines_U8 = v_lcdNoOfLines_u8;
   873  03B1  0820               	movf	LCD_Init@v_lcdNoOfLines_u8,w
   874  03B2  00FD               	movwf	??_LCD_Init
   875  03B3  087D               	movf	??_LCD_Init,w
   876  03B4  00B4               	movwf	_LCDConfig
   877                           
   878                           ;lcd.c: 198: if(v_lcdNoOfLines_u8 > 0x02)
   879  03B5  3003               	movlw	3
   880  03B6  0220               	subwf	LCD_Init@v_lcdNoOfLines_u8,w
   881  03B7  1C03               	skipc
   882  03B8  2BC5               	goto	l1543
   883                           
   884                           ;lcd.c: 199: {
   885                           ;lcd.c: 200: ARR_LcdLineNumAddress_U8[0x02] = 0x90 + (v_MaxCharsPerLine_u8 & 0x0fu);
   886  03B9  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
   887  03BA  390F               	andlw	15
   888  03BB  3E90               	addlw	144
   889  03BC  00FD               	movwf	??_LCD_Init
   890  03BD  087D               	movf	??_LCD_Init,w
   891  03BE  00C6               	movwf	_ARR_LcdLineNumAddress_U8+2
   892                           
   893                           ;lcd.c: 201: ARR_LcdLineNumAddress_U8[0x03] = 0xd0 + (v_MaxCharsPerLine_u8 & 0x0fu);
   894  03BF  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
   895  03C0  390F               	andlw	15
   896  03C1  3ED0               	addlw	208
   897  03C2  00FD               	movwf	??_LCD_Init
   898  03C3  087D               	movf	??_LCD_Init,w
   899  03C4  00C7               	movwf	_ARR_LcdLineNumAddress_U8+3
   900  03C5                     l1543:	
   901                           
   902                           ;lcd.c: 202: }
   903                           ;lcd.c: 204: DELAY_ms(100);
   904  03C5  3064               	movlw	100
   905  03C6  00F2               	movwf	DELAY_ms@ms_count
   906  03C7  3000               	movlw	0
   907  03C8  00F3               	movwf	DELAY_ms@ms_count+1
   908  03C9  120A  118A  21E9  120A  118A  	fcall	_DELAY_ms
   909                           
   910                           ;lcd.c: 206: if(LCDConfig.v_LcdMode_U8 == 8u)
   911  03CE  3008               	movlw	8
   912  03CF  1283               	bcf	3,5	;RP0=0, select bank0
   913  03D0  1303               	bcf	3,6	;RP1=0, select bank0
   914  03D1  0636               	xorwf	_LCDConfig+2,w
   915  03D2  1D03               	btfss	3,2
   916  03D3  2BD6               	goto	l1549
   917                           
   918                           ;lcd.c: 207: {
   919                           ;lcd.c: 208: LCD_CmdWrite(0x38u);
   920  03D4  3038               	movlw	56
   921  03D5  2BE2               	goto	L1
   922  03D6                     l1549:	
   923                           ;lcd.c: 209: }
   924                           
   925                           
   926                           ;lcd.c: 210: else if(LCDConfig.v_LcdMode_U8 == 4u)
   927  03D6  3004               	movlw	4
   928  03D7  1283               	bcf	3,5	;RP0=0, select bank0
   929  03D8  1303               	bcf	3,6	;RP1=0, select bank0
   930  03D9  0636               	xorwf	_LCDConfig+2,w
   931  03DA  1D03               	btfss	3,2
   932  03DB  2BE7               	goto	l156
   933                           
   934                           ;lcd.c: 211: {
   935                           ;lcd.c: 212: lcd_Reset();
   936  03DC  120A  118A  243A  120A  118A  	fcall	_lcd_Reset
   937                           
   938                           ;lcd.c: 213: LCD_CmdWrite(0x28u);
   939  03E1  3028               	movlw	40
   940  03E2                     L1:	
   941  03E2  120A  118A  22C0  120A  118A  	fcall	_LCD_CmdWrite
   942  03E7                     l156:	
   943                           
   944                           ;lcd.c: 214: }
   945                           ;lcd.c: 216: LCD_CmdWrite(0x0Eu);
   946  03E7  300E               	movlw	14
   947  03E8  120A  118A  22C0  120A  118A  	fcall	_LCD_CmdWrite
   948                           
   949                           ;lcd.c: 217: LCD_Clear();
   950  03ED  120A  118A  21DE   	fcall	_LCD_Clear
   951  03F0  0008               	return
   952  03F1                     __end_of_LCD_Init:	
   953                           
   954                           	psect	text3
   955  043A                     __ptext3:	
   956 ;; *************** function _lcd_Reset *****************
   957 ;; Defined at:
   958 ;;		line 906 in file "../00-libfiles/lcd.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;		None
   961 ;; Auto vars:     Size  Location     Type
   962 ;;		None
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   972 ;;      Params:         0       0       0       0       0
   973 ;;      Locals:         0       0       0       0       0
   974 ;;      Temps:          0       0       0       0       0
   975 ;;      Totals:         0       0       0       0       0
   976 ;;Total ram usage:        0 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; Hardware stack levels required when called:    2
   979 ;; This function calls:
   980 ;;		_DELAY_ms
   981 ;;		_DELAY_us
   982 ;;		_lcd_SendCmdSignals
   983 ;;		_lcd_SendHigherNibble
   984 ;; This function is called by:
   985 ;;		_LCD_Init
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           
   990                           ;psect for function _lcd_Reset
   991  043A                     _lcd_Reset:	
   992                           
   993                           ;lcd.c: 909: lcd_SendHigherNibble(0x30);
   994                           
   995                           ;incstack = 0
   996                           ; Regs used in _lcd_Reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   997  043A  3030               	movlw	48
   998  043B  120A  118A  232A  120A  118A  	fcall	_lcd_SendHigherNibble
   999                           
  1000                           ;lcd.c: 910: lcd_SendCmdSignals();
  1001  0440  120A  118A  2265  120A  118A  	fcall	_lcd_SendCmdSignals
  1002                           
  1003                           ;lcd.c: 911: DELAY_ms(100);
  1004  0445  3064               	movlw	100
  1005  0446  00F2               	movwf	DELAY_ms@ms_count
  1006  0447  3000               	movlw	0
  1007  0448  00F3               	movwf	DELAY_ms@ms_count+1
  1008  0449  120A  118A  21E9  120A  118A  	fcall	_DELAY_ms
  1009                           
  1010                           ;lcd.c: 912: lcd_SendHigherNibble(0x30);
  1011  044E  3030               	movlw	48
  1012  044F  120A  118A  232A  120A  118A  	fcall	_lcd_SendHigherNibble
  1013                           
  1014                           ;lcd.c: 913: lcd_SendCmdSignals();
  1015  0454  120A  118A  2265  120A  118A  	fcall	_lcd_SendCmdSignals
  1016                           
  1017                           ;lcd.c: 914: DELAY_us(200);
  1018  0459  30C8               	movlw	200
  1019  045A  00F0               	movwf	DELAY_us@us_count
  1020  045B  3000               	movlw	0
  1021  045C  00F1               	movwf	DELAY_us@us_count+1
  1022  045D  120A  118A  21D3  120A  118A  	fcall	_DELAY_us
  1023                           
  1024                           ;lcd.c: 915: lcd_SendHigherNibble(0x30);
  1025  0462  3030               	movlw	48
  1026  0463  120A  118A  232A  120A  118A  	fcall	_lcd_SendHigherNibble
  1027                           
  1028                           ;lcd.c: 916: lcd_SendCmdSignals();
  1029  0468  120A  118A  2265  120A  118A  	fcall	_lcd_SendCmdSignals
  1030                           
  1031                           ;lcd.c: 917: DELAY_us(200);
  1032  046D  30C8               	movlw	200
  1033  046E  00F0               	movwf	DELAY_us@us_count
  1034  046F  3000               	movlw	0
  1035  0470  00F1               	movwf	DELAY_us@us_count+1
  1036  0471  120A  118A  21D3  120A  118A  	fcall	_DELAY_us
  1037                           
  1038                           ;lcd.c: 918: lcd_SendHigherNibble(0x20);
  1039  0476  3020               	movlw	32
  1040  0477  120A  118A  232A  120A  118A  	fcall	_lcd_SendHigherNibble
  1041                           
  1042                           ;lcd.c: 919: lcd_SendCmdSignals();
  1043  047C  120A  118A  2265  120A  118A  	fcall	_lcd_SendCmdSignals
  1044                           
  1045                           ;lcd.c: 920: DELAY_us(200);
  1046  0481  30C8               	movlw	200
  1047  0482  00F0               	movwf	DELAY_us@us_count
  1048  0483  3000               	movlw	0
  1049  0484  00F1               	movwf	DELAY_us@us_count+1
  1050  0485  120A  118A  21D3   	fcall	_DELAY_us
  1051  0488  0008               	return
  1052  0489                     __end_of_lcd_Reset:	
  1053                           
  1054                           	psect	text4
  1055  01DE                     __ptext4:	
  1056 ;; *************** function _LCD_Clear *****************
  1057 ;; Defined at:
  1058 ;;		line 231 in file "../00-libfiles/lcd.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1072 ;;      Params:         0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0
  1075 ;;      Totals:         0       0       0       0       0
  1076 ;;Total ram usage:        0 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:    5
  1079 ;; This function calls:
  1080 ;;		_LCD_CmdWrite
  1081 ;;		_LCD_GoToLine
  1082 ;; This function is called by:
  1083 ;;		_LCD_Init
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           
  1088                           ;psect for function _LCD_Clear
  1089  01DE                     _LCD_Clear:	
  1090                           
  1091                           ;lcd.c: 233: LCD_CmdWrite(0x01u);
  1092                           
  1093                           ;incstack = 0
  1094                           ; Regs used in _LCD_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1095  01DE  3001               	movlw	1
  1096  01DF  120A  118A  22C0  120A  118A  	fcall	_LCD_CmdWrite
  1097                           
  1098                           ;lcd.c: 234: LCD_GoToLine(0x00);
  1099  01E4  3000               	movlw	0
  1100  01E5  120A  118A  2211   	fcall	_LCD_GoToLine
  1101  01E8  0008               	return
  1102  01E9                     __end_of_LCD_Clear:	
  1103                           
  1104                           	psect	text5
  1105  0211                     __ptext5:	
  1106 ;; *************** function _LCD_GoToLine *****************
  1107 ;; Defined at:
  1108 ;;		line 259 in file "../00-libfiles/lcd.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;  v_lineNumber    1    wreg     unsigned char 
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  v_lineNumber    1   11[COMMON] unsigned char 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1122 ;;      Params:         0       0       0       0       0
  1123 ;;      Locals:         1       0       0       0       0
  1124 ;;      Temps:          1       0       0       0       0
  1125 ;;      Totals:         2       0       0       0       0
  1126 ;;Total ram usage:        2 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; Hardware stack levels required when called:    4
  1129 ;; This function calls:
  1130 ;;		_LCD_CmdWrite
  1131 ;; This function is called by:
  1132 ;;		_LCD_Clear
  1133 ;;		_LCD_ScrollMessage
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           
  1138                           ;psect for function _LCD_GoToLine
  1139  0211                     _LCD_GoToLine:	
  1140                           
  1141                           ;incstack = 0
  1142                           ; Regs used in _LCD_GoToLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1143                           ;LCD_GoToLine@v_lineNumber_u8 stored from wreg
  1144  0211  00FB               	movwf	LCD_GoToLine@v_lineNumber_u8
  1145                           
  1146                           ;lcd.c: 261: if(v_lineNumber_u8 < LCDConfig.v_MaxSupportedLines_U8)
  1147  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1148  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1149  0214  0834               	movf	_LCDConfig,w
  1150  0215  027B               	subwf	LCD_GoToLine@v_lineNumber_u8,w
  1151  0216  1803               	skipnc
  1152  0217  0008               	return
  1153                           
  1154                           ;lcd.c: 262: {
  1155                           ;lcd.c: 265: v_LcdTrackCursorPos_U8 = 0x00;
  1156  0218  01C2               	clrf	_v_LcdTrackCursorPos_U8
  1157                           
  1158                           ;lcd.c: 266: v_LcdTrackLineNum_U8 = v_lineNumber_u8;
  1159  0219  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  1160  021A  00FA               	movwf	??_LCD_GoToLine
  1161  021B  087A               	movf	??_LCD_GoToLine,w
  1162  021C  00C3               	movwf	_v_LcdTrackLineNum_U8
  1163                           
  1164                           ;lcd.c: 267: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_lineNumber_u8]);
  1165  021D  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  1166  021E  3E44               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  1167  021F  0084               	movwf	4
  1168  0220  1383               	bcf	3,7	;select IRP bank0
  1169  0221  0800               	movf	0,w
  1170  0222  120A  118A  22C0   	fcall	_LCD_CmdWrite
  1171  0225  0008               	return
  1172  0226                     __end_of_LCD_GoToLine:	
  1173                           
  1174                           	psect	text6
  1175  0245                     __ptext6:	
  1176 ;; *************** function _LCD_DisplayString *****************
  1177 ;; Defined at:
  1178 ;;		line 421 in file "../00-libfiles/lcd.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  ptr_stringPo    1    wreg     PTR const unsigned char 
  1181 ;;		 -> STR_2(15), STR_1(17), 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  ptr_stringPo    1    0[BANK0 ] PTR const unsigned char 
  1184 ;;		 -> STR_2(15), STR_1(17), 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1194 ;;      Params:         0       0       0       0       0
  1195 ;;      Locals:         0       1       0       0       0
  1196 ;;      Temps:          1       0       0       0       0
  1197 ;;      Totals:         1       1       0       0       0
  1198 ;;Total ram usage:        2 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    6
  1201 ;; This function calls:
  1202 ;;		_LCD_DisplayChar
  1203 ;; This function is called by:
  1204 ;;		_main
  1205 ;;		_LCD_Printf
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           
  1210                           ;psect for function _LCD_DisplayString
  1211  0245                     _LCD_DisplayString:	
  1212                           
  1213                           ;incstack = 0
  1214                           ; Regs used in _LCD_DisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1215                           ;LCD_DisplayString@ptr_stringPointer_u8 stored from wreg
  1216  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1217  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1218  0247  00A0               	movwf	LCD_DisplayString@ptr_stringPointer_u8
  1219  0248                     l1559:	
  1220                           ;lcd.c: 423: while((*ptr_stringPointer_u8)!=0)
  1221                           
  1222  0248  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  1223  0249  0084               	movwf	4
  1224  024A  120A  118A  2003  120A  118A  	fcall	stringdir
  1225  024F  3A00               	xorlw	0
  1226  0250  1903               	btfsc	3,2
  1227  0251  0008               	return
  1228                           
  1229                           ;lcd.c: 424: LCD_DisplayChar(*ptr_stringPointer_u8++);
  1230  0252  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  1231  0253  0084               	movwf	4
  1232  0254  120A  118A  2003  120A  118A  	fcall	stringdir
  1233  0259  120A  118A  2226  120A  118A  	fcall	_LCD_DisplayChar
  1234  025E  3001               	movlw	1
  1235  025F  00FD               	movwf	??_LCD_DisplayString
  1236  0260  087D               	movf	??_LCD_DisplayString,w
  1237  0261  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0262  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0263  07A0               	addwf	LCD_DisplayString@ptr_stringPointer_u8,f
  1240  0264  2A48               	goto	l1559
  1241  0265                     __end_of_LCD_DisplayString:	
  1242                           
  1243                           	psect	text7
  1244  0226                     __ptext7:	
  1245 ;; *************** function _LCD_DisplayChar *****************
  1246 ;; Defined at:
  1247 ;;		line 386 in file "../00-libfiles/lcd.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  v_lcdData_u8    1    wreg     unsigned char 
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  v_lcdData_u8    1   12[COMMON] unsigned char 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1261 ;;      Params:         0       0       0       0       0
  1262 ;;      Locals:         1       0       0       0       0
  1263 ;;      Temps:          1       0       0       0       0
  1264 ;;      Totals:         2       0       0       0       0
  1265 ;;Total ram usage:        2 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    5
  1268 ;; This function calls:
  1269 ;;		_LCD_GoToNextLine
  1270 ;;		_lcd_DataWrite
  1271 ;; This function is called by:
  1272 ;;		_LCD_DisplayString
  1273 ;;		_LCD_ScrollMessage
  1274 ;;		_LCD_DisplayNumber
  1275 ;;		_LCD_Printf
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           
  1280                           ;psect for function _LCD_DisplayChar
  1281  0226                     _LCD_DisplayChar:	
  1282                           
  1283                           ;incstack = 0
  1284                           ; Regs used in _LCD_DisplayChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1285                           ;LCD_DisplayChar@v_lcdData_u8 stored from wreg
  1286  0226  00FC               	movwf	LCD_DisplayChar@v_lcdData_u8
  1287                           
  1288                           ;lcd.c: 388: if((v_LcdTrackCursorPos_U8>=LCDConfig.v_MaxSupportedChars_U8) || (v_lcdData
      +                          _u8=='\n'))
  1289  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1290  0228  1303               	bcf	3,6	;RP1=0, select bank0
  1291  0229  0835               	movf	_LCDConfig+1,w
  1292  022A  0242               	subwf	_v_LcdTrackCursorPos_U8,w
  1293  022B  1803               	skipnc
  1294  022C  2A31               	goto	l1495
  1295  022D  300A               	movlw	10
  1296  022E  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  1297  022F  1D03               	btfss	3,2
  1298  0230  2A36               	goto	l1497
  1299  0231                     l1495:	
  1300                           
  1301                           ;lcd.c: 389: {
  1302                           ;lcd.c: 392: LCD_GoToNextLine();
  1303  0231  120A  118A  21FD  120A  118A  	fcall	_LCD_GoToNextLine
  1304  0236                     l1497:	
  1305                           
  1306                           ;lcd.c: 393: }
  1307                           ;lcd.c: 394: if(v_lcdData_u8!='\n')
  1308  0236  300A               	movlw	10
  1309  0237  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  1310  0238  1903               	btfsc	3,2
  1311  0239  0008               	return
  1312                           
  1313                           ;lcd.c: 395: {
  1314                           ;lcd.c: 397: lcd_DataWrite(v_lcdData_u8);
  1315  023A  087C               	movf	LCD_DisplayChar@v_lcdData_u8,w
  1316  023B  120A  118A  22F5   	fcall	_lcd_DataWrite
  1317                           
  1318                           ;lcd.c: 398: v_LcdTrackCursorPos_U8++;
  1319  023E  3001               	movlw	1
  1320  023F  00FB               	movwf	??_LCD_DisplayChar
  1321  0240  087B               	movf	??_LCD_DisplayChar,w
  1322  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1324  0243  07C2               	addwf	_v_LcdTrackCursorPos_U8,f
  1325  0244  0008               	return
  1326  0245                     __end_of_LCD_DisplayChar:	
  1327                           
  1328                           	psect	text8
  1329  02F5                     __ptext8:	
  1330 ;; *************** function _lcd_DataWrite *****************
  1331 ;; Defined at:
  1332 ;;		line 819 in file "../00-libfiles/lcd.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  dataByte        1    wreg     unsigned char 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  dataByte        1    9[COMMON] unsigned char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1346 ;;      Params:         0       0       0       0       0
  1347 ;;      Locals:         1       0       0       0       0
  1348 ;;      Temps:          2       0       0       0       0
  1349 ;;      Totals:         3       0       0       0       0
  1350 ;;Total ram usage:        3 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    3
  1353 ;; This function calls:
  1354 ;;		_lcd_BusyCheck
  1355 ;;		_lcd_SendDataSignals
  1356 ;;		_lcd_SendHigherNibble
  1357 ;;		_lcd_SendLowerNibble
  1358 ;; This function is called by:
  1359 ;;		_LCD_DisplayChar
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           
  1364                           ;psect for function _lcd_DataWrite
  1365  02F5                     _lcd_DataWrite:	
  1366                           
  1367                           ;incstack = 0
  1368                           ; Regs used in _lcd_DataWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1369                           ;lcd_DataWrite@dataByte stored from wreg
  1370  02F5  00F9               	movwf	lcd_DataWrite@dataByte
  1371                           
  1372                           ;lcd.c: 821: lcd_BusyCheck();
  1373  02F6  120A  118A  24FE  120A  118A  	fcall	_lcd_BusyCheck
  1374                           
  1375                           ;lcd.c: 822: if(LCDConfig.v_LcdMode_U8 == 8u)
  1376  02FB  3008               	movlw	8
  1377  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1378  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1379  02FE  0636               	xorwf	_LCDConfig+2,w
  1380  02FF  1D03               	btfss	3,2
  1381  0300  2B08               	goto	l1463
  1382                           
  1383                           ;lcd.c: 823: {
  1384                           ;lcd.c: 824: lcd_SendLowerNibble(dataByte);
  1385  0301  0879               	movf	lcd_DataWrite@dataByte,w
  1386  0302  120A  118A  236A  120A  118A  	fcall	_lcd_SendLowerNibble
  1387                           
  1388                           ;lcd.c: 825: }
  1389  0307  2B20               	goto	l1467
  1390  0308                     l1463:	
  1391                           
  1392                           ;lcd.c: 826: else
  1393                           ;lcd.c: 827: {
  1394                           ;lcd.c: 828: lcd_SendHigherNibble(dataByte);
  1395  0308  0879               	movf	lcd_DataWrite@dataByte,w
  1396  0309  120A  118A  232A  120A  118A  	fcall	_lcd_SendHigherNibble
  1397                           
  1398                           ;lcd.c: 829: lcd_SendDataSignals();
  1399  030E  120A  118A  2292  120A  118A  	fcall	_lcd_SendDataSignals
  1400                           
  1401                           ;lcd.c: 830: dataByte = dataByte << 4;
  1402  0313  0879               	movf	lcd_DataWrite@dataByte,w
  1403  0314  00F7               	movwf	??_lcd_DataWrite
  1404  0315  3003               	movlw	3
  1405  0316                     u1905:	
  1406  0316  1003               	clrc
  1407  0317  0DF7               	rlf	??_lcd_DataWrite,f
  1408  0318  3EFF               	addlw	-1
  1409  0319  1D03               	skipz
  1410  031A  2B16               	goto	u1905
  1411  031B  1003               	clrc
  1412  031C  0D77               	rlf	??_lcd_DataWrite,w
  1413  031D  00F8               	movwf	??_lcd_DataWrite+1
  1414  031E  0878               	movf	??_lcd_DataWrite+1,w
  1415  031F  00F9               	movwf	lcd_DataWrite@dataByte
  1416  0320                     l1467:	
  1417                           
  1418                           ;lcd.c: 831: }
  1419                           ;lcd.c: 833: lcd_SendHigherNibble(dataByte);
  1420  0320  0879               	movf	lcd_DataWrite@dataByte,w
  1421  0321  120A  118A  232A  120A  118A  	fcall	_lcd_SendHigherNibble
  1422                           
  1423                           ;lcd.c: 834: lcd_SendDataSignals();
  1424  0326  120A  118A  2292   	fcall	_lcd_SendDataSignals
  1425  0329  0008               	return
  1426  032A                     __end_of_lcd_DataWrite:	
  1427                           
  1428                           	psect	text9
  1429  0292                     __ptext9:	
  1430 ;; *************** function _lcd_SendDataSignals *****************
  1431 ;; Defined at:
  1432 ;;		line 995 in file "../00-libfiles/lcd.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1446 ;;      Params:         0       0       0       0       0
  1447 ;;      Locals:         0       0       0       0       0
  1448 ;;      Temps:          0       0       0       0       0
  1449 ;;      Totals:         0       0       0       0       0
  1450 ;;Total ram usage:        0 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    1
  1453 ;; This function calls:
  1454 ;;		_DELAY_us
  1455 ;;		_GPIO_PinWrite
  1456 ;; This function is called by:
  1457 ;;		_lcd_DataWrite
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           
  1462                           ;psect for function _lcd_SendDataSignals
  1463  0292                     _lcd_SendDataSignals:	
  1464                           
  1465                           ;lcd.c: 997: GPIO_PinWrite(LCDConfig.RS,1);
  1466                           
  1467                           ;incstack = 0
  1468                           ; Regs used in _lcd_SendDataSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1469  0292  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  1470  0293  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  1471  0294  1283               	bcf	3,5	;RP0=0, select bank0
  1472  0295  1303               	bcf	3,6	;RP1=0, select bank0
  1473  0296  0837               	movf	_LCDConfig+3,w
  1474  0297  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1475                           
  1476                           ;lcd.c: 998: GPIO_PinWrite(LCDConfig.RW,0);
  1477  029C  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  1478  029D  1283               	bcf	3,5	;RP0=0, select bank0
  1479  029E  1303               	bcf	3,6	;RP1=0, select bank0
  1480  029F  0838               	movf	_LCDConfig+4,w
  1481  02A0  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1482                           
  1483                           ;lcd.c: 999: GPIO_PinWrite(LCDConfig.EN,1);
  1484  02A5  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  1485  02A6  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  1486  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1487  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  1488  02A9  0839               	movf	_LCDConfig+5,w
  1489  02AA  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1490                           
  1491                           ;lcd.c: 1000: DELAY_us(10);
  1492  02AF  300A               	movlw	10
  1493  02B0  00F0               	movwf	DELAY_us@us_count
  1494  02B1  3000               	movlw	0
  1495  02B2  00F1               	movwf	DELAY_us@us_count+1
  1496  02B3  120A  118A  21D3  120A  118A  	fcall	_DELAY_us
  1497                           
  1498                           ;lcd.c: 1001: GPIO_PinWrite(LCDConfig.EN,0);
  1499  02B8  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  1500  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1501  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1502  02BB  0839               	movf	_LCDConfig+5,w
  1503  02BC  120A  118A  2704   	fcall	_GPIO_PinWrite
  1504  02BF  0008               	return
  1505  02C0                     __end_of_lcd_SendDataSignals:	
  1506                           
  1507                           	psect	text10
  1508  01FD                     __ptext10:	
  1509 ;; *************** function _LCD_GoToNextLine *****************
  1510 ;; Defined at:
  1511 ;;		line 286 in file "../00-libfiles/lcd.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;		None
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1525 ;;      Params:         0       0       0       0       0
  1526 ;;      Locals:         0       0       0       0       0
  1527 ;;      Temps:          1       0       0       0       0
  1528 ;;      Totals:         1       0       0       0       0
  1529 ;;Total ram usage:        1 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    4
  1532 ;; This function calls:
  1533 ;;		_LCD_CmdWrite
  1534 ;; This function is called by:
  1535 ;;		_LCD_DisplayChar
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           
  1540                           ;psect for function _LCD_GoToNextLine
  1541  01FD                     _LCD_GoToNextLine:	
  1542                           
  1543                           ;lcd.c: 290: v_LcdTrackLineNum_U8++;
  1544                           
  1545                           ;incstack = 0
  1546                           ; Regs used in _LCD_GoToNextLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1547  01FD  3001               	movlw	1
  1548  01FE  00FA               	movwf	??_LCD_GoToNextLine
  1549  01FF  087A               	movf	??_LCD_GoToNextLine,w
  1550  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0202  07C3               	addwf	_v_LcdTrackLineNum_U8,f
  1553                           
  1554                           ;lcd.c: 291: v_LcdTrackCursorPos_U8 = 0x00;
  1555  0203  01C2               	clrf	_v_LcdTrackCursorPos_U8
  1556                           
  1557                           ;lcd.c: 292: if(v_LcdTrackLineNum_U8 >= LCDConfig.v_MaxSupportedLines_U8)
  1558  0204  0834               	movf	_LCDConfig,w
  1559  0205  0243               	subwf	_v_LcdTrackLineNum_U8,w
  1560  0206  1803               	btfsc	3,0
  1561                           
  1562                           ;lcd.c: 293: v_LcdTrackLineNum_U8 = 0x00;
  1563  0207  01C3               	clrf	_v_LcdTrackLineNum_U8
  1564                           
  1565                           ;lcd.c: 294: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_LcdTrackLineNum_U8]);
  1566  0208  0843               	movf	_v_LcdTrackLineNum_U8,w
  1567  0209  3E44               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  1568  020A  0084               	movwf	4
  1569  020B  1383               	bcf	3,7	;select IRP bank0
  1570  020C  0800               	movf	0,w
  1571  020D  120A  118A  22C0   	fcall	_LCD_CmdWrite
  1572  0210  0008               	return
  1573  0211                     __end_of_LCD_GoToNextLine:	
  1574                           
  1575                           	psect	text11
  1576  02C0                     __ptext11:	
  1577 ;; *************** function _LCD_CmdWrite *****************
  1578 ;; Defined at:
  1579 ;;		line 352 in file "../00-libfiles/lcd.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  v_lcdCmd_u8     1    wreg     unsigned char 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  v_lcdCmd_u8     1    9[COMMON] unsigned char 
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1593 ;;      Params:         0       0       0       0       0
  1594 ;;      Locals:         1       0       0       0       0
  1595 ;;      Temps:          2       0       0       0       0
  1596 ;;      Totals:         3       0       0       0       0
  1597 ;;Total ram usage:        3 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; Hardware stack levels required when called:    3
  1600 ;; This function calls:
  1601 ;;		_lcd_BusyCheck
  1602 ;;		_lcd_SendCmdSignals
  1603 ;;		_lcd_SendHigherNibble
  1604 ;;		_lcd_SendLowerNibble
  1605 ;; This function is called by:
  1606 ;;		_LCD_Init
  1607 ;;		_LCD_Clear
  1608 ;;		_LCD_GoToLine
  1609 ;;		_LCD_GoToNextLine
  1610 ;;		_LCD_ScrollMessage
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           
  1615                           ;psect for function _LCD_CmdWrite
  1616  02C0                     _LCD_CmdWrite:	
  1617                           
  1618                           ;incstack = 0
  1619                           ; Regs used in _LCD_CmdWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1620                           ;LCD_CmdWrite@v_lcdCmd_u8 stored from wreg
  1621  02C0  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  1622                           
  1623                           ;lcd.c: 354: lcd_BusyCheck();
  1624  02C1  120A  118A  24FE  120A  118A  	fcall	_lcd_BusyCheck
  1625                           
  1626                           ;lcd.c: 355: if(LCDConfig.v_LcdMode_U8 == 8u)
  1627  02C6  3008               	movlw	8
  1628  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1629  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1630  02C9  0636               	xorwf	_LCDConfig+2,w
  1631  02CA  1D03               	btfss	3,2
  1632  02CB  2AD3               	goto	l1425
  1633                           
  1634                           ;lcd.c: 356: {
  1635                           ;lcd.c: 357: lcd_SendLowerNibble(v_lcdCmd_u8);
  1636  02CC  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  1637  02CD  120A  118A  236A  120A  118A  	fcall	_lcd_SendLowerNibble
  1638                           
  1639                           ;lcd.c: 358: }
  1640  02D2  2AEB               	goto	l1429
  1641  02D3                     l1425:	
  1642                           
  1643                           ;lcd.c: 359: else
  1644                           ;lcd.c: 360: {
  1645                           ;lcd.c: 361: lcd_SendHigherNibble(v_lcdCmd_u8);
  1646  02D3  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  1647  02D4  120A  118A  232A  120A  118A  	fcall	_lcd_SendHigherNibble
  1648                           
  1649                           ;lcd.c: 362: lcd_SendCmdSignals();
  1650  02D9  120A  118A  2265  120A  118A  	fcall	_lcd_SendCmdSignals
  1651                           
  1652                           ;lcd.c: 363: v_lcdCmd_u8 = v_lcdCmd_u8 << 4;
  1653  02DE  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  1654  02DF  00F7               	movwf	??_LCD_CmdWrite
  1655  02E0  3003               	movlw	3
  1656  02E1                     u1865:	
  1657  02E1  1003               	clrc
  1658  02E2  0DF7               	rlf	??_LCD_CmdWrite,f
  1659  02E3  3EFF               	addlw	-1
  1660  02E4  1D03               	skipz
  1661  02E5  2AE1               	goto	u1865
  1662  02E6  1003               	clrc
  1663  02E7  0D77               	rlf	??_LCD_CmdWrite,w
  1664  02E8  00F8               	movwf	??_LCD_CmdWrite+1
  1665  02E9  0878               	movf	??_LCD_CmdWrite+1,w
  1666  02EA  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  1667  02EB                     l1429:	
  1668                           
  1669                           ;lcd.c: 364: }
  1670                           ;lcd.c: 366: lcd_SendHigherNibble(v_lcdCmd_u8);
  1671  02EB  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  1672  02EC  120A  118A  232A  120A  118A  	fcall	_lcd_SendHigherNibble
  1673                           
  1674                           ;lcd.c: 367: lcd_SendCmdSignals();
  1675  02F1  120A  118A  2265   	fcall	_lcd_SendCmdSignals
  1676  02F4  0008               	return
  1677  02F5                     __end_of_LCD_CmdWrite:	
  1678                           
  1679                           	psect	text12
  1680  036A                     __ptext12:	
  1681 ;; *************** function _lcd_SendLowerNibble *****************
  1682 ;; Defined at:
  1683 ;;		line 955 in file "../00-libfiles/lcd.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;  dataByte        1    wreg     unsigned char 
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;  dataByte        1    6[COMMON] unsigned char 
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1697 ;;      Params:         0       0       0       0       0
  1698 ;;      Locals:         1       0       0       0       0
  1699 ;;      Temps:          1       0       0       0       0
  1700 ;;      Totals:         2       0       0       0       0
  1701 ;;Total ram usage:        2 bytes
  1702 ;; Hardware stack levels used:    1
  1703 ;; Hardware stack levels required when called:    1
  1704 ;; This function calls:
  1705 ;;		_GPIO_PinWrite
  1706 ;; This function is called by:
  1707 ;;		_LCD_CmdWrite
  1708 ;;		_lcd_DataWrite
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           
  1713                           ;psect for function _lcd_SendLowerNibble
  1714  036A                     _lcd_SendLowerNibble:	
  1715                           
  1716                           ;incstack = 0
  1717                           ; Regs used in _lcd_SendLowerNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1718                           ;lcd_SendLowerNibble@dataByte stored from wreg
  1719  036A  00F6               	movwf	lcd_SendLowerNibble@dataByte
  1720                           
  1721                           ;lcd.c: 957: GPIO_PinWrite(LCDConfig.D0,(((dataByte)&((1<<(0))))!=0u));
  1722  036B  1C76               	btfss	lcd_SendLowerNibble@dataByte,0
  1723  036C  2B6F               	goto	u1690
  1724  036D  3001               	movlw	1
  1725  036E  2B70               	goto	u1700
  1726  036F                     u1690:	
  1727  036F  3000               	movlw	0
  1728  0370                     u1700:	
  1729  0370  00F5               	movwf	??_lcd_SendLowerNibble
  1730  0371  0875               	movf	??_lcd_SendLowerNibble,w
  1731  0372  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  1732  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1734  0375  083A               	movf	_LCDConfig+6,w
  1735  0376  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1736                           
  1737                           ;lcd.c: 958: GPIO_PinWrite(LCDConfig.D1,(((dataByte)&((1<<(1))))!=0u));
  1738  037B  1CF6               	btfss	lcd_SendLowerNibble@dataByte,1
  1739  037C  2B7F               	goto	u1710
  1740  037D  3001               	movlw	1
  1741  037E  2B80               	goto	u1720
  1742  037F                     u1710:	
  1743  037F  3000               	movlw	0
  1744  0380                     u1720:	
  1745  0380  00F5               	movwf	??_lcd_SendLowerNibble
  1746  0381  0875               	movf	??_lcd_SendLowerNibble,w
  1747  0382  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  1748  0383  1283               	bcf	3,5	;RP0=0, select bank0
  1749  0384  1303               	bcf	3,6	;RP1=0, select bank0
  1750  0385  083B               	movf	_LCDConfig+7,w
  1751  0386  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1752                           
  1753                           ;lcd.c: 959: GPIO_PinWrite(LCDConfig.D2,(((dataByte)&((1<<(2))))!=0u));
  1754  038B  1D76               	btfss	lcd_SendLowerNibble@dataByte,2
  1755  038C  2B8F               	goto	u1730
  1756  038D  3001               	movlw	1
  1757  038E  2B90               	goto	u1740
  1758  038F                     u1730:	
  1759  038F  3000               	movlw	0
  1760  0390                     u1740:	
  1761  0390  00F5               	movwf	??_lcd_SendLowerNibble
  1762  0391  0875               	movf	??_lcd_SendLowerNibble,w
  1763  0392  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  1764  0393  1283               	bcf	3,5	;RP0=0, select bank0
  1765  0394  1303               	bcf	3,6	;RP1=0, select bank0
  1766  0395  083C               	movf	_LCDConfig+8,w
  1767  0396  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1768                           
  1769                           ;lcd.c: 960: GPIO_PinWrite(LCDConfig.D3,(((dataByte)&((1<<(3))))!=0u));
  1770  039B  1DF6               	btfss	lcd_SendLowerNibble@dataByte,3
  1771  039C  2B9F               	goto	u1750
  1772  039D  3001               	movlw	1
  1773  039E  2BA0               	goto	u1760
  1774  039F                     u1750:	
  1775  039F  3000               	movlw	0
  1776  03A0                     u1760:	
  1777  03A0  00F5               	movwf	??_lcd_SendLowerNibble
  1778  03A1  0875               	movf	??_lcd_SendLowerNibble,w
  1779  03A2  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  1780  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1781  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  1782  03A5  083D               	movf	_LCDConfig+9,w
  1783  03A6  120A  118A  2704   	fcall	_GPIO_PinWrite
  1784  03A9  0008               	return
  1785  03AA                     __end_of_lcd_SendLowerNibble:	
  1786                           
  1787                           	psect	text13
  1788  032A                     __ptext13:	
  1789 ;; *************** function _lcd_SendHigherNibble *****************
  1790 ;; Defined at:
  1791 ;;		line 936 in file "../00-libfiles/lcd.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;  dataByte        1    wreg     unsigned char 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;  dataByte        1    6[COMMON] unsigned char 
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  1    wreg      void 
  1798 ;; Registers used:
  1799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1805 ;;      Params:         0       0       0       0       0
  1806 ;;      Locals:         1       0       0       0       0
  1807 ;;      Temps:          1       0       0       0       0
  1808 ;;      Totals:         2       0       0       0       0
  1809 ;;Total ram usage:        2 bytes
  1810 ;; Hardware stack levels used:    1
  1811 ;; Hardware stack levels required when called:    1
  1812 ;; This function calls:
  1813 ;;		_GPIO_PinWrite
  1814 ;; This function is called by:
  1815 ;;		_LCD_CmdWrite
  1816 ;;		_lcd_DataWrite
  1817 ;;		_lcd_Reset
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           
  1822                           ;psect for function _lcd_SendHigherNibble
  1823  032A                     _lcd_SendHigherNibble:	
  1824                           
  1825                           ;incstack = 0
  1826                           ; Regs used in _lcd_SendHigherNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1827                           ;lcd_SendHigherNibble@dataByte stored from wreg
  1828  032A  00F6               	movwf	lcd_SendHigherNibble@dataByte
  1829                           
  1830                           ;lcd.c: 938: GPIO_PinWrite(LCDConfig.D4,(((dataByte)&((1<<(4))))!=0u));
  1831  032B  1E76               	btfss	lcd_SendHigherNibble@dataByte,4
  1832  032C  2B2F               	goto	u1770
  1833  032D  3001               	movlw	1
  1834  032E  2B30               	goto	u1780
  1835  032F                     u1770:	
  1836  032F  3000               	movlw	0
  1837  0330                     u1780:	
  1838  0330  00F5               	movwf	??_lcd_SendHigherNibble
  1839  0331  0875               	movf	??_lcd_SendHigherNibble,w
  1840  0332  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  1841  0333  1283               	bcf	3,5	;RP0=0, select bank0
  1842  0334  1303               	bcf	3,6	;RP1=0, select bank0
  1843  0335  083E               	movf	_LCDConfig+10,w
  1844  0336  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1845                           
  1846                           ;lcd.c: 939: GPIO_PinWrite(LCDConfig.D5,(((dataByte)&((1<<(5))))!=0u));
  1847  033B  1EF6               	btfss	lcd_SendHigherNibble@dataByte,5
  1848  033C  2B3F               	goto	u1790
  1849  033D  3001               	movlw	1
  1850  033E  2B40               	goto	u1800
  1851  033F                     u1790:	
  1852  033F  3000               	movlw	0
  1853  0340                     u1800:	
  1854  0340  00F5               	movwf	??_lcd_SendHigherNibble
  1855  0341  0875               	movf	??_lcd_SendHigherNibble,w
  1856  0342  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  1857  0343  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0344  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0345  083F               	movf	_LCDConfig+11,w
  1860  0346  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1861                           
  1862                           ;lcd.c: 940: GPIO_PinWrite(LCDConfig.D6,(((dataByte)&((1<<(6))))!=0u));
  1863  034B  1F76               	btfss	lcd_SendHigherNibble@dataByte,6
  1864  034C  2B4F               	goto	u1810
  1865  034D  3001               	movlw	1
  1866  034E  2B50               	goto	u1820
  1867  034F                     u1810:	
  1868  034F  3000               	movlw	0
  1869  0350                     u1820:	
  1870  0350  00F5               	movwf	??_lcd_SendHigherNibble
  1871  0351  0875               	movf	??_lcd_SendHigherNibble,w
  1872  0352  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  1873  0353  1283               	bcf	3,5	;RP0=0, select bank0
  1874  0354  1303               	bcf	3,6	;RP1=0, select bank0
  1875  0355  0840               	movf	_LCDConfig+12,w
  1876  0356  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1877                           
  1878                           ;lcd.c: 941: GPIO_PinWrite(LCDConfig.D7,(((dataByte)&((1<<(7))))!=0u));
  1879  035B  1FF6               	btfss	lcd_SendHigherNibble@dataByte,7
  1880  035C  2B5F               	goto	u1830
  1881  035D  3001               	movlw	1
  1882  035E  2B60               	goto	u1840
  1883  035F                     u1830:	
  1884  035F  3000               	movlw	0
  1885  0360                     u1840:	
  1886  0360  00F5               	movwf	??_lcd_SendHigherNibble
  1887  0361  0875               	movf	??_lcd_SendHigherNibble,w
  1888  0362  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  1889  0363  1283               	bcf	3,5	;RP0=0, select bank0
  1890  0364  1303               	bcf	3,6	;RP1=0, select bank0
  1891  0365  0841               	movf	_LCDConfig+13,w
  1892  0366  120A  118A  2704   	fcall	_GPIO_PinWrite
  1893  0369  0008               	return
  1894  036A                     __end_of_lcd_SendHigherNibble:	
  1895                           
  1896                           	psect	text14
  1897  0265                     __ptext14:	
  1898 ;; *************** function _lcd_SendCmdSignals *****************
  1899 ;; Defined at:
  1900 ;;		line 974 in file "../00-libfiles/lcd.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1914 ;;      Params:         0       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0
  1917 ;;      Totals:         0       0       0       0       0
  1918 ;;Total ram usage:        0 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    1
  1921 ;; This function calls:
  1922 ;;		_DELAY_us
  1923 ;;		_GPIO_PinWrite
  1924 ;; This function is called by:
  1925 ;;		_LCD_CmdWrite
  1926 ;;		_lcd_Reset
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           
  1931                           ;psect for function _lcd_SendCmdSignals
  1932  0265                     _lcd_SendCmdSignals:	
  1933                           
  1934                           ;lcd.c: 976: GPIO_PinWrite(LCDConfig.RS,0);
  1935                           
  1936                           ;incstack = 0
  1937                           ; Regs used in _lcd_SendCmdSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1938  0265  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  1939  0266  1283               	bcf	3,5	;RP0=0, select bank0
  1940  0267  1303               	bcf	3,6	;RP1=0, select bank0
  1941  0268  0837               	movf	_LCDConfig+3,w
  1942  0269  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1943                           
  1944                           ;lcd.c: 977: GPIO_PinWrite(LCDConfig.RW,0);
  1945  026E  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  1946  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1947  0270  1303               	bcf	3,6	;RP1=0, select bank0
  1948  0271  0838               	movf	_LCDConfig+4,w
  1949  0272  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1950                           
  1951                           ;lcd.c: 978: GPIO_PinWrite(LCDConfig.EN,1);
  1952  0277  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  1953  0278  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  1954  0279  1283               	bcf	3,5	;RP0=0, select bank0
  1955  027A  1303               	bcf	3,6	;RP1=0, select bank0
  1956  027B  0839               	movf	_LCDConfig+5,w
  1957  027C  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  1958                           
  1959                           ;lcd.c: 979: DELAY_us(10);
  1960  0281  300A               	movlw	10
  1961  0282  00F0               	movwf	DELAY_us@us_count
  1962  0283  3000               	movlw	0
  1963  0284  00F1               	movwf	DELAY_us@us_count+1
  1964  0285  120A  118A  21D3  120A  118A  	fcall	_DELAY_us
  1965                           
  1966                           ;lcd.c: 980: GPIO_PinWrite(LCDConfig.EN,0);
  1967  028A  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  1968  028B  1283               	bcf	3,5	;RP0=0, select bank0
  1969  028C  1303               	bcf	3,6	;RP1=0, select bank0
  1970  028D  0839               	movf	_LCDConfig+5,w
  1971  028E  120A  118A  2704   	fcall	_GPIO_PinWrite
  1972  0291  0008               	return
  1973  0292                     __end_of_lcd_SendCmdSignals:	
  1974                           
  1975                           	psect	text15
  1976  04FE                     __ptext15:	
  1977 ;; *************** function _lcd_BusyCheck *****************
  1978 ;; Defined at:
  1979 ;;		line 853 in file "../00-libfiles/lcd.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  busyflag        1    6[COMMON] unsigned char 
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1993 ;;      Params:         0       0       0       0       0
  1994 ;;      Locals:         1       0       0       0       0
  1995 ;;      Temps:          1       0       0       0       0
  1996 ;;      Totals:         2       0       0       0       0
  1997 ;;Total ram usage:        2 bytes
  1998 ;; Hardware stack levels used:    1
  1999 ;; Hardware stack levels required when called:    2
  2000 ;; This function calls:
  2001 ;;		_DELAY_ms
  2002 ;;		_DELAY_us
  2003 ;;		_GPIO_PinDirection
  2004 ;;		_GPIO_PinRead
  2005 ;;		_GPIO_PinWrite
  2006 ;; This function is called by:
  2007 ;;		_LCD_CmdWrite
  2008 ;;		_lcd_DataWrite
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           
  2013                           ;psect for function _lcd_BusyCheck
  2014  04FE                     _lcd_BusyCheck:	
  2015                           
  2016                           ;lcd.c: 855: uint8_t busyflag;
  2017                           ;lcd.c: 857: if(LCDConfig.RW != P_NC)
  2018                           
  2019                           ;incstack = 0
  2020                           ; Regs used in _lcd_BusyCheck: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2021  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2022  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  2023  0500  0A38               	incf	_LCDConfig+4,w
  2024  0501  1903               	btfsc	3,2
  2025  0502  2D82               	goto	l1407
  2026                           
  2027                           ;lcd.c: 858: {
  2028                           ;lcd.c: 859: GPIO_PinDirection(LCDConfig.D7,0x01u);
  2029  0503  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2030  0504  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  2031  0505  0841               	movf	_LCDConfig+13,w
  2032  0506  120A  118A  262B  120A  118A  	fcall	_GPIO_PinDirection
  2033                           
  2034                           ;lcd.c: 860: GPIO_PinWrite(LCDConfig.RS,0);
  2035  050B  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2036  050C  1283               	bcf	3,5	;RP0=0, select bank0
  2037  050D  1303               	bcf	3,6	;RP1=0, select bank0
  2038  050E  0837               	movf	_LCDConfig+3,w
  2039  050F  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2040                           
  2041                           ;lcd.c: 861: GPIO_PinWrite(LCDConfig.RW,1);
  2042  0514  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2043  0515  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  2044  0516  1283               	bcf	3,5	;RP0=0, select bank0
  2045  0517  1303               	bcf	3,6	;RP1=0, select bank0
  2046  0518  0838               	movf	_LCDConfig+4,w
  2047  0519  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2048  051E                     l278:	
  2049                           ;lcd.c: 862: do
  2050                           
  2051                           
  2052                           ;lcd.c: 863: {
  2053                           ;lcd.c: 865: GPIO_PinWrite(LCDConfig.EN,0);
  2054  051E  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2055  051F  1283               	bcf	3,5	;RP0=0, select bank0
  2056  0520  1303               	bcf	3,6	;RP1=0, select bank0
  2057  0521  0839               	movf	_LCDConfig+5,w
  2058  0522  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2059                           
  2060                           ;lcd.c: 866: DELAY_us(10);
  2061  0527  300A               	movlw	10
  2062  0528  00F0               	movwf	DELAY_us@us_count
  2063  0529  3000               	movlw	0
  2064  052A  00F1               	movwf	DELAY_us@us_count+1
  2065  052B  120A  118A  21D3  120A  118A  	fcall	_DELAY_us
  2066                           
  2067                           ;lcd.c: 867: GPIO_PinWrite(LCDConfig.EN,1);
  2068  0530  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2069  0531  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  2070  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2071  0533  1303               	bcf	3,6	;RP1=0, select bank0
  2072  0534  0839               	movf	_LCDConfig+5,w
  2073  0535  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2074                           
  2075                           ;lcd.c: 868: DELAY_us(10);
  2076  053A  300A               	movlw	10
  2077  053B  00F0               	movwf	DELAY_us@us_count
  2078  053C  3000               	movlw	0
  2079  053D  00F1               	movwf	DELAY_us@us_count+1
  2080  053E  120A  118A  21D3  120A  118A  	fcall	_DELAY_us
  2081                           
  2082                           ;lcd.c: 869: busyflag = GPIO_PinRead(LCDConfig.D7);
  2083  0543  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0544  1303               	bcf	3,6	;RP1=0, select bank0
  2085  0545  0841               	movf	_LCDConfig+13,w
  2086  0546  120A  118A  2489  120A  118A  	fcall	_GPIO_PinRead
  2087  054B  00F5               	movwf	??_lcd_BusyCheck
  2088  054C  0875               	movf	??_lcd_BusyCheck,w
  2089  054D  00F6               	movwf	lcd_BusyCheck@busyflag
  2090                           
  2091                           ;lcd.c: 872: if(LCDConfig.v_LcdMode_U8 == 4)
  2092  054E  3004               	movlw	4
  2093  054F  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0550  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0551  0636               	xorwf	_LCDConfig+2,w
  2096  0552  1D03               	btfss	3,2
  2097  0553  2D77               	goto	l1403
  2098                           
  2099                           ;lcd.c: 873: {
  2100                           ;lcd.c: 875: GPIO_PinWrite(LCDConfig.EN,0);
  2101  0554  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2102  0555  0839               	movf	_LCDConfig+5,w
  2103  0556  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2104                           
  2105                           ;lcd.c: 876: DELAY_us(10);
  2106  055B  300A               	movlw	10
  2107  055C  00F0               	movwf	DELAY_us@us_count
  2108  055D  3000               	movlw	0
  2109  055E  00F1               	movwf	DELAY_us@us_count+1
  2110  055F  120A  118A  21D3  120A  118A  	fcall	_DELAY_us
  2111                           
  2112                           ;lcd.c: 877: GPIO_PinWrite(LCDConfig.EN,1);
  2113  0564  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  2114  0565  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  2115  0566  1283               	bcf	3,5	;RP0=0, select bank0
  2116  0567  1303               	bcf	3,6	;RP1=0, select bank0
  2117  0568  0839               	movf	_LCDConfig+5,w
  2118  0569  120A  118A  2704  120A  118A  	fcall	_GPIO_PinWrite
  2119                           
  2120                           ;lcd.c: 878: DELAY_us(10);
  2121  056E  300A               	movlw	10
  2122  056F  00F0               	movwf	DELAY_us@us_count
  2123  0570  3000               	movlw	0
  2124  0571  00F1               	movwf	DELAY_us@us_count+1
  2125  0572  120A  118A  21D3  120A  118A  	fcall	_DELAY_us
  2126  0577                     l1403:	
  2127                           
  2128                           ;lcd.c: 879: }
  2129                           ;lcd.c: 880: }while(busyflag!=0);
  2130  0577  0876               	movf	lcd_BusyCheck@busyflag,w
  2131  0578  1D03               	btfss	3,2
  2132  0579  2D1E               	goto	l278
  2133                           
  2134                           ;lcd.c: 882: GPIO_PinDirection(LCDConfig.D7,0x00u);
  2135  057A  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  2136  057B  1283               	bcf	3,5	;RP0=0, select bank0
  2137  057C  1303               	bcf	3,6	;RP1=0, select bank0
  2138  057D  0841               	movf	_LCDConfig+13,w
  2139  057E  120A  118A  262B   	fcall	_GPIO_PinDirection
  2140                           
  2141                           ;lcd.c: 883: }
  2142  0581  0008               	return
  2143  0582                     l1407:	
  2144                           
  2145                           ;lcd.c: 884: else
  2146                           ;lcd.c: 885: {
  2147                           ;lcd.c: 888: DELAY_ms(1);
  2148  0582  3001               	movlw	1
  2149  0583  00F2               	movwf	DELAY_ms@ms_count
  2150  0584  3000               	movlw	0
  2151  0585  00F3               	movwf	DELAY_ms@ms_count+1
  2152  0586  120A  118A  21E9   	fcall	_DELAY_ms
  2153  0589  0008               	return
  2154  058A                     __end_of_lcd_BusyCheck:	
  2155                           
  2156                           	psect	text16
  2157  0704                     __ptext16:	
  2158 ;; *************** function _GPIO_PinWrite *****************
  2159 ;; Defined at:
  2160 ;;		line 127 in file "../00-libfiles/gpio.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  enm_pinNumbe    1    wreg     enum E1088
  2163 ;;  var_pinValue    1    0[COMMON] unsigned char 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  2166 ;;  var_portNumb    1    3[COMMON] unsigned char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2176 ;;      Params:         1       0       0       0       0
  2177 ;;      Locals:         2       0       0       0       0
  2178 ;;      Temps:          2       0       0       0       0
  2179 ;;      Totals:         5       0       0       0       0
  2180 ;;Total ram usage:        5 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; This function calls:
  2183 ;;		Nothing
  2184 ;; This function is called by:
  2185 ;;		_lcd_BusyCheck
  2186 ;;		_lcd_SendHigherNibble
  2187 ;;		_lcd_SendLowerNibble
  2188 ;;		_lcd_SendCmdSignals
  2189 ;;		_lcd_SendDataSignals
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           
  2194                           ;psect for function _GPIO_PinWrite
  2195  0704                     _GPIO_PinWrite:	
  2196                           
  2197                           ;incstack = 0
  2198                           ; Regs used in _GPIO_PinWrite: [wreg-fsr0h+status,2+status,0]
  2199                           ;GPIO_PinWrite@enm_pinNumber stored from wreg
  2200  0704  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  2201                           
  2202                           ;gpio.c: 130: uint8_t var_portNumber_u8;
  2203                           ;gpio.c: 133: var_portNumber_u8 = (enm_pinNumber>>3);
  2204  0705  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  2205  0706  00F1               	movwf	??_GPIO_PinWrite
  2206  0707  3003               	movlw	3
  2207  0708                     u1335:	
  2208  0708  1003               	clrc
  2209  0709  0CF1               	rrf	??_GPIO_PinWrite,f
  2210  070A  3EFF               	addlw	-1
  2211  070B  1D03               	skipz
  2212  070C  2F08               	goto	u1335
  2213  070D  0871               	movf	??_GPIO_PinWrite,w
  2214  070E  00F2               	movwf	??_GPIO_PinWrite+1
  2215  070F  0872               	movf	??_GPIO_PinWrite+1,w
  2216  0710  00F3               	movwf	GPIO_PinWrite@var_portNumber_u8
  2217                           
  2218                           ;gpio.c: 134: enm_pinNumber = enm_pinNumber & 0x07;
  2219  0711  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  2220  0712  3907               	andlw	7
  2221  0713  00F1               	movwf	??_GPIO_PinWrite
  2222  0714  0871               	movf	??_GPIO_PinWrite,w
  2223  0715  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  2224                           
  2225                           ;gpio.c: 138: switch(var_portNumber_u8)
  2226  0716  2FCB               	goto	l1351
  2227  0717                     l1319:	
  2228                           ;gpio.c: 139: {
  2229                           ;gpio.c: 141: case 0:
  2230                           
  2231                           
  2232                           ;gpio.c: 142: ((var_pinValue_u8)? ((PORTA) |= (1<<(enm_pinNumber))): ((PORTA) &= ~(1<<(e
      +                          nm_pinNumber))));
  2233  0717  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  2234  0718  1903               	btfsc	3,2
  2235  0719  2F2A               	goto	l1323
  2236  071A  3001               	movlw	1
  2237  071B  00F1               	movwf	??_GPIO_PinWrite
  2238  071C  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2239  071D  2F20               	goto	u1354
  2240  071E                     u1355:	
  2241  071E  1003               	clrc
  2242  071F  0DF1               	rlf	??_GPIO_PinWrite,f
  2243  0720                     u1354:	
  2244  0720  3EFF               	addlw	-1
  2245  0721  1D03               	skipz
  2246  0722  2F1E               	goto	u1355
  2247  0723  0871               	movf	??_GPIO_PinWrite,w
  2248  0724  00F2               	movwf	??_GPIO_PinWrite+1
  2249  0725  0872               	movf	??_GPIO_PinWrite+1,w
  2250  0726  1283               	bcf	3,5	;RP0=0, select bank0
  2251  0727  1303               	bcf	3,6	;RP1=0, select bank0
  2252  0728  0485               	iorwf	5,f	;volatile
  2253  0729  0008               	return
  2254  072A                     l1323:	
  2255  072A  3001               	movlw	1
  2256  072B  00F1               	movwf	??_GPIO_PinWrite
  2257  072C  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2258  072D  2F30               	goto	u1364
  2259  072E                     u1365:	
  2260  072E  1003               	clrc
  2261  072F  0DF1               	rlf	??_GPIO_PinWrite,f
  2262  0730                     u1364:	
  2263  0730  3EFF               	addlw	-1
  2264  0731  1D03               	skipz
  2265  0732  2F2E               	goto	u1365
  2266  0733  0871               	movf	??_GPIO_PinWrite,w
  2267  0734  3AFF               	xorlw	255
  2268  0735  00F2               	movwf	??_GPIO_PinWrite+1
  2269  0736  0872               	movf	??_GPIO_PinWrite+1,w
  2270  0737  1283               	bcf	3,5	;RP0=0, select bank0
  2271  0738  1303               	bcf	3,6	;RP1=0, select bank0
  2272  0739  0585               	andwf	5,f	;volatile
  2273                           
  2274                           ;gpio.c: 143: break;
  2275  073A  0008               	return
  2276  073B                     l1325:	
  2277                           ;gpio.c: 147: case 1:
  2278                           
  2279                           
  2280                           ;gpio.c: 148: ((var_pinValue_u8)? ((PORTB) |= (1<<(enm_pinNumber))): ((PORTB) &= ~(1<<(e
      +                          nm_pinNumber))));
  2281  073B  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  2282  073C  1903               	btfsc	3,2
  2283  073D  2F4E               	goto	l1329
  2284  073E  3001               	movlw	1
  2285  073F  00F1               	movwf	??_GPIO_PinWrite
  2286  0740  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2287  0741  2F44               	goto	u1384
  2288  0742                     u1385:	
  2289  0742  1003               	clrc
  2290  0743  0DF1               	rlf	??_GPIO_PinWrite,f
  2291  0744                     u1384:	
  2292  0744  3EFF               	addlw	-1
  2293  0745  1D03               	skipz
  2294  0746  2F42               	goto	u1385
  2295  0747  0871               	movf	??_GPIO_PinWrite,w
  2296  0748  00F2               	movwf	??_GPIO_PinWrite+1
  2297  0749  0872               	movf	??_GPIO_PinWrite+1,w
  2298  074A  1283               	bcf	3,5	;RP0=0, select bank0
  2299  074B  1303               	bcf	3,6	;RP1=0, select bank0
  2300  074C  0486               	iorwf	6,f	;volatile
  2301  074D  0008               	return
  2302  074E                     l1329:	
  2303  074E  3001               	movlw	1
  2304  074F  00F1               	movwf	??_GPIO_PinWrite
  2305  0750  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2306  0751  2F54               	goto	u1394
  2307  0752                     u1395:	
  2308  0752  1003               	clrc
  2309  0753  0DF1               	rlf	??_GPIO_PinWrite,f
  2310  0754                     u1394:	
  2311  0754  3EFF               	addlw	-1
  2312  0755  1D03               	skipz
  2313  0756  2F52               	goto	u1395
  2314  0757  0871               	movf	??_GPIO_PinWrite,w
  2315  0758  3AFF               	xorlw	255
  2316  0759  00F2               	movwf	??_GPIO_PinWrite+1
  2317  075A  0872               	movf	??_GPIO_PinWrite+1,w
  2318  075B  1283               	bcf	3,5	;RP0=0, select bank0
  2319  075C  1303               	bcf	3,6	;RP1=0, select bank0
  2320  075D  0586               	andwf	6,f	;volatile
  2321                           
  2322                           ;gpio.c: 149: break;
  2323  075E  0008               	return
  2324  075F                     l1331:	
  2325                           ;gpio.c: 153: case 2:
  2326                           
  2327                           
  2328                           ;gpio.c: 154: ((var_pinValue_u8)? ((PORTC) |= (1<<(enm_pinNumber))): ((PORTC) &= ~(1<<(e
      +                          nm_pinNumber))));
  2329  075F  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  2330  0760  1903               	btfsc	3,2
  2331  0761  2F72               	goto	l1335
  2332  0762  3001               	movlw	1
  2333  0763  00F1               	movwf	??_GPIO_PinWrite
  2334  0764  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2335  0765  2F68               	goto	u1414
  2336  0766                     u1415:	
  2337  0766  1003               	clrc
  2338  0767  0DF1               	rlf	??_GPIO_PinWrite,f
  2339  0768                     u1414:	
  2340  0768  3EFF               	addlw	-1
  2341  0769  1D03               	skipz
  2342  076A  2F66               	goto	u1415
  2343  076B  0871               	movf	??_GPIO_PinWrite,w
  2344  076C  00F2               	movwf	??_GPIO_PinWrite+1
  2345  076D  0872               	movf	??_GPIO_PinWrite+1,w
  2346  076E  1283               	bcf	3,5	;RP0=0, select bank0
  2347  076F  1303               	bcf	3,6	;RP1=0, select bank0
  2348  0770  0487               	iorwf	7,f	;volatile
  2349  0771  0008               	return
  2350  0772                     l1335:	
  2351  0772  3001               	movlw	1
  2352  0773  00F1               	movwf	??_GPIO_PinWrite
  2353  0774  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2354  0775  2F78               	goto	u1424
  2355  0776                     u1425:	
  2356  0776  1003               	clrc
  2357  0777  0DF1               	rlf	??_GPIO_PinWrite,f
  2358  0778                     u1424:	
  2359  0778  3EFF               	addlw	-1
  2360  0779  1D03               	skipz
  2361  077A  2F76               	goto	u1425
  2362  077B  0871               	movf	??_GPIO_PinWrite,w
  2363  077C  3AFF               	xorlw	255
  2364  077D  00F2               	movwf	??_GPIO_PinWrite+1
  2365  077E  0872               	movf	??_GPIO_PinWrite+1,w
  2366  077F  1283               	bcf	3,5	;RP0=0, select bank0
  2367  0780  1303               	bcf	3,6	;RP1=0, select bank0
  2368  0781  0587               	andwf	7,f	;volatile
  2369                           
  2370                           ;gpio.c: 155: break;
  2371  0782  0008               	return
  2372  0783                     l1337:	
  2373                           ;gpio.c: 159: case 3:
  2374                           
  2375                           
  2376                           ;gpio.c: 160: ((var_pinValue_u8)? ((PORTD) |= (1<<(enm_pinNumber))): ((PORTD) &= ~(1<<(e
      +                          nm_pinNumber))));
  2377  0783  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  2378  0784  1903               	btfsc	3,2
  2379  0785  2F96               	goto	l1341
  2380  0786  3001               	movlw	1
  2381  0787  00F1               	movwf	??_GPIO_PinWrite
  2382  0788  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2383  0789  2F8C               	goto	u1444
  2384  078A                     u1445:	
  2385  078A  1003               	clrc
  2386  078B  0DF1               	rlf	??_GPIO_PinWrite,f
  2387  078C                     u1444:	
  2388  078C  3EFF               	addlw	-1
  2389  078D  1D03               	skipz
  2390  078E  2F8A               	goto	u1445
  2391  078F  0871               	movf	??_GPIO_PinWrite,w
  2392  0790  00F2               	movwf	??_GPIO_PinWrite+1
  2393  0791  0872               	movf	??_GPIO_PinWrite+1,w
  2394  0792  1283               	bcf	3,5	;RP0=0, select bank0
  2395  0793  1303               	bcf	3,6	;RP1=0, select bank0
  2396  0794  0488               	iorwf	8,f	;volatile
  2397  0795  0008               	return
  2398  0796                     l1341:	
  2399  0796  3001               	movlw	1
  2400  0797  00F1               	movwf	??_GPIO_PinWrite
  2401  0798  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2402  0799  2F9C               	goto	u1454
  2403  079A                     u1455:	
  2404  079A  1003               	clrc
  2405  079B  0DF1               	rlf	??_GPIO_PinWrite,f
  2406  079C                     u1454:	
  2407  079C  3EFF               	addlw	-1
  2408  079D  1D03               	skipz
  2409  079E  2F9A               	goto	u1455
  2410  079F  0871               	movf	??_GPIO_PinWrite,w
  2411  07A0  3AFF               	xorlw	255
  2412  07A1  00F2               	movwf	??_GPIO_PinWrite+1
  2413  07A2  0872               	movf	??_GPIO_PinWrite+1,w
  2414  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  2415  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  2416  07A5  0588               	andwf	8,f	;volatile
  2417                           
  2418                           ;gpio.c: 161: break;
  2419  07A6  0008               	return
  2420  07A7                     l1343:	
  2421                           ;gpio.c: 165: case 4:
  2422                           
  2423                           
  2424                           ;gpio.c: 166: ((var_pinValue_u8)? ((PORTE) |= (1<<(enm_pinNumber))): ((PORTE) &= ~(1<<(e
      +                          nm_pinNumber))));
  2425  07A7  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  2426  07A8  1903               	btfsc	3,2
  2427  07A9  2FBA               	goto	l1347
  2428  07AA  3001               	movlw	1
  2429  07AB  00F1               	movwf	??_GPIO_PinWrite
  2430  07AC  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2431  07AD  2FB0               	goto	u1474
  2432  07AE                     u1475:	
  2433  07AE  1003               	clrc
  2434  07AF  0DF1               	rlf	??_GPIO_PinWrite,f
  2435  07B0                     u1474:	
  2436  07B0  3EFF               	addlw	-1
  2437  07B1  1D03               	skipz
  2438  07B2  2FAE               	goto	u1475
  2439  07B3  0871               	movf	??_GPIO_PinWrite,w
  2440  07B4  00F2               	movwf	??_GPIO_PinWrite+1
  2441  07B5  0872               	movf	??_GPIO_PinWrite+1,w
  2442  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  2443  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  2444  07B8  0489               	iorwf	9,f	;volatile
  2445  07B9  0008               	return
  2446  07BA                     l1347:	
  2447  07BA  3001               	movlw	1
  2448  07BB  00F1               	movwf	??_GPIO_PinWrite
  2449  07BC  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  2450  07BD  2FC0               	goto	u1484
  2451  07BE                     u1485:	
  2452  07BE  1003               	clrc
  2453  07BF  0DF1               	rlf	??_GPIO_PinWrite,f
  2454  07C0                     u1484:	
  2455  07C0  3EFF               	addlw	-1
  2456  07C1  1D03               	skipz
  2457  07C2  2FBE               	goto	u1485
  2458  07C3  0871               	movf	??_GPIO_PinWrite,w
  2459  07C4  3AFF               	xorlw	255
  2460  07C5  00F2               	movwf	??_GPIO_PinWrite+1
  2461  07C6  0872               	movf	??_GPIO_PinWrite+1,w
  2462  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  2463  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  2464  07C9  0589               	andwf	9,f	;volatile
  2465                           
  2466                           ;gpio.c: 169: }
  2467                           
  2468                           ;gpio.c: 167: break;
  2469  07CA  0008               	return
  2470  07CB                     l1351:	
  2471  07CB  0873               	movf	GPIO_PinWrite@var_portNumber_u8,w
  2472                           
  2473                           ; Switch size 1, requested type "space"
  2474                           ; Number of cases is 5, Range of values is 0 to 4
  2475                           ; switch strategies available:
  2476                           ; Name         Instructions Cycles
  2477                           ; simple_byte           16     9 (average)
  2478                           ; direct_byte           23     8 (fixed)
  2479                           ; jumptable            260     6 (fixed)
  2480                           ;	Chosen strategy is simple_byte
  2481  07CC  3A00               	xorlw	0	; case 0
  2482  07CD  1903               	skipnz
  2483  07CE  2F17               	goto	l1319
  2484  07CF  3A01               	xorlw	1	; case 1
  2485  07D0  1903               	skipnz
  2486  07D1  2F3B               	goto	l1325
  2487  07D2  3A03               	xorlw	3	; case 2
  2488  07D3  1903               	skipnz
  2489  07D4  2F5F               	goto	l1331
  2490  07D5  3A01               	xorlw	1	; case 3
  2491  07D6  1903               	skipnz
  2492  07D7  2F83               	goto	l1337
  2493  07D8  3A07               	xorlw	7	; case 4
  2494  07D9  1903               	skipnz
  2495  07DA  2FA7               	goto	l1343
  2496  07DB  2FDC               	goto	l80
  2497  07DC                     l80:	
  2498  07DC  0008               	return
  2499  07DD                     __end_of_GPIO_PinWrite:	
  2500                           
  2501                           	psect	text17
  2502  0489                     __ptext17:	
  2503 ;; *************** function _GPIO_PinRead *****************
  2504 ;; Defined at:
  2505 ;;		line 192 in file "../00-libfiles/gpio.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;  enm_pinNumbe    1    wreg     enum E1088
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  2510 ;;  returnStatus    1    3[COMMON] unsigned char 
  2511 ;;  var_portNumb    1    2[COMMON] unsigned char 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      unsigned char 
  2514 ;; Registers used:
  2515 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2521 ;;      Params:         0       0       0       0       0
  2522 ;;      Locals:         3       0       0       0       0
  2523 ;;      Temps:          2       0       0       0       0
  2524 ;;      Totals:         5       0       0       0       0
  2525 ;;Total ram usage:        5 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; This function calls:
  2528 ;;		Nothing
  2529 ;; This function is called by:
  2530 ;;		_lcd_BusyCheck
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           
  2535                           ;psect for function _GPIO_PinRead
  2536  0489                     _GPIO_PinRead:	
  2537                           
  2538                           ;incstack = 0
  2539                           ; Regs used in _GPIO_PinRead: [wreg-fsr0h+status,2+status,0]
  2540                           ;GPIO_PinRead@enm_pinNumber stored from wreg
  2541  0489  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  2542                           
  2543                           ;gpio.c: 194: uint8_t var_portNumber_u8;
  2544                           ;gpio.c: 195: uint8_t returnStatus = 0;
  2545  048A  01F3               	clrf	GPIO_PinRead@returnStatus
  2546                           
  2547                           ;gpio.c: 197: var_portNumber_u8 = (enm_pinNumber>>3);
  2548  048B  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  2549  048C  00F0               	movwf	??_GPIO_PinRead
  2550  048D  3003               	movlw	3
  2551  048E                     u1495:	
  2552  048E  1003               	clrc
  2553  048F  0CF0               	rrf	??_GPIO_PinRead,f
  2554  0490  3EFF               	addlw	-1
  2555  0491  1D03               	skipz
  2556  0492  2C8E               	goto	u1495
  2557  0493  0870               	movf	??_GPIO_PinRead,w
  2558  0494  00F1               	movwf	??_GPIO_PinRead+1
  2559  0495  0871               	movf	??_GPIO_PinRead+1,w
  2560  0496  00F2               	movwf	GPIO_PinRead@var_portNumber_u8
  2561                           
  2562                           ;gpio.c: 198: enm_pinNumber = enm_pinNumber & 0x07;
  2563  0497  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  2564  0498  3907               	andlw	7
  2565  0499  00F0               	movwf	??_GPIO_PinRead
  2566  049A  0870               	movf	??_GPIO_PinRead,w
  2567  049B  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  2568                           
  2569                           ;gpio.c: 201: switch(var_portNumber_u8)
  2570  049C  2CEB               	goto	l1371
  2571  049D                     l1359:	
  2572                           ;gpio.c: 202: {
  2573                           ;gpio.c: 204: case 0:
  2574                           
  2575                           
  2576                           ;gpio.c: 205: returnStatus = (((PORTA)&((1<<(enm_pinNumber))))!=0u);
  2577  049D  3001               	movlw	1
  2578  049E  00F0               	movwf	??_GPIO_PinRead
  2579  049F  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  2580  04A0  2CA3               	goto	u1504
  2581  04A1                     u1505:	
  2582  04A1  1003               	clrc
  2583  04A2  0DF0               	rlf	??_GPIO_PinRead,f
  2584  04A3                     u1504:	
  2585  04A3  3EFF               	addlw	-1
  2586  04A4  1D03               	skipz
  2587  04A5  2CA1               	goto	u1505
  2588  04A6  0870               	movf	??_GPIO_PinRead,w
  2589  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2590  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  2591  04A9  0505               	andwf	5,w	;volatile
  2592  04AA  2CE2               	goto	L5
  2593  04AB                     l1361:	
  2594                           ;gpio.c: 209: case 1:
  2595                           
  2596                           ;gpio.c: 206: break;
  2597                           
  2598                           
  2599                           ;gpio.c: 210: returnStatus = (((PORTB)&((1<<(enm_pinNumber))))!=0u);
  2600  04AB  3001               	movlw	1
  2601  04AC  00F0               	movwf	??_GPIO_PinRead
  2602  04AD  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  2603  04AE  2CB1               	goto	u1534
  2604  04AF                     u1535:	
  2605  04AF  1003               	clrc
  2606  04B0  0DF0               	rlf	??_GPIO_PinRead,f
  2607  04B1                     u1534:	
  2608  04B1  3EFF               	addlw	-1
  2609  04B2  1D03               	skipz
  2610  04B3  2CAF               	goto	u1535
  2611  04B4  0870               	movf	??_GPIO_PinRead,w
  2612  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2613  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  2614  04B7  0506               	andwf	6,w	;volatile
  2615  04B8  2CE2               	goto	L5
  2616  04B9                     l1363:	
  2617                           ;gpio.c: 214: case 2:
  2618                           
  2619                           ;gpio.c: 211: break;
  2620                           
  2621                           
  2622                           ;gpio.c: 215: returnStatus = (((PORTC)&((1<<(enm_pinNumber))))!=0u);
  2623  04B9  3001               	movlw	1
  2624  04BA  00F0               	movwf	??_GPIO_PinRead
  2625  04BB  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  2626  04BC  2CBF               	goto	u1564
  2627  04BD                     u1565:	
  2628  04BD  1003               	clrc
  2629  04BE  0DF0               	rlf	??_GPIO_PinRead,f
  2630  04BF                     u1564:	
  2631  04BF  3EFF               	addlw	-1
  2632  04C0  1D03               	skipz
  2633  04C1  2CBD               	goto	u1565
  2634  04C2  0870               	movf	??_GPIO_PinRead,w
  2635  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2636  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2637  04C5  0507               	andwf	7,w	;volatile
  2638  04C6  2CE2               	goto	L5
  2639  04C7                     l1365:	
  2640                           ;gpio.c: 220: case 3:
  2641                           
  2642                           ;gpio.c: 216: break;
  2643                           
  2644                           
  2645                           ;gpio.c: 221: returnStatus = (((PORTD)&((1<<(enm_pinNumber))))!=0u);
  2646  04C7  3001               	movlw	1
  2647  04C8  00F0               	movwf	??_GPIO_PinRead
  2648  04C9  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  2649  04CA  2CCD               	goto	u1594
  2650  04CB                     u1595:	
  2651  04CB  1003               	clrc
  2652  04CC  0DF0               	rlf	??_GPIO_PinRead,f
  2653  04CD                     u1594:	
  2654  04CD  3EFF               	addlw	-1
  2655  04CE  1D03               	skipz
  2656  04CF  2CCB               	goto	u1595
  2657  04D0  0870               	movf	??_GPIO_PinRead,w
  2658  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2659  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2660  04D3  0508               	andwf	8,w	;volatile
  2661  04D4  2CE2               	goto	L5
  2662  04D5                     l1367:	
  2663                           ;gpio.c: 226: case 4:
  2664                           
  2665                           ;gpio.c: 222: break;
  2666                           
  2667                           
  2668                           ;gpio.c: 227: returnStatus = (((PORTE)&((1<<(enm_pinNumber))))!=0u);
  2669  04D5  3001               	movlw	1
  2670  04D6  00F0               	movwf	??_GPIO_PinRead
  2671  04D7  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  2672  04D8  2CDB               	goto	u1624
  2673  04D9                     u1625:	
  2674  04D9  1003               	clrc
  2675  04DA  0DF0               	rlf	??_GPIO_PinRead,f
  2676  04DB                     u1624:	
  2677  04DB  3EFF               	addlw	-1
  2678  04DC  1D03               	skipz
  2679  04DD  2CD9               	goto	u1625
  2680  04DE  0870               	movf	??_GPIO_PinRead,w
  2681  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  2682  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  2683  04E1  0509               	andwf	9,w	;volatile
  2684  04E2                     L5:	
  2685  04E2  1903               	btfsc	3,2
  2686  04E3  2CE6               	goto	u1630
  2687  04E4  3001               	movlw	1
  2688  04E5  2CE7               	goto	u1640
  2689  04E6                     u1630:	
  2690  04E6  3000               	movlw	0
  2691  04E7                     u1640:	
  2692  04E7  00F1               	movwf	??_GPIO_PinRead+1
  2693  04E8  0871               	movf	??_GPIO_PinRead+1,w
  2694  04E9  00F3               	movwf	GPIO_PinRead@returnStatus
  2695                           
  2696                           ;gpio.c: 229: }
  2697                           
  2698                           ;gpio.c: 228: break;
  2699  04EA  2CFC               	goto	l1373
  2700  04EB                     l1371:	
  2701  04EB  0872               	movf	GPIO_PinRead@var_portNumber_u8,w
  2702                           
  2703                           ; Switch size 1, requested type "space"
  2704                           ; Number of cases is 5, Range of values is 0 to 4
  2705                           ; switch strategies available:
  2706                           ; Name         Instructions Cycles
  2707                           ; simple_byte           16     9 (average)
  2708                           ; direct_byte           23     8 (fixed)
  2709                           ; jumptable            260     6 (fixed)
  2710                           ;	Chosen strategy is simple_byte
  2711  04EC  3A00               	xorlw	0	; case 0
  2712  04ED  1903               	skipnz
  2713  04EE  2C9D               	goto	l1359
  2714  04EF  3A01               	xorlw	1	; case 1
  2715  04F0  1903               	skipnz
  2716  04F1  2CAB               	goto	l1361
  2717  04F2  3A03               	xorlw	3	; case 2
  2718  04F3  1903               	skipnz
  2719  04F4  2CB9               	goto	l1363
  2720  04F5  3A01               	xorlw	1	; case 3
  2721  04F6  1903               	skipnz
  2722  04F7  2CC7               	goto	l1365
  2723  04F8  3A07               	xorlw	7	; case 4
  2724  04F9  1903               	skipnz
  2725  04FA  2CD5               	goto	l1367
  2726  04FB  2CFC               	goto	l1373
  2727  04FC                     l1373:	
  2728                           
  2729                           ;gpio.c: 230: return returnStatus;
  2730  04FC  0873               	movf	GPIO_PinRead@returnStatus,w
  2731  04FD  0008               	return
  2732  04FE                     __end_of_GPIO_PinRead:	
  2733                           
  2734                           	psect	text18
  2735  062B                     __ptext18:	
  2736 ;; *************** function _GPIO_PinDirection *****************
  2737 ;; Defined at:
  2738 ;;		line 60 in file "../00-libfiles/gpio.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  enm_pinNumbe    1    wreg     enum E1088
  2741 ;;  var_pinDirn_    1    0[COMMON] unsigned char 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  2744 ;;  var_portNumb    1    3[COMMON] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2754 ;;      Params:         1       0       0       0       0
  2755 ;;      Locals:         2       0       0       0       0
  2756 ;;      Temps:          2       0       0       0       0
  2757 ;;      Totals:         5       0       0       0       0
  2758 ;;Total ram usage:        5 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_LCD_SetUp
  2764 ;;		_lcd_BusyCheck
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           
  2769                           ;psect for function _GPIO_PinDirection
  2770  062B                     _GPIO_PinDirection:	
  2771                           
  2772                           ;incstack = 0
  2773                           ; Regs used in _GPIO_PinDirection: [wreg-fsr0h+status,2+status,0]
  2774                           ;GPIO_PinDirection@enm_pinNumber stored from wreg
  2775  062B  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  2776                           
  2777                           ;gpio.c: 63: uint8_t var_portNumber_u8;
  2778                           ;gpio.c: 66: var_portNumber_u8 = (enm_pinNumber>>3);
  2779  062C  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  2780  062D  00F1               	movwf	??_GPIO_PinDirection
  2781  062E  3003               	movlw	3
  2782  062F                     u1175:	
  2783  062F  1003               	clrc
  2784  0630  0CF1               	rrf	??_GPIO_PinDirection,f
  2785  0631  3EFF               	addlw	-1
  2786  0632  1D03               	skipz
  2787  0633  2E2F               	goto	u1175
  2788  0634  0871               	movf	??_GPIO_PinDirection,w
  2789  0635  00F2               	movwf	??_GPIO_PinDirection+1
  2790  0636  0872               	movf	??_GPIO_PinDirection+1,w
  2791  0637  00F3               	movwf	GPIO_PinDirection@var_portNumber_u8
  2792                           
  2793                           ;gpio.c: 67: enm_pinNumber = enm_pinNumber & 0x07;
  2794  0638  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  2795  0639  3907               	andlw	7
  2796  063A  00F1               	movwf	??_GPIO_PinDirection
  2797  063B  0871               	movf	??_GPIO_PinDirection,w
  2798  063C  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  2799                           
  2800                           ;gpio.c: 71: switch(var_portNumber_u8)
  2801  063D  2EF2               	goto	l1313
  2802  063E                     l1281:	
  2803                           ;gpio.c: 72: {
  2804                           ;gpio.c: 74: case 0:
  2805                           
  2806                           
  2807                           ;gpio.c: 75: ((var_pinDirn_u8)? ((TRISA) |= (1<<(enm_pinNumber))): ((TRISA) &= ~(1<<(enm
      +                          _pinNumber))));
  2808  063E  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  2809  063F  1903               	btfsc	3,2
  2810  0640  2E51               	goto	l1285
  2811  0641  3001               	movlw	1
  2812  0642  00F1               	movwf	??_GPIO_PinDirection
  2813  0643  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  2814  0644  2E47               	goto	u1194
  2815  0645                     u1195:	
  2816  0645  1003               	clrc
  2817  0646  0DF1               	rlf	??_GPIO_PinDirection,f
  2818  0647                     u1194:	
  2819  0647  3EFF               	addlw	-1
  2820  0648  1D03               	skipz
  2821  0649  2E45               	goto	u1195
  2822  064A  0871               	movf	??_GPIO_PinDirection,w
  2823  064B  00F2               	movwf	??_GPIO_PinDirection+1
  2824  064C  0872               	movf	??_GPIO_PinDirection+1,w
  2825  064D  1683               	bsf	3,5	;RP0=1, select bank1
  2826  064E  1303               	bcf	3,6	;RP1=0, select bank1
  2827  064F  0485               	iorwf	5,f	;volatile
  2828  0650  0008               	return
  2829  0651                     l1285:	
  2830  0651  3001               	movlw	1
  2831  0652  00F1               	movwf	??_GPIO_PinDirection
  2832  0653  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  2833  0654  2E57               	goto	u1204
  2834  0655                     u1205:	
  2835  0655  1003               	clrc
  2836  0656  0DF1               	rlf	??_GPIO_PinDirection,f
  2837  0657                     u1204:	
  2838  0657  3EFF               	addlw	-1
  2839  0658  1D03               	skipz
  2840  0659  2E55               	goto	u1205
  2841  065A  0871               	movf	??_GPIO_PinDirection,w
  2842  065B  3AFF               	xorlw	255
  2843  065C  00F2               	movwf	??_GPIO_PinDirection+1
  2844  065D  0872               	movf	??_GPIO_PinDirection+1,w
  2845  065E  1683               	bsf	3,5	;RP0=1, select bank1
  2846  065F  1303               	bcf	3,6	;RP1=0, select bank1
  2847  0660  0585               	andwf	5,f	;volatile
  2848                           
  2849                           ;gpio.c: 76: break;
  2850  0661  0008               	return
  2851  0662                     l1287:	
  2852                           ;gpio.c: 80: case 1:
  2853                           
  2854                           
  2855                           ;gpio.c: 81: ((var_pinDirn_u8)? ((TRISB) |= (1<<(enm_pinNumber))): ((TRISB) &= ~(1<<(enm
      +                          _pinNumber))));
  2856  0662  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  2857  0663  1903               	btfsc	3,2
  2858  0664  2E75               	goto	l1291
  2859  0665  3001               	movlw	1
  2860  0666  00F1               	movwf	??_GPIO_PinDirection
  2861  0667  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  2862  0668  2E6B               	goto	u1224
  2863  0669                     u1225:	
  2864  0669  1003               	clrc
  2865  066A  0DF1               	rlf	??_GPIO_PinDirection,f
  2866  066B                     u1224:	
  2867  066B  3EFF               	addlw	-1
  2868  066C  1D03               	skipz
  2869  066D  2E69               	goto	u1225
  2870  066E  0871               	movf	??_GPIO_PinDirection,w
  2871  066F  00F2               	movwf	??_GPIO_PinDirection+1
  2872  0670  0872               	movf	??_GPIO_PinDirection+1,w
  2873  0671  1683               	bsf	3,5	;RP0=1, select bank1
  2874  0672  1303               	bcf	3,6	;RP1=0, select bank1
  2875  0673  0486               	iorwf	6,f	;volatile
  2876  0674  0008               	return
  2877  0675                     l1291:	
  2878  0675  3001               	movlw	1
  2879  0676  00F1               	movwf	??_GPIO_PinDirection
  2880  0677  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  2881  0678  2E7B               	goto	u1234
  2882  0679                     u1235:	
  2883  0679  1003               	clrc
  2884  067A  0DF1               	rlf	??_GPIO_PinDirection,f
  2885  067B                     u1234:	
  2886  067B  3EFF               	addlw	-1
  2887  067C  1D03               	skipz
  2888  067D  2E79               	goto	u1235
  2889  067E  0871               	movf	??_GPIO_PinDirection,w
  2890  067F  3AFF               	xorlw	255
  2891  0680  00F2               	movwf	??_GPIO_PinDirection+1
  2892  0681  0872               	movf	??_GPIO_PinDirection+1,w
  2893  0682  1683               	bsf	3,5	;RP0=1, select bank1
  2894  0683  1303               	bcf	3,6	;RP1=0, select bank1
  2895  0684  0586               	andwf	6,f	;volatile
  2896                           
  2897                           ;gpio.c: 82: break;
  2898  0685  0008               	return
  2899  0686                     l1293:	
  2900                           ;gpio.c: 86: case 2:
  2901                           
  2902                           
  2903                           ;gpio.c: 87: ((var_pinDirn_u8)? ((TRISC) |= (1<<(enm_pinNumber))): ((TRISC) &= ~(1<<(enm
      +                          _pinNumber))));
  2904  0686  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  2905  0687  1903               	btfsc	3,2
  2906  0688  2E99               	goto	l1297
  2907  0689  3001               	movlw	1
  2908  068A  00F1               	movwf	??_GPIO_PinDirection
  2909  068B  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  2910  068C  2E8F               	goto	u1254
  2911  068D                     u1255:	
  2912  068D  1003               	clrc
  2913  068E  0DF1               	rlf	??_GPIO_PinDirection,f
  2914  068F                     u1254:	
  2915  068F  3EFF               	addlw	-1
  2916  0690  1D03               	skipz
  2917  0691  2E8D               	goto	u1255
  2918  0692  0871               	movf	??_GPIO_PinDirection,w
  2919  0693  00F2               	movwf	??_GPIO_PinDirection+1
  2920  0694  0872               	movf	??_GPIO_PinDirection+1,w
  2921  0695  1683               	bsf	3,5	;RP0=1, select bank1
  2922  0696  1303               	bcf	3,6	;RP1=0, select bank1
  2923  0697  0487               	iorwf	7,f	;volatile
  2924  0698  0008               	return
  2925  0699                     l1297:	
  2926  0699  3001               	movlw	1
  2927  069A  00F1               	movwf	??_GPIO_PinDirection
  2928  069B  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  2929  069C  2E9F               	goto	u1264
  2930  069D                     u1265:	
  2931  069D  1003               	clrc
  2932  069E  0DF1               	rlf	??_GPIO_PinDirection,f
  2933  069F                     u1264:	
  2934  069F  3EFF               	addlw	-1
  2935  06A0  1D03               	skipz
  2936  06A1  2E9D               	goto	u1265
  2937  06A2  0871               	movf	??_GPIO_PinDirection,w
  2938  06A3  3AFF               	xorlw	255
  2939  06A4  00F2               	movwf	??_GPIO_PinDirection+1
  2940  06A5  0872               	movf	??_GPIO_PinDirection+1,w
  2941  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  2942  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  2943  06A8  0587               	andwf	7,f	;volatile
  2944                           
  2945                           ;gpio.c: 88: break;
  2946  06A9  0008               	return
  2947  06AA                     l1299:	
  2948                           ;gpio.c: 92: case 3:
  2949                           
  2950                           
  2951                           ;gpio.c: 93: ((var_pinDirn_u8)? ((TRISD) |= (1<<(enm_pinNumber))): ((TRISD) &= ~(1<<(enm
      +                          _pinNumber))));
  2952  06AA  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  2953  06AB  1903               	btfsc	3,2
  2954  06AC  2EBD               	goto	l1303
  2955  06AD  3001               	movlw	1
  2956  06AE  00F1               	movwf	??_GPIO_PinDirection
  2957  06AF  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  2958  06B0  2EB3               	goto	u1284
  2959  06B1                     u1285:	
  2960  06B1  1003               	clrc
  2961  06B2  0DF1               	rlf	??_GPIO_PinDirection,f
  2962  06B3                     u1284:	
  2963  06B3  3EFF               	addlw	-1
  2964  06B4  1D03               	skipz
  2965  06B5  2EB1               	goto	u1285
  2966  06B6  0871               	movf	??_GPIO_PinDirection,w
  2967  06B7  00F2               	movwf	??_GPIO_PinDirection+1
  2968  06B8  0872               	movf	??_GPIO_PinDirection+1,w
  2969  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  2970  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  2971  06BB  0488               	iorwf	8,f	;volatile
  2972  06BC  0008               	return
  2973  06BD                     l1303:	
  2974  06BD  3001               	movlw	1
  2975  06BE  00F1               	movwf	??_GPIO_PinDirection
  2976  06BF  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  2977  06C0  2EC3               	goto	u1294
  2978  06C1                     u1295:	
  2979  06C1  1003               	clrc
  2980  06C2  0DF1               	rlf	??_GPIO_PinDirection,f
  2981  06C3                     u1294:	
  2982  06C3  3EFF               	addlw	-1
  2983  06C4  1D03               	skipz
  2984  06C5  2EC1               	goto	u1295
  2985  06C6  0871               	movf	??_GPIO_PinDirection,w
  2986  06C7  3AFF               	xorlw	255
  2987  06C8  00F2               	movwf	??_GPIO_PinDirection+1
  2988  06C9  0872               	movf	??_GPIO_PinDirection+1,w
  2989  06CA  1683               	bsf	3,5	;RP0=1, select bank1
  2990  06CB  1303               	bcf	3,6	;RP1=0, select bank1
  2991  06CC  0588               	andwf	8,f	;volatile
  2992                           
  2993                           ;gpio.c: 94: break;
  2994  06CD  0008               	return
  2995  06CE                     l1305:	
  2996                           ;gpio.c: 97: case 4:
  2997                           
  2998                           
  2999                           ;gpio.c: 98: ((var_pinDirn_u8)? ((TRISE) |= (1<<(enm_pinNumber))): ((TRISE) &= ~(1<<(enm
      +                          _pinNumber))));
  3000  06CE  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  3001  06CF  1903               	btfsc	3,2
  3002  06D0  2EE1               	goto	l1309
  3003  06D1  3001               	movlw	1
  3004  06D2  00F1               	movwf	??_GPIO_PinDirection
  3005  06D3  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  3006  06D4  2ED7               	goto	u1314
  3007  06D5                     u1315:	
  3008  06D5  1003               	clrc
  3009  06D6  0DF1               	rlf	??_GPIO_PinDirection,f
  3010  06D7                     u1314:	
  3011  06D7  3EFF               	addlw	-1
  3012  06D8  1D03               	skipz
  3013  06D9  2ED5               	goto	u1315
  3014  06DA  0871               	movf	??_GPIO_PinDirection,w
  3015  06DB  00F2               	movwf	??_GPIO_PinDirection+1
  3016  06DC  0872               	movf	??_GPIO_PinDirection+1,w
  3017  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  3018  06DE  1303               	bcf	3,6	;RP1=0, select bank1
  3019  06DF  0489               	iorwf	9,f	;volatile
  3020  06E0  0008               	return
  3021  06E1                     l1309:	
  3022  06E1  3001               	movlw	1
  3023  06E2  00F1               	movwf	??_GPIO_PinDirection
  3024  06E3  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  3025  06E4  2EE7               	goto	u1324
  3026  06E5                     u1325:	
  3027  06E5  1003               	clrc
  3028  06E6  0DF1               	rlf	??_GPIO_PinDirection,f
  3029  06E7                     u1324:	
  3030  06E7  3EFF               	addlw	-1
  3031  06E8  1D03               	skipz
  3032  06E9  2EE5               	goto	u1325
  3033  06EA  0871               	movf	??_GPIO_PinDirection,w
  3034  06EB  3AFF               	xorlw	255
  3035  06EC  00F2               	movwf	??_GPIO_PinDirection+1
  3036  06ED  0872               	movf	??_GPIO_PinDirection+1,w
  3037  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  3038  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  3039  06F0  0589               	andwf	9,f	;volatile
  3040                           
  3041                           ;gpio.c: 101: }
  3042                           
  3043                           ;gpio.c: 99: break;
  3044  06F1  0008               	return
  3045  06F2                     l1313:	
  3046  06F2  0873               	movf	GPIO_PinDirection@var_portNumber_u8,w
  3047                           
  3048                           ; Switch size 1, requested type "space"
  3049                           ; Number of cases is 5, Range of values is 0 to 4
  3050                           ; switch strategies available:
  3051                           ; Name         Instructions Cycles
  3052                           ; simple_byte           16     9 (average)
  3053                           ; direct_byte           23     8 (fixed)
  3054                           ; jumptable            260     6 (fixed)
  3055                           ;	Chosen strategy is simple_byte
  3056  06F3  3A00               	xorlw	0	; case 0
  3057  06F4  1903               	skipnz
  3058  06F5  2E3E               	goto	l1281
  3059  06F6  3A01               	xorlw	1	; case 1
  3060  06F7  1903               	skipnz
  3061  06F8  2E62               	goto	l1287
  3062  06F9  3A03               	xorlw	3	; case 2
  3063  06FA  1903               	skipnz
  3064  06FB  2E86               	goto	l1293
  3065  06FC  3A01               	xorlw	1	; case 3
  3066  06FD  1903               	skipnz
  3067  06FE  2EAA               	goto	l1299
  3068  06FF  3A07               	xorlw	7	; case 4
  3069  0700  1903               	skipnz
  3070  0701  2ECE               	goto	l1305
  3071  0702  2F03               	goto	l50
  3072  0703                     l50:	
  3073  0703  0008               	return
  3074  0704                     __end_of_GPIO_PinDirection:	
  3075                           
  3076                           	psect	text19
  3077  01E9                     __ptext19:	
  3078 ;; *************** function _DELAY_ms *****************
  3079 ;; Defined at:
  3080 ;;		line 75 in file "../00-libfiles/delay.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  ms_count        2    2[COMMON] unsigned int 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, status,2, status,0, pclath, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3094 ;;      Params:         2       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0
  3097 ;;      Totals:         2       0       0       0       0
  3098 ;;Total ram usage:        2 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    1
  3101 ;; This function calls:
  3102 ;;		_DELAY_us
  3103 ;; This function is called by:
  3104 ;;		_LCD_Init
  3105 ;;		_lcd_BusyCheck
  3106 ;;		_lcd_Reset
  3107 ;;		_LCD_ScrollMessage
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           
  3112                           ;psect for function _DELAY_ms
  3113  01E9                     _DELAY_ms:	
  3114  01E9                     l1383:	
  3115                           ;delay.c: 77: while (ms_count != 0)
  3116                           
  3117                           ;incstack = 0
  3118                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  3119                           
  3120  01E9  0872               	movf	DELAY_ms@ms_count,w
  3121  01EA  0473               	iorwf	DELAY_ms@ms_count+1,w
  3122  01EB  1903               	btfsc	3,2
  3123  01EC  0008               	return
  3124                           
  3125                           ;delay.c: 78: {
  3126                           ;delay.c: 79: DELAY_us(300u);
  3127  01ED  302C               	movlw	44
  3128  01EE  00F0               	movwf	DELAY_us@us_count
  3129  01EF  3001               	movlw	1
  3130  01F0  00F1               	movwf	DELAY_us@us_count+1
  3131  01F1  120A  118A  21D3  120A  118A  	fcall	_DELAY_us
  3132                           
  3133                           ;delay.c: 80: ms_count--;
  3134  01F6  3001               	movlw	1
  3135  01F7  02F2               	subwf	DELAY_ms@ms_count,f
  3136  01F8  3000               	movlw	0
  3137  01F9  1C03               	skipc
  3138  01FA  03F3               	decf	DELAY_ms@ms_count+1,f
  3139  01FB  02F3               	subwf	DELAY_ms@ms_count+1,f
  3140  01FC  29E9               	goto	l1383
  3141  01FD                     __end_of_DELAY_ms:	
  3142                           
  3143                           	psect	text20
  3144  01D3                     __ptext20:	
  3145 ;; *************** function _DELAY_us *****************
  3146 ;; Defined at:
  3147 ;;		line 56 in file "../00-libfiles/delay.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  us_count        2    0[COMMON] unsigned int 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      void 
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3161 ;;      Params:         2       0       0       0       0
  3162 ;;      Locals:         0       0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0
  3164 ;;      Totals:         2       0       0       0       0
  3165 ;;Total ram usage:        2 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_DELAY_ms
  3171 ;;		_lcd_BusyCheck
  3172 ;;		_lcd_Reset
  3173 ;;		_lcd_SendCmdSignals
  3174 ;;		_lcd_SendDataSignals
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           
  3179                           ;psect for function _DELAY_us
  3180  01D3                     _DELAY_us:	
  3181  01D3                     l1275:	
  3182                           ;delay.c: 58: while (us_count != 0)
  3183                           
  3184                           ;incstack = 0
  3185                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  3186                           
  3187  01D3  0870               	movf	DELAY_us@us_count,w
  3188  01D4  0471               	iorwf	DELAY_us@us_count+1,w
  3189  01D5  1903               	btfsc	3,2
  3190  01D6  0008               	return
  3191                           
  3192                           ;delay.c: 59: {
  3193                           ;delay.c: 60: us_count--;
  3194  01D7  3001               	movlw	1
  3195  01D8  02F0               	subwf	DELAY_us@us_count,f
  3196  01D9  3000               	movlw	0
  3197  01DA  1C03               	skipc
  3198  01DB  03F1               	decf	DELAY_us@us_count+1,f
  3199  01DC  02F1               	subwf	DELAY_us@us_count+1,f
  3200  01DD  29D3               	goto	l1275
  3201  01DE                     __end_of_DELAY_us:	
  3202  007E                     btemp	set	126	;btemp
  3203  007E                     wtemp	set	126
  3204  007E                     wtemp0	set	126
  3205  0080                     wtemp1	set	128
  3206  0082                     wtemp2	set	130
  3207  0084                     wtemp3	set	132
  3208  0086                     wtemp4	set	134
  3209  0088                     wtemp5	set	136
  3210  007F                     wtemp6	set	127
  3211  007E                     ttemp	set	126
  3212  007E                     ttemp0	set	126
  3213  0081                     ttemp1	set	129
  3214  0084                     ttemp2	set	132
  3215  0087                     ttemp3	set	135
  3216  007F                     ttemp4	set	127
  3217  007E                     ltemp	set	126
  3218  007E                     ltemp0	set	126
  3219  0082                     ltemp1	set	130
  3220  0086                     ltemp2	set	134
  3221  0080                     ltemp3	set	128


Data Sizes:
    Strings     32
    Constant    0
    Data        4
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      40
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_DisplayString@ptr_stringPointer_u8	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_LCD_DisplayString
    _main->_LCD_Init
    _LCD_SetUp->_GPIO_PinDirection
    _lcd_Reset->_lcd_SendHigherNibble
    _LCD_Clear->_LCD_GoToLine
    _LCD_GoToLine->_LCD_CmdWrite
    _LCD_DisplayString->_LCD_DisplayChar
    _LCD_DisplayChar->_LCD_GoToNextLine
    _lcd_DataWrite->_lcd_BusyCheck
    _lcd_DataWrite->_lcd_SendHigherNibble
    _lcd_DataWrite->_lcd_SendLowerNibble
    _lcd_SendDataSignals->_GPIO_PinWrite
    _LCD_GoToNextLine->_LCD_CmdWrite
    _LCD_CmdWrite->_lcd_BusyCheck
    _LCD_CmdWrite->_lcd_SendHigherNibble
    _LCD_CmdWrite->_lcd_SendLowerNibble
    _lcd_SendLowerNibble->_GPIO_PinWrite
    _lcd_SendHigherNibble->_GPIO_PinWrite
    _lcd_SendCmdSignals->_GPIO_PinWrite
    _lcd_BusyCheck->_GPIO_PinDirection
    _lcd_BusyCheck->_GPIO_PinRead
    _lcd_BusyCheck->_GPIO_PinWrite
    _DELAY_ms->_DELAY_us

Critical Paths under _main in BANK0

    _main->_LCD_SetUp

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   57163
                                             10 BANK0     10    10      0
                  _LCD_DisplayString
                           _LCD_Init
                          _LCD_SetUp
 ---------------------------------------------------------------------------------
 (1) _LCD_SetUp                                           12     2     10    2189
                                              5 COMMON     2     2      0
                                              0 BANK0     10     0     10
                  _GPIO_PinDirection
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     2      1   35320
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                           _DELAY_ms
                          _LCD_Clear
                       _LCD_CmdWrite
                          _lcd_Reset
 ---------------------------------------------------------------------------------
 (2) _lcd_Reset                                            0     0      0    5110
                           _DELAY_ms
                           _DELAY_us
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0   19528
                       _LCD_CmdWrite
                       _LCD_GoToLine
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToLine                                         2     2      0    9797
                                             10 COMMON     2     2      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_DisplayString                                    2     2      0   19654
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                    _LCD_DisplayChar
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayChar                                      2     2      0   19528
                                             11 COMMON     2     2      0
                   _LCD_GoToNextLine
                      _lcd_DataWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_DataWrite                                        3     3      0    9731
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                _lcd_SendDataSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (4) _lcd_SendDataSignals                                  0     0      0    2117
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToNextLine                                     1     1      0    9731
                                             10 COMMON     1     1      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (2) _LCD_CmdWrite                                         3     3      0    9731
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (3) _lcd_SendLowerNibble                                  2     2      0    1652
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_SendHigherNibble                                 2     2      0    1652
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_SendCmdSignals                                   0     0      0    2117
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_BusyCheck                                        2     2      0    4221
                                              5 COMMON     2     2      0
                           _DELAY_ms
                           _DELAY_us
                  _GPIO_PinDirection
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _GPIO_PinWrite                                        5     4      1    1564
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (4) _GPIO_PinRead                                         5     5      0     206
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinDirection                                    5     4      1    1087
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (3) _DELAY_ms                                             2     0      2     788
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (4) _DELAY_us                                             2     0      2     553
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_DisplayString
     _LCD_DisplayChar
       _LCD_GoToNextLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _lcd_DataWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendDataSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
   _LCD_Init
     _DELAY_ms
       _DELAY_us
     _LCD_Clear
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
       _LCD_GoToLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
     _lcd_Reset
       _DELAY_ms
         _DELAY_us
       _DELAY_us
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
   _LCD_SetUp
     _GPIO_PinDirection

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      28       5       50.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      36      12        0.0%
ABS                  0      0      36       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Feb 20 14:46:31 2016

                                    pc 0002                            __CFG_CP$OFF 0000  
                        ?_LCD_CmdWrite 0070                                     l50 0703  
                                   l80 07DC                                     fsr 0004  
                        ?_LCD_GoToLine 0070                            __CFG_LVP$ON 0000  
                                  l306 0439                                    l156 03E7  
                                  l278 051E                           __CFG_CPD$OFF 0000  
                                  fsr0 0004                                    indf 0000  
                         __CFG_FOSC$HS 0000                __end_of_LCD_DisplayChar 0245  
                                 l1303 06BD                                   l1305 06CE  
                                 l1313 06F2                                   l1331 075F  
                                 l1323 072A                                   l1403 0577  
                                 l1309 06E1                                   l1341 0796  
                                 l1325 073B                                   l1343 07A7  
                                 l1335 0772                                   l1319 0717  
                                 l1351 07CB                                   l1407 0582  
                                 l1281 063E                                   l1361 04AB  
                                 l1337 0783                                   l1329 074E  
                                 l1425 02D3                                   l1513 05C4  
                                 l1275 01D3                                   l1291 0675  
                                 l1363 04B9                                   l1371 04EB  
                                 l1347 07BA                                   l1515 05C9  
                                 l1293 0686                                   l1285 0651  
                                 l1365 04C7                                   l1373 04FC  
                                 l1429 02EB                                   l1525 05EF  
                                 l1383 01E9                                   l1287 0662  
                                 l1367 04D5                                   l1359 049D  
                                 l1463 0308                                   l1543 03C5  
                                 l1297 0699                                   l1299 06AA  
                                 l1467 0320                                   l1549 03D6  
                                 l1495 0231                                   l1559 0248  
                                 l1497 0236                                   STR_1 0009  
                                 STR_2 001A                                   u1204 0657  
                                 u1205 0655                                   u1224 066B  
                                 u1225 0669                                   u1314 06D7  
                                 u1234 067B                                   u1315 06D5  
                                 u1235 0679                                   u1324 06E7  
                                 u1325 06E5                                   u1254 068F  
                                 u1414 0768                                   u1255 068D  
                                 u1175 062F                                   u1415 0766  
                                 u1335 0708                                   u1264 069F  
                                 u1504 04A3                                   u1424 0778  
                                 u1265 069D                                   u1505 04A1  
                                 u1425 0776                                   u1194 0647  
                                 u1354 0720                                   u1195 0645  
                                 u1355 071E                                   u1284 06B3  
                                 u1444 078C                                   u1364 0730  
                                 u1700 0370                                   u1285 06B1  
                                 u1445 078A                                   u1365 072E  
                                 u1294 06C3                                   u1630 04E6  
                                 u1534 04B1                                   u1454 079C  
                                 u1710 037F                                   u1295 06C1  
                                 u1535 04AF                                   u1455 079A  
                                 u1640 04E7                                   u1624 04DB  
                                 u1384 0744                                   u1800 0340  
                                 u1720 0380                                   u1625 04D9  
                                 u1385 0742                                   u1474 07B0  
                                 u1394 0754                                   u1810 034F  
                                 u1730 038F                                   u1475 07AE  
                                 u1395 0752                                   u1564 04BF  
                                 u1484 07C0                                   u1820 0350  
                                 u1740 0390                                   u1565 04BD  
                                 u1485 07BE                                   u1830 035F  
                                 u1750 039F                                   u1495 048E  
                                 u1840 0360                                   u1760 03A0  
                                 u1905 0316                                   u1594 04CD  
                                 u1770 032F                                   u1690 036F  
                                 u1595 04CB                                   u1780 0330  
                                 u1790 033F                                   u1865 02E1  
                         __CFG_WRT$OFF 0000                                   _main 03F1  
                   __size_of_LCD_Clear 000B                                   btemp 007E  
                                 ltemp 007E                     __size_of_LCD_SetUp 00A1  
                                 start 0000                                   ttemp 007E  
                                 wtemp 007E                       __end_of_DELAY_ms 01FD  
                     __end_of_DELAY_us 01DE                          ?_GPIO_PinRead 0070  
                       ??_LCD_CmdWrite 0077                            LCD_SetUp@D0 0022  
                          LCD_SetUp@D1 0023                            LCD_SetUp@D2 0024  
                          LCD_SetUp@D3 0025                            LCD_SetUp@D4 0026  
                          LCD_SetUp@D5 0027                            LCD_SetUp@D6 0028  
                          LCD_SetUp@D7 0029                            LCD_SetUp@EN 0021  
                          LCD_SetUp@RS 0076                            LCD_SetUp@RW 0020  
                       ??_LCD_GoToLine 007A                          _GPIO_PinWrite 0704  
                     __end_of_LCD_Init 03F1                LCD_CmdWrite@v_lcdCmd_u8 0079  
                                ?_main 0070                          __CFG_WDTE$OFF 0000  
                                _PORTA 0005                                  _PORTB 0006  
                                _PORTC 0007                                  _PORTD 0008  
                                _PORTE 0009                                  _TRISA 0085  
                                _TRISB 0086                                  _TRISC 0087  
                                _TRISD 0088                                  _TRISE 0089  
LCD_DisplayString@ptr_stringPointer_u8 0020                         __CFG_BOREN$OFF 0000  
                                pclath 000A                                  ltemp0 007E  
                                ltemp1 0082                                  ltemp2 0086  
                                ltemp3 0080           __end_of_lcd_SendHigherNibble 036A  
                                ttemp0 007E                                  ttemp1 0081  
                                ttemp2 0084                                  ttemp3 0087  
                                ttemp4 007F                                  status 0003  
                                wtemp0 007E                                  wtemp1 0080  
                                wtemp2 0082                                  wtemp3 0084  
                                wtemp4 0086                                  wtemp5 0088  
                                wtemp6 007F                         ??_GPIO_PinRead 0070  
                      __initialization 07DD             GPIO_PinWrite@enm_pinNumber 0074  
                         __end_of_main 043A                         ?_GPIO_PinWrite 0070  
                    _GPIO_PinDirection 062B                                 ??_main 002A  
          __size_of_lcd_SendCmdSignals 002D                      __end_of_LCD_Clear 01E9  
                   ?_GPIO_PinDirection 0070                      __end_of_LCD_SetUp 062B  
                     ?_LCD_DisplayChar 0070            LCD_DisplayChar@v_lcdData_u8 007C  
                  ??_GPIO_PinDirection 0071                  lcd_BusyCheck@busyflag 0076  
                       __CFG_PWRTE$OFF 0000              GPIO_PinRead@enm_pinNumber 0074  
            __end_of_GPIO_PinDirection 0704         GPIO_PinDirection@enm_pinNumber 0074  
                     DELAY_ms@ms_count 0072                      ?_LCD_GoToNextLine 0070  
                            ?_DELAY_ms 0072                              ?_DELAY_us 0070  
          __end_of_lcd_SendLowerNibble 03AA                     ??_LCD_GoToNextLine 007A  
                 __end_of_LCD_CmdWrite 02F5                   __end_of_LCD_GoToLine 0226  
          lcd_SendLowerNibble@dataByte 0076                __end_of__initialization 07FC  
                            ?_LCD_Init 007C                        ??_GPIO_PinWrite 0071  
                       __pcstackCOMMON 0070                           __pidataBANK0 01C7  
                __end_of_lcd_DataWrite 032A                   _lcd_SendHigherNibble 032A  
                   __size_of_lcd_Reset 004F           __size_of_lcd_SendDataSignals 002E  
                           ??_DELAY_ms 0074                             ??_DELAY_us 0072  
                 __end_of_GPIO_PinRead 04FE         GPIO_PinWrite@var_portNumber_u8 0073  
                           __pbssBANK0 0034                  __end_of_lcd_BusyCheck 058A  
         lcd_SendHigherNibble@dataByte 0076           GPIO_PinWrite@var_pinValue_u8 0070  
                           ??_LCD_Init 007D                             __pmaintext 03F1  
           __size_of_GPIO_PinDirection 00D9                  ?_lcd_SendHigherNibble 0070  
                     DELAY_us@us_count 0070                             __stringtab 0003  
                    __end_of_lcd_Reset 0489              LCD_Init@v_lcdNoOfLines_u8 0020  
                              __ptext1 058A                                __ptext2 03AA  
                              __ptext3 043A                                __ptext4 01DE  
                              __ptext5 0211                                __ptext6 0245  
                              __ptext7 0226                                __ptext8 02F5  
                              __ptext9 0292                  __size_of_LCD_CmdWrite 0035  
                            _LCDConfig 0034                  __size_of_LCD_GoToLine 0015  
                            _LCD_Clear 01DE                              _LCD_SetUp 058A  
                              clrloop0 01CC                   end_of_initialization 07FC  
         LCD_Init@v_MaxCharsPerLine_u8 007C                 ??_lcd_SendHigherNibble 0075  
           __end_of_lcd_SendCmdSignals 0292                           _LCD_CmdWrite 02C0  
                         _LCD_GoToLine 0211                  __size_of_GPIO_PinRead 0075  
                           ?_LCD_Clear 0070                             ?_LCD_SetUp 0020  
                    __size_of_DELAY_ms 0014                      __size_of_DELAY_us 000B  
             __size_of_LCD_DisplayChar 001F                      __size_of_LCD_Init 0047  
            __size_of_LCD_GoToNextLine 0014                    _lcd_SendDataSignals 0292  
   GPIO_PinDirection@var_portNumber_u8 0073                           _GPIO_PinRead 0489  
             _ARR_LcdLineNumAddress_U8 0044                    start_initialization 07DD  
                 ?_lcd_SendDataSignals 0070                 _v_LcdTrackCursorPos_U8 0042  
        GPIO_PinRead@var_portNumber_u8 0072           __size_of_lcd_SendLowerNibble 0040  
      GPIO_PinDirection@var_pinDirn_u8 0070                  __end_of_GPIO_PinWrite 07DD  
                          __pdataBANK0 0044                  ??_lcd_SendDataSignals 0075  
                 _v_LcdTrackLineNum_U8 0043                              ___latbits 0002  
                lcd_DataWrite@dataByte 0079                          __pcstackBANK0 0020  
                          ??_LCD_Clear 007C                            ??_LCD_SetUp 0075  
               __size_of_lcd_DataWrite 0035            LCD_GoToLine@v_lineNumber_u8 007B  
                            _lcd_Reset 043A                      ??_LCD_DisplayChar 007B  
                            __pstrings 0003                 __size_of_lcd_BusyCheck 008C  
                    _LCD_DisplayString 0245                               _DELAY_ms 01E9  
                             _DELAY_us 01D3                     ?_LCD_DisplayString 0070  
                             _LCD_Init 03AA                    ??_LCD_DisplayString 007D  
                            clear_ram0 01CB                       _LCD_GoToNextLine 01FD  
                           ?_lcd_Reset 0070                          _lcd_DataWrite 02F5  
             GPIO_PinRead@returnStatus 0073                            __stringbase 0008  
            __end_of_LCD_DisplayString 0265                     _lcd_SendCmdSignals 0265  
                        _lcd_BusyCheck 04FE                    ?_lcd_SendCmdSignals 0070  
                       ?_lcd_DataWrite 0070                     __end_of__stringtab 0009  
                 ??_lcd_SendCmdSignals 0075          __size_of_lcd_SendHigherNibble 0040  
                  _lcd_SendLowerNibble 036A                               __ptext10 01FD  
                             __ptext11 02C0                               __ptext20 01D3  
                             __ptext12 036A                               __ptext13 032A  
                             __ptext14 0265                               __ptext15 04FE  
                             __ptext16 0704                               __ptext17 0489  
                             __ptext18 062B                               __ptext19 01E9  
                       ?_lcd_BusyCheck 0070                          __size_of_main 0049  
                 ?_lcd_SendLowerNibble 0070                            ??_lcd_Reset 0077  
           __size_of_LCD_DisplayString 0020                  ??_lcd_SendLowerNibble 0075  
                      _LCD_DisplayChar 0226                              stringcode 0003  
                      ??_lcd_DataWrite 0077            __end_of_lcd_SendDataSignals 02C0  
             __end_of_LCD_GoToNextLine 0211                               stringdir 0003  
                             stringtab 0003                        ??_lcd_BusyCheck 0075  
               __size_of_GPIO_PinWrite 00D9  
