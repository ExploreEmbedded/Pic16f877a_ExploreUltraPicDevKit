

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Feb 22 17:56:39 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     	;# 
    38  0001                     	;# 
    39  0002                     	;# 
    40  0003                     	;# 
    41  0004                     	;# 
    42  0005                     	;# 
    43  0006                     	;# 
    44  0007                     	;# 
    45  0008                     	;# 
    46  0009                     	;# 
    47  000A                     	;# 
    48  000B                     	;# 
    49  000C                     	;# 
    50  000D                     	;# 
    51  000E                     	;# 
    52  000E                     	;# 
    53  000F                     	;# 
    54  0010                     	;# 
    55  0011                     	;# 
    56  0012                     	;# 
    57  0013                     	;# 
    58  0014                     	;# 
    59  0015                     	;# 
    60  0015                     	;# 
    61  0016                     	;# 
    62  0017                     	;# 
    63  0018                     	;# 
    64  0019                     	;# 
    65  001A                     	;# 
    66  001B                     	;# 
    67  001B                     	;# 
    68  001C                     	;# 
    69  001D                     	;# 
    70  001E                     	;# 
    71  001F                     	;# 
    72  0081                     	;# 
    73  0085                     	;# 
    74  0086                     	;# 
    75  0087                     	;# 
    76  0088                     	;# 
    77  0089                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  008E                     	;# 
    81  0091                     	;# 
    82  0092                     	;# 
    83  0093                     	;# 
    84  0094                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  009F                     	;# 
    91  010C                     	;# 
    92  010D                     	;# 
    93  010E                     	;# 
    94  010F                     	;# 
    95  018C                     	;# 
    96  018D                     	;# 
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  0007                     	;# 
   105  0008                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000D                     	;# 
   111  000E                     	;# 
   112  000E                     	;# 
   113  000F                     	;# 
   114  0010                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0013                     	;# 
   118  0014                     	;# 
   119  0015                     	;# 
   120  0015                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  0019                     	;# 
   125  001A                     	;# 
   126  001B                     	;# 
   127  001B                     	;# 
   128  001C                     	;# 
   129  001D                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  0081                     	;# 
   133  0085                     	;# 
   134  0086                     	;# 
   135  0087                     	;# 
   136  0088                     	;# 
   137  0089                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0008                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0088                     	;# 
   197  0089                     	;# 
   198  008C                     	;# 
   199  008D                     	;# 
   200  008E                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  010C                     	;# 
   272  010D                     	;# 
   273  010E                     	;# 
   274  010F                     	;# 
   275  018C                     	;# 
   276  018D                     	;# 
   277  001A                     _RCREG	set	26
   278  0018                     _RCSTA	set	24
   279  0013                     _SSPBUF	set	19
   280  0014                     _SSPCON	set	20
   281  0019                     _TXREG	set	25
   282  0065                     _RCIF	set	101
   283  0064                     _TXIF	set	100
   284  0099                     _SPBRG	set	153
   285  0093                     _SSPADD	set	147
   286  0094                     _SSPSTAT	set	148
   287  0087                     _TRISC	set	135
   288  0098                     _TXSTA	set	152
   289  048D                     _ACKDT	set	1165
   290  048C                     _ACKEN	set	1164
   291  04A0                     _BF	set	1184
   292  048A                     _PEN	set	1162
   293  048B                     _RCEN	set	1163
   294  0489                     _RSEN	set	1161
   295  04A2                     _R_W	set	1186
   296  0488                     _SEN	set	1160
   297  043B                     _TRISC3	set	1083
   298  043C                     _TRISC4	set	1084
   299                           
   300                           	psect	strings
   301  0003                     __pstrings:	
   302  0003                     stringtab:	
   303  0003                     __stringtab:	
   304  0003                     stringcode:	
   305                           ;	String table - string pointers are 1 byte each
   306                           
   307  0003                     stringdir:	
   308  0003  3000               	movlw	high stringdir
   309  0004  008A               	movwf	10
   310  0005  0804               	movf	4,w
   311  0006  0A84               	incf	4,f
   312  0007  0782               	addwf	2,f
   313  0008                     __stringbase:	
   314  0008  3400               	retlw	0
   315  0009                     __end_of__stringtab:	
   316  0009                     STR_1:	
   317  0009  340A               	retlw	10
   318  000A  340D               	retlw	13
   319  000B  3474               	retlw	116	;'t'
   320  000C  3469               	retlw	105	;'i'
   321  000D  346D               	retlw	109	;'m'
   322  000E  3465               	retlw	101	;'e'
   323  000F  343A               	retlw	58	;':'
   324  0010  3425               	retlw	37	;'%'
   325  0011  3432               	retlw	50	;'2'
   326  0012  3478               	retlw	120	;'x'
   327  0013  343A               	retlw	58	;':'
   328  0014  3425               	retlw	37	;'%'
   329  0015  3432               	retlw	50	;'2'
   330  0016  3478               	retlw	120	;'x'
   331  0017  343A               	retlw	58	;':'
   332  0018  3425               	retlw	37	;'%'
   333  0019  3432               	retlw	50	;'2'
   334  001A  3478               	retlw	120	;'x'
   335  001B  3420               	retlw	32	;' '
   336  001C  3420               	retlw	32	;' '
   337  001D  340A               	retlw	10
   338  001E  3444               	retlw	68	;'D'
   339  001F  3461               	retlw	97	;'a'
   340  0020  3474               	retlw	116	;'t'
   341  0021  3465               	retlw	101	;'e'
   342  0022  343A               	retlw	58	;':'
   343  0023  3425               	retlw	37	;'%'
   344  0024  3432               	retlw	50	;'2'
   345  0025  3478               	retlw	120	;'x'
   346  0026  342F               	retlw	47	;'/'
   347  0027  3425               	retlw	37	;'%'
   348  0028  3432               	retlw	50	;'2'
   349  0029  3478               	retlw	120	;'x'
   350  002A  342F               	retlw	47	;'/'
   351  002B  3425               	retlw	37	;'%'
   352  002C  3432               	retlw	50	;'2'
   353  002D  3478               	retlw	120	;'x'
   354  002E  3400               	retlw	0
   355                           
   356                           ; #config settings
   357  0000                     
   358                           	psect	cinit
   359  07FC                     start_initialization:	
   360  07FC                     __initialization:	
   361  07FC                     end_of_initialization:	
   362                           ;End of C runtime variable initialization code
   363                           
   364  07FC                     __end_of__initialization:	
   365  07FC  0183               	clrf	3
   366  07FD  120A  118A  29C7   	ljmp	_main	;jump to C main() function
   367                           
   368                           	psect	cstackBANK1
   369  00A0                     __pcstackBANK1:	
   370  00A0                     ??_main:	
   371                           
   372                           ; 1 bytes @ 0x0
   373  00A0                     	ds	12
   374  00AC                     main@rtc:	
   375                           
   376                           ; 7 bytes @ 0xC
   377  00AC                     	ds	7
   378                           
   379                           	psect	cstackCOMMON
   380  0070                     __pcstackCOMMON:	
   381  0070                     ?_I2C_Init:	
   382  0070                     ??_I2C_Init:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_I2C_Start:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ??_I2C_Start:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_I2C_Write:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ??_I2C_Write:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_I2C_Stop:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ??_I2C_Stop:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_I2C_Read:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ??_I2C_Read:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_i2c_WaitForIdle:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ??_i2c_WaitForIdle:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_i2c_Ack:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ??_i2c_Ack:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_i2c_NoAck:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ??_i2c_NoAck:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_UART_TxChar:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ??_UART_TxChar:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_UART_TxString:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_RTC_Init:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_RTC_SetDateTime:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_RTC_GetDateTime:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_main:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?___ftpack:	
   449                           ; 2 bytes @ 0x0
   450                           
   451  0070                     ?___lldiv:	
   452                           ; 3 bytes @ 0x0
   453                           
   454  0070                     UART_TxChar@var_uartData_u8:	
   455                           ; 4 bytes @ 0x0
   456                           
   457  0070                     I2C_Write@v_i2cData_u8:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ___ftpack@arg:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ___lldiv@divisor:	
   464                           ; 3 bytes @ 0x0
   465                           
   466                           
   467                           ; 4 bytes @ 0x0
   468  0070                     	ds	1
   469  0071                     ??_UART_TxString:	
   470  0071                     ??_RTC_Init:	
   471                           ; 1 bytes @ 0x1
   472                           
   473  0071                     ??_RTC_SetDateTime:	
   474                           ; 1 bytes @ 0x1
   475                           
   476  0071                     RTC_SetDateTime@rtc:	
   477                           ; 1 bytes @ 0x1
   478                           
   479  0071                     I2C_Read@v_ackOption_u8:	
   480                           ; 1 bytes @ 0x1
   481                           
   482                           
   483                           ; 1 bytes @ 0x1
   484  0071                     	ds	1
   485  0072                     UART_TxString@ptr_string:	
   486  0072                     I2C_Read@v_i2cData_u8:	
   487                           ; 1 bytes @ 0x2
   488                           
   489                           
   490                           ; 1 bytes @ 0x2
   491  0072                     	ds	1
   492  0073                     ??_RTC_GetDateTime:	
   493  0073                     ___ftpack@exp:	
   494                           ; 1 bytes @ 0x3
   495                           
   496                           
   497                           ; 1 bytes @ 0x3
   498  0073                     	ds	1
   499  0074                     RTC_GetDateTime@rtc:	
   500  0074                     ___ftpack@sign:	
   501                           ; 1 bytes @ 0x4
   502                           
   503  0074                     ___lldiv@dividend:	
   504                           ; 1 bytes @ 0x4
   505                           
   506                           
   507                           ; 4 bytes @ 0x4
   508  0074                     	ds	1
   509  0075                     ??___ftpack:	
   510                           
   511                           ; 1 bytes @ 0x5
   512  0075                     	ds	3
   513  0078                     ??___lldiv:	
   514  0078                     ?___ftmul:	
   515                           ; 1 bytes @ 0x8
   516                           
   517  0078                     ?___lltoft:	
   518                           ; 3 bytes @ 0x8
   519                           
   520  0078                     ___ftmul@f1:	
   521                           ; 3 bytes @ 0x8
   522                           
   523  0078                     ___lltoft@c:	
   524                           ; 3 bytes @ 0x8
   525                           
   526                           
   527                           ; 4 bytes @ 0x8
   528  0078                     	ds	1
   529  0079                     ___lldiv@quotient:	
   530                           
   531                           ; 4 bytes @ 0x9
   532  0079                     	ds	2
   533  007B                     ___ftmul@f2:	
   534                           
   535                           ; 3 bytes @ 0xB
   536  007B                     	ds	1
   537  007C                     ??___lltoft:	
   538                           
   539                           ; 1 bytes @ 0xC
   540  007C                     	ds	1
   541  007D                     ___lldiv@counter:	
   542  007D                     ___lltoft@exp:	
   543                           ; 1 bytes @ 0xD
   544                           
   545                           
   546                           ; 1 bytes @ 0xD
   547  007D                     	ds	1
   548  007E                     ??_UART_Init:	
   549  007E                     ??___ftneg:	
   550                           ; 1 bytes @ 0xE
   551                           
   552                           
   553                           	psect	cstackBANK0
   554  0020                     __pcstackBANK0:	
   555                           ; 1 bytes @ 0xE
   556                           
   557  0020                     ?_UART_SetBaudRate:	
   558  0020                     ?___bmul:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0020                     ??___ftmul:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0020                     ?___ftneg:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0020                     ___bmul@multiplicand:	
   568                           ; 3 bytes @ 0x0
   569                           
   570  0020                     ___ftneg@f1:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0020                     UART_SetBaudRate@var_baudRate_u32:	
   574                           ; 3 bytes @ 0x0
   575                           
   576                           
   577                           ; 4 bytes @ 0x0
   578  0020                     	ds	1
   579  0021                     ??___bmul:	
   580                           
   581                           ; 1 bytes @ 0x1
   582  0021                     	ds	1
   583  0022                     ___bmul@product:	
   584                           
   585                           ; 1 bytes @ 0x2
   586  0022                     	ds	1
   587  0023                     ?___ftadd:	
   588  0023                     ___bmul@multiplier:	
   589                           ; 3 bytes @ 0x3
   590                           
   591  0023                     ___ftadd@f1:	
   592                           ; 1 bytes @ 0x3
   593                           
   594                           
   595                           ; 3 bytes @ 0x3
   596  0023                     	ds	1
   597  0024                     ??_UART_SetBaudRate:	
   598  0024                     ?_UART_TxNumber:	
   599                           ; 1 bytes @ 0x4
   600                           
   601  0024                     ___ftmul@exp:	
   602                           ; 1 bytes @ 0x4
   603                           
   604  0024                     UART_TxNumber@v_number_u32:	
   605                           ; 1 bytes @ 0x4
   606                           
   607                           
   608                           ; 4 bytes @ 0x4
   609  0024                     	ds	1
   610  0025                     ___ftmul@f3_as_product:	
   611                           
   612                           ; 3 bytes @ 0x5
   613  0025                     	ds	1
   614  0026                     ___ftadd@f2:	
   615                           
   616                           ; 3 bytes @ 0x6
   617  0026                     	ds	2
   618  0028                     UART_TxNumber@v_numOfDigitsToTransmit_u8:	
   619  0028                     ___ftmul@cntr:	
   620                           ; 1 bytes @ 0x8
   621                           
   622                           
   623                           ; 1 bytes @ 0x8
   624  0028                     	ds	1
   625  0029                     ??_UART_TxNumber:	
   626  0029                     ??___ftadd:	
   627                           ; 1 bytes @ 0x9
   628                           
   629  0029                     ___ftmul@sign:	
   630                           ; 1 bytes @ 0x9
   631                           
   632                           
   633                           ; 1 bytes @ 0x9
   634  0029                     	ds	1
   635  002A                     ?___fttol:	
   636  002A                     ___fttol@f1:	
   637                           ; 4 bytes @ 0xA
   638                           
   639                           
   640                           ; 3 bytes @ 0xA
   641  002A                     	ds	2
   642  002C                     UART_SetBaudRate@RegValue:	
   643                           
   644                           ; 4 bytes @ 0xC
   645  002C                     	ds	1
   646  002D                     ___ftadd@sign:	
   647                           
   648                           ; 1 bytes @ 0xD
   649  002D                     	ds	1
   650  002E                     ??___fttol:	
   651  002E                     ___ftadd@exp2:	
   652                           ; 1 bytes @ 0xE
   653                           
   654                           
   655                           ; 1 bytes @ 0xE
   656  002E                     	ds	1
   657  002F                     ___ftadd@exp1:	
   658                           
   659                           ; 1 bytes @ 0xF
   660  002F                     	ds	1
   661  0030                     ?_UART_Init:	
   662  0030                     UART_Init@var_baudRate_u32:	
   663                           ; 1 bytes @ 0x10
   664                           
   665                           
   666                           ; 4 bytes @ 0x10
   667  0030                     	ds	2
   668  0032                     ___fttol@sign1:	
   669                           
   670                           ; 1 bytes @ 0x12
   671  0032                     	ds	1
   672  0033                     ___fttol@lval:	
   673                           
   674                           ; 4 bytes @ 0x13
   675  0033                     	ds	2
   676  0035                     UART_TxNumber@a:	
   677                           
   678                           ; 10 bytes @ 0x15
   679  0035                     	ds	2
   680  0037                     ___fttol@exp1:	
   681                           
   682                           ; 1 bytes @ 0x17
   683  0037                     	ds	8
   684  003F                     _UART_TxNumber$63:	
   685                           
   686                           ; 2 bytes @ 0x1F
   687  003F                     	ds	2
   688  0041                     UART_TxNumber@v_numericSystem_u8:	
   689                           
   690                           ; 1 bytes @ 0x21
   691  0041                     	ds	1
   692  0042                     UART_TxNumber@i:	
   693                           
   694                           ; 1 bytes @ 0x22
   695  0042                     	ds	1
   696  0043                     ?_UART_TxFloatNumber:	
   697  0043                     UART_TxFloatNumber@v_floatNumber_f32:	
   698                           ; 1 bytes @ 0x23
   699                           
   700                           
   701                           ; 3 bytes @ 0x23
   702  0043                     	ds	3
   703  0046                     ??_UART_TxFloatNumber:	
   704                           
   705                           ; 1 bytes @ 0x26
   706  0046                     	ds	1
   707  0047                     UART_TxFloatNumber@v_tempNumber_u32:	
   708                           
   709                           ; 4 bytes @ 0x27
   710  0047                     	ds	4
   711  004B                     ?_UART_Printf:	
   712                           
   713                           ; 1 bytes @ 0x2B
   714  004B                     	ds	12
   715  0057                     ??_UART_Printf:	
   716                           
   717                           ; 1 bytes @ 0x37
   718  0057                     	ds	2
   719  0059                     UART_Printf@v_floatNum_f32:	
   720                           
   721                           ; 3 bytes @ 0x39
   722  0059                     	ds	3
   723  005C                     UART_Printf@str:	
   724                           
   725                           ; 1 bytes @ 0x3C
   726  005C                     	ds	1
   727  005D                     UART_Printf@argList:	
   728                           
   729                           ; 1 bytes @ 0x3D
   730  005D                     	ds	1
   731  005E                     UART_Printf@v_num_s32:	
   732                           
   733                           ; 4 bytes @ 0x3E
   734  005E                     	ds	4
   735  0062                     UART_Printf@v_num_s16:	
   736                           
   737                           ; 2 bytes @ 0x42
   738  0062                     	ds	2
   739  0064                     UART_Printf@v_num_u32:	
   740                           
   741                           ; 4 bytes @ 0x44
   742  0064                     	ds	4
   743  0068                     UART_Printf@v_num_u16:	
   744                           
   745                           ; 2 bytes @ 0x48
   746  0068                     	ds	2
   747  006A                     UART_Printf@ptr:	
   748                           
   749                           ; 1 bytes @ 0x4A
   750  006A                     	ds	1
   751  006B                     UART_Printf@ch:	
   752                           
   753                           ; 1 bytes @ 0x4B
   754  006B                     	ds	1
   755  006C                     UART_Printf@v_numOfDigitsToTransmit_u8:	
   756                           
   757                           ; 1 bytes @ 0x4C
   758  006C                     	ds	1
   759  006D                     UART_Printf@argp:	
   760                           
   761                           ; 1 bytes @ 0x4D
   762  006D                     	ds	1
   763                           
   764                           	psect	maintext
   765  01C7                     __pmaintext:	
   766 ;;
   767 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
   768 ;;
   769 ;; *************** function _main *****************
   770 ;; Defined at:
   771 ;;		line 44 in file "main.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;  rtc             7   12[BANK1 ] struct .
   776 ;; Return value:  Size  Location     Type
   777 ;;                  2  243[None  ] int 
   778 ;; Registers used:
   779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : B00/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         0       0       7       0       0
   787 ;;      Temps:          0       0      12       0       0
   788 ;;      Totals:         0       0      19       0       0
   789 ;;Total ram usage:       19 bytes
   790 ;; Hardware stack levels required when called:    4
   791 ;; This function calls:
   792 ;;		_RTC_GetDateTime
   793 ;;		_RTC_Init
   794 ;;		_RTC_SetDateTime
   795 ;;		_UART_Init
   796 ;;		_UART_Printf
   797 ;; This function is called by:
   798 ;;		Startup code after reset
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           
   803                           ;psect for function _main
   804  01C7                     _main:	
   805                           
   806                           ;main.c: 46: rtc_t rtc;
   807                           ;main.c: 47: UART_Init(9600);
   808                           
   809                           ;incstack = 0
   810                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   811  01C7  3000               	movlw	0
   812  01C8  1283               	bcf	3,5	;RP0=0, select bank0
   813  01C9  1303               	bcf	3,6	;RP1=0, select bank0
   814  01CA  00B3               	movwf	UART_Init@var_baudRate_u32+3
   815  01CB  3000               	movlw	0
   816  01CC  00B2               	movwf	UART_Init@var_baudRate_u32+2
   817  01CD  3025               	movlw	37
   818  01CE  00B1               	movwf	UART_Init@var_baudRate_u32+1
   819  01CF  3080               	movlw	128
   820  01D0  00B0               	movwf	UART_Init@var_baudRate_u32
   821  01D1  120A  158A  265B  120A  118A  	fcall	_UART_Init
   822                           
   823                           ;main.c: 49: RTC_Init();
   824  01D6  120A  158A  2691  120A  118A  	fcall	_RTC_Init
   825                           
   826                           ;main.c: 50: rtc.hour = 0x10;
   827  01DB  3010               	movlw	16
   828  01DC  1683               	bsf	3,5	;RP0=1, select bank1
   829  01DD  1303               	bcf	3,6	;RP1=0, select bank1
   830  01DE  00A0               	movwf	??_main^(0+128)
   831  01DF  0820               	movf	??_main^(0+128),w
   832  01E0  00AE               	movwf	(main@rtc^(0+128)+2)
   833                           
   834                           ;main.c: 51: rtc.min = 0x40;
   835  01E1  3040               	movlw	64
   836  01E2  00A0               	movwf	??_main^(0+128)
   837  01E3  0820               	movf	??_main^(0+128),w
   838  01E4  00AD               	movwf	(main@rtc^(0+128)+1)
   839                           
   840                           ;main.c: 52: rtc.sec = 0x00;
   841  01E5  01AC               	clrf	main@rtc^(0+128)
   842                           
   843                           ;main.c: 54: rtc.date = 0x01;
   844  01E6  01B0               	clrf	(main@rtc^(0+128)+4)
   845  01E7  0AB0               	incf	(main@rtc^(0+128)+4),f
   846                           
   847                           ;main.c: 55: rtc.month = 0x01;
   848  01E8  01B1               	clrf	(main@rtc^(0+128)+5)
   849  01E9  0AB1               	incf	(main@rtc^(0+128)+5),f
   850                           
   851                           ;main.c: 56: rtc.year = 0x16;
   852  01EA  3016               	movlw	22
   853  01EB  00A0               	movwf	??_main^(0+128)
   854  01EC  0820               	movf	??_main^(0+128),w
   855  01ED  00B2               	movwf	(main@rtc^(0+128)+6)
   856                           
   857                           ;main.c: 57: rtc.weekDay = 5;
   858  01EE  3005               	movlw	5
   859  01EF  00A0               	movwf	??_main^(0+128)
   860  01F0  0820               	movf	??_main^(0+128),w
   861  01F1  00AF               	movwf	(main@rtc^(0+128)+3)
   862                           
   863                           ;main.c: 64: RTC_SetDateTime(&rtc);
   864  01F2  30AC               	movlw	(low (main@rtc| 0))& (0+255)
   865  01F3  120A  158A  26DC  120A  118A  	fcall	_RTC_SetDateTime
   866  01F8                     l1915:	
   867                           ;main.c: 68: while(1)
   868                           
   869                           
   870                           ;main.c: 69: {
   871                           ;main.c: 70: RTC_GetDateTime(&rtc);
   872  01F8  30AC               	movlw	(low (main@rtc| 0))& (0+255)
   873  01F9  120A  118A  20BA  120A  118A  	fcall	_RTC_GetDateTime
   874                           
   875                           ;main.c: 71: UART_Printf("\n\rtime:%2x:%2x:%2x  \nDate:%2x/%2x/%2x",(uint16_t)rtc.hour,(
      +                          uint16_t)rtc.min,(uint16_t)rtc.sec,(uint16_t)rtc.date,(uint16_t)rtc.month,(uint16_t)rtc.
      +                          year);
   876  01FE  1683               	bsf	3,5	;RP0=1, select bank1
   877  01FF  1303               	bcf	3,6	;RP1=0, select bank1
   878  0200  082E               	movf	(main@rtc^(0+128)+2),w
   879  0201  00A0               	movwf	??_main^(0+128)
   880  0202  01A1               	clrf	(??_main^(0+128)+1)
   881  0203  0820               	movf	??_main^(0+128),w
   882  0204  1283               	bcf	3,5	;RP0=0, select bank0
   883  0205  1303               	bcf	3,6	;RP1=0, select bank0
   884  0206  00CB               	movwf	?_UART_Printf
   885  0207  1683               	bsf	3,5	;RP0=1, select bank1
   886  0208  1303               	bcf	3,6	;RP1=0, select bank1
   887  0209  0821               	movf	(??_main+1)^(0+128),w
   888  020A  1283               	bcf	3,5	;RP0=0, select bank0
   889  020B  1303               	bcf	3,6	;RP1=0, select bank0
   890  020C  00CC               	movwf	?_UART_Printf+1
   891  020D  1683               	bsf	3,5	;RP0=1, select bank1
   892  020E  1303               	bcf	3,6	;RP1=0, select bank1
   893  020F  082D               	movf	(main@rtc^(0+128)+1),w
   894  0210  00A2               	movwf	(??_main+2)^(0+128)
   895  0211  01A3               	clrf	((??_main+2)^(0+128)+1)
   896  0212  0822               	movf	(??_main+2)^(0+128),w
   897  0213  1283               	bcf	3,5	;RP0=0, select bank0
   898  0214  1303               	bcf	3,6	;RP1=0, select bank0
   899  0215  00CD               	movwf	?_UART_Printf+2
   900  0216  1683               	bsf	3,5	;RP0=1, select bank1
   901  0217  1303               	bcf	3,6	;RP1=0, select bank1
   902  0218  0823               	movf	(??_main+3)^(0+128),w
   903  0219  1283               	bcf	3,5	;RP0=0, select bank0
   904  021A  1303               	bcf	3,6	;RP1=0, select bank0
   905  021B  00CE               	movwf	?_UART_Printf+3
   906  021C  1683               	bsf	3,5	;RP0=1, select bank1
   907  021D  1303               	bcf	3,6	;RP1=0, select bank1
   908  021E  082C               	movf	main@rtc^(0+128),w
   909  021F  00A4               	movwf	(??_main+4)^(0+128)
   910  0220  01A5               	clrf	((??_main+4)^(0+128)+1)
   911  0221  0824               	movf	(??_main+4)^(0+128),w
   912  0222  1283               	bcf	3,5	;RP0=0, select bank0
   913  0223  1303               	bcf	3,6	;RP1=0, select bank0
   914  0224  00CF               	movwf	?_UART_Printf+4
   915  0225  1683               	bsf	3,5	;RP0=1, select bank1
   916  0226  1303               	bcf	3,6	;RP1=0, select bank1
   917  0227  0825               	movf	(??_main+5)^(0+128),w
   918  0228  1283               	bcf	3,5	;RP0=0, select bank0
   919  0229  1303               	bcf	3,6	;RP1=0, select bank0
   920  022A  00D0               	movwf	?_UART_Printf+5
   921  022B  1683               	bsf	3,5	;RP0=1, select bank1
   922  022C  1303               	bcf	3,6	;RP1=0, select bank1
   923  022D  0830               	movf	(main@rtc^(0+128)+4),w
   924  022E  00A6               	movwf	(??_main+6)^(0+128)
   925  022F  01A7               	clrf	((??_main+6)^(0+128)+1)
   926  0230  0826               	movf	(??_main+6)^(0+128),w
   927  0231  1283               	bcf	3,5	;RP0=0, select bank0
   928  0232  1303               	bcf	3,6	;RP1=0, select bank0
   929  0233  00D1               	movwf	?_UART_Printf+6
   930  0234  1683               	bsf	3,5	;RP0=1, select bank1
   931  0235  1303               	bcf	3,6	;RP1=0, select bank1
   932  0236  0827               	movf	(??_main+7)^(0+128),w
   933  0237  1283               	bcf	3,5	;RP0=0, select bank0
   934  0238  1303               	bcf	3,6	;RP1=0, select bank0
   935  0239  00D2               	movwf	?_UART_Printf+7
   936  023A  1683               	bsf	3,5	;RP0=1, select bank1
   937  023B  1303               	bcf	3,6	;RP1=0, select bank1
   938  023C  0831               	movf	(main@rtc^(0+128)+5),w
   939  023D  00A8               	movwf	(??_main+8)^(0+128)
   940  023E  01A9               	clrf	((??_main+8)^(0+128)+1)
   941  023F  0828               	movf	(??_main+8)^(0+128),w
   942  0240  1283               	bcf	3,5	;RP0=0, select bank0
   943  0241  1303               	bcf	3,6	;RP1=0, select bank0
   944  0242  00D3               	movwf	?_UART_Printf+8
   945  0243  1683               	bsf	3,5	;RP0=1, select bank1
   946  0244  1303               	bcf	3,6	;RP1=0, select bank1
   947  0245  0829               	movf	(??_main+9)^(0+128),w
   948  0246  1283               	bcf	3,5	;RP0=0, select bank0
   949  0247  1303               	bcf	3,6	;RP1=0, select bank0
   950  0248  00D4               	movwf	?_UART_Printf+9
   951  0249  1683               	bsf	3,5	;RP0=1, select bank1
   952  024A  1303               	bcf	3,6	;RP1=0, select bank1
   953  024B  0832               	movf	(main@rtc^(0+128)+6),w
   954  024C  00AA               	movwf	(??_main+10)^(0+128)
   955  024D  01AB               	clrf	((??_main+10)^(0+128)+1)
   956  024E  082A               	movf	(??_main+10)^(0+128),w
   957  024F  1283               	bcf	3,5	;RP0=0, select bank0
   958  0250  1303               	bcf	3,6	;RP1=0, select bank0
   959  0251  00D5               	movwf	?_UART_Printf+10
   960  0252  1683               	bsf	3,5	;RP0=1, select bank1
   961  0253  1303               	bcf	3,6	;RP1=0, select bank1
   962  0254  082B               	movf	(??_main+11)^(0+128),w
   963  0255  1283               	bcf	3,5	;RP0=0, select bank0
   964  0256  1303               	bcf	3,6	;RP1=0, select bank0
   965  0257  00D6               	movwf	?_UART_Printf+11
   966  0258  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   967  0259  120A  118A  25CA  120A  118A  	fcall	_UART_Printf
   968  025E  29F8               	goto	l1915
   969  025F                     __end_of_main:	
   970                           ;main.c: 72: }
   971                           ;main.c: 74: return (0);
   972                           ;	Return value of _main is never used
   973                           
   974                           
   975                           	psect	text1
   976  05CA                     __ptext1:	
   977 ;; *************** function _UART_Printf *****************
   978 ;; Defined at:
   979 ;;		line 411 in file "../00-libfiles/uart.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  argList         1    wreg     PTR const unsigned char 
   982 ;;		 -> STR_1(38), 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  argList         1   61[BANK0 ] PTR const unsigned char 
   985 ;;		 -> STR_1(38), 
   986 ;;  v_num_u32       4   68[BANK0 ] unsigned long 
   987 ;;  v_num_s32       4   62[BANK0 ] long 
   988 ;;  v_floatNum_f    3   57[BANK0 ] long 
   989 ;;  v_num_u16       2   72[BANK0 ] unsigned int 
   990 ;;  v_num_s16       2   66[BANK0 ] int 
   991 ;;  argp            1   77[BANK0 ] PTR void [1]
   992 ;;		 -> ?_UART_Printf(1), 
   993 ;;  v_numOfDigit    1   76[BANK0 ] unsigned char 
   994 ;;  ch              1   75[BANK0 ] unsigned char 
   995 ;;  ptr             1   74[BANK0 ] PTR const unsigned char 
   996 ;;		 -> STR_1(38), 
   997 ;;  str             1   60[BANK0 ] PTR unsigned char 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1007 ;;      Params:         0      12       0       0       0
  1008 ;;      Locals:         0      21       0       0       0
  1009 ;;      Temps:          0       2       0       0       0
  1010 ;;      Totals:         0      35       0       0       0
  1011 ;;Total ram usage:       35 bytes
  1012 ;; Hardware stack levels used:    1
  1013 ;; Hardware stack levels required when called:    3
  1014 ;; This function calls:
  1015 ;;		_UART_TxChar
  1016 ;;		_UART_TxFloatNumber
  1017 ;;		_UART_TxNumber
  1018 ;;		_UART_TxString
  1019 ;;		___bmul
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           
  1026                           ;psect for function _UART_Printf
  1027  05CA                     _UART_Printf:	
  1028                           
  1029                           ;incstack = 0
  1030                           ; Regs used in _UART_Printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1031                           ;UART_Printf@argList stored from wreg
  1032  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1033  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1034  05CC  00DD               	movwf	UART_Printf@argList
  1035                           
  1036                           ;uart.c: 413: const char *ptr;
  1037                           ;uart.c: 414: va_list argp;
  1038                           ;uart.c: 415: sint16_t v_num_s16;
  1039                           ;uart.c: 416: sint32_t v_num_s32;
  1040                           ;uart.c: 417: uint16_t v_num_u16;
  1041                           ;uart.c: 418: uint32_t v_num_u32;
  1042                           ;uart.c: 419: char *str;
  1043                           ;uart.c: 420: char ch;
  1044                           ;uart.c: 421: uint8_t v_numOfDigitsToTransmit_u8;
  1045                           ;uart.c: 423: double v_floatNum_f32;
  1046                           ;uart.c: 427: *argp = __va_start();
  1047  05CD  304B               	movlw	(low (?_UART_Printf| 0))& (0+255)
  1048  05CE  00D7               	movwf	??_UART_Printf
  1049  05CF  0857               	movf	??_UART_Printf,w
  1050  05D0  00ED               	movwf	UART_Printf@argp
  1051                           
  1052                           ;uart.c: 430: for(ptr = argList; *ptr != '\0'; ptr++)
  1053  05D1  085D               	movf	UART_Printf@argList,w
  1054  05D2  00D7               	movwf	??_UART_Printf
  1055  05D3  0857               	movf	??_UART_Printf,w
  1056  05D4  00EA               	movwf	UART_Printf@ptr
  1057  05D5                     l1819:	
  1058  05D5  086A               	movf	UART_Printf@ptr,w
  1059  05D6  0084               	movwf	4
  1060  05D7  120A  118A  2003  120A  118A  	fcall	stringdir
  1061  05DC  3A00               	xorlw	0
  1062  05DD  1903               	btfsc	3,2
  1063  05DE  0008               	return
  1064                           
  1065                           ;uart.c: 431: {
  1066                           ;uart.c: 433: ch= *ptr;
  1067  05DF  086A               	movf	UART_Printf@ptr,w
  1068  05E0  0084               	movwf	4
  1069  05E1  120A  118A  2003  120A  118A  	fcall	stringdir
  1070  05E6  00D7               	movwf	??_UART_Printf
  1071  05E7  0857               	movf	??_UART_Printf,w
  1072  05E8  00EB               	movwf	UART_Printf@ch
  1073                           
  1074                           ;uart.c: 434: if(ch == '%')
  1075  05E9  3025               	movlw	37
  1076  05EA  066B               	xorwf	UART_Printf@ch,w
  1077  05EB  1D03               	btfss	3,2
  1078  05EC  2FEF               	goto	l1815
  1079                           
  1080                           ;uart.c: 435: {
  1081                           ;uart.c: 436: ptr++;
  1082  05ED  3001               	movlw	1
  1083  05EE  00D7               	movwf	??_UART_Printf
  1084  05EF  0857               	movf	??_UART_Printf,w
  1085  05F0  07EA               	addwf	UART_Printf@ptr,f
  1086                           
  1087                           ;uart.c: 437: ch = *ptr;
  1088  05F1  086A               	movf	UART_Printf@ptr,w
  1089  05F2  0084               	movwf	4
  1090  05F3  120A  118A  2003  120A  118A  	fcall	stringdir
  1091  05F8  00D7               	movwf	??_UART_Printf
  1092  05F9  0857               	movf	??_UART_Printf,w
  1093  05FA  00EB               	movwf	UART_Printf@ch
  1094                           
  1095                           ;uart.c: 438: if((ch>=0x30) && (ch<=0x39))
  1096  05FB  3030               	movlw	48
  1097  05FC  026B               	subwf	UART_Printf@ch,w
  1098  05FD  1C03               	skipc
  1099  05FE  2E2C               	goto	l1721
  1100  05FF  303A               	movlw	58
  1101  0600  026B               	subwf	UART_Printf@ch,w
  1102  0601  1803               	skipnc
  1103  0602  2E2C               	goto	l1721
  1104                           
  1105                           ;uart.c: 439: {
  1106                           ;uart.c: 440: v_numOfDigitsToTransmit_u8 = 0;
  1107  0603  01EC               	clrf	UART_Printf@v_numOfDigitsToTransmit_u8
  1108  0604                     l1717:	
  1109                           ;uart.c: 441: while((ch>=0x30) && (ch<=0x39))
  1110                           
  1111  0604  3030               	movlw	48
  1112  0605  026B               	subwf	UART_Printf@ch,w
  1113  0606  1C03               	skipc
  1114  0607  2FBD               	goto	l1813
  1115  0608  303A               	movlw	58
  1116  0609  026B               	subwf	UART_Printf@ch,w
  1117  060A  1803               	btfsc	3,0
  1118  060B  2FBD               	goto	l1813
  1119                           
  1120                           ;uart.c: 442: {
  1121                           ;uart.c: 443: v_numOfDigitsToTransmit_u8 = (v_numOfDigitsToTransmit_u8 * 10) + (ch-0x30)
      +                          ;
  1122  060C  300A               	movlw	10
  1123  060D  00D7               	movwf	??_UART_Printf
  1124  060E  0857               	movf	??_UART_Printf,w
  1125  060F  00A0               	movwf	___bmul@multiplicand
  1126  0610  086C               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1127  0611  120A  158A  2633  120A  118A  	fcall	___bmul
  1128  0616  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0617  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0618  076B               	addwf	UART_Printf@ch,w
  1131  0619  3ED0               	addlw	208
  1132  061A  00D8               	movwf	??_UART_Printf+1
  1133  061B  0858               	movf	??_UART_Printf+1,w
  1134  061C  00EC               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1135                           
  1136                           ;uart.c: 444: ptr++;
  1137  061D  3001               	movlw	1
  1138  061E  00D7               	movwf	??_UART_Printf
  1139  061F  0857               	movf	??_UART_Printf,w
  1140  0620  07EA               	addwf	UART_Printf@ptr,f
  1141                           
  1142                           ;uart.c: 445: ch = *ptr;
  1143  0621  086A               	movf	UART_Printf@ptr,w
  1144  0622  0084               	movwf	4
  1145  0623  120A  118A  2003  120A  118A  	fcall	stringdir
  1146  0628  00D7               	movwf	??_UART_Printf
  1147  0629  0857               	movf	??_UART_Printf,w
  1148  062A  00EB               	movwf	UART_Printf@ch
  1149  062B  2E04               	goto	l1717
  1150  062C                     l1721:	
  1151                           ;uart.c: 446: }
  1152                           ;uart.c: 447: }
  1153                           
  1154                           
  1155                           ;uart.c: 448: else
  1156                           ;uart.c: 449: {
  1157                           ;uart.c: 450: v_numOfDigitsToTransmit_u8 = 0xffu;
  1158  062C  30FF               	movlw	255
  1159  062D  00D7               	movwf	??_UART_Printf
  1160  062E  0857               	movf	??_UART_Printf,w
  1161  062F  00EC               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1162                           
  1163                           ;uart.c: 451: }
  1164                           ;uart.c: 454: switch(ch)
  1165  0630  2FBD               	goto	l1813
  1166  0631                     l1723:	
  1167                           ;uart.c: 455: {
  1168                           ;uart.c: 456: case 'C':
  1169                           
  1170                           
  1171                           ;uart.c: 457: case 'c':
  1172                           ;uart.c: 458: ch = (*(uint8_t *)__va_arg((*(uint8_t **)argp), (uint8_t)0));
  1173  0631  086D               	movf	UART_Printf@argp,w
  1174  0632  0084               	movwf	4
  1175  0633  1383               	bcf	3,7	;select IRP bank0
  1176  0634  0800               	movf	0,w
  1177  0635  00D7               	movwf	??_UART_Printf
  1178  0636  0857               	movf	??_UART_Printf,w
  1179  0637  00EB               	movwf	UART_Printf@ch
  1180  0638  3002               	movlw	2
  1181  0639  00D7               	movwf	??_UART_Printf
  1182  063A  0857               	movf	??_UART_Printf,w
  1183  063B  07ED               	addwf	UART_Printf@argp,f
  1184  063C  2FEF               	goto	l1815
  1185  063D                     l1729:	
  1186                           ;uart.c: 462: case 'd':
  1187                           
  1188                           ;uart.c: 460: break;
  1189                           
  1190                           ;uart.c: 459: UART_TxChar(ch);
  1191                           
  1192                           
  1193                           ;uart.c: 463: v_num_s16 = (*(sint16_t *)__va_arg((*(sint16_t **)argp), (sint16_t)0));
  1194  063D  1283               	bcf	3,5	;RP0=0, select bank0
  1195  063E  1303               	bcf	3,6	;RP1=0, select bank0
  1196  063F  086D               	movf	UART_Printf@argp,w
  1197  0640  0084               	movwf	4
  1198  0641  1383               	bcf	3,7	;select IRP bank0
  1199  0642  0800               	movf	0,w
  1200  0643  00E2               	movwf	UART_Printf@v_num_s16
  1201  0644  0A84               	incf	4,f
  1202  0645  0800               	movf	0,w
  1203  0646  00E3               	movwf	UART_Printf@v_num_s16+1
  1204  0647  3002               	movlw	2
  1205  0648  00D7               	movwf	??_UART_Printf
  1206  0649  0857               	movf	??_UART_Printf,w
  1207  064A  07ED               	addwf	UART_Printf@argp,f
  1208                           
  1209                           ;uart.c: 464: if(v_num_s16<0)
  1210  064B  1FE3               	btfss	UART_Printf@v_num_s16+1,7
  1211  064C  2E58               	goto	l1739
  1212                           
  1213                           ;uart.c: 465: {
  1214                           ;uart.c: 466: v_num_s16 = -v_num_s16;
  1215  064D  09E2               	comf	UART_Printf@v_num_s16,f
  1216  064E  09E3               	comf	UART_Printf@v_num_s16+1,f
  1217  064F  0AE2               	incf	UART_Printf@v_num_s16,f
  1218  0650  1903               	skipnz
  1219  0651  0AE3               	incf	UART_Printf@v_num_s16+1,f
  1220                           
  1221                           ;uart.c: 467: UART_TxChar('-');
  1222  0652  302D               	movlw	45
  1223  0653  120A  158A  2608  120A  118A  	fcall	_UART_TxChar
  1224  0658                     l1739:	
  1225                           
  1226                           ;uart.c: 468: }
  1227                           ;uart.c: 469: UART_TxNumber(10u,v_num_s16,v_numOfDigitsToTransmit_u8);
  1228  0658  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0659  1303               	bcf	3,6	;RP1=0, select bank0
  1230  065A  0862               	movf	UART_Printf@v_num_s16,w
  1231  065B  00A4               	movwf	UART_TxNumber@v_number_u32
  1232  065C  0863               	movf	UART_Printf@v_num_s16+1,w
  1233  065D  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1234  065E  3000               	movlw	0
  1235  065F  1BA5               	btfsc	UART_TxNumber@v_number_u32+1,7
  1236  0660  30FF               	movlw	255
  1237  0661  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1238  0662  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1239  0663  086C               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1240  0664  00D7               	movwf	??_UART_Printf
  1241  0665  0857               	movf	??_UART_Printf,w
  1242  0666  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1243  0667  300A               	movlw	10
  1244  0668  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1245                           
  1246                           ;uart.c: 470: break;
  1247  066D  2FF5               	goto	l1817
  1248  066E                     l1741:	
  1249                           ;uart.c: 472: case 'D':
  1250                           
  1251                           
  1252                           ;uart.c: 473: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
  1253  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1254  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0670  086D               	movf	UART_Printf@argp,w
  1256  0671  0084               	movwf	4
  1257  0672  1383               	bcf	3,7	;select IRP bank0
  1258  0673  0800               	movf	0,w
  1259  0674  00DE               	movwf	UART_Printf@v_num_s32
  1260  0675  0A84               	incf	4,f
  1261  0676  0800               	movf	0,w
  1262  0677  00DF               	movwf	UART_Printf@v_num_s32+1
  1263  0678  0A84               	incf	4,f
  1264  0679  0800               	movf	0,w
  1265  067A  00E0               	movwf	UART_Printf@v_num_s32+2
  1266  067B  0A84               	incf	4,f
  1267  067C  0800               	movf	0,w
  1268  067D  00E1               	movwf	UART_Printf@v_num_s32+3
  1269  067E  3004               	movlw	4
  1270  067F  00D7               	movwf	??_UART_Printf
  1271  0680  0857               	movf	??_UART_Printf,w
  1272  0681  07ED               	addwf	UART_Printf@argp,f
  1273                           
  1274                           ;uart.c: 474: if(v_num_s32<0)
  1275  0682  1FE1               	btfss	UART_Printf@v_num_s32+3,7
  1276  0683  2E95               	goto	l1751
  1277                           
  1278                           ;uart.c: 475: {
  1279                           ;uart.c: 476: v_num_s32 = -v_num_s32;
  1280  0684  09DE               	comf	UART_Printf@v_num_s32,f
  1281  0685  09DF               	comf	UART_Printf@v_num_s32+1,f
  1282  0686  09E0               	comf	UART_Printf@v_num_s32+2,f
  1283  0687  09E1               	comf	UART_Printf@v_num_s32+3,f
  1284  0688  0ADE               	incf	UART_Printf@v_num_s32,f
  1285  0689  1903               	skipnz
  1286  068A  0ADF               	incf	UART_Printf@v_num_s32+1,f
  1287  068B  1903               	skipnz
  1288  068C  0AE0               	incf	UART_Printf@v_num_s32+2,f
  1289  068D  1903               	skipnz
  1290  068E  0AE1               	incf	UART_Printf@v_num_s32+3,f
  1291                           
  1292                           ;uart.c: 477: UART_TxChar('-');
  1293  068F  302D               	movlw	45
  1294  0690  120A  158A  2608  120A  118A  	fcall	_UART_TxChar
  1295  0695                     l1751:	
  1296                           
  1297                           ;uart.c: 478: }
  1298                           ;uart.c: 479: UART_TxNumber(10u,v_num_s32,v_numOfDigitsToTransmit_u8);
  1299  0695  1283               	bcf	3,5	;RP0=0, select bank0
  1300  0696  1303               	bcf	3,6	;RP1=0, select bank0
  1301  0697  0861               	movf	UART_Printf@v_num_s32+3,w
  1302  0698  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1303  0699  0860               	movf	UART_Printf@v_num_s32+2,w
  1304  069A  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1305  069B  085F               	movf	UART_Printf@v_num_s32+1,w
  1306  069C  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1307  069D  085E               	movf	UART_Printf@v_num_s32,w
  1308  069E  00A4               	movwf	UART_TxNumber@v_number_u32
  1309  069F  086C               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1310  06A0  00D7               	movwf	??_UART_Printf
  1311  06A1  0857               	movf	??_UART_Printf,w
  1312  06A2  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1313  06A3  300A               	movlw	10
  1314  06A4  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1315                           
  1316                           ;uart.c: 480: break;
  1317  06A9  2FF5               	goto	l1817
  1318  06AA                     l1753:	
  1319                           ;uart.c: 482: case 'u':
  1320                           
  1321                           
  1322                           ;uart.c: 483: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1323  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  1324  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  1325  06AC  086D               	movf	UART_Printf@argp,w
  1326  06AD  0084               	movwf	4
  1327  06AE  1383               	bcf	3,7	;select IRP bank0
  1328  06AF  0800               	movf	0,w
  1329  06B0  00E8               	movwf	UART_Printf@v_num_u16
  1330  06B1  0A84               	incf	4,f
  1331  06B2  0800               	movf	0,w
  1332  06B3  00E9               	movwf	UART_Printf@v_num_u16+1
  1333  06B4  3002               	movlw	2
  1334  06B5  00D7               	movwf	??_UART_Printf
  1335  06B6  0857               	movf	??_UART_Printf,w
  1336  06B7  07ED               	addwf	UART_Printf@argp,f
  1337                           
  1338                           ;uart.c: 484: UART_TxNumber(10u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1339  06B8  0868               	movf	UART_Printf@v_num_u16,w
  1340  06B9  00A4               	movwf	UART_TxNumber@v_number_u32
  1341  06BA  0869               	movf	UART_Printf@v_num_u16+1,w
  1342  06BB  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1343  06BC  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1344  06BD  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1345  06BE  086C               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1346  06BF  00D7               	movwf	??_UART_Printf
  1347  06C0  0857               	movf	??_UART_Printf,w
  1348  06C1  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1349  06C2  300A               	movlw	10
  1350  06C3  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1351                           
  1352                           ;uart.c: 485: break;
  1353  06C8  2FF5               	goto	l1817
  1354  06C9                     l1759:	
  1355                           ;uart.c: 487: case 'U':
  1356                           
  1357                           
  1358                           ;uart.c: 488: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1359  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1360  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1361  06CB  086D               	movf	UART_Printf@argp,w
  1362  06CC  0084               	movwf	4
  1363  06CD  1383               	bcf	3,7	;select IRP bank0
  1364  06CE  0800               	movf	0,w
  1365  06CF  00E4               	movwf	UART_Printf@v_num_u32
  1366  06D0  0A84               	incf	4,f
  1367  06D1  0800               	movf	0,w
  1368  06D2  00E5               	movwf	UART_Printf@v_num_u32+1
  1369  06D3  0A84               	incf	4,f
  1370  06D4  0800               	movf	0,w
  1371  06D5  00E6               	movwf	UART_Printf@v_num_u32+2
  1372  06D6  0A84               	incf	4,f
  1373  06D7  0800               	movf	0,w
  1374  06D8  00E7               	movwf	UART_Printf@v_num_u32+3
  1375  06D9  3004               	movlw	4
  1376  06DA  00D7               	movwf	??_UART_Printf
  1377  06DB  0857               	movf	??_UART_Printf,w
  1378  06DC  07ED               	addwf	UART_Printf@argp,f
  1379                           
  1380                           ;uart.c: 489: UART_TxNumber(10u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1381  06DD  0867               	movf	UART_Printf@v_num_u32+3,w
  1382  06DE  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1383  06DF  0866               	movf	UART_Printf@v_num_u32+2,w
  1384  06E0  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1385  06E1  0865               	movf	UART_Printf@v_num_u32+1,w
  1386  06E2  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1387  06E3  0864               	movf	UART_Printf@v_num_u32,w
  1388  06E4  00A4               	movwf	UART_TxNumber@v_number_u32
  1389  06E5  086C               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1390  06E6  00D7               	movwf	??_UART_Printf
  1391  06E7  0857               	movf	??_UART_Printf,w
  1392  06E8  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1393  06E9  300A               	movlw	10
  1394  06EA  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1395                           
  1396                           ;uart.c: 490: break;
  1397  06EF  2FF5               	goto	l1817
  1398  06F0                     l1765:	
  1399                           ;uart.c: 492: case 'x':
  1400                           
  1401                           
  1402                           ;uart.c: 493: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1403  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  1404  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  1405  06F2  086D               	movf	UART_Printf@argp,w
  1406  06F3  0084               	movwf	4
  1407  06F4  1383               	bcf	3,7	;select IRP bank0
  1408  06F5  0800               	movf	0,w
  1409  06F6  00E8               	movwf	UART_Printf@v_num_u16
  1410  06F7  0A84               	incf	4,f
  1411  06F8  0800               	movf	0,w
  1412  06F9  00E9               	movwf	UART_Printf@v_num_u16+1
  1413  06FA  3002               	movlw	2
  1414  06FB  00D7               	movwf	??_UART_Printf
  1415  06FC  0857               	movf	??_UART_Printf,w
  1416  06FD  07ED               	addwf	UART_Printf@argp,f
  1417                           
  1418                           ;uart.c: 494: UART_TxNumber(16u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1419  06FE  0868               	movf	UART_Printf@v_num_u16,w
  1420  06FF  00A4               	movwf	UART_TxNumber@v_number_u32
  1421  0700  0869               	movf	UART_Printf@v_num_u16+1,w
  1422  0701  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1423  0702  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1424  0703  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1425  0704  086C               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1426  0705  00D7               	movwf	??_UART_Printf
  1427  0706  0857               	movf	??_UART_Printf,w
  1428  0707  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1429  0708  3010               	movlw	16
  1430  0709  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1431                           
  1432                           ;uart.c: 495: break;
  1433  070E  2FF5               	goto	l1817
  1434  070F                     l1771:	
  1435                           ;uart.c: 497: case 'X':
  1436                           
  1437                           
  1438                           ;uart.c: 498: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1439  070F  1283               	bcf	3,5	;RP0=0, select bank0
  1440  0710  1303               	bcf	3,6	;RP1=0, select bank0
  1441  0711  086D               	movf	UART_Printf@argp,w
  1442  0712  0084               	movwf	4
  1443  0713  1383               	bcf	3,7	;select IRP bank0
  1444  0714  0800               	movf	0,w
  1445  0715  00E4               	movwf	UART_Printf@v_num_u32
  1446  0716  0A84               	incf	4,f
  1447  0717  0800               	movf	0,w
  1448  0718  00E5               	movwf	UART_Printf@v_num_u32+1
  1449  0719  0A84               	incf	4,f
  1450  071A  0800               	movf	0,w
  1451  071B  00E6               	movwf	UART_Printf@v_num_u32+2
  1452  071C  0A84               	incf	4,f
  1453  071D  0800               	movf	0,w
  1454  071E  00E7               	movwf	UART_Printf@v_num_u32+3
  1455  071F  3004               	movlw	4
  1456  0720  00D7               	movwf	??_UART_Printf
  1457  0721  0857               	movf	??_UART_Printf,w
  1458  0722  07ED               	addwf	UART_Printf@argp,f
  1459                           
  1460                           ;uart.c: 499: UART_TxNumber(16u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1461  0723  0867               	movf	UART_Printf@v_num_u32+3,w
  1462  0724  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1463  0725  0866               	movf	UART_Printf@v_num_u32+2,w
  1464  0726  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1465  0727  0865               	movf	UART_Printf@v_num_u32+1,w
  1466  0728  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1467  0729  0864               	movf	UART_Printf@v_num_u32,w
  1468  072A  00A4               	movwf	UART_TxNumber@v_number_u32
  1469  072B  086C               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1470  072C  00D7               	movwf	??_UART_Printf
  1471  072D  0857               	movf	??_UART_Printf,w
  1472  072E  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1473  072F  3010               	movlw	16
  1474  0730  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1475                           
  1476                           ;uart.c: 500: break;
  1477  0735  2FF5               	goto	l1817
  1478  0736                     l1777:	
  1479                           ;uart.c: 503: case 'b':
  1480                           
  1481                           
  1482                           ;uart.c: 504: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1483  0736  1283               	bcf	3,5	;RP0=0, select bank0
  1484  0737  1303               	bcf	3,6	;RP1=0, select bank0
  1485  0738  086D               	movf	UART_Printf@argp,w
  1486  0739  0084               	movwf	4
  1487  073A  1383               	bcf	3,7	;select IRP bank0
  1488  073B  0800               	movf	0,w
  1489  073C  00E8               	movwf	UART_Printf@v_num_u16
  1490  073D  0A84               	incf	4,f
  1491  073E  0800               	movf	0,w
  1492  073F  00E9               	movwf	UART_Printf@v_num_u16+1
  1493  0740  3002               	movlw	2
  1494  0741  00D7               	movwf	??_UART_Printf
  1495  0742  0857               	movf	??_UART_Printf,w
  1496  0743  07ED               	addwf	UART_Printf@argp,f
  1497                           
  1498                           ;uart.c: 506: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1499  0744  0A6C               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1500  0745  1D03               	btfss	3,2
  1501  0746  2F4B               	goto	l1785
  1502                           
  1503                           ;uart.c: 507: v_numOfDigitsToTransmit_u8 = 16;
  1504  0747  3010               	movlw	16
  1505  0748  00D7               	movwf	??_UART_Printf
  1506  0749  0857               	movf	??_UART_Printf,w
  1507  074A  00EC               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1508  074B                     l1785:	
  1509                           
  1510                           ;uart.c: 509: UART_TxNumber(2u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1511  074B  0868               	movf	UART_Printf@v_num_u16,w
  1512  074C  00A4               	movwf	UART_TxNumber@v_number_u32
  1513  074D  0869               	movf	UART_Printf@v_num_u16+1,w
  1514  074E  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1515  074F  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1516  0750  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1517  0751  086C               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1518  0752  00D7               	movwf	??_UART_Printf
  1519  0753  0857               	movf	??_UART_Printf,w
  1520  0754  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1521  0755  3002               	movlw	2
  1522  0756  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1523                           
  1524                           ;uart.c: 510: break;
  1525  075B  2FF5               	goto	l1817
  1526  075C                     l1787:	
  1527                           ;uart.c: 512: case 'B':
  1528                           
  1529                           
  1530                           ;uart.c: 513: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1531  075C  1283               	bcf	3,5	;RP0=0, select bank0
  1532  075D  1303               	bcf	3,6	;RP1=0, select bank0
  1533  075E  086D               	movf	UART_Printf@argp,w
  1534  075F  0084               	movwf	4
  1535  0760  1383               	bcf	3,7	;select IRP bank0
  1536  0761  0800               	movf	0,w
  1537  0762  00E4               	movwf	UART_Printf@v_num_u32
  1538  0763  0A84               	incf	4,f
  1539  0764  0800               	movf	0,w
  1540  0765  00E5               	movwf	UART_Printf@v_num_u32+1
  1541  0766  0A84               	incf	4,f
  1542  0767  0800               	movf	0,w
  1543  0768  00E6               	movwf	UART_Printf@v_num_u32+2
  1544  0769  0A84               	incf	4,f
  1545  076A  0800               	movf	0,w
  1546  076B  00E7               	movwf	UART_Printf@v_num_u32+3
  1547  076C  3004               	movlw	4
  1548  076D  00D7               	movwf	??_UART_Printf
  1549  076E  0857               	movf	??_UART_Printf,w
  1550  076F  07ED               	addwf	UART_Printf@argp,f
  1551                           
  1552                           ;uart.c: 515: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1553  0770  0A6C               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1554  0771  1D03               	btfss	3,2
  1555  0772  2F77               	goto	l1795
  1556                           
  1557                           ;uart.c: 516: v_numOfDigitsToTransmit_u8 = 32;
  1558  0773  3020               	movlw	32
  1559  0774  00D7               	movwf	??_UART_Printf
  1560  0775  0857               	movf	??_UART_Printf,w
  1561  0776  00EC               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1562  0777                     l1795:	
  1563                           
  1564                           ;uart.c: 518: UART_TxNumber(2u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1565  0777  0867               	movf	UART_Printf@v_num_u32+3,w
  1566  0778  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1567  0779  0866               	movf	UART_Printf@v_num_u32+2,w
  1568  077A  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1569  077B  0865               	movf	UART_Printf@v_num_u32+1,w
  1570  077C  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1571  077D  0864               	movf	UART_Printf@v_num_u32,w
  1572  077E  00A4               	movwf	UART_TxNumber@v_number_u32
  1573  077F  086C               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1574  0780  00D7               	movwf	??_UART_Printf
  1575  0781  0857               	movf	??_UART_Printf,w
  1576  0782  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1577  0783  3002               	movlw	2
  1578  0784  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1579                           
  1580                           ;uart.c: 519: break;
  1581  0789  2FF5               	goto	l1817
  1582  078A                     l1797:	
  1583                           ;uart.c: 522: case 'F':
  1584                           
  1585                           
  1586                           ;uart.c: 523: case 'f':
  1587                           ;uart.c: 525: v_floatNum_f32 = (*(double *)__va_arg((*(double **)argp), (double)0));
  1588  078A  1283               	bcf	3,5	;RP0=0, select bank0
  1589  078B  1303               	bcf	3,6	;RP1=0, select bank0
  1590  078C  086D               	movf	UART_Printf@argp,w
  1591  078D  0084               	movwf	4
  1592  078E  1383               	bcf	3,7	;select IRP bank0
  1593  078F  0800               	movf	0,w
  1594  0790  00D9               	movwf	UART_Printf@v_floatNum_f32
  1595  0791  0A84               	incf	4,f
  1596  0792  0800               	movf	0,w
  1597  0793  00DA               	movwf	UART_Printf@v_floatNum_f32+1
  1598  0794  0A84               	incf	4,f
  1599  0795  0800               	movf	0,w
  1600  0796  00DB               	movwf	UART_Printf@v_floatNum_f32+2
  1601  0797  3003               	movlw	3
  1602  0798  00D7               	movwf	??_UART_Printf
  1603  0799  0857               	movf	??_UART_Printf,w
  1604  079A  07ED               	addwf	UART_Printf@argp,f
  1605                           
  1606                           ;uart.c: 526: UART_TxFloatNumber(v_floatNum_f32);
  1607  079B  0859               	movf	UART_Printf@v_floatNum_f32,w
  1608  079C  00C3               	movwf	UART_TxFloatNumber@v_floatNumber_f32
  1609  079D  085A               	movf	UART_Printf@v_floatNum_f32+1,w
  1610  079E  00C4               	movwf	UART_TxFloatNumber@v_floatNumber_f32+1
  1611  079F  085B               	movf	UART_Printf@v_floatNum_f32+2,w
  1612  07A0  00C5               	movwf	UART_TxFloatNumber@v_floatNumber_f32+2
  1613  07A1  120A  118A  225F  120A  118A  	fcall	_UART_TxFloatNumber
  1614                           
  1615                           ;uart.c: 528: break;
  1616  07A6  2FF5               	goto	l1817
  1617  07A7                     l1803:	
  1618                           ;uart.c: 531: case 'S':
  1619                           
  1620                           
  1621                           ;uart.c: 532: case 's':
  1622                           ;uart.c: 533: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  1623  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1624  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1625  07A9  086D               	movf	UART_Printf@argp,w
  1626  07AA  0084               	movwf	4
  1627  07AB  1383               	bcf	3,7	;select IRP bank0
  1628  07AC  0800               	movf	0,w
  1629  07AD  00D7               	movwf	??_UART_Printf
  1630  07AE  0857               	movf	??_UART_Printf,w
  1631  07AF  00DC               	movwf	UART_Printf@str
  1632  07B0  3001               	movlw	1
  1633  07B1  00D7               	movwf	??_UART_Printf
  1634  07B2  0857               	movf	??_UART_Printf,w
  1635  07B3  07ED               	addwf	UART_Printf@argp,f
  1636                           
  1637                           ;uart.c: 534: UART_TxString(str);
  1638  07B4  085C               	movf	UART_Printf@str,w
  1639  07B5  120A  158A  2646  120A  118A  	fcall	_UART_TxString
  1640                           
  1641                           ;uart.c: 535: break;
  1642  07BA  2FF5               	goto	l1817
  1643  07BB                     l1809:	
  1644                           ;uart.c: 537: case '%':
  1645                           
  1646                           
  1647                           ;uart.c: 538: UART_TxChar('%');
  1648  07BB  3025               	movlw	37
  1649  07BC  2FF0               	goto	L1
  1650  07BD                     l1813:	
  1651                           ;uart.c: 540: }
  1652                           
  1653                           ;uart.c: 539: break;
  1654                           
  1655  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1656  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1657  07BF  086B               	movf	UART_Printf@ch,w
  1658                           
  1659                           ; Switch size 1, requested type "space"
  1660                           ; Number of cases is 15, Range of values is 37 to 120
  1661                           ; switch strategies available:
  1662                           ; Name         Instructions Cycles
  1663                           ; simple_byte           46    24 (average)
  1664                           ; direct_byte          263    11 (fixed)
  1665                           ; jumptable            263     9 (fixed)
  1666                           ;	Chosen strategy is simple_byte
  1667  07C0  3A25               	xorlw	37	; case 37
  1668  07C1  1903               	skipnz
  1669  07C2  2FBB               	goto	l1809
  1670  07C3  3A67               	xorlw	103	; case 66
  1671  07C4  1903               	skipnz
  1672  07C5  2F5C               	goto	l1787
  1673  07C6  3A01               	xorlw	1	; case 67
  1674  07C7  1903               	skipnz
  1675  07C8  2E31               	goto	l1723
  1676  07C9  3A07               	xorlw	7	; case 68
  1677  07CA  1903               	skipnz
  1678  07CB  2E6E               	goto	l1741
  1679  07CC  3A02               	xorlw	2	; case 70
  1680  07CD  1903               	skipnz
  1681  07CE  2F8A               	goto	l1797
  1682  07CF  3A15               	xorlw	21	; case 83
  1683  07D0  1903               	skipnz
  1684  07D1  2FA7               	goto	l1803
  1685  07D2  3A06               	xorlw	6	; case 85
  1686  07D3  1903               	skipnz
  1687  07D4  2EC9               	goto	l1759
  1688  07D5  3A0D               	xorlw	13	; case 88
  1689  07D6  1903               	skipnz
  1690  07D7  2F0F               	goto	l1771
  1691  07D8  3A3A               	xorlw	58	; case 98
  1692  07D9  1903               	skipnz
  1693  07DA  2F36               	goto	l1777
  1694  07DB  3A01               	xorlw	1	; case 99
  1695  07DC  1903               	skipnz
  1696  07DD  2E31               	goto	l1723
  1697  07DE  3A07               	xorlw	7	; case 100
  1698  07DF  1903               	skipnz
  1699  07E0  2E3D               	goto	l1729
  1700  07E1  3A02               	xorlw	2	; case 102
  1701  07E2  1903               	skipnz
  1702  07E3  2F8A               	goto	l1797
  1703  07E4  3A15               	xorlw	21	; case 115
  1704  07E5  1903               	skipnz
  1705  07E6  2FA7               	goto	l1803
  1706  07E7  3A06               	xorlw	6	; case 117
  1707  07E8  1903               	skipnz
  1708  07E9  2EAA               	goto	l1753
  1709  07EA  3A0D               	xorlw	13	; case 120
  1710  07EB  1903               	skipnz
  1711  07EC  2EF0               	goto	l1765
  1712  07ED  2FF5               	goto	l1817
  1713                           
  1714                           ;uart.c: 541: }
  1715  07EE  2FF5               	goto	l1817
  1716  07EF                     l1815:	
  1717                           
  1718                           ;uart.c: 542: else
  1719                           ;uart.c: 543: {
  1720                           ;uart.c: 545: UART_TxChar(ch);
  1721  07EF  086B               	movf	UART_Printf@ch,w
  1722  07F0                     L1:	
  1723  07F0  120A  158A  2608  120A  118A  	fcall	_UART_TxChar
  1724  07F5                     l1817:	
  1725  07F5  3001               	movlw	1
  1726  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  1727  07F7  1303               	bcf	3,6	;RP1=0, select bank0
  1728  07F8  00D7               	movwf	??_UART_Printf
  1729  07F9  0857               	movf	??_UART_Printf,w
  1730  07FA  07EA               	addwf	UART_Printf@ptr,f
  1731  07FB  2DD5               	goto	l1819
  1732  07FC                     __end_of_UART_Printf:	
  1733                           
  1734                           	psect	text2
  1735  0E46                     __ptext2:	
  1736 ;; *************** function _UART_TxString *****************
  1737 ;; Defined at:
  1738 ;;		line 168 in file "../00-libfiles/uart.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  ptr_string      1    wreg     PTR unsigned char 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  ptr_string      1    2[COMMON] PTR unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         0       0       0       0       0
  1753 ;;      Locals:         1       0       0       0       0
  1754 ;;      Temps:          1       0       0       0       0
  1755 ;;      Totals:         2       0       0       0       0
  1756 ;;Total ram usage:        2 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    1
  1759 ;; This function calls:
  1760 ;;		_UART_TxChar
  1761 ;; This function is called by:
  1762 ;;		_UART_Printf
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           
  1767                           ;psect for function _UART_TxString
  1768  0E46                     _UART_TxString:	
  1769                           
  1770                           ;incstack = 0
  1771                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1772                           ;UART_TxString@ptr_string stored from wreg
  1773  0E46  00F2               	movwf	UART_TxString@ptr_string
  1774  0E47                     l1649:	
  1775                           ;uart.c: 170: while(*ptr_string)
  1776                           
  1777  0E47  0872               	movf	UART_TxString@ptr_string,w
  1778  0E48  0084               	movwf	4
  1779  0E49  1383               	bcf	3,7	;select IRP bank0
  1780  0E4A  0800               	movf	0,w
  1781  0E4B  1903               	btfsc	3,2
  1782  0E4C  0008               	return
  1783                           
  1784                           ;uart.c: 171: UART_TxChar(*ptr_string++);
  1785  0E4D  0872               	movf	UART_TxString@ptr_string,w
  1786  0E4E  0084               	movwf	4
  1787  0E4F  1383               	bcf	3,7	;select IRP bank0
  1788  0E50  0800               	movf	0,w
  1789  0E51  120A  158A  2608  120A  158A  	fcall	_UART_TxChar
  1790  0E56  3001               	movlw	1
  1791  0E57  00F1               	movwf	??_UART_TxString
  1792  0E58  0871               	movf	??_UART_TxString,w
  1793  0E59  07F2               	addwf	UART_TxString@ptr_string,f
  1794  0E5A  2E47               	goto	l1649
  1795  0E5B                     __end_of_UART_TxString:	
  1796                           
  1797                           	psect	text3
  1798  025F                     __ptext3:	
  1799 ;; *************** function _UART_TxFloatNumber *****************
  1800 ;; Defined at:
  1801 ;;		line 348 in file "../00-libfiles/uart.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  v_floatNumbe    3   35[BANK0 ] float 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  v_tempNumber    4   39[BANK0 ] unsigned long 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1815 ;;      Params:         0       3       0       0       0
  1816 ;;      Locals:         0       4       0       0       0
  1817 ;;      Temps:          0       1       0       0       0
  1818 ;;      Totals:         0       8       0       0       0
  1819 ;;Total ram usage:        8 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    2
  1822 ;; This function calls:
  1823 ;;		_UART_TxChar
  1824 ;;		_UART_TxNumber
  1825 ;;		___ftadd
  1826 ;;		___ftmul
  1827 ;;		___ftneg
  1828 ;;		___fttol
  1829 ;;		___lltoft
  1830 ;; This function is called by:
  1831 ;;		_UART_Printf
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           
  1836                           ;psect for function _UART_TxFloatNumber
  1837  025F                     _UART_TxFloatNumber:	
  1838                           
  1839                           ;uart.c: 350: uint32_t v_tempNumber_u32;
  1840                           ;uart.c: 357: v_tempNumber_u32 = (uint32_t) v_floatNumber_f32;
  1841                           
  1842                           ;incstack = 0
  1843                           ; Regs used in _UART_TxFloatNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1844  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1845  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1846  0261  0843               	movf	UART_TxFloatNumber@v_floatNumber_f32,w
  1847  0262  00AA               	movwf	___fttol@f1
  1848  0263  0844               	movf	UART_TxFloatNumber@v_floatNumber_f32+1,w
  1849  0264  00AB               	movwf	___fttol@f1+1
  1850  0265  0845               	movf	UART_TxFloatNumber@v_floatNumber_f32+2,w
  1851  0266  00AC               	movwf	___fttol@f1+2
  1852  0267  120A  118A  2139  120A  118A  	fcall	___fttol
  1853  026C  1283               	bcf	3,5	;RP0=0, select bank0
  1854  026D  1303               	bcf	3,6	;RP1=0, select bank0
  1855  026E  082D               	movf	?___fttol+3,w
  1856  026F  00CA               	movwf	UART_TxFloatNumber@v_tempNumber_u32+3
  1857  0270  082C               	movf	?___fttol+2,w
  1858  0271  00C9               	movwf	UART_TxFloatNumber@v_tempNumber_u32+2
  1859  0272  082B               	movf	?___fttol+1,w
  1860  0273  00C8               	movwf	UART_TxFloatNumber@v_tempNumber_u32+1
  1861  0274  082A               	movf	?___fttol,w
  1862  0275  00C7               	movwf	UART_TxFloatNumber@v_tempNumber_u32
  1863                           
  1864                           ;uart.c: 358: UART_TxNumber(10u,v_tempNumber_u32,0xffu);
  1865  0276  084A               	movf	UART_TxFloatNumber@v_tempNumber_u32+3,w
  1866  0277  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1867  0278  0849               	movf	UART_TxFloatNumber@v_tempNumber_u32+2,w
  1868  0279  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1869  027A  0848               	movf	UART_TxFloatNumber@v_tempNumber_u32+1,w
  1870  027B  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1871  027C  0847               	movf	UART_TxFloatNumber@v_tempNumber_u32,w
  1872  027D  00A4               	movwf	UART_TxNumber@v_number_u32
  1873  027E  30FF               	movlw	255
  1874  027F  00C6               	movwf	??_UART_TxFloatNumber
  1875  0280  0846               	movf	??_UART_TxFloatNumber,w
  1876  0281  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1877  0282  300A               	movlw	10
  1878  0283  120A  118A  23CF  120A  118A  	fcall	_UART_TxNumber
  1879                           
  1880                           ;uart.c: 360: UART_TxChar('.');
  1881  0288  302E               	movlw	46
  1882  0289  120A  158A  2608  120A  118A  	fcall	_UART_TxChar
  1883                           
  1884                           ;uart.c: 362: v_floatNumber_f32 = v_floatNumber_f32 - v_tempNumber_u32;
  1885  028E  1283               	bcf	3,5	;RP0=0, select bank0
  1886  028F  1303               	bcf	3,6	;RP1=0, select bank0
  1887  0290  0843               	movf	UART_TxFloatNumber@v_floatNumber_f32,w
  1888  0291  00A3               	movwf	___ftadd@f1
  1889  0292  0844               	movf	UART_TxFloatNumber@v_floatNumber_f32+1,w
  1890  0293  00A4               	movwf	___ftadd@f1+1
  1891  0294  0845               	movf	UART_TxFloatNumber@v_floatNumber_f32+2,w
  1892  0295  00A5               	movwf	___ftadd@f1+2
  1893  0296  084A               	movf	UART_TxFloatNumber@v_tempNumber_u32+3,w
  1894  0297  00FB               	movwf	___lltoft@c+3
  1895  0298  0849               	movf	UART_TxFloatNumber@v_tempNumber_u32+2,w
  1896  0299  00FA               	movwf	___lltoft@c+2
  1897  029A  0848               	movf	UART_TxFloatNumber@v_tempNumber_u32+1,w
  1898  029B  00F9               	movwf	___lltoft@c+1
  1899  029C  0847               	movf	UART_TxFloatNumber@v_tempNumber_u32,w
  1900  029D  00F8               	movwf	___lltoft@c
  1901  029E  120A  158A  26B1  120A  118A  	fcall	___lltoft
  1902  02A3  0878               	movf	?___lltoft,w
  1903  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1904  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  1905  02A6  00A0               	movwf	___ftneg@f1
  1906  02A7  0879               	movf	?___lltoft+1,w
  1907  02A8  00A1               	movwf	___ftneg@f1+1
  1908  02A9  087A               	movf	?___lltoft+2,w
  1909  02AA  00A2               	movwf	___ftneg@f1+2
  1910  02AB  120A  158A  2611  120A  118A  	fcall	___ftneg
  1911  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1912  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1913  02B2  0820               	movf	?___ftneg,w
  1914  02B3  00A6               	movwf	___ftadd@f2
  1915  02B4  0821               	movf	?___ftneg+1,w
  1916  02B5  00A7               	movwf	___ftadd@f2+1
  1917  02B6  0822               	movf	?___ftneg+2,w
  1918  02B7  00A8               	movwf	___ftadd@f2+2
  1919  02B8  120A  118A  24C1  120A  118A  	fcall	___ftadd
  1920  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1921  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1922  02BF  0823               	movf	?___ftadd,w
  1923  02C0  00C3               	movwf	UART_TxFloatNumber@v_floatNumber_f32
  1924  02C1  0824               	movf	?___ftadd+1,w
  1925  02C2  00C4               	movwf	UART_TxFloatNumber@v_floatNumber_f32+1
  1926  02C3  0825               	movf	?___ftadd+2,w
  1927  02C4  00C5               	movwf	UART_TxFloatNumber@v_floatNumber_f32+2
  1928                           
  1929                           ;uart.c: 363: v_tempNumber_u32 = v_floatNumber_f32 * 1000000;
  1930  02C5  0843               	movf	UART_TxFloatNumber@v_floatNumber_f32,w
  1931  02C6  00FB               	movwf	___ftmul@f2
  1932  02C7  0844               	movf	UART_TxFloatNumber@v_floatNumber_f32+1,w
  1933  02C8  00FC               	movwf	___ftmul@f2+1
  1934  02C9  0845               	movf	UART_TxFloatNumber@v_floatNumber_f32+2,w
  1935  02CA  00FD               	movwf	___ftmul@f2+2
  1936  02CB  3024               	movlw	36
  1937  02CC  00F8               	movwf	___ftmul@f1
  1938  02CD  3074               	movlw	116
  1939  02CE  00F9               	movwf	___ftmul@f1+1
  1940  02CF  3049               	movlw	73
  1941  02D0  00FA               	movwf	___ftmul@f1+2
  1942  02D1  120A  118A  22FE  120A  118A  	fcall	___ftmul
  1943  02D6  0878               	movf	?___ftmul,w
  1944  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1945  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1946  02D9  00AA               	movwf	___fttol@f1
  1947  02DA  0879               	movf	?___ftmul+1,w
  1948  02DB  00AB               	movwf	___fttol@f1+1
  1949  02DC  087A               	movf	?___ftmul+2,w
  1950  02DD  00AC               	movwf	___fttol@f1+2
  1951  02DE  120A  118A  2139  120A  118A  	fcall	___fttol
  1952  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  1953  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  1954  02E5  082D               	movf	?___fttol+3,w
  1955  02E6  00CA               	movwf	UART_TxFloatNumber@v_tempNumber_u32+3
  1956  02E7  082C               	movf	?___fttol+2,w
  1957  02E8  00C9               	movwf	UART_TxFloatNumber@v_tempNumber_u32+2
  1958  02E9  082B               	movf	?___fttol+1,w
  1959  02EA  00C8               	movwf	UART_TxFloatNumber@v_tempNumber_u32+1
  1960  02EB  082A               	movf	?___fttol,w
  1961  02EC  00C7               	movwf	UART_TxFloatNumber@v_tempNumber_u32
  1962                           
  1963                           ;uart.c: 364: UART_TxNumber(10u,v_tempNumber_u32,0xffu);
  1964  02ED  084A               	movf	UART_TxFloatNumber@v_tempNumber_u32+3,w
  1965  02EE  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1966  02EF  0849               	movf	UART_TxFloatNumber@v_tempNumber_u32+2,w
  1967  02F0  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1968  02F1  0848               	movf	UART_TxFloatNumber@v_tempNumber_u32+1,w
  1969  02F2  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1970  02F3  0847               	movf	UART_TxFloatNumber@v_tempNumber_u32,w
  1971  02F4  00A4               	movwf	UART_TxNumber@v_number_u32
  1972  02F5  30FF               	movlw	255
  1973  02F6  00C6               	movwf	??_UART_TxFloatNumber
  1974  02F7  0846               	movf	??_UART_TxFloatNumber,w
  1975  02F8  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1976  02F9  300A               	movlw	10
  1977  02FA  120A  118A  23CF   	fcall	_UART_TxNumber
  1978  02FD  0008               	return
  1979  02FE                     __end_of_UART_TxFloatNumber:	
  1980                           
  1981                           	psect	text4
  1982  0EB1                     __ptext4:	
  1983 ;; *************** function ___lltoft *****************
  1984 ;; Defined at:
  1985 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lltoft.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  c               4    8[COMMON] unsigned long 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  exp             1   13[COMMON] unsigned char 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  3    8[COMMON] float 
  1992 ;; Registers used:
  1993 ;;		wreg, status,2, status,0, pclath, cstack
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1999 ;;      Params:         4       0       0       0       0
  2000 ;;      Locals:         1       0       0       0       0
  2001 ;;      Temps:          1       0       0       0       0
  2002 ;;      Totals:         6       0       0       0       0
  2003 ;;Total ram usage:        6 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    1
  2006 ;; This function calls:
  2007 ;;		___ftpack
  2008 ;; This function is called by:
  2009 ;;		_UART_TxFloatNumber
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           
  2014                           ;psect for function ___lltoft
  2015  0EB1                     ___lltoft:	
  2016                           
  2017                           ;incstack = 0
  2018                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  2019  0EB1  308E               	movlw	142
  2020  0EB2  00FC               	movwf	??___lltoft
  2021  0EB3  087C               	movf	??___lltoft,w
  2022  0EB4  00FD               	movwf	___lltoft@exp
  2023  0EB5                     l1629:	
  2024  0EB5  30FF               	movlw	255
  2025  0EB6  057B               	andwf	___lltoft@c+3,w
  2026  0EB7  1903               	btfsc	3,2
  2027  0EB8  2EC7               	goto	l1631
  2028  0EB9  3001               	movlw	1
  2029  0EBA                     u2095:	
  2030  0EBA  1003               	clrc
  2031  0EBB  0CFB               	rrf	___lltoft@c+3,f
  2032  0EBC  0CFA               	rrf	___lltoft@c+2,f
  2033  0EBD  0CF9               	rrf	___lltoft@c+1,f
  2034  0EBE  0CF8               	rrf	___lltoft@c,f
  2035  0EBF  3EFF               	addlw	-1
  2036  0EC0  1D03               	skipz
  2037  0EC1  2EBA               	goto	u2095
  2038  0EC2  3001               	movlw	1
  2039  0EC3  00FC               	movwf	??___lltoft
  2040  0EC4  087C               	movf	??___lltoft,w
  2041  0EC5  07FD               	addwf	___lltoft@exp,f
  2042  0EC6  2EB5               	goto	l1629
  2043  0EC7                     l1631:	
  2044  0EC7  0878               	movf	___lltoft@c,w
  2045  0EC8  00F0               	movwf	___ftpack@arg
  2046  0EC9  0879               	movf	___lltoft@c+1,w
  2047  0ECA  00F1               	movwf	___ftpack@arg+1
  2048  0ECB  087A               	movf	___lltoft@c+2,w
  2049  0ECC  00F2               	movwf	___ftpack@arg+2
  2050  0ECD  087D               	movf	___lltoft@exp,w
  2051  0ECE  00FC               	movwf	??___lltoft
  2052  0ECF  087C               	movf	??___lltoft,w
  2053  0ED0  00F3               	movwf	___ftpack@exp
  2054  0ED1  01F4               	clrf	___ftpack@sign
  2055  0ED2  120A  158A  2794   	fcall	___ftpack
  2056  0ED5  0870               	movf	?___ftpack,w
  2057  0ED6  00F8               	movwf	?___lltoft
  2058  0ED7  0871               	movf	?___ftpack+1,w
  2059  0ED8  00F9               	movwf	?___lltoft+1
  2060  0ED9  0872               	movf	?___ftpack+2,w
  2061  0EDA  00FA               	movwf	?___lltoft+2
  2062  0EDB  0008               	return
  2063  0EDC                     __end_of___lltoft:	
  2064                           
  2065                           	psect	text5
  2066  0139                     __ptext5:	
  2067 ;; *************** function ___fttol *****************
  2068 ;; Defined at:
  2069 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\fttol.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  f1              3   10[BANK0 ] float 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  lval            4   19[BANK0 ] unsigned long 
  2074 ;;  exp1            1   23[BANK0 ] unsigned char 
  2075 ;;  sign1           1   18[BANK0 ] unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  4   10[BANK0 ] long 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2085 ;;      Params:         0       4       0       0       0
  2086 ;;      Locals:         0       6       0       0       0
  2087 ;;      Temps:          0       4       0       0       0
  2088 ;;      Totals:         0      14       0       0       0
  2089 ;;Total ram usage:       14 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_UART_TxFloatNumber
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           
  2099                           ;psect for function ___fttol
  2100  0139                     ___fttol:	
  2101                           
  2102                           ;incstack = 0
  2103                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2104  0139  1283               	bcf	3,5	;RP0=0, select bank0
  2105  013A  1303               	bcf	3,6	;RP1=0, select bank0
  2106  013B  082A               	movf	___fttol@f1,w
  2107  013C  00AE               	movwf	??___fttol
  2108  013D  082B               	movf	___fttol@f1+1,w
  2109  013E  00AF               	movwf	??___fttol+1
  2110  013F  082C               	movf	___fttol@f1+2,w
  2111  0140  00B0               	movwf	??___fttol+2
  2112  0141  1003               	clrc
  2113  0142  0D2F               	rlf	??___fttol+1,w
  2114  0143  0D30               	rlf	??___fttol+2,w
  2115  0144  00B1               	movwf	??___fttol+3
  2116  0145  0831               	movf	??___fttol+3,w
  2117  0146  00B7               	movwf	___fttol@exp1
  2118  0147  0837               	movf	___fttol@exp1,w
  2119  0148  1D03               	btfss	3,2
  2120  0149  2953               	goto	l1589
  2121  014A  3000               	movlw	0
  2122  014B  00AD               	movwf	?___fttol+3
  2123  014C  3000               	movlw	0
  2124  014D  00AC               	movwf	?___fttol+2
  2125  014E  3000               	movlw	0
  2126  014F  00AB               	movwf	?___fttol+1
  2127  0150  3000               	movlw	0
  2128  0151  00AA               	movwf	?___fttol
  2129  0152  0008               	return
  2130  0153                     l1589:	
  2131  0153  082A               	movf	___fttol@f1,w
  2132  0154  00AE               	movwf	??___fttol
  2133  0155  082B               	movf	___fttol@f1+1,w
  2134  0156  00AF               	movwf	??___fttol+1
  2135  0157  082C               	movf	___fttol@f1+2,w
  2136  0158  00B0               	movwf	??___fttol+2
  2137  0159  3017               	movlw	23
  2138  015A                     u2005:	
  2139  015A  1003               	clrc
  2140  015B  0CB0               	rrf	??___fttol+2,f
  2141  015C  0CAF               	rrf	??___fttol+1,f
  2142  015D  0CAE               	rrf	??___fttol,f
  2143  015E  3EFF               	addlw	-1
  2144  015F  1D03               	skipz
  2145  0160  295A               	goto	u2005
  2146  0161  082E               	movf	??___fttol,w
  2147  0162  00B1               	movwf	??___fttol+3
  2148  0163  0831               	movf	??___fttol+3,w
  2149  0164  00B2               	movwf	___fttol@sign1
  2150  0165  17AB               	bsf	___fttol@f1+1,7
  2151  0166  30FF               	movlw	255
  2152  0167  05AA               	andwf	___fttol@f1,f
  2153  0168  30FF               	movlw	255
  2154  0169  05AB               	andwf	___fttol@f1+1,f
  2155  016A  3000               	movlw	0
  2156  016B  05AC               	andwf	___fttol@f1+2,f
  2157  016C  082A               	movf	___fttol@f1,w
  2158  016D  00B3               	movwf	___fttol@lval
  2159  016E  082B               	movf	___fttol@f1+1,w
  2160  016F  00B4               	movwf	___fttol@lval+1
  2161  0170  082C               	movf	___fttol@f1+2,w
  2162  0171  00B5               	movwf	___fttol@lval+2
  2163  0172  01B6               	clrf	___fttol@lval+3
  2164  0173  308E               	movlw	142
  2165  0174  02B7               	subwf	___fttol@exp1,f
  2166  0175  1FB7               	btfss	___fttol@exp1,7
  2167  0176  2995               	goto	l1609
  2168  0177  0837               	movf	___fttol@exp1,w
  2169  0178  3A80               	xorlw	128
  2170  0179  3E8F               	addlw	143
  2171  017A  1803               	skipnc
  2172  017B  2985               	goto	l1607
  2173  017C  3000               	movlw	0
  2174  017D  00AD               	movwf	?___fttol+3
  2175  017E  3000               	movlw	0
  2176  017F  00AC               	movwf	?___fttol+2
  2177  0180  3000               	movlw	0
  2178  0181  00AB               	movwf	?___fttol+1
  2179  0182  3000               	movlw	0
  2180  0183  00AA               	movwf	?___fttol
  2181  0184  0008               	return
  2182  0185                     l1607:	
  2183  0185  3001               	movlw	1
  2184  0186                     u2035:	
  2185  0186  1003               	clrc
  2186  0187  0CB6               	rrf	___fttol@lval+3,f
  2187  0188  0CB5               	rrf	___fttol@lval+2,f
  2188  0189  0CB4               	rrf	___fttol@lval+1,f
  2189  018A  0CB3               	rrf	___fttol@lval,f
  2190  018B  3EFF               	addlw	-1
  2191  018C  1D03               	skipz
  2192  018D  2986               	goto	u2035
  2193  018E  3001               	movlw	1
  2194  018F  00AE               	movwf	??___fttol
  2195  0190  082E               	movf	??___fttol,w
  2196  0191  07B7               	addwf	___fttol@exp1,f
  2197  0192  1903               	btfsc	3,2
  2198  0193  29B0               	goto	l1617
  2199  0194  2985               	goto	l1607
  2200  0195                     l1609:	
  2201  0195  3018               	movlw	24
  2202  0196  0237               	subwf	___fttol@exp1,w
  2203  0197  1C03               	skipc
  2204  0198  29AD               	goto	l583
  2205  0199  3000               	movlw	0
  2206  019A  00AD               	movwf	?___fttol+3
  2207  019B  3000               	movlw	0
  2208  019C  00AC               	movwf	?___fttol+2
  2209  019D  3000               	movlw	0
  2210  019E  00AB               	movwf	?___fttol+1
  2211  019F  3000               	movlw	0
  2212  01A0  00AA               	movwf	?___fttol
  2213  01A1  0008               	return
  2214  01A2                     l1615:	
  2215  01A2  3001               	movlw	1
  2216  01A3  00AE               	movwf	??___fttol
  2217  01A4                     u2065:	
  2218  01A4  1003               	clrc
  2219  01A5  0DB3               	rlf	___fttol@lval,f
  2220  01A6  0DB4               	rlf	___fttol@lval+1,f
  2221  01A7  0DB5               	rlf	___fttol@lval+2,f
  2222  01A8  0DB6               	rlf	___fttol@lval+3,f
  2223  01A9  0BAE               	decfsz	??___fttol,f
  2224  01AA  29A4               	goto	u2065
  2225  01AB  3001               	movlw	1
  2226  01AC  02B7               	subwf	___fttol@exp1,f
  2227  01AD                     l583:	
  2228  01AD  0837               	movf	___fttol@exp1,w
  2229  01AE  1D03               	btfss	3,2
  2230  01AF  29A2               	goto	l1615
  2231  01B0                     l1617:	
  2232  01B0  0832               	movf	___fttol@sign1,w
  2233  01B1  1903               	btfsc	3,2
  2234  01B2  29BE               	goto	l1621
  2235  01B3  09B3               	comf	___fttol@lval,f
  2236  01B4  09B4               	comf	___fttol@lval+1,f
  2237  01B5  09B5               	comf	___fttol@lval+2,f
  2238  01B6  09B6               	comf	___fttol@lval+3,f
  2239  01B7  0AB3               	incf	___fttol@lval,f
  2240  01B8  1903               	skipnz
  2241  01B9  0AB4               	incf	___fttol@lval+1,f
  2242  01BA  1903               	skipnz
  2243  01BB  0AB5               	incf	___fttol@lval+2,f
  2244  01BC  1903               	skipnz
  2245  01BD  0AB6               	incf	___fttol@lval+3,f
  2246  01BE                     l1621:	
  2247  01BE  0836               	movf	___fttol@lval+3,w
  2248  01BF  00AD               	movwf	?___fttol+3
  2249  01C0  0835               	movf	___fttol@lval+2,w
  2250  01C1  00AC               	movwf	?___fttol+2
  2251  01C2  0834               	movf	___fttol@lval+1,w
  2252  01C3  00AB               	movwf	?___fttol+1
  2253  01C4  0833               	movf	___fttol@lval,w
  2254  01C5  00AA               	movwf	?___fttol
  2255  01C6  0008               	return
  2256  01C7                     __end_of___fttol:	
  2257                           
  2258                           	psect	text6
  2259  0E11                     __ptext6:	
  2260 ;; *************** function ___ftneg *****************
  2261 ;; Defined at:
  2262 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftneg.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  f1              3    0[BANK0 ] float 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  3    0[BANK0 ] float 
  2269 ;; Registers used:
  2270 ;;		wreg
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2276 ;;      Params:         0       3       0       0       0
  2277 ;;      Locals:         0       0       0       0       0
  2278 ;;      Temps:          0       0       0       0       0
  2279 ;;      Totals:         0       3       0       0       0
  2280 ;;Total ram usage:        3 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_UART_TxFloatNumber
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           
  2290                           ;psect for function ___ftneg
  2291  0E11                     ___ftneg:	
  2292                           
  2293                           ;incstack = 0
  2294                           ; Regs used in ___ftneg: [wreg]
  2295  0E11  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0E12  1303               	bcf	3,6	;RP1=0, select bank0
  2297  0E13  0822               	movf	___ftneg@f1+2,w
  2298  0E14  0421               	iorwf	___ftneg@f1+1,w
  2299  0E15  0420               	iorwf	___ftneg@f1,w
  2300  0E16  1903               	skipnz
  2301  0E17  0008               	return
  2302  0E18  3080               	movlw	128
  2303  0E19  06A2               	xorwf	___ftneg@f1+2,f
  2304  0E1A  0008               	return
  2305  0E1B                     __end_of___ftneg:	
  2306                           
  2307                           	psect	text7
  2308  02FE                     __ptext7:	
  2309 ;; *************** function ___ftmul *****************
  2310 ;; Defined at:
  2311 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftmul.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  f1              3    8[COMMON] float 
  2314 ;;  f2              3   11[COMMON] float 
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  2317 ;;  sign            1    9[BANK0 ] unsigned char 
  2318 ;;  cntr            1    8[BANK0 ] unsigned char 
  2319 ;;  exp             1    4[BANK0 ] unsigned char 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  3    8[COMMON] float 
  2322 ;; Registers used:
  2323 ;;		wreg, status,2, status,0, pclath, cstack
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2329 ;;      Params:         6       0       0       0       0
  2330 ;;      Locals:         0       6       0       0       0
  2331 ;;      Temps:          0       4       0       0       0
  2332 ;;      Totals:         6      10       0       0       0
  2333 ;;Total ram usage:       16 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; Hardware stack levels required when called:    1
  2336 ;; This function calls:
  2337 ;;		___ftpack
  2338 ;; This function is called by:
  2339 ;;		_UART_TxFloatNumber
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           
  2344                           ;psect for function ___ftmul
  2345  02FE                     ___ftmul:	
  2346                           
  2347                           ;incstack = 0
  2348                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2349  02FE  0878               	movf	___ftmul@f1,w
  2350  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2351  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2352  0301  00A0               	movwf	??___ftmul
  2353  0302  0879               	movf	___ftmul@f1+1,w
  2354  0303  00A1               	movwf	??___ftmul+1
  2355  0304  087A               	movf	___ftmul@f1+2,w
  2356  0305  00A2               	movwf	??___ftmul+2
  2357  0306  1003               	clrc
  2358  0307  0D21               	rlf	??___ftmul+1,w
  2359  0308  0D22               	rlf	??___ftmul+2,w
  2360  0309  00A3               	movwf	??___ftmul+3
  2361  030A  0823               	movf	??___ftmul+3,w
  2362  030B  00A4               	movwf	___ftmul@exp
  2363  030C  0824               	movf	___ftmul@exp,w
  2364  030D  1D03               	btfss	3,2
  2365  030E  2B16               	goto	l1531
  2366  030F  3000               	movlw	0
  2367  0310  00F8               	movwf	?___ftmul
  2368  0311  3000               	movlw	0
  2369  0312  00F9               	movwf	?___ftmul+1
  2370  0313  3000               	movlw	0
  2371  0314  00FA               	movwf	?___ftmul+2
  2372  0315  0008               	return
  2373  0316                     l1531:	
  2374  0316  087B               	movf	___ftmul@f2,w
  2375  0317  00A0               	movwf	??___ftmul
  2376  0318  087C               	movf	___ftmul@f2+1,w
  2377  0319  00A1               	movwf	??___ftmul+1
  2378  031A  087D               	movf	___ftmul@f2+2,w
  2379  031B  00A2               	movwf	??___ftmul+2
  2380  031C  1003               	clrc
  2381  031D  0D21               	rlf	??___ftmul+1,w
  2382  031E  0D22               	rlf	??___ftmul+2,w
  2383  031F  00A3               	movwf	??___ftmul+3
  2384  0320  0823               	movf	??___ftmul+3,w
  2385  0321  00A9               	movwf	___ftmul@sign
  2386  0322  0829               	movf	___ftmul@sign,w
  2387  0323  1D03               	btfss	3,2
  2388  0324  2B2C               	goto	l1537
  2389  0325  3000               	movlw	0
  2390  0326  00F8               	movwf	?___ftmul
  2391  0327  3000               	movlw	0
  2392  0328  00F9               	movwf	?___ftmul+1
  2393  0329  3000               	movlw	0
  2394  032A  00FA               	movwf	?___ftmul+2
  2395  032B  0008               	return
  2396  032C                     l1537:	
  2397  032C  0829               	movf	___ftmul@sign,w
  2398  032D  3E7B               	addlw	123
  2399  032E  00A0               	movwf	??___ftmul
  2400  032F  0820               	movf	??___ftmul,w
  2401  0330  07A4               	addwf	___ftmul@exp,f
  2402  0331  0878               	movf	___ftmul@f1,w
  2403  0332  00A0               	movwf	??___ftmul
  2404  0333  0879               	movf	___ftmul@f1+1,w
  2405  0334  00A1               	movwf	??___ftmul+1
  2406  0335  087A               	movf	___ftmul@f1+2,w
  2407  0336  00A2               	movwf	??___ftmul+2
  2408  0337  3010               	movlw	16
  2409  0338                     u1865:	
  2410  0338  1003               	clrc
  2411  0339  0CA2               	rrf	??___ftmul+2,f
  2412  033A  0CA1               	rrf	??___ftmul+1,f
  2413  033B  0CA0               	rrf	??___ftmul,f
  2414  033C  3EFF               	addlw	-1
  2415  033D  1D03               	skipz
  2416  033E  2B38               	goto	u1865
  2417  033F  0820               	movf	??___ftmul,w
  2418  0340  00A3               	movwf	??___ftmul+3
  2419  0341  0823               	movf	??___ftmul+3,w
  2420  0342  00A9               	movwf	___ftmul@sign
  2421  0343  087B               	movf	___ftmul@f2,w
  2422  0344  00A0               	movwf	??___ftmul
  2423  0345  087C               	movf	___ftmul@f2+1,w
  2424  0346  00A1               	movwf	??___ftmul+1
  2425  0347  087D               	movf	___ftmul@f2+2,w
  2426  0348  00A2               	movwf	??___ftmul+2
  2427  0349  3010               	movlw	16
  2428  034A                     u1875:	
  2429  034A  1003               	clrc
  2430  034B  0CA2               	rrf	??___ftmul+2,f
  2431  034C  0CA1               	rrf	??___ftmul+1,f
  2432  034D  0CA0               	rrf	??___ftmul,f
  2433  034E  3EFF               	addlw	-1
  2434  034F  1D03               	skipz
  2435  0350  2B4A               	goto	u1875
  2436  0351  0820               	movf	??___ftmul,w
  2437  0352  00A3               	movwf	??___ftmul+3
  2438  0353  0823               	movf	??___ftmul+3,w
  2439  0354  06A9               	xorwf	___ftmul@sign,f
  2440  0355  3080               	movlw	128
  2441  0356  00A0               	movwf	??___ftmul
  2442  0357  0820               	movf	??___ftmul,w
  2443  0358  05A9               	andwf	___ftmul@sign,f
  2444  0359  17F9               	bsf	___ftmul@f1+1,7
  2445  035A  17FC               	bsf	___ftmul@f2+1,7
  2446  035B  30FF               	movlw	255
  2447  035C  05FB               	andwf	___ftmul@f2,f
  2448  035D  30FF               	movlw	255
  2449  035E  05FC               	andwf	___ftmul@f2+1,f
  2450  035F  3000               	movlw	0
  2451  0360  05FD               	andwf	___ftmul@f2+2,f
  2452  0361  3000               	movlw	0
  2453  0362  00A5               	movwf	___ftmul@f3_as_product
  2454  0363  3000               	movlw	0
  2455  0364  00A6               	movwf	___ftmul@f3_as_product+1
  2456  0365  3000               	movlw	0
  2457  0366  00A7               	movwf	___ftmul@f3_as_product+2
  2458  0367  3007               	movlw	7
  2459  0368  00A0               	movwf	??___ftmul
  2460  0369  0820               	movf	??___ftmul,w
  2461  036A  00A8               	movwf	___ftmul@cntr
  2462  036B                     l1549:	
  2463  036B  1C78               	btfss	___ftmul@f1,0
  2464  036C  2B7B               	goto	l1553
  2465  036D  087B               	movf	___ftmul@f2,w
  2466  036E  07A5               	addwf	___ftmul@f3_as_product,f
  2467  036F  087C               	movf	___ftmul@f2+1,w
  2468  0370  1103               	clrz
  2469  0371  1803               	skipnc
  2470  0372  0A7C               	incf	___ftmul@f2+1,w
  2471  0373  1D03               	btfss	3,2
  2472  0374  07A6               	addwf	___ftmul@f3_as_product+1,f
  2473  0375  087D               	movf	___ftmul@f2+2,w
  2474  0376  1103               	clrz
  2475  0377  1803               	skipnc
  2476  0378  0A7D               	incf	___ftmul@f2+2,w
  2477  0379  1D03               	btfss	3,2
  2478  037A  07A7               	addwf	___ftmul@f3_as_product+2,f
  2479  037B                     l1553:	
  2480  037B  3001               	movlw	1
  2481  037C                     u1905:	
  2482  037C  1003               	clrc
  2483  037D  0CFA               	rrf	___ftmul@f1+2,f
  2484  037E  0CF9               	rrf	___ftmul@f1+1,f
  2485  037F  0CF8               	rrf	___ftmul@f1,f
  2486  0380  3EFF               	addlw	-1
  2487  0381  1D03               	skipz
  2488  0382  2B7C               	goto	u1905
  2489  0383  3001               	movlw	1
  2490  0384                     u1915:	
  2491  0384  1003               	clrc
  2492  0385  0DFB               	rlf	___ftmul@f2,f
  2493  0386  0DFC               	rlf	___ftmul@f2+1,f
  2494  0387  0DFD               	rlf	___ftmul@f2+2,f
  2495  0388  3EFF               	addlw	-1
  2496  0389  1D03               	skipz
  2497  038A  2B84               	goto	u1915
  2498  038B  3001               	movlw	1
  2499  038C  02A8               	subwf	___ftmul@cntr,f
  2500  038D  1D03               	btfss	3,2
  2501  038E  2B6B               	goto	l1549
  2502  038F  3009               	movlw	9
  2503  0390  00A0               	movwf	??___ftmul
  2504  0391  0820               	movf	??___ftmul,w
  2505  0392  00A8               	movwf	___ftmul@cntr
  2506  0393                     l1561:	
  2507  0393  1C78               	btfss	___ftmul@f1,0
  2508  0394  2BA3               	goto	l1565
  2509  0395  087B               	movf	___ftmul@f2,w
  2510  0396  07A5               	addwf	___ftmul@f3_as_product,f
  2511  0397  087C               	movf	___ftmul@f2+1,w
  2512  0398  1103               	clrz
  2513  0399  1803               	skipnc
  2514  039A  0A7C               	incf	___ftmul@f2+1,w
  2515  039B  1D03               	btfss	3,2
  2516  039C  07A6               	addwf	___ftmul@f3_as_product+1,f
  2517  039D  087D               	movf	___ftmul@f2+2,w
  2518  039E  1103               	clrz
  2519  039F  1803               	skipnc
  2520  03A0  0A7D               	incf	___ftmul@f2+2,w
  2521  03A1  1D03               	btfss	3,2
  2522  03A2  07A7               	addwf	___ftmul@f3_as_product+2,f
  2523  03A3                     l1565:	
  2524  03A3  3001               	movlw	1
  2525  03A4                     u1955:	
  2526  03A4  1003               	clrc
  2527  03A5  0CFA               	rrf	___ftmul@f1+2,f
  2528  03A6  0CF9               	rrf	___ftmul@f1+1,f
  2529  03A7  0CF8               	rrf	___ftmul@f1,f
  2530  03A8  3EFF               	addlw	-1
  2531  03A9  1D03               	skipz
  2532  03AA  2BA4               	goto	u1955
  2533  03AB  3001               	movlw	1
  2534  03AC                     u1965:	
  2535  03AC  1003               	clrc
  2536  03AD  0CA7               	rrf	___ftmul@f3_as_product+2,f
  2537  03AE  0CA6               	rrf	___ftmul@f3_as_product+1,f
  2538  03AF  0CA5               	rrf	___ftmul@f3_as_product,f
  2539  03B0  3EFF               	addlw	-1
  2540  03B1  1D03               	skipz
  2541  03B2  2BAC               	goto	u1965
  2542  03B3  3001               	movlw	1
  2543  03B4  02A8               	subwf	___ftmul@cntr,f
  2544  03B5  1D03               	btfss	3,2
  2545  03B6  2B93               	goto	l1561
  2546  03B7  0825               	movf	___ftmul@f3_as_product,w
  2547  03B8  00F0               	movwf	___ftpack@arg
  2548  03B9  0826               	movf	___ftmul@f3_as_product+1,w
  2549  03BA  00F1               	movwf	___ftpack@arg+1
  2550  03BB  0827               	movf	___ftmul@f3_as_product+2,w
  2551  03BC  00F2               	movwf	___ftpack@arg+2
  2552  03BD  0824               	movf	___ftmul@exp,w
  2553  03BE  00A0               	movwf	??___ftmul
  2554  03BF  0820               	movf	??___ftmul,w
  2555  03C0  00F3               	movwf	___ftpack@exp
  2556  03C1  0829               	movf	___ftmul@sign,w
  2557  03C2  00A1               	movwf	??___ftmul+1
  2558  03C3  0821               	movf	??___ftmul+1,w
  2559  03C4  00F4               	movwf	___ftpack@sign
  2560  03C5  120A  158A  2794   	fcall	___ftpack
  2561  03C8  0870               	movf	?___ftpack,w
  2562  03C9  00F8               	movwf	?___ftmul
  2563  03CA  0871               	movf	?___ftpack+1,w
  2564  03CB  00F9               	movwf	?___ftmul+1
  2565  03CC  0872               	movf	?___ftpack+2,w
  2566  03CD  00FA               	movwf	?___ftmul+2
  2567  03CE  0008               	return
  2568  03CF                     __end_of___ftmul:	
  2569                           
  2570                           	psect	text8
  2571  04C1                     __ptext8:	
  2572 ;; *************** function ___ftadd *****************
  2573 ;; Defined at:
  2574 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftadd.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  f1              3    3[BANK0 ] float 
  2577 ;;  f2              3    6[BANK0 ] float 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  exp1            1   15[BANK0 ] unsigned char 
  2580 ;;  exp2            1   14[BANK0 ] unsigned char 
  2581 ;;  sign            1   13[BANK0 ] unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  3    3[BANK0 ] float 
  2584 ;; Registers used:
  2585 ;;		wreg, status,2, status,0, pclath, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2591 ;;      Params:         0       6       0       0       0
  2592 ;;      Locals:         0       3       0       0       0
  2593 ;;      Temps:          0       4       0       0       0
  2594 ;;      Totals:         0      13       0       0       0
  2595 ;;Total ram usage:       13 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    1
  2598 ;; This function calls:
  2599 ;;		___ftpack
  2600 ;; This function is called by:
  2601 ;;		_UART_TxFloatNumber
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           
  2606                           ;psect for function ___ftadd
  2607  04C1                     ___ftadd:	
  2608                           
  2609                           ;incstack = 0
  2610                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2611  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2612  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2613  04C3  0823               	movf	___ftadd@f1,w
  2614  04C4  00A9               	movwf	??___ftadd
  2615  04C5  0824               	movf	___ftadd@f1+1,w
  2616  04C6  00AA               	movwf	??___ftadd+1
  2617  04C7  0825               	movf	___ftadd@f1+2,w
  2618  04C8  00AB               	movwf	??___ftadd+2
  2619  04C9  1003               	clrc
  2620  04CA  0D2A               	rlf	??___ftadd+1,w
  2621  04CB  0D2B               	rlf	??___ftadd+2,w
  2622  04CC  00AC               	movwf	??___ftadd+3
  2623  04CD  082C               	movf	??___ftadd+3,w
  2624  04CE  00AF               	movwf	___ftadd@exp1
  2625  04CF  0826               	movf	___ftadd@f2,w
  2626  04D0  00A9               	movwf	??___ftadd
  2627  04D1  0827               	movf	___ftadd@f2+1,w
  2628  04D2  00AA               	movwf	??___ftadd+1
  2629  04D3  0828               	movf	___ftadd@f2+2,w
  2630  04D4  00AB               	movwf	??___ftadd+2
  2631  04D5  1003               	clrc
  2632  04D6  0D2A               	rlf	??___ftadd+1,w
  2633  04D7  0D2B               	rlf	??___ftadd+2,w
  2634  04D8  00AC               	movwf	??___ftadd+3
  2635  04D9  082C               	movf	??___ftadd+3,w
  2636  04DA  00AE               	movwf	___ftadd@exp2
  2637  04DB  082F               	movf	___ftadd@exp1,w
  2638  04DC  1903               	btfsc	3,2
  2639  04DD  2CEA               	goto	l1461
  2640  04DE  082E               	movf	___ftadd@exp2,w
  2641  04DF  022F               	subwf	___ftadd@exp1,w
  2642  04E0  1803               	skipnc
  2643  04E1  2CF1               	goto	l1465
  2644  04E2  032F               	decf	___ftadd@exp1,w
  2645  04E3  3AFF               	xorlw	255
  2646  04E4  072E               	addwf	___ftadd@exp2,w
  2647  04E5  00A9               	movwf	??___ftadd
  2648  04E6  3019               	movlw	25
  2649  04E7  0229               	subwf	??___ftadd,w
  2650  04E8  1C03               	skipc
  2651  04E9  2CF1               	goto	l1465
  2652  04EA                     l1461:	
  2653  04EA  0826               	movf	___ftadd@f2,w
  2654  04EB  00A3               	movwf	?___ftadd
  2655  04EC  0827               	movf	___ftadd@f2+1,w
  2656  04ED  00A4               	movwf	?___ftadd+1
  2657  04EE  0828               	movf	___ftadd@f2+2,w
  2658  04EF  00A5               	movwf	?___ftadd+2
  2659  04F0  0008               	return
  2660  04F1                     l1465:	
  2661  04F1  082E               	movf	___ftadd@exp2,w
  2662  04F2  1903               	btfsc	3,2
  2663  04F3  0008               	return
  2664  04F4  082F               	movf	___ftadd@exp1,w
  2665  04F5  022E               	subwf	___ftadd@exp2,w
  2666  04F6  1803               	skipnc
  2667  04F7  2D00               	goto	l1471
  2668  04F8  032E               	decf	___ftadd@exp2,w
  2669  04F9  3AFF               	xorlw	255
  2670  04FA  072F               	addwf	___ftadd@exp1,w
  2671  04FB  00A9               	movwf	??___ftadd
  2672  04FC  3019               	movlw	25
  2673  04FD  0229               	subwf	??___ftadd,w
  2674  04FE  1803               	btfsc	3,0
  2675  04FF  0008               	return
  2676  0500                     l1471:	
  2677  0500  3006               	movlw	6
  2678  0501  00A9               	movwf	??___ftadd
  2679  0502  0829               	movf	??___ftadd,w
  2680  0503  00AD               	movwf	___ftadd@sign
  2681  0504  1BA5               	btfsc	___ftadd@f1+2,7
  2682  0505  17AD               	bsf	___ftadd@sign,7
  2683  0506  1BA8               	btfsc	___ftadd@f2+2,7
  2684  0507  172D               	bsf	___ftadd@sign,6
  2685  0508  17A4               	bsf	___ftadd@f1+1,7
  2686  0509  30FF               	movlw	255
  2687  050A  05A3               	andwf	___ftadd@f1,f
  2688  050B  30FF               	movlw	255
  2689  050C  05A4               	andwf	___ftadd@f1+1,f
  2690  050D  3000               	movlw	0
  2691  050E  05A5               	andwf	___ftadd@f1+2,f
  2692  050F  17A7               	bsf	___ftadd@f2+1,7
  2693  0510  30FF               	movlw	255
  2694  0511  05A6               	andwf	___ftadd@f2,f
  2695  0512  30FF               	movlw	255
  2696  0513  05A7               	andwf	___ftadd@f2+1,f
  2697  0514  3000               	movlw	0
  2698  0515  05A8               	andwf	___ftadd@f2+2,f
  2699  0516  082E               	movf	___ftadd@exp2,w
  2700  0517  022F               	subwf	___ftadd@exp1,w
  2701  0518  1803               	skipnc
  2702  0519  2D40               	goto	l1493
  2703  051A                     l1483:	
  2704  051A  3001               	movlw	1
  2705  051B                     u1695:	
  2706  051B  1003               	clrc
  2707  051C  0DA6               	rlf	___ftadd@f2,f
  2708  051D  0DA7               	rlf	___ftadd@f2+1,f
  2709  051E  0DA8               	rlf	___ftadd@f2+2,f
  2710  051F  3EFF               	addlw	-1
  2711  0520  1D03               	skipz
  2712  0521  2D1B               	goto	u1695
  2713  0522  3001               	movlw	1
  2714  0523  02AE               	subwf	___ftadd@exp2,f
  2715  0524  082E               	movf	___ftadd@exp2,w
  2716  0525  062F               	xorwf	___ftadd@exp1,w
  2717  0526  1903               	skipnz
  2718  0527  2D3B               	goto	l1491
  2719  0528  3001               	movlw	1
  2720  0529  02AD               	subwf	___ftadd@sign,f
  2721  052A  082D               	movf	___ftadd@sign,w
  2722  052B  3907               	andlw	7
  2723  052C  1903               	btfsc	3,2
  2724  052D  2D3B               	goto	l1491
  2725  052E  2D1A               	goto	l1483
  2726  052F                     l1489:	
  2727  052F  3001               	movlw	1
  2728  0530                     u1725:	
  2729  0530  1003               	clrc
  2730  0531  0CA5               	rrf	___ftadd@f1+2,f
  2731  0532  0CA4               	rrf	___ftadd@f1+1,f
  2732  0533  0CA3               	rrf	___ftadd@f1,f
  2733  0534  3EFF               	addlw	-1
  2734  0535  1D03               	skipz
  2735  0536  2D30               	goto	u1725
  2736  0537  3001               	movlw	1
  2737  0538  00A9               	movwf	??___ftadd
  2738  0539  0829               	movf	??___ftadd,w
  2739  053A  07AF               	addwf	___ftadd@exp1,f
  2740  053B                     l1491:	
  2741  053B  082F               	movf	___ftadd@exp1,w
  2742  053C  062E               	xorwf	___ftadd@exp2,w
  2743  053D  1903               	btfsc	3,2
  2744  053E  2D69               	goto	l523
  2745  053F  2D2F               	goto	l1489
  2746  0540                     l1493:	
  2747  0540  082F               	movf	___ftadd@exp1,w
  2748  0541  022E               	subwf	___ftadd@exp2,w
  2749  0542  1803               	skipnc
  2750  0543  2D69               	goto	l523
  2751  0544                     l1495:	
  2752  0544  3001               	movlw	1
  2753  0545                     u1755:	
  2754  0545  1003               	clrc
  2755  0546  0DA3               	rlf	___ftadd@f1,f
  2756  0547  0DA4               	rlf	___ftadd@f1+1,f
  2757  0548  0DA5               	rlf	___ftadd@f1+2,f
  2758  0549  3EFF               	addlw	-1
  2759  054A  1D03               	skipz
  2760  054B  2D45               	goto	u1755
  2761  054C  3001               	movlw	1
  2762  054D  02AF               	subwf	___ftadd@exp1,f
  2763  054E  082E               	movf	___ftadd@exp2,w
  2764  054F  062F               	xorwf	___ftadd@exp1,w
  2765  0550  1903               	skipnz
  2766  0551  2D65               	goto	l1503
  2767  0552  3001               	movlw	1
  2768  0553  02AD               	subwf	___ftadd@sign,f
  2769  0554  082D               	movf	___ftadd@sign,w
  2770  0555  3907               	andlw	7
  2771  0556  1903               	btfsc	3,2
  2772  0557  2D65               	goto	l1503
  2773  0558  2D44               	goto	l1495
  2774  0559                     l1501:	
  2775  0559  3001               	movlw	1
  2776  055A                     u1785:	
  2777  055A  1003               	clrc
  2778  055B  0CA8               	rrf	___ftadd@f2+2,f
  2779  055C  0CA7               	rrf	___ftadd@f2+1,f
  2780  055D  0CA6               	rrf	___ftadd@f2,f
  2781  055E  3EFF               	addlw	-1
  2782  055F  1D03               	skipz
  2783  0560  2D5A               	goto	u1785
  2784  0561  3001               	movlw	1
  2785  0562  00A9               	movwf	??___ftadd
  2786  0563  0829               	movf	??___ftadd,w
  2787  0564  07AE               	addwf	___ftadd@exp2,f
  2788  0565                     l1503:	
  2789  0565  082F               	movf	___ftadd@exp1,w
  2790  0566  062E               	xorwf	___ftadd@exp2,w
  2791  0567  1D03               	skipz
  2792  0568  2D59               	goto	l1501
  2793  0569                     l523:	
  2794  0569  1FAD               	btfss	___ftadd@sign,7
  2795  056A  2D7B               	goto	l1507
  2796  056B  30FF               	movlw	255
  2797  056C  06A3               	xorwf	___ftadd@f1,f
  2798  056D  30FF               	movlw	255
  2799  056E  06A4               	xorwf	___ftadd@f1+1,f
  2800  056F  30FF               	movlw	255
  2801  0570  06A5               	xorwf	___ftadd@f1+2,f
  2802  0571  3001               	movlw	1
  2803  0572  07A3               	addwf	___ftadd@f1,f
  2804  0573  3000               	movlw	0
  2805  0574  1803               	skipnc
  2806  0575  3001               	movlw	1
  2807  0576  07A4               	addwf	___ftadd@f1+1,f
  2808  0577  3000               	movlw	0
  2809  0578  1803               	skipnc
  2810  0579  3001               	movlw	1
  2811  057A  07A5               	addwf	___ftadd@f1+2,f
  2812  057B                     l1507:	
  2813  057B  1F2D               	btfss	___ftadd@sign,6
  2814  057C  2D8D               	goto	l1511
  2815  057D  30FF               	movlw	255
  2816  057E  06A6               	xorwf	___ftadd@f2,f
  2817  057F  30FF               	movlw	255
  2818  0580  06A7               	xorwf	___ftadd@f2+1,f
  2819  0581  30FF               	movlw	255
  2820  0582  06A8               	xorwf	___ftadd@f2+2,f
  2821  0583  3001               	movlw	1
  2822  0584  07A6               	addwf	___ftadd@f2,f
  2823  0585  3000               	movlw	0
  2824  0586  1803               	skipnc
  2825  0587  3001               	movlw	1
  2826  0588  07A7               	addwf	___ftadd@f2+1,f
  2827  0589  3000               	movlw	0
  2828  058A  1803               	skipnc
  2829  058B  3001               	movlw	1
  2830  058C  07A8               	addwf	___ftadd@f2+2,f
  2831  058D                     l1511:	
  2832  058D  01AD               	clrf	___ftadd@sign
  2833  058E  0823               	movf	___ftadd@f1,w
  2834  058F  07A6               	addwf	___ftadd@f2,f
  2835  0590  0824               	movf	___ftadd@f1+1,w
  2836  0591  1103               	clrz
  2837  0592  1803               	skipnc
  2838  0593  0A24               	incf	___ftadd@f1+1,w
  2839  0594  1D03               	btfss	3,2
  2840  0595  07A7               	addwf	___ftadd@f2+1,f
  2841  0596  0825               	movf	___ftadd@f1+2,w
  2842  0597  1103               	clrz
  2843  0598  1803               	skipnc
  2844  0599  0A25               	incf	___ftadd@f1+2,w
  2845  059A  1D03               	btfss	3,2
  2846  059B  07A8               	addwf	___ftadd@f2+2,f
  2847  059C  1FA8               	btfss	___ftadd@f2+2,7
  2848  059D  2DB0               	goto	l1521
  2849  059E  30FF               	movlw	255
  2850  059F  06A6               	xorwf	___ftadd@f2,f
  2851  05A0  30FF               	movlw	255
  2852  05A1  06A7               	xorwf	___ftadd@f2+1,f
  2853  05A2  30FF               	movlw	255
  2854  05A3  06A8               	xorwf	___ftadd@f2+2,f
  2855  05A4  3001               	movlw	1
  2856  05A5  07A6               	addwf	___ftadd@f2,f
  2857  05A6  3000               	movlw	0
  2858  05A7  1803               	skipnc
  2859  05A8  3001               	movlw	1
  2860  05A9  07A7               	addwf	___ftadd@f2+1,f
  2861  05AA  3000               	movlw	0
  2862  05AB  1803               	skipnc
  2863  05AC  3001               	movlw	1
  2864  05AD  07A8               	addwf	___ftadd@f2+2,f
  2865  05AE  01AD               	clrf	___ftadd@sign
  2866  05AF  0AAD               	incf	___ftadd@sign,f
  2867  05B0                     l1521:	
  2868  05B0  0826               	movf	___ftadd@f2,w
  2869  05B1  00F0               	movwf	___ftpack@arg
  2870  05B2  0827               	movf	___ftadd@f2+1,w
  2871  05B3  00F1               	movwf	___ftpack@arg+1
  2872  05B4  0828               	movf	___ftadd@f2+2,w
  2873  05B5  00F2               	movwf	___ftpack@arg+2
  2874  05B6  082F               	movf	___ftadd@exp1,w
  2875  05B7  00A9               	movwf	??___ftadd
  2876  05B8  0829               	movf	??___ftadd,w
  2877  05B9  00F3               	movwf	___ftpack@exp
  2878  05BA  082D               	movf	___ftadd@sign,w
  2879  05BB  00AA               	movwf	??___ftadd+1
  2880  05BC  082A               	movf	??___ftadd+1,w
  2881  05BD  00F4               	movwf	___ftpack@sign
  2882  05BE  120A  158A  2794   	fcall	___ftpack
  2883  05C1  0870               	movf	?___ftpack,w
  2884  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  2885  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  2886  05C4  00A3               	movwf	?___ftadd
  2887  05C5  0871               	movf	?___ftpack+1,w
  2888  05C6  00A4               	movwf	?___ftadd+1
  2889  05C7  0872               	movf	?___ftpack+2,w
  2890  05C8  00A5               	movwf	?___ftadd+2
  2891  05C9  0008               	return
  2892  05CA                     __end_of___ftadd:	
  2893                           
  2894                           	psect	text9
  2895  0F94                     __ptext9:	
  2896 ;; *************** function ___ftpack *****************
  2897 ;; Defined at:
  2898 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\float.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  arg             3    0[COMMON] unsigned um
  2901 ;;  exp             1    3[COMMON] unsigned char 
  2902 ;;  sign            1    4[COMMON] unsigned char 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;		None
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  3    0[COMMON] float 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2914 ;;      Params:         5       0       0       0       0
  2915 ;;      Locals:         0       0       0       0       0
  2916 ;;      Temps:          3       0       0       0       0
  2917 ;;      Totals:         8       0       0       0       0
  2918 ;;Total ram usage:        8 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		___ftadd
  2924 ;;		___ftmul
  2925 ;;		___lltoft
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           
  2930                           ;psect for function ___ftpack
  2931  0F94                     ___ftpack:	
  2932                           
  2933                           ;incstack = 0
  2934                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2935  0F94  0873               	movf	___ftpack@exp,w
  2936  0F95  1903               	btfsc	3,2
  2937  0F96  2F9C               	goto	l1339
  2938  0F97  0872               	movf	___ftpack@arg+2,w
  2939  0F98  0471               	iorwf	___ftpack@arg+1,w
  2940  0F99  0470               	iorwf	___ftpack@arg,w
  2941  0F9A  1D03               	skipz
  2942  0F9B  2FAF               	goto	l1345
  2943  0F9C                     l1339:	
  2944  0F9C  3000               	movlw	0
  2945  0F9D  00F0               	movwf	?___ftpack
  2946  0F9E  3000               	movlw	0
  2947  0F9F  00F1               	movwf	?___ftpack+1
  2948  0FA0  3000               	movlw	0
  2949  0FA1  00F2               	movwf	?___ftpack+2
  2950  0FA2  0008               	return
  2951  0FA3                     l1343:	
  2952  0FA3  3001               	movlw	1
  2953  0FA4  00F5               	movwf	??___ftpack
  2954  0FA5  0875               	movf	??___ftpack,w
  2955  0FA6  07F3               	addwf	___ftpack@exp,f
  2956  0FA7  3001               	movlw	1
  2957  0FA8                     u1245:	
  2958  0FA8  1003               	clrc
  2959  0FA9  0CF2               	rrf	___ftpack@arg+2,f
  2960  0FAA  0CF1               	rrf	___ftpack@arg+1,f
  2961  0FAB  0CF0               	rrf	___ftpack@arg,f
  2962  0FAC  3EFF               	addlw	-1
  2963  0FAD  1D03               	skipz
  2964  0FAE  2FA8               	goto	u1245
  2965  0FAF                     l1345:	
  2966  0FAF  30FE               	movlw	254
  2967  0FB0  0572               	andwf	___ftpack@arg+2,w
  2968  0FB1  1903               	btfsc	3,2
  2969  0FB2  2FCA               	goto	l492
  2970  0FB3  2FA3               	goto	l1343
  2971  0FB4                     l1347:	
  2972  0FB4  3001               	movlw	1
  2973  0FB5  00F5               	movwf	??___ftpack
  2974  0FB6  0875               	movf	??___ftpack,w
  2975  0FB7  07F3               	addwf	___ftpack@exp,f
  2976  0FB8  3001               	movlw	1
  2977  0FB9  07F0               	addwf	___ftpack@arg,f
  2978  0FBA  3000               	movlw	0
  2979  0FBB  1803               	skipnc
  2980  0FBC  3001               	movlw	1
  2981  0FBD  07F1               	addwf	___ftpack@arg+1,f
  2982  0FBE  3000               	movlw	0
  2983  0FBF  1803               	skipnc
  2984  0FC0  3001               	movlw	1
  2985  0FC1  07F2               	addwf	___ftpack@arg+2,f
  2986  0FC2  3001               	movlw	1
  2987  0FC3                     u1265:	
  2988  0FC3  1003               	clrc
  2989  0FC4  0CF2               	rrf	___ftpack@arg+2,f
  2990  0FC5  0CF1               	rrf	___ftpack@arg+1,f
  2991  0FC6  0CF0               	rrf	___ftpack@arg,f
  2992  0FC7  3EFF               	addlw	-1
  2993  0FC8  1D03               	skipz
  2994  0FC9  2FC3               	goto	u1265
  2995  0FCA                     l492:	
  2996  0FCA  30FF               	movlw	255
  2997  0FCB  0572               	andwf	___ftpack@arg+2,w
  2998  0FCC  1903               	btfsc	3,2
  2999  0FCD  2FD9               	goto	l1355
  3000  0FCE  2FB4               	goto	l1347
  3001  0FCF                     l1353:	
  3002  0FCF  3001               	movlw	1
  3003  0FD0  02F3               	subwf	___ftpack@exp,f
  3004  0FD1  3001               	movlw	1
  3005  0FD2                     u1285:	
  3006  0FD2  1003               	clrc
  3007  0FD3  0DF0               	rlf	___ftpack@arg,f
  3008  0FD4  0DF1               	rlf	___ftpack@arg+1,f
  3009  0FD5  0DF2               	rlf	___ftpack@arg+2,f
  3010  0FD6  3EFF               	addlw	-1
  3011  0FD7  1D03               	skipz
  3012  0FD8  2FD2               	goto	u1285
  3013  0FD9                     l1355:	
  3014  0FD9  1BF1               	btfsc	___ftpack@arg+1,7
  3015  0FDA  2FDF               	goto	l499
  3016  0FDB  3002               	movlw	2
  3017  0FDC  0273               	subwf	___ftpack@exp,w
  3018  0FDD  1803               	skipnc
  3019  0FDE  2FCF               	goto	l1353
  3020  0FDF                     l499:	
  3021  0FDF  1873               	btfsc	___ftpack@exp,0
  3022  0FE0  2FE7               	goto	l500
  3023  0FE1  30FF               	movlw	255
  3024  0FE2  05F0               	andwf	___ftpack@arg,f
  3025  0FE3  307F               	movlw	127
  3026  0FE4  05F1               	andwf	___ftpack@arg+1,f
  3027  0FE5  30FF               	movlw	255
  3028  0FE6  05F2               	andwf	___ftpack@arg+2,f
  3029  0FE7                     l500:	
  3030  0FE7  1003               	clrc
  3031  0FE8  0CF3               	rrf	___ftpack@exp,f
  3032  0FE9  0873               	movf	___ftpack@exp,w
  3033  0FEA  00F5               	movwf	??___ftpack
  3034  0FEB  01F6               	clrf	??___ftpack+1
  3035  0FEC  01F7               	clrf	??___ftpack+2
  3036  0FED  3010               	movlw	16
  3037  0FEE                     u1325:	
  3038  0FEE  1003               	clrc
  3039  0FEF  0DF5               	rlf	??___ftpack,f
  3040  0FF0  0DF6               	rlf	??___ftpack+1,f
  3041  0FF1  0DF7               	rlf	??___ftpack+2,f
  3042  0FF2  3EFF               	addlw	-1
  3043  0FF3  1D03               	skipz
  3044  0FF4  2FEE               	goto	u1325
  3045  0FF5  0875               	movf	??___ftpack,w
  3046  0FF6  04F0               	iorwf	___ftpack@arg,f
  3047  0FF7  0876               	movf	??___ftpack+1,w
  3048  0FF8  04F1               	iorwf	___ftpack@arg+1,f
  3049  0FF9  0877               	movf	??___ftpack+2,w
  3050  0FFA  04F2               	iorwf	___ftpack@arg+2,f
  3051  0FFB  0874               	movf	___ftpack@sign,w
  3052  0FFC  1903               	btfsc	3,2
  3053  0FFD  0008               	return
  3054  0FFE  17F2               	bsf	___ftpack@arg+2,7
  3055  0FFF  0008               	return
  3056  1000                     __end_of___ftpack:	
  3057                           
  3058                           	psect	text10
  3059  03CF                     __ptext10:	
  3060 ;; *************** function _UART_TxNumber *****************
  3061 ;; Defined at:
  3062 ;;		line 259 in file "../00-libfiles/uart.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  v_numericSys    1    wreg     unsigned char 
  3065 ;;  v_number_u32    4    4[BANK0 ] unsigned long 
  3066 ;;  v_numOfDigit    1    8[BANK0 ] unsigned char 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;  v_numericSys    1   33[BANK0 ] unsigned char 
  3069 ;;  a              10   21[BANK0 ] unsigned char [10]
  3070 ;;  i               1   34[BANK0 ] unsigned char 
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      void 
  3073 ;; Registers used:
  3074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3080 ;;      Params:         0       5       0       0       0
  3081 ;;      Locals:         0      14       0       0       0
  3082 ;;      Temps:          0      12       0       0       0
  3083 ;;      Totals:         0      31       0       0       0
  3084 ;;Total ram usage:       31 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    1
  3087 ;; This function calls:
  3088 ;;		_UART_TxChar
  3089 ;;		___bmul
  3090 ;;		___lldiv
  3091 ;; This function is called by:
  3092 ;;		_UART_TxFloatNumber
  3093 ;;		_UART_Printf
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           
  3098                           ;psect for function _UART_TxNumber
  3099  03CF                     _UART_TxNumber:	
  3100                           
  3101                           ;incstack = 0
  3102                           ; Regs used in _UART_TxNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3103                           ;UART_TxNumber@v_numericSystem_u8 stored from wreg
  3104  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  3105  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  3106  03D1  00C1               	movwf	UART_TxNumber@v_numericSystem_u8
  3107                           
  3108                           ;uart.c: 261: uint8_t i=0,a[10];
  3109  03D2  01C2               	clrf	UART_TxNumber@i
  3110                           
  3111                           ;uart.c: 263: if(2u == v_numericSystem_u8)
  3112  03D3  3002               	movlw	2
  3113  03D4  0641               	xorwf	UART_TxNumber@v_numericSystem_u8,w
  3114  03D5  1903               	btfsc	3,2
  3115  03D6  2C16               	goto	l1403
  3116  03D7  2C1A               	goto	l1405
  3117  03D8                     l1397:	
  3118                           ;uart.c: 264: {
  3119                           ;uart.c: 265: while(v_numOfDigitsToTransmit_u8!=0)
  3120                           
  3121                           
  3122                           ;uart.c: 266: {
  3123                           ;uart.c: 269: i = (((v_number_u32)&((1<<((v_numOfDigitsToTransmit_u8-1)))))!=0u);
  3124  03D8  0824               	movf	UART_TxNumber@v_number_u32,w
  3125  03D9  00A9               	movwf	??_UART_TxNumber
  3126  03DA  0825               	movf	UART_TxNumber@v_number_u32+1,w
  3127  03DB  00AA               	movwf	??_UART_TxNumber+1
  3128  03DC  0826               	movf	UART_TxNumber@v_number_u32+2,w
  3129  03DD  00AB               	movwf	??_UART_TxNumber+2
  3130  03DE  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3131  03DF  00AC               	movwf	??_UART_TxNumber+3
  3132  03E0  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3133  03E1  3EFF               	addlw	-1
  3134  03E2  00AD               	movwf	??_UART_TxNumber+4
  3135  03E3  0AAD               	incf	??_UART_TxNumber+4,f
  3136  03E4  3001               	movlw	1
  3137  03E5  00AE               	movwf	??_UART_TxNumber+5
  3138  03E6  3000               	movlw	0
  3139  03E7  00AF               	movwf	??_UART_TxNumber+6
  3140  03E8  2BEC               	goto	u1424
  3141  03E9                     u1425:	
  3142  03E9  1003               	clrc
  3143  03EA  0DAE               	rlf	??_UART_TxNumber+5,f
  3144  03EB  0DAF               	rlf	??_UART_TxNumber+6,f
  3145  03EC                     u1424:	
  3146  03EC  0BAD               	decfsz	??_UART_TxNumber+4,f
  3147  03ED  2BE9               	goto	u1425
  3148  03EE  082E               	movf	??_UART_TxNumber+5,w
  3149  03EF  00B0               	movwf	??_UART_TxNumber+7
  3150  03F0  082F               	movf	??_UART_TxNumber+6,w
  3151  03F1  00B1               	movwf	??_UART_TxNumber+8
  3152  03F2  3000               	movlw	0
  3153  03F3  1BB1               	btfsc	??_UART_TxNumber+8,7
  3154  03F4  30FF               	movlw	255
  3155  03F5  00B2               	movwf	??_UART_TxNumber+9
  3156  03F6  00B3               	movwf	??_UART_TxNumber+10
  3157  03F7  0830               	movf	??_UART_TxNumber+7,w
  3158  03F8  05A9               	andwf	??_UART_TxNumber,f
  3159  03F9  0831               	movf	??_UART_TxNumber+8,w
  3160  03FA  05AA               	andwf	??_UART_TxNumber+1,f
  3161  03FB  0832               	movf	??_UART_TxNumber+9,w
  3162  03FC  05AB               	andwf	??_UART_TxNumber+2,f
  3163  03FD  0833               	movf	??_UART_TxNumber+10,w
  3164  03FE  05AC               	andwf	??_UART_TxNumber+3,f
  3165  03FF  082C               	movf	??_UART_TxNumber+3,w
  3166  0400  042B               	iorwf	??_UART_TxNumber+2,w
  3167  0401  042A               	iorwf	??_UART_TxNumber+1,w
  3168  0402  0429               	iorwf	??_UART_TxNumber,w
  3169  0403  1903               	btfsc	3,2
  3170  0404  2C07               	goto	u1430
  3171  0405  3001               	movlw	1
  3172  0406  2C08               	goto	u1440
  3173  0407                     u1430:	
  3174  0407  3000               	movlw	0
  3175  0408                     u1440:	
  3176  0408  00B4               	movwf	??_UART_TxNumber+11
  3177  0409  0834               	movf	??_UART_TxNumber+11,w
  3178  040A  00C2               	movwf	UART_TxNumber@i
  3179                           
  3180                           ;uart.c: 270: UART_TxChar(((i)+0x30));
  3181  040B  0842               	movf	UART_TxNumber@i,w
  3182  040C  3E30               	addlw	48
  3183  040D  120A  158A  2608  120A  118A  	fcall	_UART_TxChar
  3184                           
  3185                           ;uart.c: 271: v_numOfDigitsToTransmit_u8--;
  3186  0412  3001               	movlw	1
  3187  0413  1283               	bcf	3,5	;RP0=0, select bank0
  3188  0414  1303               	bcf	3,6	;RP1=0, select bank0
  3189  0415  02A8               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,f
  3190  0416                     l1403:	
  3191  0416  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3192  0417  1903               	btfsc	3,2
  3193  0418  0008               	return
  3194  0419  2BD8               	goto	l1397
  3195  041A                     l1405:	
  3196                           ;uart.c: 272: }
  3197                           ;uart.c: 273: }
  3198                           
  3199                           
  3200                           ;uart.c: 274: else if(v_number_u32==0)
  3201  041A  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3202  041B  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  3203  041C  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  3204  041D  0424               	iorwf	UART_TxNumber@v_number_u32,w
  3205  041E  1D03               	skipz
  3206  041F  2C25               	goto	l1409
  3207                           
  3208                           ;uart.c: 275: {
  3209                           ;uart.c: 278: UART_TxChar('0');
  3210  0420  3030               	movlw	48
  3211  0421  120A  158A  2608   	fcall	_UART_TxChar
  3212                           
  3213                           ;uart.c: 279: }
  3214  0424  0008               	return
  3215  0425                     l1409:	
  3216                           
  3217                           ;uart.c: 280: else
  3218                           ;uart.c: 281: {
  3219                           ;uart.c: 282: for(i=0;i<v_numOfDigitsToTransmit_u8;i++)
  3220  0425  1283               	bcf	3,5	;RP0=0, select bank0
  3221  0426  1303               	bcf	3,6	;RP1=0, select bank0
  3222  0427  01C2               	clrf	UART_TxNumber@i
  3223  0428                     l1427:	
  3224  0428  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3225  0429  0242               	subwf	UART_TxNumber@i,w
  3226  042A  1803               	btfsc	3,0
  3227  042B  2CBD               	goto	l1439
  3228                           
  3229                           ;uart.c: 283: {
  3230                           ;uart.c: 286: if(v_number_u32!=0)
  3231  042C  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3232  042D  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  3233  042E  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  3234  042F  0424               	iorwf	UART_TxNumber@v_number_u32,w
  3235  0430  1903               	skipnz
  3236  0431  2C87               	goto	l1417
  3237                           
  3238                           ;uart.c: 287: {
  3239                           ;uart.c: 294: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u
      +                          32/v_numericSystem_u8)));
  3240  0432  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  3241  0433  00A9               	movwf	??_UART_TxNumber
  3242  0434  0829               	movf	??_UART_TxNumber,w
  3243  0435  00A0               	movwf	___bmul@multiplicand
  3244  0436  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3245  0437  00F7               	movwf	___lldiv@dividend+3
  3246  0438  0826               	movf	UART_TxNumber@v_number_u32+2,w
  3247  0439  00F6               	movwf	___lldiv@dividend+2
  3248  043A  0825               	movf	UART_TxNumber@v_number_u32+1,w
  3249  043B  00F5               	movwf	___lldiv@dividend+1
  3250  043C  0824               	movf	UART_TxNumber@v_number_u32,w
  3251  043D  00F4               	movwf	___lldiv@dividend
  3252  043E  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  3253  043F  00AA               	movwf	??_UART_TxNumber+1
  3254  0440  01AB               	clrf	??_UART_TxNumber+2
  3255  0441  01AC               	clrf	??_UART_TxNumber+3
  3256  0442  01AD               	clrf	??_UART_TxNumber+4
  3257  0443  082D               	movf	??_UART_TxNumber+4,w
  3258  0444  00F3               	movwf	___lldiv@divisor+3
  3259  0445  082C               	movf	??_UART_TxNumber+3,w
  3260  0446  00F2               	movwf	___lldiv@divisor+2
  3261  0447  082B               	movf	??_UART_TxNumber+2,w
  3262  0448  00F1               	movwf	___lldiv@divisor+1
  3263  0449  082A               	movf	??_UART_TxNumber+1,w
  3264  044A  00F0               	movwf	___lldiv@divisor
  3265  044B  120A  158A  2736  120A  118A  	fcall	___lldiv
  3266  0450  0870               	movf	?___lldiv,w
  3267  0451  120A  158A  2633  120A  118A  	fcall	___bmul
  3268  0456  3AFF               	xorlw	255
  3269  0457  3E01               	addlw	1
  3270  0458  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0459  1303               	bcf	3,6	;RP1=0, select bank0
  3272  045A  0724               	addwf	UART_TxNumber@v_number_u32,w
  3273  045B  00AE               	movwf	??_UART_TxNumber+5
  3274  045C  0842               	movf	UART_TxNumber@i,w
  3275  045D  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3276  045E  0084               	movwf	4
  3277  045F  082E               	movf	??_UART_TxNumber+5,w
  3278  0460  1383               	bcf	3,7	;select IRP bank0
  3279  0461  0080               	movwf	0
  3280                           
  3281                           ;uart.c: 295: v_number_u32=v_number_u32/v_numericSystem_u8;
  3282  0462  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  3283  0463  00A9               	movwf	??_UART_TxNumber
  3284  0464  01AA               	clrf	??_UART_TxNumber+1
  3285  0465  01AB               	clrf	??_UART_TxNumber+2
  3286  0466  01AC               	clrf	??_UART_TxNumber+3
  3287  0467  082C               	movf	??_UART_TxNumber+3,w
  3288  0468  00F3               	movwf	___lldiv@divisor+3
  3289  0469  082B               	movf	??_UART_TxNumber+2,w
  3290  046A  00F2               	movwf	___lldiv@divisor+2
  3291  046B  082A               	movf	??_UART_TxNumber+1,w
  3292  046C  00F1               	movwf	___lldiv@divisor+1
  3293  046D  0829               	movf	??_UART_TxNumber,w
  3294  046E  00F0               	movwf	___lldiv@divisor
  3295  046F  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3296  0470  00F7               	movwf	___lldiv@dividend+3
  3297  0471  0826               	movf	UART_TxNumber@v_number_u32+2,w
  3298  0472  00F6               	movwf	___lldiv@dividend+2
  3299  0473  0825               	movf	UART_TxNumber@v_number_u32+1,w
  3300  0474  00F5               	movwf	___lldiv@dividend+1
  3301  0475  0824               	movf	UART_TxNumber@v_number_u32,w
  3302  0476  00F4               	movwf	___lldiv@dividend
  3303  0477  120A  158A  2736  120A  118A  	fcall	___lldiv
  3304  047C  0873               	movf	?___lldiv+3,w
  3305  047D  1283               	bcf	3,5	;RP0=0, select bank0
  3306  047E  1303               	bcf	3,6	;RP1=0, select bank0
  3307  047F  00A7               	movwf	UART_TxNumber@v_number_u32+3
  3308  0480  0872               	movf	?___lldiv+2,w
  3309  0481  00A6               	movwf	UART_TxNumber@v_number_u32+2
  3310  0482  0871               	movf	?___lldiv+1,w
  3311  0483  00A5               	movwf	UART_TxNumber@v_number_u32+1
  3312  0484  0870               	movf	?___lldiv,w
  3313  0485  00A4               	movwf	UART_TxNumber@v_number_u32
  3314                           
  3315                           ;uart.c: 296: }
  3316  0486  2C93               	goto	l1425
  3317  0487                     l1417:	
  3318                           
  3319                           ;uart.c: 297: else if( (v_numOfDigitsToTransmit_u8 == 0xffu) ||
  3320                           ;uart.c: 298: (v_numOfDigitsToTransmit_u8 > 10u))
  3321  0487  0A28               	incf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3322  0488  1903               	btfsc	3,2
  3323  0489  2CBD               	goto	l1439
  3324  048A  300B               	movlw	11
  3325  048B  0228               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3326  048C  1803               	btfsc	3,0
  3327  048D  2CBD               	goto	l1439
  3328                           
  3329                           ;uart.c: 304: else
  3330                           ;uart.c: 305: {
  3331                           ;uart.c: 309: a[i]=0;
  3332                           
  3333                           ;uart.c: 303: }
  3334                           
  3335                           ;uart.c: 299: {
  3336                           ;uart.c: 302: break;
  3337  048E  0842               	movf	UART_TxNumber@i,w
  3338  048F  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3339  0490  0084               	movwf	4
  3340  0491  1383               	bcf	3,7	;select IRP bank0
  3341  0492  0180               	clrf	0
  3342  0493                     l1425:	
  3343  0493  3001               	movlw	1
  3344  0494  00A9               	movwf	??_UART_TxNumber
  3345  0495  0829               	movf	??_UART_TxNumber,w
  3346  0496  07C2               	addwf	UART_TxNumber@i,f
  3347  0497  2C28               	goto	l1427
  3348  0498                     l1429:	
  3349                           ;uart.c: 310: }
  3350                           ;uart.c: 311: }
  3351                           ;uart.c: 313: while(i)
  3352                           
  3353                           
  3354                           ;uart.c: 314: {
  3355                           ;uart.c: 316: UART_TxChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  3356  0498  0842               	movf	UART_TxNumber@i,w
  3357  0499  3EFF               	addlw	255
  3358  049A  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3359  049B  0084               	movwf	4
  3360  049C  300A               	movlw	10
  3361  049D  1383               	bcf	3,7	;select IRP bank0
  3362  049E  0200               	subwf	0,w
  3363  049F  1803               	skipnc
  3364  04A0  2CA8               	goto	l1433
  3365  04A1  0842               	movf	UART_TxNumber@i,w
  3366  04A2  3EFF               	addlw	255
  3367  04A3  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3368  04A4  0084               	movwf	4
  3369  04A5  0800               	movf	0,w
  3370  04A6  3E30               	addlw	48
  3371  04A7  2CAE               	goto	L2
  3372  04A8                     l1433:	
  3373  04A8  0842               	movf	UART_TxNumber@i,w
  3374  04A9  3EFF               	addlw	255
  3375  04AA  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3376  04AB  0084               	movwf	4
  3377  04AC  0800               	movf	0,w
  3378  04AD  3E37               	addlw	55
  3379  04AE                     L2:	
  3380  04AE  00BF               	movwf	_UART_TxNumber$63
  3381  04AF  3000               	movlw	0
  3382  04B0  1803               	skipnc
  3383  04B1  3001               	movlw	1
  3384  04B2  00C0               	movwf	_UART_TxNumber$63+1
  3385  04B3  083F               	movf	_UART_TxNumber$63,w
  3386  04B4  120A  158A  2608  120A  118A  	fcall	_UART_TxChar
  3387                           
  3388                           ;uart.c: 317: i--;
  3389  04B9  3001               	movlw	1
  3390  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  3391  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  3392  04BC  02C2               	subwf	UART_TxNumber@i,f
  3393  04BD                     l1439:	
  3394  04BD  0842               	movf	UART_TxNumber@i,w
  3395  04BE  1903               	btfsc	3,2
  3396  04BF  0008               	return
  3397  04C0  2C98               	goto	l1429
  3398  04C1                     __end_of_UART_TxNumber:	
  3399                           
  3400                           	psect	text11
  3401  0E33                     __ptext11:	
  3402 ;; *************** function ___bmul *****************
  3403 ;; Defined at:
  3404 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\Umul8.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;  multiplier      1    wreg     unsigned char 
  3407 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3410 ;;  product         1    2[BANK0 ] unsigned char 
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  1    wreg      unsigned char 
  3413 ;; Registers used:
  3414 ;;		wreg, status,2, status,0
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3420 ;;      Params:         0       1       0       0       0
  3421 ;;      Locals:         0       2       0       0       0
  3422 ;;      Temps:          0       1       0       0       0
  3423 ;;      Totals:         0       4       0       0       0
  3424 ;;Total ram usage:        4 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; This function calls:
  3427 ;;		Nothing
  3428 ;; This function is called by:
  3429 ;;		_UART_TxNumber
  3430 ;;		_UART_Printf
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           
  3435                           ;psect for function ___bmul
  3436  0E33                     ___bmul:	
  3437                           
  3438                           ;incstack = 0
  3439                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3440                           ;___bmul@multiplier stored from wreg
  3441  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  3442  0E34  1303               	bcf	3,6	;RP1=0, select bank0
  3443  0E35  00A3               	movwf	___bmul@multiplier
  3444  0E36  01A2               	clrf	___bmul@product
  3445  0E37                     l1323:	
  3446  0E37  1C23               	btfss	___bmul@multiplier,0
  3447  0E38  2E3D               	goto	l1327
  3448  0E39  0820               	movf	___bmul@multiplicand,w
  3449  0E3A  00A1               	movwf	??___bmul
  3450  0E3B  0821               	movf	??___bmul,w
  3451  0E3C  07A2               	addwf	___bmul@product,f
  3452  0E3D                     l1327:	
  3453  0E3D  1003               	clrc
  3454  0E3E  0DA0               	rlf	___bmul@multiplicand,f
  3455  0E3F  1003               	clrc
  3456  0E40  0CA3               	rrf	___bmul@multiplier,f
  3457  0E41  0823               	movf	___bmul@multiplier,w
  3458  0E42  1D03               	btfss	3,2
  3459  0E43  2E37               	goto	l1323
  3460  0E44  0822               	movf	___bmul@product,w
  3461  0E45  0008               	return
  3462  0E46                     __end_of___bmul:	
  3463                           
  3464                           	psect	text12
  3465  0E08                     __ptext12:	
  3466 ;; *************** function _UART_TxChar *****************
  3467 ;; Defined at:
  3468 ;;		line 144 in file "../00-libfiles/uart.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  var_uartData    1    wreg     unsigned char 
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;  var_uartData    1    0[COMMON] unsigned char 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3482 ;;      Params:         0       0       0       0       0
  3483 ;;      Locals:         1       0       0       0       0
  3484 ;;      Temps:          0       0       0       0       0
  3485 ;;      Totals:         1       0       0       0       0
  3486 ;;Total ram usage:        1 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; This function calls:
  3489 ;;		Nothing
  3490 ;; This function is called by:
  3491 ;;		_UART_TxString
  3492 ;;		_UART_TxNumber
  3493 ;;		_UART_TxFloatNumber
  3494 ;;		_UART_Printf
  3495 ;;		_UART_RxString
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498                           
  3499                           
  3500                           ;psect for function _UART_TxChar
  3501  0E08                     _UART_TxChar:	
  3502                           
  3503                           ;incstack = 0
  3504                           ; Regs used in _UART_TxChar: [wreg]
  3505                           ;UART_TxChar@var_uartData_u8 stored from wreg
  3506  0E08  00F0               	movwf	UART_TxChar@var_uartData_u8
  3507  0E09                     l39:	
  3508                           ;uart.c: 146: while(TXIF==0);
  3509                           
  3510  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  3511  0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  3512  0E0B  1E0C               	btfss	12,4	;volatile
  3513  0E0C  2E09               	goto	l39
  3514                           
  3515                           ;uart.c: 147: TXIF=0;
  3516  0E0D  120C               	bcf	12,4	;volatile
  3517                           
  3518                           ;uart.c: 148: TXREG=var_uartData_u8;
  3519  0E0E  0870               	movf	UART_TxChar@var_uartData_u8,w
  3520  0E0F  0099               	movwf	25	;volatile
  3521  0E10  0008               	return
  3522  0E11                     __end_of_UART_TxChar:	
  3523                           
  3524                           	psect	text13
  3525  0E5B                     __ptext13:	
  3526 ;; *************** function _UART_Init *****************
  3527 ;; Defined at:
  3528 ;;		line 65 in file "../00-libfiles/uart.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;  var_baudRate    4   16[BANK0 ] unsigned long 
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;		None
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      void 
  3535 ;; Registers used:
  3536 ;;		wreg, status,2, status,0, pclath, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3542 ;;      Params:         0       4       0       0       0
  3543 ;;      Locals:         0       0       0       0       0
  3544 ;;      Temps:          0       0       0       0       0
  3545 ;;      Totals:         0       4       0       0       0
  3546 ;;Total ram usage:        4 bytes
  3547 ;; Hardware stack levels used:    1
  3548 ;; Hardware stack levels required when called:    2
  3549 ;; This function calls:
  3550 ;;		_UART_SetBaudRate
  3551 ;; This function is called by:
  3552 ;;		_main
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           
  3557                           ;psect for function _UART_Init
  3558  0E5B                     _UART_Init:	
  3559                           
  3560                           ;uart.c: 67: TRISC=0x80;
  3561                           
  3562                           ;incstack = 0
  3563                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3564  0E5B  3080               	movlw	128
  3565  0E5C  1683               	bsf	3,5	;RP0=1, select bank1
  3566  0E5D  1303               	bcf	3,6	;RP1=0, select bank1
  3567  0E5E  0087               	movwf	7	;volatile
  3568                           
  3569                           ;uart.c: 68: TXSTA=0x20;
  3570  0E5F  3020               	movlw	32
  3571  0E60  0098               	movwf	24	;volatile
  3572                           
  3573                           ;uart.c: 69: RCSTA=0x90;
  3574  0E61  3090               	movlw	144
  3575  0E62  1283               	bcf	3,5	;RP0=0, select bank0
  3576  0E63  1303               	bcf	3,6	;RP1=0, select bank0
  3577  0E64  0098               	movwf	24	;volatile
  3578                           
  3579                           ;uart.c: 70: UART_SetBaudRate(var_baudRate_u32);
  3580  0E65  0833               	movf	UART_Init@var_baudRate_u32+3,w
  3581  0E66  00A3               	movwf	UART_SetBaudRate@var_baudRate_u32+3
  3582  0E67  0832               	movf	UART_Init@var_baudRate_u32+2,w
  3583  0E68  00A2               	movwf	UART_SetBaudRate@var_baudRate_u32+2
  3584  0E69  0831               	movf	UART_Init@var_baudRate_u32+1,w
  3585  0E6A  00A1               	movwf	UART_SetBaudRate@var_baudRate_u32+1
  3586  0E6B  0830               	movf	UART_Init@var_baudRate_u32,w
  3587  0E6C  00A0               	movwf	UART_SetBaudRate@var_baudRate_u32
  3588  0E6D  120A  118A  2040   	fcall	_UART_SetBaudRate
  3589  0E70  0008               	return
  3590  0E71                     __end_of_UART_Init:	
  3591                           
  3592                           	psect	text14
  3593  0040                     __ptext14:	
  3594 ;; *************** function _UART_SetBaudRate *****************
  3595 ;; Defined at:
  3596 ;;		line 90 in file "../00-libfiles/uart.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  var_baudRate    4    0[BANK0 ] unsigned long 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  RegValue        4   12[BANK0 ] unsigned long 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2, status,0, pclath, cstack
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3610 ;;      Params:         0       4       0       0       0
  3611 ;;      Locals:         0       4       0       0       0
  3612 ;;      Temps:          0       8       0       0       0
  3613 ;;      Totals:         0      16       0       0       0
  3614 ;;Total ram usage:       16 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; Hardware stack levels required when called:    1
  3617 ;; This function calls:
  3618 ;;		___lldiv
  3619 ;; This function is called by:
  3620 ;;		_UART_Init
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           
  3625                           ;psect for function _UART_SetBaudRate
  3626  0040                     _UART_SetBaudRate:	
  3627                           
  3628                           ;uart.c: 92: uint32_t RegValue;
  3629                           ;uart.c: 94: if((var_baudRate_u32 >= 2400) && (var_baudRate_u32<=115200UL))
  3630                           
  3631                           ;incstack = 0
  3632                           ; Regs used in _UART_SetBaudRate: [wreg+status,2+status,0+pclath+cstack]
  3633  0040  1283               	bcf	3,5	;RP0=0, select bank0
  3634  0041  1303               	bcf	3,6	;RP1=0, select bank0
  3635  0042  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  3636  0043  1D03               	btfss	3,2
  3637  0044  2852               	goto	l1637
  3638  0045  0822               	movf	UART_SetBaudRate@var_baudRate_u32+2,w
  3639  0046  1D03               	btfss	3,2
  3640  0047  2852               	goto	l1637
  3641  0048  3009               	movlw	9
  3642  0049  0221               	subwf	UART_SetBaudRate@var_baudRate_u32+1,w
  3643  004A  1D03               	skipz
  3644  004B  2850               	goto	u2113
  3645  004C  3060               	movlw	96
  3646  004D  0220               	subwf	UART_SetBaudRate@var_baudRate_u32,w
  3647  004E  1D03               	skipz
  3648  004F  2850               	goto	u2113
  3649  0050                     u2113:	
  3650  0050  1C03               	btfss	3,0
  3651  0051  28AD               	goto	l1641
  3652  0052                     l1637:	
  3653  0052  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  3654  0053  1D03               	btfss	3,2
  3655  0054  28AD               	goto	l1641
  3656  0055  3001               	movlw	1
  3657  0056  0222               	subwf	UART_SetBaudRate@var_baudRate_u32+2,w
  3658  0057  1D03               	skipz
  3659  0058  2861               	goto	u2123
  3660  0059  30C2               	movlw	194
  3661  005A  0221               	subwf	UART_SetBaudRate@var_baudRate_u32+1,w
  3662  005B  1D03               	skipz
  3663  005C  2861               	goto	u2123
  3664  005D  3001               	movlw	1
  3665  005E  0220               	subwf	UART_SetBaudRate@var_baudRate_u32,w
  3666  005F  1D03               	skipz
  3667  0060  2861               	goto	u2123
  3668  0061                     u2123:	
  3669  0061  1803               	btfsc	3,0
  3670  0062  28AD               	goto	l1641
  3671                           
  3672                           ;uart.c: 95: {
  3673                           ;uart.c: 98: RegValue = (uint32_t)((20000000UL / (64*(uint32_t)var_baudRate_u32)) - 1);
  3674  0063  30FF               	movlw	255
  3675  0064  00A4               	movwf	??_UART_SetBaudRate
  3676  0065  30FF               	movlw	255
  3677  0066  00A5               	movwf	??_UART_SetBaudRate+1
  3678  0067  30FF               	movlw	255
  3679  0068  00A6               	movwf	??_UART_SetBaudRate+2
  3680  0069  30FF               	movlw	255
  3681  006A  00A7               	movwf	??_UART_SetBaudRate+3
  3682  006B  0820               	movf	UART_SetBaudRate@var_baudRate_u32,w
  3683  006C  00A8               	movwf	??_UART_SetBaudRate+4
  3684  006D  0821               	movf	UART_SetBaudRate@var_baudRate_u32+1,w
  3685  006E  00A9               	movwf	??_UART_SetBaudRate+5
  3686  006F  0822               	movf	UART_SetBaudRate@var_baudRate_u32+2,w
  3687  0070  00AA               	movwf	??_UART_SetBaudRate+6
  3688  0071  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  3689  0072  00AB               	movwf	??_UART_SetBaudRate+7
  3690  0073  3006               	movlw	6
  3691  0074                     u2135:	
  3692  0074  1003               	clrc
  3693  0075  0DA8               	rlf	??_UART_SetBaudRate+4,f
  3694  0076  0DA9               	rlf	??_UART_SetBaudRate+5,f
  3695  0077  0DAA               	rlf	??_UART_SetBaudRate+6,f
  3696  0078  0DAB               	rlf	??_UART_SetBaudRate+7,f
  3697  0079  3EFF               	addlw	-1
  3698  007A  1D03               	skipz
  3699  007B  2874               	goto	u2135
  3700  007C  082B               	movf	??_UART_SetBaudRate+7,w
  3701  007D  00F3               	movwf	___lldiv@divisor+3
  3702  007E  082A               	movf	??_UART_SetBaudRate+6,w
  3703  007F  00F2               	movwf	___lldiv@divisor+2
  3704  0080  0829               	movf	??_UART_SetBaudRate+5,w
  3705  0081  00F1               	movwf	___lldiv@divisor+1
  3706  0082  0828               	movf	??_UART_SetBaudRate+4,w
  3707  0083  00F0               	movwf	___lldiv@divisor
  3708  0084  3001               	movlw	1
  3709  0085  00F7               	movwf	___lldiv@dividend+3
  3710  0086  3031               	movlw	49
  3711  0087  00F6               	movwf	___lldiv@dividend+2
  3712  0088  302D               	movlw	45
  3713  0089  00F5               	movwf	___lldiv@dividend+1
  3714  008A  3000               	movlw	0
  3715  008B  00F4               	movwf	___lldiv@dividend
  3716  008C  120A  158A  2736  120A  118A  	fcall	___lldiv
  3717  0091  0870               	movf	?___lldiv,w
  3718  0092  1283               	bcf	3,5	;RP0=0, select bank0
  3719  0093  1303               	bcf	3,6	;RP1=0, select bank0
  3720  0094  07A4               	addwf	??_UART_SetBaudRate,f
  3721  0095  0871               	movf	?___lldiv+1,w
  3722  0096  1803               	skipnc
  3723  0097  0F71               	incfsz	?___lldiv+1,w
  3724  0098  289A               	goto	u2140
  3725  0099  289B               	goto	u2141
  3726  009A                     u2140:	
  3727  009A  07A5               	addwf	??_UART_SetBaudRate+1,f
  3728  009B                     u2141:	
  3729  009B  0872               	movf	?___lldiv+2,w
  3730  009C  1803               	skipnc
  3731  009D  0F72               	incfsz	?___lldiv+2,w
  3732  009E  28A0               	goto	u2142
  3733  009F  28A1               	goto	u2143
  3734  00A0                     u2142:	
  3735  00A0  07A6               	addwf	??_UART_SetBaudRate+2,f
  3736  00A1                     u2143:	
  3737  00A1  0873               	movf	?___lldiv+3,w
  3738  00A2  1803               	skipnc
  3739  00A3  0A73               	incf	?___lldiv+3,w
  3740  00A4  07A7               	addwf	??_UART_SetBaudRate+3,f
  3741  00A5  0827               	movf	??_UART_SetBaudRate+3,w
  3742  00A6  00AF               	movwf	UART_SetBaudRate@RegValue+3
  3743  00A7  0826               	movf	??_UART_SetBaudRate+2,w
  3744  00A8  00AE               	movwf	UART_SetBaudRate@RegValue+2
  3745  00A9  0825               	movf	??_UART_SetBaudRate+1,w
  3746  00AA  00AD               	movwf	UART_SetBaudRate@RegValue+1
  3747  00AB  0824               	movf	??_UART_SetBaudRate,w
  3748  00AC  28B4               	goto	L3
  3749  00AD                     l1641:	
  3750                           ;uart.c: 99: }
  3751                           
  3752                           
  3753                           ;uart.c: 100: else
  3754                           ;uart.c: 101: {
  3755                           ;uart.c: 103: RegValue = (uint32_t)((20000000UL / (64*(uint32_t)9600)) - 1);
  3756  00AD  3000               	movlw	0
  3757  00AE  00AF               	movwf	UART_SetBaudRate@RegValue+3
  3758  00AF  3000               	movlw	0
  3759  00B0  00AE               	movwf	UART_SetBaudRate@RegValue+2
  3760  00B1  3000               	movlw	0
  3761  00B2  00AD               	movwf	UART_SetBaudRate@RegValue+1
  3762  00B3  301F               	movlw	31
  3763  00B4                     L3:	
  3764  00B4  00AC               	movwf	UART_SetBaudRate@RegValue
  3765                           
  3766                           ;uart.c: 104: }
  3767                           ;uart.c: 106: SPBRG = (uint8_t)RegValue;
  3768  00B5  082C               	movf	UART_SetBaudRate@RegValue,w
  3769  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  3770  00B7  1303               	bcf	3,6	;RP1=0, select bank1
  3771  00B8  0099               	movwf	25	;volatile
  3772  00B9  0008               	return
  3773  00BA                     __end_of_UART_SetBaudRate:	
  3774                           
  3775                           	psect	text15
  3776  0F36                     __ptext15:	
  3777 ;; *************** function ___lldiv *****************
  3778 ;; Defined at:
  3779 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  divisor         4    0[COMMON] unsigned long 
  3782 ;;  dividend        4    4[COMMON] unsigned long 
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  quotient        4    9[COMMON] unsigned long 
  3785 ;;  counter         1   13[COMMON] unsigned char 
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  4    0[COMMON] unsigned long 
  3788 ;; Registers used:
  3789 ;;		wreg, status,2, status,0
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3795 ;;      Params:         8       0       0       0       0
  3796 ;;      Locals:         5       0       0       0       0
  3797 ;;      Temps:          1       0       0       0       0
  3798 ;;      Totals:        14       0       0       0       0
  3799 ;;Total ram usage:       14 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; This function calls:
  3802 ;;		Nothing
  3803 ;; This function is called by:
  3804 ;;		_UART_SetBaudRate
  3805 ;;		_UART_TxNumber
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           
  3810                           ;psect for function ___lldiv
  3811  0F36                     ___lldiv:	
  3812                           
  3813                           ;incstack = 0
  3814                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3815  0F36  3000               	movlw	0
  3816  0F37  00FC               	movwf	___lldiv@quotient+3
  3817  0F38  3000               	movlw	0
  3818  0F39  00FB               	movwf	___lldiv@quotient+2
  3819  0F3A  3000               	movlw	0
  3820  0F3B  00FA               	movwf	___lldiv@quotient+1
  3821  0F3C  3000               	movlw	0
  3822  0F3D  00F9               	movwf	___lldiv@quotient
  3823  0F3E  0873               	movf	___lldiv@divisor+3,w
  3824  0F3F  0472               	iorwf	___lldiv@divisor+2,w
  3825  0F40  0471               	iorwf	___lldiv@divisor+1,w
  3826  0F41  0470               	iorwf	___lldiv@divisor,w
  3827  0F42  1903               	skipnz
  3828  0F43  2F8B               	goto	l1387
  3829  0F44  01FD               	clrf	___lldiv@counter
  3830  0F45  0AFD               	incf	___lldiv@counter,f
  3831  0F46                     l1373:	
  3832  0F46  1BF3               	btfsc	___lldiv@divisor+3,7
  3833  0F47  2F56               	goto	l1375
  3834  0F48  3001               	movlw	1
  3835  0F49  00F8               	movwf	??___lldiv
  3836  0F4A                     u1355:	
  3837  0F4A  1003               	clrc
  3838  0F4B  0DF0               	rlf	___lldiv@divisor,f
  3839  0F4C  0DF1               	rlf	___lldiv@divisor+1,f
  3840  0F4D  0DF2               	rlf	___lldiv@divisor+2,f
  3841  0F4E  0DF3               	rlf	___lldiv@divisor+3,f
  3842  0F4F  0BF8               	decfsz	??___lldiv,f
  3843  0F50  2F4A               	goto	u1355
  3844  0F51  3001               	movlw	1
  3845  0F52  00F8               	movwf	??___lldiv
  3846  0F53  0878               	movf	??___lldiv,w
  3847  0F54  07FD               	addwf	___lldiv@counter,f
  3848  0F55  2F46               	goto	l1373
  3849  0F56                     l1375:	
  3850  0F56  3001               	movlw	1
  3851  0F57  00F8               	movwf	??___lldiv
  3852  0F58                     u1375:	
  3853  0F58  1003               	clrc
  3854  0F59  0DF9               	rlf	___lldiv@quotient,f
  3855  0F5A  0DFA               	rlf	___lldiv@quotient+1,f
  3856  0F5B  0DFB               	rlf	___lldiv@quotient+2,f
  3857  0F5C  0DFC               	rlf	___lldiv@quotient+3,f
  3858  0F5D  0BF8               	decfsz	??___lldiv,f
  3859  0F5E  2F58               	goto	u1375
  3860  0F5F  0873               	movf	___lldiv@divisor+3,w
  3861  0F60  0277               	subwf	___lldiv@dividend+3,w
  3862  0F61  1D03               	skipz
  3863  0F62  2F6D               	goto	u1385
  3864  0F63  0872               	movf	___lldiv@divisor+2,w
  3865  0F64  0276               	subwf	___lldiv@dividend+2,w
  3866  0F65  1D03               	skipz
  3867  0F66  2F6D               	goto	u1385
  3868  0F67  0871               	movf	___lldiv@divisor+1,w
  3869  0F68  0275               	subwf	___lldiv@dividend+1,w
  3870  0F69  1D03               	skipz
  3871  0F6A  2F6D               	goto	u1385
  3872  0F6B  0870               	movf	___lldiv@divisor,w
  3873  0F6C  0274               	subwf	___lldiv@dividend,w
  3874  0F6D                     u1385:	
  3875  0F6D  1C03               	skipc
  3876  0F6E  2F7E               	goto	l1383
  3877  0F6F  0870               	movf	___lldiv@divisor,w
  3878  0F70  02F4               	subwf	___lldiv@dividend,f
  3879  0F71  0871               	movf	___lldiv@divisor+1,w
  3880  0F72  1C03               	skipc
  3881  0F73  0F71               	incfsz	___lldiv@divisor+1,w
  3882  0F74  02F5               	subwf	___lldiv@dividend+1,f
  3883  0F75  0872               	movf	___lldiv@divisor+2,w
  3884  0F76  1C03               	skipc
  3885  0F77  0F72               	incfsz	___lldiv@divisor+2,w
  3886  0F78  02F6               	subwf	___lldiv@dividend+2,f
  3887  0F79  0873               	movf	___lldiv@divisor+3,w
  3888  0F7A  1C03               	skipc
  3889  0F7B  0F73               	incfsz	___lldiv@divisor+3,w
  3890  0F7C  02F7               	subwf	___lldiv@dividend+3,f
  3891  0F7D  1479               	bsf	___lldiv@quotient,0
  3892  0F7E                     l1383:	
  3893  0F7E  3001               	movlw	1
  3894  0F7F                     u1395:	
  3895  0F7F  1003               	clrc
  3896  0F80  0CF3               	rrf	___lldiv@divisor+3,f
  3897  0F81  0CF2               	rrf	___lldiv@divisor+2,f
  3898  0F82  0CF1               	rrf	___lldiv@divisor+1,f
  3899  0F83  0CF0               	rrf	___lldiv@divisor,f
  3900  0F84  3EFF               	addlw	-1
  3901  0F85  1D03               	skipz
  3902  0F86  2F7F               	goto	u1395
  3903  0F87  3001               	movlw	1
  3904  0F88  02FD               	subwf	___lldiv@counter,f
  3905  0F89  1D03               	btfss	3,2
  3906  0F8A  2F56               	goto	l1375
  3907  0F8B                     l1387:	
  3908  0F8B  087C               	movf	___lldiv@quotient+3,w
  3909  0F8C  00F3               	movwf	?___lldiv+3
  3910  0F8D  087B               	movf	___lldiv@quotient+2,w
  3911  0F8E  00F2               	movwf	?___lldiv+2
  3912  0F8F  087A               	movf	___lldiv@quotient+1,w
  3913  0F90  00F1               	movwf	?___lldiv+1
  3914  0F91  0879               	movf	___lldiv@quotient,w
  3915  0F92  00F0               	movwf	?___lldiv
  3916  0F93  0008               	return
  3917  0F94                     __end_of___lldiv:	
  3918                           
  3919                           	psect	text16
  3920  0EDC                     __ptext16:	
  3921 ;; *************** function _RTC_SetDateTime *****************
  3922 ;; Defined at:
  3923 ;;		line 95 in file "../00-libfiles/rtc.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;  rtc             1    wreg     PTR struct .
  3926 ;;		 -> main@rtc(7), 
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;  rtc             1    1[COMMON] PTR struct .
  3929 ;;		 -> main@rtc(7), 
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3939 ;;      Params:         0       0       0       0       0
  3940 ;;      Locals:         1       0       0       0       0
  3941 ;;      Temps:          0       0       0       0       0
  3942 ;;      Totals:         1       0       0       0       0
  3943 ;;Total ram usage:        1 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    2
  3946 ;; This function calls:
  3947 ;;		_I2C_Start
  3948 ;;		_I2C_Stop
  3949 ;;		_I2C_Write
  3950 ;; This function is called by:
  3951 ;;		_main
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           
  3956                           ;psect for function _RTC_SetDateTime
  3957  0EDC                     _RTC_SetDateTime:	
  3958                           
  3959                           ;incstack = 0
  3960                           ; Regs used in _RTC_SetDateTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3961                           ;RTC_SetDateTime@rtc stored from wreg
  3962  0EDC  00F1               	movwf	RTC_SetDateTime@rtc
  3963                           
  3964                           ;rtc.c: 97: I2C_Start();
  3965  0EDD  120A  158A  25EE  120A  158A  	fcall	_I2C_Start
  3966                           
  3967                           ;rtc.c: 99: I2C_Write(0xD0u);
  3968  0EE2  30D0               	movlw	208
  3969  0EE3  120A  158A  2626  120A  158A  	fcall	_I2C_Write
  3970                           
  3971                           ;rtc.c: 100: I2C_Write(0x00u);
  3972  0EE8  3000               	movlw	0
  3973  0EE9  120A  158A  2626  120A  158A  	fcall	_I2C_Write
  3974                           
  3975                           ;rtc.c: 102: I2C_Write(rtc->sec);
  3976  0EEE  0871               	movf	RTC_SetDateTime@rtc,w
  3977  0EEF  0084               	movwf	4
  3978  0EF0  1383               	bcf	3,7	;select IRP bank0
  3979  0EF1  0800               	movf	0,w
  3980  0EF2  120A  158A  2626  120A  158A  	fcall	_I2C_Write
  3981                           
  3982                           ;rtc.c: 103: I2C_Write(rtc->min);
  3983  0EF7  0A71               	incf	RTC_SetDateTime@rtc,w
  3984  0EF8  0084               	movwf	4
  3985  0EF9  1383               	bcf	3,7	;select IRP bank0
  3986  0EFA  0800               	movf	0,w
  3987  0EFB  120A  158A  2626  120A  158A  	fcall	_I2C_Write
  3988                           
  3989                           ;rtc.c: 104: I2C_Write(rtc->hour);
  3990  0F00  0871               	movf	RTC_SetDateTime@rtc,w
  3991  0F01  3E02               	addlw	2
  3992  0F02  0084               	movwf	4
  3993  0F03  1383               	bcf	3,7	;select IRP bank0
  3994  0F04  0800               	movf	0,w
  3995  0F05  120A  158A  2626  120A  158A  	fcall	_I2C_Write
  3996                           
  3997                           ;rtc.c: 105: I2C_Write(rtc->weekDay);
  3998  0F0A  0871               	movf	RTC_SetDateTime@rtc,w
  3999  0F0B  3E03               	addlw	3
  4000  0F0C  0084               	movwf	4
  4001  0F0D  1383               	bcf	3,7	;select IRP bank0
  4002  0F0E  0800               	movf	0,w
  4003  0F0F  120A  158A  2626  120A  158A  	fcall	_I2C_Write
  4004                           
  4005                           ;rtc.c: 106: I2C_Write(rtc->date);
  4006  0F14  0871               	movf	RTC_SetDateTime@rtc,w
  4007  0F15  3E04               	addlw	4
  4008  0F16  0084               	movwf	4
  4009  0F17  1383               	bcf	3,7	;select IRP bank0
  4010  0F18  0800               	movf	0,w
  4011  0F19  120A  158A  2626  120A  158A  	fcall	_I2C_Write
  4012                           
  4013                           ;rtc.c: 107: I2C_Write(rtc->month);
  4014  0F1E  0871               	movf	RTC_SetDateTime@rtc,w
  4015  0F1F  3E05               	addlw	5
  4016  0F20  0084               	movwf	4
  4017  0F21  1383               	bcf	3,7	;select IRP bank0
  4018  0F22  0800               	movf	0,w
  4019  0F23  120A  158A  2626  120A  158A  	fcall	_I2C_Write
  4020                           
  4021                           ;rtc.c: 108: I2C_Write(rtc->year);
  4022  0F28  0871               	movf	RTC_SetDateTime@rtc,w
  4023  0F29  3E06               	addlw	6
  4024  0F2A  0084               	movwf	4
  4025  0F2B  1383               	bcf	3,7	;select IRP bank0
  4026  0F2C  0800               	movf	0,w
  4027  0F2D  120A  158A  2626  120A  158A  	fcall	_I2C_Write
  4028                           
  4029                           ;rtc.c: 110: I2C_Stop();
  4030  0F32  120A  158A  25F4   	fcall	_I2C_Stop
  4031  0F35  0008               	return
  4032  0F36                     __end_of_RTC_SetDateTime:	
  4033                           
  4034                           	psect	text17
  4035  0E91                     __ptext17:	
  4036 ;; *************** function _RTC_Init *****************
  4037 ;; Defined at:
  4038 ;;		line 57 in file "../00-libfiles/rtc.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;		None
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;		None
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  1    wreg      void 
  4045 ;; Registers used:
  4046 ;;		wreg, status,2, status,0, pclath, cstack
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4052 ;;      Params:         0       0       0       0       0
  4053 ;;      Locals:         0       0       0       0       0
  4054 ;;      Temps:          0       0       0       0       0
  4055 ;;      Totals:         0       0       0       0       0
  4056 ;;Total ram usage:        0 bytes
  4057 ;; Hardware stack levels used:    1
  4058 ;; Hardware stack levels required when called:    2
  4059 ;; This function calls:
  4060 ;;		_I2C_Init
  4061 ;;		_I2C_Start
  4062 ;;		_I2C_Stop
  4063 ;;		_I2C_Write
  4064 ;; This function is called by:
  4065 ;;		_main
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           
  4070                           ;psect for function _RTC_Init
  4071  0E91                     _RTC_Init:	
  4072                           
  4073                           ;rtc.c: 59: I2C_Init();
  4074                           
  4075                           ;incstack = 0
  4076                           ; Regs used in _RTC_Init: [wreg+status,2+status,0+pclath+cstack]
  4077  0E91  120A  118A  2032  120A  158A  	fcall	_I2C_Init
  4078                           
  4079                           ;rtc.c: 60: I2C_Start();
  4080  0E96  120A  158A  25EE  120A  158A  	fcall	_I2C_Start
  4081                           
  4082                           ;rtc.c: 62: I2C_Write(0xD0u);
  4083  0E9B  30D0               	movlw	208
  4084  0E9C  120A  158A  2626  120A  158A  	fcall	_I2C_Write
  4085                           
  4086                           ;rtc.c: 63: I2C_Write(0x07u);
  4087  0EA1  3007               	movlw	7
  4088  0EA2  120A  158A  2626  120A  158A  	fcall	_I2C_Write
  4089                           
  4090                           ;rtc.c: 65: I2C_Write(0x00);
  4091  0EA7  3000               	movlw	0
  4092  0EA8  120A  158A  2626  120A  158A  	fcall	_I2C_Write
  4093                           
  4094                           ;rtc.c: 67: I2C_Stop();
  4095  0EAD  120A  158A  25F4   	fcall	_I2C_Stop
  4096  0EB0  0008               	return
  4097  0EB1                     __end_of_RTC_Init:	
  4098                           
  4099                           	psect	text18
  4100  0032                     __ptext18:	
  4101 ;; *************** function _I2C_Init *****************
  4102 ;; Defined at:
  4103 ;;		line 87 in file "../00-libfiles/i2c.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;		None
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;		None
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		wreg
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4117 ;;      Params:         0       0       0       0       0
  4118 ;;      Locals:         0       0       0       0       0
  4119 ;;      Temps:          0       0       0       0       0
  4120 ;;      Totals:         0       0       0       0       0
  4121 ;;Total ram usage:        0 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; This function calls:
  4124 ;;		Nothing
  4125 ;; This function is called by:
  4126 ;;		_RTC_Init
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           
  4131                           ;psect for function _I2C_Init
  4132  0032                     _I2C_Init:	
  4133                           
  4134                           ;i2c.c: 89: TRISC3 = 0x01u;
  4135                           
  4136                           ;incstack = 0
  4137                           ; Regs used in _I2C_Init: [wreg]
  4138  0032  1683               	bsf	3,5	;RP0=1, select bank1
  4139  0033  1303               	bcf	3,6	;RP1=0, select bank1
  4140  0034  1587               	bsf	7,3	;volatile
  4141                           
  4142                           ;i2c.c: 90: TRISC4 = 0x01u;
  4143  0035  1607               	bsf	7,4	;volatile
  4144                           
  4145                           ;i2c.c: 92: SSPSTAT |= 0x80;
  4146  0036  1794               	bsf	20,7	;volatile
  4147                           
  4148                           ;i2c.c: 93: SSPCON = 0x28;
  4149  0037  3028               	movlw	40
  4150  0038  1283               	bcf	3,5	;RP0=0, select bank0
  4151  0039  1303               	bcf	3,6	;RP1=0, select bank0
  4152  003A  0094               	movwf	20	;volatile
  4153                           
  4154                           ;i2c.c: 94: SSPADD = 50;
  4155  003B  3032               	movlw	50
  4156  003C  1683               	bsf	3,5	;RP0=1, select bank1
  4157  003D  1303               	bcf	3,6	;RP1=0, select bank1
  4158  003E  0093               	movwf	19	;volatile
  4159  003F  0008               	return
  4160  0040                     __end_of_I2C_Init:	
  4161                           
  4162                           	psect	text19
  4163  00BA                     __ptext19:	
  4164 ;; *************** function _RTC_GetDateTime *****************
  4165 ;; Defined at:
  4166 ;;		line 131 in file "../00-libfiles/rtc.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  rtc             1    wreg     PTR struct .
  4169 ;;		 -> main@rtc(7), 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  rtc             1    4[COMMON] PTR struct .
  4172 ;;		 -> main@rtc(7), 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4182 ;;      Params:         0       0       0       0       0
  4183 ;;      Locals:         1       0       0       0       0
  4184 ;;      Temps:          1       0       0       0       0
  4185 ;;      Totals:         2       0       0       0       0
  4186 ;;Total ram usage:        2 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    2
  4189 ;; This function calls:
  4190 ;;		_I2C_Read
  4191 ;;		_I2C_Start
  4192 ;;		_I2C_Stop
  4193 ;;		_I2C_Write
  4194 ;; This function is called by:
  4195 ;;		_main
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           
  4200                           ;psect for function _RTC_GetDateTime
  4201  00BA                     _RTC_GetDateTime:	
  4202                           
  4203                           ;incstack = 0
  4204                           ; Regs used in _RTC_GetDateTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4205                           ;RTC_GetDateTime@rtc stored from wreg
  4206  00BA  00F4               	movwf	RTC_GetDateTime@rtc
  4207                           
  4208                           ;rtc.c: 133: I2C_Start();
  4209  00BB  120A  158A  25EE  120A  118A  	fcall	_I2C_Start
  4210                           
  4211                           ;rtc.c: 135: I2C_Write(0xD0u);
  4212  00C0  30D0               	movlw	208
  4213  00C1  120A  158A  2626  120A  118A  	fcall	_I2C_Write
  4214                           
  4215                           ;rtc.c: 136: I2C_Write(0x00u);
  4216  00C6  3000               	movlw	0
  4217  00C7  120A  158A  2626  120A  118A  	fcall	_I2C_Write
  4218                           
  4219                           ;rtc.c: 138: I2C_Stop();
  4220  00CC  120A  158A  25F4  120A  118A  	fcall	_I2C_Stop
  4221                           
  4222                           ;rtc.c: 140: I2C_Start();
  4223  00D1  120A  158A  25EE  120A  118A  	fcall	_I2C_Start
  4224                           
  4225                           ;rtc.c: 141: I2C_Write(0xD1u);
  4226  00D6  30D1               	movlw	209
  4227  00D7  120A  158A  2626  120A  118A  	fcall	_I2C_Write
  4228                           
  4229                           ;rtc.c: 143: rtc->sec = I2C_Read(1);
  4230  00DC  3001               	movlw	1
  4231  00DD  120A  158A  2671  120A  118A  	fcall	_I2C_Read
  4232  00E2  00F3               	movwf	??_RTC_GetDateTime
  4233  00E3  0874               	movf	RTC_GetDateTime@rtc,w
  4234  00E4  0084               	movwf	4
  4235  00E5  0873               	movf	??_RTC_GetDateTime,w
  4236  00E6  1383               	bcf	3,7	;select IRP bank0
  4237  00E7  0080               	movwf	0
  4238                           
  4239                           ;rtc.c: 144: rtc->min = I2C_Read(1);
  4240  00E8  3001               	movlw	1
  4241  00E9  120A  158A  2671  120A  118A  	fcall	_I2C_Read
  4242  00EE  00F3               	movwf	??_RTC_GetDateTime
  4243  00EF  0A74               	incf	RTC_GetDateTime@rtc,w
  4244  00F0  0084               	movwf	4
  4245  00F1  0873               	movf	??_RTC_GetDateTime,w
  4246  00F2  1383               	bcf	3,7	;select IRP bank0
  4247  00F3  0080               	movwf	0
  4248                           
  4249                           ;rtc.c: 145: rtc->hour= I2C_Read(1);
  4250  00F4  3001               	movlw	1
  4251  00F5  120A  158A  2671  120A  118A  	fcall	_I2C_Read
  4252  00FA  00F3               	movwf	??_RTC_GetDateTime
  4253  00FB  0874               	movf	RTC_GetDateTime@rtc,w
  4254  00FC  3E02               	addlw	2
  4255  00FD  0084               	movwf	4
  4256  00FE  0873               	movf	??_RTC_GetDateTime,w
  4257  00FF  1383               	bcf	3,7	;select IRP bank0
  4258  0100  0080               	movwf	0
  4259                           
  4260                           ;rtc.c: 146: rtc->weekDay = I2C_Read(1);
  4261  0101  3001               	movlw	1
  4262  0102  120A  158A  2671  120A  118A  	fcall	_I2C_Read
  4263  0107  00F3               	movwf	??_RTC_GetDateTime
  4264  0108  0874               	movf	RTC_GetDateTime@rtc,w
  4265  0109  3E03               	addlw	3
  4266  010A  0084               	movwf	4
  4267  010B  0873               	movf	??_RTC_GetDateTime,w
  4268  010C  1383               	bcf	3,7	;select IRP bank0
  4269  010D  0080               	movwf	0
  4270                           
  4271                           ;rtc.c: 147: rtc->date= I2C_Read(1);
  4272  010E  3001               	movlw	1
  4273  010F  120A  158A  2671  120A  118A  	fcall	_I2C_Read
  4274  0114  00F3               	movwf	??_RTC_GetDateTime
  4275  0115  0874               	movf	RTC_GetDateTime@rtc,w
  4276  0116  3E04               	addlw	4
  4277  0117  0084               	movwf	4
  4278  0118  0873               	movf	??_RTC_GetDateTime,w
  4279  0119  1383               	bcf	3,7	;select IRP bank0
  4280  011A  0080               	movwf	0
  4281                           
  4282                           ;rtc.c: 148: rtc->month=I2C_Read(1);
  4283  011B  3001               	movlw	1
  4284  011C  120A  158A  2671  120A  118A  	fcall	_I2C_Read
  4285  0121  00F3               	movwf	??_RTC_GetDateTime
  4286  0122  0874               	movf	RTC_GetDateTime@rtc,w
  4287  0123  3E05               	addlw	5
  4288  0124  0084               	movwf	4
  4289  0125  0873               	movf	??_RTC_GetDateTime,w
  4290  0126  1383               	bcf	3,7	;select IRP bank0
  4291  0127  0080               	movwf	0
  4292                           
  4293                           ;rtc.c: 149: rtc->year =I2C_Read(0);
  4294  0128  3000               	movlw	0
  4295  0129  120A  158A  2671  120A  118A  	fcall	_I2C_Read
  4296  012E  00F3               	movwf	??_RTC_GetDateTime
  4297  012F  0874               	movf	RTC_GetDateTime@rtc,w
  4298  0130  3E06               	addlw	6
  4299  0131  0084               	movwf	4
  4300  0132  0873               	movf	??_RTC_GetDateTime,w
  4301  0133  1383               	bcf	3,7	;select IRP bank0
  4302  0134  0080               	movwf	0
  4303                           
  4304                           ;rtc.c: 151: I2C_Stop();
  4305  0135  120A  158A  25F4   	fcall	_I2C_Stop
  4306  0138  0008               	return
  4307  0139                     __end_of_RTC_GetDateTime:	
  4308                           
  4309                           	psect	text20
  4310  0E26                     __ptext20:	
  4311 ;; *************** function _I2C_Write *****************
  4312 ;; Defined at:
  4313 ;;		line 179 in file "../00-libfiles/i2c.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  v_i2cData_u8    1    wreg     unsigned char 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;  v_i2cData_u8    1    0[COMMON] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      void 
  4320 ;; Registers used:
  4321 ;;		wreg, status,2, status,0, pclath, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4327 ;;      Params:         0       0       0       0       0
  4328 ;;      Locals:         1       0       0       0       0
  4329 ;;      Temps:          0       0       0       0       0
  4330 ;;      Totals:         1       0       0       0       0
  4331 ;;Total ram usage:        1 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    1
  4334 ;; This function calls:
  4335 ;;		_i2c_WaitForIdle
  4336 ;; This function is called by:
  4337 ;;		_RTC_Init
  4338 ;;		_RTC_SetDateTime
  4339 ;;		_RTC_GetDateTime
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           
  4344                           ;psect for function _I2C_Write
  4345  0E26                     _I2C_Write:	
  4346                           
  4347                           ;incstack = 0
  4348                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  4349                           ;I2C_Write@v_i2cData_u8 stored from wreg
  4350  0E26  00F0               	movwf	I2C_Write@v_i2cData_u8
  4351                           
  4352                           ;i2c.c: 183: SSPBUF = v_i2cData_u8;
  4353  0E27  0870               	movf	I2C_Write@v_i2cData_u8,w
  4354  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  4355  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  4356  0E2A  0093               	movwf	19	;volatile
  4357  0E2B                     l202:	
  4358                           ;i2c.c: 184: while(BF==1);
  4359                           
  4360  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  4361  0E2C  1303               	bcf	3,6	;RP1=0, select bank1
  4362  0E2D  1814               	btfsc	20,0	;volatile
  4363  0E2E  2E2B               	goto	l202
  4364                           
  4365                           ;i2c.c: 185: i2c_WaitForIdle();
  4366  0E2F  120A  158A  261B   	fcall	_i2c_WaitForIdle
  4367  0E32  0008               	return
  4368  0E33                     __end_of_I2C_Write:	
  4369                           
  4370                           	psect	text21
  4371  0DF4                     __ptext21:	
  4372 ;; *************** function _I2C_Stop *****************
  4373 ;; Defined at:
  4374 ;;		line 147 in file "../00-libfiles/i2c.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;		None
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      void 
  4381 ;; Registers used:
  4382 ;;		None
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4388 ;;      Params:         0       0       0       0       0
  4389 ;;      Locals:         0       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0
  4391 ;;      Totals:         0       0       0       0       0
  4392 ;;Total ram usage:        0 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; This function calls:
  4395 ;;		Nothing
  4396 ;; This function is called by:
  4397 ;;		_RTC_Init
  4398 ;;		_RTC_SetDateTime
  4399 ;;		_RTC_GetDateTime
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           
  4404                           ;psect for function _I2C_Stop
  4405  0DF4                     _I2C_Stop:	
  4406                           
  4407                           ;i2c.c: 149: PEN = 1;
  4408                           
  4409                           ;incstack = 0
  4410                           ; Regs used in _I2C_Stop: []
  4411  0DF4  1683               	bsf	3,5	;RP0=1, select bank1
  4412  0DF5  1303               	bcf	3,6	;RP1=0, select bank1
  4413  0DF6  1511               	bsf	17,2	;volatile
  4414  0DF7                     l196:	
  4415                           ;i2c.c: 150: while(PEN == 1);
  4416                           
  4417  0DF7  1D11               	btfss	17,2	;volatile
  4418  0DF8  0008               	return
  4419  0DF9  2DF7               	goto	l196
  4420  0DFA                     __end_of_I2C_Stop:	
  4421                           
  4422                           	psect	text22
  4423  0DEE                     __ptext22:	
  4424 ;; *************** function _I2C_Start *****************
  4425 ;; Defined at:
  4426 ;;		line 118 in file "../00-libfiles/i2c.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;		None
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;		None
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      void 
  4433 ;; Registers used:
  4434 ;;		None
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4440 ;;      Params:         0       0       0       0       0
  4441 ;;      Locals:         0       0       0       0       0
  4442 ;;      Temps:          0       0       0       0       0
  4443 ;;      Totals:         0       0       0       0       0
  4444 ;;Total ram usage:        0 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; This function calls:
  4447 ;;		Nothing
  4448 ;; This function is called by:
  4449 ;;		_RTC_Init
  4450 ;;		_RTC_SetDateTime
  4451 ;;		_RTC_GetDateTime
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           
  4456                           ;psect for function _I2C_Start
  4457  0DEE                     _I2C_Start:	
  4458                           
  4459                           ;i2c.c: 120: SEN = 1;
  4460                           
  4461                           ;incstack = 0
  4462                           ; Regs used in _I2C_Start: []
  4463  0DEE  1683               	bsf	3,5	;RP0=1, select bank1
  4464  0DEF  1303               	bcf	3,6	;RP1=0, select bank1
  4465  0DF0  1411               	bsf	17,0	;volatile
  4466  0DF1                     l190:	
  4467                           ;i2c.c: 121: while(SEN == 1);
  4468                           
  4469  0DF1  1C11               	btfss	17,0	;volatile
  4470  0DF2  0008               	return
  4471  0DF3  2DF1               	goto	l190
  4472  0DF4                     __end_of_I2C_Start:	
  4473                           
  4474                           	psect	text23
  4475  0E71                     __ptext23:	
  4476 ;; *************** function _I2C_Read *****************
  4477 ;; Defined at:
  4478 ;;		line 214 in file "../00-libfiles/i2c.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  v_ackOption_    1    wreg     unsigned char 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  v_ackOption_    1    1[COMMON] unsigned char 
  4483 ;;  v_i2cData_u8    1    2[COMMON] unsigned char 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1    wreg      unsigned char 
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0, pclath, cstack
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4493 ;;      Params:         0       0       0       0       0
  4494 ;;      Locals:         2       0       0       0       0
  4495 ;;      Temps:          1       0       0       0       0
  4496 ;;      Totals:         3       0       0       0       0
  4497 ;;Total ram usage:        3 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:    1
  4500 ;; This function calls:
  4501 ;;		_i2c_Ack
  4502 ;;		_i2c_NoAck
  4503 ;;		_i2c_WaitForIdle
  4504 ;; This function is called by:
  4505 ;;		_RTC_GetDateTime
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           
  4510                           ;psect for function _I2C_Read
  4511  0E71                     _I2C_Read:	
  4512                           
  4513                           ;incstack = 0
  4514                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  4515                           ;I2C_Read@v_ackOption_u8 stored from wreg
  4516  0E71  00F1               	movwf	I2C_Read@v_ackOption_u8
  4517                           
  4518                           ;i2c.c: 216: uint8_t v_i2cData_u8=0x00;
  4519  0E72  01F2               	clrf	I2C_Read@v_i2cData_u8
  4520                           
  4521                           ;i2c.c: 218: RCEN = 1;
  4522  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  4523  0E74  1303               	bcf	3,6	;RP1=0, select bank1
  4524  0E75  1591               	bsf	17,3	;volatile
  4525  0E76                     l208:	
  4526                           ;i2c.c: 219: while(BF==0);
  4527                           
  4528  0E76  1C14               	btfss	20,0	;volatile
  4529  0E77  2E76               	goto	l208
  4530                           
  4531                           ;i2c.c: 220: v_i2cData_u8 = SSPBUF;
  4532  0E78  1283               	bcf	3,5	;RP0=0, select bank0
  4533  0E79  1303               	bcf	3,6	;RP1=0, select bank0
  4534  0E7A  0813               	movf	19,w	;volatile
  4535  0E7B  00F0               	movwf	??_I2C_Read
  4536  0E7C  0870               	movf	??_I2C_Read,w
  4537  0E7D  00F2               	movwf	I2C_Read@v_i2cData_u8
  4538                           
  4539                           ;i2c.c: 221: i2c_WaitForIdle();
  4540  0E7E  120A  158A  261B  120A  158A  	fcall	_i2c_WaitForIdle
  4541                           
  4542                           ;i2c.c: 223: if(v_ackOption_u8==1)
  4543  0E83  0371               	decf	I2C_Read@v_ackOption_u8,w
  4544  0E84  1D03               	btfss	3,2
  4545  0E85  2E8C               	goto	l1685
  4546                           
  4547                           ;i2c.c: 224: {
  4548                           ;i2c.c: 225: i2c_Ack();
  4549  0E86  120A  158A  25FA  120A  158A  	fcall	_i2c_Ack
  4550                           
  4551                           ;i2c.c: 226: }
  4552  0E8B  2E8F               	goto	l1687
  4553  0E8C                     l1685:	
  4554                           
  4555                           ;i2c.c: 227: else
  4556                           ;i2c.c: 228: {
  4557                           ;i2c.c: 229: i2c_NoAck();
  4558  0E8C  120A  158A  2601   	fcall	_i2c_NoAck
  4559  0E8F                     l1687:	
  4560                           
  4561                           ;i2c.c: 230: }
  4562                           ;i2c.c: 232: return v_i2cData_u8;
  4563  0E8F  0872               	movf	I2C_Read@v_i2cData_u8,w
  4564  0E90  0008               	return
  4565  0E91                     __end_of_I2C_Read:	
  4566                           
  4567                           	psect	text24
  4568  0E1B                     __ptext24:	
  4569 ;; *************** function _i2c_WaitForIdle *****************
  4570 ;; Defined at:
  4571 ;;		line 258 in file "../00-libfiles/i2c.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;		None
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;		None
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      void 
  4578 ;; Registers used:
  4579 ;;		None
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4585 ;;      Params:         0       0       0       0       0
  4586 ;;      Locals:         0       0       0       0       0
  4587 ;;      Temps:          0       0       0       0       0
  4588 ;;      Totals:         0       0       0       0       0
  4589 ;;Total ram usage:        0 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; This function calls:
  4592 ;;		Nothing
  4593 ;; This function is called by:
  4594 ;;		_I2C_Write
  4595 ;;		_I2C_Read
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           
  4600                           ;psect for function _i2c_WaitForIdle
  4601  0E1B                     _i2c_WaitForIdle:	
  4602  0E1B                     l216:	
  4603                           ;i2c.c: 260: while ( (SEN == 1) || (RSEN == 1) || (PEN == 1) || (RCEN == 1) || (R_W == 1
      +                          ) );
  4604                           
  4605                           ;incstack = 0
  4606                           ; Regs used in _i2c_WaitForIdle: []
  4607                           
  4608  0E1B  1683               	bsf	3,5	;RP0=1, select bank1
  4609  0E1C  1303               	bcf	3,6	;RP1=0, select bank1
  4610  0E1D  1C11               	btfss	17,0	;volatile
  4611  0E1E  1891               	btfsc	17,1	;volatile
  4612  0E1F  2E1B               	goto	l216
  4613  0E20  1D11               	btfss	17,2	;volatile
  4614  0E21  1991               	btfsc	17,3	;volatile
  4615  0E22  2E1B               	goto	l216
  4616  0E23  1D14               	btfss	20,2	;volatile
  4617  0E24  0008               	return
  4618  0E25  2E1B               	goto	l216
  4619  0E26                     __end_of_i2c_WaitForIdle:	
  4620                           
  4621                           	psect	text25
  4622  0E01                     __ptext25:	
  4623 ;; *************** function _i2c_NoAck *****************
  4624 ;; Defined at:
  4625 ;;		line 299 in file "../00-libfiles/i2c.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;		None
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;		None
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      void 
  4632 ;; Registers used:
  4633 ;;		None
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4639 ;;      Params:         0       0       0       0       0
  4640 ;;      Locals:         0       0       0       0       0
  4641 ;;      Temps:          0       0       0       0       0
  4642 ;;      Totals:         0       0       0       0       0
  4643 ;;Total ram usage:        0 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; This function calls:
  4646 ;;		Nothing
  4647 ;; This function is called by:
  4648 ;;		_I2C_Read
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           
  4653                           ;psect for function _i2c_NoAck
  4654  0E01                     _i2c_NoAck:	
  4655                           
  4656                           ;i2c.c: 301: ACKDT = 1;
  4657                           
  4658                           ;incstack = 0
  4659                           ; Regs used in _i2c_NoAck: []
  4660  0E01  1683               	bsf	3,5	;RP0=1, select bank1
  4661  0E02  1303               	bcf	3,6	;RP1=0, select bank1
  4662  0E03  1691               	bsf	17,5	;volatile
  4663                           
  4664                           ;i2c.c: 302: ACKEN = 1;
  4665  0E04  1611               	bsf	17,4	;volatile
  4666  0E05                     l228:	
  4667                           ;i2c.c: 303: while(ACKEN == 1);
  4668                           
  4669  0E05  1E11               	btfss	17,4	;volatile
  4670  0E06  0008               	return
  4671  0E07  2E05               	goto	l228
  4672  0E08                     __end_of_i2c_NoAck:	
  4673                           
  4674                           	psect	text26
  4675  0DFA                     __ptext26:	
  4676 ;; *************** function _i2c_Ack *****************
  4677 ;; Defined at:
  4678 ;;		line 279 in file "../00-libfiles/i2c.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;		None
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;		None
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		None
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4692 ;;      Params:         0       0       0       0       0
  4693 ;;      Locals:         0       0       0       0       0
  4694 ;;      Temps:          0       0       0       0       0
  4695 ;;      Totals:         0       0       0       0       0
  4696 ;;Total ram usage:        0 bytes
  4697 ;; Hardware stack levels used:    1
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_I2C_Read
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           
  4706                           ;psect for function _i2c_Ack
  4707  0DFA                     _i2c_Ack:	
  4708                           
  4709                           ;i2c.c: 281: ACKDT = 0;
  4710                           
  4711                           ;incstack = 0
  4712                           ; Regs used in _i2c_Ack: []
  4713  0DFA  1683               	bsf	3,5	;RP0=1, select bank1
  4714  0DFB  1303               	bcf	3,6	;RP1=0, select bank1
  4715  0DFC  1291               	bcf	17,5	;volatile
  4716                           
  4717                           ;i2c.c: 282: ACKEN = 1;
  4718  0DFD  1611               	bsf	17,4	;volatile
  4719  0DFE                     l222:	
  4720                           ;i2c.c: 283: while(ACKEN == 1);
  4721                           
  4722  0DFE  1E11               	btfss	17,4	;volatile
  4723  0DFF  0008               	return
  4724  0E00  2DFE               	goto	l222
  4725  0E01                     __end_of_i2c_Ack:	
  4726  007E                     btemp	set	126	;btemp
  4727  007E                     wtemp	set	126
  4728  007E                     wtemp0	set	126
  4729  0080                     wtemp1	set	128
  4730  0082                     wtemp2	set	130
  4731  0084                     wtemp3	set	132
  4732  0086                     wtemp4	set	134
  4733  0088                     wtemp5	set	136
  4734  007F                     wtemp6	set	127
  4735  007E                     ttemp	set	126
  4736  007E                     ttemp0	set	126
  4737  0081                     ttemp1	set	129
  4738  0084                     ttemp2	set	132
  4739  0087                     ttemp3	set	135
  4740  007F                     ttemp4	set	127
  4741  007E                     ltemp	set	126
  4742  007E                     ltemp0	set	126
  4743  0082                     ltemp1	set	130
  4744  0086                     ltemp2	set	134
  4745  0080                     ltemp3	set	128


Data Sizes:
    Strings     38
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     19      19
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    RTC_GetDateTime@rtc	PTR struct . size(1) Largest target is 7
		 -> main@rtc(BANK1[7]), 

    RTC_SetDateTime@rtc	PTR struct . size(1) Largest target is 7
		 -> main@rtc(BANK1[7]), 

    UART_Printf@str	PTR unsigned char  size(1) Largest target is 0

    UART_Printf@argList	PTR const unsigned char  size(1) Largest target is 38
		 -> STR_1(CODE[38]), 

    UART_Printf@ptr	PTR const unsigned char  size(1) Largest target is 38
		 -> STR_1(CODE[38]), 

    UART_Printf@argp	PTR void [1] size(1) Largest target is 1
		 -> ?_UART_Printf(BANK0[1]), 

    UART_TxString@ptr_string	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _UART_TxString->_UART_TxChar
    _UART_TxFloatNumber->___ftmul
    _UART_TxFloatNumber->___lltoft
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftneg->___lltoft
    ___ftmul->___ftpack
    ___ftadd->___lltoft
    _UART_TxNumber->___lldiv
    ___bmul->___lldiv
    _UART_SetBaudRate->___lldiv
    _RTC_SetDateTime->_I2C_Write
    _RTC_Init->_I2C_Write
    _RTC_GetDateTime->_I2C_Read

Critical Paths under _main in BANK0

    _main->_UART_Printf
    _UART_Printf->_UART_TxFloatNumber
    _UART_TxFloatNumber->_UART_TxNumber
    ___fttol->___ftmul
    ___ftadd->___ftneg
    _UART_TxNumber->___bmul
    _UART_Init->_UART_SetBaudRate

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   15075
                                              0 BANK1     19    19      0
                    _RTC_GetDateTime
                           _RTC_Init
                    _RTC_SetDateTime
                          _UART_Init
                        _UART_Printf
 ---------------------------------------------------------------------------------
 (1) _UART_Printf                                         35    23     12   13556
                                             43 BANK0     35    23     12
                        _UART_TxChar
                 _UART_TxFloatNumber
                      _UART_TxNumber
                      _UART_TxString
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _UART_TxString                                        2     2      0      94
                                              1 COMMON     2     2      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxFloatNumber                                   8     5      3    9664
                                             35 BANK0      8     5      3
                        _UART_TxChar
                      _UART_TxNumber
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    1790
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     358
                                             10 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                              0 BANK0      3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2100
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2694
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _UART_TxNumber                                       31    26      5    2414
                                              4 BANK0     31    26      5
                        _UART_TxChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4     698
                                             16 BANK0      4     0      4
                   _UART_SetBaudRate
 ---------------------------------------------------------------------------------
 (2) _UART_SetBaudRate                                    16    12      4     623
                                              0 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _RTC_SetDateTime                                      1     1      0     203
                                              1 COMMON     1     1      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_Init                                             0     0      0      22
                           _I2C_Init
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_GetDateTime                                      2     2      0     249
                                              3 COMMON     2     2      0
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                    _i2c_WaitForIdle
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      46
                                              0 COMMON     3     3      0
                            _i2c_Ack
                          _i2c_NoAck
                    _i2c_WaitForIdle
 ---------------------------------------------------------------------------------
 (3) _i2c_WaitForIdle                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_NoAck                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTC_GetDateTime
     _I2C_Read
       _i2c_Ack
       _i2c_NoAck
       _i2c_WaitForIdle
     _I2C_Start
     _I2C_Stop
     _I2C_Write
       _i2c_WaitForIdle
   _RTC_Init
     _I2C_Init
     _I2C_Start
     _I2C_Stop
     _I2C_Write
       _i2c_WaitForIdle
   _RTC_SetDateTime
     _I2C_Start
     _I2C_Stop
     _I2C_Write
       _i2c_WaitForIdle
   _UART_Init
     _UART_SetBaudRate
       ___lldiv
   _UART_Printf
     _UART_TxChar
     _UART_TxFloatNumber
       _UART_TxChar
       _UART_TxNumber
         _UART_TxChar
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       ___ftadd
         ___ftneg (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
     _UART_TxNumber
       _UART_TxChar
       ___bmul
         ___lldiv (ARG)
       ___lldiv
     _UART_TxString
       _UART_TxChar
     ___bmul
       ___lldiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     13      13       7       23.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Feb 22 17:56:39 2016

       UART_SetBaudRate@var_baudRate_u32 0020                                        pc 0002  
                         ___bmul@product 0022                       __size_of_I2C_Start 0006  
                            __CFG_CP$OFF 0000                         ?_i2c_WaitForIdle 0070  
                     __size_of_I2C_Write 000D                                       _BF 04A0  
                                     l39 0E09                                       fsr 0004  
                           ___ftadd@exp1 002F                             ___ftadd@exp2 002E  
                            __CFG_LVP$ON 0000                             ___ftadd@sign 002D  
                                    l202 0E2B                                      l222 0DFE  
                                    l216 0E1B                                      l208 0E76  
                                    l228 0E05                                      l500 0FE7  
                                    l190 0DF1                                      l523 0569  
                                    l196 0DF7                                      l492 0FCA  
                                    l583 01AD                                      l499 0FDF  
                                    _PEN 048A                             __CFG_CPD$OFF 0000  
                                    _SEN 0488                                      _R_W 04A2  
                __end_of_RTC_SetDateTime 0F36                                      fsr0 0004  
                                    indf 0000                             __CFG_FOSC$HS 0000  
                                   l1323 0E37                                     l1403 0416  
                                   l1405 041A                                     l1501 0559  
                                   l1327 0E3D                                     l1343 0FA3  
                                   l1511 058D                                     l1503 0565  
                                   l1433 04A8                                     l1425 0493  
                                   l1417 0487                                     l1409 0425  
                                   l1353 0FCF                                     l1345 0FAF  
                                   l1521 05B0                                     l1427 0428  
                                   l1355 0FD9                                     l1347 0FB4  
                                   l1339 0F9C                                     l1507 057B  
                                   l1531 0316                                     l1373 0F46  
                                   l1429 0498                                     l1461 04EA  
                                   l1621 01BE                                     l1383 0F7E  
                                   l1375 0F56                                     l1439 04BD  
                                   l1471 0500                                     l1615 01A2  
                                   l1607 0185                                     l1631 0EC7  
                                   l1641 00AD                                     l1465 04F1  
                                   l1561 0393                                     l1553 037B  
                                   l1537 032C                                     l1617 01B0  
                                   l1609 0195                                     l1721 062C  
                                   l1387 0F8B                                     l1491 053B  
                                   l1483 051A                                     l1803 07A7  
                                   l1723 0631                                     l1637 0052  
                                   l1397 03D8                                     l1493 0540  
                                   l1565 03A3                                     l1549 036B  
                                   l1629 0EB5                                     l1741 066E  
                                   l1813 07BD                                     l1717 0604  
                                   l1495 0544                                     l1751 0695  
                                   l1815 07EF                                     l1489 052F  
                                   l1649 0E47                                     l1809 07BB  
                                   l1753 06AA                                     l1729 063D  
                                   l1817 07F5                                     l1771 070F  
                                   l1739 0658                                     l1819 05D5  
                                   l1915 01F8                                     l1685 0E8C  
                                   l1589 0153                                     l1765 06F0  
                                   l1687 0E8F                                     l1759 06C9  
                                   l1785 074B                                     l1777 0736  
                                   l1795 0777                                     l1787 075C  
                                   l1797 078A                                     STR_1 0009  
                                   u2005 015A                                     u2113 0050  
                                   u2123 0061                                     u2035 0186  
                                   u2140 009A                                     u2141 009B  
                                   u1325 0FEE                                     u1245 0FA8  
                                   u2142 00A0                                     u1430 0407  
                                   u2143 00A1                                     u2135 0074  
                                   u1440 0408                                     u1424 03EC  
                                   u1425 03E9                                     u1265 0FC3  
                                   u2065 01A4                                     u1355 0F4A  
                                   u1285 0FD2                                     u1375 0F58  
                                   u2095 0EBA                                     u1385 0F6D  
                                   u1395 0F7F                                     u1725 0530  
                                   u1905 037C                                     u1755 0545  
                                   u1915 0384                                     u1695 051B  
                                   u1785 055A                                     u1865 0338  
                                   u1955 03A4                                     u1875 034A  
                                   u1965 03AC                                     _RCEN 048B  
                                   _RCIF 0065                                     _RSEN 0489  
                                   _TXIF 0064                             __CFG_WRT$OFF 0000  
                     _UART_TxFloatNumber 025F                                     _main 01C7  
                           ___ftpack@arg 0070                             ___ftpack@exp 0073  
                       __end_of_I2C_Init 0040                         __end_of_I2C_Read 0E91  
                                   btemp 007E                         __end_of_I2C_Stop 0DFA  
                                   ltemp 007E                                     start 0000  
                                   ttemp 007E                                     wtemp 007E  
                    ?_UART_TxFloatNumber 0043                        ___bmul@multiplier 0023  
                           ___ftmul@cntr 0028                          __end_of_i2c_Ack 0E01  
                           ___ftmul@sign 0029      UART_TxFloatNumber@v_floatNumber_f32 0043  
                           ___fttol@exp1 0037                             ___fttol@lval 0033  
                                  ?_main 0070                                    _ACKEN 048C  
                                  _ACKDT 048D                          __end_of___ftadd 05CA  
                          __CFG_WDTE$OFF 0000                          __end_of___ftneg 0E1B  
                        __end_of___lldiv 0F94                          __end_of___ftmul 03CF  
                        __end_of___fttol 01C7                                    _RCREG 001A  
                                  _RCSTA 0018                                    _SPBRG 0099  
                                  _TRISC 0087                                    _TXREG 0019  
                                  _TXSTA 0098                     ??_UART_TxFloatNumber 0046  
                           ___lltoft@exp 007D                       __size_of_UART_Init 0016  
                          ___ftpack@sign 0074                         __end_of_RTC_Init 0EB1  
                      __end_of_I2C_Start 0DF4                        __end_of_I2C_Write 0E33  
                         __CFG_BOREN$OFF 0000                                    pclath 000A  
                                  ltemp0 007E                                    ltemp1 0082  
                                  ltemp2 0086                                    ltemp3 0080  
                                  ttemp0 007E                                    ttemp1 0081  
                                  ttemp2 0084                                    ttemp3 0087  
                                  ttemp4 007F                                    status 0003  
                                  wtemp0 007E                                    wtemp1 0080  
                                  wtemp2 0082                                    wtemp3 0084  
                                  wtemp4 0086                                    wtemp5 0088  
                                  wtemp6 007F                          __initialization 07FC  
                           __end_of_main 025F                                   ??_main 00A0  
                          ___fttol@sign1 0032                       RTC_SetDateTime@rtc 0071  
                       ?_RTC_SetDateTime 0070                       __size_of_i2c_NoAck 0007  
                       __end_of___ftpack 1000                         __end_of___lltoft 0EDC  
                      ?_UART_SetBaudRate 0020                                   _SSPADD 0093  
                                 _TRISC3 043B                                   _TRISC4 043C  
                                 _SSPCON 0014                                   _SSPBUF 0013  
                              ??_i2c_Ack 0070                       ??_UART_SetBaudRate 0024  
                         __CFG_PWRTE$OFF 0000                             ?_UART_TxChar 0070  
                           ?_UART_Printf 004B                    I2C_Write@v_i2cData_u8 0070  
                      __end_of_UART_Init 0E71                                   ___bmul 0E33  
                              ??___ftadd 0029                                ??___ftneg 007E  
                              ??___lldiv 0078                                ??___ftmul 0020  
                              ??___fttol 002E  UART_TxNumber@v_numOfDigitsToTransmit_u8 0028  
                  ___ftmul@f3_as_product 0025                                ?_I2C_Init 0070  
                              ?_I2C_Read 0070                                ?_I2C_Stop 0070  
                __end_of__initialization 07FC                               ___ftadd@f1 0023  
                             ___ftadd@f2 0026                    __end_of_UART_TxNumber 04C1  
                  __end_of_UART_TxString 0E5B                UART_Printf@v_floatNum_f32 0059  
                             ___ftneg@f1 0020                      ___bmul@multiplicand 0020  
                             ___ftmul@f1 0078                               ___ftmul@f2 007B  
                             ___fttol@f1 002A                           __pcstackCOMMON 0070  
                             ___lltoft@c 0078                        __end_of_i2c_NoAck 0E08  
                              ?_RTC_Init 0070                               ??_I2C_Init 0070  
                             ??_I2C_Read 0070                               ??_I2C_Stop 0070  
               __size_of_RTC_GetDateTime 007F                               __pmaintext 01C7  
                                ?___bmul 0020                               ??_RTC_Init 0071  
                              ?___ftpack 0070                                ?___lltoft 0078  
               __size_of_i2c_WaitForIdle 000B                                  _SSPSTAT 0094  
                             __stringtab 0003                                  _i2c_Ack 0DFA  
                              _I2C_Start 0DEE                                _I2C_Write 0E26  
                   __size_of_UART_TxChar 0009                          __size_of___bmul 0013  
                   __size_of_UART_Printf 0232                                  ___ftadd 04C1  
                                ___ftneg 0E11                                  ___lldiv 0F36  
                                ___ftmul 02FE                                  ___fttol 0139  
                             ??___ftpack 0075                               ??___lltoft 007C  
                                __ptext1 05CA                                  __ptext2 0E46  
                                __ptext3 025F                                  __ptext4 0EB1  
                                __ptext5 0139                                  __ptext6 0E11  
                                __ptext7 02FE                                  __ptext8 04C1  
                                __ptext9 0F94              __size_of_UART_TxFloatNumber 009F  
                         UART_Printf@ptr 006A                           UART_Printf@str 005C  
                                main@rtc 00AC                     end_of_initialization 07FC  
                         UART_TxNumber@a 0035                           UART_TxNumber@i 0042  
                 I2C_Read@v_ackOption_u8 0071               UART_TxChar@var_uartData_u8 0070  
                             ?_I2C_Start 0070                               ?_I2C_Write 0070  
                      ??_RTC_GetDateTime 0073                          ___lldiv@divisor 0070  
                        ___lldiv@counter 007D                                _UART_Init 0E5B  
              __size_of_UART_SetBaudRate 007A                        __size_of_I2C_Init 000E  
                      __size_of_I2C_Read 0020                        __size_of_I2C_Stop 0006  
               __size_of_RTC_SetDateTime 005A                        ??_i2c_WaitForIdle 0070  
        UART_TxNumber@v_numericSystem_u8 0041                              ___ftmul@exp 0024  
                         __end_of___bmul 0E46                               ?_UART_Init 0030  
                              _i2c_NoAck 0E01                        __size_of_RTC_Init 0020  
                    start_initialization 07FC                              ??_I2C_Start 0070  
                            ??_I2C_Write 0070                                 ??___bmul 0021  
                             ?_i2c_NoAck 0070                        __size_of___ftpack 006C  
                 __size_of_UART_TxNumber 00F2                        __size_of___lltoft 002B  
                              ___latbits 0002                   __size_of_UART_TxString 0015  
                          __pcstackBANK0 0020                            __pcstackBANK1 00A0  
                               ?_i2c_Ack 0070                        ??_RTC_SetDateTime 0071  
              UART_Init@var_baudRate_u32 0030                                 ?___ftadd 0023  
                               ?___ftneg 0020                                 ?___lldiv 0070  
                               ?___ftmul 0078                                 ?___fttol 002A  
                            ??_UART_Init 007E                         _UART_SetBaudRate 0040  
                   I2C_Read@v_i2cData_u8 0072                                __pstrings 0003  
                               _I2C_Init 0032                                 _I2C_Read 0E71  
                               _I2C_Stop 0DF4                          _RTC_GetDateTime 00BA  
                          UART_Printf@ch 006B                            ??_UART_TxChar 0070  
                          _UART_TxNumber 03CF                            ??_UART_Printf 0057  
                          _UART_TxString 0E46                  UART_TxString@ptr_string 0072  
                               _RTC_Init 0E91                              __stringbase 0008  
                            ??_i2c_NoAck 0070               __end_of_UART_TxFloatNumber 02FE  
                        _i2c_WaitForIdle 0E1B                UART_TxNumber@v_number_u32 0024  
                         ?_UART_TxNumber 0024                         __size_of_i2c_Ack 0007  
                         ?_UART_TxString 0070                         _UART_TxNumber$63 003F  
                    __end_of_UART_TxChar 0E11                         __size_of___ftadd 0109  
                       __size_of___ftneg 000A                         __size_of___lldiv 005E  
                       __size_of___ftmul 00D1                         __size_of___fttol 008E  
                    __end_of_UART_Printf 07FC                                 ___ftpack 0F94  
                     __end_of__stringtab 0009                                 ___lltoft 0EB1  
                __end_of_RTC_GetDateTime 0139                                 __ptext10 03CF  
                               __ptext11 0E33                                 __ptext20 0E26  
                               __ptext12 0E08                                 __ptext21 0DF4  
                               __ptext13 0E5B                                 __ptext22 0DEE  
                               __ptext14 0040                                 __ptext23 0E71  
                               __ptext15 0F36                                 __ptext24 0E1B  
                               __ptext16 0EDC                                 __ptext25 0E01  
                               __ptext17 0E91                                 __ptext26 0DFA  
                               __ptext18 0032                                 __ptext19 00BA  
                          __size_of_main 0098                          UART_Printf@argp 006D  
                __end_of_i2c_WaitForIdle 0E26                 UART_SetBaudRate@RegValue 002C  
                     RTC_GetDateTime@rtc 0074                          _RTC_SetDateTime 0EDC  
                        ??_UART_TxNumber 0029                 __end_of_UART_SetBaudRate 00BA  
                        ??_UART_TxString 0071                         ___lldiv@dividend 0074  
                              stringcode 0003                              _UART_TxChar 0E08  
                            _UART_Printf 05CA                         ?_RTC_GetDateTime 0070  
                       ___lldiv@quotient 0079       UART_TxFloatNumber@v_tempNumber_u32 0047  
                               stringdir 0003                                 stringtab 0003  
  UART_Printf@v_numOfDigitsToTransmit_u8 006C                       UART_Printf@argList 005D  
                   UART_Printf@v_num_s16 0062                     UART_Printf@v_num_s32 005E  
                   UART_Printf@v_num_u16 0068                     UART_Printf@v_num_u32 0064  
