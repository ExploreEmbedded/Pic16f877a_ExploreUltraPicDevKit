

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Tue May 17 12:02:36 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	dabs	1,0x7E,2
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  0000                     	;# 
   194  0001                     	;# 
   195  0002                     	;# 
   196  0003                     	;# 
   197  0004                     	;# 
   198  0005                     	;# 
   199  0006                     	;# 
   200  0007                     	;# 
   201  0008                     	;# 
   202  0009                     	;# 
   203  000A                     	;# 
   204  000B                     	;# 
   205  000C                     	;# 
   206  000D                     	;# 
   207  000E                     	;# 
   208  000E                     	;# 
   209  000F                     	;# 
   210  0010                     	;# 
   211  0011                     	;# 
   212  0012                     	;# 
   213  0013                     	;# 
   214  0014                     	;# 
   215  0015                     	;# 
   216  0015                     	;# 
   217  0016                     	;# 
   218  0017                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  001B                     	;# 
   223  001B                     	;# 
   224  001C                     	;# 
   225  001D                     	;# 
   226  001E                     	;# 
   227  001F                     	;# 
   228  0081                     	;# 
   229  0085                     	;# 
   230  0086                     	;# 
   231  0087                     	;# 
   232  0088                     	;# 
   233  0089                     	;# 
   234  008C                     	;# 
   235  008D                     	;# 
   236  008E                     	;# 
   237  0091                     	;# 
   238  0092                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0098                     	;# 
   242  0099                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  010C                     	;# 
   248  010D                     	;# 
   249  010E                     	;# 
   250  010F                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0006                     	;# 
   260  0007                     	;# 
   261  0008                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  000E                     	;# 
   268  000E                     	;# 
   269  000F                     	;# 
   270  0010                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0015                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001B                     	;# 
   284  001C                     	;# 
   285  001D                     	;# 
   286  001E                     	;# 
   287  001F                     	;# 
   288  0081                     	;# 
   289  0085                     	;# 
   290  0086                     	;# 
   291  0087                     	;# 
   292  0088                     	;# 
   293  0089                     	;# 
   294  008C                     	;# 
   295  008D                     	;# 
   296  008E                     	;# 
   297  0091                     	;# 
   298  0092                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  009F                     	;# 
   307  010C                     	;# 
   308  010D                     	;# 
   309  010E                     	;# 
   310  010F                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313  0000                     	;# 
   314  0001                     	;# 
   315  0002                     	;# 
   316  0003                     	;# 
   317  0004                     	;# 
   318  0005                     	;# 
   319  0006                     	;# 
   320  0007                     	;# 
   321  0008                     	;# 
   322  0009                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000D                     	;# 
   327  000E                     	;# 
   328  000E                     	;# 
   329  000F                     	;# 
   330  0010                     	;# 
   331  0011                     	;# 
   332  0012                     	;# 
   333  0013                     	;# 
   334  0014                     	;# 
   335  0015                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0017                     	;# 
   339  0018                     	;# 
   340  0019                     	;# 
   341  001A                     	;# 
   342  001B                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  001D                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  0081                     	;# 
   349  0085                     	;# 
   350  0086                     	;# 
   351  0087                     	;# 
   352  0088                     	;# 
   353  0089                     	;# 
   354  008C                     	;# 
   355  008D                     	;# 
   356  008E                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373  0000                     	;# 
   374  0001                     	;# 
   375  0002                     	;# 
   376  0003                     	;# 
   377  0004                     	;# 
   378  0005                     	;# 
   379  0006                     	;# 
   380  0007                     	;# 
   381  0008                     	;# 
   382  0009                     	;# 
   383  000A                     	;# 
   384  000B                     	;# 
   385  000C                     	;# 
   386  000D                     	;# 
   387  000E                     	;# 
   388  000E                     	;# 
   389  000F                     	;# 
   390  0010                     	;# 
   391  0011                     	;# 
   392  0012                     	;# 
   393  0013                     	;# 
   394  0014                     	;# 
   395  0015                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0017                     	;# 
   399  0018                     	;# 
   400  0019                     	;# 
   401  001A                     	;# 
   402  001B                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  001D                     	;# 
   406  001E                     	;# 
   407  001F                     	;# 
   408  0081                     	;# 
   409  0085                     	;# 
   410  0086                     	;# 
   411  0087                     	;# 
   412  0088                     	;# 
   413  0089                     	;# 
   414  008C                     	;# 
   415  008D                     	;# 
   416  008E                     	;# 
   417  0091                     	;# 
   418  0092                     	;# 
   419  0093                     	;# 
   420  0094                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009C                     	;# 
   424  009D                     	;# 
   425  009E                     	;# 
   426  009F                     	;# 
   427  010C                     	;# 
   428  010D                     	;# 
   429  010E                     	;# 
   430  010F                     	;# 
   431  018C                     	;# 
   432  018D                     	;# 
   433  0000                     	;# 
   434  0001                     	;# 
   435  0002                     	;# 
   436  0003                     	;# 
   437  0004                     	;# 
   438  0005                     	;# 
   439  0006                     	;# 
   440  0007                     	;# 
   441  0008                     	;# 
   442  0009                     	;# 
   443  000A                     	;# 
   444  000B                     	;# 
   445  000C                     	;# 
   446  000D                     	;# 
   447  000E                     	;# 
   448  000E                     	;# 
   449  000F                     	;# 
   450  0010                     	;# 
   451  0011                     	;# 
   452  0012                     	;# 
   453  0013                     	;# 
   454  0014                     	;# 
   455  0015                     	;# 
   456  0015                     	;# 
   457  0016                     	;# 
   458  0017                     	;# 
   459  0018                     	;# 
   460  0019                     	;# 
   461  001A                     	;# 
   462  001B                     	;# 
   463  001B                     	;# 
   464  001C                     	;# 
   465  001D                     	;# 
   466  001E                     	;# 
   467  001F                     	;# 
   468  0081                     	;# 
   469  0085                     	;# 
   470  0086                     	;# 
   471  0087                     	;# 
   472  0088                     	;# 
   473  0089                     	;# 
   474  008C                     	;# 
   475  008D                     	;# 
   476  008E                     	;# 
   477  0091                     	;# 
   478  0092                     	;# 
   479  0093                     	;# 
   480  0094                     	;# 
   481  0098                     	;# 
   482  0099                     	;# 
   483  009C                     	;# 
   484  009D                     	;# 
   485  009E                     	;# 
   486  009F                     	;# 
   487  010C                     	;# 
   488  010D                     	;# 
   489  010E                     	;# 
   490  010F                     	;# 
   491  018C                     	;# 
   492  018D                     	;# 
   493                           
   494                           	psect	idataBANK1
   495  12B4                     __pidataBANK1:	
   496                           
   497                           ;initializer for _ARR_LcdLineNumAddress_U8
   498  12B4  3480               	retlw	128
   499  12B5  34C0               	retlw	192
   500  12B6  3490               	retlw	144
   501  12B7  34D0               	retlw	208
   502                           
   503                           ;initializer for seg_test@F1296
   504  12B8  34C0               	retlw	192
   505  12B9  34F9               	retlw	249
   506  12BA  34A4               	retlw	164
   507  12BB  34B0               	retlw	176
   508                           
   509                           	psect	stringtext
   510  0800                     __pstringtext:	
   511  0800                     stringtab:	
   512  0800                     __stringtab:	
   513                           
   514                           ;	String table - string pointers are 2 bytes each
   515  0800  1BFF               	btfsc	btemp+1,7
   516  0801  280A               	ljmp	stringcode
   517  0802  1383               	bcf	3,7
   518  0803  187F               	btfsc	btemp+1,0
   519  0804  1783               	bsf	3,7
   520  0805  0800               	movf	0,w
   521  0806  0A84               	incf	4,f
   522  0807  1903               	skipnz
   523  0808  0AFF               	incf	btemp+1,f
   524  0809  0008               	return
   525  080A                     stringcode:	
   526  080A  087F               	movf	btemp+1,w
   527  080B  397F               	andlw	127
   528  080C  008A               	movwf	10
   529  080D  0804               	movf	4,w
   530  080E  0A84               	incf	4,f
   531  080F  1903               	skipnz
   532  0810  0AFF               	incf	btemp+1,f
   533  0811  0082               	movwf	2
   534  0812                     __stringbase:	
   535  0812                     __end_of__stringtab:	
   536  0812                     _A_KeyLookUptable_U8:	
   537  0812  3430               	retlw	48
   538  0813  3431               	retlw	49
   539  0814  3432               	retlw	50
   540  0815  3433               	retlw	51
   541  0816  3434               	retlw	52
   542  0817  3435               	retlw	53
   543  0818  3436               	retlw	54
   544  0819  3437               	retlw	55
   545  081A  3438               	retlw	56
   546  081B  3439               	retlw	57
   547  081C  3441               	retlw	65
   548  081D  3442               	retlw	66
   549  081E  3443               	retlw	67
   550  081F  3444               	retlw	68
   551  0820  3445               	retlw	69
   552  0821  3446               	retlw	70
   553  0822                     __end_of_A_KeyLookUptable_U8:	
   554  001F                     _ADCON0	set	31
   555  001E                     _ADRESH	set	30
   556  0005                     _PORTA	set	5
   557  0006                     _PORTB	set	6
   558  0007                     _PORTC	set	7
   559  0008                     _PORTD	set	8
   560  0009                     _PORTE	set	9
   561  001A                     _RCREG	set	26
   562  0018                     _RCSTA	set	24
   563  0013                     _SSPBUF	set	19
   564  0014                     _SSPCON	set	20
   565  0019                     _TXREG	set	25
   566  00F8                     _ADON	set	248
   567  0018                     _CARRY	set	24
   568  005F                     _GIE	set	95
   569  00FA                     _GO	set	250
   570  00FA                     _GO_DONE	set	250
   571  0065                     _RCIF	set	101
   572  0064                     _TXIF	set	100
   573  009F                     _ADCON1	set	159
   574  009E                     _ADRESL	set	158
   575  0099                     _SPBRG	set	153
   576  0093                     _SSPADD	set	147
   577  0094                     _SSPSTAT	set	148
   578  0085                     _TRISA	set	133
   579  0086                     _TRISB	set	134
   580  0087                     _TRISC	set	135
   581  0088                     _TRISD	set	136
   582  0089                     _TRISE	set	137
   583  0098                     _TXSTA	set	152
   584  048D                     _ACKDT	set	1165
   585  048C                     _ACKEN	set	1164
   586  04A0                     _BF	set	1184
   587  048A                     _PEN	set	1162
   588  048B                     _RCEN	set	1163
   589  0489                     _RSEN	set	1161
   590  04A2                     _R_W	set	1186
   591  0488                     _SEN	set	1160
   592  043B                     _TRISC3	set	1083
   593  043C                     _TRISC4	set	1084
   594  010D                     _EEADR	set	269
   595  010C                     _EEDATA	set	268
   596  018C                     _EECON1	set	396
   597  018D                     _EECON2	set	397
   598  0C60                     _RD	set	3168
   599  0C61                     _WR	set	3169
   600  0C62                     _WREN	set	3170
   601  0822                     STR_1:	
   602  0822  340A               	retlw	10
   603  0823  340D               	retlw	13
   604  0824  3450               	retlw	80	;'P'
   605  0825  3449               	retlw	73	;'I'
   606  0826  3443               	retlw	67	;'C'
   607  0827  3420               	retlw	32	;' '
   608  0828  3455               	retlw	85	;'U'
   609  0829  346C               	retlw	108	;'l'
   610  082A  3474               	retlw	116	;'t'
   611  082B  3472               	retlw	114	;'r'
   612  082C  3473               	retlw	115	;'s'
   613  082D  3420               	retlw	32	;' '
   614  082E  3462               	retlw	98	;'b'
   615  082F  3461               	retlw	97	;'a'
   616  0830  346F               	retlw	111	;'o'
   617  0831  3472               	retlw	114	;'r'
   618  0832  3464               	retlw	100	;'d'
   619  0833  3420               	retlw	32	;' '
   620  0834  346D               	retlw	109	;'m'
   621  0835  3465               	retlw	101	;'e'
   622  0836  346E               	retlw	110	;'n'
   623  0837  3475               	retlw	117	;'u'
   624  0838  3420               	retlw	32	;' '
   625  0839  3476               	retlw	118	;'v'
   626  083A  3432               	retlw	50	;'2'
   627  083B  342E               	retlw	46	;'.'
   628  083C  3430               	retlw	48	;'0'
   629  083D  340D               	retlw	13
   630  083E  340A               	retlw	10
   631  083F  3420               	retlw	32	;' '
   632  0840  3431               	retlw	49	;'1'
   633  0841  343A               	retlw	58	;':'
   634  0842  3447               	retlw	71	;'G'
   635  0843  3450               	retlw	80	;'P'
   636  0844  3449               	retlw	73	;'I'
   637  0845  344F               	retlw	79	;'O'
   638  0846  3420               	retlw	32	;' '
   639  0847  3442               	retlw	66	;'B'
   640  0848  346C               	retlw	108	;'l'
   641  0849  3469               	retlw	105	;'i'
   642  084A  346E               	retlw	110	;'n'
   643  084B  346B               	retlw	107	;'k'
   644  084C  340D               	retlw	13
   645  084D  340A               	retlw	10
   646  084E  3420               	retlw	32	;' '
   647  084F  3432               	retlw	50	;'2'
   648  0850  343A               	retlw	58	;':'
   649  0851  344C               	retlw	76	;'L'
   650  0852  3443               	retlw	67	;'C'
   651  0853  3444               	retlw	68	;'D'
   652  0854  3420               	retlw	32	;' '
   653  0855  3438               	retlw	56	;'8'
   654  0856  342D               	retlw	45	;'-'
   655  0857  3462               	retlw	98	;'b'
   656  0858  3469               	retlw	105	;'i'
   657  0859  3474               	retlw	116	;'t'
   658  085A  3420               	retlw	32	;' '
   659  085B  340A               	retlw	10
   660  085C  340D               	retlw	13
   661  085D  3420               	retlw	32	;' '
   662  085E  3433               	retlw	51	;'3'
   663  085F  343A               	retlw	58	;':'
   664  0860  344C               	retlw	76	;'L'
   665  0861  3443               	retlw	67	;'C'
   666  0862  3444               	retlw	68	;'D'
   667  0863  3420               	retlw	32	;' '
   668  0864  3434               	retlw	52	;'4'
   669  0865  342D               	retlw	45	;'-'
   670  0866  3462               	retlw	98	;'b'
   671  0867  3469               	retlw	105	;'i'
   672  0868  3474               	retlw	116	;'t'
   673  0869  340A               	retlw	10
   674  086A  340D               	retlw	13
   675  086B  3420               	retlw	32	;' '
   676  086C  3434               	retlw	52	;'4'
   677  086D  343A               	retlw	58	;':'
   678  086E  3437               	retlw	55	;'7'
   679  086F  342D               	retlw	45	;'-'
   680  0870  3453               	retlw	83	;'S'
   681  0871  3465               	retlw	101	;'e'
   682  0872  3467               	retlw	103	;'g'
   683  0873  346D               	retlw	109	;'m'
   684  0874  3465               	retlw	101	;'e'
   685  0875  346E               	retlw	110	;'n'
   686  0876  3474               	retlw	116	;'t'
   687  0877  340A               	retlw	10
   688  0878  340D               	retlw	13
   689  0879  3420               	retlw	32	;' '
   690  087A  3435               	retlw	53	;'5'
   691  087B  343A               	retlw	58	;':'
   692  087C  3452               	retlw	82	;'R'
   693  087D  3454               	retlw	84	;'T'
   694  087E  3443               	retlw	67	;'C'
   695  087F  340A               	retlw	10
   696  0880  340D               	retlw	13
   697  0881  3420               	retlw	32	;' '
   698  0882  3436               	retlw	54	;'6'
   699  0883  343A               	retlw	58	;':'
   700  0884  3445               	retlw	69	;'E'
   701  0885  3445               	retlw	69	;'E'
   702  0886  3450               	retlw	80	;'P'
   703  0887  3452               	retlw	82	;'R'
   704  0888  344F               	retlw	79	;'O'
   705  0889  344D               	retlw	77	;'M'
   706  088A  340A               	retlw	10
   707  088B  340D               	retlw	13
   708  088C  3420               	retlw	32	;' '
   709  088D  3437               	retlw	55	;'7'
   710  088E  343A               	retlw	58	;':'
   711  088F  3441               	retlw	65	;'A'
   712  0890  3444               	retlw	68	;'D'
   713  0891  3443               	retlw	67	;'C'
   714  0892  340A               	retlw	10
   715  0893  340D               	retlw	13
   716  0894  3420               	retlw	32	;' '
   717  0895  3438               	retlw	56	;'8'
   718  0896  343A               	retlw	58	;':'
   719  0897  344B               	retlw	75	;'K'
   720  0898  3465               	retlw	101	;'e'
   721  0899  3479               	retlw	121	;'y'
   722  089A  3470               	retlw	112	;'p'
   723  089B  3461               	retlw	97	;'a'
   724  089C  3464               	retlw	100	;'d'
   725  089D  3420               	retlw	32	;' '
   726  089E  340A               	retlw	10
   727  089F  340D               	retlw	13
   728  08A0  3420               	retlw	32	;' '
   729  08A1  3445               	retlw	69	;'E'
   730  08A2  346E               	retlw	110	;'n'
   731  08A3  3474               	retlw	116	;'t'
   732  08A4  3465               	retlw	101	;'e'
   733  08A5  3472               	retlw	114	;'r'
   734  08A6  3420               	retlw	32	;' '
   735  08A7  346F               	retlw	111	;'o'
   736  08A8  3470               	retlw	112	;'p'
   737  08A9  3474               	retlw	116	;'t'
   738  08AA  3469               	retlw	105	;'i'
   739  08AB  346F               	retlw	111	;'o'
   740  08AC  346E               	retlw	110	;'n'
   741  08AD  343A               	retlw	58	;':'
   742  08AE  3400               	retlw	0
   743  08AF                     STR_13:	
   744  08AF  340A               	retlw	10
   745  08B0  340D               	retlw	13
   746  08B1  3420               	retlw	32	;' '
   747  08B2  3453               	retlw	83	;'S'
   748  08B3  3465               	retlw	101	;'e'
   749  08B4  3467               	retlw	103	;'g'
   750  08B5  346D               	retlw	109	;'m'
   751  08B6  3465               	retlw	101	;'e'
   752  08B7  346E               	retlw	110	;'n'
   753  08B8  3474               	retlw	116	;'t'
   754  08B9  3420               	retlw	32	;' '
   755  08BA  3444               	retlw	68	;'D'
   756  08BB  3461               	retlw	97	;'a'
   757  08BC  3474               	retlw	116	;'t'
   758  08BD  3461               	retlw	97	;'a'
   759  08BE  3442               	retlw	66	;'B'
   760  08BF  3475               	retlw	117	;'u'
   761  08C0  3473               	retlw	115	;'s'
   762  08C1  343A               	retlw	58	;':'
   763  08C2  3420               	retlw	32	;' '
   764  08C3  3450               	retlw	80	;'P'
   765  08C4  344F               	retlw	79	;'O'
   766  08C5  3452               	retlw	82	;'R'
   767  08C6  3454               	retlw	84	;'T'
   768  08C7  3444               	retlw	68	;'D'
   769  08C8  3420               	retlw	32	;' '
   770  08C9  3420               	retlw	32	;' '
   771  08CA  3420               	retlw	32	;' '
   772  08CB  3420               	retlw	32	;' '
   773  08CC  3453               	retlw	83	;'S'
   774  08CD  3465               	retlw	101	;'e'
   775  08CE  3467               	retlw	103	;'g'
   776  08CF  3420               	retlw	32	;' '
   777  08D0  3473               	retlw	115	;'s'
   778  08D1  3465               	retlw	101	;'e'
   779  08D2  346C               	retlw	108	;'l'
   780  08D3  3465               	retlw	101	;'e'
   781  08D4  3463               	retlw	99	;'c'
   782  08D5  3474               	retlw	116	;'t'
   783  08D6  343A               	retlw	58	;':'
   784  08D7  3420               	retlw	32	;' '
   785  08D8  3453               	retlw	83	;'S'
   786  08D9  3431               	retlw	49	;'1'
   787  08DA  342D               	retlw	45	;'-'
   788  08DB  343E               	retlw	62	;'>'
   789  08DC  3450               	retlw	80	;'P'
   790  08DD  3442               	retlw	66	;'B'
   791  08DE  342E               	retlw	46	;'.'
   792  08DF  3430               	retlw	48	;'0'
   793  08E0  3420               	retlw	32	;' '
   794  08E1  3453               	retlw	83	;'S'
   795  08E2  3432               	retlw	50	;'2'
   796  08E3  342D               	retlw	45	;'-'
   797  08E4  343E               	retlw	62	;'>'
   798  08E5  3450               	retlw	80	;'P'
   799  08E6  3442               	retlw	66	;'B'
   800  08E7  342E               	retlw	46	;'.'
   801  08E8  3431               	retlw	49	;'1'
   802  08E9  3420               	retlw	32	;' '
   803  08EA  3453               	retlw	83	;'S'
   804  08EB  3433               	retlw	51	;'3'
   805  08EC  342D               	retlw	45	;'-'
   806  08ED  343E               	retlw	62	;'>'
   807  08EE  3450               	retlw	80	;'P'
   808  08EF  3442               	retlw	66	;'B'
   809  08F0  342E               	retlw	46	;'.'
   810  08F1  3432               	retlw	50	;'2'
   811  08F2  3420               	retlw	32	;' '
   812  08F3  3453               	retlw	83	;'S'
   813  08F4  3434               	retlw	52	;'4'
   814  08F5  342D               	retlw	45	;'-'
   815  08F6  343E               	retlw	62	;'>'
   816  08F7  3450               	retlw	80	;'P'
   817  08F8  3442               	retlw	66	;'B'
   818  08F9  342E               	retlw	46	;'.'
   819  08FA  3433               	retlw	51	;'3'
   820  08FB  3400               	retlw	0
   821  08FC                     STR_9:	
   822  08FC  340A               	retlw	10
   823  08FD  340D               	retlw	13
   824  08FE  3420               	retlw	32	;' '
   825  08FF  344C               	retlw	76	;'L'
   826  0900  3443               	retlw	67	;'C'
   827  0901  3444               	retlw	68	;'D'
   828  0902  3420               	retlw	32	;' '
   829  0903  3444               	retlw	68	;'D'
   830  0904  3461               	retlw	97	;'a'
   831  0905  3474               	retlw	116	;'t'
   832  0906  3461               	retlw	97	;'a'
   833  0907  3442               	retlw	66	;'B'
   834  0908  3475               	retlw	117	;'u'
   835  0909  3473               	retlw	115	;'s'
   836  090A  343A               	retlw	58	;':'
   837  090B  3428               	retlw	40	;'('
   838  090C  3450               	retlw	80	;'P'
   839  090D  3444               	retlw	68	;'D'
   840  090E  3434               	retlw	52	;'4'
   841  090F  342D               	retlw	45	;'-'
   842  0910  3450               	retlw	80	;'P'
   843  0911  3444               	retlw	68	;'D'
   844  0912  3437               	retlw	55	;'7'
   845  0913  3429               	retlw	41	;')'
   846  0914  3420               	retlw	32	;' '
   847  0915  3420               	retlw	32	;' '
   848  0916  3452               	retlw	82	;'R'
   849  0917  3453               	retlw	83	;'S'
   850  0918  342D               	retlw	45	;'-'
   851  0919  3450               	retlw	80	;'P'
   852  091A  3442               	retlw	66	;'B'
   853  091B  342E               	retlw	46	;'.'
   854  091C  3430               	retlw	48	;'0'
   855  091D  3420               	retlw	32	;' '
   856  091E  3420               	retlw	32	;' '
   857  091F  3452               	retlw	82	;'R'
   858  0920  3457               	retlw	87	;'W'
   859  0921  342D               	retlw	45	;'-'
   860  0922  3450               	retlw	80	;'P'
   861  0923  3442               	retlw	66	;'B'
   862  0924  342E               	retlw	46	;'.'
   863  0925  3431               	retlw	49	;'1'
   864  0926  3420               	retlw	32	;' '
   865  0927  3420               	retlw	32	;' '
   866  0928  3445               	retlw	69	;'E'
   867  0929  344E               	retlw	78	;'N'
   868  092A  342D               	retlw	45	;'-'
   869  092B  3450               	retlw	80	;'P'
   870  092C  3442               	retlw	66	;'B'
   871  092D  342E               	retlw	46	;'.'
   872  092E  3432               	retlw	50	;'2'
   873  092F  3420               	retlw	32	;' '
   874  0930  3400               	retlw	0
   875  0931                     STR_5:	
   876  0931  340A               	retlw	10
   877  0932  340D               	retlw	13
   878  0933  3420               	retlw	32	;' '
   879  0934  344C               	retlw	76	;'L'
   880  0935  3443               	retlw	67	;'C'
   881  0936  3444               	retlw	68	;'D'
   882  0937  3420               	retlw	32	;' '
   883  0938  3444               	retlw	68	;'D'
   884  0939  3461               	retlw	97	;'a'
   885  093A  3474               	retlw	116	;'t'
   886  093B  3461               	retlw	97	;'a'
   887  093C  3442               	retlw	66	;'B'
   888  093D  3475               	retlw	117	;'u'
   889  093E  3473               	retlw	115	;'s'
   890  093F  343A               	retlw	58	;':'
   891  0940  3420               	retlw	32	;' '
   892  0941  3450               	retlw	80	;'P'
   893  0942  344F               	retlw	79	;'O'
   894  0943  3452               	retlw	82	;'R'
   895  0944  3454               	retlw	84	;'T'
   896  0945  3444               	retlw	68	;'D'
   897  0946  3420               	retlw	32	;' '
   898  0947  3420               	retlw	32	;' '
   899  0948  3420               	retlw	32	;' '
   900  0949  3452               	retlw	82	;'R'
   901  094A  3453               	retlw	83	;'S'
   902  094B  342D               	retlw	45	;'-'
   903  094C  3450               	retlw	80	;'P'
   904  094D  3442               	retlw	66	;'B'
   905  094E  342E               	retlw	46	;'.'
   906  094F  3430               	retlw	48	;'0'
   907  0950  3420               	retlw	32	;' '
   908  0951  3452               	retlw	82	;'R'
   909  0952  3457               	retlw	87	;'W'
   910  0953  342D               	retlw	45	;'-'
   911  0954  3450               	retlw	80	;'P'
   912  0955  3442               	retlw	66	;'B'
   913  0956  342E               	retlw	46	;'.'
   914  0957  3431               	retlw	49	;'1'
   915  0958  3420               	retlw	32	;' '
   916  0959  3445               	retlw	69	;'E'
   917  095A  344E               	retlw	78	;'N'
   918  095B  342D               	retlw	45	;'-'
   919  095C  3450               	retlw	80	;'P'
   920  095D  3442               	retlw	66	;'B'
   921  095E  342E               	retlw	46	;'.'
   922  095F  3432               	retlw	50	;'2'
   923  0960  3420               	retlw	32	;' '
   924  0961  3400               	retlw	0
   925  0962                     STR_3:	
   926  0962  340A               	retlw	10
   927  0963  340D               	retlw	13
   928  0964  3443               	retlw	67	;'C'
   929  0965  346F               	retlw	111	;'o'
   930  0966  346E               	retlw	110	;'n'
   931  0967  346E               	retlw	110	;'n'
   932  0968  3465               	retlw	101	;'e'
   933  0969  3463               	retlw	99	;'c'
   934  096A  3474               	retlw	116	;'t'
   935  096B  3420               	retlw	32	;' '
   936  096C  3461               	retlw	97	;'a'
   937  096D  346E               	retlw	110	;'n'
   938  096E  3479               	retlw	121	;'y'
   939  096F  3420               	retlw	32	;' '
   940  0970  3449               	retlw	73	;'I'
   941  0971  344F               	retlw	79	;'O'
   942  0972  3420               	retlw	32	;' '
   943  0973  3450               	retlw	80	;'P'
   944  0974  3469               	retlw	105	;'i'
   945  0975  346E               	retlw	110	;'n'
   946  0976  3473               	retlw	115	;'s'
   947  0977  3420               	retlw	32	;' '
   948  0978  3474               	retlw	116	;'t'
   949  0979  346F               	retlw	111	;'o'
   950  097A  3420               	retlw	32	;' '
   951  097B  3462               	retlw	98	;'b'
   952  097C  3475               	retlw	117	;'u'
   953  097D  347A               	retlw	122	;'z'
   954  097E  347A               	retlw	122	;'z'
   955  097F  3465               	retlw	101	;'e'
   956  0980  3472               	retlw	114	;'r'
   957  0981  342C               	retlw	44	;','
   958  0982  3420               	retlw	32	;' '
   959  0983  3472               	retlw	114	;'r'
   960  0984  3465               	retlw	101	;'e'
   961  0985  346C               	retlw	108	;'l'
   962  0986  3461               	retlw	97	;'a'
   963  0987  3479               	retlw	121	;'y'
   964  0988  3473               	retlw	115	;'s'
   965  0989  342C               	retlw	44	;','
   966  098A  3420               	retlw	32	;' '
   967  098B  346C               	retlw	108	;'l'
   968  098C  3465               	retlw	101	;'e'
   969  098D  3464               	retlw	100	;'d'
   970  098E  3473               	retlw	115	;'s'
   971  098F  3420               	retlw	32	;' '
   972  0990  3400               	retlw	0
   973  0991                     STR_16:	
   974  0991  340A               	retlw	10
   975  0992  340D               	retlw	13
   976  0993  3420               	retlw	32	;' '
   977  0994  344D               	retlw	77	;'M'
   978  0995  3461               	retlw	97	;'a'
   979  0996  346B               	retlw	107	;'k'
   980  0997  3465               	retlw	101	;'e'
   981  0998  3420               	retlw	32	;' '
   982  0999  3463               	retlw	99	;'c'
   983  099A  346F               	retlw	111	;'o'
   984  099B  346E               	retlw	110	;'n'
   985  099C  346E               	retlw	110	;'n'
   986  099D  3465               	retlw	101	;'e'
   987  099E  3463               	retlw	99	;'c'
   988  099F  3474               	retlw	116	;'t'
   989  09A0  3469               	retlw	105	;'i'
   990  09A1  346F               	retlw	111	;'o'
   991  09A2  346E               	retlw	110	;'n'
   992  09A3  3473               	retlw	115	;'s'
   993  09A4  3420               	retlw	32	;' '
   994  09A5  3461               	retlw	97	;'a'
   995  09A6  346E               	retlw	110	;'n'
   996  09A7  3464               	retlw	100	;'d'
   997  09A8  3420               	retlw	32	;' '
   998  09A9  3468               	retlw	104	;'h'
   999  09AA  3469               	retlw	105	;'i'
  1000  09AB  3474               	retlw	116	;'t'
  1001  09AC  3420               	retlw	32	;' '
  1002  09AD  3427               	retlw	39	;'''
  1003  09AE  346B               	retlw	107	;'k'
  1004  09AF  3427               	retlw	39	;'''
  1005  09B0  3420               	retlw	32	;' '
  1006  09B1  3474               	retlw	116	;'t'
  1007  09B2  346F               	retlw	111	;'o'
  1008  09B3  3420               	retlw	32	;' '
  1009  09B4  3474               	retlw	116	;'t'
  1010  09B5  3465               	retlw	101	;'e'
  1011  09B6  3473               	retlw	115	;'s'
  1012  09B7  3474               	retlw	116	;'t'
  1013  09B8  3421               	retlw	33	;'!'
  1014  09B9  3420               	retlw	32	;' '
  1015  09BA  3400               	retlw	0
  1016  09BB                     STR_14:	
  1017  09BB  340A               	retlw	10
  1018  09BC  340D               	retlw	13
  1019  09BD  344D               	retlw	77	;'M'
  1020  09BE  3461               	retlw	97	;'a'
  1021  09BF  346B               	retlw	107	;'k'
  1022  09C0  3465               	retlw	101	;'e'
  1023  09C1  3420               	retlw	32	;' '
  1024  09C2  3463               	retlw	99	;'c'
  1025  09C3  346F               	retlw	111	;'o'
  1026  09C4  346E               	retlw	110	;'n'
  1027  09C5  346E               	retlw	110	;'n'
  1028  09C6  3465               	retlw	101	;'e'
  1029  09C7  3463               	retlw	99	;'c'
  1030  09C8  3474               	retlw	116	;'t'
  1031  09C9  3469               	retlw	105	;'i'
  1032  09CA  346F               	retlw	111	;'o'
  1033  09CB  346E               	retlw	110	;'n'
  1034  09CC  3473               	retlw	115	;'s'
  1035  09CD  3420               	retlw	32	;' '
  1036  09CE  3461               	retlw	97	;'a'
  1037  09CF  346E               	retlw	110	;'n'
  1038  09D0  3464               	retlw	100	;'d'
  1039  09D1  3420               	retlw	32	;' '
  1040  09D2  3468               	retlw	104	;'h'
  1041  09D3  3469               	retlw	105	;'i'
  1042  09D4  3474               	retlw	116	;'t'
  1043  09D5  3420               	retlw	32	;' '
  1044  09D6  3427               	retlw	39	;'''
  1045  09D7  346B               	retlw	107	;'k'
  1046  09D8  3427               	retlw	39	;'''
  1047  09D9  3420               	retlw	32	;' '
  1048  09DA  3474               	retlw	116	;'t'
  1049  09DB  346F               	retlw	111	;'o'
  1050  09DC  3420               	retlw	32	;' '
  1051  09DD  3474               	retlw	116	;'t'
  1052  09DE  3465               	retlw	101	;'e'
  1053  09DF  3473               	retlw	115	;'s'
  1054  09E0  3474               	retlw	116	;'t'
  1055  09E1  3421               	retlw	33	;'!'
  1056  09E2  3420               	retlw	32	;' '
  1057  09E3  3400               	retlw	0
  1058  09E4                     STR_6:	
  1059  09E4  340A               	retlw	10
  1060  09E5  340D               	retlw	13
  1061  09E6  3420               	retlw	32	;' '
  1062  09E7  344D               	retlw	77	;'M'
  1063  09E8  3461               	retlw	97	;'a'
  1064  09E9  346B               	retlw	107	;'k'
  1065  09EA  3465               	retlw	101	;'e'
  1066  09EB  3420               	retlw	32	;' '
  1067  09EC  3463               	retlw	99	;'c'
  1068  09ED  346F               	retlw	111	;'o'
  1069  09EE  346E               	retlw	110	;'n'
  1070  09EF  346E               	retlw	110	;'n'
  1071  09F0  3465               	retlw	101	;'e'
  1072  09F1  3463               	retlw	99	;'c'
  1073  09F2  3474               	retlw	116	;'t'
  1074  09F3  3469               	retlw	105	;'i'
  1075  09F4  346F               	retlw	111	;'o'
  1076  09F5  346E               	retlw	110	;'n'
  1077  09F6  3473               	retlw	115	;'s'
  1078  09F7  3420               	retlw	32	;' '
  1079  09F8  3461               	retlw	97	;'a'
  1080  09F9  346E               	retlw	110	;'n'
  1081  09FA  3464               	retlw	100	;'d'
  1082  09FB  3420               	retlw	32	;' '
  1083  09FC  3468               	retlw	104	;'h'
  1084  09FD  3469               	retlw	105	;'i'
  1085  09FE  3474               	retlw	116	;'t'
  1086  09FF  3420               	retlw	32	;' '
  1087  0A00  3427               	retlw	39	;'''
  1088  0A01  346B               	retlw	107	;'k'
  1089  0A02  3427               	retlw	39	;'''
  1090  0A03  3420               	retlw	32	;' '
  1091  0A04  3474               	retlw	116	;'t'
  1092  0A05  346F               	retlw	111	;'o'
  1093  0A06  3420               	retlw	32	;' '
  1094  0A07  3474               	retlw	116	;'t'
  1095  0A08  3465               	retlw	101	;'e'
  1096  0A09  3473               	retlw	115	;'s'
  1097  0A0A  3474               	retlw	116	;'t'
  1098  0A0B  3420               	retlw	32	;' '
  1099  0A0C  3400               	retlw	0
  1100  0A0D                     STR_4:	
  1101  0A0D  340A               	retlw	10
  1102  0A0E  340D               	retlw	13
  1103  0A0F  344D               	retlw	77	;'M'
  1104  0A10  3461               	retlw	97	;'a'
  1105  0A11  346B               	retlw	107	;'k'
  1106  0A12  3465               	retlw	101	;'e'
  1107  0A13  3420               	retlw	32	;' '
  1108  0A14  3463               	retlw	99	;'c'
  1109  0A15  346F               	retlw	111	;'o'
  1110  0A16  346E               	retlw	110	;'n'
  1111  0A17  346E               	retlw	110	;'n'
  1112  0A18  3465               	retlw	101	;'e'
  1113  0A19  3463               	retlw	99	;'c'
  1114  0A1A  3474               	retlw	116	;'t'
  1115  0A1B  3469               	retlw	105	;'i'
  1116  0A1C  346F               	retlw	111	;'o'
  1117  0A1D  346E               	retlw	110	;'n'
  1118  0A1E  3473               	retlw	115	;'s'
  1119  0A1F  3420               	retlw	32	;' '
  1120  0A20  3461               	retlw	97	;'a'
  1121  0A21  346E               	retlw	110	;'n'
  1122  0A22  3464               	retlw	100	;'d'
  1123  0A23  3420               	retlw	32	;' '
  1124  0A24  3468               	retlw	104	;'h'
  1125  0A25  3469               	retlw	105	;'i'
  1126  0A26  3474               	retlw	116	;'t'
  1127  0A27  3420               	retlw	32	;' '
  1128  0A28  3427               	retlw	39	;'''
  1129  0A29  346B               	retlw	107	;'k'
  1130  0A2A  3427               	retlw	39	;'''
  1131  0A2B  3420               	retlw	32	;' '
  1132  0A2C  3474               	retlw	116	;'t'
  1133  0A2D  346F               	retlw	111	;'o'
  1134  0A2E  3420               	retlw	32	;' '
  1135  0A2F  3474               	retlw	116	;'t'
  1136  0A30  3465               	retlw	101	;'e'
  1137  0A31  3473               	retlw	115	;'s'
  1138  0A32  3474               	retlw	116	;'t'
  1139  0A33  3420               	retlw	32	;' '
  1140  0A34  3400               	retlw	0
  1141  0A35                     STR_22:	
  1142  0A35  340A               	retlw	10
  1143  0A36  340D               	retlw	13
  1144  0A37  344D               	retlw	77	;'M'
  1145  0A38  3461               	retlw	97	;'a'
  1146  0A39  346B               	retlw	107	;'k'
  1147  0A3A  3465               	retlw	101	;'e'
  1148  0A3B  3420               	retlw	32	;' '
  1149  0A3C  3463               	retlw	99	;'c'
  1150  0A3D  346F               	retlw	111	;'o'
  1151  0A3E  346E               	retlw	110	;'n'
  1152  0A3F  346E               	retlw	110	;'n'
  1153  0A40  3465               	retlw	101	;'e'
  1154  0A41  3463               	retlw	99	;'c'
  1155  0A42  3474               	retlw	116	;'t'
  1156  0A43  3469               	retlw	105	;'i'
  1157  0A44  346F               	retlw	111	;'o'
  1158  0A45  346E               	retlw	110	;'n'
  1159  0A46  3473               	retlw	115	;'s'
  1160  0A47  3420               	retlw	32	;' '
  1161  0A48  3461               	retlw	97	;'a'
  1162  0A49  346E               	retlw	110	;'n'
  1163  0A4A  3464               	retlw	100	;'d'
  1164  0A4B  3420               	retlw	32	;' '
  1165  0A4C  3468               	retlw	104	;'h'
  1166  0A4D  3469               	retlw	105	;'i'
  1167  0A4E  3474               	retlw	116	;'t'
  1168  0A4F  3420               	retlw	32	;' '
  1169  0A50  3427               	retlw	39	;'''
  1170  0A51  346B               	retlw	107	;'k'
  1171  0A52  3427               	retlw	39	;'''
  1172  0A53  3420               	retlw	32	;' '
  1173  0A54  3474               	retlw	116	;'t'
  1174  0A55  346F               	retlw	111	;'o'
  1175  0A56  3420               	retlw	32	;' '
  1176  0A57  3474               	retlw	116	;'t'
  1177  0A58  3465               	retlw	101	;'e'
  1178  0A59  3473               	retlw	115	;'s'
  1179  0A5A  3474               	retlw	116	;'t'
  1180  0A5B  3421               	retlw	33	;'!'
  1181  0A5C  3400               	retlw	0
  1182  0A5D                     STR_17:	
  1183  0A5D  340A               	retlw	10
  1184  0A5E  340D               	retlw	13
  1185  0A5F  3474               	retlw	116	;'t'
  1186  0A60  3469               	retlw	105	;'i'
  1187  0A61  346D               	retlw	109	;'m'
  1188  0A62  3465               	retlw	101	;'e'
  1189  0A63  343A               	retlw	58	;':'
  1190  0A64  3425               	retlw	37	;'%'
  1191  0A65  3432               	retlw	50	;'2'
  1192  0A66  3478               	retlw	120	;'x'
  1193  0A67  343A               	retlw	58	;':'
  1194  0A68  3425               	retlw	37	;'%'
  1195  0A69  3432               	retlw	50	;'2'
  1196  0A6A  3478               	retlw	120	;'x'
  1197  0A6B  343A               	retlw	58	;':'
  1198  0A6C  3425               	retlw	37	;'%'
  1199  0A6D  3432               	retlw	50	;'2'
  1200  0A6E  3478               	retlw	120	;'x'
  1201  0A6F  3420               	retlw	32	;' '
  1202  0A70  3420               	retlw	32	;' '
  1203  0A71  340A               	retlw	10
  1204  0A72  3444               	retlw	68	;'D'
  1205  0A73  3461               	retlw	97	;'a'
  1206  0A74  3474               	retlw	116	;'t'
  1207  0A75  3465               	retlw	101	;'e'
  1208  0A76  343A               	retlw	58	;':'
  1209  0A77  3425               	retlw	37	;'%'
  1210  0A78  3432               	retlw	50	;'2'
  1211  0A79  3478               	retlw	120	;'x'
  1212  0A7A  342F               	retlw	47	;'/'
  1213  0A7B  3425               	retlw	37	;'%'
  1214  0A7C  3432               	retlw	50	;'2'
  1215  0A7D  3478               	retlw	120	;'x'
  1216  0A7E  342F               	retlw	47	;'/'
  1217  0A7F  3425               	retlw	37	;'%'
  1218  0A80  3432               	retlw	50	;'2'
  1219  0A81  3478               	retlw	120	;'x'
  1220  0A82  3400               	retlw	0
  1221  0A83                     STR_2:	
  1222  0A83  340A               	retlw	10
  1223  0A84  340D               	retlw	13
  1224  0A85  3452               	retlw	82	;'R'
  1225  0A86  3465               	retlw	101	;'e'
  1226  0A87  3473               	retlw	115	;'s'
  1227  0A88  3465               	retlw	101	;'e'
  1228  0A89  3474               	retlw	116	;'t'
  1229  0A8A  3420               	retlw	32	;' '
  1230  0A8B  3474               	retlw	116	;'t'
  1231  0A8C  3468               	retlw	104	;'h'
  1232  0A8D  3465               	retlw	101	;'e'
  1233  0A8E  3420               	retlw	32	;' '
  1234  0A8F  3462               	retlw	98	;'b'
  1235  0A90  346F               	retlw	111	;'o'
  1236  0A91  3461               	retlw	97	;'a'
  1237  0A92  3472               	retlw	114	;'r'
  1238  0A93  3464               	retlw	100	;'d'
  1239  0A94  3420               	retlw	32	;' '
  1240  0A95  3461               	retlw	97	;'a'
  1241  0A96  3466               	retlw	102	;'f'
  1242  0A97  3474               	retlw	116	;'t'
  1243  0A98  3465               	retlw	101	;'e'
  1244  0A99  3472               	retlw	114	;'r'
  1245  0A9A  3420               	retlw	32	;' '
  1246  0A9B  3474               	retlw	116	;'t'
  1247  0A9C  3465               	retlw	101	;'e'
  1248  0A9D  3473               	retlw	115	;'s'
  1249  0A9E  3474               	retlw	116	;'t'
  1250  0A9F  3420               	retlw	32	;' '
  1251  0AA0  3469               	retlw	105	;'i'
  1252  0AA1  3473               	retlw	115	;'s'
  1253  0AA2  3420               	retlw	32	;' '
  1254  0AA3  3464               	retlw	100	;'d'
  1255  0AA4  346F               	retlw	111	;'o'
  1256  0AA5  346E               	retlw	110	;'n'
  1257  0AA6  3465               	retlw	101	;'e'
  1258  0AA7  3400               	retlw	0
  1259  0AA8                     STR_15:	
  1260  0AA8  340A               	retlw	10
  1261  0AA9  340D               	retlw	13
  1262  0AAA  3443               	retlw	67	;'C'
  1263  0AAB  346F               	retlw	111	;'o'
  1264  0AAC  346E               	retlw	110	;'n'
  1265  0AAD  346E               	retlw	110	;'n'
  1266  0AAE  3465               	retlw	101	;'e'
  1267  0AAF  3463               	retlw	99	;'c'
  1268  0AB0  3474               	retlw	116	;'t'
  1269  0AB1  3469               	retlw	105	;'i'
  1270  0AB2  346F               	retlw	111	;'o'
  1271  0AB3  346E               	retlw	110	;'n'
  1272  0AB4  3473               	retlw	115	;'s'
  1273  0AB5  3420               	retlw	32	;' '
  1274  0AB6  3453               	retlw	83	;'S'
  1275  0AB7  3443               	retlw	67	;'C'
  1276  0AB8  344C               	retlw	76	;'L'
  1277  0AB9  342D               	retlw	45	;'-'
  1278  0ABA  343E               	retlw	62	;'>'
  1279  0ABB  3450               	retlw	80	;'P'
  1280  0ABC  3443               	retlw	67	;'C'
  1281  0ABD  342E               	retlw	46	;'.'
  1282  0ABE  3433               	retlw	51	;'3'
  1283  0ABF  3420               	retlw	32	;' '
  1284  0AC0  3453               	retlw	83	;'S'
  1285  0AC1  3444               	retlw	68	;'D'
  1286  0AC2  3441               	retlw	65	;'A'
  1287  0AC3  342D               	retlw	45	;'-'
  1288  0AC4  343E               	retlw	62	;'>'
  1289  0AC5  3450               	retlw	80	;'P'
  1290  0AC6  3443               	retlw	67	;'C'
  1291  0AC7  342E               	retlw	46	;'.'
  1292  0AC8  3434               	retlw	52	;'4'
  1293  0AC9  3400               	retlw	0
  1294  0ACA                     STR_20:	
  1295  0ACA  340A               	retlw	10
  1296  0ACB  340D               	retlw	13
  1297  0ACC  3474               	retlw	116	;'t'
  1298  0ACD  3465               	retlw	101	;'e'
  1299  0ACE  346D               	retlw	109	;'m'
  1300  0ACF  3470               	retlw	112	;'p'
  1301  0AD0  343A               	retlw	58	;':'
  1302  0AD1  3425               	retlw	37	;'%'
  1303  0AD2  3433               	retlw	51	;'3'
  1304  0AD3  3464               	retlw	100	;'d'
  1305  0AD4  3420               	retlw	32	;' '
  1306  0AD5  3470               	retlw	112	;'p'
  1307  0AD6  346F               	retlw	111	;'o'
  1308  0AD7  3474               	retlw	116	;'t'
  1309  0AD8  343A               	retlw	58	;':'
  1310  0AD9  3425               	retlw	37	;'%'
  1311  0ADA  3434               	retlw	52	;'4'
  1312  0ADB  3464               	retlw	100	;'d'
  1313  0ADC  3420               	retlw	32	;' '
  1314  0ADD  346C               	retlw	108	;'l'
  1315  0ADE  3469               	retlw	105	;'i'
  1316  0ADF  3467               	retlw	103	;'g'
  1317  0AE0  3468               	retlw	104	;'h'
  1318  0AE1  3474               	retlw	116	;'t'
  1319  0AE2  343A               	retlw	58	;':'
  1320  0AE3  3425               	retlw	37	;'%'
  1321  0AE4  3434               	retlw	52	;'4'
  1322  0AE5  3464               	retlw	100	;'d'
  1323  0AE6  3400               	retlw	0
  1324  0AE7                     STR_18:	
  1325  0AE7  340A               	retlw	10
  1326  0AE8  340D               	retlw	13
  1327  0AE9  3445               	retlw	69	;'E'
  1328  0AEA  3465               	retlw	101	;'e'
  1329  0AEB  3470               	retlw	112	;'p'
  1330  0AEC  3472               	retlw	114	;'r'
  1331  0AED  346F               	retlw	111	;'o'
  1332  0AEE  346D               	retlw	109	;'m'
  1333  0AEF  3420               	retlw	32	;' '
  1334  0AF0  3457               	retlw	87	;'W'
  1335  0AF1  3472               	retlw	114	;'r'
  1336  0AF2  3469               	retlw	105	;'i'
  1337  0AF3  3474               	retlw	116	;'t'
  1338  0AF4  3465               	retlw	101	;'e'
  1339  0AF5  343A               	retlw	58	;':'
  1340  0AF6  3420               	retlw	32	;' '
  1341  0AF7  3425               	retlw	37	;'%'
  1342  0AF8  3463               	retlw	99	;'c'
  1343  0AF9  3420               	retlw	32	;' '
  1344  0AFA  3420               	retlw	32	;' '
  1345  0AFB  3420               	retlw	32	;' '
  1346  0AFC  3420               	retlw	32	;' '
  1347  0AFD  3400               	retlw	0
  1348  0AFE                     STR_21:	
  1349  0AFE  340A               	retlw	10
  1350  0AFF  340D               	retlw	13
  1351  0B00  3443               	retlw	67	;'C'
  1352  0B01  346F               	retlw	111	;'o'
  1353  0B02  346E               	retlw	110	;'n'
  1354  0B03  346E               	retlw	110	;'n'
  1355  0B04  3465               	retlw	101	;'e'
  1356  0B05  3463               	retlw	99	;'c'
  1357  0B06  3474               	retlw	116	;'t'
  1358  0B07  3469               	retlw	105	;'i'
  1359  0B08  346F               	retlw	111	;'o'
  1360  0B09  346E               	retlw	110	;'n'
  1361  0B0A  3473               	retlw	115	;'s'
  1362  0B0B  343A               	retlw	58	;':'
  1363  0B0C  3420               	retlw	32	;' '
  1364  0B0D  3450               	retlw	80	;'P'
  1365  0B0E  344F               	retlw	79	;'O'
  1366  0B0F  3452               	retlw	82	;'R'
  1367  0B10  3454               	retlw	84	;'T'
  1368  0B11  3444               	retlw	68	;'D'
  1369  0B12  3400               	retlw	0
  1370  0B13                     STR_7:	
  1371  0B13  3445               	retlw	69	;'E'
  1372  0B14  3478               	retlw	120	;'x'
  1373  0B15  3470               	retlw	112	;'p'
  1374  0B16  346C               	retlw	108	;'l'
  1375  0B17  346F               	retlw	111	;'o'
  1376  0B18  3472               	retlw	114	;'r'
  1377  0B19  3465               	retlw	101	;'e'
  1378  0B1A  3420               	retlw	32	;' '
  1379  0B1B  3445               	retlw	69	;'E'
  1380  0B1C  346D               	retlw	109	;'m'
  1381  0B1D  3462               	retlw	98	;'b'
  1382  0B1E  3465               	retlw	101	;'e'
  1383  0B1F  3464               	retlw	100	;'d'
  1384  0B20  3464               	retlw	100	;'d'
  1385  0B21  3465               	retlw	101	;'e'
  1386  0B22  3464               	retlw	100	;'d'
  1387  0B23  3400               	retlw	0
  1388  0B24                     STR_19:	
  1389  0B24  3445               	retlw	69	;'E'
  1390  0B25  3465               	retlw	101	;'e'
  1391  0B26  3470               	retlw	112	;'p'
  1392  0B27  3472               	retlw	114	;'r'
  1393  0B28  346F               	retlw	111	;'o'
  1394  0B29  346D               	retlw	109	;'m'
  1395  0B2A  3420               	retlw	32	;' '
  1396  0B2B  3452               	retlw	82	;'R'
  1397  0B2C  3465               	retlw	101	;'e'
  1398  0B2D  3461               	retlw	97	;'a'
  1399  0B2E  3464               	retlw	100	;'d'
  1400  0B2F  343A               	retlw	58	;':'
  1401  0B30  3420               	retlw	32	;' '
  1402  0B31  3425               	retlw	37	;'%'
  1403  0B32  3463               	retlw	99	;'c'
  1404  0B33  3400               	retlw	0
  1405  0B34                     STR_12:	
  1406  0B34  344C               	retlw	76	;'L'
  1407  0B35  3463               	retlw	99	;'c'
  1408  0B36  3464               	retlw	100	;'d'
  1409  0B37  3420               	retlw	32	;' '
  1410  0B38  3434               	retlw	52	;'4'
  1411  0B39  342D               	retlw	45	;'-'
  1412  0B3A  3462               	retlw	98	;'b'
  1413  0B3B  3469               	retlw	105	;'i'
  1414  0B3C  3474               	retlw	116	;'t'
  1415  0B3D  3420               	retlw	32	;' '
  1416  0B3E  344D               	retlw	77	;'M'
  1417  0B3F  346F               	retlw	111	;'o'
  1418  0B40  3464               	retlw	100	;'d'
  1419  0B41  3465               	retlw	101	;'e'
  1420  0B42  3400               	retlw	0
  1421  0B43                     STR_8:	
  1422  0B43  344C               	retlw	76	;'L'
  1423  0B44  3463               	retlw	99	;'c'
  1424  0B45  3464               	retlw	100	;'d'
  1425  0B46  3420               	retlw	32	;' '
  1426  0B47  3438               	retlw	56	;'8'
  1427  0B48  342D               	retlw	45	;'-'
  1428  0B49  3462               	retlw	98	;'b'
  1429  0B4A  3469               	retlw	105	;'i'
  1430  0B4B  3474               	retlw	116	;'t'
  1431  0B4C  3420               	retlw	32	;' '
  1432  0B4D  344D               	retlw	77	;'M'
  1433  0B4E  346F               	retlw	111	;'o'
  1434  0B4F  3464               	retlw	100	;'d'
  1435  0B50  3465               	retlw	101	;'e'
  1436  0B51  3400               	retlw	0
  1437  0B52                     STR_23:	
  1438  0B52  340A               	retlw	10
  1439  0B53  340D               	retlw	13
  1440  0B54  3420               	retlw	32	;' '
  1441  0B55  344B               	retlw	75	;'K'
  1442  0B56  3465               	retlw	101	;'e'
  1443  0B57  3479               	retlw	121	;'y'
  1444  0B58  343A               	retlw	58	;':'
  1445  0B59  3425               	retlw	37	;'%'
  1446  0B5A  3463               	retlw	99	;'c'
  1447  0B5B  3400               	retlw	0
  1448  09E4                     
  1449                           ; #config settings
  1450  0000                     
  1451                           	psect	cinit
  1452  07E8                     start_initialization:	
  1453  07E8                     __initialization:	
  1454                           
  1455                           ; Clear objects allocated to BANK1
  1456  07E8  1383               	bcf	3,7	;select IRP bank0
  1457  07E9  30A0               	movlw	low __pbssBANK1
  1458  07EA  0084               	movwf	4
  1459  07EB  30B9               	movlw	low (__pbssBANK1+25)
  1460  07EC  160A  118A  22AC  120A  118A  	fcall	clear_ram0
  1461                           
  1462                           ; Initialize objects allocated to BANK1
  1463  07F1  30CD               	movlw	low (__pdataBANK1+8)
  1464  07F2  00FD               	movwf	btemp+-1
  1465  07F3  3012               	movlw	high __pidataBANK1
  1466  07F4  00FE               	movwf	btemp
  1467  07F5  30B4               	movlw	low __pidataBANK1
  1468  07F6  00FF               	movwf	btemp+1
  1469  07F7  30C5               	movlw	low __pdataBANK1
  1470  07F8  0084               	movwf	4
  1471  07F9  160A  118A  231F   	fcall	init_ram0
  1472  07FC                     end_of_initialization:	
  1473                           ;End of C runtime variable initialization code
  1474                           
  1475  07FC                     __end_of__initialization:	
  1476  07FC  0183               	clrf	3
  1477  07FD  120A  158A  2E7B   	ljmp	_main	;jump to C main() function
  1478                           
  1479                           	psect	bssBANK1
  1480  00A0                     __pbssBANK1:	
  1481  00A0                     _LCDConfig:	
  1482  00A0                     	ds	14
  1483  00AE                     _A_ColsPins_U8:	
  1484  00AE                     	ds	4
  1485  00B2                     _A_RowsPins_U8:	
  1486  00B2                     	ds	4
  1487  00B6                     _mm_option:	
  1488  00B6                     	ds	1
  1489  00B7                     _v_LcdTrackCursorPos_U8:	
  1490  00B7                     	ds	1
  1491  00B8                     _v_LcdTrackLineNum_U8:	
  1492  00B8                     	ds	1
  1493                           
  1494                           	psect	dataBANK1
  1495  00C5                     __pdataBANK1:	
  1496  00C5                     _ARR_LcdLineNumAddress_U8:	
  1497  00C5                     	ds	4
  1498  00C9                     seg_test@F1296:	
  1499  00C9                     	ds	4
  1500                           
  1501                           	psect	clrtext
  1502  12AC                     clear_ram0:	
  1503                           ;	Called with FSR containing the base address, and
  1504                           ;	W with the last address+1
  1505                           
  1506  12AC  0064               	clrwdt	;clear the watchdog before getting into this loop
  1507  12AD                     clrloop0:	
  1508  12AD  0180               	clrf	0	;clear RAM location pointed to by FSR
  1509  12AE  0A84               	incf	4,f	;increment pointer
  1510  12AF  0604               	xorwf	4,w	;XOR with final address
  1511  12B0  1903               	btfsc	3,2	;have we reached the end yet?
  1512  12B1  3400               	retlw	0	;all done for this memory range, return
  1513  12B2  0604               	xorwf	4,w	;XOR again to restore value
  1514  12B3  2AAD               	goto	clrloop0	;do the next byte
  1515                           
  1516                           	psect	inittext
  1517  131B                     init_fetch0:	
  1518                           ;	Called with low address in FSR and high address in W
  1519                           
  1520  131B  087E               	movf	126,w
  1521  131C  008A               	movwf	10
  1522  131D  087F               	movf	127,w
  1523  131E  0082               	movwf	2
  1524  131F                     init_ram0:	
  1525                           ;Called with:
  1526                           ;	high address of idata address in btemp 
  1527                           ;	low address of idata address in btemp+1 
  1528                           ;	low address of data in FSR
  1529                           ;	high address + 1 of data in btemp-1
  1530                           
  1531  131F  231B  160A  118A   	fcall	init_fetch0
  1532  1322  0080               	movwf	0
  1533  1323  0A84               	incf	4,f
  1534  1324  0804               	movf	4,w
  1535  1325  067D               	xorwf	125,w
  1536  1326  1903               	btfsc	3,2
  1537  1327  3400               	retlw	0
  1538  1328  0AFF               	incf	127,f
  1539  1329  1903               	btfsc	3,2
  1540  132A  0AFE               	incf	126,f
  1541  132B  2B1F               	goto	init_ram0
  1542                           
  1543                           	psect	cstackBANK1
  1544  00B9                     __pcstackBANK1:	
  1545  00B9                     ??_rtc_test:	
  1546                           
  1547                           ; 1 bytes @ 0x0
  1548  00B9                     	ds	12
  1549                           
  1550                           	psect	cstackCOMMON
  1551  0070                     __pcstackCOMMON:	
  1552  0070                     ?_DELAY_us:	
  1553  0070                     ?_eeprom_write:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?_i2c_WaitForIdle:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ??_i2c_WaitForIdle:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_i2c_Ack:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ??_i2c_Ack:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?_i2c_NoAck:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ??_i2c_NoAck:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ?_LCD_CmdWrite:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_lcd_Reset:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ?_LCD_Clear:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ?_LCD_GoToLine:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0070                     ?_lcd_BusyCheck:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589  0070                     ?_lcd_SendLowerNibble:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592  0070                     ?_lcd_SendHigherNibble:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595  0070                     ?_lcd_SendCmdSignals:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0070                     ?_lcd_DataWrite:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0070                     ?_lcd_SendDataSignals:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0070                     ?_gpio_test:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0070                     ?_LCD_8bit_test:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0070                     ?_LCD_4bit_test:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0070                     ?_seg_test:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616  0070                     ?_rtc_test:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0070                     ?_eeprom_test:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622  0070                     ?_adc_test:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625  0070                     ?_keypad_test:	
  1626                           ; 1 bytes @ 0x0
  1627                           
  1628  0070                     ?_ADC_Init:	
  1629                           ; 1 bytes @ 0x0
  1630                           
  1631  0070                     ??_ADC_Init:	
  1632                           ; 1 bytes @ 0x0
  1633                           
  1634  0070                     ?_EEPROM_ReadByte:	
  1635                           ; 1 bytes @ 0x0
  1636                           
  1637  0070                     ?_GPIO_PinDirection:	
  1638                           ; 1 bytes @ 0x0
  1639                           
  1640  0070                     ?_GPIO_PinWrite:	
  1641                           ; 1 bytes @ 0x0
  1642                           
  1643  0070                     ?_GPIO_PinRead:	
  1644                           ; 1 bytes @ 0x0
  1645                           
  1646  0070                     ??_GPIO_PinRead:	
  1647                           ; 1 bytes @ 0x0
  1648                           
  1649  0070                     ?_I2C_Init:	
  1650                           ; 1 bytes @ 0x0
  1651                           
  1652  0070                     ??_I2C_Init:	
  1653                           ; 1 bytes @ 0x0
  1654                           
  1655  0070                     ?_I2C_Start:	
  1656                           ; 1 bytes @ 0x0
  1657                           
  1658  0070                     ??_I2C_Start:	
  1659                           ; 1 bytes @ 0x0
  1660                           
  1661  0070                     ?_I2C_Stop:	
  1662                           ; 1 bytes @ 0x0
  1663                           
  1664  0070                     ??_I2C_Stop:	
  1665                           ; 1 bytes @ 0x0
  1666                           
  1667  0070                     ?_I2C_Write:	
  1668                           ; 1 bytes @ 0x0
  1669                           
  1670  0070                     ??_I2C_Write:	
  1671                           ; 1 bytes @ 0x0
  1672                           
  1673  0070                     ?_I2C_Read:	
  1674                           ; 1 bytes @ 0x0
  1675                           
  1676  0070                     ??_I2C_Read:	
  1677                           ; 1 bytes @ 0x0
  1678                           
  1679  0070                     ?_keypad_WaitForKeyRelease:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682  0070                     ?_keypad_WaitForKeyPress:	
  1683                           ; 1 bytes @ 0x0
  1684                           
  1685  0070                     ?_KEYPAD_GetKey:	
  1686                           ; 1 bytes @ 0x0
  1687                           
  1688  0070                     ?_LCD_GoToNextLine:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691  0070                     ?_LCD_DisplayChar:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694  0070                     ?_RTC_Init:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697  0070                     ?_RTC_SetDateTime:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700  0070                     ?_RTC_GetDateTime:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703  0070                     ?_UART_RxChar:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706  0070                     ??_UART_RxChar:	
  1707                           ; 1 bytes @ 0x0
  1708                           
  1709  0070                     ?_UART_TxChar:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712  0070                     ??_UART_TxChar:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715  0070                     ?_main:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718  0070                     ?___lldiv:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721  0070                     GPIO_PinDirection@var_pinDirn_u8:	
  1722                           ; 4 bytes @ 0x0
  1723                           
  1724  0070                     GPIO_PinWrite@var_pinValue_u8:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727  0070                     I2C_Write@v_i2cData_u8:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730  0070                     UART_TxChar@v_uartData_u8:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733  0070                     eeprom_write@value:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736  0070                     DELAY_us@us_count:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739  0070                     EEPROM_ReadByte@v_eepromAddress_u16:	
  1740                           ; 2 bytes @ 0x0
  1741                           
  1742  0070                     ___lldiv@divisor:	
  1743                           ; 2 bytes @ 0x0
  1744                           
  1745                           
  1746                           ; 4 bytes @ 0x0
  1747  0070                     	ds	1
  1748  0071                     ??_eeprom_write:	
  1749  0071                     ??_GPIO_PinDirection:	
  1750                           ; 1 bytes @ 0x1
  1751                           
  1752  0071                     ??_GPIO_PinWrite:	
  1753                           ; 1 bytes @ 0x1
  1754                           
  1755  0071                     ??_RTC_Init:	
  1756                           ; 1 bytes @ 0x1
  1757                           
  1758  0071                     ??_RTC_SetDateTime:	
  1759                           ; 1 bytes @ 0x1
  1760                           
  1761  0071                     ?_UART_TxString:	
  1762                           ; 1 bytes @ 0x1
  1763                           
  1764  0071                     I2C_Read@v_ackOption_u8:	
  1765                           ; 1 bytes @ 0x1
  1766                           
  1767  0071                     RTC_SetDateTime@rtc:	
  1768                           ; 1 bytes @ 0x1
  1769                           
  1770  0071                     UART_TxString@ptr_string:	
  1771                           ; 1 bytes @ 0x1
  1772                           
  1773                           
  1774                           ; 2 bytes @ 0x1
  1775  0071                     	ds	1
  1776  0072                     ??_DELAY_us:	
  1777  0072                     ?_DELAY_ms:	
  1778                           ; 1 bytes @ 0x2
  1779                           
  1780  0072                     ??_EEPROM_ReadByte:	
  1781                           ; 1 bytes @ 0x2
  1782                           
  1783  0072                     ?_ADC_GetAdcValue:	
  1784                           ; 1 bytes @ 0x2
  1785                           
  1786  0072                     GPIO_PinRead@var_portNumber_u8:	
  1787                           ; 2 bytes @ 0x2
  1788                           
  1789  0072                     I2C_Read@v_i2cData_u8:	
  1790                           ; 1 bytes @ 0x2
  1791                           
  1792  0072                     eeprom_write@addr:	
  1793                           ; 1 bytes @ 0x2
  1794                           
  1795  0072                     DELAY_ms@ms_count:	
  1796                           ; 1 bytes @ 0x2
  1797                           
  1798                           
  1799                           ; 2 bytes @ 0x2
  1800  0072                     	ds	1
  1801  0073                     ?_EEPROM_WriteByte:	
  1802  0073                     ??_RTC_GetDateTime:	
  1803                           ; 1 bytes @ 0x3
  1804                           
  1805  0073                     ??_UART_TxString:	
  1806                           ; 1 bytes @ 0x3
  1807                           
  1808  0073                     GPIO_PinDirection@var_portNumber_u8:	
  1809                           ; 1 bytes @ 0x3
  1810                           
  1811  0073                     GPIO_PinWrite@var_portNumber_u8:	
  1812                           ; 1 bytes @ 0x3
  1813                           
  1814  0073                     GPIO_PinRead@returnStatus:	
  1815                           ; 1 bytes @ 0x3
  1816                           
  1817  0073                     EEPROM_WriteByte@v_eepromAddress_u16:	
  1818                           ; 1 bytes @ 0x3
  1819                           
  1820                           
  1821                           ; 2 bytes @ 0x3
  1822  0073                     	ds	1
  1823  0074                     ??_ADC_GetAdcValue:	
  1824  0074                     ??_DELAY_ms:	
  1825                           ; 1 bytes @ 0x4
  1826                           
  1827  0074                     GPIO_PinDirection@enm_pinNumber:	
  1828                           ; 1 bytes @ 0x4
  1829                           
  1830  0074                     GPIO_PinWrite@enm_pinNumber:	
  1831                           ; 1 bytes @ 0x4
  1832                           
  1833  0074                     GPIO_PinRead@enm_pinNumber:	
  1834                           ; 1 bytes @ 0x4
  1835                           
  1836  0074                     RTC_GetDateTime@rtc:	
  1837                           ; 1 bytes @ 0x4
  1838                           
  1839  0074                     ___lldiv@dividend:	
  1840                           ; 1 bytes @ 0x4
  1841                           
  1842                           
  1843                           ; 4 bytes @ 0x4
  1844  0074                     	ds	1
  1845  0075                     ??_lcd_BusyCheck:	
  1846  0075                     ??_lcd_SendLowerNibble:	
  1847                           ; 1 bytes @ 0x5
  1848                           
  1849  0075                     ??_lcd_SendHigherNibble:	
  1850                           ; 1 bytes @ 0x5
  1851                           
  1852  0075                     ??_lcd_SendCmdSignals:	
  1853                           ; 1 bytes @ 0x5
  1854                           
  1855  0075                     ??_lcd_SendDataSignals:	
  1856                           ; 1 bytes @ 0x5
  1857                           
  1858  0075                     ?_KEYPAD_Init:	
  1859                           ; 1 bytes @ 0x5
  1860                           
  1861  0075                     ??_keypad_WaitForKeyRelease:	
  1862                           ; 1 bytes @ 0x5
  1863                           
  1864  0075                     ??_keypad_WaitForKeyPress:	
  1865                           ; 1 bytes @ 0x5
  1866                           
  1867  0075                     ??_LCD_SetUp:	
  1868                           ; 1 bytes @ 0x5
  1869                           
  1870  0075                     ADC_GetAdcValue@var_adcChannel_u8:	
  1871                           ; 1 bytes @ 0x5
  1872                           
  1873  0075                     EEPROM_WriteByte@v_eepromData_u8:	
  1874                           ; 1 bytes @ 0x5
  1875                           
  1876  0075                     KEYPAD_Init@row_1:	
  1877                           ; 1 bytes @ 0x5
  1878                           
  1879                           
  1880                           ; 1 bytes @ 0x5
  1881  0075                     	ds	1
  1882  0076                     ??_EEPROM_WriteByte:	
  1883  0076                     KEYPAD_Init@row_2:	
  1884                           ; 1 bytes @ 0x6
  1885                           
  1886  0076                     keypad_WaitForKeyRelease@v_keyStatus_u8:	
  1887                           ; 1 bytes @ 0x6
  1888                           
  1889  0076                     keypad_WaitForKeyPress@v_keyStatus_u8:	
  1890                           ; 1 bytes @ 0x6
  1891                           
  1892  0076                     LCD_SetUp@RS:	
  1893                           ; 1 bytes @ 0x6
  1894                           
  1895  0076                     lcd_BusyCheck@busyflag:	
  1896                           ; 1 bytes @ 0x6
  1897                           
  1898  0076                     lcd_SendHigherNibble@dataByte:	
  1899                           ; 1 bytes @ 0x6
  1900                           
  1901  0076                     lcd_SendLowerNibble@dataByte:	
  1902                           ; 1 bytes @ 0x6
  1903                           
  1904                           
  1905                           ; 1 bytes @ 0x6
  1906  0076                     	ds	1
  1907  0077                     ??_LCD_CmdWrite:	
  1908  0077                     ??_lcd_Reset:	
  1909                           ; 1 bytes @ 0x7
  1910                           
  1911  0077                     ??_lcd_DataWrite:	
  1912                           ; 1 bytes @ 0x7
  1913                           
  1914  0077                     KEYPAD_Init@row_3:	
  1915                           ; 1 bytes @ 0x7
  1916                           
  1917  0077                     keypad_WaitForKeyRelease@i:	
  1918                           ; 1 bytes @ 0x7
  1919                           
  1920  0077                     keypad_WaitForKeyPress@i:	
  1921                           ; 1 bytes @ 0x7
  1922                           
  1923                           
  1924                           ; 1 bytes @ 0x7
  1925  0077                     	ds	1
  1926  0078                     ??_KEYPAD_GetKey:	
  1927  0078                     ??___lldiv:	
  1928                           ; 1 bytes @ 0x8
  1929                           
  1930  0078                     KEYPAD_Init@col_0:	
  1931                           ; 1 bytes @ 0x8
  1932                           
  1933                           
  1934                           ; 1 bytes @ 0x8
  1935  0078                     	ds	1
  1936  0079                     KEYPAD_Init@col_1:	
  1937  0079                     LCD_CmdWrite@v_lcdCmd_u8:	
  1938                           ; 1 bytes @ 0x9
  1939                           
  1940  0079                     lcd_DataWrite@dataByte:	
  1941                           ; 1 bytes @ 0x9
  1942                           
  1943  0079                     ___lldiv@quotient:	
  1944                           ; 1 bytes @ 0x9
  1945                           
  1946                           
  1947                           ; 4 bytes @ 0x9
  1948  0079                     	ds	1
  1949  007A                     ??_LCD_GoToLine:	
  1950  007A                     ??_LCD_GoToNextLine:	
  1951                           ; 1 bytes @ 0xA
  1952                           
  1953  007A                     KEYPAD_Init@col_2:	
  1954                           ; 1 bytes @ 0xA
  1955                           
  1956                           
  1957                           ; 1 bytes @ 0xA
  1958  007A                     	ds	1
  1959  007B                     ??_LCD_DisplayChar:	
  1960  007B                     KEYPAD_Init@col_3:	
  1961                           ; 1 bytes @ 0xB
  1962                           
  1963  007B                     LCD_GoToLine@v_lineNumber_u8:	
  1964                           ; 1 bytes @ 0xB
  1965                           
  1966                           
  1967                           ; 1 bytes @ 0xB
  1968  007B                     	ds	1
  1969  007C                     ??_LCD_Clear:	
  1970  007C                     ??_KEYPAD_Init:	
  1971                           ; 1 bytes @ 0xC
  1972                           
  1973  007C                     ?_LCD_Init:	
  1974                           ; 1 bytes @ 0xC
  1975                           
  1976  007C                     LCD_Init@v_MaxCharsPerLine_u8:	
  1977                           ; 1 bytes @ 0xC
  1978                           
  1979  007C                     LCD_DisplayChar@v_lcdData_u8:	
  1980                           ; 1 bytes @ 0xC
  1981                           
  1982                           
  1983                           ; 1 bytes @ 0xC
  1984  007C                     	ds	1
  1985  007D                     ??_LCD_Init:	
  1986  007D                     ??_LCD_DisplayString:	
  1987                           ; 1 bytes @ 0xD
  1988                           
  1989  007D                     ___lldiv@counter:	
  1990                           ; 1 bytes @ 0xD
  1991                           
  1992                           
  1993                           ; 1 bytes @ 0xD
  1994  007D                     	ds	1
  1995  007E                     ??_seg_test:	
  1996  007E                     ??_UART_Init:	
  1997                           ; 1 bytes @ 0xE
  1998                           
  1999                           
  2000                           	psect	cstackBANK0
  2001  0020                     __pcstackBANK0:	
  2002                           ; 1 bytes @ 0xE
  2003                           
  2004  0020                     ?_UART_SetBaudRate:	
  2005  0020                     ?_LCD_SetUp:	
  2006                           ; 1 bytes @ 0x0
  2007                           
  2008  0020                     ?_LCD_DisplayString:	
  2009                           ; 1 bytes @ 0x0
  2010                           
  2011  0020                     ?___bmul:	
  2012                           ; 1 bytes @ 0x0
  2013                           
  2014  0020                     KEYPAD_Init@row_0:	
  2015                           ; 1 bytes @ 0x0
  2016                           
  2017  0020                     KEYPAD_GetKey@v_KeyPressed_u8:	
  2018                           ; 1 bytes @ 0x0
  2019                           
  2020  0020                     LCD_SetUp@RW:	
  2021                           ; 1 bytes @ 0x0
  2022                           
  2023  0020                     LCD_Init@v_lcdNoOfLines_u8:	
  2024                           ; 1 bytes @ 0x0
  2025                           
  2026  0020                     ___bmul@multiplicand:	
  2027                           ; 1 bytes @ 0x0
  2028                           
  2029  0020                     LCD_DisplayString@ptr_stringPointer_u8:	
  2030                           ; 1 bytes @ 0x0
  2031                           
  2032  0020                     UART_SetBaudRate@v_baudRate_u32:	
  2033                           ; 2 bytes @ 0x0
  2034                           
  2035                           
  2036                           ; 4 bytes @ 0x0
  2037  0020                     	ds	1
  2038  0021                     ??___bmul:	
  2039  0021                     KEYPAD_Init@i:	
  2040                           ; 1 bytes @ 0x1
  2041                           
  2042  0021                     KEYPAD_GetKey@j:	
  2043                           ; 1 bytes @ 0x1
  2044                           
  2045  0021                     LCD_SetUp@EN:	
  2046                           ; 1 bytes @ 0x1
  2047                           
  2048                           
  2049                           ; 1 bytes @ 0x1
  2050  0021                     	ds	1
  2051  0022                     KEYPAD_GetKey@i:	
  2052  0022                     LCD_SetUp@D0:	
  2053                           ; 1 bytes @ 0x2
  2054                           
  2055  0022                     ___bmul@product:	
  2056                           ; 1 bytes @ 0x2
  2057                           
  2058                           
  2059                           ; 1 bytes @ 0x2
  2060  0022                     	ds	1
  2061  0023                     LCD_SetUp@D1:	
  2062  0023                     ___bmul@multiplier:	
  2063                           ; 1 bytes @ 0x3
  2064                           
  2065                           
  2066                           ; 1 bytes @ 0x3
  2067  0023                     	ds	1
  2068  0024                     ??_UART_SetBaudRate:	
  2069  0024                     ?_UART_TxNumber:	
  2070                           ; 1 bytes @ 0x4
  2071                           
  2072  0024                     LCD_SetUp@D2:	
  2073                           ; 1 bytes @ 0x4
  2074                           
  2075  0024                     UART_TxNumber@v_number_u32:	
  2076                           ; 1 bytes @ 0x4
  2077                           
  2078                           
  2079                           ; 4 bytes @ 0x4
  2080  0024                     	ds	1
  2081  0025                     LCD_SetUp@D3:	
  2082                           
  2083                           ; 1 bytes @ 0x5
  2084  0025                     	ds	1
  2085  0026                     LCD_SetUp@D4:	
  2086                           
  2087                           ; 1 bytes @ 0x6
  2088  0026                     	ds	1
  2089  0027                     LCD_SetUp@D5:	
  2090                           
  2091                           ; 1 bytes @ 0x7
  2092  0027                     	ds	1
  2093  0028                     LCD_SetUp@D6:	
  2094  0028                     UART_TxNumber@v_numOfDigitsToTransmit_u8:	
  2095                           ; 1 bytes @ 0x8
  2096                           
  2097                           
  2098                           ; 1 bytes @ 0x8
  2099  0028                     	ds	1
  2100  0029                     ??_UART_TxNumber:	
  2101  0029                     LCD_SetUp@D7:	
  2102                           ; 1 bytes @ 0x9
  2103                           
  2104  0029                     UART_SetBaudRate@RegValue:	
  2105                           ; 1 bytes @ 0x9
  2106                           
  2107                           
  2108                           ; 1 bytes @ 0x9
  2109  0029                     	ds	1
  2110  002A                     ?_UART_Init:	
  2111  002A                     UART_Init@v_baudRate_u32:	
  2112                           ; 1 bytes @ 0xA
  2113                           
  2114                           
  2115                           ; 4 bytes @ 0xA
  2116  002A                     	ds	11
  2117  0035                     UART_TxNumber@a:	
  2118                           
  2119                           ; 10 bytes @ 0x15
  2120  0035                     	ds	10
  2121  003F                     _UART_TxNumber$486:	
  2122                           
  2123                           ; 2 bytes @ 0x1F
  2124  003F                     	ds	2
  2125  0041                     UART_TxNumber@v_numericSystem_u8:	
  2126                           
  2127                           ; 1 bytes @ 0x21
  2128  0041                     	ds	1
  2129  0042                     UART_TxNumber@i:	
  2130                           
  2131                           ; 1 bytes @ 0x22
  2132  0042                     	ds	1
  2133  0043                     ?_UART_Printf:	
  2134  0043                     UART_Printf@argList:	
  2135                           ; 1 bytes @ 0x23
  2136                           
  2137                           
  2138                           ; 2 bytes @ 0x23
  2139  0043                     	ds	14
  2140  0051                     ??_UART_Printf:	
  2141                           
  2142                           ; 1 bytes @ 0x31
  2143  0051                     	ds	2
  2144  0053                     UART_Printf@str:	
  2145                           
  2146                           ; 1 bytes @ 0x33
  2147  0053                     	ds	1
  2148  0054                     UART_Printf@v_num_s32:	
  2149                           
  2150                           ; 4 bytes @ 0x34
  2151  0054                     	ds	4
  2152  0058                     UART_Printf@v_num_s16:	
  2153                           
  2154                           ; 2 bytes @ 0x38
  2155  0058                     	ds	2
  2156  005A                     UART_Printf@v_num_u32:	
  2157                           
  2158                           ; 4 bytes @ 0x3A
  2159  005A                     	ds	4
  2160  005E                     UART_Printf@v_num_u16:	
  2161                           
  2162                           ; 2 bytes @ 0x3E
  2163  005E                     	ds	2
  2164  0060                     UART_Printf@ptr:	
  2165                           
  2166                           ; 2 bytes @ 0x40
  2167  0060                     	ds	2
  2168  0062                     UART_Printf@ch:	
  2169                           
  2170                           ; 1 bytes @ 0x42
  2171  0062                     	ds	1
  2172  0063                     UART_Printf@v_numOfDigitsToTransmit_u8:	
  2173                           
  2174                           ; 1 bytes @ 0x43
  2175  0063                     	ds	1
  2176  0064                     UART_Printf@argp:	
  2177                           
  2178                           ; 1 bytes @ 0x44
  2179  0064                     	ds	1
  2180  0065                     ??_gpio_test:	
  2181  0065                     ??_LCD_8bit_test:	
  2182                           ; 1 bytes @ 0x45
  2183                           
  2184  0065                     ??_LCD_4bit_test:	
  2185                           ; 1 bytes @ 0x45
  2186                           
  2187  0065                     ??_eeprom_test:	
  2188                           ; 1 bytes @ 0x45
  2189                           
  2190  0065                     ??_adc_test:	
  2191                           ; 1 bytes @ 0x45
  2192                           
  2193  0065                     ??_keypad_test:	
  2194                           ; 1 bytes @ 0x45
  2195                           
  2196  0065                     seg_test@seg_code:	
  2197                           ; 1 bytes @ 0x45
  2198                           
  2199  0065                     rtc_test@rtc:	
  2200                           ; 4 bytes @ 0x45
  2201                           
  2202                           
  2203                           ; 7 bytes @ 0x45
  2204  0065                     	ds	2
  2205  0067                     gpio_test@i:	
  2206  0067                     adc_test@temp:	
  2207                           ; 1 bytes @ 0x47
  2208                           
  2209                           
  2210                           ; 2 bytes @ 0x47
  2211  0067                     	ds	1
  2212  0068                     eeprom_test@read_char:	
  2213                           
  2214                           ; 1 bytes @ 0x48
  2215  0068                     	ds	1
  2216  0069                     eeprom_test@eeprom_address:	
  2217  0069                     adc_test@light:	
  2218                           ; 1 bytes @ 0x49
  2219                           
  2220                           
  2221                           ; 2 bytes @ 0x49
  2222  0069                     	ds	1
  2223  006A                     eeprom_test@write_char:	
  2224                           
  2225                           ; 1 bytes @ 0x4A
  2226  006A                     	ds	1
  2227  006B                     adc_test@pot:	
  2228                           
  2229                           ; 2 bytes @ 0x4B
  2230  006B                     	ds	1
  2231  006C                     keypad_test@key:	
  2232                           
  2233                           ; 1 bytes @ 0x4C
  2234  006C                     	ds	3
  2235  006F                     ??_main:	
  2236                           
  2237                           ; 1 bytes @ 0x4F
  2238  006F                     	ds	1
  2239                           
  2240                           	psect	maintext
  2241  0E7B                     __pmaintext:	
  2242 ;;
  2243 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2244 ;;
  2245 ;; *************** function _main *****************
  2246 ;; Defined at:
  2247 ;;		line 87 in file "main.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;		None
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;		None
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      void 
  2254 ;; Registers used:
  2255 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2256 ;; Tracked objects:
  2257 ;;		On entry : B00/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2261 ;;      Params:         0       0       0       0       0
  2262 ;;      Locals:         0       0       0       0       0
  2263 ;;      Temps:          0       1       0       0       0
  2264 ;;      Totals:         0       1       0       0       0
  2265 ;;Total ram usage:        1 bytes
  2266 ;; Hardware stack levels required when called:    8
  2267 ;; This function calls:
  2268 ;;		_LCD_4bit_test
  2269 ;;		_LCD_8bit_test
  2270 ;;		_UART_Init
  2271 ;;		_UART_RxChar
  2272 ;;		_UART_TxString
  2273 ;;		_adc_test
  2274 ;;		_eeprom_test
  2275 ;;		_gpio_test
  2276 ;;		_keypad_test
  2277 ;;		_rtc_test
  2278 ;;		_seg_test
  2279 ;; This function is called by:
  2280 ;;		Startup code after reset
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           
  2285                           ;psect for function _main
  2286  0E7B                     _main:	
  2287                           
  2288                           ;main.c: 89: UART_Init(9600);
  2289                           
  2290                           ;incstack = 0
  2291                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2292  0E7B  3000               	movlw	0
  2293  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  2294  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  2295  0E7E  00AD               	movwf	UART_Init@v_baudRate_u32+3
  2296  0E7F  3000               	movlw	0
  2297  0E80  00AC               	movwf	UART_Init@v_baudRate_u32+2
  2298  0E81  3025               	movlw	37
  2299  0E82  00AB               	movwf	UART_Init@v_baudRate_u32+1
  2300  0E83  3080               	movlw	128
  2301  0E84  00AA               	movwf	UART_Init@v_baudRate_u32
  2302  0E85  160A  118A  237C  120A  158A  	fcall	_UART_Init
  2303                           
  2304                           ;main.c: 90: UART_TxString("\n\rPIC Ultrs baord menu v2.0\r\n 1:GPIO Blink\r\n 2:LCD 8-b
      +                          it \n\r 3:LCD 4-bit\n\r 4:7-Segment\n\r 5:RTC\n\r 6:EEPROM\n\r 7:ADC\n\r 8:Keypad \n\r E
      +                          nter option:");
  2305  0E8A  3022               	movlw	low (STR_1| (0+32768))
  2306  0E8B  00F1               	movwf	UART_TxString@ptr_string
  2307  0E8C  3088               	movlw	high (STR_1| (0+32768))
  2308  0E8D  00F2               	movwf	UART_TxString@ptr_string+1
  2309  0E8E  160A  118A  243A  120A  158A  	fcall	_UART_TxString
  2310                           
  2311                           ;main.c: 91: UART_TxString("\n\rReset the board after test is done");
  2312  0E93  3083               	movlw	low (STR_2| (0+32768))
  2313  0E94  00F1               	movwf	UART_TxString@ptr_string
  2314  0E95  308A               	movlw	high (STR_2| (0+32768))
  2315  0E96  00F2               	movwf	UART_TxString@ptr_string+1
  2316  0E97  160A  118A  243A  120A  158A  	fcall	_UART_TxString
  2317                           
  2318                           ;main.c: 92: mm_option = UART_RxChar();
  2319  0E9C  160A  118A  228F  120A  158A  	fcall	_UART_RxChar
  2320  0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  2321  0EA2  1303               	bcf	3,6	;RP1=0, select bank0
  2322  0EA3  00EF               	movwf	??_main
  2323  0EA4  086F               	movf	??_main,w
  2324  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  2325  0EA6  1303               	bcf	3,6	;RP1=0, select bank1
  2326  0EA7  00B6               	movwf	_mm_option^(0+128)
  2327                           
  2328                           ;main.c: 94: {
  2329                           ;main.c: 95: switch(mm_option)
  2330                           
  2331                           ;main.c: 93: while(1)
  2332  0EA8  2ED8               	goto	l3418
  2333  0EA9                     l3400:	
  2334                           ;main.c: 96: {
  2335                           ;main.c: 97: case '1': gpio_test(); break;
  2336                           
  2337  0EA9  120A  118A  20F9  120A  158A  	fcall	_gpio_test
  2338  0EAE  2ED8               	goto	l3418
  2339  0EAF                     l3402:	
  2340                           ;main.c: 98: case '2': LCD_8bit_test(); break;
  2341                           
  2342  0EAF  120A  158A  2603  120A  158A  	fcall	_LCD_8bit_test
  2343  0EB4  2ED8               	goto	l3418
  2344  0EB5                     l3404:	
  2345                           ;main.c: 99: case '3': LCD_4bit_test(); break;
  2346                           
  2347  0EB5  120A  158A  258B  120A  158A  	fcall	_LCD_4bit_test
  2348  0EBA  2ED8               	goto	l3418
  2349  0EBB                     l3406:	
  2350                           ;main.c: 100: case '4': seg_test(); break;
  2351                           
  2352  0EBB  120A  158A  2516  120A  158A  	fcall	_seg_test
  2353  0EC0  2ED8               	goto	l3418
  2354  0EC1                     l3408:	
  2355                           ;main.c: 101: case '5': rtc_test(); break;
  2356                           
  2357  0EC1  120A  118A  219A  120A  158A  	fcall	_rtc_test
  2358  0EC6  2ED8               	goto	l3418
  2359  0EC7                     l3410:	
  2360                           ;main.c: 102: case '6': eeprom_test(); break;
  2361                           
  2362  0EC7  120A  158A  2382  120A  158A  	fcall	_eeprom_test
  2363  0ECC  2ED8               	goto	l3418
  2364  0ECD                     l3412:	
  2365                           ;main.c: 103: case '7': adc_test(); break;
  2366                           
  2367  0ECD  160A  118A  25A4  120A  158A  	fcall	_adc_test
  2368  0ED2  2ED8               	goto	l3418
  2369  0ED3                     l3414:	
  2370                           ;main.c: 104: case '8': keypad_test();break;
  2371                           
  2372  0ED3  160A  118A  2745  120A  158A  	fcall	_keypad_test
  2373  0ED8                     l3418:	
  2374                           ;main.c: 106: }
  2375                           
  2376                           ;main.c: 105: default:break;
  2377                           
  2378  0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  2379  0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  2380  0EDA  0836               	movf	_mm_option^(0+128),w
  2381                           
  2382                           ; Switch size 1, requested type "space"
  2383                           ; Number of cases is 8, Range of values is 49 to 56
  2384                           ; switch strategies available:
  2385                           ; Name         Instructions Cycles
  2386                           ; simple_byte           25    13 (average)
  2387                           ; direct_byte           35    11 (fixed)
  2388                           ; jumptable            263     9 (fixed)
  2389                           ;	Chosen strategy is simple_byte
  2390  0EDB  3A31               	xorlw	49	; case 49
  2391  0EDC  1903               	skipnz
  2392  0EDD  2EA9               	goto	l3400
  2393  0EDE  3A03               	xorlw	3	; case 50
  2394  0EDF  1903               	skipnz
  2395  0EE0  2EAF               	goto	l3402
  2396  0EE1  3A01               	xorlw	1	; case 51
  2397  0EE2  1903               	skipnz
  2398  0EE3  2EB5               	goto	l3404
  2399  0EE4  3A07               	xorlw	7	; case 52
  2400  0EE5  1903               	skipnz
  2401  0EE6  2EBB               	goto	l3406
  2402  0EE7  3A01               	xorlw	1	; case 53
  2403  0EE8  1903               	skipnz
  2404  0EE9  2EC1               	goto	l3408
  2405  0EEA  3A03               	xorlw	3	; case 54
  2406  0EEB  1903               	skipnz
  2407  0EEC  2EC7               	goto	l3410
  2408  0EED  3A01               	xorlw	1	; case 55
  2409  0EEE  1903               	skipnz
  2410  0EEF  2ECD               	goto	l3412
  2411  0EF0  3A0F               	xorlw	15	; case 56
  2412  0EF1  1903               	skipnz
  2413  0EF2  2ED3               	goto	l3414
  2414  0EF3  2ED8               	goto	l3418
  2415  0EF4  2ED8               	goto	l3418
  2416  0EF5                     __end_of_main:	
  2417                           
  2418                           	psect	text1
  2419  0D16                     __ptext1:	
  2420 ;; *************** function _seg_test *****************
  2421 ;; Defined at:
  2422 ;;		line 208 in file "main.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  seg_code        4   69[BANK0 ] unsigned char [4]
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2436 ;;      Params:         0       0       0       0       0
  2437 ;;      Locals:         0       4       0       0       0
  2438 ;;      Temps:          0       0       0       0       0
  2439 ;;      Totals:         0       4       0       0       0
  2440 ;;Total ram usage:        4 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    3
  2443 ;; This function calls:
  2444 ;;		_DELAY_us
  2445 ;;		_UART_Printf
  2446 ;;		_UART_RxChar
  2447 ;;		_UART_TxString
  2448 ;; This function is called by:
  2449 ;;		_main
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           
  2454                           ;psect for function _seg_test
  2455  0D16                     _seg_test:	
  2456                           
  2457                           ;main.c: 210: unsigned char seg_code[]={0xC0,0xF9,0xA4,0xB0};
  2458                           
  2459                           ;incstack = 0
  2460                           ; Regs used in _seg_test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2461  0D16  1683               	bsf	3,5	;RP0=1, select bank1
  2462  0D17  1303               	bcf	3,6	;RP1=0, select bank1
  2463  0D18  084C               	movf	(seg_test@F1296+3)^(0+128),w
  2464  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  2465  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  2466  0D1B  00E8               	movwf	seg_test@seg_code+3
  2467  0D1C  1683               	bsf	3,5	;RP0=1, select bank1
  2468  0D1D  1303               	bcf	3,6	;RP1=0, select bank1
  2469  0D1E  084B               	movf	(seg_test@F1296+2)^(0+128),w
  2470  0D1F  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0D20  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0D21  00E7               	movwf	seg_test@seg_code+2
  2473  0D22  1683               	bsf	3,5	;RP0=1, select bank1
  2474  0D23  1303               	bcf	3,6	;RP1=0, select bank1
  2475  0D24  084A               	movf	(seg_test@F1296+1)^(0+128),w
  2476  0D25  1283               	bcf	3,5	;RP0=0, select bank0
  2477  0D26  1303               	bcf	3,6	;RP1=0, select bank0
  2478  0D27  00E6               	movwf	seg_test@seg_code+1
  2479  0D28  1683               	bsf	3,5	;RP0=1, select bank1
  2480  0D29  1303               	bcf	3,6	;RP1=0, select bank1
  2481  0D2A  0849               	movf	seg_test@F1296^(0+128),w
  2482  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  2484  0D2D  00E5               	movwf	seg_test@seg_code
  2485                           
  2486                           ;main.c: 211: UART_TxString("\n\r Segment DataBus: PORTD    Seg select: S1->PB.0 S2->PB.
      +                          1 S3->PB.2 S4->PB.3");
  2487  0D2E  30AF               	movlw	low (STR_13| (0+32768))
  2488  0D2F  00F1               	movwf	UART_TxString@ptr_string
  2489  0D30  3088               	movlw	high (STR_13| (0+32768))
  2490  0D31  00F2               	movwf	UART_TxString@ptr_string+1
  2491  0D32  160A  118A  243A  120A  158A  	fcall	_UART_TxString
  2492                           
  2493                           ;main.c: 212: UART_Printf("\n\rMake connections and hit 'k' to test! ");
  2494  0D37  30BB               	movlw	low (STR_14| (0+32768))
  2495  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  2496  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  2497  0D3A  00C3               	movwf	UART_Printf@argList
  2498  0D3B  3089               	movlw	high (STR_14| (0+32768))
  2499  0D3C  00C4               	movwf	UART_Printf@argList+1
  2500  0D3D  120A  118A  25C9  120A  158A  	fcall	_UART_Printf
  2501  0D42                     l3260:	
  2502                           ;main.c: 213: while(UART_RxChar()!='k');
  2503                           
  2504  0D42  160A  118A  228F  120A  158A  	fcall	_UART_RxChar
  2505  0D47  3A6B               	xorlw	107
  2506  0D48  1D03               	skipz
  2507  0D49  2D42               	goto	l3260
  2508                           
  2509                           ;main.c: 214: TRISD = 0x00u;
  2510  0D4A  1683               	bsf	3,5	;RP0=1, select bank1
  2511  0D4B  1303               	bcf	3,6	;RP1=0, select bank1
  2512  0D4C  0188               	clrf	8	;volatile
  2513                           
  2514                           ;main.c: 215: TRISB = 0x00u;
  2515  0D4D  0186               	clrf	6	;volatile
  2516  0D4E                     l3264:	
  2517                           ;main.c: 217: while(1)
  2518                           
  2519                           
  2520                           ;main.c: 218: {
  2521                           ;main.c: 219: PORTB=0x01;
  2522  0D4E  3001               	movlw	1
  2523  0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  2524  0D50  1303               	bcf	3,6	;RP1=0, select bank0
  2525  0D51  0086               	movwf	6	;volatile
  2526                           
  2527                           ;main.c: 220: PORTD = seg_code[0];
  2528  0D52  0865               	movf	seg_test@seg_code,w
  2529  0D53  0088               	movwf	8	;volatile
  2530                           
  2531                           ;main.c: 221: DELAY_us(10);
  2532  0D54  300A               	movlw	10
  2533  0D55  00F0               	movwf	DELAY_us@us_count
  2534  0D56  3000               	movlw	0
  2535  0D57  00F1               	movwf	DELAY_us@us_count+1
  2536  0D58  160A  118A  22CE  120A  158A  	fcall	_DELAY_us
  2537                           
  2538                           ;main.c: 222: PORTB=0x02;
  2539  0D5D  3002               	movlw	2
  2540  0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  2541  0D5F  1303               	bcf	3,6	;RP1=0, select bank0
  2542  0D60  0086               	movwf	6	;volatile
  2543                           
  2544                           ;main.c: 223: PORTD = seg_code[1];
  2545  0D61  0866               	movf	seg_test@seg_code+1,w
  2546  0D62  0088               	movwf	8	;volatile
  2547                           
  2548                           ;main.c: 224: DELAY_us(10);
  2549  0D63  300A               	movlw	10
  2550  0D64  00F0               	movwf	DELAY_us@us_count
  2551  0D65  3000               	movlw	0
  2552  0D66  00F1               	movwf	DELAY_us@us_count+1
  2553  0D67  160A  118A  22CE  120A  158A  	fcall	_DELAY_us
  2554                           
  2555                           ;main.c: 225: PORTB=0x04;
  2556  0D6C  3004               	movlw	4
  2557  0D6D  1283               	bcf	3,5	;RP0=0, select bank0
  2558  0D6E  1303               	bcf	3,6	;RP1=0, select bank0
  2559  0D6F  0086               	movwf	6	;volatile
  2560                           
  2561                           ;main.c: 226: PORTD = seg_code[2];
  2562  0D70  0867               	movf	seg_test@seg_code+2,w
  2563  0D71  0088               	movwf	8	;volatile
  2564                           
  2565                           ;main.c: 227: DELAY_us(10);
  2566  0D72  300A               	movlw	10
  2567  0D73  00F0               	movwf	DELAY_us@us_count
  2568  0D74  3000               	movlw	0
  2569  0D75  00F1               	movwf	DELAY_us@us_count+1
  2570  0D76  160A  118A  22CE  120A  158A  	fcall	_DELAY_us
  2571                           
  2572                           ;main.c: 228: PORTB=0x08;
  2573  0D7B  3008               	movlw	8
  2574  0D7C  1283               	bcf	3,5	;RP0=0, select bank0
  2575  0D7D  1303               	bcf	3,6	;RP1=0, select bank0
  2576  0D7E  0086               	movwf	6	;volatile
  2577                           
  2578                           ;main.c: 229: PORTD = seg_code[3];
  2579  0D7F  0868               	movf	seg_test@seg_code+3,w
  2580  0D80  0088               	movwf	8	;volatile
  2581                           
  2582                           ;main.c: 230: DELAY_us(10);
  2583  0D81  300A               	movlw	10
  2584  0D82  00F0               	movwf	DELAY_us@us_count
  2585  0D83  3000               	movlw	0
  2586  0D84  00F1               	movwf	DELAY_us@us_count+1
  2587  0D85  160A  118A  22CE  120A  158A  	fcall	_DELAY_us
  2588  0D8A  2D4E               	goto	l3264
  2589  0D8B                     __end_of_seg_test:	
  2590                           
  2591                           	psect	text2
  2592  019A                     __ptext2:	
  2593 ;; *************** function _rtc_test *****************
  2594 ;; Defined at:
  2595 ;;		line 238 in file "main.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  rtc             7   69[BANK0 ] struct .
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      void 
  2602 ;; Registers used:
  2603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2609 ;;      Params:         0       0       0       0       0
  2610 ;;      Locals:         0       7       0       0       0
  2611 ;;      Temps:          0       0      12       0       0
  2612 ;;      Totals:         0       7      12       0       0
  2613 ;;Total ram usage:       19 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    3
  2616 ;; This function calls:
  2617 ;;		_RTC_GetDateTime
  2618 ;;		_RTC_Init
  2619 ;;		_RTC_SetDateTime
  2620 ;;		_UART_Printf
  2621 ;;		_UART_RxChar
  2622 ;; This function is called by:
  2623 ;;		_main
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           
  2628                           ;psect for function _rtc_test
  2629  019A                     _rtc_test:	
  2630                           
  2631                           ;main.c: 240: rtc_t rtc;
  2632                           ;main.c: 241: UART_Printf("\n\rConnections SCL->PC.3 SDA->PC.4");
  2633                           
  2634                           ;incstack = 0
  2635                           ; Regs used in _rtc_test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2636  019A  30A8               	movlw	low (STR_15| (0+32768))
  2637  019B  1283               	bcf	3,5	;RP0=0, select bank0
  2638  019C  1303               	bcf	3,6	;RP1=0, select bank0
  2639  019D  00C3               	movwf	UART_Printf@argList
  2640  019E  308A               	movlw	high (STR_15| (0+32768))
  2641  019F  00C4               	movwf	UART_Printf@argList+1
  2642  01A0  120A  118A  25C9  120A  118A  	fcall	_UART_Printf
  2643                           
  2644                           ;main.c: 242: UART_Printf("\n\r Make connections and hit 'k' to test! ");
  2645  01A5  3091               	movlw	low (STR_16| (0+32768))
  2646  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  2647  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  2648  01A8  00C3               	movwf	UART_Printf@argList
  2649  01A9  3089               	movlw	high (STR_16| (0+32768))
  2650  01AA  00C4               	movwf	UART_Printf@argList+1
  2651  01AB  120A  118A  25C9  120A  118A  	fcall	_UART_Printf
  2652  01B0                     l3290:	
  2653                           ;main.c: 243: while(UART_RxChar()!='k');
  2654                           
  2655  01B0  160A  118A  228F  120A  118A  	fcall	_UART_RxChar
  2656  01B5  3A6B               	xorlw	107
  2657  01B6  1D03               	skipz
  2658  01B7  29B0               	goto	l3290
  2659                           
  2660                           ;main.c: 245: RTC_Init();
  2661  01B8  160A  118A  23D1  120A  118A  	fcall	_RTC_Init
  2662                           
  2663                           ;main.c: 246: rtc.hour = 0x10;
  2664  01BD  3010               	movlw	16
  2665  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  2666  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  2667  01C0  00B9               	movwf	??_rtc_test^(0+128)
  2668  01C1  0839               	movf	??_rtc_test^(0+128),w
  2669  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2670  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  2671  01C4  00E7               	movwf	rtc_test@rtc+2
  2672                           
  2673                           ;main.c: 247: rtc.min = 0x40;
  2674  01C5  3040               	movlw	64
  2675  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  2676  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  2677  01C8  00B9               	movwf	??_rtc_test^(0+128)
  2678  01C9  0839               	movf	??_rtc_test^(0+128),w
  2679  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2680  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  2681  01CC  00E6               	movwf	rtc_test@rtc+1
  2682                           
  2683                           ;main.c: 248: rtc.sec = 0x00;
  2684  01CD  01E5               	clrf	rtc_test@rtc
  2685                           
  2686                           ;main.c: 250: rtc.date = 0x01;
  2687  01CE  01E9               	clrf	rtc_test@rtc+4
  2688  01CF  0AE9               	incf	rtc_test@rtc+4,f
  2689                           
  2690                           ;main.c: 251: rtc.month = 0x01;
  2691  01D0  01EA               	clrf	rtc_test@rtc+5
  2692  01D1  0AEA               	incf	rtc_test@rtc+5,f
  2693                           
  2694                           ;main.c: 252: rtc.year = 0x16;
  2695  01D2  3016               	movlw	22
  2696  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  2697  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  2698  01D5  00B9               	movwf	??_rtc_test^(0+128)
  2699  01D6  0839               	movf	??_rtc_test^(0+128),w
  2700  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  2701  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  2702  01D9  00EB               	movwf	rtc_test@rtc+6
  2703                           
  2704                           ;main.c: 253: rtc.weekDay = 5;
  2705  01DA  3005               	movlw	5
  2706  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  2707  01DC  1303               	bcf	3,6	;RP1=0, select bank1
  2708  01DD  00B9               	movwf	??_rtc_test^(0+128)
  2709  01DE  0839               	movf	??_rtc_test^(0+128),w
  2710  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  2711  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  2712  01E1  00E8               	movwf	rtc_test@rtc+3
  2713                           
  2714                           ;main.c: 260: RTC_SetDateTime(&rtc);
  2715  01E2  3065               	movlw	(low (rtc_test@rtc| 0))& (0+255)
  2716  01E3  160A  118A  26EB  120A  118A  	fcall	_RTC_SetDateTime
  2717  01E8                     l3310:	
  2718                           ;main.c: 264: while(1)
  2719                           
  2720                           
  2721                           ;main.c: 265: {
  2722                           ;main.c: 266: RTC_GetDateTime(&rtc);
  2723  01E8  3065               	movlw	(low (rtc_test@rtc| 0))& (0+255)
  2724  01E9  120A  158A  26F5  120A  118A  	fcall	_RTC_GetDateTime
  2725                           
  2726                           ;main.c: 267: UART_Printf("\n\rtime:%2x:%2x:%2x  \nDate:%2x/%2x/%2x",(uint16_t)rtc.hour,
      +                          (uint16_t)rtc.min,(uint16_t)rtc.sec,(uint16_t)rtc.date,(uint16_t)rtc.month,(uint16_t)rtc
      +                          .year);
  2727  01EE  305D               	movlw	low (STR_17| (0+32768))
  2728  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2729  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2730  01F1  00C3               	movwf	UART_Printf@argList
  2731  01F2  308A               	movlw	high (STR_17| (0+32768))
  2732  01F3  00C4               	movwf	UART_Printf@argList+1
  2733  01F4  0867               	movf	rtc_test@rtc+2,w
  2734  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  2735  01F6  1303               	bcf	3,6	;RP1=0, select bank1
  2736  01F7  00B9               	movwf	??_rtc_test^(0+128)
  2737  01F8  01BA               	clrf	(??_rtc_test^(0+128)+1)
  2738  01F9  0839               	movf	??_rtc_test^(0+128),w
  2739  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2740  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  2741  01FC  00C5               	movwf	?_UART_Printf+2
  2742  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  2743  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  2744  01FF  083A               	movf	(??_rtc_test+1)^(0+128),w
  2745  0200  1283               	bcf	3,5	;RP0=0, select bank0
  2746  0201  1303               	bcf	3,6	;RP1=0, select bank0
  2747  0202  00C6               	movwf	?_UART_Printf+3
  2748  0203  0866               	movf	rtc_test@rtc+1,w
  2749  0204  1683               	bsf	3,5	;RP0=1, select bank1
  2750  0205  1303               	bcf	3,6	;RP1=0, select bank1
  2751  0206  00BB               	movwf	(??_rtc_test+2)^(0+128)
  2752  0207  01BC               	clrf	((??_rtc_test+2)^(0+128)+1)
  2753  0208  083B               	movf	(??_rtc_test+2)^(0+128),w
  2754  0209  1283               	bcf	3,5	;RP0=0, select bank0
  2755  020A  1303               	bcf	3,6	;RP1=0, select bank0
  2756  020B  00C7               	movwf	?_UART_Printf+4
  2757  020C  1683               	bsf	3,5	;RP0=1, select bank1
  2758  020D  1303               	bcf	3,6	;RP1=0, select bank1
  2759  020E  083C               	movf	(??_rtc_test+3)^(0+128),w
  2760  020F  1283               	bcf	3,5	;RP0=0, select bank0
  2761  0210  1303               	bcf	3,6	;RP1=0, select bank0
  2762  0211  00C8               	movwf	?_UART_Printf+5
  2763  0212  0865               	movf	rtc_test@rtc,w
  2764  0213  1683               	bsf	3,5	;RP0=1, select bank1
  2765  0214  1303               	bcf	3,6	;RP1=0, select bank1
  2766  0215  00BD               	movwf	(??_rtc_test+4)^(0+128)
  2767  0216  01BE               	clrf	((??_rtc_test+4)^(0+128)+1)
  2768  0217  083D               	movf	(??_rtc_test+4)^(0+128),w
  2769  0218  1283               	bcf	3,5	;RP0=0, select bank0
  2770  0219  1303               	bcf	3,6	;RP1=0, select bank0
  2771  021A  00C9               	movwf	?_UART_Printf+6
  2772  021B  1683               	bsf	3,5	;RP0=1, select bank1
  2773  021C  1303               	bcf	3,6	;RP1=0, select bank1
  2774  021D  083E               	movf	(??_rtc_test+5)^(0+128),w
  2775  021E  1283               	bcf	3,5	;RP0=0, select bank0
  2776  021F  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0220  00CA               	movwf	?_UART_Printf+7
  2778  0221  0869               	movf	rtc_test@rtc+4,w
  2779  0222  1683               	bsf	3,5	;RP0=1, select bank1
  2780  0223  1303               	bcf	3,6	;RP1=0, select bank1
  2781  0224  00BF               	movwf	(??_rtc_test+6)^(0+128)
  2782  0225  01C0               	clrf	((??_rtc_test+6)^(0+128)+1)
  2783  0226  083F               	movf	(??_rtc_test+6)^(0+128),w
  2784  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2785  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2786  0229  00CB               	movwf	?_UART_Printf+8
  2787  022A  1683               	bsf	3,5	;RP0=1, select bank1
  2788  022B  1303               	bcf	3,6	;RP1=0, select bank1
  2789  022C  0840               	movf	(??_rtc_test+7)^(0+128),w
  2790  022D  1283               	bcf	3,5	;RP0=0, select bank0
  2791  022E  1303               	bcf	3,6	;RP1=0, select bank0
  2792  022F  00CC               	movwf	?_UART_Printf+9
  2793  0230  086A               	movf	rtc_test@rtc+5,w
  2794  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2795  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2796  0233  00C1               	movwf	(??_rtc_test+8)^(0+128)
  2797  0234  01C2               	clrf	((??_rtc_test+8)^(0+128)+1)
  2798  0235  0841               	movf	(??_rtc_test+8)^(0+128),w
  2799  0236  1283               	bcf	3,5	;RP0=0, select bank0
  2800  0237  1303               	bcf	3,6	;RP1=0, select bank0
  2801  0238  00CD               	movwf	?_UART_Printf+10
  2802  0239  1683               	bsf	3,5	;RP0=1, select bank1
  2803  023A  1303               	bcf	3,6	;RP1=0, select bank1
  2804  023B  0842               	movf	(??_rtc_test+9)^(0+128),w
  2805  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2806  023D  1303               	bcf	3,6	;RP1=0, select bank0
  2807  023E  00CE               	movwf	?_UART_Printf+11
  2808  023F  086B               	movf	rtc_test@rtc+6,w
  2809  0240  1683               	bsf	3,5	;RP0=1, select bank1
  2810  0241  1303               	bcf	3,6	;RP1=0, select bank1
  2811  0242  00C3               	movwf	(??_rtc_test+10)^(0+128)
  2812  0243  01C4               	clrf	((??_rtc_test+10)^(0+128)+1)
  2813  0244  0843               	movf	(??_rtc_test+10)^(0+128),w
  2814  0245  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0246  1303               	bcf	3,6	;RP1=0, select bank0
  2816  0247  00CF               	movwf	?_UART_Printf+12
  2817  0248  1683               	bsf	3,5	;RP0=1, select bank1
  2818  0249  1303               	bcf	3,6	;RP1=0, select bank1
  2819  024A  0844               	movf	(??_rtc_test+11)^(0+128),w
  2820  024B  1283               	bcf	3,5	;RP0=0, select bank0
  2821  024C  1303               	bcf	3,6	;RP1=0, select bank0
  2822  024D  00D0               	movwf	?_UART_Printf+13
  2823  024E  120A  118A  25C9  120A  118A  	fcall	_UART_Printf
  2824  0253  29E8               	goto	l3310
  2825  0254                     __end_of_rtc_test:	
  2826                           
  2827                           	psect	text3
  2828  16EB                     __ptext3:	
  2829 ;; *************** function _RTC_SetDateTime *****************
  2830 ;; Defined at:
  2831 ;;		line 95 in file "../00-libfiles/rtc.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  rtc             1    wreg     PTR struct .
  2834 ;;		 -> rtc_test@rtc(7), 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  rtc             1    1[COMMON] PTR struct .
  2837 ;;		 -> rtc_test@rtc(7), 
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      void 
  2840 ;; Registers used:
  2841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2847 ;;      Params:         0       0       0       0       0
  2848 ;;      Locals:         1       0       0       0       0
  2849 ;;      Temps:          0       0       0       0       0
  2850 ;;      Totals:         1       0       0       0       0
  2851 ;;Total ram usage:        1 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; Hardware stack levels required when called:    2
  2854 ;; This function calls:
  2855 ;;		_I2C_Start
  2856 ;;		_I2C_Stop
  2857 ;;		_I2C_Write
  2858 ;; This function is called by:
  2859 ;;		_rtc_test
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           
  2864                           ;psect for function _RTC_SetDateTime
  2865  16EB                     _RTC_SetDateTime:	
  2866                           
  2867                           ;incstack = 0
  2868                           ; Regs used in _RTC_SetDateTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2869                           ;RTC_SetDateTime@rtc stored from wreg
  2870  16EB  00F1               	movwf	RTC_SetDateTime@rtc
  2871                           
  2872                           ;rtc.c: 97: I2C_Start();
  2873  16EC  160A  118A  2289  160A  118A  	fcall	_I2C_Start
  2874                           
  2875                           ;rtc.c: 99: I2C_Write(0xD0u);
  2876  16F1  30D0               	movlw	208
  2877  16F2  160A  118A  22EF  160A  118A  	fcall	_I2C_Write
  2878                           
  2879                           ;rtc.c: 100: I2C_Write(0x00u);
  2880  16F7  3000               	movlw	0
  2881  16F8  160A  118A  22EF  160A  118A  	fcall	_I2C_Write
  2882                           
  2883                           ;rtc.c: 102: I2C_Write(rtc->sec);
  2884  16FD  0871               	movf	RTC_SetDateTime@rtc,w
  2885  16FE  0084               	movwf	4
  2886  16FF  1383               	bcf	3,7	;select IRP bank0
  2887  1700  0800               	movf	0,w
  2888  1701  160A  118A  22EF  160A  118A  	fcall	_I2C_Write
  2889                           
  2890                           ;rtc.c: 103: I2C_Write(rtc->min);
  2891  1706  0A71               	incf	RTC_SetDateTime@rtc,w
  2892  1707  0084               	movwf	4
  2893  1708  1383               	bcf	3,7	;select IRP bank0
  2894  1709  0800               	movf	0,w
  2895  170A  160A  118A  22EF  160A  118A  	fcall	_I2C_Write
  2896                           
  2897                           ;rtc.c: 104: I2C_Write(rtc->hour);
  2898  170F  0871               	movf	RTC_SetDateTime@rtc,w
  2899  1710  3E02               	addlw	2
  2900  1711  0084               	movwf	4
  2901  1712  1383               	bcf	3,7	;select IRP bank0
  2902  1713  0800               	movf	0,w
  2903  1714  160A  118A  22EF  160A  118A  	fcall	_I2C_Write
  2904                           
  2905                           ;rtc.c: 105: I2C_Write(rtc->weekDay);
  2906  1719  0871               	movf	RTC_SetDateTime@rtc,w
  2907  171A  3E03               	addlw	3
  2908  171B  0084               	movwf	4
  2909  171C  1383               	bcf	3,7	;select IRP bank0
  2910  171D  0800               	movf	0,w
  2911  171E  160A  118A  22EF  160A  118A  	fcall	_I2C_Write
  2912                           
  2913                           ;rtc.c: 106: I2C_Write(rtc->date);
  2914  1723  0871               	movf	RTC_SetDateTime@rtc,w
  2915  1724  3E04               	addlw	4
  2916  1725  0084               	movwf	4
  2917  1726  1383               	bcf	3,7	;select IRP bank0
  2918  1727  0800               	movf	0,w
  2919  1728  160A  118A  22EF  160A  118A  	fcall	_I2C_Write
  2920                           
  2921                           ;rtc.c: 107: I2C_Write(rtc->month);
  2922  172D  0871               	movf	RTC_SetDateTime@rtc,w
  2923  172E  3E05               	addlw	5
  2924  172F  0084               	movwf	4
  2925  1730  1383               	bcf	3,7	;select IRP bank0
  2926  1731  0800               	movf	0,w
  2927  1732  160A  118A  22EF  160A  118A  	fcall	_I2C_Write
  2928                           
  2929                           ;rtc.c: 108: I2C_Write(rtc->year);
  2930  1737  0871               	movf	RTC_SetDateTime@rtc,w
  2931  1738  3E06               	addlw	6
  2932  1739  0084               	movwf	4
  2933  173A  1383               	bcf	3,7	;select IRP bank0
  2934  173B  0800               	movf	0,w
  2935  173C  160A  118A  22EF  160A  118A  	fcall	_I2C_Write
  2936                           
  2937                           ;rtc.c: 110: I2C_Stop();
  2938  1741  120A  118A  2003   	fcall	_I2C_Stop
  2939  1744  0008               	return
  2940  1745                     __end_of_RTC_SetDateTime:	
  2941                           
  2942                           	psect	text4
  2943  13D1                     __ptext4:	
  2944 ;; *************** function _RTC_Init *****************
  2945 ;; Defined at:
  2946 ;;		line 57 in file "../00-libfiles/rtc.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;		None
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0, pclath, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2960 ;;      Params:         0       0       0       0       0
  2961 ;;      Locals:         0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0
  2963 ;;      Totals:         0       0       0       0       0
  2964 ;;Total ram usage:        0 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    2
  2967 ;; This function calls:
  2968 ;;		_I2C_Init
  2969 ;;		_I2C_Start
  2970 ;;		_I2C_Stop
  2971 ;;		_I2C_Write
  2972 ;; This function is called by:
  2973 ;;		_rtc_test
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           
  2978                           ;psect for function _RTC_Init
  2979  13D1                     _RTC_Init:	
  2980                           
  2981                           ;rtc.c: 59: I2C_Init();
  2982                           
  2983                           ;incstack = 0
  2984                           ; Regs used in _RTC_Init: [wreg+status,2+status,0+pclath+cstack]
  2985  13D1  160A  118A  22FC  160A  118A  	fcall	_I2C_Init
  2986                           
  2987                           ;rtc.c: 60: I2C_Start();
  2988  13D6  160A  118A  2289  160A  118A  	fcall	_I2C_Start
  2989                           
  2990                           ;rtc.c: 62: I2C_Write(0xD0u);
  2991  13DB  30D0               	movlw	208
  2992  13DC  160A  118A  22EF  160A  118A  	fcall	_I2C_Write
  2993                           
  2994                           ;rtc.c: 63: I2C_Write(0x07u);
  2995  13E1  3007               	movlw	7
  2996  13E2  160A  118A  22EF  160A  118A  	fcall	_I2C_Write
  2997                           
  2998                           ;rtc.c: 65: I2C_Write(0x00);
  2999  13E7  3000               	movlw	0
  3000  13E8  160A  118A  22EF  160A  118A  	fcall	_I2C_Write
  3001                           
  3002                           ;rtc.c: 67: I2C_Stop();
  3003  13ED  120A  118A  2003   	fcall	_I2C_Stop
  3004  13F0  0008               	return
  3005  13F1                     __end_of_RTC_Init:	
  3006                           
  3007                           	psect	text5
  3008  12FC                     __ptext5:	
  3009 ;; *************** function _I2C_Init *****************
  3010 ;; Defined at:
  3011 ;;		line 87 in file "../00-libfiles/i2c.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;		None
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3025 ;;      Params:         0       0       0       0       0
  3026 ;;      Locals:         0       0       0       0       0
  3027 ;;      Temps:          0       0       0       0       0
  3028 ;;      Totals:         0       0       0       0       0
  3029 ;;Total ram usage:        0 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; This function calls:
  3032 ;;		Nothing
  3033 ;; This function is called by:
  3034 ;;		_RTC_Init
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           
  3039                           ;psect for function _I2C_Init
  3040  12FC                     _I2C_Init:	
  3041                           
  3042                           ;i2c.c: 89: TRISC3 = 0x01u;
  3043                           
  3044                           ;incstack = 0
  3045                           ; Regs used in _I2C_Init: [wreg]
  3046  12FC  1683               	bsf	3,5	;RP0=1, select bank1
  3047  12FD  1303               	bcf	3,6	;RP1=0, select bank1
  3048  12FE  1587               	bsf	7,3	;volatile
  3049                           
  3050                           ;i2c.c: 90: TRISC4 = 0x01u;
  3051  12FF  1607               	bsf	7,4	;volatile
  3052                           
  3053                           ;i2c.c: 92: SSPSTAT |= 0x80;
  3054  1300  1794               	bsf	20,7	;volatile
  3055                           
  3056                           ;i2c.c: 93: SSPCON = 0x28;
  3057  1301  3028               	movlw	40
  3058  1302  1283               	bcf	3,5	;RP0=0, select bank0
  3059  1303  1303               	bcf	3,6	;RP1=0, select bank0
  3060  1304  0094               	movwf	20	;volatile
  3061                           
  3062                           ;i2c.c: 94: SSPADD = 50;
  3063  1305  3032               	movlw	50
  3064  1306  1683               	bsf	3,5	;RP0=1, select bank1
  3065  1307  1303               	bcf	3,6	;RP1=0, select bank1
  3066  1308  0093               	movwf	19	;volatile
  3067  1309  0008               	return
  3068  130A                     __end_of_I2C_Init:	
  3069                           
  3070                           	psect	text6
  3071  0EF5                     __ptext6:	
  3072 ;; *************** function _RTC_GetDateTime *****************
  3073 ;; Defined at:
  3074 ;;		line 131 in file "../00-libfiles/rtc.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  rtc             1    wreg     PTR struct .
  3077 ;;		 -> rtc_test@rtc(7), 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  rtc             1    4[COMMON] PTR struct .
  3080 ;;		 -> rtc_test@rtc(7), 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1    wreg      void 
  3083 ;; Registers used:
  3084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3090 ;;      Params:         0       0       0       0       0
  3091 ;;      Locals:         1       0       0       0       0
  3092 ;;      Temps:          1       0       0       0       0
  3093 ;;      Totals:         2       0       0       0       0
  3094 ;;Total ram usage:        2 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; Hardware stack levels required when called:    2
  3097 ;; This function calls:
  3098 ;;		_I2C_Read
  3099 ;;		_I2C_Start
  3100 ;;		_I2C_Stop
  3101 ;;		_I2C_Write
  3102 ;; This function is called by:
  3103 ;;		_rtc_test
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           
  3108                           ;psect for function _RTC_GetDateTime
  3109  0EF5                     _RTC_GetDateTime:	
  3110                           
  3111                           ;incstack = 0
  3112                           ; Regs used in _RTC_GetDateTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3113                           ;RTC_GetDateTime@rtc stored from wreg
  3114  0EF5  00F4               	movwf	RTC_GetDateTime@rtc
  3115                           
  3116                           ;rtc.c: 133: I2C_Start();
  3117  0EF6  160A  118A  2289  120A  158A  	fcall	_I2C_Start
  3118                           
  3119                           ;rtc.c: 135: I2C_Write(0xD0u);
  3120  0EFB  30D0               	movlw	208
  3121  0EFC  160A  118A  22EF  120A  158A  	fcall	_I2C_Write
  3122                           
  3123                           ;rtc.c: 136: I2C_Write(0x00u);
  3124  0F01  3000               	movlw	0
  3125  0F02  160A  118A  22EF  120A  158A  	fcall	_I2C_Write
  3126                           
  3127                           ;rtc.c: 138: I2C_Stop();
  3128  0F07  120A  118A  2003  120A  158A  	fcall	_I2C_Stop
  3129                           
  3130                           ;rtc.c: 140: I2C_Start();
  3131  0F0C  160A  118A  2289  120A  158A  	fcall	_I2C_Start
  3132                           
  3133                           ;rtc.c: 141: I2C_Write(0xD1u);
  3134  0F11  30D1               	movlw	209
  3135  0F12  160A  118A  22EF  120A  158A  	fcall	_I2C_Write
  3136                           
  3137                           ;rtc.c: 143: rtc->sec = I2C_Read(1);
  3138  0F17  3001               	movlw	1
  3139  0F18  160A  118A  23B1  120A  158A  	fcall	_I2C_Read
  3140  0F1D  00F3               	movwf	??_RTC_GetDateTime
  3141  0F1E  0874               	movf	RTC_GetDateTime@rtc,w
  3142  0F1F  0084               	movwf	4
  3143  0F20  0873               	movf	??_RTC_GetDateTime,w
  3144  0F21  1383               	bcf	3,7	;select IRP bank0
  3145  0F22  0080               	movwf	0
  3146                           
  3147                           ;rtc.c: 144: rtc->min = I2C_Read(1);
  3148  0F23  3001               	movlw	1
  3149  0F24  160A  118A  23B1  120A  158A  	fcall	_I2C_Read
  3150  0F29  00F3               	movwf	??_RTC_GetDateTime
  3151  0F2A  0A74               	incf	RTC_GetDateTime@rtc,w
  3152  0F2B  0084               	movwf	4
  3153  0F2C  0873               	movf	??_RTC_GetDateTime,w
  3154  0F2D  1383               	bcf	3,7	;select IRP bank0
  3155  0F2E  0080               	movwf	0
  3156                           
  3157                           ;rtc.c: 145: rtc->hour= I2C_Read(1);
  3158  0F2F  3001               	movlw	1
  3159  0F30  160A  118A  23B1  120A  158A  	fcall	_I2C_Read
  3160  0F35  00F3               	movwf	??_RTC_GetDateTime
  3161  0F36  0874               	movf	RTC_GetDateTime@rtc,w
  3162  0F37  3E02               	addlw	2
  3163  0F38  0084               	movwf	4
  3164  0F39  0873               	movf	??_RTC_GetDateTime,w
  3165  0F3A  1383               	bcf	3,7	;select IRP bank0
  3166  0F3B  0080               	movwf	0
  3167                           
  3168                           ;rtc.c: 146: rtc->weekDay = I2C_Read(1);
  3169  0F3C  3001               	movlw	1
  3170  0F3D  160A  118A  23B1  120A  158A  	fcall	_I2C_Read
  3171  0F42  00F3               	movwf	??_RTC_GetDateTime
  3172  0F43  0874               	movf	RTC_GetDateTime@rtc,w
  3173  0F44  3E03               	addlw	3
  3174  0F45  0084               	movwf	4
  3175  0F46  0873               	movf	??_RTC_GetDateTime,w
  3176  0F47  1383               	bcf	3,7	;select IRP bank0
  3177  0F48  0080               	movwf	0
  3178                           
  3179                           ;rtc.c: 147: rtc->date= I2C_Read(1);
  3180  0F49  3001               	movlw	1
  3181  0F4A  160A  118A  23B1  120A  158A  	fcall	_I2C_Read
  3182  0F4F  00F3               	movwf	??_RTC_GetDateTime
  3183  0F50  0874               	movf	RTC_GetDateTime@rtc,w
  3184  0F51  3E04               	addlw	4
  3185  0F52  0084               	movwf	4
  3186  0F53  0873               	movf	??_RTC_GetDateTime,w
  3187  0F54  1383               	bcf	3,7	;select IRP bank0
  3188  0F55  0080               	movwf	0
  3189                           
  3190                           ;rtc.c: 148: rtc->month=I2C_Read(1);
  3191  0F56  3001               	movlw	1
  3192  0F57  160A  118A  23B1  120A  158A  	fcall	_I2C_Read
  3193  0F5C  00F3               	movwf	??_RTC_GetDateTime
  3194  0F5D  0874               	movf	RTC_GetDateTime@rtc,w
  3195  0F5E  3E05               	addlw	5
  3196  0F5F  0084               	movwf	4
  3197  0F60  0873               	movf	??_RTC_GetDateTime,w
  3198  0F61  1383               	bcf	3,7	;select IRP bank0
  3199  0F62  0080               	movwf	0
  3200                           
  3201                           ;rtc.c: 149: rtc->year =I2C_Read(0);
  3202  0F63  3000               	movlw	0
  3203  0F64  160A  118A  23B1  120A  158A  	fcall	_I2C_Read
  3204  0F69  00F3               	movwf	??_RTC_GetDateTime
  3205  0F6A  0874               	movf	RTC_GetDateTime@rtc,w
  3206  0F6B  3E06               	addlw	6
  3207  0F6C  0084               	movwf	4
  3208  0F6D  0873               	movf	??_RTC_GetDateTime,w
  3209  0F6E  1383               	bcf	3,7	;select IRP bank0
  3210  0F6F  0080               	movwf	0
  3211                           
  3212                           ;rtc.c: 151: I2C_Stop();
  3213  0F70  120A  118A  2003   	fcall	_I2C_Stop
  3214  0F73  0008               	return
  3215  0F74                     __end_of_RTC_GetDateTime:	
  3216                           
  3217                           	psect	text7
  3218  12EF                     __ptext7:	
  3219 ;; *************** function _I2C_Write *****************
  3220 ;; Defined at:
  3221 ;;		line 179 in file "../00-libfiles/i2c.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  v_i2cData_u8    1    wreg     unsigned char 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  v_i2cData_u8    1    0[COMMON] unsigned char 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		wreg, status,2, status,0, pclath, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3235 ;;      Params:         0       0       0       0       0
  3236 ;;      Locals:         1       0       0       0       0
  3237 ;;      Temps:          0       0       0       0       0
  3238 ;;      Totals:         1       0       0       0       0
  3239 ;;Total ram usage:        1 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    1
  3242 ;; This function calls:
  3243 ;;		_i2c_WaitForIdle
  3244 ;; This function is called by:
  3245 ;;		_RTC_Init
  3246 ;;		_RTC_SetDateTime
  3247 ;;		_RTC_GetDateTime
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           
  3252                           ;psect for function _I2C_Write
  3253  12EF                     _I2C_Write:	
  3254                           
  3255                           ;incstack = 0
  3256                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  3257                           ;I2C_Write@v_i2cData_u8 stored from wreg
  3258  12EF  00F0               	movwf	I2C_Write@v_i2cData_u8
  3259                           
  3260                           ;i2c.c: 183: SSPBUF = v_i2cData_u8;
  3261  12F0  0870               	movf	I2C_Write@v_i2cData_u8,w
  3262  12F1  1283               	bcf	3,5	;RP0=0, select bank0
  3263  12F2  1303               	bcf	3,6	;RP1=0, select bank0
  3264  12F3  0093               	movwf	19	;volatile
  3265  12F4                     l220:	
  3266                           ;i2c.c: 184: while(BF==1);
  3267                           
  3268  12F4  1683               	bsf	3,5	;RP0=1, select bank1
  3269  12F5  1303               	bcf	3,6	;RP1=0, select bank1
  3270  12F6  1814               	btfsc	20,0	;volatile
  3271  12F7  2AF4               	goto	l220
  3272                           
  3273                           ;i2c.c: 185: i2c_WaitForIdle();
  3274  12F8  160A  118A  22E4   	fcall	_i2c_WaitForIdle
  3275  12FB  0008               	return
  3276  12FC                     __end_of_I2C_Write:	
  3277                           
  3278                           	psect	text8
  3279  0003                     __ptext8:	
  3280 ;; *************** function _I2C_Stop *****************
  3281 ;; Defined at:
  3282 ;;		line 147 in file "../00-libfiles/i2c.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;		None
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;		None
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  1    wreg      void 
  3289 ;; Registers used:
  3290 ;;		None
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3296 ;;      Params:         0       0       0       0       0
  3297 ;;      Locals:         0       0       0       0       0
  3298 ;;      Temps:          0       0       0       0       0
  3299 ;;      Totals:         0       0       0       0       0
  3300 ;;Total ram usage:        0 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; This function calls:
  3303 ;;		Nothing
  3304 ;; This function is called by:
  3305 ;;		_RTC_Init
  3306 ;;		_RTC_SetDateTime
  3307 ;;		_RTC_GetDateTime
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           
  3312                           ;psect for function _I2C_Stop
  3313  0003                     _I2C_Stop:	
  3314                           
  3315                           ;i2c.c: 149: PEN = 1;
  3316                           
  3317                           ;incstack = 0
  3318                           ; Regs used in _I2C_Stop: []
  3319  0003  1683               	bsf	3,5	;RP0=1, select bank1
  3320  0004  1303               	bcf	3,6	;RP1=0, select bank1
  3321  0005  1511               	bsf	17,2	;volatile
  3322  0006                     l214:	
  3323                           ;i2c.c: 150: while(PEN == 1);
  3324                           
  3325  0006  1D11               	btfss	17,2	;volatile
  3326  0007  0008               	return
  3327  0008  2806               	goto	l214
  3328  0009                     __end_of_I2C_Stop:	
  3329                           
  3330                           	psect	text9
  3331  1289                     __ptext9:	
  3332 ;; *************** function _I2C_Start *****************
  3333 ;; Defined at:
  3334 ;;		line 118 in file "../00-libfiles/i2c.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;		None
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;		None
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		None
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3348 ;;      Params:         0       0       0       0       0
  3349 ;;      Locals:         0       0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0
  3351 ;;      Totals:         0       0       0       0       0
  3352 ;;Total ram usage:        0 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_RTC_Init
  3358 ;;		_RTC_SetDateTime
  3359 ;;		_RTC_GetDateTime
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           
  3364                           ;psect for function _I2C_Start
  3365  1289                     _I2C_Start:	
  3366                           
  3367                           ;i2c.c: 120: SEN = 1;
  3368                           
  3369                           ;incstack = 0
  3370                           ; Regs used in _I2C_Start: []
  3371  1289  1683               	bsf	3,5	;RP0=1, select bank1
  3372  128A  1303               	bcf	3,6	;RP1=0, select bank1
  3373  128B  1411               	bsf	17,0	;volatile
  3374  128C                     l208:	
  3375                           ;i2c.c: 121: while(SEN == 1);
  3376                           
  3377  128C  1C11               	btfss	17,0	;volatile
  3378  128D  0008               	return
  3379  128E  2A8C               	goto	l208
  3380  128F                     __end_of_I2C_Start:	
  3381                           
  3382                           	psect	text10
  3383  13B1                     __ptext10:	
  3384 ;; *************** function _I2C_Read *****************
  3385 ;; Defined at:
  3386 ;;		line 214 in file "../00-libfiles/i2c.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  v_ackOption_    1    wreg     unsigned char 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  v_ackOption_    1    1[COMMON] unsigned char 
  3391 ;;  v_i2cData_u8    1    2[COMMON] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      unsigned char 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, status,0, pclath, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3401 ;;      Params:         0       0       0       0       0
  3402 ;;      Locals:         2       0       0       0       0
  3403 ;;      Temps:          1       0       0       0       0
  3404 ;;      Totals:         3       0       0       0       0
  3405 ;;Total ram usage:        3 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    1
  3408 ;; This function calls:
  3409 ;;		_i2c_Ack
  3410 ;;		_i2c_NoAck
  3411 ;;		_i2c_WaitForIdle
  3412 ;; This function is called by:
  3413 ;;		_RTC_GetDateTime
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           
  3418                           ;psect for function _I2C_Read
  3419  13B1                     _I2C_Read:	
  3420                           
  3421                           ;incstack = 0
  3422                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  3423                           ;I2C_Read@v_ackOption_u8 stored from wreg
  3424  13B1  00F1               	movwf	I2C_Read@v_ackOption_u8
  3425                           
  3426                           ;i2c.c: 216: uint8_t v_i2cData_u8=0x00;
  3427  13B2  01F2               	clrf	I2C_Read@v_i2cData_u8
  3428                           
  3429                           ;i2c.c: 218: RCEN = 1;
  3430  13B3  1683               	bsf	3,5	;RP0=1, select bank1
  3431  13B4  1303               	bcf	3,6	;RP1=0, select bank1
  3432  13B5  1591               	bsf	17,3	;volatile
  3433  13B6                     l226:	
  3434                           ;i2c.c: 219: while(BF==0);
  3435                           
  3436  13B6  1C14               	btfss	20,0	;volatile
  3437  13B7  2BB6               	goto	l226
  3438                           
  3439                           ;i2c.c: 220: v_i2cData_u8 = SSPBUF;
  3440  13B8  1283               	bcf	3,5	;RP0=0, select bank0
  3441  13B9  1303               	bcf	3,6	;RP1=0, select bank0
  3442  13BA  0813               	movf	19,w	;volatile
  3443  13BB  00F0               	movwf	??_I2C_Read
  3444  13BC  0870               	movf	??_I2C_Read,w
  3445  13BD  00F2               	movwf	I2C_Read@v_i2cData_u8
  3446                           
  3447                           ;i2c.c: 221: i2c_WaitForIdle();
  3448  13BE  160A  118A  22E4  160A  118A  	fcall	_i2c_WaitForIdle
  3449                           
  3450                           ;i2c.c: 223: if(v_ackOption_u8==1)
  3451  13C3  0371               	decf	I2C_Read@v_ackOption_u8,w
  3452  13C4  1D03               	btfss	3,2
  3453  13C5  2BCC               	goto	l2620
  3454                           
  3455                           ;i2c.c: 224: {
  3456                           ;i2c.c: 225: i2c_Ack();
  3457  13C6  160A  118A  2296  160A  118A  	fcall	_i2c_Ack
  3458                           
  3459                           ;i2c.c: 226: }
  3460  13CB  2BCF               	goto	l2622
  3461  13CC                     l2620:	
  3462                           
  3463                           ;i2c.c: 227: else
  3464                           ;i2c.c: 228: {
  3465                           ;i2c.c: 229: i2c_NoAck();
  3466  13CC  160A  118A  229D   	fcall	_i2c_NoAck
  3467  13CF                     l2622:	
  3468                           
  3469                           ;i2c.c: 230: }
  3470                           ;i2c.c: 232: return v_i2cData_u8;
  3471  13CF  0872               	movf	I2C_Read@v_i2cData_u8,w
  3472  13D0  0008               	return
  3473  13D1                     __end_of_I2C_Read:	
  3474                           
  3475                           	psect	text11
  3476  12E4                     __ptext11:	
  3477 ;; *************** function _i2c_WaitForIdle *****************
  3478 ;; Defined at:
  3479 ;;		line 258 in file "../00-libfiles/i2c.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;		None
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		None
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3493 ;;      Params:         0       0       0       0       0
  3494 ;;      Locals:         0       0       0       0       0
  3495 ;;      Temps:          0       0       0       0       0
  3496 ;;      Totals:         0       0       0       0       0
  3497 ;;Total ram usage:        0 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; This function calls:
  3500 ;;		Nothing
  3501 ;; This function is called by:
  3502 ;;		_I2C_Write
  3503 ;;		_I2C_Read
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           
  3508                           ;psect for function _i2c_WaitForIdle
  3509  12E4                     _i2c_WaitForIdle:	
  3510  12E4                     l234:	
  3511                           ;i2c.c: 260: while ( (SEN == 1) || (RSEN == 1) || (PEN == 1) || (RCEN == 1) || (R_W == 1
      +                          ) );
  3512                           
  3513                           ;incstack = 0
  3514                           ; Regs used in _i2c_WaitForIdle: []
  3515                           
  3516  12E4  1683               	bsf	3,5	;RP0=1, select bank1
  3517  12E5  1303               	bcf	3,6	;RP1=0, select bank1
  3518  12E6  1C11               	btfss	17,0	;volatile
  3519  12E7  1891               	btfsc	17,1	;volatile
  3520  12E8  2AE4               	goto	l234
  3521  12E9  1D11               	btfss	17,2	;volatile
  3522  12EA  1991               	btfsc	17,3	;volatile
  3523  12EB  2AE4               	goto	l234
  3524  12EC  1D14               	btfss	20,2	;volatile
  3525  12ED  0008               	return
  3526  12EE  2AE4               	goto	l234
  3527  12EF                     __end_of_i2c_WaitForIdle:	
  3528                           
  3529                           	psect	text12
  3530  129D                     __ptext12:	
  3531 ;; *************** function _i2c_NoAck *****************
  3532 ;; Defined at:
  3533 ;;		line 299 in file "../00-libfiles/i2c.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;		None
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;		None
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  1    wreg      void 
  3540 ;; Registers used:
  3541 ;;		None
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3547 ;;      Params:         0       0       0       0       0
  3548 ;;      Locals:         0       0       0       0       0
  3549 ;;      Temps:          0       0       0       0       0
  3550 ;;      Totals:         0       0       0       0       0
  3551 ;;Total ram usage:        0 bytes
  3552 ;; Hardware stack levels used:    1
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_I2C_Read
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           
  3561                           ;psect for function _i2c_NoAck
  3562  129D                     _i2c_NoAck:	
  3563                           
  3564                           ;i2c.c: 301: ACKDT = 1;
  3565                           
  3566                           ;incstack = 0
  3567                           ; Regs used in _i2c_NoAck: []
  3568  129D  1683               	bsf	3,5	;RP0=1, select bank1
  3569  129E  1303               	bcf	3,6	;RP1=0, select bank1
  3570  129F  1691               	bsf	17,5	;volatile
  3571                           
  3572                           ;i2c.c: 302: ACKEN = 1;
  3573  12A0  1611               	bsf	17,4	;volatile
  3574  12A1                     l246:	
  3575                           ;i2c.c: 303: while(ACKEN == 1);
  3576                           
  3577  12A1  1E11               	btfss	17,4	;volatile
  3578  12A2  0008               	return
  3579  12A3  2AA1               	goto	l246
  3580  12A4                     __end_of_i2c_NoAck:	
  3581                           
  3582                           	psect	text13
  3583  1296                     __ptext13:	
  3584 ;; *************** function _i2c_Ack *****************
  3585 ;; Defined at:
  3586 ;;		line 279 in file "../00-libfiles/i2c.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      void 
  3593 ;; Registers used:
  3594 ;;		None
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3600 ;;      Params:         0       0       0       0       0
  3601 ;;      Locals:         0       0       0       0       0
  3602 ;;      Temps:          0       0       0       0       0
  3603 ;;      Totals:         0       0       0       0       0
  3604 ;;Total ram usage:        0 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_I2C_Read
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           
  3614                           ;psect for function _i2c_Ack
  3615  1296                     _i2c_Ack:	
  3616                           
  3617                           ;i2c.c: 281: ACKDT = 0;
  3618                           
  3619                           ;incstack = 0
  3620                           ; Regs used in _i2c_Ack: []
  3621  1296  1683               	bsf	3,5	;RP0=1, select bank1
  3622  1297  1303               	bcf	3,6	;RP1=0, select bank1
  3623  1298  1291               	bcf	17,5	;volatile
  3624                           
  3625                           ;i2c.c: 282: ACKEN = 1;
  3626  1299  1611               	bsf	17,4	;volatile
  3627  129A                     l240:	
  3628                           ;i2c.c: 283: while(ACKEN == 1);
  3629                           
  3630  129A  1E11               	btfss	17,4	;volatile
  3631  129B  0008               	return
  3632  129C  2A9A               	goto	l240
  3633  129D                     __end_of_i2c_Ack:	
  3634                           
  3635                           	psect	text14
  3636  1745                     __ptext14:	
  3637 ;; *************** function _keypad_test *****************
  3638 ;; Defined at:
  3639 ;;		line 313 in file "main.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;		None
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  key             1   76[BANK0 ] unsigned char 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3653 ;;      Params:         0       0       0       0       0
  3654 ;;      Locals:         0       1       0       0       0
  3655 ;;      Temps:          0       7       0       0       0
  3656 ;;      Totals:         0       8       0       0       0
  3657 ;;Total ram usage:        8 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    3
  3660 ;; This function calls:
  3661 ;;		_KEYPAD_GetKey
  3662 ;;		_KEYPAD_Init
  3663 ;;		_UART_Printf
  3664 ;;		_UART_RxChar
  3665 ;; This function is called by:
  3666 ;;		_main
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           
  3671                           ;psect for function _keypad_test
  3672  1745                     _keypad_test:	
  3673                           
  3674                           ;main.c: 315: uint8_t key;
  3675                           ;main.c: 316: UART_Printf("\n\rConnections: PORTD");
  3676                           
  3677                           ;incstack = 0
  3678                           ; Regs used in _keypad_test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3679  1745  30FE               	movlw	low (STR_21| (0+32768))
  3680  1746  1283               	bcf	3,5	;RP0=0, select bank0
  3681  1747  1303               	bcf	3,6	;RP1=0, select bank0
  3682  1748  00C3               	movwf	UART_Printf@argList
  3683  1749  308A               	movlw	high (STR_21| (0+32768))
  3684  174A  00C4               	movwf	UART_Printf@argList+1
  3685  174B  120A  118A  25C9  160A  118A  	fcall	_UART_Printf
  3686                           
  3687                           ;main.c: 317: UART_Printf("\n\rMake connections and hit 'k' to test!");
  3688  1750  3035               	movlw	low (STR_22| (0+32768))
  3689  1751  1283               	bcf	3,5	;RP0=0, select bank0
  3690  1752  1303               	bcf	3,6	;RP1=0, select bank0
  3691  1753  00C3               	movwf	UART_Printf@argList
  3692  1754  308A               	movlw	high (STR_22| (0+32768))
  3693  1755  00C4               	movwf	UART_Printf@argList+1
  3694  1756  120A  118A  25C9  160A  118A  	fcall	_UART_Printf
  3695  175B                     l3340:	
  3696                           ;main.c: 318: while(UART_RxChar()!='k');
  3697                           
  3698  175B  160A  118A  228F  160A  118A  	fcall	_UART_RxChar
  3699  1760  3A6B               	xorlw	107
  3700  1761  1D03               	skipz
  3701  1762  2F5B               	goto	l3340
  3702                           
  3703                           ;main.c: 319: KEYPAD_Init(PD_0,PD_1,PD_2,PD_3,PD_4,PD_5,PD_6,PD_7);
  3704  1763  3019               	movlw	25
  3705  1764  1283               	bcf	3,5	;RP0=0, select bank0
  3706  1765  1303               	bcf	3,6	;RP1=0, select bank0
  3707  1766  00E5               	movwf	??_keypad_test
  3708  1767  0865               	movf	??_keypad_test,w
  3709  1768  00F5               	movwf	KEYPAD_Init@row_1
  3710  1769  301A               	movlw	26
  3711  176A  00E6               	movwf	??_keypad_test+1
  3712  176B  0866               	movf	??_keypad_test+1,w
  3713  176C  00F6               	movwf	KEYPAD_Init@row_2
  3714  176D  301B               	movlw	27
  3715  176E  00E7               	movwf	??_keypad_test+2
  3716  176F  0867               	movf	??_keypad_test+2,w
  3717  1770  00F7               	movwf	KEYPAD_Init@row_3
  3718  1771  301C               	movlw	28
  3719  1772  00E8               	movwf	??_keypad_test+3
  3720  1773  0868               	movf	??_keypad_test+3,w
  3721  1774  00F8               	movwf	KEYPAD_Init@col_0
  3722  1775  301D               	movlw	29
  3723  1776  00E9               	movwf	??_keypad_test+4
  3724  1777  0869               	movf	??_keypad_test+4,w
  3725  1778  00F9               	movwf	KEYPAD_Init@col_1
  3726  1779  301E               	movlw	30
  3727  177A  00EA               	movwf	??_keypad_test+5
  3728  177B  086A               	movf	??_keypad_test+5,w
  3729  177C  00FA               	movwf	KEYPAD_Init@col_2
  3730  177D  301F               	movlw	31
  3731  177E  00EB               	movwf	??_keypad_test+6
  3732  177F  086B               	movf	??_keypad_test+6,w
  3733  1780  00FB               	movwf	KEYPAD_Init@col_3
  3734  1781  3018               	movlw	24
  3735  1782  160A  118A  2692  160A  118A  	fcall	_KEYPAD_Init
  3736  1787                     l3344:	
  3737                           ;main.c: 320: while(1)
  3738                           
  3739                           
  3740                           ;main.c: 321: {
  3741                           ;main.c: 322: key = KEYPAD_GetKey();
  3742  1787  120A  118A  205A  160A  118A  	fcall	_KEYPAD_GetKey
  3743  178C  1283               	bcf	3,5	;RP0=0, select bank0
  3744  178D  1303               	bcf	3,6	;RP1=0, select bank0
  3745  178E  00E5               	movwf	??_keypad_test
  3746  178F  0865               	movf	??_keypad_test,w
  3747  1790  00EC               	movwf	keypad_test@key
  3748                           
  3749                           ;main.c: 323: UART_Printf("\n\r Key:%c", key);
  3750  1791  3052               	movlw	low (STR_23| (0+32768))
  3751  1792  00C3               	movwf	UART_Printf@argList
  3752  1793  308B               	movlw	high (STR_23| (0+32768))
  3753  1794  00C4               	movwf	UART_Printf@argList+1
  3754  1795  086C               	movf	keypad_test@key,w
  3755  1796  00E5               	movwf	??_keypad_test
  3756  1797  01E6               	clrf	??_keypad_test+1
  3757  1798  0865               	movf	??_keypad_test,w
  3758  1799  00C5               	movwf	?_UART_Printf+2
  3759  179A  0866               	movf	??_keypad_test+1,w
  3760  179B  00C6               	movwf	?_UART_Printf+3
  3761  179C  120A  118A  25C9  160A  118A  	fcall	_UART_Printf
  3762  17A1  2F87               	goto	l3344
  3763  17A2                     __end_of_keypad_test:	
  3764                           
  3765                           	psect	text15
  3766  1692                     __ptext15:	
  3767 ;; *************** function _KEYPAD_Init *****************
  3768 ;; Defined at:
  3769 ;;		line 110 in file "../00-libfiles/keypad.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  row_0           1    wreg     enum E22
  3772 ;;  row_1           1    5[COMMON] enum E22
  3773 ;;  row_2           1    6[COMMON] enum E22
  3774 ;;  row_3           1    7[COMMON] enum E22
  3775 ;;  col_0           1    8[COMMON] enum E22
  3776 ;;  col_1           1    9[COMMON] enum E22
  3777 ;;  col_2           1   10[COMMON] enum E22
  3778 ;;  col_3           1   11[COMMON] enum E22
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;  row_0           1    0[BANK0 ] enum E22
  3781 ;;  i               1    1[BANK0 ] unsigned char 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3791 ;;      Params:         7       0       0       0       0
  3792 ;;      Locals:         0       2       0       0       0
  3793 ;;      Temps:          1       0       0       0       0
  3794 ;;      Totals:         8       2       0       0       0
  3795 ;;Total ram usage:       10 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    1
  3798 ;; This function calls:
  3799 ;;		_GPIO_PinDirection
  3800 ;; This function is called by:
  3801 ;;		_keypad_test
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           
  3806                           ;psect for function _KEYPAD_Init
  3807  1692                     _KEYPAD_Init:	
  3808                           
  3809                           ;incstack = 0
  3810                           ; Regs used in _KEYPAD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3811                           ;KEYPAD_Init@row_0 stored from wreg
  3812  1692  1283               	bcf	3,5	;RP0=0, select bank0
  3813  1693  1303               	bcf	3,6	;RP1=0, select bank0
  3814  1694  00A0               	movwf	KEYPAD_Init@row_0
  3815                           
  3816                           ;keypad.c: 120: uint8_t i;
  3817                           ;keypad.c: 122: A_RowsPins_U8[0] = row_0;
  3818  1695  0820               	movf	KEYPAD_Init@row_0,w
  3819  1696  00FC               	movwf	??_KEYPAD_Init
  3820  1697  087C               	movf	??_KEYPAD_Init,w
  3821  1698  1683               	bsf	3,5	;RP0=1, select bank1
  3822  1699  1303               	bcf	3,6	;RP1=0, select bank1
  3823  169A  00B2               	movwf	_A_RowsPins_U8^(0+128)
  3824                           
  3825                           ;keypad.c: 123: A_RowsPins_U8[1] = row_1;
  3826  169B  0875               	movf	KEYPAD_Init@row_1,w
  3827  169C  00FC               	movwf	??_KEYPAD_Init
  3828  169D  087C               	movf	??_KEYPAD_Init,w
  3829  169E  00B3               	movwf	(_A_RowsPins_U8^(0+128)+1)
  3830                           
  3831                           ;keypad.c: 124: A_RowsPins_U8[2] = row_2;
  3832  169F  0876               	movf	KEYPAD_Init@row_2,w
  3833  16A0  00FC               	movwf	??_KEYPAD_Init
  3834  16A1  087C               	movf	??_KEYPAD_Init,w
  3835  16A2  00B4               	movwf	(_A_RowsPins_U8^(0+128)+2)
  3836                           
  3837                           ;keypad.c: 125: A_RowsPins_U8[3] = row_3;
  3838  16A3  0877               	movf	KEYPAD_Init@row_3,w
  3839  16A4  00FC               	movwf	??_KEYPAD_Init
  3840  16A5  087C               	movf	??_KEYPAD_Init,w
  3841  16A6  00B5               	movwf	(_A_RowsPins_U8^(0+128)+3)
  3842                           
  3843                           ;keypad.c: 127: A_ColsPins_U8[0] = col_0;
  3844  16A7  0878               	movf	KEYPAD_Init@col_0,w
  3845  16A8  00FC               	movwf	??_KEYPAD_Init
  3846  16A9  087C               	movf	??_KEYPAD_Init,w
  3847  16AA  00AE               	movwf	_A_ColsPins_U8^(0+128)
  3848                           
  3849                           ;keypad.c: 128: A_ColsPins_U8[1] = col_1;
  3850  16AB  0879               	movf	KEYPAD_Init@col_1,w
  3851  16AC  00FC               	movwf	??_KEYPAD_Init
  3852  16AD  087C               	movf	??_KEYPAD_Init,w
  3853  16AE  00AF               	movwf	(_A_ColsPins_U8^(0+128)+1)
  3854                           
  3855                           ;keypad.c: 129: A_ColsPins_U8[2] = col_2;
  3856  16AF  087A               	movf	KEYPAD_Init@col_2,w
  3857  16B0  00FC               	movwf	??_KEYPAD_Init
  3858  16B1  087C               	movf	??_KEYPAD_Init,w
  3859  16B2  00B0               	movwf	(_A_ColsPins_U8^(0+128)+2)
  3860                           
  3861                           ;keypad.c: 130: A_ColsPins_U8[3] = col_3;
  3862  16B3  087B               	movf	KEYPAD_Init@col_3,w
  3863  16B4  00FC               	movwf	??_KEYPAD_Init
  3864  16B5  087C               	movf	??_KEYPAD_Init,w
  3865  16B6  00B1               	movwf	(_A_ColsPins_U8^(0+128)+3)
  3866                           
  3867                           ;keypad.c: 132: for(i=0;i<(4);i++)
  3868  16B7  1283               	bcf	3,5	;RP0=0, select bank0
  3869  16B8  1303               	bcf	3,6	;RP1=0, select bank0
  3870  16B9  01A1               	clrf	KEYPAD_Init@i
  3871  16BA  3004               	movlw	4
  3872  16BB  0221               	subwf	KEYPAD_Init@i,w
  3873  16BC  1803               	btfsc	3,0
  3874  16BD  2ED3               	goto	l2846
  3875  16BE                     l2840:	
  3876                           
  3877                           ;keypad.c: 133: {
  3878                           ;keypad.c: 134: GPIO_PinDirection(A_RowsPins_U8[i],0x00u);
  3879  16BE  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  3880  16BF  0821               	movf	KEYPAD_Init@i,w
  3881  16C0  3EB2               	addlw	(low (_A_RowsPins_U8| 0))& (0+255)
  3882  16C1  0084               	movwf	4
  3883  16C2  1383               	bcf	3,7	;select IRP bank1
  3884  16C3  0800               	movf	0,w
  3885  16C4  120A  118A  2325  160A  118A  	fcall	_GPIO_PinDirection
  3886  16C9  3001               	movlw	1
  3887  16CA  00FC               	movwf	??_KEYPAD_Init
  3888  16CB  087C               	movf	??_KEYPAD_Init,w
  3889  16CC  1283               	bcf	3,5	;RP0=0, select bank0
  3890  16CD  1303               	bcf	3,6	;RP1=0, select bank0
  3891  16CE  07A1               	addwf	KEYPAD_Init@i,f
  3892  16CF  3004               	movlw	4
  3893  16D0  0221               	subwf	KEYPAD_Init@i,w
  3894  16D1  1C03               	skipc
  3895  16D2  2EBE               	goto	l2840
  3896  16D3                     l2846:	
  3897                           
  3898                           ;keypad.c: 135: }
  3899                           ;keypad.c: 137: for(i=0;i<(4);i++)
  3900  16D3  01A1               	clrf	KEYPAD_Init@i
  3901  16D4                     L1:	
  3902  16D4  3004               	movlw	4
  3903  16D5  0221               	subwf	KEYPAD_Init@i,w
  3904  16D6  1803               	btfsc	3,0
  3905  16D7  0008               	return
  3906                           
  3907                           ;keypad.c: 138: {
  3908                           ;keypad.c: 139: GPIO_PinDirection(A_ColsPins_U8[i],0x01u);
  3909  16D8  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  3910  16D9  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  3911  16DA  0821               	movf	KEYPAD_Init@i,w
  3912  16DB  3EAE               	addlw	(low (_A_ColsPins_U8| 0))& (0+255)
  3913  16DC  0084               	movwf	4
  3914  16DD  1383               	bcf	3,7	;select IRP bank1
  3915  16DE  0800               	movf	0,w
  3916  16DF  120A  118A  2325  160A  118A  	fcall	_GPIO_PinDirection
  3917  16E4  3001               	movlw	1
  3918  16E5  00FC               	movwf	??_KEYPAD_Init
  3919  16E6  087C               	movf	??_KEYPAD_Init,w
  3920  16E7  1283               	bcf	3,5	;RP0=0, select bank0
  3921  16E8  1303               	bcf	3,6	;RP1=0, select bank0
  3922  16E9  07A1               	addwf	KEYPAD_Init@i,f
  3923  16EA  2ED4               	goto	L1
  3924  16EB                     __end_of_KEYPAD_Init:	
  3925                           
  3926                           	psect	text16
  3927  005A                     __ptext16:	
  3928 ;; *************** function _KEYPAD_GetKey *****************
  3929 ;; Defined at:
  3930 ;;		line 256 in file "../00-libfiles/keypad.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;		None
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  i               1    2[BANK0 ] unsigned char 
  3935 ;;  j               1    1[BANK0 ] unsigned char 
  3936 ;;  v_KeyPressed    1    0[BANK0 ] unsigned char 
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      unsigned char 
  3939 ;; Registers used:
  3940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3946 ;;      Params:         0       0       0       0       0
  3947 ;;      Locals:         0       3       0       0       0
  3948 ;;      Temps:          4       0       0       0       0
  3949 ;;      Totals:         4       3       0       0       0
  3950 ;;Total ram usage:        7 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; Hardware stack levels required when called:    2
  3953 ;; This function calls:
  3954 ;;		_GPIO_PinRead
  3955 ;;		_GPIO_PinWrite
  3956 ;;		_keypad_WaitForKeyPress
  3957 ;;		_keypad_WaitForKeyRelease
  3958 ;; This function is called by:
  3959 ;;		_keypad_test
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           
  3964                           ;psect for function _KEYPAD_GetKey
  3965  005A                     _KEYPAD_GetKey:	
  3966                           
  3967                           ;keypad.c: 258: uint8_t i,j,v_KeyPressed_u8 = 0;
  3968                           
  3969                           ;incstack = 0
  3970                           ; Regs used in _KEYPAD_GetKey: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3971  005A  1283               	bcf	3,5	;RP0=0, select bank0
  3972  005B  1303               	bcf	3,6	;RP1=0, select bank0
  3973  005C  01A0               	clrf	KEYPAD_GetKey@v_KeyPressed_u8
  3974                           
  3975                           ;keypad.c: 261: keypad_WaitForKeyRelease();
  3976  005D  120A  158A  2441  120A  118A  	fcall	_keypad_WaitForKeyRelease
  3977                           
  3978                           ;keypad.c: 262: keypad_WaitForKeyPress();
  3979  0062  120A  158A  23E1  120A  118A  	fcall	_keypad_WaitForKeyPress
  3980                           
  3981                           ;keypad.c: 264: for (i=0;i<(4);i++)
  3982  0067  1283               	bcf	3,5	;RP0=0, select bank0
  3983  0068  1303               	bcf	3,6	;RP1=0, select bank0
  3984  0069  01A2               	clrf	KEYPAD_GetKey@i
  3985  006A  3004               	movlw	4
  3986  006B  0222               	subwf	KEYPAD_GetKey@i,w
  3987  006C  1803               	btfsc	3,0
  3988  006D  2884               	goto	l2874
  3989  006E                     l2868:	
  3990                           
  3991                           ;keypad.c: 265: {
  3992                           ;keypad.c: 266: GPIO_PinWrite(A_RowsPins_U8[i],0x01u);
  3993  006E  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  3994  006F  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  3995  0070  0822               	movf	KEYPAD_GetKey@i,w
  3996  0071  3EB2               	addlw	(low (_A_RowsPins_U8| 0))& (0+255)
  3997  0072  0084               	movwf	4
  3998  0073  1383               	bcf	3,7	;select IRP bank1
  3999  0074  0800               	movf	0,w
  4000  0075  120A  118A  23FE  120A  118A  	fcall	_GPIO_PinWrite
  4001  007A  3001               	movlw	1
  4002  007B  00F8               	movwf	??_KEYPAD_GetKey
  4003  007C  0878               	movf	??_KEYPAD_GetKey,w
  4004  007D  1283               	bcf	3,5	;RP0=0, select bank0
  4005  007E  1303               	bcf	3,6	;RP1=0, select bank0
  4006  007F  07A2               	addwf	KEYPAD_GetKey@i,f
  4007  0080  3004               	movlw	4
  4008  0081  0222               	subwf	KEYPAD_GetKey@i,w
  4009  0082  1C03               	skipc
  4010  0083  286E               	goto	l2868
  4011  0084                     l2874:	
  4012                           
  4013                           ;keypad.c: 267: }
  4014                           ;keypad.c: 269: for (i=0;(i<(4));i++)
  4015  0084  01A2               	clrf	KEYPAD_GetKey@i
  4016  0085  3004               	movlw	4
  4017  0086  0222               	subwf	KEYPAD_GetKey@i,w
  4018  0087  1803               	btfsc	3,0
  4019  0088  28D0               	goto	l2906
  4020  0089                     l2880:	
  4021                           
  4022                           ;keypad.c: 270: {
  4023                           ;keypad.c: 271: GPIO_PinWrite(A_RowsPins_U8[i],0x00u);
  4024  0089  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4025  008A  0822               	movf	KEYPAD_GetKey@i,w
  4026  008B  3EB2               	addlw	(low (_A_RowsPins_U8| 0))& (0+255)
  4027  008C  0084               	movwf	4
  4028  008D  1383               	bcf	3,7	;select IRP bank1
  4029  008E  0800               	movf	0,w
  4030  008F  120A  118A  23FE  120A  118A  	fcall	_GPIO_PinWrite
  4031                           
  4032                           ;keypad.c: 273: for(j=0; (j<(4)); j++)
  4033  0094  1283               	bcf	3,5	;RP0=0, select bank0
  4034  0095  1303               	bcf	3,6	;RP1=0, select bank0
  4035  0096  01A1               	clrf	KEYPAD_GetKey@j
  4036  0097  3004               	movlw	4
  4037  0098  0221               	subwf	KEYPAD_GetKey@j,w
  4038  0099  1803               	btfsc	3,0
  4039  009A  28B7               	goto	l2896
  4040  009B                     l2888:	
  4041                           
  4042                           ;keypad.c: 274: {
  4043                           ;keypad.c: 275: if(GPIO_PinRead(A_ColsPins_U8[j]) == 0)
  4044  009B  0821               	movf	KEYPAD_GetKey@j,w
  4045  009C  3EAE               	addlw	(low (_A_ColsPins_U8| 0))& (0+255)
  4046  009D  0084               	movwf	4
  4047  009E  1383               	bcf	3,7	;select IRP bank1
  4048  009F  0800               	movf	0,w
  4049  00A0  120A  158A  24A1  120A  118A  	fcall	_GPIO_PinRead
  4050  00A5  3A00               	xorlw	0
  4051  00A6  1D03               	skipz
  4052  00A7  28AD               	goto	l2892
  4053                           
  4054                           ;keypad.c: 276: {
  4055                           ;keypad.c: 277: v_KeyPressed_u8 = 1;
  4056  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  4057  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  4058  00AA  01A0               	clrf	KEYPAD_GetKey@v_KeyPressed_u8
  4059  00AB  0AA0               	incf	KEYPAD_GetKey@v_KeyPressed_u8,f
  4060                           
  4061                           ;keypad.c: 278: break;
  4062  00AC  28B7               	goto	l2896
  4063  00AD                     l2892:	
  4064  00AD  3001               	movlw	1
  4065  00AE  00F8               	movwf	??_KEYPAD_GetKey
  4066  00AF  0878               	movf	??_KEYPAD_GetKey,w
  4067  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  4068  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  4069  00B2  07A1               	addwf	KEYPAD_GetKey@j,f
  4070  00B3  3004               	movlw	4
  4071  00B4  0221               	subwf	KEYPAD_GetKey@j,w
  4072  00B5  1C03               	skipc
  4073  00B6  289B               	goto	l2888
  4074  00B7                     l2896:	
  4075                           
  4076                           ;keypad.c: 279: }
  4077                           ;keypad.c: 280: }
  4078                           ;keypad.c: 282: if(v_KeyPressed_u8 ==1)
  4079  00B7  0320               	decf	KEYPAD_GetKey@v_KeyPressed_u8,w
  4080  00B8  1903               	btfsc	3,2
  4081  00B9  28D0               	goto	l2906
  4082                           
  4083                           ;keypad.c: 285: }
  4084                           ;keypad.c: 287: GPIO_PinWrite(A_RowsPins_U8[i],0x01u);
  4085                           
  4086                           ;keypad.c: 283: {
  4087                           ;keypad.c: 284: break;
  4088  00BA  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4089  00BB  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  4090  00BC  0822               	movf	KEYPAD_GetKey@i,w
  4091  00BD  3EB2               	addlw	(low (_A_RowsPins_U8| 0))& (0+255)
  4092  00BE  0084               	movwf	4
  4093  00BF  1383               	bcf	3,7	;select IRP bank1
  4094  00C0  0800               	movf	0,w
  4095  00C1  120A  118A  23FE  120A  118A  	fcall	_GPIO_PinWrite
  4096  00C6  3001               	movlw	1
  4097  00C7  00F8               	movwf	??_KEYPAD_GetKey
  4098  00C8  0878               	movf	??_KEYPAD_GetKey,w
  4099  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  4100  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  4101  00CB  07A2               	addwf	KEYPAD_GetKey@i,f
  4102  00CC  3004               	movlw	4
  4103  00CD  0222               	subwf	KEYPAD_GetKey@i,w
  4104  00CE  1C03               	skipc
  4105  00CF  2889               	goto	l2880
  4106  00D0                     l2906:	
  4107                           
  4108                           ;keypad.c: 288: }
  4109                           ;keypad.c: 290: if(i<(4))
  4110  00D0  3004               	movlw	4
  4111  00D1  0222               	subwf	KEYPAD_GetKey@i,w
  4112  00D2  1803               	skipnc
  4113  00D3  28F3               	goto	l2910
  4114                           
  4115                           ;keypad.c: 291: v_KeyPressed_u8 = A_KeyLookUptable_U8[i][j];
  4116  00D4  0822               	movf	KEYPAD_GetKey@i,w
  4117  00D5  00F8               	movwf	??_KEYPAD_GetKey
  4118  00D6  3001               	movlw	1
  4119  00D7                     u3425:	
  4120  00D7  1003               	clrc
  4121  00D8  0DF8               	rlf	??_KEYPAD_GetKey,f
  4122  00D9  3EFF               	addlw	-1
  4123  00DA  1D03               	skipz
  4124  00DB  28D7               	goto	u3425
  4125  00DC  1003               	clrc
  4126  00DD  0D78               	rlf	??_KEYPAD_GetKey,w
  4127  00DE  3E12               	addlw	low (_A_KeyLookUptable_U8| (0+32768))
  4128  00DF  00F9               	movwf	??_KEYPAD_GetKey+1
  4129  00E0  3088               	movlw	high (_A_KeyLookUptable_U8| (0+32768))
  4130  00E1  1803               	skipnc
  4131  00E2  3E01               	addlw	1
  4132  00E3  00FA               	movwf	??_KEYPAD_GetKey+2
  4133  00E4  0821               	movf	KEYPAD_GetKey@j,w
  4134  00E5  0779               	addwf	??_KEYPAD_GetKey+1,w
  4135  00E6  0084               	movwf	4
  4136  00E7  087A               	movf	??_KEYPAD_GetKey+2,w
  4137  00E8  1803               	skipnc
  4138  00E9  0A7A               	incf	??_KEYPAD_GetKey+2,w
  4139  00EA  00FF               	movwf	127
  4140  00EB  120A  158A  2000  120A  118A  	fcall	stringtab
  4141  00F0  00FB               	movwf	??_KEYPAD_GetKey+3
  4142  00F1  087B               	movf	??_KEYPAD_GetKey+3,w
  4143  00F2  28F6               	goto	L2
  4144  00F3                     l2910:	
  4145                           
  4146                           ;keypad.c: 292: else
  4147                           ;keypad.c: 293: v_KeyPressed_u8 = ('x');
  4148  00F3  3078               	movlw	120
  4149  00F4  00F8               	movwf	??_KEYPAD_GetKey
  4150  00F5  0878               	movf	??_KEYPAD_GetKey,w
  4151  00F6                     L2:	
  4152  00F6  00A0               	movwf	KEYPAD_GetKey@v_KeyPressed_u8
  4153                           
  4154                           ;keypad.c: 296: return v_KeyPressed_u8;
  4155  00F7  0820               	movf	KEYPAD_GetKey@v_KeyPressed_u8,w
  4156  00F8  0008               	return
  4157  00F9                     __end_of_KEYPAD_GetKey:	
  4158                           
  4159                           	psect	text17
  4160  0C41                     __ptext17:	
  4161 ;; *************** function _keypad_WaitForKeyRelease *****************
  4162 ;; Defined at:
  4163 ;;		line 155 in file "../00-libfiles/keypad.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;		None
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;  i               1    7[COMMON] unsigned char 
  4168 ;;  v_keyStatus_    1    6[COMMON] unsigned char 
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  1    wreg      void 
  4171 ;; Registers used:
  4172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4178 ;;      Params:         0       0       0       0       0
  4179 ;;      Locals:         2       0       0       0       0
  4180 ;;      Temps:          1       0       0       0       0
  4181 ;;      Totals:         3       0       0       0       0
  4182 ;;Total ram usage:        3 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:    1
  4185 ;; This function calls:
  4186 ;;		_DELAY_us
  4187 ;;		_GPIO_PinRead
  4188 ;;		_GPIO_PinWrite
  4189 ;; This function is called by:
  4190 ;;		_KEYPAD_GetKey
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           
  4195                           ;psect for function _keypad_WaitForKeyRelease
  4196  0C41                     _keypad_WaitForKeyRelease:	
  4197                           
  4198                           ;keypad.c: 158: uint8_t i,v_keyStatus_u8;
  4199                           ;keypad.c: 160: for (i=0;i<(4);i++)
  4200                           
  4201                           ;incstack = 0
  4202                           ; Regs used in _keypad_WaitForKeyRelease: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4203  0C41  01F7               	clrf	keypad_WaitForKeyRelease@i
  4204  0C42  3004               	movlw	4
  4205  0C43  0277               	subwf	keypad_WaitForKeyRelease@i,w
  4206  0C44  1803               	btfsc	3,0
  4207  0C45  2C59               	goto	l276
  4208  0C46                     l2632:	
  4209                           
  4210                           ;keypad.c: 161: {
  4211                           ;keypad.c: 162: GPIO_PinWrite(A_RowsPins_U8[i],0x00u);
  4212  0C46  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4213  0C47  0877               	movf	keypad_WaitForKeyRelease@i,w
  4214  0C48  3EB2               	addlw	(low (_A_RowsPins_U8| 0))& (0+255)
  4215  0C49  0084               	movwf	4
  4216  0C4A  1383               	bcf	3,7	;select IRP bank1
  4217  0C4B  0800               	movf	0,w
  4218  0C4C  120A  118A  23FE  120A  158A  	fcall	_GPIO_PinWrite
  4219  0C51  3001               	movlw	1
  4220  0C52  00F5               	movwf	??_keypad_WaitForKeyRelease
  4221  0C53  0875               	movf	??_keypad_WaitForKeyRelease,w
  4222  0C54  07F7               	addwf	keypad_WaitForKeyRelease@i,f
  4223  0C55  3004               	movlw	4
  4224  0C56  0277               	subwf	keypad_WaitForKeyRelease@i,w
  4225  0C57  1C03               	skipc
  4226  0C58  2C46               	goto	l2632
  4227  0C59                     l276:	
  4228                           ;keypad.c: 166: {
  4229                           ;keypad.c: 167: do
  4230                           
  4231                           ;keypad.c: 163: }
  4232                           ;keypad.c: 165: do
  4233                           
  4234                           
  4235                           ;keypad.c: 168: {
  4236                           ;keypad.c: 169: v_keyStatus_u8 = 1;
  4237  0C59  01F6               	clrf	keypad_WaitForKeyRelease@v_keyStatus_u8
  4238  0C5A  0AF6               	incf	keypad_WaitForKeyRelease@v_keyStatus_u8,f
  4239                           
  4240                           ;keypad.c: 170: for(i=0; i<(4); i++)
  4241  0C5B  01F7               	clrf	keypad_WaitForKeyRelease@i
  4242  0C5C  3004               	movlw	4
  4243  0C5D  0277               	subwf	keypad_WaitForKeyRelease@i,w
  4244  0C5E  1803               	btfsc	3,0
  4245  0C5F  2C75               	goto	l2650
  4246  0C60                     l2644:	
  4247                           
  4248                           ;keypad.c: 171: {
  4249                           ;keypad.c: 172: v_keyStatus_u8 &= GPIO_PinRead(A_ColsPins_U8[i]);
  4250  0C60  0877               	movf	keypad_WaitForKeyRelease@i,w
  4251  0C61  3EAE               	addlw	(low (_A_ColsPins_U8| 0))& (0+255)
  4252  0C62  0084               	movwf	4
  4253  0C63  1383               	bcf	3,7	;select IRP bank1
  4254  0C64  0800               	movf	0,w
  4255  0C65  120A  158A  24A1  120A  158A  	fcall	_GPIO_PinRead
  4256  0C6A  00F5               	movwf	??_keypad_WaitForKeyRelease
  4257  0C6B  0875               	movf	??_keypad_WaitForKeyRelease,w
  4258  0C6C  05F6               	andwf	keypad_WaitForKeyRelease@v_keyStatus_u8,f
  4259  0C6D  3001               	movlw	1
  4260  0C6E  00F5               	movwf	??_keypad_WaitForKeyRelease
  4261  0C6F  0875               	movf	??_keypad_WaitForKeyRelease,w
  4262  0C70  07F7               	addwf	keypad_WaitForKeyRelease@i,f
  4263  0C71  3004               	movlw	4
  4264  0C72  0277               	subwf	keypad_WaitForKeyRelease@i,w
  4265  0C73  1C03               	skipc
  4266  0C74  2C60               	goto	l2644
  4267  0C75                     l2650:	
  4268                           
  4269                           ;keypad.c: 173: }
  4270                           ;keypad.c: 174: }while(v_keyStatus_u8 == 0);
  4271  0C75  0876               	movf	keypad_WaitForKeyRelease@v_keyStatus_u8,w
  4272  0C76  1903               	btfsc	3,2
  4273  0C77  2C59               	goto	l276
  4274                           
  4275                           ;keypad.c: 176: DELAY_us((10));
  4276  0C78  300A               	movlw	10
  4277  0C79  00F0               	movwf	DELAY_us@us_count
  4278  0C7A  3000               	movlw	0
  4279  0C7B  00F1               	movwf	DELAY_us@us_count+1
  4280  0C7C  160A  118A  22CE  120A  158A  	fcall	_DELAY_us
  4281                           
  4282                           ;keypad.c: 178: v_keyStatus_u8 = 1;
  4283  0C81  01F6               	clrf	keypad_WaitForKeyRelease@v_keyStatus_u8
  4284  0C82  0AF6               	incf	keypad_WaitForKeyRelease@v_keyStatus_u8,f
  4285                           
  4286                           ;keypad.c: 179: for(i=0; i<(4); i++)
  4287  0C83  01F7               	clrf	keypad_WaitForKeyRelease@i
  4288  0C84  3004               	movlw	4
  4289  0C85  0277               	subwf	keypad_WaitForKeyRelease@i,w
  4290  0C86  1803               	btfsc	3,0
  4291  0C87  2C9D               	goto	l2668
  4292  0C88                     l2662:	
  4293                           
  4294                           ;keypad.c: 180: {
  4295                           ;keypad.c: 181: v_keyStatus_u8 &= GPIO_PinRead(A_ColsPins_U8[i]);
  4296  0C88  0877               	movf	keypad_WaitForKeyRelease@i,w
  4297  0C89  3EAE               	addlw	(low (_A_ColsPins_U8| 0))& (0+255)
  4298  0C8A  0084               	movwf	4
  4299  0C8B  1383               	bcf	3,7	;select IRP bank1
  4300  0C8C  0800               	movf	0,w
  4301  0C8D  120A  158A  24A1  120A  158A  	fcall	_GPIO_PinRead
  4302  0C92  00F5               	movwf	??_keypad_WaitForKeyRelease
  4303  0C93  0875               	movf	??_keypad_WaitForKeyRelease,w
  4304  0C94  05F6               	andwf	keypad_WaitForKeyRelease@v_keyStatus_u8,f
  4305  0C95  3001               	movlw	1
  4306  0C96  00F5               	movwf	??_keypad_WaitForKeyRelease
  4307  0C97  0875               	movf	??_keypad_WaitForKeyRelease,w
  4308  0C98  07F7               	addwf	keypad_WaitForKeyRelease@i,f
  4309  0C99  3004               	movlw	4
  4310  0C9A  0277               	subwf	keypad_WaitForKeyRelease@i,w
  4311  0C9B  1C03               	skipc
  4312  0C9C  2C88               	goto	l2662
  4313  0C9D                     l2668:	
  4314                           
  4315                           ;keypad.c: 182: }
  4316                           ;keypad.c: 183: }while(v_keyStatus_u8 == 0);
  4317  0C9D  0876               	movf	keypad_WaitForKeyRelease@v_keyStatus_u8,w
  4318  0C9E  1D03               	btfss	3,2
  4319  0C9F  0008               	return
  4320  0CA0  2C59               	goto	l276
  4321  0CA1                     __end_of_keypad_WaitForKeyRelease:	
  4322                           
  4323                           	psect	text18
  4324  0BE1                     __ptext18:	
  4325 ;; *************** function _keypad_WaitForKeyPress *****************
  4326 ;; Defined at:
  4327 ;;		line 201 in file "../00-libfiles/keypad.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;		None
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  i               1    7[COMMON] unsigned char 
  4332 ;;  v_keyStatus_    1    6[COMMON] unsigned char 
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      void 
  4335 ;; Registers used:
  4336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4342 ;;      Params:         0       0       0       0       0
  4343 ;;      Locals:         2       0       0       0       0
  4344 ;;      Temps:          1       0       0       0       0
  4345 ;;      Totals:         3       0       0       0       0
  4346 ;;Total ram usage:        3 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:    1
  4349 ;; This function calls:
  4350 ;;		_DELAY_us
  4351 ;;		_GPIO_PinRead
  4352 ;;		_GPIO_PinWrite
  4353 ;; This function is called by:
  4354 ;;		_KEYPAD_GetKey
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           
  4359                           ;psect for function _keypad_WaitForKeyPress
  4360  0BE1                     _keypad_WaitForKeyPress:	
  4361                           
  4362                           ;keypad.c: 203: uint8_t i,v_keyStatus_u8;
  4363                           ;keypad.c: 205: for (i=0;i<(4);i++)
  4364                           
  4365                           ;incstack = 0
  4366                           ; Regs used in _keypad_WaitForKeyPress: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4367  0BE1  01F7               	clrf	keypad_WaitForKeyPress@i
  4368  0BE2  3004               	movlw	4
  4369  0BE3  0277               	subwf	keypad_WaitForKeyPress@i,w
  4370  0BE4  1803               	btfsc	3,0
  4371  0BE5  2BF9               	goto	l289
  4372  0BE6                     l2676:	
  4373                           
  4374                           ;keypad.c: 206: {
  4375                           ;keypad.c: 207: GPIO_PinWrite(A_RowsPins_U8[i],0x00u);
  4376  0BE6  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4377  0BE7  0877               	movf	keypad_WaitForKeyPress@i,w
  4378  0BE8  3EB2               	addlw	(low (_A_RowsPins_U8| 0))& (0+255)
  4379  0BE9  0084               	movwf	4
  4380  0BEA  1383               	bcf	3,7	;select IRP bank1
  4381  0BEB  0800               	movf	0,w
  4382  0BEC  120A  118A  23FE  120A  158A  	fcall	_GPIO_PinWrite
  4383  0BF1  3001               	movlw	1
  4384  0BF2  00F5               	movwf	??_keypad_WaitForKeyPress
  4385  0BF3  0875               	movf	??_keypad_WaitForKeyPress,w
  4386  0BF4  07F7               	addwf	keypad_WaitForKeyPress@i,f
  4387  0BF5  3004               	movlw	4
  4388  0BF6  0277               	subwf	keypad_WaitForKeyPress@i,w
  4389  0BF7  1C03               	skipc
  4390  0BF8  2BE6               	goto	l2676
  4391  0BF9                     l289:	
  4392                           ;keypad.c: 211: {
  4393                           ;keypad.c: 212: do
  4394                           
  4395                           ;keypad.c: 208: }
  4396                           ;keypad.c: 210: do
  4397                           
  4398                           
  4399                           ;keypad.c: 213: {
  4400                           ;keypad.c: 214: v_keyStatus_u8 = 1;
  4401  0BF9  01F6               	clrf	keypad_WaitForKeyPress@v_keyStatus_u8
  4402  0BFA  0AF6               	incf	keypad_WaitForKeyPress@v_keyStatus_u8,f
  4403                           
  4404                           ;keypad.c: 215: for(i=0; i<(4); i++)
  4405  0BFB  01F7               	clrf	keypad_WaitForKeyPress@i
  4406  0BFC  3004               	movlw	4
  4407  0BFD  0277               	subwf	keypad_WaitForKeyPress@i,w
  4408  0BFE  1803               	btfsc	3,0
  4409  0BFF  2C15               	goto	l2694
  4410  0C00                     l2688:	
  4411                           
  4412                           ;keypad.c: 216: {
  4413                           ;keypad.c: 217: v_keyStatus_u8 &= GPIO_PinRead(A_ColsPins_U8[i]);
  4414  0C00  0877               	movf	keypad_WaitForKeyPress@i,w
  4415  0C01  3EAE               	addlw	(low (_A_ColsPins_U8| 0))& (0+255)
  4416  0C02  0084               	movwf	4
  4417  0C03  1383               	bcf	3,7	;select IRP bank1
  4418  0C04  0800               	movf	0,w
  4419  0C05  120A  158A  24A1  120A  158A  	fcall	_GPIO_PinRead
  4420  0C0A  00F5               	movwf	??_keypad_WaitForKeyPress
  4421  0C0B  0875               	movf	??_keypad_WaitForKeyPress,w
  4422  0C0C  05F6               	andwf	keypad_WaitForKeyPress@v_keyStatus_u8,f
  4423  0C0D  3001               	movlw	1
  4424  0C0E  00F5               	movwf	??_keypad_WaitForKeyPress
  4425  0C0F  0875               	movf	??_keypad_WaitForKeyPress,w
  4426  0C10  07F7               	addwf	keypad_WaitForKeyPress@i,f
  4427  0C11  3004               	movlw	4
  4428  0C12  0277               	subwf	keypad_WaitForKeyPress@i,w
  4429  0C13  1C03               	skipc
  4430  0C14  2C00               	goto	l2688
  4431  0C15                     l2694:	
  4432                           
  4433                           ;keypad.c: 218: }
  4434                           ;keypad.c: 219: }while(v_keyStatus_u8 != 0);
  4435  0C15  0876               	movf	keypad_WaitForKeyPress@v_keyStatus_u8,w
  4436  0C16  1D03               	btfss	3,2
  4437  0C17  2BF9               	goto	l289
  4438                           
  4439                           ;keypad.c: 222: DELAY_us((10));
  4440  0C18  300A               	movlw	10
  4441  0C19  00F0               	movwf	DELAY_us@us_count
  4442  0C1A  3000               	movlw	0
  4443  0C1B  00F1               	movwf	DELAY_us@us_count+1
  4444  0C1C  160A  118A  22CE  120A  158A  	fcall	_DELAY_us
  4445                           
  4446                           ;keypad.c: 224: v_keyStatus_u8 = 1;
  4447  0C21  01F6               	clrf	keypad_WaitForKeyPress@v_keyStatus_u8
  4448  0C22  0AF6               	incf	keypad_WaitForKeyPress@v_keyStatus_u8,f
  4449                           
  4450                           ;keypad.c: 225: for(i=0; i<(4); i++)
  4451  0C23  01F7               	clrf	keypad_WaitForKeyPress@i
  4452  0C24  3004               	movlw	4
  4453  0C25  0277               	subwf	keypad_WaitForKeyPress@i,w
  4454  0C26  1803               	btfsc	3,0
  4455  0C27  2C3D               	goto	l2712
  4456  0C28                     l2706:	
  4457                           
  4458                           ;keypad.c: 226: {
  4459                           ;keypad.c: 227: v_keyStatus_u8 &= GPIO_PinRead(A_ColsPins_U8[i]);
  4460  0C28  0877               	movf	keypad_WaitForKeyPress@i,w
  4461  0C29  3EAE               	addlw	(low (_A_ColsPins_U8| 0))& (0+255)
  4462  0C2A  0084               	movwf	4
  4463  0C2B  1383               	bcf	3,7	;select IRP bank1
  4464  0C2C  0800               	movf	0,w
  4465  0C2D  120A  158A  24A1  120A  158A  	fcall	_GPIO_PinRead
  4466  0C32  00F5               	movwf	??_keypad_WaitForKeyPress
  4467  0C33  0875               	movf	??_keypad_WaitForKeyPress,w
  4468  0C34  05F6               	andwf	keypad_WaitForKeyPress@v_keyStatus_u8,f
  4469  0C35  3001               	movlw	1
  4470  0C36  00F5               	movwf	??_keypad_WaitForKeyPress
  4471  0C37  0875               	movf	??_keypad_WaitForKeyPress,w
  4472  0C38  07F7               	addwf	keypad_WaitForKeyPress@i,f
  4473  0C39  3004               	movlw	4
  4474  0C3A  0277               	subwf	keypad_WaitForKeyPress@i,w
  4475  0C3B  1C03               	skipc
  4476  0C3C  2C28               	goto	l2706
  4477  0C3D                     l2712:	
  4478                           
  4479                           ;keypad.c: 228: }
  4480                           ;keypad.c: 229: }while(v_keyStatus_u8 != 0);
  4481  0C3D  0876               	movf	keypad_WaitForKeyPress@v_keyStatus_u8,w
  4482  0C3E  1903               	btfsc	3,2
  4483  0C3F  0008               	return
  4484  0C40  2BF9               	goto	l289
  4485  0C41                     __end_of_keypad_WaitForKeyPress:	
  4486                           
  4487                           	psect	text19
  4488  00F9                     __ptext19:	
  4489 ;; *************** function _gpio_test *****************
  4490 ;; Defined at:
  4491 ;;		line 115 in file "main.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;		None
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  i               1   71[BANK0 ] unsigned char 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      void 
  4498 ;; Registers used:
  4499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4505 ;;      Params:         0       0       0       0       0
  4506 ;;      Locals:         0       1       0       0       0
  4507 ;;      Temps:          0       2       0       0       0
  4508 ;;      Totals:         0       3       0       0       0
  4509 ;;Total ram usage:        3 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:    3
  4512 ;; This function calls:
  4513 ;;		_DELAY_ms
  4514 ;;		_UART_Printf
  4515 ;;		_UART_RxChar
  4516 ;; This function is called by:
  4517 ;;		_main
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           
  4522                           ;psect for function _gpio_test
  4523  00F9                     _gpio_test:	
  4524                           
  4525                           ;main.c: 117: unsigned char i;
  4526                           ;main.c: 118: UART_Printf("\n\rConnect any IO Pins to buzzer, relays, leds ");
  4527                           
  4528                           ;incstack = 0
  4529                           ; Regs used in _gpio_test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4530  00F9  3062               	movlw	low (STR_3| (0+32768))
  4531  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  4532  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  4533  00FC  00C3               	movwf	UART_Printf@argList
  4534  00FD  3089               	movlw	high (STR_3| (0+32768))
  4535  00FE  00C4               	movwf	UART_Printf@argList+1
  4536  00FF  120A  118A  25C9  120A  118A  	fcall	_UART_Printf
  4537                           
  4538                           ;main.c: 119: UART_Printf("\n\rMake connections and hit 'k' to test ");
  4539  0104  300D               	movlw	low (STR_4| (0+32768))
  4540  0105  1283               	bcf	3,5	;RP0=0, select bank0
  4541  0106  1303               	bcf	3,6	;RP1=0, select bank0
  4542  0107  00C3               	movwf	UART_Printf@argList
  4543  0108  308A               	movlw	high (STR_4| (0+32768))
  4544  0109  00C4               	movwf	UART_Printf@argList+1
  4545  010A  120A  118A  25C9  120A  118A  	fcall	_UART_Printf
  4546  010F                     l3170:	
  4547                           ;main.c: 120: while(UART_RxChar()!='k');
  4548                           
  4549  010F  160A  118A  228F  120A  118A  	fcall	_UART_RxChar
  4550  0114  3A6B               	xorlw	107
  4551  0115  1D03               	skipz
  4552  0116  290F               	goto	l3170
  4553                           
  4554                           ;main.c: 121: ADCON0 = 0x00;
  4555  0117  1283               	bcf	3,5	;RP0=0, select bank0
  4556  0118  1303               	bcf	3,6	;RP1=0, select bank0
  4557  0119  019F               	clrf	31	;volatile
  4558                           
  4559                           ;main.c: 122: ADCON1 = 0x07;
  4560  011A  3007               	movlw	7
  4561  011B  1683               	bsf	3,5	;RP0=1, select bank1
  4562  011C  1303               	bcf	3,6	;RP1=0, select bank1
  4563  011D  009F               	movwf	31	;volatile
  4564                           
  4565                           ;main.c: 123: TRISA = 0x00u;
  4566  011E  0185               	clrf	5	;volatile
  4567                           
  4568                           ;main.c: 124: TRISB = 0x00u;
  4569  011F  0186               	clrf	6	;volatile
  4570                           
  4571                           ;main.c: 125: TRISC = 0x00u;
  4572  0120  0187               	clrf	7	;volatile
  4573                           
  4574                           ;main.c: 126: TRISD = 0x00u;
  4575  0121  0188               	clrf	8	;volatile
  4576                           
  4577                           ;main.c: 127: TRISE = 0x00u;
  4578  0122  0189               	clrf	9	;volatile
  4579  0123                     l3186:	
  4580                           ;main.c: 128: while(1)
  4581                           
  4582                           
  4583                           ;main.c: 129: {
  4584                           ;main.c: 130: for(i=0;i<2;i++)
  4585  0123  1283               	bcf	3,5	;RP0=0, select bank0
  4586  0124  01E7               	clrf	gpio_test@i
  4587  0125  3002               	movlw	2
  4588  0126  0267               	subwf	gpio_test@i,w
  4589  0127  1803               	btfsc	3,0
  4590  0128  2956               	goto	l662
  4591  0129                     l3192:	
  4592                           
  4593                           ;main.c: 131: {
  4594                           ;main.c: 133: PORTA = 0xff;
  4595  0129  30FF               	movlw	255
  4596  012A  0085               	movwf	5	;volatile
  4597                           
  4598                           ;main.c: 134: PORTB = 0xff;
  4599  012B  30FF               	movlw	255
  4600  012C  0086               	movwf	6	;volatile
  4601                           
  4602                           ;main.c: 135: PORTC = 0xff;
  4603  012D  30FF               	movlw	255
  4604  012E  0087               	movwf	7	;volatile
  4605                           
  4606                           ;main.c: 136: PORTD = 0xff;
  4607  012F  30FF               	movlw	255
  4608  0130  0088               	movwf	8	;volatile
  4609                           
  4610                           ;main.c: 137: PORTE = 0xff;
  4611  0131  30FF               	movlw	255
  4612  0132  0089               	movwf	9	;volatile
  4613                           
  4614                           ;main.c: 138: DELAY_ms(500);
  4615  0133  30F4               	movlw	244
  4616  0134  00F2               	movwf	DELAY_ms@ms_count
  4617  0135  3001               	movlw	1
  4618  0136  00F3               	movwf	DELAY_ms@ms_count+1
  4619  0137  160A  118A  233F  120A  118A  	fcall	_DELAY_ms
  4620                           
  4621                           ;main.c: 141: PORTA = 0x00;
  4622  013C  1283               	bcf	3,5	;RP0=0, select bank0
  4623  013D  1303               	bcf	3,6	;RP1=0, select bank0
  4624  013E  0185               	clrf	5	;volatile
  4625                           
  4626                           ;main.c: 142: PORTB = 0x00;
  4627  013F  0186               	clrf	6	;volatile
  4628                           
  4629                           ;main.c: 143: PORTC = 0x00;
  4630  0140  0187               	clrf	7	;volatile
  4631                           
  4632                           ;main.c: 144: PORTD = 0x00;
  4633  0141  0188               	clrf	8	;volatile
  4634                           
  4635                           ;main.c: 145: PORTE = 0x00;
  4636  0142  0189               	clrf	9	;volatile
  4637                           
  4638                           ;main.c: 146: DELAY_ms(500);
  4639  0143  30F4               	movlw	244
  4640  0144  00F2               	movwf	DELAY_ms@ms_count
  4641  0145  3001               	movlw	1
  4642  0146  00F3               	movwf	DELAY_ms@ms_count+1
  4643  0147  160A  118A  233F  120A  118A  	fcall	_DELAY_ms
  4644  014C  3001               	movlw	1
  4645  014D  1283               	bcf	3,5	;RP0=0, select bank0
  4646  014E  1303               	bcf	3,6	;RP1=0, select bank0
  4647  014F  00E5               	movwf	??_gpio_test
  4648  0150  0865               	movf	??_gpio_test,w
  4649  0151  07E7               	addwf	gpio_test@i,f
  4650  0152  3002               	movlw	2
  4651  0153  0267               	subwf	gpio_test@i,w
  4652  0154  1C03               	skipc
  4653  0155  2929               	goto	l3192
  4654  0156                     l662:	
  4655                           
  4656                           ;main.c: 147: }
  4657                           ;main.c: 149: for(i=1;i;i=i<<1)
  4658  0156  01E7               	clrf	gpio_test@i
  4659  0157  0AE7               	incf	gpio_test@i,f
  4660  0158                     l3218:	
  4661  0158  0867               	movf	gpio_test@i,w
  4662  0159  1903               	btfsc	3,2
  4663  015A  2977               	goto	l3220
  4664                           
  4665                           ;main.c: 150: {
  4666                           ;main.c: 151: PORTA = i;
  4667  015B  0867               	movf	gpio_test@i,w
  4668  015C  0085               	movwf	5	;volatile
  4669                           
  4670                           ;main.c: 152: PORTB = i;
  4671  015D  0867               	movf	gpio_test@i,w
  4672  015E  0086               	movwf	6	;volatile
  4673                           
  4674                           ;main.c: 153: PORTC = i;
  4675  015F  0867               	movf	gpio_test@i,w
  4676  0160  0087               	movwf	7	;volatile
  4677                           
  4678                           ;main.c: 154: PORTD = i;
  4679  0161  0867               	movf	gpio_test@i,w
  4680  0162  0088               	movwf	8	;volatile
  4681                           
  4682                           ;main.c: 155: PORTE = i;
  4683  0163  0867               	movf	gpio_test@i,w
  4684  0164  0089               	movwf	9	;volatile
  4685                           
  4686                           ;main.c: 156: DELAY_ms(100);
  4687  0165  3064               	movlw	100
  4688  0166  00F2               	movwf	DELAY_ms@ms_count
  4689  0167  3000               	movlw	0
  4690  0168  00F3               	movwf	DELAY_ms@ms_count+1
  4691  0169  160A  118A  233F  120A  118A  	fcall	_DELAY_ms
  4692  016E  1283               	bcf	3,5	;RP0=0, select bank0
  4693  016F  1303               	bcf	3,6	;RP1=0, select bank0
  4694  0170  0867               	movf	gpio_test@i,w
  4695  0171  00E5               	movwf	??_gpio_test
  4696  0172  0765               	addwf	??_gpio_test,w
  4697  0173  00E6               	movwf	??_gpio_test+1
  4698  0174  0866               	movf	??_gpio_test+1,w
  4699  0175  00E7               	movwf	gpio_test@i
  4700  0176  2958               	goto	l3218
  4701  0177                     l3220:	
  4702                           
  4703                           ;main.c: 157: }
  4704                           ;main.c: 159: for(i=0x80;i;i=i>>1)
  4705  0177  3080               	movlw	128
  4706  0178  00E5               	movwf	??_gpio_test
  4707  0179  0865               	movf	??_gpio_test,w
  4708  017A                     L3:	
  4709  017A  00E7               	movwf	gpio_test@i
  4710  017B  0867               	movf	gpio_test@i,w
  4711  017C  1903               	btfsc	3,2
  4712  017D  2923               	goto	l3186
  4713                           
  4714                           ;main.c: 160: {
  4715                           ;main.c: 161: PORTA = i;
  4716  017E  0867               	movf	gpio_test@i,w
  4717  017F  0085               	movwf	5	;volatile
  4718                           
  4719                           ;main.c: 162: PORTB = i;
  4720  0180  0867               	movf	gpio_test@i,w
  4721  0181  0086               	movwf	6	;volatile
  4722                           
  4723                           ;main.c: 163: PORTC = i;
  4724  0182  0867               	movf	gpio_test@i,w
  4725  0183  0087               	movwf	7	;volatile
  4726                           
  4727                           ;main.c: 164: PORTD = i;
  4728  0184  0867               	movf	gpio_test@i,w
  4729  0185  0088               	movwf	8	;volatile
  4730                           
  4731                           ;main.c: 165: PORTE = i;
  4732  0186  0867               	movf	gpio_test@i,w
  4733  0187  0089               	movwf	9	;volatile
  4734                           
  4735                           ;main.c: 166: DELAY_ms(100);
  4736  0188  3064               	movlw	100
  4737  0189  00F2               	movwf	DELAY_ms@ms_count
  4738  018A  3000               	movlw	0
  4739  018B  00F3               	movwf	DELAY_ms@ms_count+1
  4740  018C  160A  118A  233F  120A  118A  	fcall	_DELAY_ms
  4741  0191  1283               	bcf	3,5	;RP0=0, select bank0
  4742  0192  1303               	bcf	3,6	;RP1=0, select bank0
  4743  0193  0867               	movf	gpio_test@i,w
  4744  0194  00E5               	movwf	??_gpio_test
  4745  0195  1003               	clrc
  4746  0196  0C65               	rrf	??_gpio_test,w
  4747  0197  00E6               	movwf	??_gpio_test+1
  4748  0198  0866               	movf	??_gpio_test+1,w
  4749  0199  297A               	goto	L3
  4750  019A                     __end_of_gpio_test:	
  4751                           
  4752                           	psect	text20
  4753  0B82                     __ptext20:	
  4754 ;; *************** function _eeprom_test *****************
  4755 ;; Defined at:
  4756 ;;		line 274 in file "main.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;		None
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;  write_char      1   74[BANK0 ] unsigned char 
  4761 ;;  eeprom_addre    1   73[BANK0 ] unsigned char 
  4762 ;;  read_char       1   72[BANK0 ] unsigned char 
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  1    wreg      void 
  4765 ;; Registers used:
  4766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4772 ;;      Params:         0       0       0       0       0
  4773 ;;      Locals:         0       3       0       0       0
  4774 ;;      Temps:          0       3       0       0       0
  4775 ;;      Totals:         0       6       0       0       0
  4776 ;;Total ram usage:        6 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:    3
  4779 ;; This function calls:
  4780 ;;		_EEPROM_ReadByte
  4781 ;;		_EEPROM_WriteByte
  4782 ;;		_UART_Printf
  4783 ;; This function is called by:
  4784 ;;		_main
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           
  4789                           ;psect for function _eeprom_test
  4790  0B82                     _eeprom_test:	
  4791                           
  4792                           ;main.c: 276: unsigned char eeprom_address = 0x00, write_char = 'X', read_char;
  4793                           
  4794                           ;incstack = 0
  4795                           ; Regs used in _eeprom_test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4796  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  4797  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  4798  0B84  01E9               	clrf	eeprom_test@eeprom_address
  4799  0B85  3058               	movlw	88
  4800  0B86  00E5               	movwf	??_eeprom_test
  4801  0B87  0865               	movf	??_eeprom_test,w
  4802  0B88  00EA               	movwf	eeprom_test@write_char
  4803                           
  4804                           ;main.c: 278: for(write_char='A';write_char<='Z';write_char++)
  4805  0B89  3041               	movlw	65
  4806  0B8A  00E5               	movwf	??_eeprom_test
  4807  0B8B  0865               	movf	??_eeprom_test,w
  4808  0B8C  00EA               	movwf	eeprom_test@write_char
  4809  0B8D  305B               	movlw	91
  4810  0B8E  026A               	subwf	eeprom_test@write_char,w
  4811  0B8F  1803               	btfsc	3,0
  4812  0B90  2BE0               	goto	l715
  4813  0B91                     l3324:	
  4814                           
  4815                           ;main.c: 279: {
  4816                           ;main.c: 280: UART_Printf("\n\rEeprom Write: %c    ",write_char);
  4817  0B91  30E7               	movlw	low (STR_18| (0+32768))
  4818  0B92  00C3               	movwf	UART_Printf@argList
  4819  0B93  308A               	movlw	high (STR_18| (0+32768))
  4820  0B94  00C4               	movwf	UART_Printf@argList+1
  4821  0B95  086A               	movf	eeprom_test@write_char,w
  4822  0B96  00E5               	movwf	??_eeprom_test
  4823  0B97  01E6               	clrf	??_eeprom_test+1
  4824  0B98  0865               	movf	??_eeprom_test,w
  4825  0B99  00C5               	movwf	?_UART_Printf+2
  4826  0B9A  0866               	movf	??_eeprom_test+1,w
  4827  0B9B  00C6               	movwf	?_UART_Printf+3
  4828  0B9C  120A  118A  25C9  120A  158A  	fcall	_UART_Printf
  4829                           
  4830                           ;main.c: 281: EEPROM_WriteByte(eeprom_address, write_char);
  4831  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  4832  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  4833  0BA3  0869               	movf	eeprom_test@eeprom_address,w
  4834  0BA4  00E5               	movwf	??_eeprom_test
  4835  0BA5  01E6               	clrf	??_eeprom_test+1
  4836  0BA6  0865               	movf	??_eeprom_test,w
  4837  0BA7  00F3               	movwf	EEPROM_WriteByte@v_eepromAddress_u16
  4838  0BA8  0866               	movf	??_eeprom_test+1,w
  4839  0BA9  00F4               	movwf	EEPROM_WriteByte@v_eepromAddress_u16+1
  4840  0BAA  086A               	movf	eeprom_test@write_char,w
  4841  0BAB  00E7               	movwf	??_eeprom_test+2
  4842  0BAC  0867               	movf	??_eeprom_test+2,w
  4843  0BAD  00F5               	movwf	EEPROM_WriteByte@v_eepromData_u8
  4844  0BAE  160A  118A  22C5  120A  158A  	fcall	_EEPROM_WriteByte
  4845                           
  4846                           ;main.c: 284: read_char = EEPROM_ReadByte(eeprom_address);
  4847  0BB3  1283               	bcf	3,5	;RP0=0, select bank0
  4848  0BB4  1303               	bcf	3,6	;RP1=0, select bank0
  4849  0BB5  0869               	movf	eeprom_test@eeprom_address,w
  4850  0BB6  00E5               	movwf	??_eeprom_test
  4851  0BB7  01E6               	clrf	??_eeprom_test+1
  4852  0BB8  0865               	movf	??_eeprom_test,w
  4853  0BB9  00F0               	movwf	EEPROM_ReadByte@v_eepromAddress_u16
  4854  0BBA  0866               	movf	??_eeprom_test+1,w
  4855  0BBB  00F1               	movwf	EEPROM_ReadByte@v_eepromAddress_u16+1
  4856  0BBC  160A  118A  230A  120A  158A  	fcall	_EEPROM_ReadByte
  4857  0BC1  1283               	bcf	3,5	;RP0=0, select bank0
  4858  0BC2  1303               	bcf	3,6	;RP1=0, select bank0
  4859  0BC3  00E7               	movwf	??_eeprom_test+2
  4860  0BC4  0867               	movf	??_eeprom_test+2,w
  4861  0BC5  00E8               	movwf	eeprom_test@read_char
  4862                           
  4863                           ;main.c: 285: UART_Printf("Eeprom Read: %c",read_char);
  4864  0BC6  3024               	movlw	low (STR_19| (0+32768))
  4865  0BC7  00C3               	movwf	UART_Printf@argList
  4866  0BC8  308B               	movlw	high (STR_19| (0+32768))
  4867  0BC9  00C4               	movwf	UART_Printf@argList+1
  4868  0BCA  0868               	movf	eeprom_test@read_char,w
  4869  0BCB  00E5               	movwf	??_eeprom_test
  4870  0BCC  01E6               	clrf	??_eeprom_test+1
  4871  0BCD  0865               	movf	??_eeprom_test,w
  4872  0BCE  00C5               	movwf	?_UART_Printf+2
  4873  0BCF  0866               	movf	??_eeprom_test+1,w
  4874  0BD0  00C6               	movwf	?_UART_Printf+3
  4875  0BD1  120A  118A  25C9  120A  158A  	fcall	_UART_Printf
  4876  0BD6  3001               	movlw	1
  4877  0BD7  1283               	bcf	3,5	;RP0=0, select bank0
  4878  0BD8  1303               	bcf	3,6	;RP1=0, select bank0
  4879  0BD9  00E5               	movwf	??_eeprom_test
  4880  0BDA  0865               	movf	??_eeprom_test,w
  4881  0BDB  07EA               	addwf	eeprom_test@write_char,f
  4882  0BDC  305B               	movlw	91
  4883  0BDD  026A               	subwf	eeprom_test@write_char,w
  4884  0BDE  1C03               	skipc
  4885  0BDF  2B91               	goto	l3324
  4886  0BE0                     l715:	
  4887                           ;main.c: 286: }
  4888                           ;main.c: 288: while (1);
  4889                           
  4890  0BE0  2BE0               	goto	l715
  4891  0BE1                     __end_of_eeprom_test:	
  4892                           
  4893                           	psect	text21
  4894  12C5                     __ptext21:	
  4895 ;; *************** function _EEPROM_WriteByte *****************
  4896 ;; Defined at:
  4897 ;;		line 60 in file "../00-libfiles/eeprom.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  v_eepromAddr    2    3[COMMON] unsigned int 
  4900 ;;  v_eepromData    1    5[COMMON] unsigned char 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;		None
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      void 
  4905 ;; Registers used:
  4906 ;;		wreg, status,2, status,0, pclath, cstack
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4912 ;;      Params:         3       0       0       0       0
  4913 ;;      Locals:         0       0       0       0       0
  4914 ;;      Temps:          1       0       0       0       0
  4915 ;;      Totals:         4       0       0       0       0
  4916 ;;Total ram usage:        4 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:    1
  4919 ;; This function calls:
  4920 ;;		_eeprom_write
  4921 ;; This function is called by:
  4922 ;;		_eeprom_test
  4923 ;;		_EEPROM_WriteString
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           
  4928                           ;psect for function _EEPROM_WriteByte
  4929  12C5                     _EEPROM_WriteByte:	
  4930                           
  4931                           ;eeprom.c: 62: eeprom_write(v_eepromAddress_u16,v_eepromData_u8);
  4932                           
  4933                           ;incstack = 0
  4934                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  4935  12C5  0875               	movf	EEPROM_WriteByte@v_eepromData_u8,w
  4936  12C6  00F6               	movwf	??_EEPROM_WriteByte
  4937  12C7  0876               	movf	??_EEPROM_WriteByte,w
  4938  12C8  00F0               	movwf	eeprom_write@value
  4939  12C9  0873               	movf	EEPROM_WriteByte@v_eepromAddress_u16,w
  4940  12CA  120A  158A  235C   	fcall	_eeprom_write
  4941  12CD  0008               	return
  4942  12CE                     __end_of_EEPROM_WriteByte:	
  4943                           
  4944                           	psect	text22
  4945  0B5C                     __ptext22:	
  4946 ;; *************** function _eeprom_write *****************
  4947 ;; Defined at:
  4948 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\pic\eewrite.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  addr            1    wreg     unsigned char 
  4951 ;;  value           1    0[COMMON] unsigned char 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  addr            1    2[COMMON] unsigned char 
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      void 
  4956 ;; Registers used:
  4957 ;;		wreg, status,2, status,0
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4963 ;;      Params:         1       0       0       0       0
  4964 ;;      Locals:         1       0       0       0       0
  4965 ;;      Temps:          1       0       0       0       0
  4966 ;;      Totals:         3       0       0       0       0
  4967 ;;Total ram usage:        3 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_EEPROM_WriteByte
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           
  4977                           ;psect for function _eeprom_write
  4978  0B5C                     _eeprom_write:	
  4979                           
  4980                           ;incstack = 0
  4981                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  4982                           ;eeprom_write@addr stored from wreg
  4983  0B5C  00F2               	movwf	eeprom_write@addr
  4984  0B5D                     l752:	
  4985  0B5D  1683               	bsf	3,5	;RP0=1, select bank3
  4986  0B5E  1703               	bsf	3,6	;RP1=1, select bank3
  4987  0B5F  188C               	btfsc	12,1	;volsfr
  4988  0B60  2B5D               	goto	l752
  4989  0B61  0872               	movf	eeprom_write@addr,w
  4990  0B62  1283               	bcf	3,5	;RP0=0, select bank2
  4991  0B63  1703               	bsf	3,6	;RP1=1, select bank2
  4992  0B64  008D               	movwf	13	;volatile
  4993  0B65  0870               	movf	eeprom_write@value,w
  4994  0B66  008C               	movwf	12	;volatile
  4995  0B67  303F               	movlw	63
  4996  0B68  00F1               	movwf	??_eeprom_write
  4997  0B69  0871               	movf	??_eeprom_write,w
  4998  0B6A  1683               	bsf	3,5	;RP0=1, select bank3
  4999  0B6B  1703               	bsf	3,6	;RP1=1, select bank3
  5000  0B6C  058C               	andwf	12,f	;volsfr
  5001  0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  5002  0B6E  1303               	bcf	3,6	;RP1=0, select bank0
  5003  0B6F  1003               	bcf	3,0	;volatile
  5004  0B70  1B8B               	btfsc	11,7	;volatile
  5005  0B71  1403               	bsf	3,0	;volatile
  5006  0B72  138B               	bcf	11,7	;volatile
  5007  0B73  1683               	bsf	3,5	;RP0=1, select bank3
  5008  0B74  1703               	bsf	3,6	;RP1=1, select bank3
  5009  0B75  150C               	bsf	12,2	;volsfr
  5010  0B76  3055               	movlw	85
  5011  0B77  008D               	movwf	13	;volsfr
  5012  0B78  30AA               	movlw	170
  5013  0B79  008D               	movwf	13	;volsfr
  5014  0B7A  148C               	bsf	12,1	;volsfr
  5015  0B7B  110C               	bcf	12,2	;volsfr
  5016  0B7C  1283               	bcf	3,5	;RP0=0, select bank0
  5017  0B7D  1303               	bcf	3,6	;RP1=0, select bank0
  5018  0B7E  1C03               	btfss	3,0	;volatile
  5019  0B7F  0008               	return
  5020  0B80  178B               	bsf	11,7	;volatile
  5021  0B81  0008               	return
  5022  0B82                     __end_of_eeprom_write:	
  5023                           
  5024                           	psect	text23
  5025  130A                     __ptext23:	
  5026 ;; *************** function _EEPROM_ReadByte *****************
  5027 ;; Defined at:
  5028 ;;		line 88 in file "../00-libfiles/eeprom.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;  v_eepromAddr    2    0[COMMON] unsigned int 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;		None
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      unsigned char 
  5035 ;; Registers used:
  5036 ;;		wreg
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5042 ;;      Params:         2       0       0       0       0
  5043 ;;      Locals:         0       0       0       0       0
  5044 ;;      Temps:          0       0       0       0       0
  5045 ;;      Totals:         2       0       0       0       0
  5046 ;;Total ram usage:        2 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; This function calls:
  5049 ;;		Nothing
  5050 ;; This function is called by:
  5051 ;;		_eeprom_test
  5052 ;;		_EEPROM_ReadString
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           
  5057                           ;psect for function _EEPROM_ReadByte
  5058  130A                     _EEPROM_ReadByte:	
  5059  130A                     l59:	
  5060                           ;eeprom.c: 90: while(RD || WR);
  5061                           
  5062                           ;incstack = 0
  5063                           ; Regs used in _EEPROM_ReadByte: [wreg]
  5064                           
  5065  130A  1683               	bsf	3,5	;RP0=1, select bank3
  5066  130B  1703               	bsf	3,6	;RP1=1, select bank3
  5067  130C  180C               	btfsc	12,0	;volsfr
  5068  130D  2B0A               	goto	l59
  5069  130E  188C               	btfsc	12,1	;volsfr
  5070  130F  2B0A               	goto	l59
  5071                           
  5072                           ;eeprom.c: 91: EEADR=v_eepromAddress_u16;
  5073  1310  0870               	movf	EEPROM_ReadByte@v_eepromAddress_u16,w
  5074  1311  1283               	bcf	3,5	;RP0=0, select bank2
  5075  1312  1703               	bsf	3,6	;RP1=1, select bank2
  5076  1313  008D               	movwf	13	;volatile
  5077                           
  5078                           ;eeprom.c: 93: RD = 1;
  5079  1314  1683               	bsf	3,5	;RP0=1, select bank3
  5080  1315  1703               	bsf	3,6	;RP1=1, select bank3
  5081  1316  140C               	bsf	12,0	;volsfr
  5082                           
  5083                           ;eeprom.c: 94: return(EEDATA);
  5084  1317  1283               	bcf	3,5	;RP0=0, select bank2
  5085  1318  1703               	bsf	3,6	;RP1=1, select bank2
  5086  1319  080C               	movf	12,w	;volatile
  5087  131A  0008               	return
  5088  131B                     __end_of_EEPROM_ReadByte:	
  5089                           
  5090                           	psect	text24
  5091  15A4                     __ptext24:	
  5092 ;; *************** function _adc_test *****************
  5093 ;; Defined at:
  5094 ;;		line 294 in file "main.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;		None
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;  pot             2   75[BANK0 ] unsigned int 
  5099 ;;  light           2   73[BANK0 ] unsigned int 
  5100 ;;  temp            2   71[BANK0 ] unsigned int 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      void 
  5103 ;; Registers used:
  5104 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5110 ;;      Params:         0       0       0       0       0
  5111 ;;      Locals:         0       6       0       0       0
  5112 ;;      Temps:          0       2       0       0       0
  5113 ;;      Totals:         0       8       0       0       0
  5114 ;;Total ram usage:        8 bytes
  5115 ;; Hardware stack levels used:    1
  5116 ;; Hardware stack levels required when called:    3
  5117 ;; This function calls:
  5118 ;;		_ADC_GetAdcValue
  5119 ;;		_ADC_Init
  5120 ;;		_UART_Printf
  5121 ;; This function is called by:
  5122 ;;		_main
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           
  5127                           ;psect for function _adc_test
  5128  15A4                     _adc_test:	
  5129                           
  5130                           ;main.c: 296: uint16_t temp,light,pot;
  5131                           ;main.c: 297: ADC_Init();
  5132                           
  5133                           ;incstack = 0
  5134                           ; Regs used in _adc_test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5135  15A4  160A  118A  22A4  160A  118A  	fcall	_ADC_Init
  5136  15A9                     l720:	
  5137                           ;main.c: 299: while(1)
  5138                           
  5139                           
  5140                           ;main.c: 300: {
  5141                           ;main.c: 301: temp = ADC_GetAdcValue(0)/2;
  5142  15A9  3000               	movlw	0
  5143  15AA  160A  118A  23F1  160A  118A  	fcall	_ADC_GetAdcValue
  5144  15AF  0872               	movf	?_ADC_GetAdcValue,w
  5145  15B0  1283               	bcf	3,5	;RP0=0, select bank0
  5146  15B1  1303               	bcf	3,6	;RP1=0, select bank0
  5147  15B2  00E5               	movwf	??_adc_test
  5148  15B3  0873               	movf	?_ADC_GetAdcValue+1,w
  5149  15B4  00E6               	movwf	??_adc_test+1
  5150  15B5  1003               	clrc
  5151  15B6  0CE6               	rrf	??_adc_test+1,f
  5152  15B7  0CE5               	rrf	??_adc_test,f
  5153  15B8  0865               	movf	??_adc_test,w
  5154  15B9  00E7               	movwf	adc_test@temp
  5155  15BA  0866               	movf	??_adc_test+1,w
  5156  15BB  00E8               	movwf	adc_test@temp+1
  5157                           
  5158                           ;main.c: 302: pot = ADC_GetAdcValue(1);
  5159  15BC  3001               	movlw	1
  5160  15BD  160A  118A  23F1  160A  118A  	fcall	_ADC_GetAdcValue
  5161  15C2  0873               	movf	?_ADC_GetAdcValue+1,w
  5162  15C3  1283               	bcf	3,5	;RP0=0, select bank0
  5163  15C4  1303               	bcf	3,6	;RP1=0, select bank0
  5164  15C5  00EC               	movwf	adc_test@pot+1
  5165  15C6  0872               	movf	?_ADC_GetAdcValue,w
  5166  15C7  00EB               	movwf	adc_test@pot
  5167                           
  5168                           ;main.c: 303: light = ADC_GetAdcValue(2);
  5169  15C8  3002               	movlw	2
  5170  15C9  160A  118A  23F1  160A  118A  	fcall	_ADC_GetAdcValue
  5171  15CE  0873               	movf	?_ADC_GetAdcValue+1,w
  5172  15CF  1283               	bcf	3,5	;RP0=0, select bank0
  5173  15D0  1303               	bcf	3,6	;RP1=0, select bank0
  5174  15D1  00EA               	movwf	adc_test@light+1
  5175  15D2  0872               	movf	?_ADC_GetAdcValue,w
  5176  15D3  00E9               	movwf	adc_test@light
  5177                           
  5178                           ;main.c: 304: UART_Printf("\n\rtemp:%3d pot:%4d light:%4d", temp,pot,light);
  5179  15D4  30CA               	movlw	low (STR_20| (0+32768))
  5180  15D5  00C3               	movwf	UART_Printf@argList
  5181  15D6  308A               	movlw	high (STR_20| (0+32768))
  5182  15D7  00C4               	movwf	UART_Printf@argList+1
  5183  15D8  0868               	movf	adc_test@temp+1,w
  5184  15D9  00C6               	movwf	?_UART_Printf+3
  5185  15DA  0867               	movf	adc_test@temp,w
  5186  15DB  00C5               	movwf	?_UART_Printf+2
  5187  15DC  086C               	movf	adc_test@pot+1,w
  5188  15DD  00C8               	movwf	?_UART_Printf+5
  5189  15DE  086B               	movf	adc_test@pot,w
  5190  15DF  00C7               	movwf	?_UART_Printf+4
  5191  15E0  086A               	movf	adc_test@light+1,w
  5192  15E1  00CA               	movwf	?_UART_Printf+7
  5193  15E2  0869               	movf	adc_test@light,w
  5194  15E3  00C9               	movwf	?_UART_Printf+6
  5195  15E4  120A  118A  25C9  160A  118A  	fcall	_UART_Printf
  5196  15E9  2DA9               	goto	l720
  5197  15EA                     __end_of_adc_test:	
  5198                           
  5199                           	psect	text25
  5200  12A4                     __ptext25:	
  5201 ;; *************** function _ADC_Init *****************
  5202 ;; Defined at:
  5203 ;;		line 54 in file "../00-libfiles/adc.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;		None
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;		None
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      void 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5217 ;;      Params:         0       0       0       0       0
  5218 ;;      Locals:         0       0       0       0       0
  5219 ;;      Temps:          0       0       0       0       0
  5220 ;;      Totals:         0       0       0       0       0
  5221 ;;Total ram usage:        0 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; This function calls:
  5224 ;;		Nothing
  5225 ;; This function is called by:
  5226 ;;		_adc_test
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           
  5231                           ;psect for function _ADC_Init
  5232  12A4                     _ADC_Init:	
  5233                           
  5234                           ;adc.c: 56: ADCON0=0x00;
  5235                           
  5236                           ;incstack = 0
  5237                           ; Regs used in _ADC_Init: [wreg+status,2]
  5238  12A4  1283               	bcf	3,5	;RP0=0, select bank0
  5239  12A5  1303               	bcf	3,6	;RP1=0, select bank0
  5240  12A6  019F               	clrf	31	;volatile
  5241                           
  5242                           ;adc.c: 57: ADCON1=0x80;
  5243  12A7  3080               	movlw	128
  5244  12A8  1683               	bsf	3,5	;RP0=1, select bank1
  5245  12A9  1303               	bcf	3,6	;RP1=0, select bank1
  5246  12AA  009F               	movwf	31	;volatile
  5247  12AB  0008               	return
  5248  12AC                     __end_of_ADC_Init:	
  5249                           
  5250                           	psect	text26
  5251  13F1                     __ptext26:	
  5252 ;; *************** function _ADC_GetAdcValue *****************
  5253 ;; Defined at:
  5254 ;;		line 76 in file "../00-libfiles/adc.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;  var_adcChann    1    wreg     unsigned char 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;  var_adcChann    1    5[COMMON] unsigned char 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  2    2[COMMON] unsigned int 
  5261 ;; Registers used:
  5262 ;;		wreg, status,2, status,0, pclath, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5268 ;;      Params:         2       0       0       0       0
  5269 ;;      Locals:         1       0       0       0       0
  5270 ;;      Temps:          1       0       0       0       0
  5271 ;;      Totals:         4       0       0       0       0
  5272 ;;Total ram usage:        4 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    1
  5275 ;; This function calls:
  5276 ;;		_DELAY_us
  5277 ;; This function is called by:
  5278 ;;		_adc_test
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           
  5283                           ;psect for function _ADC_GetAdcValue
  5284  13F1                     _ADC_GetAdcValue:	
  5285                           
  5286                           ;incstack = 0
  5287                           ; Regs used in _ADC_GetAdcValue: [wreg+status,2+status,0+pclath+cstack]
  5288                           ;ADC_GetAdcValue@var_adcChannel_u8 stored from wreg
  5289  13F1  00F5               	movwf	ADC_GetAdcValue@var_adcChannel_u8
  5290                           
  5291                           ;adc.c: 79: ADCON0= (var_adcChannel_u8<<3);
  5292  13F2  0875               	movf	ADC_GetAdcValue@var_adcChannel_u8,w
  5293  13F3  00F4               	movwf	??_ADC_GetAdcValue
  5294  13F4  3002               	movlw	2
  5295  13F5                     u3255:	
  5296  13F5  1003               	clrc
  5297  13F6  0DF4               	rlf	??_ADC_GetAdcValue,f
  5298  13F7  3EFF               	addlw	-1
  5299  13F8  1D03               	skipz
  5300  13F9  2BF5               	goto	u3255
  5301  13FA  1003               	clrc
  5302  13FB  0D74               	rlf	??_ADC_GetAdcValue,w
  5303  13FC  1283               	bcf	3,5	;RP0=0, select bank0
  5304  13FD  1303               	bcf	3,6	;RP1=0, select bank0
  5305  13FE  009F               	movwf	31	;volatile
  5306                           
  5307                           ;adc.c: 80: ADON = 1;
  5308  13FF  141F               	bsf	31,0	;volatile
  5309                           
  5310                           ;adc.c: 81: DELAY_us(10);
  5311  1400  300A               	movlw	10
  5312  1401  00F0               	movwf	DELAY_us@us_count
  5313  1402  3000               	movlw	0
  5314  1403  00F1               	movwf	DELAY_us@us_count+1
  5315  1404  160A  118A  22CE  160A  118A  	fcall	_DELAY_us
  5316                           
  5317                           ;adc.c: 83: GO=1;
  5318  1409  1283               	bcf	3,5	;RP0=0, select bank0
  5319  140A  1303               	bcf	3,6	;RP1=0, select bank0
  5320  140B  151F               	bsf	31,2	;volatile
  5321  140C                     l22:	
  5322                           ;adc.c: 84: while(GO_DONE==1);
  5323                           
  5324  140C  191F               	btfsc	31,2	;volatile
  5325  140D  2C0C               	goto	l22
  5326                           
  5327                           ;adc.c: 87: return((ADRESH<<8) + ADRESL);
  5328  140E  081E               	movf	30,w	;volatile
  5329  140F  00F3               	movwf	?_ADC_GetAdcValue+1
  5330  1410  1683               	bsf	3,5	;RP0=1, select bank1
  5331  1411  1303               	bcf	3,6	;RP1=0, select bank1
  5332  1412  081E               	movf	30,w	;volatile
  5333  1413  00F2               	movwf	?_ADC_GetAdcValue
  5334  1414  0008               	return
  5335  1415                     __end_of_ADC_GetAdcValue:	
  5336                           
  5337                           	psect	text27
  5338  137C                     __ptext27:	
  5339 ;; *************** function _UART_Init *****************
  5340 ;; Defined at:
  5341 ;;		line 66 in file "../00-libfiles/uart.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;  v_baudRate_u    4   10[BANK0 ] unsigned long 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;		None
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  1    wreg      void 
  5348 ;; Registers used:
  5349 ;;		wreg, status,2, status,0, pclath, cstack
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5355 ;;      Params:         0       4       0       0       0
  5356 ;;      Locals:         0       0       0       0       0
  5357 ;;      Temps:          0       0       0       0       0
  5358 ;;      Totals:         0       4       0       0       0
  5359 ;;Total ram usage:        4 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; Hardware stack levels required when called:    2
  5362 ;; This function calls:
  5363 ;;		_UART_SetBaudRate
  5364 ;; This function is called by:
  5365 ;;		_main
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           
  5370                           ;psect for function _UART_Init
  5371  137C                     _UART_Init:	
  5372                           
  5373                           ;uart.c: 68: TRISC=0x80;
  5374                           
  5375                           ;incstack = 0
  5376                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  5377  137C  3080               	movlw	128
  5378  137D  1683               	bsf	3,5	;RP0=1, select bank1
  5379  137E  1303               	bcf	3,6	;RP1=0, select bank1
  5380  137F  0087               	movwf	7	;volatile
  5381                           
  5382                           ;uart.c: 69: TXSTA=0x20;
  5383  1380  3020               	movlw	32
  5384  1381  0098               	movwf	24	;volatile
  5385                           
  5386                           ;uart.c: 70: RCSTA=0x90;
  5387  1382  3090               	movlw	144
  5388  1383  1283               	bcf	3,5	;RP0=0, select bank0
  5389  1384  1303               	bcf	3,6	;RP1=0, select bank0
  5390  1385  0098               	movwf	24	;volatile
  5391                           
  5392                           ;uart.c: 71: UART_SetBaudRate(v_baudRate_u32);
  5393  1386  082D               	movf	UART_Init@v_baudRate_u32+3,w
  5394  1387  00A3               	movwf	UART_SetBaudRate@v_baudRate_u32+3
  5395  1388  082C               	movf	UART_Init@v_baudRate_u32+2,w
  5396  1389  00A2               	movwf	UART_SetBaudRate@v_baudRate_u32+2
  5397  138A  082B               	movf	UART_Init@v_baudRate_u32+1,w
  5398  138B  00A1               	movwf	UART_SetBaudRate@v_baudRate_u32+1
  5399  138C  082A               	movf	UART_Init@v_baudRate_u32,w
  5400  138D  00A0               	movwf	UART_SetBaudRate@v_baudRate_u32
  5401  138E  160A  118A  2639   	fcall	_UART_SetBaudRate
  5402  1391  0008               	return
  5403  1392                     __end_of_UART_Init:	
  5404                           
  5405                           	psect	text28
  5406  1639                     __ptext28:	
  5407 ;; *************** function _UART_SetBaudRate *****************
  5408 ;; Defined at:
  5409 ;;		line 91 in file "../00-libfiles/uart.c"
  5410 ;; Parameters:    Size  Location     Type
  5411 ;;  v_baudRate_u    4    0[BANK0 ] unsigned long 
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;  RegValue        1    9[BANK0 ] unsigned char 
  5414 ;; Return value:  Size  Location     Type
  5415 ;;                  1    wreg      void 
  5416 ;; Registers used:
  5417 ;;		wreg, status,2, status,0, pclath, cstack
  5418 ;; Tracked objects:
  5419 ;;		On entry : 0/0
  5420 ;;		On exit  : 0/0
  5421 ;;		Unchanged: 0/0
  5422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5423 ;;      Params:         0       4       0       0       0
  5424 ;;      Locals:         0       1       0       0       0
  5425 ;;      Temps:          0       5       0       0       0
  5426 ;;      Totals:         0      10       0       0       0
  5427 ;;Total ram usage:       10 bytes
  5428 ;; Hardware stack levels used:    1
  5429 ;; Hardware stack levels required when called:    1
  5430 ;; This function calls:
  5431 ;;		___lldiv
  5432 ;; This function is called by:
  5433 ;;		_UART_Init
  5434 ;; This function uses a non-reentrant model
  5435 ;;
  5436                           
  5437                           
  5438                           ;psect for function _UART_SetBaudRate
  5439  1639                     _UART_SetBaudRate:	
  5440                           
  5441                           ;uart.c: 93: uint8_t RegValue;
  5442                           ;uart.c: 95: if((v_baudRate_u32 >= 2400) && (v_baudRate_u32<=115200UL))
  5443                           
  5444                           ;incstack = 0
  5445                           ; Regs used in _UART_SetBaudRate: [wreg+status,2+status,0+pclath+cstack]
  5446  1639  1283               	bcf	3,5	;RP0=0, select bank0
  5447  163A  1303               	bcf	3,6	;RP1=0, select bank0
  5448  163B  0823               	movf	UART_SetBaudRate@v_baudRate_u32+3,w
  5449  163C  1D03               	btfss	3,2
  5450  163D  2E4B               	goto	l3030
  5451  163E  0822               	movf	UART_SetBaudRate@v_baudRate_u32+2,w
  5452  163F  1D03               	btfss	3,2
  5453  1640  2E4B               	goto	l3030
  5454  1641  3009               	movlw	9
  5455  1642  0221               	subwf	UART_SetBaudRate@v_baudRate_u32+1,w
  5456  1643  1D03               	skipz
  5457  1644  2E49               	goto	u3513
  5458  1645  3060               	movlw	96
  5459  1646  0220               	subwf	UART_SetBaudRate@v_baudRate_u32,w
  5460  1647  1D03               	skipz
  5461  1648  2E49               	goto	u3513
  5462  1649                     u3513:	
  5463  1649  1C03               	btfss	3,0
  5464  164A  2E89               	goto	l3034
  5465  164B                     l3030:	
  5466  164B  0823               	movf	UART_SetBaudRate@v_baudRate_u32+3,w
  5467  164C  1D03               	btfss	3,2
  5468  164D  2E89               	goto	l3034
  5469  164E  3001               	movlw	1
  5470  164F  0222               	subwf	UART_SetBaudRate@v_baudRate_u32+2,w
  5471  1650  1D03               	skipz
  5472  1651  2E5A               	goto	u3523
  5473  1652  30C2               	movlw	194
  5474  1653  0221               	subwf	UART_SetBaudRate@v_baudRate_u32+1,w
  5475  1654  1D03               	skipz
  5476  1655  2E5A               	goto	u3523
  5477  1656  3001               	movlw	1
  5478  1657  0220               	subwf	UART_SetBaudRate@v_baudRate_u32,w
  5479  1658  1D03               	skipz
  5480  1659  2E5A               	goto	u3523
  5481  165A                     u3523:	
  5482  165A  1803               	btfsc	3,0
  5483  165B  2E89               	goto	l3034
  5484                           
  5485                           ;uart.c: 96: {
  5486                           ;uart.c: 99: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)v_baudRate_u32))
      +                           - 1);
  5487  165C  0820               	movf	UART_SetBaudRate@v_baudRate_u32,w
  5488  165D  00A4               	movwf	??_UART_SetBaudRate
  5489  165E  0821               	movf	UART_SetBaudRate@v_baudRate_u32+1,w
  5490  165F  00A5               	movwf	??_UART_SetBaudRate+1
  5491  1660  0822               	movf	UART_SetBaudRate@v_baudRate_u32+2,w
  5492  1661  00A6               	movwf	??_UART_SetBaudRate+2
  5493  1662  0823               	movf	UART_SetBaudRate@v_baudRate_u32+3,w
  5494  1663  00A7               	movwf	??_UART_SetBaudRate+3
  5495  1664  3006               	movlw	6
  5496  1665                     u3535:	
  5497  1665  1003               	clrc
  5498  1666  0DA4               	rlf	??_UART_SetBaudRate,f
  5499  1667  0DA5               	rlf	??_UART_SetBaudRate+1,f
  5500  1668  0DA6               	rlf	??_UART_SetBaudRate+2,f
  5501  1669  0DA7               	rlf	??_UART_SetBaudRate+3,f
  5502  166A  3EFF               	addlw	-1
  5503  166B  1D03               	skipz
  5504  166C  2E65               	goto	u3535
  5505  166D  0827               	movf	??_UART_SetBaudRate+3,w
  5506  166E  00F3               	movwf	___lldiv@divisor+3
  5507  166F  0826               	movf	??_UART_SetBaudRate+2,w
  5508  1670  00F2               	movwf	___lldiv@divisor+2
  5509  1671  0825               	movf	??_UART_SetBaudRate+1,w
  5510  1672  00F1               	movwf	___lldiv@divisor+1
  5511  1673  0824               	movf	??_UART_SetBaudRate,w
  5512  1674  00F0               	movwf	___lldiv@divisor
  5513  1675  3001               	movlw	1
  5514  1676  00F7               	movwf	___lldiv@dividend+3
  5515  1677  3031               	movlw	49
  5516  1678  00F6               	movwf	___lldiv@dividend+2
  5517  1679  302D               	movlw	45
  5518  167A  00F5               	movwf	___lldiv@dividend+1
  5519  167B  3000               	movlw	0
  5520  167C  00F4               	movwf	___lldiv@dividend
  5521  167D  160A  118A  27A2  160A  118A  	fcall	___lldiv
  5522  1682  0870               	movf	?___lldiv,w
  5523  1683  3EFF               	addlw	255
  5524  1684  1283               	bcf	3,5	;RP0=0, select bank0
  5525  1685  1303               	bcf	3,6	;RP1=0, select bank0
  5526  1686  00A8               	movwf	??_UART_SetBaudRate+4
  5527  1687  0828               	movf	??_UART_SetBaudRate+4,w
  5528  1688  2E8C               	goto	L4
  5529  1689                     l3034:	
  5530                           ;uart.c: 100: }
  5531                           
  5532                           
  5533                           ;uart.c: 101: else
  5534                           ;uart.c: 102: {
  5535                           ;uart.c: 104: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)9600)) - 1);
  5536  1689  301F               	movlw	31
  5537  168A  00A4               	movwf	??_UART_SetBaudRate
  5538  168B  0824               	movf	??_UART_SetBaudRate,w
  5539  168C                     L4:	
  5540  168C  00A9               	movwf	UART_SetBaudRate@RegValue
  5541                           
  5542                           ;uart.c: 105: }
  5543                           ;uart.c: 107: SPBRG = RegValue;
  5544  168D  0829               	movf	UART_SetBaudRate@RegValue,w
  5545  168E  1683               	bsf	3,5	;RP0=1, select bank1
  5546  168F  1303               	bcf	3,6	;RP1=0, select bank1
  5547  1690  0099               	movwf	25	;volatile
  5548  1691  0008               	return
  5549  1692                     __end_of_UART_SetBaudRate:	
  5550                           
  5551                           	psect	text29
  5552  0E03                     __ptext29:	
  5553 ;; *************** function _LCD_8bit_test *****************
  5554 ;; Defined at:
  5555 ;;		line 175 in file "main.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;		None
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;		None
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  1    wreg      void 
  5562 ;; Registers used:
  5563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5569 ;;      Params:         0       0       0       0       0
  5570 ;;      Locals:         0       0       0       0       0
  5571 ;;      Temps:          0      10       0       0       0
  5572 ;;      Totals:         0      10       0       0       0
  5573 ;;Total ram usage:       10 bytes
  5574 ;; Hardware stack levels used:    1
  5575 ;; Hardware stack levels required when called:    7
  5576 ;; This function calls:
  5577 ;;		_DELAY_ms
  5578 ;;		_LCD_DisplayString
  5579 ;;		_LCD_Init
  5580 ;;		_LCD_SetUp
  5581 ;;		_UART_Printf
  5582 ;;		_UART_RxChar
  5583 ;;		_UART_TxString
  5584 ;; This function is called by:
  5585 ;;		_main
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589                           
  5590                           ;psect for function _LCD_8bit_test
  5591  0E03                     _LCD_8bit_test:	
  5592                           
  5593                           ;main.c: 177: UART_TxString("\n\r LCD DataBus: PORTD   RS-PB.0 RW-PB.1 EN-PB.2 ");
  5594                           
  5595                           ;incstack = 0
  5596                           ; Regs used in _LCD_8bit_test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5597  0E03  3031               	movlw	low (STR_5| (0+32768))
  5598  0E04  00F1               	movwf	UART_TxString@ptr_string
  5599  0E05  3089               	movlw	high (STR_5| (0+32768))
  5600  0E06  00F2               	movwf	UART_TxString@ptr_string+1
  5601  0E07  160A  118A  243A  120A  158A  	fcall	_UART_TxString
  5602                           
  5603                           ;main.c: 178: UART_Printf("\n\r Make connections and hit 'k' to test ");
  5604  0E0C  30E4               	movlw	low (STR_6| (0+32768))
  5605  0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  5606  0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  5607  0E0F  00C3               	movwf	UART_Printf@argList
  5608  0E10  3089               	movlw	high (STR_6| (0+32768))
  5609  0E11  00C4               	movwf	UART_Printf@argList+1
  5610  0E12  120A  118A  25C9  120A  158A  	fcall	_UART_Printf
  5611  0E17                     l3232:	
  5612                           ;main.c: 179: while(UART_RxChar()!='k');
  5613                           
  5614  0E17  160A  118A  228F  120A  158A  	fcall	_UART_RxChar
  5615  0E1C  3A6B               	xorlw	107
  5616  0E1D  1D03               	skipz
  5617  0E1E  2E17               	goto	l3232
  5618                           
  5619                           ;main.c: 180: LCD_SetUp(PB_0,PB_1,PB_2,PD_0,PD_1,PD_2,PD_3,PD_4,PD_5,PD_6,PD_7);
  5620  0E1F  3009               	movlw	9
  5621  0E20  1283               	bcf	3,5	;RP0=0, select bank0
  5622  0E21  1303               	bcf	3,6	;RP1=0, select bank0
  5623  0E22  00E5               	movwf	??_LCD_8bit_test
  5624  0E23  0865               	movf	??_LCD_8bit_test,w
  5625  0E24  00A0               	movwf	LCD_SetUp@RW
  5626  0E25  300A               	movlw	10
  5627  0E26  00E6               	movwf	??_LCD_8bit_test+1
  5628  0E27  0866               	movf	??_LCD_8bit_test+1,w
  5629  0E28  00A1               	movwf	LCD_SetUp@EN
  5630  0E29  3018               	movlw	24
  5631  0E2A  00E7               	movwf	??_LCD_8bit_test+2
  5632  0E2B  0867               	movf	??_LCD_8bit_test+2,w
  5633  0E2C  00A2               	movwf	LCD_SetUp@D0
  5634  0E2D  3019               	movlw	25
  5635  0E2E  00E8               	movwf	??_LCD_8bit_test+3
  5636  0E2F  0868               	movf	??_LCD_8bit_test+3,w
  5637  0E30  00A3               	movwf	LCD_SetUp@D1
  5638  0E31  301A               	movlw	26
  5639  0E32  00E9               	movwf	??_LCD_8bit_test+4
  5640  0E33  0869               	movf	??_LCD_8bit_test+4,w
  5641  0E34  00A4               	movwf	LCD_SetUp@D2
  5642  0E35  301B               	movlw	27
  5643  0E36  00EA               	movwf	??_LCD_8bit_test+5
  5644  0E37  086A               	movf	??_LCD_8bit_test+5,w
  5645  0E38  00A5               	movwf	LCD_SetUp@D3
  5646  0E39  301C               	movlw	28
  5647  0E3A  00EB               	movwf	??_LCD_8bit_test+6
  5648  0E3B  086B               	movf	??_LCD_8bit_test+6,w
  5649  0E3C  00A6               	movwf	LCD_SetUp@D4
  5650  0E3D  301D               	movlw	29
  5651  0E3E  00EC               	movwf	??_LCD_8bit_test+7
  5652  0E3F  086C               	movf	??_LCD_8bit_test+7,w
  5653  0E40  00A7               	movwf	LCD_SetUp@D5
  5654  0E41  301E               	movlw	30
  5655  0E42  00ED               	movwf	??_LCD_8bit_test+8
  5656  0E43  086D               	movf	??_LCD_8bit_test+8,w
  5657  0E44  00A8               	movwf	LCD_SetUp@D6
  5658  0E45  301F               	movlw	31
  5659  0E46  00EE               	movwf	??_LCD_8bit_test+9
  5660  0E47  086E               	movf	??_LCD_8bit_test+9,w
  5661  0E48  00A9               	movwf	LCD_SetUp@D7
  5662  0E49  3008               	movlw	8
  5663  0E4A  120A  118A  2254  120A  158A  	fcall	_LCD_SetUp
  5664                           
  5665                           ;main.c: 181: LCD_Init(2,16);
  5666  0E4F  3010               	movlw	16
  5667  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  5668  0E51  1303               	bcf	3,6	;RP1=0, select bank0
  5669  0E52  00E5               	movwf	??_LCD_8bit_test
  5670  0E53  0865               	movf	??_LCD_8bit_test,w
  5671  0E54  00FC               	movwf	LCD_Init@v_MaxCharsPerLine_u8
  5672  0E55  3002               	movlw	2
  5673  0E56  120A  118A  2009  120A  158A  	fcall	_LCD_Init
  5674                           
  5675                           ;main.c: 182: DELAY_ms(100);
  5676  0E5B  3064               	movlw	100
  5677  0E5C  00F2               	movwf	DELAY_ms@ms_count
  5678  0E5D  3000               	movlw	0
  5679  0E5E  00F3               	movwf	DELAY_ms@ms_count+1
  5680  0E5F  160A  118A  233F  120A  158A  	fcall	_DELAY_ms
  5681                           
  5682                           ;main.c: 183: LCD_DisplayString("Explore Embedded");
  5683  0E64  3013               	movlw	low (STR_7| (0+32768))
  5684  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  5685  0E66  1303               	bcf	3,6	;RP1=0, select bank0
  5686  0E67  00A0               	movwf	LCD_DisplayString@ptr_stringPointer_u8
  5687  0E68  308B               	movlw	high (STR_7| (0+32768))
  5688  0E69  00A1               	movwf	LCD_DisplayString@ptr_stringPointer_u8+1
  5689  0E6A  160A  118A  2415  120A  158A  	fcall	_LCD_DisplayString
  5690                           
  5691                           ;main.c: 184: LCD_DisplayString("Lcd 8-bit Mode");
  5692  0E6F  3043               	movlw	low (STR_8| (0+32768))
  5693  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  5694  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  5695  0E72  00A0               	movwf	LCD_DisplayString@ptr_stringPointer_u8
  5696  0E73  308B               	movlw	high (STR_8| (0+32768))
  5697  0E74  00A1               	movwf	LCD_DisplayString@ptr_stringPointer_u8+1
  5698  0E75  160A  118A  2415  120A  158A  	fcall	_LCD_DisplayString
  5699  0E7A                     l677:	
  5700                           ;main.c: 185: while(1);
  5701                           
  5702  0E7A  2E7A               	goto	l677
  5703  0E7B                     __end_of_LCD_8bit_test:	
  5704                           
  5705                           	psect	text30
  5706  0D8B                     __ptext30:	
  5707 ;; *************** function _LCD_4bit_test *****************
  5708 ;; Defined at:
  5709 ;;		line 190 in file "main.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;		None
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;		None
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  1    wreg      void 
  5716 ;; Registers used:
  5717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5723 ;;      Params:         0       0       0       0       0
  5724 ;;      Locals:         0       0       0       0       0
  5725 ;;      Temps:          0      10       0       0       0
  5726 ;;      Totals:         0      10       0       0       0
  5727 ;;Total ram usage:       10 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:    7
  5730 ;; This function calls:
  5731 ;;		_DELAY_ms
  5732 ;;		_LCD_DisplayString
  5733 ;;		_LCD_Init
  5734 ;;		_LCD_SetUp
  5735 ;;		_UART_Printf
  5736 ;;		_UART_RxChar
  5737 ;;		_UART_TxString
  5738 ;; This function is called by:
  5739 ;;		_main
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           
  5744                           ;psect for function _LCD_4bit_test
  5745  0D8B                     _LCD_4bit_test:	
  5746                           
  5747                           ;main.c: 192: UART_TxString("\n\r LCD DataBus:(PD4-PD7)  RS-PB.0  RW-PB.1  EN-PB.2 ");
  5748                           
  5749                           ;incstack = 0
  5750                           ; Regs used in _LCD_4bit_test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5751  0D8B  30FC               	movlw	low (STR_9| (0+32768))
  5752  0D8C  00F1               	movwf	UART_TxString@ptr_string
  5753  0D8D  3088               	movlw	high (STR_9| (0+32768))
  5754  0D8E  00F2               	movwf	UART_TxString@ptr_string+1
  5755  0D8F  160A  118A  243A  120A  158A  	fcall	_UART_TxString
  5756                           
  5757                           ;main.c: 193: UART_Printf("\n\r Make connections and hit 'k' to test ");
  5758  0D94  30E4               	movlw	low (STR_6| (0+32768))
  5759  0D95  1283               	bcf	3,5	;RP0=0, select bank0
  5760  0D96  1303               	bcf	3,6	;RP1=0, select bank0
  5761  0D97  00C3               	movwf	UART_Printf@argList
  5762  0D98  3089               	movlw	high (STR_6| (0+32768))
  5763  0D99  00C4               	movwf	UART_Printf@argList+1
  5764  0D9A  120A  118A  25C9  120A  158A  	fcall	_UART_Printf
  5765  0D9F                     l3244:	
  5766                           ;main.c: 194: while(UART_RxChar()!='k');
  5767                           
  5768  0D9F  160A  118A  228F  120A  158A  	fcall	_UART_RxChar
  5769  0DA4  3A6B               	xorlw	107
  5770  0DA5  1D03               	skipz
  5771  0DA6  2D9F               	goto	l3244
  5772                           
  5773                           ;main.c: 195: LCD_SetUp(PB_0,PB_1,PB_2,P_NC,P_NC,P_NC,P_NC,PD_4,PD_5,PD_6,PD_7);
  5774  0DA7  3009               	movlw	9
  5775  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  5776  0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  5777  0DAA  00E5               	movwf	??_LCD_4bit_test
  5778  0DAB  0865               	movf	??_LCD_4bit_test,w
  5779  0DAC  00A0               	movwf	LCD_SetUp@RW
  5780  0DAD  300A               	movlw	10
  5781  0DAE  00E6               	movwf	??_LCD_4bit_test+1
  5782  0DAF  0866               	movf	??_LCD_4bit_test+1,w
  5783  0DB0  00A1               	movwf	LCD_SetUp@EN
  5784  0DB1  30FF               	movlw	255
  5785  0DB2  00E7               	movwf	??_LCD_4bit_test+2
  5786  0DB3  0867               	movf	??_LCD_4bit_test+2,w
  5787  0DB4  00A2               	movwf	LCD_SetUp@D0
  5788  0DB5  30FF               	movlw	255
  5789  0DB6  00E8               	movwf	??_LCD_4bit_test+3
  5790  0DB7  0868               	movf	??_LCD_4bit_test+3,w
  5791  0DB8  00A3               	movwf	LCD_SetUp@D1
  5792  0DB9  30FF               	movlw	255
  5793  0DBA  00E9               	movwf	??_LCD_4bit_test+4
  5794  0DBB  0869               	movf	??_LCD_4bit_test+4,w
  5795  0DBC  00A4               	movwf	LCD_SetUp@D2
  5796  0DBD  30FF               	movlw	255
  5797  0DBE  00EA               	movwf	??_LCD_4bit_test+5
  5798  0DBF  086A               	movf	??_LCD_4bit_test+5,w
  5799  0DC0  00A5               	movwf	LCD_SetUp@D3
  5800  0DC1  301C               	movlw	28
  5801  0DC2  00EB               	movwf	??_LCD_4bit_test+6
  5802  0DC3  086B               	movf	??_LCD_4bit_test+6,w
  5803  0DC4  00A6               	movwf	LCD_SetUp@D4
  5804  0DC5  301D               	movlw	29
  5805  0DC6  00EC               	movwf	??_LCD_4bit_test+7
  5806  0DC7  086C               	movf	??_LCD_4bit_test+7,w
  5807  0DC8  00A7               	movwf	LCD_SetUp@D5
  5808  0DC9  301E               	movlw	30
  5809  0DCA  00ED               	movwf	??_LCD_4bit_test+8
  5810  0DCB  086D               	movf	??_LCD_4bit_test+8,w
  5811  0DCC  00A8               	movwf	LCD_SetUp@D6
  5812  0DCD  301F               	movlw	31
  5813  0DCE  00EE               	movwf	??_LCD_4bit_test+9
  5814  0DCF  086E               	movf	??_LCD_4bit_test+9,w
  5815  0DD0  00A9               	movwf	LCD_SetUp@D7
  5816  0DD1  3008               	movlw	8
  5817  0DD2  120A  118A  2254  120A  158A  	fcall	_LCD_SetUp
  5818                           
  5819                           ;main.c: 196: LCD_Init(2,16);
  5820  0DD7  3010               	movlw	16
  5821  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  5822  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  5823  0DDA  00E5               	movwf	??_LCD_4bit_test
  5824  0DDB  0865               	movf	??_LCD_4bit_test,w
  5825  0DDC  00FC               	movwf	LCD_Init@v_MaxCharsPerLine_u8
  5826  0DDD  3002               	movlw	2
  5827  0DDE  120A  118A  2009  120A  158A  	fcall	_LCD_Init
  5828                           
  5829                           ;main.c: 197: DELAY_ms(100);
  5830  0DE3  3064               	movlw	100
  5831  0DE4  00F2               	movwf	DELAY_ms@ms_count
  5832  0DE5  3000               	movlw	0
  5833  0DE6  00F3               	movwf	DELAY_ms@ms_count+1
  5834  0DE7  160A  118A  233F  120A  158A  	fcall	_DELAY_ms
  5835                           
  5836                           ;main.c: 198: LCD_DisplayString("Explore Embedded");
  5837  0DEC  3013               	movlw	low (STR_7| (0+32768))
  5838  0DED  1283               	bcf	3,5	;RP0=0, select bank0
  5839  0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  5840  0DEF  00A0               	movwf	LCD_DisplayString@ptr_stringPointer_u8
  5841  0DF0  308B               	movlw	high (STR_7| (0+32768))
  5842  0DF1  00A1               	movwf	LCD_DisplayString@ptr_stringPointer_u8+1
  5843  0DF2  160A  118A  2415  120A  158A  	fcall	_LCD_DisplayString
  5844                           
  5845                           ;main.c: 199: LCD_DisplayString("Lcd 4-bit Mode");
  5846  0DF7  3034               	movlw	low (STR_12| (0+32768))
  5847  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  5848  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  5849  0DFA  00A0               	movwf	LCD_DisplayString@ptr_stringPointer_u8
  5850  0DFB  308B               	movlw	high (STR_12| (0+32768))
  5851  0DFC  00A1               	movwf	LCD_DisplayString@ptr_stringPointer_u8+1
  5852  0DFD  160A  118A  2415  120A  158A  	fcall	_LCD_DisplayString
  5853  0E02                     l686:	
  5854                           ;main.c: 200: while(1);
  5855                           
  5856  0E02  2E02               	goto	l686
  5857  0E03                     __end_of_LCD_4bit_test:	
  5858                           
  5859                           	psect	text31
  5860  128F                     __ptext31:	
  5861 ;; *************** function _UART_RxChar *****************
  5862 ;; Defined at:
  5863 ;;		line 123 in file "../00-libfiles/uart.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;		None
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;		None
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  1    wreg      unsigned char 
  5870 ;; Registers used:
  5871 ;;		wreg
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5877 ;;      Params:         0       0       0       0       0
  5878 ;;      Locals:         0       0       0       0       0
  5879 ;;      Temps:          0       0       0       0       0
  5880 ;;      Totals:         0       0       0       0       0
  5881 ;;Total ram usage:        0 bytes
  5882 ;; Hardware stack levels used:    1
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		_main
  5887 ;;		_gpio_test
  5888 ;;		_LCD_8bit_test
  5889 ;;		_LCD_4bit_test
  5890 ;;		_seg_test
  5891 ;;		_rtc_test
  5892 ;;		_keypad_test
  5893 ;;		_UART_RxString
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           
  5898                           ;psect for function _UART_RxChar
  5899  128F                     _UART_RxChar:	
  5900  128F                     l470:	
  5901                           ;uart.c: 125: while(RCIF==0);
  5902                           
  5903                           ;incstack = 0
  5904                           ; Regs used in _UART_RxChar: [wreg]
  5905                           
  5906  128F  1283               	bcf	3,5	;RP0=0, select bank0
  5907  1290  1303               	bcf	3,6	;RP1=0, select bank0
  5908  1291  1E8C               	btfss	12,5	;volatile
  5909  1292  2A8F               	goto	l470
  5910                           
  5911                           ;uart.c: 126: RCIF=0;
  5912  1293  128C               	bcf	12,5	;volatile
  5913                           
  5914                           ;uart.c: 127: return(RCREG);
  5915  1294  081A               	movf	26,w	;volatile
  5916  1295  0008               	return
  5917  1296                     __end_of_UART_RxChar:	
  5918                           
  5919                           	psect	text32
  5920  05C9                     __ptext32:	
  5921 ;; *************** function _UART_Printf *****************
  5922 ;; Defined at:
  5923 ;;		line 413 in file "../00-libfiles/uart.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  argList         2   35[BANK0 ] PTR const unsigned char 
  5926 ;;		 -> STR_23(10), STR_22(40), STR_21(21), STR_20(29), 
  5927 ;;		 -> STR_19(16), STR_18(23), STR_17(38), STR_16(42), 
  5928 ;;		 -> STR_15(34), STR_14(41), STR_10(41), STR_6(41), 
  5929 ;;		 -> STR_4(40), STR_3(47), 
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;  v_num_u32       4   58[BANK0 ] unsigned long 
  5932 ;;  v_num_s32       4   52[BANK0 ] long 
  5933 ;;  ptr             2   64[BANK0 ] PTR const unsigned char 
  5934 ;;		 -> STR_23(10), STR_22(40), STR_21(21), STR_20(29), 
  5935 ;;		 -> STR_19(16), STR_18(23), STR_17(38), STR_16(42), 
  5936 ;;		 -> STR_15(34), STR_14(41), STR_10(41), STR_6(41), 
  5937 ;;		 -> STR_4(40), STR_3(47), 
  5938 ;;  v_num_u16       2   62[BANK0 ] unsigned int 
  5939 ;;  v_num_s16       2   56[BANK0 ] int 
  5940 ;;  argp            1   68[BANK0 ] PTR void [1]
  5941 ;;		 -> ?_UART_Printf(1), 
  5942 ;;  v_numOfDigit    1   67[BANK0 ] unsigned char 
  5943 ;;  ch              1   66[BANK0 ] unsigned char 
  5944 ;;  str             1   51[BANK0 ] PTR unsigned char 
  5945 ;; Return value:  Size  Location     Type
  5946 ;;                  1    wreg      void 
  5947 ;; Registers used:
  5948 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5954 ;;      Params:         0      14       0       0       0
  5955 ;;      Locals:         0      18       0       0       0
  5956 ;;      Temps:          0       2       0       0       0
  5957 ;;      Totals:         0      34       0       0       0
  5958 ;;Total ram usage:       34 bytes
  5959 ;; Hardware stack levels used:    1
  5960 ;; Hardware stack levels required when called:    2
  5961 ;; This function calls:
  5962 ;;		_UART_TxChar
  5963 ;;		_UART_TxNumber
  5964 ;;		_UART_TxString
  5965 ;;		___bmul
  5966 ;; This function is called by:
  5967 ;;		_gpio_test
  5968 ;;		_LCD_8bit_test
  5969 ;;		_LCD_4bit_test
  5970 ;;		_seg_test
  5971 ;;		_rtc_test
  5972 ;;		_eeprom_test
  5973 ;;		_adc_test
  5974 ;;		_keypad_test
  5975 ;; This function uses a non-reentrant model
  5976 ;;
  5977                           
  5978                           
  5979                           ;psect for function _UART_Printf
  5980  05C9                     _UART_Printf:	
  5981                           
  5982                           ;uart.c: 415: const char *ptr;
  5983                           ;uart.c: 416: va_list argp;
  5984                           ;uart.c: 417: sint16_t v_num_s16;
  5985                           ;uart.c: 418: sint32_t v_num_s32;
  5986                           ;uart.c: 419: uint16_t v_num_u16;
  5987                           ;uart.c: 420: uint32_t v_num_u32;
  5988                           ;uart.c: 421: char *str;
  5989                           ;uart.c: 422: char ch;
  5990                           ;uart.c: 423: uint8_t v_numOfDigitsToTransmit_u8;
  5991                           ;uart.c: 429: *argp = __va_start();
  5992                           
  5993                           ;incstack = 0
  5994                           ; Regs used in _UART_Printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5995  05C9  3045               	movlw	(low ((?_UART_Printf| 0+2)))& (0+255)
  5996  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  5997  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  5998  05CC  00D1               	movwf	??_UART_Printf
  5999  05CD  0851               	movf	??_UART_Printf,w
  6000  05CE  00E4               	movwf	UART_Printf@argp
  6001                           
  6002                           ;uart.c: 432: for(ptr = argList; *ptr != '\0'; ptr++)
  6003  05CF  0843               	movf	UART_Printf@argList,w
  6004  05D0  00E0               	movwf	UART_Printf@ptr
  6005  05D1  0844               	movf	UART_Printf@argList+1,w
  6006  05D2  00E1               	movwf	UART_Printf@ptr+1
  6007  05D3                     l3162:	
  6008  05D3  0861               	movf	UART_Printf@ptr+1,w
  6009  05D4  00FF               	movwf	127
  6010  05D5  0860               	movf	UART_Printf@ptr,w
  6011  05D6  0084               	movwf	4
  6012  05D7  120A  158A  2000  120A  118A  	fcall	stringtab
  6013  05DC  3A00               	xorlw	0
  6014  05DD  1903               	btfsc	3,2
  6015  05DE  0008               	return
  6016                           
  6017                           ;uart.c: 433: {
  6018                           ;uart.c: 435: ch= *ptr;
  6019  05DF  0861               	movf	UART_Printf@ptr+1,w
  6020  05E0  00FF               	movwf	127
  6021  05E1  0860               	movf	UART_Printf@ptr,w
  6022  05E2  0084               	movwf	4
  6023  05E3  120A  158A  2000  120A  118A  	fcall	stringtab
  6024  05E8  00D1               	movwf	??_UART_Printf
  6025  05E9  0851               	movf	??_UART_Printf,w
  6026  05EA  00E2               	movwf	UART_Printf@ch
  6027                           
  6028                           ;uart.c: 436: if(ch == '%')
  6029  05EB  3025               	movlw	37
  6030  05EC  0662               	xorwf	UART_Printf@ch,w
  6031  05ED  1D03               	btfss	3,2
  6032  05EE  2FDB               	goto	l3158
  6033                           
  6034                           ;uart.c: 437: {
  6035                           ;uart.c: 438: ptr++;
  6036  05EF  3001               	movlw	1
  6037  05F0  07E0               	addwf	UART_Printf@ptr,f
  6038  05F1  1803               	skipnc
  6039  05F2  0AE1               	incf	UART_Printf@ptr+1,f
  6040                           
  6041                           ;uart.c: 439: ch = *ptr;
  6042  05F3  0861               	movf	UART_Printf@ptr+1,w
  6043  05F4  00FF               	movwf	127
  6044  05F5  0860               	movf	UART_Printf@ptr,w
  6045  05F6  0084               	movwf	4
  6046  05F7  120A  158A  2000  120A  118A  	fcall	stringtab
  6047  05FC  00D1               	movwf	??_UART_Printf
  6048  05FD  0851               	movf	??_UART_Printf,w
  6049  05FE  00E2               	movwf	UART_Printf@ch
  6050                           
  6051                           ;uart.c: 440: if((ch>=0x30) && (ch<=0x39))
  6052  05FF  3030               	movlw	48
  6053  0600  0262               	subwf	UART_Printf@ch,w
  6054  0601  1C03               	skipc
  6055  0602  2E32               	goto	l3070
  6056  0603  303A               	movlw	58
  6057  0604  0262               	subwf	UART_Printf@ch,w
  6058  0605  1803               	skipnc
  6059  0606  2E32               	goto	l3070
  6060                           
  6061                           ;uart.c: 441: {
  6062                           ;uart.c: 442: v_numOfDigitsToTransmit_u8 = 0;
  6063  0607  01E3               	clrf	UART_Printf@v_numOfDigitsToTransmit_u8
  6064  0608                     l3066:	
  6065                           ;uart.c: 443: while((ch>=0x30) && (ch<=0x39))
  6066                           
  6067  0608  3030               	movlw	48
  6068  0609  0262               	subwf	UART_Printf@ch,w
  6069  060A  1C03               	skipc
  6070  060B  2FA9               	goto	l3156
  6071  060C  303A               	movlw	58
  6072  060D  0262               	subwf	UART_Printf@ch,w
  6073  060E  1803               	btfsc	3,0
  6074  060F  2FA9               	goto	l3156
  6075                           
  6076                           ;uart.c: 444: {
  6077                           ;uart.c: 445: v_numOfDigitsToTransmit_u8 = (v_numOfDigitsToTransmit_u8 * 10) + (ch-0x30)
      +                          ;
  6078  0610  300A               	movlw	10
  6079  0611  00D1               	movwf	??_UART_Printf
  6080  0612  0851               	movf	??_UART_Printf,w
  6081  0613  00A0               	movwf	___bmul@multiplicand
  6082  0614  0863               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  6083  0615  160A  118A  232C  120A  118A  	fcall	___bmul
  6084  061A  1283               	bcf	3,5	;RP0=0, select bank0
  6085  061B  1303               	bcf	3,6	;RP1=0, select bank0
  6086  061C  0762               	addwf	UART_Printf@ch,w
  6087  061D  3ED0               	addlw	208
  6088  061E  00D2               	movwf	??_UART_Printf+1
  6089  061F  0852               	movf	??_UART_Printf+1,w
  6090  0620  00E3               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  6091                           
  6092                           ;uart.c: 446: ptr++;
  6093  0621  3001               	movlw	1
  6094  0622  07E0               	addwf	UART_Printf@ptr,f
  6095  0623  1803               	skipnc
  6096  0624  0AE1               	incf	UART_Printf@ptr+1,f
  6097                           
  6098                           ;uart.c: 447: ch = *ptr;
  6099  0625  0861               	movf	UART_Printf@ptr+1,w
  6100  0626  00FF               	movwf	127
  6101  0627  0860               	movf	UART_Printf@ptr,w
  6102  0628  0084               	movwf	4
  6103  0629  120A  158A  2000  120A  118A  	fcall	stringtab
  6104  062E  00D1               	movwf	??_UART_Printf
  6105  062F  0851               	movf	??_UART_Printf,w
  6106  0630  00E2               	movwf	UART_Printf@ch
  6107  0631  2E08               	goto	l3066
  6108  0632                     l3070:	
  6109                           ;uart.c: 448: }
  6110                           ;uart.c: 449: }
  6111                           
  6112                           
  6113                           ;uart.c: 450: else
  6114                           ;uart.c: 451: {
  6115                           ;uart.c: 452: v_numOfDigitsToTransmit_u8 = 0xffu;
  6116  0632  30FF               	movlw	255
  6117  0633  00D1               	movwf	??_UART_Printf
  6118  0634  0851               	movf	??_UART_Printf,w
  6119  0635  00E3               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  6120                           
  6121                           ;uart.c: 453: }
  6122                           ;uart.c: 456: switch(ch)
  6123  0636  2FA9               	goto	l3156
  6124  0637                     l3072:	
  6125                           ;uart.c: 457: {
  6126                           ;uart.c: 458: case 'C':
  6127                           
  6128                           
  6129                           ;uart.c: 459: case 'c':
  6130                           ;uart.c: 460: ch = (*(uint8_t *)__va_arg((*(uint8_t **)argp), (uint8_t)0));
  6131  0637  0864               	movf	UART_Printf@argp,w
  6132  0638  0084               	movwf	4
  6133  0639  1383               	bcf	3,7	;select IRP bank0
  6134  063A  0800               	movf	0,w
  6135  063B  00D1               	movwf	??_UART_Printf
  6136  063C  0851               	movf	??_UART_Printf,w
  6137  063D  00E2               	movwf	UART_Printf@ch
  6138  063E  3002               	movlw	2
  6139  063F  00D1               	movwf	??_UART_Printf
  6140  0640  0851               	movf	??_UART_Printf,w
  6141  0641  07E4               	addwf	UART_Printf@argp,f
  6142  0642  2FDB               	goto	l3158
  6143  0643                     l3078:	
  6144                           ;uart.c: 464: case 'd':
  6145                           
  6146                           ;uart.c: 462: break;
  6147                           
  6148                           ;uart.c: 461: UART_TxChar(ch);
  6149                           
  6150                           
  6151                           ;uart.c: 465: v_num_s16 = (*(sint16_t *)__va_arg((*(sint16_t **)argp), (sint16_t)0));
  6152  0643  1283               	bcf	3,5	;RP0=0, select bank0
  6153  0644  1303               	bcf	3,6	;RP1=0, select bank0
  6154  0645  0864               	movf	UART_Printf@argp,w
  6155  0646  0084               	movwf	4
  6156  0647  1383               	bcf	3,7	;select IRP bank0
  6157  0648  0800               	movf	0,w
  6158  0649  00D8               	movwf	UART_Printf@v_num_s16
  6159  064A  0A84               	incf	4,f
  6160  064B  0800               	movf	0,w
  6161  064C  00D9               	movwf	UART_Printf@v_num_s16+1
  6162  064D  3002               	movlw	2
  6163  064E  00D1               	movwf	??_UART_Printf
  6164  064F  0851               	movf	??_UART_Printf,w
  6165  0650  07E4               	addwf	UART_Printf@argp,f
  6166                           
  6167                           ;uart.c: 466: if(v_num_s16<0)
  6168  0651  1FD9               	btfss	UART_Printf@v_num_s16+1,7
  6169  0652  2E5E               	goto	l3088
  6170                           
  6171                           ;uart.c: 467: {
  6172                           ;uart.c: 468: v_num_s16 = -v_num_s16;
  6173  0653  09D8               	comf	UART_Printf@v_num_s16,f
  6174  0654  09D9               	comf	UART_Printf@v_num_s16+1,f
  6175  0655  0AD8               	incf	UART_Printf@v_num_s16,f
  6176  0656  1903               	skipnz
  6177  0657  0AD9               	incf	UART_Printf@v_num_s16+1,f
  6178                           
  6179                           ;uart.c: 469: UART_TxChar('-');
  6180  0658  302D               	movlw	45
  6181  0659  160A  118A  22BC  120A  118A  	fcall	_UART_TxChar
  6182  065E                     l3088:	
  6183                           
  6184                           ;uart.c: 470: }
  6185                           ;uart.c: 471: UART_TxNumber(10u,v_num_s16,v_numOfDigitsToTransmit_u8);
  6186  065E  1283               	bcf	3,5	;RP0=0, select bank0
  6187  065F  1303               	bcf	3,6	;RP1=0, select bank0
  6188  0660  0858               	movf	UART_Printf@v_num_s16,w
  6189  0661  00A4               	movwf	UART_TxNumber@v_number_u32
  6190  0662  0859               	movf	UART_Printf@v_num_s16+1,w
  6191  0663  00A5               	movwf	UART_TxNumber@v_number_u32+1
  6192  0664  3000               	movlw	0
  6193  0665  1BA5               	btfsc	UART_TxNumber@v_number_u32+1,7
  6194  0666  30FF               	movlw	255
  6195  0667  00A6               	movwf	UART_TxNumber@v_number_u32+2
  6196  0668  00A7               	movwf	UART_TxNumber@v_number_u32+3
  6197  0669  0863               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  6198  066A  00D1               	movwf	??_UART_Printf
  6199  066B  0851               	movf	??_UART_Printf,w
  6200  066C  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  6201  066D  300A               	movlw	10
  6202  066E  120A  118A  24D7  120A  118A  	fcall	_UART_TxNumber
  6203                           
  6204                           ;uart.c: 472: break;
  6205  0673  2FE1               	goto	l3160
  6206  0674                     l3090:	
  6207                           ;uart.c: 474: case 'D':
  6208                           
  6209                           
  6210                           ;uart.c: 475: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
  6211  0674  1283               	bcf	3,5	;RP0=0, select bank0
  6212  0675  1303               	bcf	3,6	;RP1=0, select bank0
  6213  0676  0864               	movf	UART_Printf@argp,w
  6214  0677  0084               	movwf	4
  6215  0678  1383               	bcf	3,7	;select IRP bank0
  6216  0679  0800               	movf	0,w
  6217  067A  00D4               	movwf	UART_Printf@v_num_s32
  6218  067B  0A84               	incf	4,f
  6219  067C  0800               	movf	0,w
  6220  067D  00D5               	movwf	UART_Printf@v_num_s32+1
  6221  067E  0A84               	incf	4,f
  6222  067F  0800               	movf	0,w
  6223  0680  00D6               	movwf	UART_Printf@v_num_s32+2
  6224  0681  0A84               	incf	4,f
  6225  0682  0800               	movf	0,w
  6226  0683  00D7               	movwf	UART_Printf@v_num_s32+3
  6227  0684  3004               	movlw	4
  6228  0685  00D1               	movwf	??_UART_Printf
  6229  0686  0851               	movf	??_UART_Printf,w
  6230  0687  07E4               	addwf	UART_Printf@argp,f
  6231                           
  6232                           ;uart.c: 476: if(v_num_s32<0)
  6233  0688  1FD7               	btfss	UART_Printf@v_num_s32+3,7
  6234  0689  2E9B               	goto	l3100
  6235                           
  6236                           ;uart.c: 477: {
  6237                           ;uart.c: 478: v_num_s32 = -v_num_s32;
  6238  068A  09D4               	comf	UART_Printf@v_num_s32,f
  6239  068B  09D5               	comf	UART_Printf@v_num_s32+1,f
  6240  068C  09D6               	comf	UART_Printf@v_num_s32+2,f
  6241  068D  09D7               	comf	UART_Printf@v_num_s32+3,f
  6242  068E  0AD4               	incf	UART_Printf@v_num_s32,f
  6243  068F  1903               	skipnz
  6244  0690  0AD5               	incf	UART_Printf@v_num_s32+1,f
  6245  0691  1903               	skipnz
  6246  0692  0AD6               	incf	UART_Printf@v_num_s32+2,f
  6247  0693  1903               	skipnz
  6248  0694  0AD7               	incf	UART_Printf@v_num_s32+3,f
  6249                           
  6250                           ;uart.c: 479: UART_TxChar('-');
  6251  0695  302D               	movlw	45
  6252  0696  160A  118A  22BC  120A  118A  	fcall	_UART_TxChar
  6253  069B                     l3100:	
  6254                           
  6255                           ;uart.c: 480: }
  6256                           ;uart.c: 481: UART_TxNumber(10u,v_num_s32,v_numOfDigitsToTransmit_u8);
  6257  069B  1283               	bcf	3,5	;RP0=0, select bank0
  6258  069C  1303               	bcf	3,6	;RP1=0, select bank0
  6259  069D  0857               	movf	UART_Printf@v_num_s32+3,w
  6260  069E  00A7               	movwf	UART_TxNumber@v_number_u32+3
  6261  069F  0856               	movf	UART_Printf@v_num_s32+2,w
  6262  06A0  00A6               	movwf	UART_TxNumber@v_number_u32+2
  6263  06A1  0855               	movf	UART_Printf@v_num_s32+1,w
  6264  06A2  00A5               	movwf	UART_TxNumber@v_number_u32+1
  6265  06A3  0854               	movf	UART_Printf@v_num_s32,w
  6266  06A4  00A4               	movwf	UART_TxNumber@v_number_u32
  6267  06A5  0863               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  6268  06A6  00D1               	movwf	??_UART_Printf
  6269  06A7  0851               	movf	??_UART_Printf,w
  6270  06A8  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  6271  06A9  300A               	movlw	10
  6272  06AA  120A  118A  24D7  120A  118A  	fcall	_UART_TxNumber
  6273                           
  6274                           ;uart.c: 482: break;
  6275  06AF  2FE1               	goto	l3160
  6276  06B0                     l3102:	
  6277                           ;uart.c: 484: case 'u':
  6278                           
  6279                           
  6280                           ;uart.c: 485: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  6281  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  6282  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  6283  06B2  0864               	movf	UART_Printf@argp,w
  6284  06B3  0084               	movwf	4
  6285  06B4  1383               	bcf	3,7	;select IRP bank0
  6286  06B5  0800               	movf	0,w
  6287  06B6  00DE               	movwf	UART_Printf@v_num_u16
  6288  06B7  0A84               	incf	4,f
  6289  06B8  0800               	movf	0,w
  6290  06B9  00DF               	movwf	UART_Printf@v_num_u16+1
  6291  06BA  3002               	movlw	2
  6292  06BB  00D1               	movwf	??_UART_Printf
  6293  06BC  0851               	movf	??_UART_Printf,w
  6294  06BD  07E4               	addwf	UART_Printf@argp,f
  6295                           
  6296                           ;uart.c: 486: UART_TxNumber(10u,v_num_u16,v_numOfDigitsToTransmit_u8);
  6297  06BE  085E               	movf	UART_Printf@v_num_u16,w
  6298  06BF  00A4               	movwf	UART_TxNumber@v_number_u32
  6299  06C0  085F               	movf	UART_Printf@v_num_u16+1,w
  6300  06C1  00A5               	movwf	UART_TxNumber@v_number_u32+1
  6301  06C2  01A6               	clrf	UART_TxNumber@v_number_u32+2
  6302  06C3  01A7               	clrf	UART_TxNumber@v_number_u32+3
  6303  06C4  0863               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  6304  06C5  00D1               	movwf	??_UART_Printf
  6305  06C6  0851               	movf	??_UART_Printf,w
  6306  06C7  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  6307  06C8  300A               	movlw	10
  6308  06C9  120A  118A  24D7  120A  118A  	fcall	_UART_TxNumber
  6309                           
  6310                           ;uart.c: 487: break;
  6311  06CE  2FE1               	goto	l3160
  6312  06CF                     l3108:	
  6313                           ;uart.c: 489: case 'U':
  6314                           
  6315                           
  6316                           ;uart.c: 490: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  6317  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  6318  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  6319  06D1  0864               	movf	UART_Printf@argp,w
  6320  06D2  0084               	movwf	4
  6321  06D3  1383               	bcf	3,7	;select IRP bank0
  6322  06D4  0800               	movf	0,w
  6323  06D5  00DA               	movwf	UART_Printf@v_num_u32
  6324  06D6  0A84               	incf	4,f
  6325  06D7  0800               	movf	0,w
  6326  06D8  00DB               	movwf	UART_Printf@v_num_u32+1
  6327  06D9  0A84               	incf	4,f
  6328  06DA  0800               	movf	0,w
  6329  06DB  00DC               	movwf	UART_Printf@v_num_u32+2
  6330  06DC  0A84               	incf	4,f
  6331  06DD  0800               	movf	0,w
  6332  06DE  00DD               	movwf	UART_Printf@v_num_u32+3
  6333  06DF  3004               	movlw	4
  6334  06E0  00D1               	movwf	??_UART_Printf
  6335  06E1  0851               	movf	??_UART_Printf,w
  6336  06E2  07E4               	addwf	UART_Printf@argp,f
  6337                           
  6338                           ;uart.c: 491: UART_TxNumber(10u,v_num_u32,v_numOfDigitsToTransmit_u8);
  6339  06E3  085D               	movf	UART_Printf@v_num_u32+3,w
  6340  06E4  00A7               	movwf	UART_TxNumber@v_number_u32+3
  6341  06E5  085C               	movf	UART_Printf@v_num_u32+2,w
  6342  06E6  00A6               	movwf	UART_TxNumber@v_number_u32+2
  6343  06E7  085B               	movf	UART_Printf@v_num_u32+1,w
  6344  06E8  00A5               	movwf	UART_TxNumber@v_number_u32+1
  6345  06E9  085A               	movf	UART_Printf@v_num_u32,w
  6346  06EA  00A4               	movwf	UART_TxNumber@v_number_u32
  6347  06EB  0863               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  6348  06EC  00D1               	movwf	??_UART_Printf
  6349  06ED  0851               	movf	??_UART_Printf,w
  6350  06EE  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  6351  06EF  300A               	movlw	10
  6352  06F0  120A  118A  24D7  120A  118A  	fcall	_UART_TxNumber
  6353                           
  6354                           ;uart.c: 492: break;
  6355  06F5  2FE1               	goto	l3160
  6356  06F6                     l3114:	
  6357                           ;uart.c: 494: case 'x':
  6358                           
  6359                           
  6360                           ;uart.c: 495: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  6361  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  6362  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  6363  06F8  0864               	movf	UART_Printf@argp,w
  6364  06F9  0084               	movwf	4
  6365  06FA  1383               	bcf	3,7	;select IRP bank0
  6366  06FB  0800               	movf	0,w
  6367  06FC  00DE               	movwf	UART_Printf@v_num_u16
  6368  06FD  0A84               	incf	4,f
  6369  06FE  0800               	movf	0,w
  6370  06FF  00DF               	movwf	UART_Printf@v_num_u16+1
  6371  0700  3002               	movlw	2
  6372  0701  00D1               	movwf	??_UART_Printf
  6373  0702  0851               	movf	??_UART_Printf,w
  6374  0703  07E4               	addwf	UART_Printf@argp,f
  6375                           
  6376                           ;uart.c: 496: UART_TxNumber(16u,v_num_u16,v_numOfDigitsToTransmit_u8);
  6377  0704  085E               	movf	UART_Printf@v_num_u16,w
  6378  0705  00A4               	movwf	UART_TxNumber@v_number_u32
  6379  0706  085F               	movf	UART_Printf@v_num_u16+1,w
  6380  0707  00A5               	movwf	UART_TxNumber@v_number_u32+1
  6381  0708  01A6               	clrf	UART_TxNumber@v_number_u32+2
  6382  0709  01A7               	clrf	UART_TxNumber@v_number_u32+3
  6383  070A  0863               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  6384  070B  00D1               	movwf	??_UART_Printf
  6385  070C  0851               	movf	??_UART_Printf,w
  6386  070D  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  6387  070E  3010               	movlw	16
  6388  070F  120A  118A  24D7  120A  118A  	fcall	_UART_TxNumber
  6389                           
  6390                           ;uart.c: 497: break;
  6391  0714  2FE1               	goto	l3160
  6392  0715                     l3120:	
  6393                           ;uart.c: 499: case 'X':
  6394                           
  6395                           
  6396                           ;uart.c: 500: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  6397  0715  1283               	bcf	3,5	;RP0=0, select bank0
  6398  0716  1303               	bcf	3,6	;RP1=0, select bank0
  6399  0717  0864               	movf	UART_Printf@argp,w
  6400  0718  0084               	movwf	4
  6401  0719  1383               	bcf	3,7	;select IRP bank0
  6402  071A  0800               	movf	0,w
  6403  071B  00DA               	movwf	UART_Printf@v_num_u32
  6404  071C  0A84               	incf	4,f
  6405  071D  0800               	movf	0,w
  6406  071E  00DB               	movwf	UART_Printf@v_num_u32+1
  6407  071F  0A84               	incf	4,f
  6408  0720  0800               	movf	0,w
  6409  0721  00DC               	movwf	UART_Printf@v_num_u32+2
  6410  0722  0A84               	incf	4,f
  6411  0723  0800               	movf	0,w
  6412  0724  00DD               	movwf	UART_Printf@v_num_u32+3
  6413  0725  3004               	movlw	4
  6414  0726  00D1               	movwf	??_UART_Printf
  6415  0727  0851               	movf	??_UART_Printf,w
  6416  0728  07E4               	addwf	UART_Printf@argp,f
  6417                           
  6418                           ;uart.c: 501: UART_TxNumber(16u,v_num_u32,v_numOfDigitsToTransmit_u8);
  6419  0729  085D               	movf	UART_Printf@v_num_u32+3,w
  6420  072A  00A7               	movwf	UART_TxNumber@v_number_u32+3
  6421  072B  085C               	movf	UART_Printf@v_num_u32+2,w
  6422  072C  00A6               	movwf	UART_TxNumber@v_number_u32+2
  6423  072D  085B               	movf	UART_Printf@v_num_u32+1,w
  6424  072E  00A5               	movwf	UART_TxNumber@v_number_u32+1
  6425  072F  085A               	movf	UART_Printf@v_num_u32,w
  6426  0730  00A4               	movwf	UART_TxNumber@v_number_u32
  6427  0731  0863               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  6428  0732  00D1               	movwf	??_UART_Printf
  6429  0733  0851               	movf	??_UART_Printf,w
  6430  0734  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  6431  0735  3010               	movlw	16
  6432  0736  120A  118A  24D7  120A  118A  	fcall	_UART_TxNumber
  6433                           
  6434                           ;uart.c: 502: break;
  6435  073B  2FE1               	goto	l3160
  6436  073C                     l3126:	
  6437                           ;uart.c: 505: case 'b':
  6438                           
  6439                           
  6440                           ;uart.c: 506: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  6441  073C  1283               	bcf	3,5	;RP0=0, select bank0
  6442  073D  1303               	bcf	3,6	;RP1=0, select bank0
  6443  073E  0864               	movf	UART_Printf@argp,w
  6444  073F  0084               	movwf	4
  6445  0740  1383               	bcf	3,7	;select IRP bank0
  6446  0741  0800               	movf	0,w
  6447  0742  00DE               	movwf	UART_Printf@v_num_u16
  6448  0743  0A84               	incf	4,f
  6449  0744  0800               	movf	0,w
  6450  0745  00DF               	movwf	UART_Printf@v_num_u16+1
  6451  0746  3002               	movlw	2
  6452  0747  00D1               	movwf	??_UART_Printf
  6453  0748  0851               	movf	??_UART_Printf,w
  6454  0749  07E4               	addwf	UART_Printf@argp,f
  6455                           
  6456                           ;uart.c: 508: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  6457  074A  0A63               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  6458  074B  1D03               	btfss	3,2
  6459  074C  2F51               	goto	l3134
  6460                           
  6461                           ;uart.c: 509: v_numOfDigitsToTransmit_u8 = 16;
  6462  074D  3010               	movlw	16
  6463  074E  00D1               	movwf	??_UART_Printf
  6464  074F  0851               	movf	??_UART_Printf,w
  6465  0750  00E3               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  6466  0751                     l3134:	
  6467                           
  6468                           ;uart.c: 511: UART_TxNumber(2u,v_num_u16,v_numOfDigitsToTransmit_u8);
  6469  0751  085E               	movf	UART_Printf@v_num_u16,w
  6470  0752  00A4               	movwf	UART_TxNumber@v_number_u32
  6471  0753  085F               	movf	UART_Printf@v_num_u16+1,w
  6472  0754  00A5               	movwf	UART_TxNumber@v_number_u32+1
  6473  0755  01A6               	clrf	UART_TxNumber@v_number_u32+2
  6474  0756  01A7               	clrf	UART_TxNumber@v_number_u32+3
  6475  0757  0863               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  6476  0758  00D1               	movwf	??_UART_Printf
  6477  0759  0851               	movf	??_UART_Printf,w
  6478  075A  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  6479  075B  3002               	movlw	2
  6480  075C  120A  118A  24D7  120A  118A  	fcall	_UART_TxNumber
  6481                           
  6482                           ;uart.c: 512: break;
  6483  0761  2FE1               	goto	l3160
  6484  0762                     l3136:	
  6485                           ;uart.c: 514: case 'B':
  6486                           
  6487                           
  6488                           ;uart.c: 515: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  6489  0762  1283               	bcf	3,5	;RP0=0, select bank0
  6490  0763  1303               	bcf	3,6	;RP1=0, select bank0
  6491  0764  0864               	movf	UART_Printf@argp,w
  6492  0765  0084               	movwf	4
  6493  0766  1383               	bcf	3,7	;select IRP bank0
  6494  0767  0800               	movf	0,w
  6495  0768  00DA               	movwf	UART_Printf@v_num_u32
  6496  0769  0A84               	incf	4,f
  6497  076A  0800               	movf	0,w
  6498  076B  00DB               	movwf	UART_Printf@v_num_u32+1
  6499  076C  0A84               	incf	4,f
  6500  076D  0800               	movf	0,w
  6501  076E  00DC               	movwf	UART_Printf@v_num_u32+2
  6502  076F  0A84               	incf	4,f
  6503  0770  0800               	movf	0,w
  6504  0771  00DD               	movwf	UART_Printf@v_num_u32+3
  6505  0772  3004               	movlw	4
  6506  0773  00D1               	movwf	??_UART_Printf
  6507  0774  0851               	movf	??_UART_Printf,w
  6508  0775  07E4               	addwf	UART_Printf@argp,f
  6509                           
  6510                           ;uart.c: 517: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  6511  0776  0A63               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  6512  0777  1D03               	btfss	3,2
  6513  0778  2F7D               	goto	l3144
  6514                           
  6515                           ;uart.c: 518: v_numOfDigitsToTransmit_u8 = 32;
  6516  0779  3020               	movlw	32
  6517  077A  00D1               	movwf	??_UART_Printf
  6518  077B  0851               	movf	??_UART_Printf,w
  6519  077C  00E3               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  6520  077D                     l3144:	
  6521                           
  6522                           ;uart.c: 520: UART_TxNumber(2u,v_num_u32,v_numOfDigitsToTransmit_u8);
  6523  077D  085D               	movf	UART_Printf@v_num_u32+3,w
  6524  077E  00A7               	movwf	UART_TxNumber@v_number_u32+3
  6525  077F  085C               	movf	UART_Printf@v_num_u32+2,w
  6526  0780  00A6               	movwf	UART_TxNumber@v_number_u32+2
  6527  0781  085B               	movf	UART_Printf@v_num_u32+1,w
  6528  0782  00A5               	movwf	UART_TxNumber@v_number_u32+1
  6529  0783  085A               	movf	UART_Printf@v_num_u32,w
  6530  0784  00A4               	movwf	UART_TxNumber@v_number_u32
  6531  0785  0863               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  6532  0786  00D1               	movwf	??_UART_Printf
  6533  0787  0851               	movf	??_UART_Printf,w
  6534  0788  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  6535  0789  3002               	movlw	2
  6536  078A  120A  118A  24D7  120A  118A  	fcall	_UART_TxNumber
  6537                           
  6538                           ;uart.c: 525: case 'f':
  6539                           ;uart.c: 530: break;
  6540                           
  6541                           ;uart.c: 524: case 'F':
  6542                           
  6543                           ;uart.c: 521: break;
  6544  078F  2FE1               	goto	l3160
  6545  0790                     l3146:	
  6546                           ;uart.c: 533: case 'S':
  6547                           
  6548                           
  6549                           ;uart.c: 534: case 's':
  6550                           ;uart.c: 535: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  6551  0790  1283               	bcf	3,5	;RP0=0, select bank0
  6552  0791  1303               	bcf	3,6	;RP1=0, select bank0
  6553  0792  0864               	movf	UART_Printf@argp,w
  6554  0793  0084               	movwf	4
  6555  0794  1383               	bcf	3,7	;select IRP bank0
  6556  0795  0800               	movf	0,w
  6557  0796  00D1               	movwf	??_UART_Printf
  6558  0797  0851               	movf	??_UART_Printf,w
  6559  0798  00D3               	movwf	UART_Printf@str
  6560  0799  3001               	movlw	1
  6561  079A  00D1               	movwf	??_UART_Printf
  6562  079B  0851               	movf	??_UART_Printf,w
  6563  079C  07E4               	addwf	UART_Printf@argp,f
  6564                           
  6565                           ;uart.c: 536: UART_TxString(str);
  6566  079D  0853               	movf	UART_Printf@str,w
  6567  079E  00F1               	movwf	UART_TxString@ptr_string
  6568  079F  3000               	movlw	0
  6569  07A0  00F2               	movwf	UART_TxString@ptr_string+1
  6570  07A1  160A  118A  243A  120A  118A  	fcall	_UART_TxString
  6571                           
  6572                           ;uart.c: 537: break;
  6573  07A6  2FE1               	goto	l3160
  6574  07A7                     l3152:	
  6575                           ;uart.c: 539: case '%':
  6576                           
  6577                           
  6578                           ;uart.c: 540: UART_TxChar('%');
  6579  07A7  3025               	movlw	37
  6580  07A8  2FDC               	goto	L5
  6581  07A9                     l3156:	
  6582                           ;uart.c: 542: }
  6583                           
  6584                           ;uart.c: 541: break;
  6585                           
  6586  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  6587  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  6588  07AB  0862               	movf	UART_Printf@ch,w
  6589                           
  6590                           ; Switch size 1, requested type "space"
  6591                           ; Number of cases is 15, Range of values is 37 to 120
  6592                           ; switch strategies available:
  6593                           ; Name         Instructions Cycles
  6594                           ; simple_byte           46    24 (average)
  6595                           ; direct_byte          263    11 (fixed)
  6596                           ; jumptable            263     9 (fixed)
  6597                           ;	Chosen strategy is simple_byte
  6598  07AC  3A25               	xorlw	37	; case 37
  6599  07AD  1903               	skipnz
  6600  07AE  2FA7               	goto	l3152
  6601  07AF  3A67               	xorlw	103	; case 66
  6602  07B0  1903               	skipnz
  6603  07B1  2F62               	goto	l3136
  6604  07B2  3A01               	xorlw	1	; case 67
  6605  07B3  1903               	skipnz
  6606  07B4  2E37               	goto	l3072
  6607  07B5  3A07               	xorlw	7	; case 68
  6608  07B6  1903               	skipnz
  6609  07B7  2E74               	goto	l3090
  6610  07B8  3A02               	xorlw	2	; case 70
  6611  07B9  1903               	skipnz
  6612  07BA  2FE1               	goto	l3160
  6613  07BB  3A15               	xorlw	21	; case 83
  6614  07BC  1903               	skipnz
  6615  07BD  2F90               	goto	l3146
  6616  07BE  3A06               	xorlw	6	; case 85
  6617  07BF  1903               	skipnz
  6618  07C0  2ECF               	goto	l3108
  6619  07C1  3A0D               	xorlw	13	; case 88
  6620  07C2  1903               	skipnz
  6621  07C3  2F15               	goto	l3120
  6622  07C4  3A3A               	xorlw	58	; case 98
  6623  07C5  1903               	skipnz
  6624  07C6  2F3C               	goto	l3126
  6625  07C7  3A01               	xorlw	1	; case 99
  6626  07C8  1903               	skipnz
  6627  07C9  2E37               	goto	l3072
  6628  07CA  3A07               	xorlw	7	; case 100
  6629  07CB  1903               	skipnz
  6630  07CC  2E43               	goto	l3078
  6631  07CD  3A02               	xorlw	2	; case 102
  6632  07CE  1903               	skipnz
  6633  07CF  2FE1               	goto	l3160
  6634  07D0  3A15               	xorlw	21	; case 115
  6635  07D1  1903               	skipnz
  6636  07D2  2F90               	goto	l3146
  6637  07D3  3A06               	xorlw	6	; case 117
  6638  07D4  1903               	skipnz
  6639  07D5  2EB0               	goto	l3102
  6640  07D6  3A0D               	xorlw	13	; case 120
  6641  07D7  1903               	skipnz
  6642  07D8  2EF6               	goto	l3114
  6643  07D9  2FE1               	goto	l3160
  6644                           
  6645                           ;uart.c: 543: }
  6646  07DA  2FE1               	goto	l3160
  6647  07DB                     l3158:	
  6648                           
  6649                           ;uart.c: 544: else
  6650                           ;uart.c: 545: {
  6651                           ;uart.c: 547: UART_TxChar(ch);
  6652  07DB  0862               	movf	UART_Printf@ch,w
  6653  07DC                     L5:	
  6654  07DC  160A  118A  22BC  120A  118A  	fcall	_UART_TxChar
  6655  07E1                     l3160:	
  6656  07E1  3001               	movlw	1
  6657  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  6658  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  6659  07E4  07E0               	addwf	UART_Printf@ptr,f
  6660  07E5  1803               	skipnc
  6661  07E6  0AE1               	incf	UART_Printf@ptr+1,f
  6662  07E7  2DD3               	goto	l3162
  6663  07E8                     __end_of_UART_Printf:	
  6664                           
  6665                           	psect	text33
  6666  143A                     __ptext33:	
  6667 ;; *************** function _UART_TxString *****************
  6668 ;; Defined at:
  6669 ;;		line 169 in file "../00-libfiles/uart.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;  ptr_string      2    1[COMMON] PTR const unsigned char 
  6672 ;;		 -> STR_13(77), STR_9(53), STR_5(49), STR_2(37), 
  6673 ;;		 -> STR_1(141), 
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;		None
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  1    wreg      void 
  6678 ;; Registers used:
  6679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6685 ;;      Params:         2       0       0       0       0
  6686 ;;      Locals:         0       0       0       0       0
  6687 ;;      Temps:          0       0       0       0       0
  6688 ;;      Totals:         2       0       0       0       0
  6689 ;;Total ram usage:        2 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:    1
  6692 ;; This function calls:
  6693 ;;		_UART_TxChar
  6694 ;; This function is called by:
  6695 ;;		_UART_Printf
  6696 ;;		_main
  6697 ;;		_LCD_8bit_test
  6698 ;;		_LCD_4bit_test
  6699 ;;		_seg_test
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           
  6704                           ;psect for function _UART_TxString
  6705  143A                     _UART_TxString:	
  6706  143A                     l2752:	
  6707                           ;uart.c: 171: while(*ptr_string)
  6708                           
  6709                           ;incstack = 0
  6710                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6711                           
  6712  143A  0872               	movf	UART_TxString@ptr_string+1,w
  6713  143B  1283               	bcf	3,5	;RP0=0, select bank0
  6714  143C  1303               	bcf	3,6	;RP1=0, select bank0
  6715  143D  00FF               	movwf	127
  6716  143E  0871               	movf	UART_TxString@ptr_string,w
  6717  143F  0084               	movwf	4
  6718  1440  120A  158A  2000  160A  118A  	fcall	stringtab
  6719  1445  3A00               	xorlw	0
  6720  1446  1903               	btfsc	3,2
  6721  1447  0008               	return
  6722                           
  6723                           ;uart.c: 172: UART_TxChar(*ptr_string++);
  6724  1448  0872               	movf	UART_TxString@ptr_string+1,w
  6725  1449  1283               	bcf	3,5	;RP0=0, select bank0
  6726  144A  1303               	bcf	3,6	;RP1=0, select bank0
  6727  144B  00FF               	movwf	127
  6728  144C  0871               	movf	UART_TxString@ptr_string,w
  6729  144D  0084               	movwf	4
  6730  144E  120A  158A  2000  160A  118A  	fcall	stringtab
  6731  1453  160A  118A  22BC  160A  118A  	fcall	_UART_TxChar
  6732  1458  3001               	movlw	1
  6733  1459  07F1               	addwf	UART_TxString@ptr_string,f
  6734  145A  1803               	skipnc
  6735  145B  0AF2               	incf	UART_TxString@ptr_string+1,f
  6736  145C  3000               	movlw	0
  6737  145D  07F2               	addwf	UART_TxString@ptr_string+1,f
  6738  145E  2C3A               	goto	l2752
  6739  145F                     __end_of_UART_TxString:	
  6740                           
  6741                           	psect	text34
  6742  04D7                     __ptext34:	
  6743 ;; *************** function _UART_TxNumber *****************
  6744 ;; Defined at:
  6745 ;;		line 260 in file "../00-libfiles/uart.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;  v_numericSys    1    wreg     unsigned char 
  6748 ;;  v_number_u32    4    4[BANK0 ] unsigned long 
  6749 ;;  v_numOfDigit    1    8[BANK0 ] unsigned char 
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;  v_numericSys    1   33[BANK0 ] unsigned char 
  6752 ;;  a              10   21[BANK0 ] unsigned char [10]
  6753 ;;  i               1   34[BANK0 ] unsigned char 
  6754 ;; Return value:  Size  Location     Type
  6755 ;;                  1    wreg      void 
  6756 ;; Registers used:
  6757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6758 ;; Tracked objects:
  6759 ;;		On entry : 0/0
  6760 ;;		On exit  : 0/0
  6761 ;;		Unchanged: 0/0
  6762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6763 ;;      Params:         0       5       0       0       0
  6764 ;;      Locals:         0      14       0       0       0
  6765 ;;      Temps:          0      12       0       0       0
  6766 ;;      Totals:         0      31       0       0       0
  6767 ;;Total ram usage:       31 bytes
  6768 ;; Hardware stack levels used:    1
  6769 ;; Hardware stack levels required when called:    1
  6770 ;; This function calls:
  6771 ;;		_UART_TxChar
  6772 ;;		___bmul
  6773 ;;		___lldiv
  6774 ;; This function is called by:
  6775 ;;		_UART_Printf
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           
  6780                           ;psect for function _UART_TxNumber
  6781  04D7                     _UART_TxNumber:	
  6782                           
  6783                           ;incstack = 0
  6784                           ; Regs used in _UART_TxNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6785                           ;UART_TxNumber@v_numericSystem_u8 stored from wreg
  6786  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  6787  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  6788  04D9  00C1               	movwf	UART_TxNumber@v_numericSystem_u8
  6789                           
  6790                           ;uart.c: 262: uint8_t i=0,a[10];
  6791  04DA  01C2               	clrf	UART_TxNumber@i
  6792                           
  6793                           ;uart.c: 264: if(2u == v_numericSystem_u8)
  6794  04DB  3002               	movlw	2
  6795  04DC  0641               	xorwf	UART_TxNumber@v_numericSystem_u8,w
  6796  04DD  1903               	btfsc	3,2
  6797  04DE  2D1E               	goto	l2766
  6798  04DF  2D22               	goto	l2768
  6799  04E0                     l2760:	
  6800                           ;uart.c: 265: {
  6801                           ;uart.c: 266: while(v_numOfDigitsToTransmit_u8!=0)
  6802                           
  6803                           
  6804                           ;uart.c: 267: {
  6805                           ;uart.c: 270: i = (((v_number_u32)&((1<<((v_numOfDigitsToTransmit_u8-1)))))!=0u);
  6806  04E0  0824               	movf	UART_TxNumber@v_number_u32,w
  6807  04E1  00A9               	movwf	??_UART_TxNumber
  6808  04E2  0825               	movf	UART_TxNumber@v_number_u32+1,w
  6809  04E3  00AA               	movwf	??_UART_TxNumber+1
  6810  04E4  0826               	movf	UART_TxNumber@v_number_u32+2,w
  6811  04E5  00AB               	movwf	??_UART_TxNumber+2
  6812  04E6  0827               	movf	UART_TxNumber@v_number_u32+3,w
  6813  04E7  00AC               	movwf	??_UART_TxNumber+3
  6814  04E8  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  6815  04E9  3EFF               	addlw	-1
  6816  04EA  00AD               	movwf	??_UART_TxNumber+4
  6817  04EB  0AAD               	incf	??_UART_TxNumber+4,f
  6818  04EC  3001               	movlw	1
  6819  04ED  00AE               	movwf	??_UART_TxNumber+5
  6820  04EE  3000               	movlw	0
  6821  04EF  00AF               	movwf	??_UART_TxNumber+6
  6822  04F0  2CF4               	goto	u3144
  6823  04F1                     u3145:	
  6824  04F1  1003               	clrc
  6825  04F2  0DAE               	rlf	??_UART_TxNumber+5,f
  6826  04F3  0DAF               	rlf	??_UART_TxNumber+6,f
  6827  04F4                     u3144:	
  6828  04F4  0BAD               	decfsz	??_UART_TxNumber+4,f
  6829  04F5  2CF1               	goto	u3145
  6830  04F6  082E               	movf	??_UART_TxNumber+5,w
  6831  04F7  00B0               	movwf	??_UART_TxNumber+7
  6832  04F8  082F               	movf	??_UART_TxNumber+6,w
  6833  04F9  00B1               	movwf	??_UART_TxNumber+8
  6834  04FA  3000               	movlw	0
  6835  04FB  1BB1               	btfsc	??_UART_TxNumber+8,7
  6836  04FC  30FF               	movlw	255
  6837  04FD  00B2               	movwf	??_UART_TxNumber+9
  6838  04FE  00B3               	movwf	??_UART_TxNumber+10
  6839  04FF  0830               	movf	??_UART_TxNumber+7,w
  6840  0500  05A9               	andwf	??_UART_TxNumber,f
  6841  0501  0831               	movf	??_UART_TxNumber+8,w
  6842  0502  05AA               	andwf	??_UART_TxNumber+1,f
  6843  0503  0832               	movf	??_UART_TxNumber+9,w
  6844  0504  05AB               	andwf	??_UART_TxNumber+2,f
  6845  0505  0833               	movf	??_UART_TxNumber+10,w
  6846  0506  05AC               	andwf	??_UART_TxNumber+3,f
  6847  0507  082C               	movf	??_UART_TxNumber+3,w
  6848  0508  042B               	iorwf	??_UART_TxNumber+2,w
  6849  0509  042A               	iorwf	??_UART_TxNumber+1,w
  6850  050A  0429               	iorwf	??_UART_TxNumber,w
  6851  050B  1903               	btfsc	3,2
  6852  050C  2D0F               	goto	u3150
  6853  050D  3001               	movlw	1
  6854  050E  2D10               	goto	u3160
  6855  050F                     u3150:	
  6856  050F  3000               	movlw	0
  6857  0510                     u3160:	
  6858  0510  00B4               	movwf	??_UART_TxNumber+11
  6859  0511  0834               	movf	??_UART_TxNumber+11,w
  6860  0512  00C2               	movwf	UART_TxNumber@i
  6861                           
  6862                           ;uart.c: 271: UART_TxChar(((i)+0x30));
  6863  0513  0842               	movf	UART_TxNumber@i,w
  6864  0514  3E30               	addlw	48
  6865  0515  160A  118A  22BC  120A  118A  	fcall	_UART_TxChar
  6866                           
  6867                           ;uart.c: 272: v_numOfDigitsToTransmit_u8--;
  6868  051A  3001               	movlw	1
  6869  051B  1283               	bcf	3,5	;RP0=0, select bank0
  6870  051C  1303               	bcf	3,6	;RP1=0, select bank0
  6871  051D  02A8               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,f
  6872  051E                     l2766:	
  6873  051E  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  6874  051F  1903               	btfsc	3,2
  6875  0520  0008               	return
  6876  0521  2CE0               	goto	l2760
  6877  0522                     l2768:	
  6878                           ;uart.c: 273: }
  6879                           ;uart.c: 274: }
  6880                           
  6881                           
  6882                           ;uart.c: 275: else if(v_number_u32==0)
  6883  0522  0827               	movf	UART_TxNumber@v_number_u32+3,w
  6884  0523  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  6885  0524  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  6886  0525  0424               	iorwf	UART_TxNumber@v_number_u32,w
  6887  0526  1D03               	skipz
  6888  0527  2D2D               	goto	l2772
  6889                           
  6890                           ;uart.c: 276: {
  6891                           ;uart.c: 280: UART_TxChar('0');
  6892  0528  3030               	movlw	48
  6893  0529  160A  118A  22BC   	fcall	_UART_TxChar
  6894                           
  6895                           ;uart.c: 281: }
  6896  052C  0008               	return
  6897  052D                     l2772:	
  6898                           
  6899                           ;uart.c: 282: else
  6900                           ;uart.c: 283: {
  6901                           ;uart.c: 284: for(i=0;i<v_numOfDigitsToTransmit_u8;i++)
  6902  052D  1283               	bcf	3,5	;RP0=0, select bank0
  6903  052E  1303               	bcf	3,6	;RP1=0, select bank0
  6904  052F  01C2               	clrf	UART_TxNumber@i
  6905  0530                     l2790:	
  6906  0530  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  6907  0531  0242               	subwf	UART_TxNumber@i,w
  6908  0532  1803               	btfsc	3,0
  6909  0533  2DC5               	goto	l2802
  6910                           
  6911                           ;uart.c: 285: {
  6912                           ;uart.c: 288: if(v_number_u32!=0)
  6913  0534  0827               	movf	UART_TxNumber@v_number_u32+3,w
  6914  0535  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  6915  0536  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  6916  0537  0424               	iorwf	UART_TxNumber@v_number_u32,w
  6917  0538  1903               	skipnz
  6918  0539  2D8F               	goto	l2780
  6919                           
  6920                           ;uart.c: 289: {
  6921                           ;uart.c: 296: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u
      +                          32/v_numericSystem_u8)));
  6922  053A  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  6923  053B  00A9               	movwf	??_UART_TxNumber
  6924  053C  0829               	movf	??_UART_TxNumber,w
  6925  053D  00A0               	movwf	___bmul@multiplicand
  6926  053E  0827               	movf	UART_TxNumber@v_number_u32+3,w
  6927  053F  00F7               	movwf	___lldiv@dividend+3
  6928  0540  0826               	movf	UART_TxNumber@v_number_u32+2,w
  6929  0541  00F6               	movwf	___lldiv@dividend+2
  6930  0542  0825               	movf	UART_TxNumber@v_number_u32+1,w
  6931  0543  00F5               	movwf	___lldiv@dividend+1
  6932  0544  0824               	movf	UART_TxNumber@v_number_u32,w
  6933  0545  00F4               	movwf	___lldiv@dividend
  6934  0546  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  6935  0547  00AA               	movwf	??_UART_TxNumber+1
  6936  0548  01AB               	clrf	??_UART_TxNumber+2
  6937  0549  01AC               	clrf	??_UART_TxNumber+3
  6938  054A  01AD               	clrf	??_UART_TxNumber+4
  6939  054B  082D               	movf	??_UART_TxNumber+4,w
  6940  054C  00F3               	movwf	___lldiv@divisor+3
  6941  054D  082C               	movf	??_UART_TxNumber+3,w
  6942  054E  00F2               	movwf	___lldiv@divisor+2
  6943  054F  082B               	movf	??_UART_TxNumber+2,w
  6944  0550  00F1               	movwf	___lldiv@divisor+1
  6945  0551  082A               	movf	??_UART_TxNumber+1,w
  6946  0552  00F0               	movwf	___lldiv@divisor
  6947  0553  160A  118A  27A2  120A  118A  	fcall	___lldiv
  6948  0558  0870               	movf	?___lldiv,w
  6949  0559  160A  118A  232C  120A  118A  	fcall	___bmul
  6950  055E  3AFF               	xorlw	255
  6951  055F  3E01               	addlw	1
  6952  0560  1283               	bcf	3,5	;RP0=0, select bank0
  6953  0561  1303               	bcf	3,6	;RP1=0, select bank0
  6954  0562  0724               	addwf	UART_TxNumber@v_number_u32,w
  6955  0563  00AE               	movwf	??_UART_TxNumber+5
  6956  0564  0842               	movf	UART_TxNumber@i,w
  6957  0565  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  6958  0566  0084               	movwf	4
  6959  0567  082E               	movf	??_UART_TxNumber+5,w
  6960  0568  1383               	bcf	3,7	;select IRP bank0
  6961  0569  0080               	movwf	0
  6962                           
  6963                           ;uart.c: 297: v_number_u32=v_number_u32/v_numericSystem_u8;
  6964  056A  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  6965  056B  00A9               	movwf	??_UART_TxNumber
  6966  056C  01AA               	clrf	??_UART_TxNumber+1
  6967  056D  01AB               	clrf	??_UART_TxNumber+2
  6968  056E  01AC               	clrf	??_UART_TxNumber+3
  6969  056F  082C               	movf	??_UART_TxNumber+3,w
  6970  0570  00F3               	movwf	___lldiv@divisor+3
  6971  0571  082B               	movf	??_UART_TxNumber+2,w
  6972  0572  00F2               	movwf	___lldiv@divisor+2
  6973  0573  082A               	movf	??_UART_TxNumber+1,w
  6974  0574  00F1               	movwf	___lldiv@divisor+1
  6975  0575  0829               	movf	??_UART_TxNumber,w
  6976  0576  00F0               	movwf	___lldiv@divisor
  6977  0577  0827               	movf	UART_TxNumber@v_number_u32+3,w
  6978  0578  00F7               	movwf	___lldiv@dividend+3
  6979  0579  0826               	movf	UART_TxNumber@v_number_u32+2,w
  6980  057A  00F6               	movwf	___lldiv@dividend+2
  6981  057B  0825               	movf	UART_TxNumber@v_number_u32+1,w
  6982  057C  00F5               	movwf	___lldiv@dividend+1
  6983  057D  0824               	movf	UART_TxNumber@v_number_u32,w
  6984  057E  00F4               	movwf	___lldiv@dividend
  6985  057F  160A  118A  27A2  120A  118A  	fcall	___lldiv
  6986  0584  0873               	movf	?___lldiv+3,w
  6987  0585  1283               	bcf	3,5	;RP0=0, select bank0
  6988  0586  1303               	bcf	3,6	;RP1=0, select bank0
  6989  0587  00A7               	movwf	UART_TxNumber@v_number_u32+3
  6990  0588  0872               	movf	?___lldiv+2,w
  6991  0589  00A6               	movwf	UART_TxNumber@v_number_u32+2
  6992  058A  0871               	movf	?___lldiv+1,w
  6993  058B  00A5               	movwf	UART_TxNumber@v_number_u32+1
  6994  058C  0870               	movf	?___lldiv,w
  6995  058D  00A4               	movwf	UART_TxNumber@v_number_u32
  6996                           
  6997                           ;uart.c: 298: }
  6998  058E  2D9B               	goto	l2788
  6999  058F                     l2780:	
  7000                           
  7001                           ;uart.c: 299: else if( (v_numOfDigitsToTransmit_u8 == 0xffu) ||
  7002                           ;uart.c: 300: (v_numOfDigitsToTransmit_u8 > 10u))
  7003  058F  0A28               	incf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  7004  0590  1903               	btfsc	3,2
  7005  0591  2DC5               	goto	l2802
  7006  0592  300B               	movlw	11
  7007  0593  0228               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  7008  0594  1803               	btfsc	3,0
  7009  0595  2DC5               	goto	l2802
  7010                           
  7011                           ;uart.c: 306: else
  7012                           ;uart.c: 307: {
  7013                           ;uart.c: 311: a[i]=0;
  7014                           
  7015                           ;uart.c: 305: }
  7016                           
  7017                           ;uart.c: 301: {
  7018                           ;uart.c: 304: break;
  7019  0596  0842               	movf	UART_TxNumber@i,w
  7020  0597  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  7021  0598  0084               	movwf	4
  7022  0599  1383               	bcf	3,7	;select IRP bank0
  7023  059A  0180               	clrf	0
  7024  059B                     l2788:	
  7025  059B  3001               	movlw	1
  7026  059C  00A9               	movwf	??_UART_TxNumber
  7027  059D  0829               	movf	??_UART_TxNumber,w
  7028  059E  07C2               	addwf	UART_TxNumber@i,f
  7029  059F  2D30               	goto	l2790
  7030  05A0                     l2792:	
  7031                           ;uart.c: 312: }
  7032                           ;uart.c: 313: }
  7033                           ;uart.c: 315: while(i)
  7034                           
  7035                           
  7036                           ;uart.c: 316: {
  7037                           ;uart.c: 318: UART_TxChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  7038  05A0  0842               	movf	UART_TxNumber@i,w
  7039  05A1  3EFF               	addlw	255
  7040  05A2  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  7041  05A3  0084               	movwf	4
  7042  05A4  300A               	movlw	10
  7043  05A5  1383               	bcf	3,7	;select IRP bank0
  7044  05A6  0200               	subwf	0,w
  7045  05A7  1803               	skipnc
  7046  05A8  2DB0               	goto	l2796
  7047  05A9  0842               	movf	UART_TxNumber@i,w
  7048  05AA  3EFF               	addlw	255
  7049  05AB  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  7050  05AC  0084               	movwf	4
  7051  05AD  0800               	movf	0,w
  7052  05AE  3E30               	addlw	48
  7053  05AF  2DB6               	goto	L6
  7054  05B0                     l2796:	
  7055  05B0  0842               	movf	UART_TxNumber@i,w
  7056  05B1  3EFF               	addlw	255
  7057  05B2  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  7058  05B3  0084               	movwf	4
  7059  05B4  0800               	movf	0,w
  7060  05B5  3E37               	addlw	55
  7061  05B6                     L6:	
  7062  05B6  00BF               	movwf	_UART_TxNumber$486
  7063  05B7  3000               	movlw	0
  7064  05B8  1803               	skipnc
  7065  05B9  3001               	movlw	1
  7066  05BA  00C0               	movwf	_UART_TxNumber$486+1
  7067  05BB  083F               	movf	_UART_TxNumber$486,w
  7068  05BC  160A  118A  22BC  120A  118A  	fcall	_UART_TxChar
  7069                           
  7070                           ;uart.c: 319: i--;
  7071  05C1  3001               	movlw	1
  7072  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  7073  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  7074  05C4  02C2               	subwf	UART_TxNumber@i,f
  7075  05C5                     l2802:	
  7076  05C5  0842               	movf	UART_TxNumber@i,w
  7077  05C6  1903               	btfsc	3,2
  7078  05C7  0008               	return
  7079  05C8  2DA0               	goto	l2792
  7080  05C9                     __end_of_UART_TxNumber:	
  7081                           
  7082                           	psect	text35
  7083  17A2                     __ptext35:	
  7084 ;; *************** function ___lldiv *****************
  7085 ;; Defined at:
  7086 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;  divisor         4    0[COMMON] unsigned long 
  7089 ;;  dividend        4    4[COMMON] unsigned long 
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;  quotient        4    9[COMMON] unsigned long 
  7092 ;;  counter         1   13[COMMON] unsigned char 
  7093 ;; Return value:  Size  Location     Type
  7094 ;;                  4    0[COMMON] unsigned long 
  7095 ;; Registers used:
  7096 ;;		wreg, status,2, status,0
  7097 ;; Tracked objects:
  7098 ;;		On entry : 0/0
  7099 ;;		On exit  : 0/0
  7100 ;;		Unchanged: 0/0
  7101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7102 ;;      Params:         8       0       0       0       0
  7103 ;;      Locals:         5       0       0       0       0
  7104 ;;      Temps:          1       0       0       0       0
  7105 ;;      Totals:        14       0       0       0       0
  7106 ;;Total ram usage:       14 bytes
  7107 ;; Hardware stack levels used:    1
  7108 ;; This function calls:
  7109 ;;		Nothing
  7110 ;; This function is called by:
  7111 ;;		_UART_SetBaudRate
  7112 ;;		_UART_TxNumber
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           
  7117                           ;psect for function ___lldiv
  7118  17A2                     ___lldiv:	
  7119                           
  7120                           ;incstack = 0
  7121                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7122  17A2  3000               	movlw	0
  7123  17A3  00FC               	movwf	___lldiv@quotient+3
  7124  17A4  3000               	movlw	0
  7125  17A5  00FB               	movwf	___lldiv@quotient+2
  7126  17A6  3000               	movlw	0
  7127  17A7  00FA               	movwf	___lldiv@quotient+1
  7128  17A8  3000               	movlw	0
  7129  17A9  00F9               	movwf	___lldiv@quotient
  7130  17AA  0873               	movf	___lldiv@divisor+3,w
  7131  17AB  0472               	iorwf	___lldiv@divisor+2,w
  7132  17AC  0471               	iorwf	___lldiv@divisor+1,w
  7133  17AD  0470               	iorwf	___lldiv@divisor,w
  7134  17AE  1903               	skipnz
  7135  17AF  2FF7               	goto	l2572
  7136  17B0  01FD               	clrf	___lldiv@counter
  7137  17B1  0AFD               	incf	___lldiv@counter,f
  7138  17B2                     l2558:	
  7139  17B2  1BF3               	btfsc	___lldiv@divisor+3,7
  7140  17B3  2FC2               	goto	l2560
  7141  17B4  3001               	movlw	1
  7142  17B5  00F8               	movwf	??___lldiv
  7143  17B6                     u2795:	
  7144  17B6  1003               	clrc
  7145  17B7  0DF0               	rlf	___lldiv@divisor,f
  7146  17B8  0DF1               	rlf	___lldiv@divisor+1,f
  7147  17B9  0DF2               	rlf	___lldiv@divisor+2,f
  7148  17BA  0DF3               	rlf	___lldiv@divisor+3,f
  7149  17BB  0BF8               	decfsz	??___lldiv,f
  7150  17BC  2FB6               	goto	u2795
  7151  17BD  3001               	movlw	1
  7152  17BE  00F8               	movwf	??___lldiv
  7153  17BF  0878               	movf	??___lldiv,w
  7154  17C0  07FD               	addwf	___lldiv@counter,f
  7155  17C1  2FB2               	goto	l2558
  7156  17C2                     l2560:	
  7157  17C2  3001               	movlw	1
  7158  17C3  00F8               	movwf	??___lldiv
  7159  17C4                     u2815:	
  7160  17C4  1003               	clrc
  7161  17C5  0DF9               	rlf	___lldiv@quotient,f
  7162  17C6  0DFA               	rlf	___lldiv@quotient+1,f
  7163  17C7  0DFB               	rlf	___lldiv@quotient+2,f
  7164  17C8  0DFC               	rlf	___lldiv@quotient+3,f
  7165  17C9  0BF8               	decfsz	??___lldiv,f
  7166  17CA  2FC4               	goto	u2815
  7167  17CB  0873               	movf	___lldiv@divisor+3,w
  7168  17CC  0277               	subwf	___lldiv@dividend+3,w
  7169  17CD  1D03               	skipz
  7170  17CE  2FD9               	goto	u2825
  7171  17CF  0872               	movf	___lldiv@divisor+2,w
  7172  17D0  0276               	subwf	___lldiv@dividend+2,w
  7173  17D1  1D03               	skipz
  7174  17D2  2FD9               	goto	u2825
  7175  17D3  0871               	movf	___lldiv@divisor+1,w
  7176  17D4  0275               	subwf	___lldiv@dividend+1,w
  7177  17D5  1D03               	skipz
  7178  17D6  2FD9               	goto	u2825
  7179  17D7  0870               	movf	___lldiv@divisor,w
  7180  17D8  0274               	subwf	___lldiv@dividend,w
  7181  17D9                     u2825:	
  7182  17D9  1C03               	skipc
  7183  17DA  2FEA               	goto	l2568
  7184  17DB  0870               	movf	___lldiv@divisor,w
  7185  17DC  02F4               	subwf	___lldiv@dividend,f
  7186  17DD  0871               	movf	___lldiv@divisor+1,w
  7187  17DE  1C03               	skipc
  7188  17DF  0F71               	incfsz	___lldiv@divisor+1,w
  7189  17E0  02F5               	subwf	___lldiv@dividend+1,f
  7190  17E1  0872               	movf	___lldiv@divisor+2,w
  7191  17E2  1C03               	skipc
  7192  17E3  0F72               	incfsz	___lldiv@divisor+2,w
  7193  17E4  02F6               	subwf	___lldiv@dividend+2,f
  7194  17E5  0873               	movf	___lldiv@divisor+3,w
  7195  17E6  1C03               	skipc
  7196  17E7  0F73               	incfsz	___lldiv@divisor+3,w
  7197  17E8  02F7               	subwf	___lldiv@dividend+3,f
  7198  17E9  1479               	bsf	___lldiv@quotient,0
  7199  17EA                     l2568:	
  7200  17EA  3001               	movlw	1
  7201  17EB                     u2835:	
  7202  17EB  1003               	clrc
  7203  17EC  0CF3               	rrf	___lldiv@divisor+3,f
  7204  17ED  0CF2               	rrf	___lldiv@divisor+2,f
  7205  17EE  0CF1               	rrf	___lldiv@divisor+1,f
  7206  17EF  0CF0               	rrf	___lldiv@divisor,f
  7207  17F0  3EFF               	addlw	-1
  7208  17F1  1D03               	skipz
  7209  17F2  2FEB               	goto	u2835
  7210  17F3  3001               	movlw	1
  7211  17F4  02FD               	subwf	___lldiv@counter,f
  7212  17F5  1D03               	btfss	3,2
  7213  17F6  2FC2               	goto	l2560
  7214  17F7                     l2572:	
  7215  17F7  087C               	movf	___lldiv@quotient+3,w
  7216  17F8  00F3               	movwf	?___lldiv+3
  7217  17F9  087B               	movf	___lldiv@quotient+2,w
  7218  17FA  00F2               	movwf	?___lldiv+2
  7219  17FB  087A               	movf	___lldiv@quotient+1,w
  7220  17FC  00F1               	movwf	?___lldiv+1
  7221  17FD  0879               	movf	___lldiv@quotient,w
  7222  17FE  00F0               	movwf	?___lldiv
  7223  17FF  0008               	return
  7224  1800                     __end_of___lldiv:	
  7225                           
  7226                           	psect	text36
  7227  132C                     __ptext36:	
  7228 ;; *************** function ___bmul *****************
  7229 ;; Defined at:
  7230 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\Umul8.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;  multiplier      1    wreg     unsigned char 
  7233 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7234 ;; Auto vars:     Size  Location     Type
  7235 ;;  multiplier      1    3[BANK0 ] unsigned char 
  7236 ;;  product         1    2[BANK0 ] unsigned char 
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  1    wreg      unsigned char 
  7239 ;; Registers used:
  7240 ;;		wreg, status,2, status,0
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7246 ;;      Params:         0       1       0       0       0
  7247 ;;      Locals:         0       2       0       0       0
  7248 ;;      Temps:          0       1       0       0       0
  7249 ;;      Totals:         0       4       0       0       0
  7250 ;;Total ram usage:        4 bytes
  7251 ;; Hardware stack levels used:    1
  7252 ;; This function calls:
  7253 ;;		Nothing
  7254 ;; This function is called by:
  7255 ;;		_UART_TxNumber
  7256 ;;		_UART_Printf
  7257 ;; This function uses a non-reentrant model
  7258 ;;
  7259                           
  7260                           
  7261                           ;psect for function ___bmul
  7262  132C                     ___bmul:	
  7263                           
  7264                           ;incstack = 0
  7265                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7266                           ;___bmul@multiplier stored from wreg
  7267  132C  1283               	bcf	3,5	;RP0=0, select bank0
  7268  132D  1303               	bcf	3,6	;RP1=0, select bank0
  7269  132E  00A3               	movwf	___bmul@multiplier
  7270  132F  01A2               	clrf	___bmul@product
  7271  1330                     l2540:	
  7272  1330  1C23               	btfss	___bmul@multiplier,0
  7273  1331  2B36               	goto	l2544
  7274  1332  0820               	movf	___bmul@multiplicand,w
  7275  1333  00A1               	movwf	??___bmul
  7276  1334  0821               	movf	??___bmul,w
  7277  1335  07A2               	addwf	___bmul@product,f
  7278  1336                     l2544:	
  7279  1336  1003               	clrc
  7280  1337  0DA0               	rlf	___bmul@multiplicand,f
  7281  1338  1003               	clrc
  7282  1339  0CA3               	rrf	___bmul@multiplier,f
  7283  133A  0823               	movf	___bmul@multiplier,w
  7284  133B  1D03               	btfss	3,2
  7285  133C  2B30               	goto	l2540
  7286  133D  0822               	movf	___bmul@product,w
  7287  133E  0008               	return
  7288  133F                     __end_of___bmul:	
  7289                           
  7290                           	psect	text37
  7291  12BC                     __ptext37:	
  7292 ;; *************** function _UART_TxChar *****************
  7293 ;; Defined at:
  7294 ;;		line 145 in file "../00-libfiles/uart.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  v_uartData_u    1    wreg     unsigned char 
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;  v_uartData_u    1    0[COMMON] unsigned char 
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  1    wreg      void 
  7301 ;; Registers used:
  7302 ;;		wreg
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7308 ;;      Params:         0       0       0       0       0
  7309 ;;      Locals:         1       0       0       0       0
  7310 ;;      Temps:          0       0       0       0       0
  7311 ;;      Totals:         1       0       0       0       0
  7312 ;;Total ram usage:        1 bytes
  7313 ;; Hardware stack levels used:    1
  7314 ;; This function calls:
  7315 ;;		Nothing
  7316 ;; This function is called by:
  7317 ;;		_UART_TxString
  7318 ;;		_UART_TxNumber
  7319 ;;		_UART_Printf
  7320 ;;		_UART_RxString
  7321 ;; This function uses a non-reentrant model
  7322 ;;
  7323                           
  7324                           
  7325                           ;psect for function _UART_TxChar
  7326  12BC                     _UART_TxChar:	
  7327                           
  7328                           ;incstack = 0
  7329                           ; Regs used in _UART_TxChar: [wreg]
  7330                           ;UART_TxChar@v_uartData_u8 stored from wreg
  7331  12BC  00F0               	movwf	UART_TxChar@v_uartData_u8
  7332  12BD                     l476:	
  7333                           ;uart.c: 147: while(TXIF==0);
  7334                           
  7335  12BD  1283               	bcf	3,5	;RP0=0, select bank0
  7336  12BE  1303               	bcf	3,6	;RP1=0, select bank0
  7337  12BF  1E0C               	btfss	12,4	;volatile
  7338  12C0  2ABD               	goto	l476
  7339                           
  7340                           ;uart.c: 148: TXIF=0;
  7341  12C1  120C               	bcf	12,4	;volatile
  7342                           
  7343                           ;uart.c: 149: TXREG=v_uartData_u8;
  7344  12C2  0870               	movf	UART_TxChar@v_uartData_u8,w
  7345  12C3  0099               	movwf	25	;volatile
  7346  12C4  0008               	return
  7347  12C5                     __end_of_UART_TxChar:	
  7348                           
  7349                           	psect	text38
  7350  0254                     __ptext38:	
  7351 ;; *************** function _LCD_SetUp *****************
  7352 ;; Defined at:
  7353 ;;		line 135 in file "../00-libfiles/lcd.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;  RS              1    wreg     enum E33
  7356 ;;  RW              1    0[BANK0 ] enum E33
  7357 ;;  EN              1    1[BANK0 ] enum E33
  7358 ;;  D0              1    2[BANK0 ] enum E33
  7359 ;;  D1              1    3[BANK0 ] enum E33
  7360 ;;  D2              1    4[BANK0 ] enum E33
  7361 ;;  D3              1    5[BANK0 ] enum E33
  7362 ;;  D4              1    6[BANK0 ] enum E33
  7363 ;;  D5              1    7[BANK0 ] enum E33
  7364 ;;  D6              1    8[BANK0 ] enum E33
  7365 ;;  D7              1    9[BANK0 ] enum E33
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;  RS              1    6[COMMON] enum E33
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  1    wreg      void 
  7370 ;; Registers used:
  7371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7377 ;;      Params:         0      10       0       0       0
  7378 ;;      Locals:         1       0       0       0       0
  7379 ;;      Temps:          1       0       0       0       0
  7380 ;;      Totals:         2      10       0       0       0
  7381 ;;Total ram usage:       12 bytes
  7382 ;; Hardware stack levels used:    1
  7383 ;; Hardware stack levels required when called:    1
  7384 ;; This function calls:
  7385 ;;		_GPIO_PinDirection
  7386 ;; This function is called by:
  7387 ;;		_LCD_8bit_test
  7388 ;;		_LCD_4bit_test
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           
  7393                           ;psect for function _LCD_SetUp
  7394  0254                     _LCD_SetUp:	
  7395                           
  7396                           ;incstack = 0
  7397                           ; Regs used in _LCD_SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7398                           ;LCD_SetUp@RS stored from wreg
  7399  0254  00F6               	movwf	LCD_SetUp@RS
  7400                           
  7401                           ;lcd.c: 148: LCDConfig.RS = RS;
  7402  0255  0876               	movf	LCD_SetUp@RS,w
  7403  0256  00F5               	movwf	??_LCD_SetUp
  7404  0257  0875               	movf	??_LCD_SetUp,w
  7405  0258  1683               	bsf	3,5	;RP0=1, select bank1
  7406  0259  1303               	bcf	3,6	;RP1=0, select bank1
  7407  025A  00A3               	movwf	(_LCDConfig^(0+128)+3)
  7408                           
  7409                           ;lcd.c: 149: LCDConfig.RW = RW;
  7410  025B  1283               	bcf	3,5	;RP0=0, select bank0
  7411  025C  1303               	bcf	3,6	;RP1=0, select bank0
  7412  025D  0820               	movf	LCD_SetUp@RW,w
  7413  025E  00F5               	movwf	??_LCD_SetUp
  7414  025F  0875               	movf	??_LCD_SetUp,w
  7415  0260  1683               	bsf	3,5	;RP0=1, select bank1
  7416  0261  1303               	bcf	3,6	;RP1=0, select bank1
  7417  0262  00A4               	movwf	(_LCDConfig^(0+128)+4)
  7418                           
  7419                           ;lcd.c: 150: LCDConfig.EN = EN;
  7420  0263  1283               	bcf	3,5	;RP0=0, select bank0
  7421  0264  1303               	bcf	3,6	;RP1=0, select bank0
  7422  0265  0821               	movf	LCD_SetUp@EN,w
  7423  0266  00F5               	movwf	??_LCD_SetUp
  7424  0267  0875               	movf	??_LCD_SetUp,w
  7425  0268  1683               	bsf	3,5	;RP0=1, select bank1
  7426  0269  1303               	bcf	3,6	;RP1=0, select bank1
  7427  026A  00A5               	movwf	(_LCDConfig^(0+128)+5)
  7428                           
  7429                           ;lcd.c: 152: LCDConfig.D0 = D0;
  7430  026B  1283               	bcf	3,5	;RP0=0, select bank0
  7431  026C  1303               	bcf	3,6	;RP1=0, select bank0
  7432  026D  0822               	movf	LCD_SetUp@D0,w
  7433  026E  00F5               	movwf	??_LCD_SetUp
  7434  026F  0875               	movf	??_LCD_SetUp,w
  7435  0270  1683               	bsf	3,5	;RP0=1, select bank1
  7436  0271  1303               	bcf	3,6	;RP1=0, select bank1
  7437  0272  00A6               	movwf	(_LCDConfig^(0+128)+6)
  7438                           
  7439                           ;lcd.c: 153: LCDConfig.D1 = D1;
  7440  0273  1283               	bcf	3,5	;RP0=0, select bank0
  7441  0274  1303               	bcf	3,6	;RP1=0, select bank0
  7442  0275  0823               	movf	LCD_SetUp@D1,w
  7443  0276  00F5               	movwf	??_LCD_SetUp
  7444  0277  0875               	movf	??_LCD_SetUp,w
  7445  0278  1683               	bsf	3,5	;RP0=1, select bank1
  7446  0279  1303               	bcf	3,6	;RP1=0, select bank1
  7447  027A  00A7               	movwf	(_LCDConfig^(0+128)+7)
  7448                           
  7449                           ;lcd.c: 154: LCDConfig.D2 = D2;
  7450  027B  1283               	bcf	3,5	;RP0=0, select bank0
  7451  027C  1303               	bcf	3,6	;RP1=0, select bank0
  7452  027D  0824               	movf	LCD_SetUp@D2,w
  7453  027E  00F5               	movwf	??_LCD_SetUp
  7454  027F  0875               	movf	??_LCD_SetUp,w
  7455  0280  1683               	bsf	3,5	;RP0=1, select bank1
  7456  0281  1303               	bcf	3,6	;RP1=0, select bank1
  7457  0282  00A8               	movwf	(_LCDConfig^(0+128)+8)
  7458                           
  7459                           ;lcd.c: 155: LCDConfig.D3 = D3;
  7460  0283  1283               	bcf	3,5	;RP0=0, select bank0
  7461  0284  1303               	bcf	3,6	;RP1=0, select bank0
  7462  0285  0825               	movf	LCD_SetUp@D3,w
  7463  0286  00F5               	movwf	??_LCD_SetUp
  7464  0287  0875               	movf	??_LCD_SetUp,w
  7465  0288  1683               	bsf	3,5	;RP0=1, select bank1
  7466  0289  1303               	bcf	3,6	;RP1=0, select bank1
  7467  028A  00A9               	movwf	(_LCDConfig^(0+128)+9)
  7468                           
  7469                           ;lcd.c: 156: LCDConfig.D4 = D4;
  7470  028B  1283               	bcf	3,5	;RP0=0, select bank0
  7471  028C  1303               	bcf	3,6	;RP1=0, select bank0
  7472  028D  0826               	movf	LCD_SetUp@D4,w
  7473  028E  00F5               	movwf	??_LCD_SetUp
  7474  028F  0875               	movf	??_LCD_SetUp,w
  7475  0290  1683               	bsf	3,5	;RP0=1, select bank1
  7476  0291  1303               	bcf	3,6	;RP1=0, select bank1
  7477  0292  00AA               	movwf	(_LCDConfig^(0+128)+10)
  7478                           
  7479                           ;lcd.c: 157: LCDConfig.D5 = D5;
  7480  0293  1283               	bcf	3,5	;RP0=0, select bank0
  7481  0294  1303               	bcf	3,6	;RP1=0, select bank0
  7482  0295  0827               	movf	LCD_SetUp@D5,w
  7483  0296  00F5               	movwf	??_LCD_SetUp
  7484  0297  0875               	movf	??_LCD_SetUp,w
  7485  0298  1683               	bsf	3,5	;RP0=1, select bank1
  7486  0299  1303               	bcf	3,6	;RP1=0, select bank1
  7487  029A  00AB               	movwf	(_LCDConfig^(0+128)+11)
  7488                           
  7489                           ;lcd.c: 158: LCDConfig.D6 = D6;
  7490  029B  1283               	bcf	3,5	;RP0=0, select bank0
  7491  029C  1303               	bcf	3,6	;RP1=0, select bank0
  7492  029D  0828               	movf	LCD_SetUp@D6,w
  7493  029E  00F5               	movwf	??_LCD_SetUp
  7494  029F  0875               	movf	??_LCD_SetUp,w
  7495  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  7496  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  7497  02A2  00AC               	movwf	(_LCDConfig^(0+128)+12)
  7498                           
  7499                           ;lcd.c: 159: LCDConfig.D7 = D7;
  7500  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  7501  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  7502  02A5  0829               	movf	LCD_SetUp@D7,w
  7503  02A6  00F5               	movwf	??_LCD_SetUp
  7504  02A7  0875               	movf	??_LCD_SetUp,w
  7505  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  7506  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  7507  02AA  00AD               	movwf	(_LCDConfig^(0+128)+13)
  7508                           
  7509                           ;lcd.c: 162: if((D0 == P_NC) || (D1 == P_NC) || (D2 == P_NC) || (D3 == P_NC))
  7510  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  7511  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  7512  02AD  0A22               	incf	LCD_SetUp@D0,w
  7513  02AE  1903               	btfsc	3,2
  7514  02AF  2AB8               	goto	l2924
  7515  02B0  0A23               	incf	LCD_SetUp@D1,w
  7516  02B1  1903               	btfsc	3,2
  7517  02B2  2AB8               	goto	l2924
  7518  02B3  0A24               	incf	LCD_SetUp@D2,w
  7519  02B4  1D03               	btfss	3,2
  7520  02B5  0A25               	incf	LCD_SetUp@D3,w
  7521  02B6  1D03               	btfss	3,2
  7522  02B7  2ABF               	goto	l2926
  7523  02B8                     l2924:	
  7524                           
  7525                           ;lcd.c: 163: {
  7526                           ;lcd.c: 164: LCDConfig.v_LcdMode_U8 = 4;
  7527  02B8  3004               	movlw	4
  7528  02B9  00F5               	movwf	??_LCD_SetUp
  7529  02BA  0875               	movf	??_LCD_SetUp,w
  7530  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  7531  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  7532  02BD  00A2               	movwf	(_LCDConfig^(0+128)+2)
  7533                           
  7534                           ;lcd.c: 165: }
  7535  02BE  2AE9               	goto	l2936
  7536  02BF                     l2926:	
  7537                           
  7538                           ;lcd.c: 166: else
  7539                           ;lcd.c: 167: {
  7540                           ;lcd.c: 168: LCDConfig.v_LcdMode_U8 = 8;
  7541  02BF  3008               	movlw	8
  7542  02C0  00F5               	movwf	??_LCD_SetUp
  7543  02C1  0875               	movf	??_LCD_SetUp,w
  7544  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  7545  02C3  1303               	bcf	3,6	;RP1=0, select bank1
  7546  02C4  00A2               	movwf	(_LCDConfig^(0+128)+2)
  7547                           
  7548                           ;lcd.c: 169: GPIO_PinDirection(D0,0x00u);
  7549  02C5  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  7550  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  7551  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  7552  02C8  0822               	movf	LCD_SetUp@D0,w
  7553  02C9  120A  118A  2325  120A  118A  	fcall	_GPIO_PinDirection
  7554                           
  7555                           ;lcd.c: 170: GPIO_PinDirection(D1,0x00u);
  7556  02CE  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  7557  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  7558  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  7559  02D1  0823               	movf	LCD_SetUp@D1,w
  7560  02D2  120A  118A  2325  120A  118A  	fcall	_GPIO_PinDirection
  7561                           
  7562                           ;lcd.c: 171: GPIO_PinDirection(D2,0x00u);
  7563  02D7  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  7564  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  7565  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  7566  02DA  0824               	movf	LCD_SetUp@D2,w
  7567  02DB  120A  118A  2325  120A  118A  	fcall	_GPIO_PinDirection
  7568                           
  7569                           ;lcd.c: 172: GPIO_PinDirection(D3,0x00u);
  7570  02E0  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  7571  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  7572  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  7573  02E3  0825               	movf	LCD_SetUp@D3,w
  7574  02E4  120A  118A  2325  120A  118A  	fcall	_GPIO_PinDirection
  7575  02E9                     l2936:	
  7576                           
  7577                           ;lcd.c: 173: }
  7578                           ;lcd.c: 176: GPIO_PinDirection(RS,0x00u);
  7579  02E9  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  7580  02EA  0876               	movf	LCD_SetUp@RS,w
  7581  02EB  120A  118A  2325  120A  118A  	fcall	_GPIO_PinDirection
  7582                           
  7583                           ;lcd.c: 177: GPIO_PinDirection(RW,0x00u);
  7584  02F0  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  7585  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  7586  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  7587  02F3  0820               	movf	LCD_SetUp@RW,w
  7588  02F4  120A  118A  2325  120A  118A  	fcall	_GPIO_PinDirection
  7589                           
  7590                           ;lcd.c: 178: GPIO_PinDirection(EN,0x00u);
  7591  02F9  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  7592  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  7593  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  7594  02FC  0821               	movf	LCD_SetUp@EN,w
  7595  02FD  120A  118A  2325  120A  118A  	fcall	_GPIO_PinDirection
  7596                           
  7597                           ;lcd.c: 180: GPIO_PinDirection(D4,0x00u);
  7598  0302  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  7599  0303  1283               	bcf	3,5	;RP0=0, select bank0
  7600  0304  1303               	bcf	3,6	;RP1=0, select bank0
  7601  0305  0826               	movf	LCD_SetUp@D4,w
  7602  0306  120A  118A  2325  120A  118A  	fcall	_GPIO_PinDirection
  7603                           
  7604                           ;lcd.c: 181: GPIO_PinDirection(D5,0x00u);
  7605  030B  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  7606  030C  1283               	bcf	3,5	;RP0=0, select bank0
  7607  030D  1303               	bcf	3,6	;RP1=0, select bank0
  7608  030E  0827               	movf	LCD_SetUp@D5,w
  7609  030F  120A  118A  2325  120A  118A  	fcall	_GPIO_PinDirection
  7610                           
  7611                           ;lcd.c: 182: GPIO_PinDirection(D6,0x00u);
  7612  0314  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  7613  0315  1283               	bcf	3,5	;RP0=0, select bank0
  7614  0316  1303               	bcf	3,6	;RP1=0, select bank0
  7615  0317  0828               	movf	LCD_SetUp@D6,w
  7616  0318  120A  118A  2325  120A  118A  	fcall	_GPIO_PinDirection
  7617                           
  7618                           ;lcd.c: 183: GPIO_PinDirection(D7,0x00u);
  7619  031D  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  7620  031E  1283               	bcf	3,5	;RP0=0, select bank0
  7621  031F  1303               	bcf	3,6	;RP1=0, select bank0
  7622  0320  0829               	movf	LCD_SetUp@D7,w
  7623  0321  120A  118A  2325   	fcall	_GPIO_PinDirection
  7624  0324  0008               	return
  7625  0325                     __end_of_LCD_SetUp:	
  7626                           
  7627                           	psect	text39
  7628  0009                     __ptext39:	
  7629 ;; *************** function _LCD_Init *****************
  7630 ;; Defined at:
  7631 ;;		line 198 in file "../00-libfiles/lcd.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  v_lcdNoOfLin    1    wreg     unsigned char 
  7634 ;;  v_MaxCharsPe    1   12[COMMON] unsigned char 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;  v_lcdNoOfLin    1    0[BANK0 ] unsigned char 
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  1    wreg      void 
  7639 ;; Registers used:
  7640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7646 ;;      Params:         1       0       0       0       0
  7647 ;;      Locals:         0       1       0       0       0
  7648 ;;      Temps:          1       0       0       0       0
  7649 ;;      Totals:         2       1       0       0       0
  7650 ;;Total ram usage:        3 bytes
  7651 ;; Hardware stack levels used:    1
  7652 ;; Hardware stack levels required when called:    6
  7653 ;; This function calls:
  7654 ;;		_DELAY_ms
  7655 ;;		_LCD_Clear
  7656 ;;		_LCD_CmdWrite
  7657 ;;		_lcd_Reset
  7658 ;; This function is called by:
  7659 ;;		_LCD_8bit_test
  7660 ;;		_LCD_4bit_test
  7661 ;; This function uses a non-reentrant model
  7662 ;;
  7663                           
  7664                           
  7665                           ;psect for function _LCD_Init
  7666  0009                     _LCD_Init:	
  7667                           
  7668                           ;incstack = 0
  7669                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7670                           ;LCD_Init@v_lcdNoOfLines_u8 stored from wreg
  7671  0009  1283               	bcf	3,5	;RP0=0, select bank0
  7672  000A  1303               	bcf	3,6	;RP1=0, select bank0
  7673  000B  00A0               	movwf	LCD_Init@v_lcdNoOfLines_u8
  7674                           
  7675                           ;lcd.c: 202: LCDConfig.v_MaxSupportedChars_U8 = v_MaxCharsPerLine_u8;
  7676  000C  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  7677  000D  00FD               	movwf	??_LCD_Init
  7678  000E  087D               	movf	??_LCD_Init,w
  7679  000F  1683               	bsf	3,5	;RP0=1, select bank1
  7680  0010  1303               	bcf	3,6	;RP1=0, select bank1
  7681  0011  00A1               	movwf	(_LCDConfig^(0+128)+1)
  7682                           
  7683                           ;lcd.c: 203: LCDConfig.v_MaxSupportedLines_U8 = v_lcdNoOfLines_u8;
  7684  0012  1283               	bcf	3,5	;RP0=0, select bank0
  7685  0013  1303               	bcf	3,6	;RP1=0, select bank0
  7686  0014  0820               	movf	LCD_Init@v_lcdNoOfLines_u8,w
  7687  0015  00FD               	movwf	??_LCD_Init
  7688  0016  087D               	movf	??_LCD_Init,w
  7689  0017  1683               	bsf	3,5	;RP0=1, select bank1
  7690  0018  1303               	bcf	3,6	;RP1=0, select bank1
  7691  0019  00A0               	movwf	_LCDConfig^(0+128)
  7692                           
  7693                           ;lcd.c: 204: if(v_lcdNoOfLines_u8 > 0x02)
  7694  001A  3003               	movlw	3
  7695  001B  1283               	bcf	3,5	;RP0=0, select bank0
  7696  001C  1303               	bcf	3,6	;RP1=0, select bank0
  7697  001D  0220               	subwf	LCD_Init@v_lcdNoOfLines_u8,w
  7698  001E  1C03               	skipc
  7699  001F  282E               	goto	l2954
  7700                           
  7701                           ;lcd.c: 205: {
  7702                           ;lcd.c: 206: ARR_LcdLineNumAddress_U8[0x02] = 0x90 + (v_MaxCharsPerLine_u8 & 0x0fu);
  7703  0020  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  7704  0021  390F               	andlw	15
  7705  0022  3E90               	addlw	144
  7706  0023  00FD               	movwf	??_LCD_Init
  7707  0024  087D               	movf	??_LCD_Init,w
  7708  0025  1683               	bsf	3,5	;RP0=1, select bank1
  7709  0026  1303               	bcf	3,6	;RP1=0, select bank1
  7710  0027  00C7               	movwf	(_ARR_LcdLineNumAddress_U8^(0+128)+2)
  7711                           
  7712                           ;lcd.c: 207: ARR_LcdLineNumAddress_U8[0x03] = 0xd0 + (v_MaxCharsPerLine_u8 & 0x0fu);
  7713  0028  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  7714  0029  390F               	andlw	15
  7715  002A  3ED0               	addlw	208
  7716  002B  00FD               	movwf	??_LCD_Init
  7717  002C  087D               	movf	??_LCD_Init,w
  7718  002D  00C8               	movwf	(_ARR_LcdLineNumAddress_U8^(0+128)+3)
  7719  002E                     l2954:	
  7720                           
  7721                           ;lcd.c: 208: }
  7722                           ;lcd.c: 210: DELAY_ms(100);
  7723  002E  3064               	movlw	100
  7724  002F  00F2               	movwf	DELAY_ms@ms_count
  7725  0030  3000               	movlw	0
  7726  0031  00F3               	movwf	DELAY_ms@ms_count+1
  7727  0032  160A  118A  233F  120A  118A  	fcall	_DELAY_ms
  7728                           
  7729                           ;lcd.c: 212: if(LCDConfig.v_LcdMode_U8 == 8u)
  7730  0037  3008               	movlw	8
  7731  0038  1683               	bsf	3,5	;RP0=1, select bank1
  7732  0039  1303               	bcf	3,6	;RP1=0, select bank1
  7733  003A  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  7734  003B  1D03               	btfss	3,2
  7735  003C  283F               	goto	l2960
  7736                           
  7737                           ;lcd.c: 213: {
  7738                           ;lcd.c: 214: LCD_CmdWrite(0x38u);
  7739  003D  3038               	movlw	56
  7740  003E  284B               	goto	L7
  7741  003F                     l2960:	
  7742                           ;lcd.c: 215: }
  7743                           
  7744                           
  7745                           ;lcd.c: 216: else if(LCDConfig.v_LcdMode_U8 == 4u)
  7746  003F  3004               	movlw	4
  7747  0040  1683               	bsf	3,5	;RP0=1, select bank1
  7748  0041  1303               	bcf	3,6	;RP1=0, select bank1
  7749  0042  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  7750  0043  1D03               	btfss	3,2
  7751  0044  2850               	goto	l359
  7752                           
  7753                           ;lcd.c: 217: {
  7754                           ;lcd.c: 218: lcd_Reset();
  7755  0045  160A  118A  25EA  120A  118A  	fcall	_lcd_Reset
  7756                           
  7757                           ;lcd.c: 219: LCD_CmdWrite(0x28u);
  7758  004A  3028               	movlw	40
  7759  004B                     L7:	
  7760  004B  160A  118A  24BA  120A  118A  	fcall	_LCD_CmdWrite
  7761  0050                     l359:	
  7762                           
  7763                           ;lcd.c: 220: }
  7764                           ;lcd.c: 222: LCD_CmdWrite(0x0Eu);
  7765  0050  300E               	movlw	14
  7766  0051  160A  118A  24BA  120A  118A  	fcall	_LCD_CmdWrite
  7767                           
  7768                           ;lcd.c: 223: LCD_Clear();
  7769  0056  160A  118A  22D9   	fcall	_LCD_Clear
  7770  0059  0008               	return
  7771  005A                     __end_of_LCD_Init:	
  7772                           
  7773                           	psect	text40
  7774  15EA                     __ptext40:	
  7775 ;; *************** function _lcd_Reset *****************
  7776 ;; Defined at:
  7777 ;;		line 913 in file "../00-libfiles/lcd.c"
  7778 ;; Parameters:    Size  Location     Type
  7779 ;;		None
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;		None
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  1    wreg      void 
  7784 ;; Registers used:
  7785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7791 ;;      Params:         0       0       0       0       0
  7792 ;;      Locals:         0       0       0       0       0
  7793 ;;      Temps:          0       0       0       0       0
  7794 ;;      Totals:         0       0       0       0       0
  7795 ;;Total ram usage:        0 bytes
  7796 ;; Hardware stack levels used:    1
  7797 ;; Hardware stack levels required when called:    2
  7798 ;; This function calls:
  7799 ;;		_DELAY_ms
  7800 ;;		_DELAY_us
  7801 ;;		_lcd_SendCmdSignals
  7802 ;;		_lcd_SendHigherNibble
  7803 ;; This function is called by:
  7804 ;;		_LCD_Init
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           
  7809                           ;psect for function _lcd_Reset
  7810  15EA                     _lcd_Reset:	
  7811                           
  7812                           ;lcd.c: 916: lcd_SendHigherNibble(0x30);
  7813                           
  7814                           ;incstack = 0
  7815                           ; Regs used in _lcd_Reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7816  15EA  3030               	movlw	48
  7817  15EB  160A  118A  2524  160A  118A  	fcall	_lcd_SendHigherNibble
  7818                           
  7819                           ;lcd.c: 917: lcd_SendCmdSignals();
  7820  15F0  160A  118A  245F  160A  118A  	fcall	_lcd_SendCmdSignals
  7821                           
  7822                           ;lcd.c: 918: DELAY_ms(100);
  7823  15F5  3064               	movlw	100
  7824  15F6  00F2               	movwf	DELAY_ms@ms_count
  7825  15F7  3000               	movlw	0
  7826  15F8  00F3               	movwf	DELAY_ms@ms_count+1
  7827  15F9  160A  118A  233F  160A  118A  	fcall	_DELAY_ms
  7828                           
  7829                           ;lcd.c: 919: lcd_SendHigherNibble(0x30);
  7830  15FE  3030               	movlw	48
  7831  15FF  160A  118A  2524  160A  118A  	fcall	_lcd_SendHigherNibble
  7832                           
  7833                           ;lcd.c: 920: lcd_SendCmdSignals();
  7834  1604  160A  118A  245F  160A  118A  	fcall	_lcd_SendCmdSignals
  7835                           
  7836                           ;lcd.c: 921: DELAY_us(200);
  7837  1609  30C8               	movlw	200
  7838  160A  00F0               	movwf	DELAY_us@us_count
  7839  160B  3000               	movlw	0
  7840  160C  00F1               	movwf	DELAY_us@us_count+1
  7841  160D  160A  118A  22CE  160A  118A  	fcall	_DELAY_us
  7842                           
  7843                           ;lcd.c: 922: lcd_SendHigherNibble(0x30);
  7844  1612  3030               	movlw	48
  7845  1613  160A  118A  2524  160A  118A  	fcall	_lcd_SendHigherNibble
  7846                           
  7847                           ;lcd.c: 923: lcd_SendCmdSignals();
  7848  1618  160A  118A  245F  160A  118A  	fcall	_lcd_SendCmdSignals
  7849                           
  7850                           ;lcd.c: 924: DELAY_us(200);
  7851  161D  30C8               	movlw	200
  7852  161E  00F0               	movwf	DELAY_us@us_count
  7853  161F  3000               	movlw	0
  7854  1620  00F1               	movwf	DELAY_us@us_count+1
  7855  1621  160A  118A  22CE  160A  118A  	fcall	_DELAY_us
  7856                           
  7857                           ;lcd.c: 925: lcd_SendHigherNibble(0x20);
  7858  1626  3020               	movlw	32
  7859  1627  160A  118A  2524  160A  118A  	fcall	_lcd_SendHigherNibble
  7860                           
  7861                           ;lcd.c: 926: lcd_SendCmdSignals();
  7862  162C  160A  118A  245F  160A  118A  	fcall	_lcd_SendCmdSignals
  7863                           
  7864                           ;lcd.c: 927: DELAY_us(200);
  7865  1631  30C8               	movlw	200
  7866  1632  00F0               	movwf	DELAY_us@us_count
  7867  1633  3000               	movlw	0
  7868  1634  00F1               	movwf	DELAY_us@us_count+1
  7869  1635  160A  118A  22CE   	fcall	_DELAY_us
  7870  1638  0008               	return
  7871  1639                     __end_of_lcd_Reset:	
  7872                           
  7873                           	psect	text41
  7874  12D9                     __ptext41:	
  7875 ;; *************** function _LCD_Clear *****************
  7876 ;; Defined at:
  7877 ;;		line 237 in file "../00-libfiles/lcd.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;		None
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;		None
  7882 ;; Return value:  Size  Location     Type
  7883 ;;                  1    wreg      void 
  7884 ;; Registers used:
  7885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7886 ;; Tracked objects:
  7887 ;;		On entry : 0/0
  7888 ;;		On exit  : 0/0
  7889 ;;		Unchanged: 0/0
  7890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7891 ;;      Params:         0       0       0       0       0
  7892 ;;      Locals:         0       0       0       0       0
  7893 ;;      Temps:          0       0       0       0       0
  7894 ;;      Totals:         0       0       0       0       0
  7895 ;;Total ram usage:        0 bytes
  7896 ;; Hardware stack levels used:    1
  7897 ;; Hardware stack levels required when called:    5
  7898 ;; This function calls:
  7899 ;;		_LCD_CmdWrite
  7900 ;;		_LCD_GoToLine
  7901 ;; This function is called by:
  7902 ;;		_LCD_Init
  7903 ;; This function uses a non-reentrant model
  7904 ;;
  7905                           
  7906                           
  7907                           ;psect for function _LCD_Clear
  7908  12D9                     _LCD_Clear:	
  7909                           
  7910                           ;lcd.c: 239: LCD_CmdWrite(0x01u);
  7911                           
  7912                           ;incstack = 0
  7913                           ; Regs used in _LCD_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7914  12D9  3001               	movlw	1
  7915  12DA  160A  118A  24BA  160A  118A  	fcall	_LCD_CmdWrite
  7916                           
  7917                           ;lcd.c: 240: LCD_GoToLine(0x00);
  7918  12DF  3000               	movlw	0
  7919  12E0  160A  118A  2367   	fcall	_LCD_GoToLine
  7920  12E3  0008               	return
  7921  12E4                     __end_of_LCD_Clear:	
  7922                           
  7923                           	psect	text42
  7924  1367                     __ptext42:	
  7925 ;; *************** function _LCD_GoToLine *****************
  7926 ;; Defined at:
  7927 ;;		line 265 in file "../00-libfiles/lcd.c"
  7928 ;; Parameters:    Size  Location     Type
  7929 ;;  v_lineNumber    1    wreg     unsigned char 
  7930 ;; Auto vars:     Size  Location     Type
  7931 ;;  v_lineNumber    1   11[COMMON] unsigned char 
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  1    wreg      void 
  7934 ;; Registers used:
  7935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7936 ;; Tracked objects:
  7937 ;;		On entry : 0/0
  7938 ;;		On exit  : 0/0
  7939 ;;		Unchanged: 0/0
  7940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7941 ;;      Params:         0       0       0       0       0
  7942 ;;      Locals:         1       0       0       0       0
  7943 ;;      Temps:          1       0       0       0       0
  7944 ;;      Totals:         2       0       0       0       0
  7945 ;;Total ram usage:        2 bytes
  7946 ;; Hardware stack levels used:    1
  7947 ;; Hardware stack levels required when called:    4
  7948 ;; This function calls:
  7949 ;;		_LCD_CmdWrite
  7950 ;; This function is called by:
  7951 ;;		_LCD_Clear
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955                           
  7956                           ;psect for function _LCD_GoToLine
  7957  1367                     _LCD_GoToLine:	
  7958                           
  7959                           ;incstack = 0
  7960                           ; Regs used in _LCD_GoToLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7961                           ;LCD_GoToLine@v_lineNumber_u8 stored from wreg
  7962  1367  00FB               	movwf	LCD_GoToLine@v_lineNumber_u8
  7963                           
  7964                           ;lcd.c: 267: if(v_lineNumber_u8 < LCDConfig.v_MaxSupportedLines_U8)
  7965  1368  1683               	bsf	3,5	;RP0=1, select bank1
  7966  1369  1303               	bcf	3,6	;RP1=0, select bank1
  7967  136A  0820               	movf	_LCDConfig^(0+128),w
  7968  136B  027B               	subwf	LCD_GoToLine@v_lineNumber_u8,w
  7969  136C  1803               	skipnc
  7970  136D  0008               	return
  7971                           
  7972                           ;lcd.c: 268: {
  7973                           ;lcd.c: 271: v_LcdTrackCursorPos_U8 = 0x00;
  7974  136E  01B7               	clrf	_v_LcdTrackCursorPos_U8^(0+128)
  7975                           
  7976                           ;lcd.c: 272: v_LcdTrackLineNum_U8 = v_lineNumber_u8;
  7977  136F  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  7978  1370  00FA               	movwf	??_LCD_GoToLine
  7979  1371  087A               	movf	??_LCD_GoToLine,w
  7980  1372  00B8               	movwf	_v_LcdTrackLineNum_U8^(0+128)
  7981                           
  7982                           ;lcd.c: 273: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_lineNumber_u8]);
  7983  1373  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  7984  1374  3EC5               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  7985  1375  0084               	movwf	4
  7986  1376  1383               	bcf	3,7	;select IRP bank1
  7987  1377  0800               	movf	0,w
  7988  1378  160A  118A  24BA   	fcall	_LCD_CmdWrite
  7989  137B  0008               	return
  7990  137C                     __end_of_LCD_GoToLine:	
  7991                           
  7992                           	psect	text43
  7993  1415                     __ptext43:	
  7994 ;; *************** function _LCD_DisplayString *****************
  7995 ;; Defined at:
  7996 ;;		line 427 in file "../00-libfiles/lcd.c"
  7997 ;; Parameters:    Size  Location     Type
  7998 ;;  ptr_stringPo    2    0[BANK0 ] PTR const unsigned char 
  7999 ;;		 -> STR_12(15), STR_11(17), STR_8(15), STR_7(17), 
  8000 ;; Auto vars:     Size  Location     Type
  8001 ;;		None
  8002 ;; Return value:  Size  Location     Type
  8003 ;;                  1    wreg      void 
  8004 ;; Registers used:
  8005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8006 ;; Tracked objects:
  8007 ;;		On entry : 0/0
  8008 ;;		On exit  : 0/0
  8009 ;;		Unchanged: 0/0
  8010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8011 ;;      Params:         0       2       0       0       0
  8012 ;;      Locals:         0       0       0       0       0
  8013 ;;      Temps:          0       0       0       0       0
  8014 ;;      Totals:         0       2       0       0       0
  8015 ;;Total ram usage:        2 bytes
  8016 ;; Hardware stack levels used:    1
  8017 ;; Hardware stack levels required when called:    6
  8018 ;; This function calls:
  8019 ;;		_LCD_DisplayChar
  8020 ;; This function is called by:
  8021 ;;		_LCD_8bit_test
  8022 ;;		_LCD_4bit_test
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026                           
  8027                           ;psect for function _LCD_DisplayString
  8028  1415                     _LCD_DisplayString:	
  8029  1415                     l2970:	
  8030                           ;lcd.c: 429: while((*ptr_stringPointer_u8)!=0)
  8031                           
  8032                           ;incstack = 0
  8033 ;; using string table level
  8034                           ; Regs used in _LCD_DisplayString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8035                           
  8036  1415  1283               	bcf	3,5	;RP0=0, select bank0
  8037  1416  1303               	bcf	3,6	;RP1=0, select bank0
  8038  1417  0821               	movf	LCD_DisplayString@ptr_stringPointer_u8+1,w
  8039  1418  00FF               	movwf	127
  8040  1419  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  8041  141A  0084               	movwf	4
  8042  141B  120A  158A  2000  160A  118A  	fcall	stringtab
  8043  1420  3A00               	xorlw	0
  8044  1421  1903               	btfsc	3,2
  8045  1422  0008               	return
  8046                           
  8047                           ;lcd.c: 430: LCD_DisplayChar(*ptr_stringPointer_u8++);
  8048  1423  1283               	bcf	3,5	;RP0=0, select bank0
  8049  1424  1303               	bcf	3,6	;RP1=0, select bank0
  8050  1425  0821               	movf	LCD_DisplayString@ptr_stringPointer_u8+1,w
  8051  1426  00FF               	movwf	127
  8052  1427  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  8053  1428  0084               	movwf	4
  8054  1429  120A  158A  2000  160A  118A  	fcall	stringtab
  8055  142E  160A  118A  2392  160A  118A  	fcall	_LCD_DisplayChar
  8056  1433  3001               	movlw	1
  8057  1434  1283               	bcf	3,5	;RP0=0, select bank0
  8058  1435  1303               	bcf	3,6	;RP1=0, select bank0
  8059  1436  07A0               	addwf	LCD_DisplayString@ptr_stringPointer_u8,f
  8060  1437  1803               	skipnc
  8061  1438  0AA1               	incf	LCD_DisplayString@ptr_stringPointer_u8+1,f
  8062  1439  2C15               	goto	l2970
  8063  143A                     __end_of_LCD_DisplayString:	
  8064                           
  8065                           	psect	text44
  8066  1392                     __ptext44:	
  8067 ;; *************** function _LCD_DisplayChar *****************
  8068 ;; Defined at:
  8069 ;;		line 392 in file "../00-libfiles/lcd.c"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;  v_lcdData_u8    1    wreg     unsigned char 
  8072 ;; Auto vars:     Size  Location     Type
  8073 ;;  v_lcdData_u8    1   12[COMMON] unsigned char 
  8074 ;; Return value:  Size  Location     Type
  8075 ;;                  1    wreg      void 
  8076 ;; Registers used:
  8077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8078 ;; Tracked objects:
  8079 ;;		On entry : 0/0
  8080 ;;		On exit  : 0/0
  8081 ;;		Unchanged: 0/0
  8082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8083 ;;      Params:         0       0       0       0       0
  8084 ;;      Locals:         1       0       0       0       0
  8085 ;;      Temps:          1       0       0       0       0
  8086 ;;      Totals:         2       0       0       0       0
  8087 ;;Total ram usage:        2 bytes
  8088 ;; Hardware stack levels used:    1
  8089 ;; Hardware stack levels required when called:    5
  8090 ;; This function calls:
  8091 ;;		_LCD_GoToNextLine
  8092 ;;		_lcd_DataWrite
  8093 ;; This function is called by:
  8094 ;;		_LCD_DisplayString
  8095 ;; This function uses a non-reentrant model
  8096 ;;
  8097                           
  8098                           
  8099                           ;psect for function _LCD_DisplayChar
  8100  1392                     _LCD_DisplayChar:	
  8101                           
  8102                           ;incstack = 0
  8103                           ; Regs used in _LCD_DisplayChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8104                           ;LCD_DisplayChar@v_lcdData_u8 stored from wreg
  8105  1392  00FC               	movwf	LCD_DisplayChar@v_lcdData_u8
  8106                           
  8107                           ;lcd.c: 394: if((v_LcdTrackCursorPos_U8>=LCDConfig.v_MaxSupportedChars_U8) || (v_lcdData
      +                          _u8=='\n'))
  8108  1393  1683               	bsf	3,5	;RP0=1, select bank1
  8109  1394  1303               	bcf	3,6	;RP1=0, select bank1
  8110  1395  0821               	movf	(_LCDConfig^(0+128)+1),w
  8111  1396  0237               	subwf	_v_LcdTrackCursorPos_U8^(0+128),w
  8112  1397  1803               	skipnc
  8113  1398  2B9D               	goto	l2738
  8114  1399  300A               	movlw	10
  8115  139A  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  8116  139B  1D03               	btfss	3,2
  8117  139C  2BA2               	goto	l2740
  8118  139D                     l2738:	
  8119                           
  8120                           ;lcd.c: 395: {
  8121                           ;lcd.c: 398: LCD_GoToNextLine();
  8122  139D  160A  118A  2353  160A  118A  	fcall	_LCD_GoToNextLine
  8123  13A2                     l2740:	
  8124                           
  8125                           ;lcd.c: 399: }
  8126                           ;lcd.c: 400: if(v_lcdData_u8!='\n')
  8127  13A2  300A               	movlw	10
  8128  13A3  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  8129  13A4  1903               	btfsc	3,2
  8130  13A5  0008               	return
  8131                           
  8132                           ;lcd.c: 401: {
  8133                           ;lcd.c: 403: lcd_DataWrite(v_lcdData_u8);
  8134  13A6  087C               	movf	LCD_DisplayChar@v_lcdData_u8,w
  8135  13A7  160A  118A  24EF   	fcall	_lcd_DataWrite
  8136                           
  8137                           ;lcd.c: 404: v_LcdTrackCursorPos_U8++;
  8138  13AA  3001               	movlw	1
  8139  13AB  00FB               	movwf	??_LCD_DisplayChar
  8140  13AC  087B               	movf	??_LCD_DisplayChar,w
  8141  13AD  1683               	bsf	3,5	;RP0=1, select bank1
  8142  13AE  1303               	bcf	3,6	;RP1=0, select bank1
  8143  13AF  07B7               	addwf	_v_LcdTrackCursorPos_U8^(0+128),f
  8144  13B0  0008               	return
  8145  13B1                     __end_of_LCD_DisplayChar:	
  8146                           
  8147                           	psect	text45
  8148  14EF                     __ptext45:	
  8149 ;; *************** function _lcd_DataWrite *****************
  8150 ;; Defined at:
  8151 ;;		line 826 in file "../00-libfiles/lcd.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;  dataByte        1    wreg     unsigned char 
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;  dataByte        1    9[COMMON] unsigned char 
  8156 ;; Return value:  Size  Location     Type
  8157 ;;                  1    wreg      void 
  8158 ;; Registers used:
  8159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8160 ;; Tracked objects:
  8161 ;;		On entry : 0/0
  8162 ;;		On exit  : 0/0
  8163 ;;		Unchanged: 0/0
  8164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8165 ;;      Params:         0       0       0       0       0
  8166 ;;      Locals:         1       0       0       0       0
  8167 ;;      Temps:          2       0       0       0       0
  8168 ;;      Totals:         3       0       0       0       0
  8169 ;;Total ram usage:        3 bytes
  8170 ;; Hardware stack levels used:    1
  8171 ;; Hardware stack levels required when called:    3
  8172 ;; This function calls:
  8173 ;;		_lcd_BusyCheck
  8174 ;;		_lcd_SendDataSignals
  8175 ;;		_lcd_SendHigherNibble
  8176 ;;		_lcd_SendLowerNibble
  8177 ;; This function is called by:
  8178 ;;		_LCD_DisplayChar
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182                           
  8183                           ;psect for function _lcd_DataWrite
  8184  14EF                     _lcd_DataWrite:	
  8185                           
  8186                           ;incstack = 0
  8187                           ; Regs used in _lcd_DataWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8188                           ;lcd_DataWrite@dataByte stored from wreg
  8189  14EF  00F9               	movwf	lcd_DataWrite@dataByte
  8190                           
  8191                           ;lcd.c: 828: lcd_BusyCheck();
  8192  14F0  120A  158A  2774  160A  118A  	fcall	_lcd_BusyCheck
  8193                           
  8194                           ;lcd.c: 829: if(LCDConfig.v_LcdMode_U8 == 8u)
  8195  14F5  3008               	movlw	8
  8196  14F6  1683               	bsf	3,5	;RP0=1, select bank1
  8197  14F7  1303               	bcf	3,6	;RP1=0, select bank1
  8198  14F8  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  8199  14F9  1D03               	btfss	3,2
  8200  14FA  2D02               	goto	l2526
  8201                           
  8202                           ;lcd.c: 830: {
  8203                           ;lcd.c: 831: lcd_SendLowerNibble(dataByte);
  8204  14FB  0879               	movf	lcd_DataWrite@dataByte,w
  8205  14FC  160A  118A  2564  160A  118A  	fcall	_lcd_SendLowerNibble
  8206                           
  8207                           ;lcd.c: 832: }
  8208  1501  2D1A               	goto	l2530
  8209  1502                     l2526:	
  8210                           
  8211                           ;lcd.c: 833: else
  8212                           ;lcd.c: 834: {
  8213                           ;lcd.c: 835: lcd_SendHigherNibble(dataByte);
  8214  1502  0879               	movf	lcd_DataWrite@dataByte,w
  8215  1503  160A  118A  2524  160A  118A  	fcall	_lcd_SendHigherNibble
  8216                           
  8217                           ;lcd.c: 836: lcd_SendDataSignals();
  8218  1508  160A  118A  248C  160A  118A  	fcall	_lcd_SendDataSignals
  8219                           
  8220                           ;lcd.c: 837: dataByte = dataByte << 4;
  8221  150D  0879               	movf	lcd_DataWrite@dataByte,w
  8222  150E  00F7               	movwf	??_lcd_DataWrite
  8223  150F  3003               	movlw	3
  8224  1510                     u2745:	
  8225  1510  1003               	clrc
  8226  1511  0DF7               	rlf	??_lcd_DataWrite,f
  8227  1512  3EFF               	addlw	-1
  8228  1513  1D03               	skipz
  8229  1514  2D10               	goto	u2745
  8230  1515  1003               	clrc
  8231  1516  0D77               	rlf	??_lcd_DataWrite,w
  8232  1517  00F8               	movwf	??_lcd_DataWrite+1
  8233  1518  0878               	movf	??_lcd_DataWrite+1,w
  8234  1519  00F9               	movwf	lcd_DataWrite@dataByte
  8235  151A                     l2530:	
  8236                           
  8237                           ;lcd.c: 838: }
  8238                           ;lcd.c: 840: lcd_SendHigherNibble(dataByte);
  8239  151A  0879               	movf	lcd_DataWrite@dataByte,w
  8240  151B  160A  118A  2524  160A  118A  	fcall	_lcd_SendHigherNibble
  8241                           
  8242                           ;lcd.c: 841: lcd_SendDataSignals();
  8243  1520  160A  118A  248C   	fcall	_lcd_SendDataSignals
  8244  1523  0008               	return
  8245  1524                     __end_of_lcd_DataWrite:	
  8246                           
  8247                           	psect	text46
  8248  148C                     __ptext46:	
  8249 ;; *************** function _lcd_SendDataSignals *****************
  8250 ;; Defined at:
  8251 ;;		line 1002 in file "../00-libfiles/lcd.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;		None
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;		None
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  1    wreg      void 
  8258 ;; Registers used:
  8259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/0
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8265 ;;      Params:         0       0       0       0       0
  8266 ;;      Locals:         0       0       0       0       0
  8267 ;;      Temps:          0       0       0       0       0
  8268 ;;      Totals:         0       0       0       0       0
  8269 ;;Total ram usage:        0 bytes
  8270 ;; Hardware stack levels used:    1
  8271 ;; Hardware stack levels required when called:    1
  8272 ;; This function calls:
  8273 ;;		_DELAY_us
  8274 ;;		_GPIO_PinWrite
  8275 ;; This function is called by:
  8276 ;;		_lcd_DataWrite
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           
  8281                           ;psect for function _lcd_SendDataSignals
  8282  148C                     _lcd_SendDataSignals:	
  8283                           
  8284                           ;lcd.c: 1004: GPIO_PinWrite(LCDConfig.RS,1);
  8285                           
  8286                           ;incstack = 0
  8287                           ; Regs used in _lcd_SendDataSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8288  148C  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  8289  148D  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  8290  148E  1683               	bsf	3,5	;RP0=1, select bank1
  8291  148F  1303               	bcf	3,6	;RP1=0, select bank1
  8292  1490  0823               	movf	(_LCDConfig^(0+128)+3),w
  8293  1491  120A  118A  23FE  160A  118A  	fcall	_GPIO_PinWrite
  8294                           
  8295                           ;lcd.c: 1005: GPIO_PinWrite(LCDConfig.RW,0);
  8296  1496  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  8297  1497  1683               	bsf	3,5	;RP0=1, select bank1
  8298  1498  1303               	bcf	3,6	;RP1=0, select bank1
  8299  1499  0824               	movf	(_LCDConfig^(0+128)+4),w
  8300  149A  120A  118A  23FE  160A  118A  	fcall	_GPIO_PinWrite
  8301                           
  8302                           ;lcd.c: 1006: GPIO_PinWrite(LCDConfig.EN,1);
  8303  149F  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  8304  14A0  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  8305  14A1  1683               	bsf	3,5	;RP0=1, select bank1
  8306  14A2  1303               	bcf	3,6	;RP1=0, select bank1
  8307  14A3  0825               	movf	(_LCDConfig^(0+128)+5),w
  8308  14A4  120A  118A  23FE  160A  118A  	fcall	_GPIO_PinWrite
  8309                           
  8310                           ;lcd.c: 1007: DELAY_us(10);
  8311  14A9  300A               	movlw	10
  8312  14AA  00F0               	movwf	DELAY_us@us_count
  8313  14AB  3000               	movlw	0
  8314  14AC  00F1               	movwf	DELAY_us@us_count+1
  8315  14AD  160A  118A  22CE  160A  118A  	fcall	_DELAY_us
  8316                           
  8317                           ;lcd.c: 1008: GPIO_PinWrite(LCDConfig.EN,0);
  8318  14B2  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  8319  14B3  1683               	bsf	3,5	;RP0=1, select bank1
  8320  14B4  1303               	bcf	3,6	;RP1=0, select bank1
  8321  14B5  0825               	movf	(_LCDConfig^(0+128)+5),w
  8322  14B6  120A  118A  23FE   	fcall	_GPIO_PinWrite
  8323  14B9  0008               	return
  8324  14BA                     __end_of_lcd_SendDataSignals:	
  8325                           
  8326                           	psect	text47
  8327  1353                     __ptext47:	
  8328 ;; *************** function _LCD_GoToNextLine *****************
  8329 ;; Defined at:
  8330 ;;		line 292 in file "../00-libfiles/lcd.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;		None
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;		None
  8335 ;; Return value:  Size  Location     Type
  8336 ;;                  1    wreg      void 
  8337 ;; Registers used:
  8338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8344 ;;      Params:         0       0       0       0       0
  8345 ;;      Locals:         0       0       0       0       0
  8346 ;;      Temps:          1       0       0       0       0
  8347 ;;      Totals:         1       0       0       0       0
  8348 ;;Total ram usage:        1 bytes
  8349 ;; Hardware stack levels used:    1
  8350 ;; Hardware stack levels required when called:    4
  8351 ;; This function calls:
  8352 ;;		_LCD_CmdWrite
  8353 ;; This function is called by:
  8354 ;;		_LCD_DisplayChar
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           
  8359                           ;psect for function _LCD_GoToNextLine
  8360  1353                     _LCD_GoToNextLine:	
  8361                           
  8362                           ;lcd.c: 296: v_LcdTrackLineNum_U8++;
  8363                           
  8364                           ;incstack = 0
  8365                           ; Regs used in _LCD_GoToNextLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8366  1353  3001               	movlw	1
  8367  1354  00FA               	movwf	??_LCD_GoToNextLine
  8368  1355  087A               	movf	??_LCD_GoToNextLine,w
  8369  1356  1683               	bsf	3,5	;RP0=1, select bank1
  8370  1357  1303               	bcf	3,6	;RP1=0, select bank1
  8371  1358  07B8               	addwf	_v_LcdTrackLineNum_U8^(0+128),f
  8372                           
  8373                           ;lcd.c: 297: v_LcdTrackCursorPos_U8 = 0x00;
  8374  1359  01B7               	clrf	_v_LcdTrackCursorPos_U8^(0+128)
  8375                           
  8376                           ;lcd.c: 298: if(v_LcdTrackLineNum_U8 >= LCDConfig.v_MaxSupportedLines_U8)
  8377  135A  0820               	movf	_LCDConfig^(0+128),w
  8378  135B  0238               	subwf	_v_LcdTrackLineNum_U8^(0+128),w
  8379  135C  1803               	btfsc	3,0
  8380                           
  8381                           ;lcd.c: 299: v_LcdTrackLineNum_U8 = 0x00;
  8382  135D  01B8               	clrf	_v_LcdTrackLineNum_U8^(0+128)
  8383                           
  8384                           ;lcd.c: 300: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_LcdTrackLineNum_U8]);
  8385  135E  0838               	movf	_v_LcdTrackLineNum_U8^(0+128),w
  8386  135F  3EC5               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  8387  1360  0084               	movwf	4
  8388  1361  1383               	bcf	3,7	;select IRP bank1
  8389  1362  0800               	movf	0,w
  8390  1363  160A  118A  24BA   	fcall	_LCD_CmdWrite
  8391  1366  0008               	return
  8392  1367                     __end_of_LCD_GoToNextLine:	
  8393                           
  8394                           	psect	text48
  8395  14BA                     __ptext48:	
  8396 ;; *************** function _LCD_CmdWrite *****************
  8397 ;; Defined at:
  8398 ;;		line 358 in file "../00-libfiles/lcd.c"
  8399 ;; Parameters:    Size  Location     Type
  8400 ;;  v_lcdCmd_u8     1    wreg     unsigned char 
  8401 ;; Auto vars:     Size  Location     Type
  8402 ;;  v_lcdCmd_u8     1    9[COMMON] unsigned char 
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  1    wreg      void 
  8405 ;; Registers used:
  8406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8407 ;; Tracked objects:
  8408 ;;		On entry : 0/0
  8409 ;;		On exit  : 0/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8412 ;;      Params:         0       0       0       0       0
  8413 ;;      Locals:         1       0       0       0       0
  8414 ;;      Temps:          2       0       0       0       0
  8415 ;;      Totals:         3       0       0       0       0
  8416 ;;Total ram usage:        3 bytes
  8417 ;; Hardware stack levels used:    1
  8418 ;; Hardware stack levels required when called:    3
  8419 ;; This function calls:
  8420 ;;		_lcd_BusyCheck
  8421 ;;		_lcd_SendCmdSignals
  8422 ;;		_lcd_SendHigherNibble
  8423 ;;		_lcd_SendLowerNibble
  8424 ;; This function is called by:
  8425 ;;		_LCD_Init
  8426 ;;		_LCD_Clear
  8427 ;;		_LCD_GoToLine
  8428 ;;		_LCD_GoToNextLine
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           
  8433                           ;psect for function _LCD_CmdWrite
  8434  14BA                     _LCD_CmdWrite:	
  8435                           
  8436                           ;incstack = 0
  8437                           ; Regs used in _LCD_CmdWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8438                           ;LCD_CmdWrite@v_lcdCmd_u8 stored from wreg
  8439  14BA  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  8440                           
  8441                           ;lcd.c: 360: lcd_BusyCheck();
  8442  14BB  120A  158A  2774  160A  118A  	fcall	_lcd_BusyCheck
  8443                           
  8444                           ;lcd.c: 361: if(LCDConfig.v_LcdMode_U8 == 8u)
  8445  14C0  3008               	movlw	8
  8446  14C1  1683               	bsf	3,5	;RP0=1, select bank1
  8447  14C2  1303               	bcf	3,6	;RP1=0, select bank1
  8448  14C3  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  8449  14C4  1D03               	btfss	3,2
  8450  14C5  2CCD               	goto	l2474
  8451                           
  8452                           ;lcd.c: 362: {
  8453                           ;lcd.c: 363: lcd_SendLowerNibble(v_lcdCmd_u8);
  8454  14C6  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  8455  14C7  160A  118A  2564  160A  118A  	fcall	_lcd_SendLowerNibble
  8456                           
  8457                           ;lcd.c: 364: }
  8458  14CC  2CE5               	goto	l2478
  8459  14CD                     l2474:	
  8460                           
  8461                           ;lcd.c: 365: else
  8462                           ;lcd.c: 366: {
  8463                           ;lcd.c: 367: lcd_SendHigherNibble(v_lcdCmd_u8);
  8464  14CD  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  8465  14CE  160A  118A  2524  160A  118A  	fcall	_lcd_SendHigherNibble
  8466                           
  8467                           ;lcd.c: 368: lcd_SendCmdSignals();
  8468  14D3  160A  118A  245F  160A  118A  	fcall	_lcd_SendCmdSignals
  8469                           
  8470                           ;lcd.c: 369: v_lcdCmd_u8 = v_lcdCmd_u8 << 4;
  8471  14D8  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  8472  14D9  00F7               	movwf	??_LCD_CmdWrite
  8473  14DA  3003               	movlw	3
  8474  14DB                     u2635:	
  8475  14DB  1003               	clrc
  8476  14DC  0DF7               	rlf	??_LCD_CmdWrite,f
  8477  14DD  3EFF               	addlw	-1
  8478  14DE  1D03               	skipz
  8479  14DF  2CDB               	goto	u2635
  8480  14E0  1003               	clrc
  8481  14E1  0D77               	rlf	??_LCD_CmdWrite,w
  8482  14E2  00F8               	movwf	??_LCD_CmdWrite+1
  8483  14E3  0878               	movf	??_LCD_CmdWrite+1,w
  8484  14E4  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  8485  14E5                     l2478:	
  8486                           
  8487                           ;lcd.c: 370: }
  8488                           ;lcd.c: 372: lcd_SendHigherNibble(v_lcdCmd_u8);
  8489  14E5  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  8490  14E6  160A  118A  2524  160A  118A  	fcall	_lcd_SendHigherNibble
  8491                           
  8492                           ;lcd.c: 373: lcd_SendCmdSignals();
  8493  14EB  160A  118A  245F   	fcall	_lcd_SendCmdSignals
  8494  14EE  0008               	return
  8495  14EF                     __end_of_LCD_CmdWrite:	
  8496                           
  8497                           	psect	text49
  8498  1564                     __ptext49:	
  8499 ;; *************** function _lcd_SendLowerNibble *****************
  8500 ;; Defined at:
  8501 ;;		line 962 in file "../00-libfiles/lcd.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;  dataByte        1    wreg     unsigned char 
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;  dataByte        1    6[COMMON] unsigned char 
  8506 ;; Return value:  Size  Location     Type
  8507 ;;                  1    wreg      void 
  8508 ;; Registers used:
  8509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8515 ;;      Params:         0       0       0       0       0
  8516 ;;      Locals:         1       0       0       0       0
  8517 ;;      Temps:          1       0       0       0       0
  8518 ;;      Totals:         2       0       0       0       0
  8519 ;;Total ram usage:        2 bytes
  8520 ;; Hardware stack levels used:    1
  8521 ;; Hardware stack levels required when called:    1
  8522 ;; This function calls:
  8523 ;;		_GPIO_PinWrite
  8524 ;; This function is called by:
  8525 ;;		_LCD_CmdWrite
  8526 ;;		_lcd_DataWrite
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           
  8531                           ;psect for function _lcd_SendLowerNibble
  8532  1564                     _lcd_SendLowerNibble:	
  8533                           
  8534                           ;incstack = 0
  8535                           ; Regs used in _lcd_SendLowerNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8536                           ;lcd_SendLowerNibble@dataByte stored from wreg
  8537  1564  00F6               	movwf	lcd_SendLowerNibble@dataByte
  8538                           
  8539                           ;lcd.c: 964: GPIO_PinWrite(LCDConfig.D0,(((dataByte)&((1<<(0))))!=0u));
  8540  1565  1C76               	btfss	lcd_SendLowerNibble@dataByte,0
  8541  1566  2D69               	goto	u2460
  8542  1567  3001               	movlw	1
  8543  1568  2D6A               	goto	u2470
  8544  1569                     u2460:	
  8545  1569  3000               	movlw	0
  8546  156A                     u2470:	
  8547  156A  00F5               	movwf	??_lcd_SendLowerNibble
  8548  156B  0875               	movf	??_lcd_SendLowerNibble,w
  8549  156C  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  8550  156D  1683               	bsf	3,5	;RP0=1, select bank1
  8551  156E  1303               	bcf	3,6	;RP1=0, select bank1
  8552  156F  0826               	movf	(_LCDConfig^(0+128)+6),w
  8553  1570  120A  118A  23FE  160A  118A  	fcall	_GPIO_PinWrite
  8554                           
  8555                           ;lcd.c: 965: GPIO_PinWrite(LCDConfig.D1,(((dataByte)&((1<<(1))))!=0u));
  8556  1575  1CF6               	btfss	lcd_SendLowerNibble@dataByte,1
  8557  1576  2D79               	goto	u2480
  8558  1577  3001               	movlw	1
  8559  1578  2D7A               	goto	u2490
  8560  1579                     u2480:	
  8561  1579  3000               	movlw	0
  8562  157A                     u2490:	
  8563  157A  00F5               	movwf	??_lcd_SendLowerNibble
  8564  157B  0875               	movf	??_lcd_SendLowerNibble,w
  8565  157C  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  8566  157D  1683               	bsf	3,5	;RP0=1, select bank1
  8567  157E  1303               	bcf	3,6	;RP1=0, select bank1
  8568  157F  0827               	movf	(_LCDConfig^(0+128)+7),w
  8569  1580  120A  118A  23FE  160A  118A  	fcall	_GPIO_PinWrite
  8570                           
  8571                           ;lcd.c: 966: GPIO_PinWrite(LCDConfig.D2,(((dataByte)&((1<<(2))))!=0u));
  8572  1585  1D76               	btfss	lcd_SendLowerNibble@dataByte,2
  8573  1586  2D89               	goto	u2500
  8574  1587  3001               	movlw	1
  8575  1588  2D8A               	goto	u2510
  8576  1589                     u2500:	
  8577  1589  3000               	movlw	0
  8578  158A                     u2510:	
  8579  158A  00F5               	movwf	??_lcd_SendLowerNibble
  8580  158B  0875               	movf	??_lcd_SendLowerNibble,w
  8581  158C  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  8582  158D  1683               	bsf	3,5	;RP0=1, select bank1
  8583  158E  1303               	bcf	3,6	;RP1=0, select bank1
  8584  158F  0828               	movf	(_LCDConfig^(0+128)+8),w
  8585  1590  120A  118A  23FE  160A  118A  	fcall	_GPIO_PinWrite
  8586                           
  8587                           ;lcd.c: 967: GPIO_PinWrite(LCDConfig.D3,(((dataByte)&((1<<(3))))!=0u));
  8588  1595  1DF6               	btfss	lcd_SendLowerNibble@dataByte,3
  8589  1596  2D99               	goto	u2520
  8590  1597  3001               	movlw	1
  8591  1598  2D9A               	goto	u2530
  8592  1599                     u2520:	
  8593  1599  3000               	movlw	0
  8594  159A                     u2530:	
  8595  159A  00F5               	movwf	??_lcd_SendLowerNibble
  8596  159B  0875               	movf	??_lcd_SendLowerNibble,w
  8597  159C  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  8598  159D  1683               	bsf	3,5	;RP0=1, select bank1
  8599  159E  1303               	bcf	3,6	;RP1=0, select bank1
  8600  159F  0829               	movf	(_LCDConfig^(0+128)+9),w
  8601  15A0  120A  118A  23FE   	fcall	_GPIO_PinWrite
  8602  15A3  0008               	return
  8603  15A4                     __end_of_lcd_SendLowerNibble:	
  8604                           
  8605                           	psect	text50
  8606  1524                     __ptext50:	
  8607 ;; *************** function _lcd_SendHigherNibble *****************
  8608 ;; Defined at:
  8609 ;;		line 943 in file "../00-libfiles/lcd.c"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;  dataByte        1    wreg     unsigned char 
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;  dataByte        1    6[COMMON] unsigned char 
  8614 ;; Return value:  Size  Location     Type
  8615 ;;                  1    wreg      void 
  8616 ;; Registers used:
  8617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8618 ;; Tracked objects:
  8619 ;;		On entry : 0/0
  8620 ;;		On exit  : 0/0
  8621 ;;		Unchanged: 0/0
  8622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8623 ;;      Params:         0       0       0       0       0
  8624 ;;      Locals:         1       0       0       0       0
  8625 ;;      Temps:          1       0       0       0       0
  8626 ;;      Totals:         2       0       0       0       0
  8627 ;;Total ram usage:        2 bytes
  8628 ;; Hardware stack levels used:    1
  8629 ;; Hardware stack levels required when called:    1
  8630 ;; This function calls:
  8631 ;;		_GPIO_PinWrite
  8632 ;; This function is called by:
  8633 ;;		_LCD_CmdWrite
  8634 ;;		_lcd_DataWrite
  8635 ;;		_lcd_Reset
  8636 ;; This function uses a non-reentrant model
  8637 ;;
  8638                           
  8639                           
  8640                           ;psect for function _lcd_SendHigherNibble
  8641  1524                     _lcd_SendHigherNibble:	
  8642                           
  8643                           ;incstack = 0
  8644                           ; Regs used in _lcd_SendHigherNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8645                           ;lcd_SendHigherNibble@dataByte stored from wreg
  8646  1524  00F6               	movwf	lcd_SendHigherNibble@dataByte
  8647                           
  8648                           ;lcd.c: 945: GPIO_PinWrite(LCDConfig.D4,(((dataByte)&((1<<(4))))!=0u));
  8649  1525  1E76               	btfss	lcd_SendHigherNibble@dataByte,4
  8650  1526  2D29               	goto	u2540
  8651  1527  3001               	movlw	1
  8652  1528  2D2A               	goto	u2550
  8653  1529                     u2540:	
  8654  1529  3000               	movlw	0
  8655  152A                     u2550:	
  8656  152A  00F5               	movwf	??_lcd_SendHigherNibble
  8657  152B  0875               	movf	??_lcd_SendHigherNibble,w
  8658  152C  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  8659  152D  1683               	bsf	3,5	;RP0=1, select bank1
  8660  152E  1303               	bcf	3,6	;RP1=0, select bank1
  8661  152F  082A               	movf	(_LCDConfig^(0+128)+10),w
  8662  1530  120A  118A  23FE  160A  118A  	fcall	_GPIO_PinWrite
  8663                           
  8664                           ;lcd.c: 946: GPIO_PinWrite(LCDConfig.D5,(((dataByte)&((1<<(5))))!=0u));
  8665  1535  1EF6               	btfss	lcd_SendHigherNibble@dataByte,5
  8666  1536  2D39               	goto	u2560
  8667  1537  3001               	movlw	1
  8668  1538  2D3A               	goto	u2570
  8669  1539                     u2560:	
  8670  1539  3000               	movlw	0
  8671  153A                     u2570:	
  8672  153A  00F5               	movwf	??_lcd_SendHigherNibble
  8673  153B  0875               	movf	??_lcd_SendHigherNibble,w
  8674  153C  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  8675  153D  1683               	bsf	3,5	;RP0=1, select bank1
  8676  153E  1303               	bcf	3,6	;RP1=0, select bank1
  8677  153F  082B               	movf	(_LCDConfig^(0+128)+11),w
  8678  1540  120A  118A  23FE  160A  118A  	fcall	_GPIO_PinWrite
  8679                           
  8680                           ;lcd.c: 947: GPIO_PinWrite(LCDConfig.D6,(((dataByte)&((1<<(6))))!=0u));
  8681  1545  1F76               	btfss	lcd_SendHigherNibble@dataByte,6
  8682  1546  2D49               	goto	u2580
  8683  1547  3001               	movlw	1
  8684  1548  2D4A               	goto	u2590
  8685  1549                     u2580:	
  8686  1549  3000               	movlw	0
  8687  154A                     u2590:	
  8688  154A  00F5               	movwf	??_lcd_SendHigherNibble
  8689  154B  0875               	movf	??_lcd_SendHigherNibble,w
  8690  154C  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  8691  154D  1683               	bsf	3,5	;RP0=1, select bank1
  8692  154E  1303               	bcf	3,6	;RP1=0, select bank1
  8693  154F  082C               	movf	(_LCDConfig^(0+128)+12),w
  8694  1550  120A  118A  23FE  160A  118A  	fcall	_GPIO_PinWrite
  8695                           
  8696                           ;lcd.c: 948: GPIO_PinWrite(LCDConfig.D7,(((dataByte)&((1<<(7))))!=0u));
  8697  1555  1FF6               	btfss	lcd_SendHigherNibble@dataByte,7
  8698  1556  2D59               	goto	u2600
  8699  1557  3001               	movlw	1
  8700  1558  2D5A               	goto	u2610
  8701  1559                     u2600:	
  8702  1559  3000               	movlw	0
  8703  155A                     u2610:	
  8704  155A  00F5               	movwf	??_lcd_SendHigherNibble
  8705  155B  0875               	movf	??_lcd_SendHigherNibble,w
  8706  155C  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  8707  155D  1683               	bsf	3,5	;RP0=1, select bank1
  8708  155E  1303               	bcf	3,6	;RP1=0, select bank1
  8709  155F  082D               	movf	(_LCDConfig^(0+128)+13),w
  8710  1560  120A  118A  23FE   	fcall	_GPIO_PinWrite
  8711  1563  0008               	return
  8712  1564                     __end_of_lcd_SendHigherNibble:	
  8713                           
  8714                           	psect	text51
  8715  145F                     __ptext51:	
  8716 ;; *************** function _lcd_SendCmdSignals *****************
  8717 ;; Defined at:
  8718 ;;		line 981 in file "../00-libfiles/lcd.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;		None
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;		None
  8723 ;; Return value:  Size  Location     Type
  8724 ;;                  1    wreg      void 
  8725 ;; Registers used:
  8726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8727 ;; Tracked objects:
  8728 ;;		On entry : 0/0
  8729 ;;		On exit  : 0/0
  8730 ;;		Unchanged: 0/0
  8731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8732 ;;      Params:         0       0       0       0       0
  8733 ;;      Locals:         0       0       0       0       0
  8734 ;;      Temps:          0       0       0       0       0
  8735 ;;      Totals:         0       0       0       0       0
  8736 ;;Total ram usage:        0 bytes
  8737 ;; Hardware stack levels used:    1
  8738 ;; Hardware stack levels required when called:    1
  8739 ;; This function calls:
  8740 ;;		_DELAY_us
  8741 ;;		_GPIO_PinWrite
  8742 ;; This function is called by:
  8743 ;;		_LCD_CmdWrite
  8744 ;;		_lcd_Reset
  8745 ;; This function uses a non-reentrant model
  8746 ;;
  8747                           
  8748                           
  8749                           ;psect for function _lcd_SendCmdSignals
  8750  145F                     _lcd_SendCmdSignals:	
  8751                           
  8752                           ;lcd.c: 983: GPIO_PinWrite(LCDConfig.RS,0);
  8753                           
  8754                           ;incstack = 0
  8755                           ; Regs used in _lcd_SendCmdSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8756  145F  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  8757  1460  1683               	bsf	3,5	;RP0=1, select bank1
  8758  1461  1303               	bcf	3,6	;RP1=0, select bank1
  8759  1462  0823               	movf	(_LCDConfig^(0+128)+3),w
  8760  1463  120A  118A  23FE  160A  118A  	fcall	_GPIO_PinWrite
  8761                           
  8762                           ;lcd.c: 984: GPIO_PinWrite(LCDConfig.RW,0);
  8763  1468  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  8764  1469  1683               	bsf	3,5	;RP0=1, select bank1
  8765  146A  1303               	bcf	3,6	;RP1=0, select bank1
  8766  146B  0824               	movf	(_LCDConfig^(0+128)+4),w
  8767  146C  120A  118A  23FE  160A  118A  	fcall	_GPIO_PinWrite
  8768                           
  8769                           ;lcd.c: 985: GPIO_PinWrite(LCDConfig.EN,1);
  8770  1471  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  8771  1472  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  8772  1473  1683               	bsf	3,5	;RP0=1, select bank1
  8773  1474  1303               	bcf	3,6	;RP1=0, select bank1
  8774  1475  0825               	movf	(_LCDConfig^(0+128)+5),w
  8775  1476  120A  118A  23FE  160A  118A  	fcall	_GPIO_PinWrite
  8776                           
  8777                           ;lcd.c: 986: DELAY_us(10);
  8778  147B  300A               	movlw	10
  8779  147C  00F0               	movwf	DELAY_us@us_count
  8780  147D  3000               	movlw	0
  8781  147E  00F1               	movwf	DELAY_us@us_count+1
  8782  147F  160A  118A  22CE  160A  118A  	fcall	_DELAY_us
  8783                           
  8784                           ;lcd.c: 987: GPIO_PinWrite(LCDConfig.EN,0);
  8785  1484  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  8786  1485  1683               	bsf	3,5	;RP0=1, select bank1
  8787  1486  1303               	bcf	3,6	;RP1=0, select bank1
  8788  1487  0825               	movf	(_LCDConfig^(0+128)+5),w
  8789  1488  120A  118A  23FE   	fcall	_GPIO_PinWrite
  8790  148B  0008               	return
  8791  148C                     __end_of_lcd_SendCmdSignals:	
  8792                           
  8793                           	psect	text52
  8794  0F74                     __ptext52:	
  8795 ;; *************** function _lcd_BusyCheck *****************
  8796 ;; Defined at:
  8797 ;;		line 860 in file "../00-libfiles/lcd.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;		None
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;  busyflag        1    6[COMMON] unsigned char 
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  1    wreg      void 
  8804 ;; Registers used:
  8805 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8811 ;;      Params:         0       0       0       0       0
  8812 ;;      Locals:         1       0       0       0       0
  8813 ;;      Temps:          1       0       0       0       0
  8814 ;;      Totals:         2       0       0       0       0
  8815 ;;Total ram usage:        2 bytes
  8816 ;; Hardware stack levels used:    1
  8817 ;; Hardware stack levels required when called:    2
  8818 ;; This function calls:
  8819 ;;		_DELAY_ms
  8820 ;;		_DELAY_us
  8821 ;;		_GPIO_PinDirection
  8822 ;;		_GPIO_PinRead
  8823 ;;		_GPIO_PinWrite
  8824 ;; This function is called by:
  8825 ;;		_LCD_CmdWrite
  8826 ;;		_lcd_DataWrite
  8827 ;; This function uses a non-reentrant model
  8828 ;;
  8829                           
  8830                           
  8831                           ;psect for function _lcd_BusyCheck
  8832  0F74                     _lcd_BusyCheck:	
  8833                           
  8834                           ;lcd.c: 862: uint8_t busyflag;
  8835                           ;lcd.c: 864: if(LCDConfig.RW != P_NC)
  8836                           
  8837                           ;incstack = 0
  8838                           ; Regs used in _lcd_BusyCheck: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8839  0F74  1683               	bsf	3,5	;RP0=1, select bank1
  8840  0F75  1303               	bcf	3,6	;RP1=0, select bank1
  8841  0F76  0A24               	incf	(_LCDConfig^(0+128)+4),w
  8842  0F77  1903               	btfsc	3,2
  8843  0F78  2FF8               	goto	l2456
  8844                           
  8845                           ;lcd.c: 865: {
  8846                           ;lcd.c: 866: GPIO_PinDirection(LCDConfig.D7,0x01u);
  8847  0F79  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  8848  0F7A  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  8849  0F7B  082D               	movf	(_LCDConfig^(0+128)+13),w
  8850  0F7C  120A  118A  2325  120A  158A  	fcall	_GPIO_PinDirection
  8851                           
  8852                           ;lcd.c: 867: GPIO_PinWrite(LCDConfig.RS,0);
  8853  0F81  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  8854  0F82  1683               	bsf	3,5	;RP0=1, select bank1
  8855  0F83  1303               	bcf	3,6	;RP1=0, select bank1
  8856  0F84  0823               	movf	(_LCDConfig^(0+128)+3),w
  8857  0F85  120A  118A  23FE  120A  158A  	fcall	_GPIO_PinWrite
  8858                           
  8859                           ;lcd.c: 868: GPIO_PinWrite(LCDConfig.RW,1);
  8860  0F8A  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  8861  0F8B  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  8862  0F8C  1683               	bsf	3,5	;RP0=1, select bank1
  8863  0F8D  1303               	bcf	3,6	;RP1=0, select bank1
  8864  0F8E  0824               	movf	(_LCDConfig^(0+128)+4),w
  8865  0F8F  120A  118A  23FE  120A  158A  	fcall	_GPIO_PinWrite
  8866  0F94                     l399:	
  8867                           ;lcd.c: 869: do
  8868                           
  8869                           
  8870                           ;lcd.c: 870: {
  8871                           ;lcd.c: 872: GPIO_PinWrite(LCDConfig.EN,0);
  8872  0F94  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  8873  0F95  1683               	bsf	3,5	;RP0=1, select bank1
  8874  0F96  1303               	bcf	3,6	;RP1=0, select bank1
  8875  0F97  0825               	movf	(_LCDConfig^(0+128)+5),w
  8876  0F98  120A  118A  23FE  120A  158A  	fcall	_GPIO_PinWrite
  8877                           
  8878                           ;lcd.c: 873: DELAY_us(10);
  8879  0F9D  300A               	movlw	10
  8880  0F9E  00F0               	movwf	DELAY_us@us_count
  8881  0F9F  3000               	movlw	0
  8882  0FA0  00F1               	movwf	DELAY_us@us_count+1
  8883  0FA1  160A  118A  22CE  120A  158A  	fcall	_DELAY_us
  8884                           
  8885                           ;lcd.c: 874: GPIO_PinWrite(LCDConfig.EN,1);
  8886  0FA6  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  8887  0FA7  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  8888  0FA8  1683               	bsf	3,5	;RP0=1, select bank1
  8889  0FA9  1303               	bcf	3,6	;RP1=0, select bank1
  8890  0FAA  0825               	movf	(_LCDConfig^(0+128)+5),w
  8891  0FAB  120A  118A  23FE  120A  158A  	fcall	_GPIO_PinWrite
  8892                           
  8893                           ;lcd.c: 875: DELAY_us(10);
  8894  0FB0  300A               	movlw	10
  8895  0FB1  00F0               	movwf	DELAY_us@us_count
  8896  0FB2  3000               	movlw	0
  8897  0FB3  00F1               	movwf	DELAY_us@us_count+1
  8898  0FB4  160A  118A  22CE  120A  158A  	fcall	_DELAY_us
  8899                           
  8900                           ;lcd.c: 876: busyflag = GPIO_PinRead(LCDConfig.D7);
  8901  0FB9  1683               	bsf	3,5	;RP0=1, select bank1
  8902  0FBA  1303               	bcf	3,6	;RP1=0, select bank1
  8903  0FBB  082D               	movf	(_LCDConfig^(0+128)+13),w
  8904  0FBC  120A  158A  24A1  120A  158A  	fcall	_GPIO_PinRead
  8905  0FC1  00F5               	movwf	??_lcd_BusyCheck
  8906  0FC2  0875               	movf	??_lcd_BusyCheck,w
  8907  0FC3  00F6               	movwf	lcd_BusyCheck@busyflag
  8908                           
  8909                           ;lcd.c: 879: if(LCDConfig.v_LcdMode_U8 == 4)
  8910  0FC4  3004               	movlw	4
  8911  0FC5  1683               	bsf	3,5	;RP0=1, select bank1
  8912  0FC6  1303               	bcf	3,6	;RP1=0, select bank1
  8913  0FC7  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  8914  0FC8  1D03               	btfss	3,2
  8915  0FC9  2FED               	goto	l2452
  8916                           
  8917                           ;lcd.c: 880: {
  8918                           ;lcd.c: 882: GPIO_PinWrite(LCDConfig.EN,0);
  8919  0FCA  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  8920  0FCB  0825               	movf	(_LCDConfig^(0+128)+5),w
  8921  0FCC  120A  118A  23FE  120A  158A  	fcall	_GPIO_PinWrite
  8922                           
  8923                           ;lcd.c: 883: DELAY_us(10);
  8924  0FD1  300A               	movlw	10
  8925  0FD2  00F0               	movwf	DELAY_us@us_count
  8926  0FD3  3000               	movlw	0
  8927  0FD4  00F1               	movwf	DELAY_us@us_count+1
  8928  0FD5  160A  118A  22CE  120A  158A  	fcall	_DELAY_us
  8929                           
  8930                           ;lcd.c: 884: GPIO_PinWrite(LCDConfig.EN,1);
  8931  0FDA  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  8932  0FDB  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  8933  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
  8934  0FDD  1303               	bcf	3,6	;RP1=0, select bank1
  8935  0FDE  0825               	movf	(_LCDConfig^(0+128)+5),w
  8936  0FDF  120A  118A  23FE  120A  158A  	fcall	_GPIO_PinWrite
  8937                           
  8938                           ;lcd.c: 885: DELAY_us(10);
  8939  0FE4  300A               	movlw	10
  8940  0FE5  00F0               	movwf	DELAY_us@us_count
  8941  0FE6  3000               	movlw	0
  8942  0FE7  00F1               	movwf	DELAY_us@us_count+1
  8943  0FE8  160A  118A  22CE  120A  158A  	fcall	_DELAY_us
  8944  0FED                     l2452:	
  8945                           
  8946                           ;lcd.c: 886: }
  8947                           ;lcd.c: 887: }while(busyflag!=0);
  8948  0FED  0876               	movf	lcd_BusyCheck@busyflag,w
  8949  0FEE  1D03               	btfss	3,2
  8950  0FEF  2F94               	goto	l399
  8951                           
  8952                           ;lcd.c: 889: GPIO_PinDirection(LCDConfig.D7,0x00u);
  8953  0FF0  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  8954  0FF1  1683               	bsf	3,5	;RP0=1, select bank1
  8955  0FF2  1303               	bcf	3,6	;RP1=0, select bank1
  8956  0FF3  082D               	movf	(_LCDConfig^(0+128)+13),w
  8957  0FF4  120A  118A  2325   	fcall	_GPIO_PinDirection
  8958                           
  8959                           ;lcd.c: 890: }
  8960  0FF7  0008               	return
  8961  0FF8                     l2456:	
  8962                           
  8963                           ;lcd.c: 891: else
  8964                           ;lcd.c: 892: {
  8965                           ;lcd.c: 895: DELAY_ms(1);
  8966  0FF8  3001               	movlw	1
  8967  0FF9  00F2               	movwf	DELAY_ms@ms_count
  8968  0FFA  3000               	movlw	0
  8969  0FFB  00F3               	movwf	DELAY_ms@ms_count+1
  8970  0FFC  160A  118A  233F   	fcall	_DELAY_ms
  8971  0FFF  0008               	return
  8972  1000                     __end_of_lcd_BusyCheck:	
  8973                           
  8974                           	psect	text53
  8975  03FE                     __ptext53:	
  8976 ;; *************** function _GPIO_PinWrite *****************
  8977 ;; Defined at:
  8978 ;;		line 127 in file "../00-libfiles/gpio.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;  enm_pinNumbe    1    wreg     enum E1088
  8981 ;;  var_pinValue    1    0[COMMON] unsigned char 
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  8984 ;;  var_portNumb    1    3[COMMON] unsigned char 
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  1    wreg      void 
  8987 ;; Registers used:
  8988 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8994 ;;      Params:         1       0       0       0       0
  8995 ;;      Locals:         2       0       0       0       0
  8996 ;;      Temps:          2       0       0       0       0
  8997 ;;      Totals:         5       0       0       0       0
  8998 ;;Total ram usage:        5 bytes
  8999 ;; Hardware stack levels used:    1
  9000 ;; This function calls:
  9001 ;;		Nothing
  9002 ;; This function is called by:
  9003 ;;		_keypad_WaitForKeyRelease
  9004 ;;		_keypad_WaitForKeyPress
  9005 ;;		_KEYPAD_GetKey
  9006 ;;		_lcd_BusyCheck
  9007 ;;		_lcd_SendHigherNibble
  9008 ;;		_lcd_SendLowerNibble
  9009 ;;		_lcd_SendCmdSignals
  9010 ;;		_lcd_SendDataSignals
  9011 ;; This function uses a non-reentrant model
  9012 ;;
  9013                           
  9014                           
  9015                           ;psect for function _GPIO_PinWrite
  9016  03FE                     _GPIO_PinWrite:	
  9017                           
  9018                           ;incstack = 0
  9019                           ; Regs used in _GPIO_PinWrite: [wreg-fsr0h+status,2+status,0]
  9020                           ;GPIO_PinWrite@enm_pinNumber stored from wreg
  9021  03FE  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  9022                           
  9023                           ;gpio.c: 130: uint8_t var_portNumber_u8;
  9024                           ;gpio.c: 133: var_portNumber_u8 = (enm_pinNumber>>3);
  9025  03FF  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  9026  0400  00F1               	movwf	??_GPIO_PinWrite
  9027  0401  3003               	movlw	3
  9028  0402                     u2115:	
  9029  0402  1003               	clrc
  9030  0403  0CF1               	rrf	??_GPIO_PinWrite,f
  9031  0404  3EFF               	addlw	-1
  9032  0405  1D03               	skipz
  9033  0406  2C02               	goto	u2115
  9034  0407  0871               	movf	??_GPIO_PinWrite,w
  9035  0408  00F2               	movwf	??_GPIO_PinWrite+1
  9036  0409  0872               	movf	??_GPIO_PinWrite+1,w
  9037  040A  00F3               	movwf	GPIO_PinWrite@var_portNumber_u8
  9038                           
  9039                           ;gpio.c: 134: enm_pinNumber = enm_pinNumber & 0x07;
  9040  040B  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  9041  040C  3907               	andlw	7
  9042  040D  00F1               	movwf	??_GPIO_PinWrite
  9043  040E  0871               	movf	??_GPIO_PinWrite,w
  9044  040F  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  9045                           
  9046                           ;gpio.c: 138: switch(var_portNumber_u8)
  9047  0410  2CC5               	goto	l2408
  9048  0411                     l2376:	
  9049                           ;gpio.c: 139: {
  9050                           ;gpio.c: 141: case 0:
  9051                           
  9052                           
  9053                           ;gpio.c: 142: ((var_pinValue_u8)? ((PORTA) |= (1<<(enm_pinNumber))): ((PORTA) &= ~(1<<(e
      +                          nm_pinNumber))));
  9054  0411  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  9055  0412  1903               	btfsc	3,2
  9056  0413  2C24               	goto	l2380
  9057  0414  3001               	movlw	1
  9058  0415  00F1               	movwf	??_GPIO_PinWrite
  9059  0416  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  9060  0417  2C1A               	goto	u2134
  9061  0418                     u2135:	
  9062  0418  1003               	clrc
  9063  0419  0DF1               	rlf	??_GPIO_PinWrite,f
  9064  041A                     u2134:	
  9065  041A  3EFF               	addlw	-1
  9066  041B  1D03               	skipz
  9067  041C  2C18               	goto	u2135
  9068  041D  0871               	movf	??_GPIO_PinWrite,w
  9069  041E  00F2               	movwf	??_GPIO_PinWrite+1
  9070  041F  0872               	movf	??_GPIO_PinWrite+1,w
  9071  0420  1283               	bcf	3,5	;RP0=0, select bank0
  9072  0421  1303               	bcf	3,6	;RP1=0, select bank0
  9073  0422  0485               	iorwf	5,f	;volatile
  9074  0423  0008               	return
  9075  0424                     l2380:	
  9076  0424  3001               	movlw	1
  9077  0425  00F1               	movwf	??_GPIO_PinWrite
  9078  0426  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  9079  0427  2C2A               	goto	u2144
  9080  0428                     u2145:	
  9081  0428  1003               	clrc
  9082  0429  0DF1               	rlf	??_GPIO_PinWrite,f
  9083  042A                     u2144:	
  9084  042A  3EFF               	addlw	-1
  9085  042B  1D03               	skipz
  9086  042C  2C28               	goto	u2145
  9087  042D  0871               	movf	??_GPIO_PinWrite,w
  9088  042E  3AFF               	xorlw	255
  9089  042F  00F2               	movwf	??_GPIO_PinWrite+1
  9090  0430  0872               	movf	??_GPIO_PinWrite+1,w
  9091  0431  1283               	bcf	3,5	;RP0=0, select bank0
  9092  0432  1303               	bcf	3,6	;RP1=0, select bank0
  9093  0433  0585               	andwf	5,f	;volatile
  9094                           
  9095                           ;gpio.c: 143: break;
  9096  0434  0008               	return
  9097  0435                     l2382:	
  9098                           ;gpio.c: 147: case 1:
  9099                           
  9100                           
  9101                           ;gpio.c: 148: ((var_pinValue_u8)? ((PORTB) |= (1<<(enm_pinNumber))): ((PORTB) &= ~(1<<(e
      +                          nm_pinNumber))));
  9102  0435  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  9103  0436  1903               	btfsc	3,2
  9104  0437  2C48               	goto	l2386
  9105  0438  3001               	movlw	1
  9106  0439  00F1               	movwf	??_GPIO_PinWrite
  9107  043A  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  9108  043B  2C3E               	goto	u2164
  9109  043C                     u2165:	
  9110  043C  1003               	clrc
  9111  043D  0DF1               	rlf	??_GPIO_PinWrite,f
  9112  043E                     u2164:	
  9113  043E  3EFF               	addlw	-1
  9114  043F  1D03               	skipz
  9115  0440  2C3C               	goto	u2165
  9116  0441  0871               	movf	??_GPIO_PinWrite,w
  9117  0442  00F2               	movwf	??_GPIO_PinWrite+1
  9118  0443  0872               	movf	??_GPIO_PinWrite+1,w
  9119  0444  1283               	bcf	3,5	;RP0=0, select bank0
  9120  0445  1303               	bcf	3,6	;RP1=0, select bank0
  9121  0446  0486               	iorwf	6,f	;volatile
  9122  0447  0008               	return
  9123  0448                     l2386:	
  9124  0448  3001               	movlw	1
  9125  0449  00F1               	movwf	??_GPIO_PinWrite
  9126  044A  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  9127  044B  2C4E               	goto	u2174
  9128  044C                     u2175:	
  9129  044C  1003               	clrc
  9130  044D  0DF1               	rlf	??_GPIO_PinWrite,f
  9131  044E                     u2174:	
  9132  044E  3EFF               	addlw	-1
  9133  044F  1D03               	skipz
  9134  0450  2C4C               	goto	u2175
  9135  0451  0871               	movf	??_GPIO_PinWrite,w
  9136  0452  3AFF               	xorlw	255
  9137  0453  00F2               	movwf	??_GPIO_PinWrite+1
  9138  0454  0872               	movf	??_GPIO_PinWrite+1,w
  9139  0455  1283               	bcf	3,5	;RP0=0, select bank0
  9140  0456  1303               	bcf	3,6	;RP1=0, select bank0
  9141  0457  0586               	andwf	6,f	;volatile
  9142                           
  9143                           ;gpio.c: 149: break;
  9144  0458  0008               	return
  9145  0459                     l2388:	
  9146                           ;gpio.c: 153: case 2:
  9147                           
  9148                           
  9149                           ;gpio.c: 154: ((var_pinValue_u8)? ((PORTC) |= (1<<(enm_pinNumber))): ((PORTC) &= ~(1<<(e
      +                          nm_pinNumber))));
  9150  0459  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  9151  045A  1903               	btfsc	3,2
  9152  045B  2C6C               	goto	l2392
  9153  045C  3001               	movlw	1
  9154  045D  00F1               	movwf	??_GPIO_PinWrite
  9155  045E  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  9156  045F  2C62               	goto	u2194
  9157  0460                     u2195:	
  9158  0460  1003               	clrc
  9159  0461  0DF1               	rlf	??_GPIO_PinWrite,f
  9160  0462                     u2194:	
  9161  0462  3EFF               	addlw	-1
  9162  0463  1D03               	skipz
  9163  0464  2C60               	goto	u2195
  9164  0465  0871               	movf	??_GPIO_PinWrite,w
  9165  0466  00F2               	movwf	??_GPIO_PinWrite+1
  9166  0467  0872               	movf	??_GPIO_PinWrite+1,w
  9167  0468  1283               	bcf	3,5	;RP0=0, select bank0
  9168  0469  1303               	bcf	3,6	;RP1=0, select bank0
  9169  046A  0487               	iorwf	7,f	;volatile
  9170  046B  0008               	return
  9171  046C                     l2392:	
  9172  046C  3001               	movlw	1
  9173  046D  00F1               	movwf	??_GPIO_PinWrite
  9174  046E  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  9175  046F  2C72               	goto	u2204
  9176  0470                     u2205:	
  9177  0470  1003               	clrc
  9178  0471  0DF1               	rlf	??_GPIO_PinWrite,f
  9179  0472                     u2204:	
  9180  0472  3EFF               	addlw	-1
  9181  0473  1D03               	skipz
  9182  0474  2C70               	goto	u2205
  9183  0475  0871               	movf	??_GPIO_PinWrite,w
  9184  0476  3AFF               	xorlw	255
  9185  0477  00F2               	movwf	??_GPIO_PinWrite+1
  9186  0478  0872               	movf	??_GPIO_PinWrite+1,w
  9187  0479  1283               	bcf	3,5	;RP0=0, select bank0
  9188  047A  1303               	bcf	3,6	;RP1=0, select bank0
  9189  047B  0587               	andwf	7,f	;volatile
  9190                           
  9191                           ;gpio.c: 155: break;
  9192  047C  0008               	return
  9193  047D                     l2394:	
  9194                           ;gpio.c: 159: case 3:
  9195                           
  9196                           
  9197                           ;gpio.c: 160: ((var_pinValue_u8)? ((PORTD) |= (1<<(enm_pinNumber))): ((PORTD) &= ~(1<<(e
      +                          nm_pinNumber))));
  9198  047D  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  9199  047E  1903               	btfsc	3,2
  9200  047F  2C90               	goto	l2398
  9201  0480  3001               	movlw	1
  9202  0481  00F1               	movwf	??_GPIO_PinWrite
  9203  0482  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  9204  0483  2C86               	goto	u2224
  9205  0484                     u2225:	
  9206  0484  1003               	clrc
  9207  0485  0DF1               	rlf	??_GPIO_PinWrite,f
  9208  0486                     u2224:	
  9209  0486  3EFF               	addlw	-1
  9210  0487  1D03               	skipz
  9211  0488  2C84               	goto	u2225
  9212  0489  0871               	movf	??_GPIO_PinWrite,w
  9213  048A  00F2               	movwf	??_GPIO_PinWrite+1
  9214  048B  0872               	movf	??_GPIO_PinWrite+1,w
  9215  048C  1283               	bcf	3,5	;RP0=0, select bank0
  9216  048D  1303               	bcf	3,6	;RP1=0, select bank0
  9217  048E  0488               	iorwf	8,f	;volatile
  9218  048F  0008               	return
  9219  0490                     l2398:	
  9220  0490  3001               	movlw	1
  9221  0491  00F1               	movwf	??_GPIO_PinWrite
  9222  0492  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  9223  0493  2C96               	goto	u2234
  9224  0494                     u2235:	
  9225  0494  1003               	clrc
  9226  0495  0DF1               	rlf	??_GPIO_PinWrite,f
  9227  0496                     u2234:	
  9228  0496  3EFF               	addlw	-1
  9229  0497  1D03               	skipz
  9230  0498  2C94               	goto	u2235
  9231  0499  0871               	movf	??_GPIO_PinWrite,w
  9232  049A  3AFF               	xorlw	255
  9233  049B  00F2               	movwf	??_GPIO_PinWrite+1
  9234  049C  0872               	movf	??_GPIO_PinWrite+1,w
  9235  049D  1283               	bcf	3,5	;RP0=0, select bank0
  9236  049E  1303               	bcf	3,6	;RP1=0, select bank0
  9237  049F  0588               	andwf	8,f	;volatile
  9238                           
  9239                           ;gpio.c: 161: break;
  9240  04A0  0008               	return
  9241  04A1                     l2400:	
  9242                           ;gpio.c: 165: case 4:
  9243                           
  9244                           
  9245                           ;gpio.c: 166: ((var_pinValue_u8)? ((PORTE) |= (1<<(enm_pinNumber))): ((PORTE) &= ~(1<<(e
      +                          nm_pinNumber))));
  9246  04A1  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  9247  04A2  1903               	btfsc	3,2
  9248  04A3  2CB4               	goto	l2404
  9249  04A4  3001               	movlw	1
  9250  04A5  00F1               	movwf	??_GPIO_PinWrite
  9251  04A6  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  9252  04A7  2CAA               	goto	u2254
  9253  04A8                     u2255:	
  9254  04A8  1003               	clrc
  9255  04A9  0DF1               	rlf	??_GPIO_PinWrite,f
  9256  04AA                     u2254:	
  9257  04AA  3EFF               	addlw	-1
  9258  04AB  1D03               	skipz
  9259  04AC  2CA8               	goto	u2255
  9260  04AD  0871               	movf	??_GPIO_PinWrite,w
  9261  04AE  00F2               	movwf	??_GPIO_PinWrite+1
  9262  04AF  0872               	movf	??_GPIO_PinWrite+1,w
  9263  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  9264  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  9265  04B2  0489               	iorwf	9,f	;volatile
  9266  04B3  0008               	return
  9267  04B4                     l2404:	
  9268  04B4  3001               	movlw	1
  9269  04B5  00F1               	movwf	??_GPIO_PinWrite
  9270  04B6  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  9271  04B7  2CBA               	goto	u2264
  9272  04B8                     u2265:	
  9273  04B8  1003               	clrc
  9274  04B9  0DF1               	rlf	??_GPIO_PinWrite,f
  9275  04BA                     u2264:	
  9276  04BA  3EFF               	addlw	-1
  9277  04BB  1D03               	skipz
  9278  04BC  2CB8               	goto	u2265
  9279  04BD  0871               	movf	??_GPIO_PinWrite,w
  9280  04BE  3AFF               	xorlw	255
  9281  04BF  00F2               	movwf	??_GPIO_PinWrite+1
  9282  04C0  0872               	movf	??_GPIO_PinWrite+1,w
  9283  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  9284  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  9285  04C3  0589               	andwf	9,f	;volatile
  9286                           
  9287                           ;gpio.c: 169: }
  9288                           
  9289                           ;gpio.c: 167: break;
  9290  04C4  0008               	return
  9291  04C5                     l2408:	
  9292  04C5  0873               	movf	GPIO_PinWrite@var_portNumber_u8,w
  9293                           
  9294                           ; Switch size 1, requested type "space"
  9295                           ; Number of cases is 5, Range of values is 0 to 4
  9296                           ; switch strategies available:
  9297                           ; Name         Instructions Cycles
  9298                           ; simple_byte           16     9 (average)
  9299                           ; direct_byte           23     8 (fixed)
  9300                           ; jumptable            260     6 (fixed)
  9301                           ;	Chosen strategy is simple_byte
  9302  04C6  3A00               	xorlw	0	; case 0
  9303  04C7  1903               	skipnz
  9304  04C8  2C11               	goto	l2376
  9305  04C9  3A01               	xorlw	1	; case 1
  9306  04CA  1903               	skipnz
  9307  04CB  2C35               	goto	l2382
  9308  04CC  3A03               	xorlw	3	; case 2
  9309  04CD  1903               	skipnz
  9310  04CE  2C59               	goto	l2388
  9311  04CF  3A01               	xorlw	1	; case 3
  9312  04D0  1903               	skipnz
  9313  04D1  2C7D               	goto	l2394
  9314  04D2  3A07               	xorlw	7	; case 4
  9315  04D3  1903               	skipnz
  9316  04D4  2CA1               	goto	l2400
  9317  04D5  2CD6               	goto	l152
  9318  04D6                     l152:	
  9319  04D6  0008               	return
  9320  04D7                     __end_of_GPIO_PinWrite:	
  9321                           
  9322                           	psect	text54
  9323  0CA1                     __ptext54:	
  9324 ;; *************** function _GPIO_PinRead *****************
  9325 ;; Defined at:
  9326 ;;		line 192 in file "../00-libfiles/gpio.c"
  9327 ;; Parameters:    Size  Location     Type
  9328 ;;  enm_pinNumbe    1    wreg     enum E1088
  9329 ;; Auto vars:     Size  Location     Type
  9330 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  9331 ;;  returnStatus    1    3[COMMON] unsigned char 
  9332 ;;  var_portNumb    1    2[COMMON] unsigned char 
  9333 ;; Return value:  Size  Location     Type
  9334 ;;                  1    wreg      unsigned char 
  9335 ;; Registers used:
  9336 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9342 ;;      Params:         0       0       0       0       0
  9343 ;;      Locals:         3       0       0       0       0
  9344 ;;      Temps:          2       0       0       0       0
  9345 ;;      Totals:         5       0       0       0       0
  9346 ;;Total ram usage:        5 bytes
  9347 ;; Hardware stack levels used:    1
  9348 ;; This function calls:
  9349 ;;		Nothing
  9350 ;; This function is called by:
  9351 ;;		_keypad_WaitForKeyRelease
  9352 ;;		_keypad_WaitForKeyPress
  9353 ;;		_KEYPAD_GetKey
  9354 ;;		_lcd_BusyCheck
  9355 ;; This function uses a non-reentrant model
  9356 ;;
  9357                           
  9358                           
  9359                           ;psect for function _GPIO_PinRead
  9360  0CA1                     _GPIO_PinRead:	
  9361                           
  9362                           ;incstack = 0
  9363                           ; Regs used in _GPIO_PinRead: [wreg-fsr0h+status,2+status,0]
  9364                           ;GPIO_PinRead@enm_pinNumber stored from wreg
  9365  0CA1  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  9366                           
  9367                           ;gpio.c: 194: uint8_t var_portNumber_u8;
  9368                           ;gpio.c: 195: uint8_t returnStatus = 0;
  9369  0CA2  01F3               	clrf	GPIO_PinRead@returnStatus
  9370                           
  9371                           ;gpio.c: 197: var_portNumber_u8 = (enm_pinNumber>>3);
  9372  0CA3  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  9373  0CA4  00F0               	movwf	??_GPIO_PinRead
  9374  0CA5  3003               	movlw	3
  9375  0CA6                     u2275:	
  9376  0CA6  1003               	clrc
  9377  0CA7  0CF0               	rrf	??_GPIO_PinRead,f
  9378  0CA8  3EFF               	addlw	-1
  9379  0CA9  1D03               	skipz
  9380  0CAA  2CA6               	goto	u2275
  9381  0CAB  0870               	movf	??_GPIO_PinRead,w
  9382  0CAC  00F1               	movwf	??_GPIO_PinRead+1
  9383  0CAD  0871               	movf	??_GPIO_PinRead+1,w
  9384  0CAE  00F2               	movwf	GPIO_PinRead@var_portNumber_u8
  9385                           
  9386                           ;gpio.c: 198: enm_pinNumber = enm_pinNumber & 0x07;
  9387  0CAF  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  9388  0CB0  3907               	andlw	7
  9389  0CB1  00F0               	movwf	??_GPIO_PinRead
  9390  0CB2  0870               	movf	??_GPIO_PinRead,w
  9391  0CB3  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  9392                           
  9393                           ;gpio.c: 201: switch(var_portNumber_u8)
  9394  0CB4  2D03               	goto	l2428
  9395  0CB5                     l2416:	
  9396                           ;gpio.c: 202: {
  9397                           ;gpio.c: 204: case 0:
  9398                           
  9399                           
  9400                           ;gpio.c: 205: returnStatus = (((PORTA)&((1<<(enm_pinNumber))))!=0u);
  9401  0CB5  3001               	movlw	1
  9402  0CB6  00F0               	movwf	??_GPIO_PinRead
  9403  0CB7  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  9404  0CB8  2CBB               	goto	u2284
  9405  0CB9                     u2285:	
  9406  0CB9  1003               	clrc
  9407  0CBA  0DF0               	rlf	??_GPIO_PinRead,f
  9408  0CBB                     u2284:	
  9409  0CBB  3EFF               	addlw	-1
  9410  0CBC  1D03               	skipz
  9411  0CBD  2CB9               	goto	u2285
  9412  0CBE  0870               	movf	??_GPIO_PinRead,w
  9413  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  9414  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  9415  0CC1  0505               	andwf	5,w	;volatile
  9416  0CC2  2CFA               	goto	L11
  9417  0CC3                     l2418:	
  9418                           ;gpio.c: 209: case 1:
  9419                           
  9420                           ;gpio.c: 206: break;
  9421                           
  9422                           
  9423                           ;gpio.c: 210: returnStatus = (((PORTB)&((1<<(enm_pinNumber))))!=0u);
  9424  0CC3  3001               	movlw	1
  9425  0CC4  00F0               	movwf	??_GPIO_PinRead
  9426  0CC5  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  9427  0CC6  2CC9               	goto	u2314
  9428  0CC7                     u2315:	
  9429  0CC7  1003               	clrc
  9430  0CC8  0DF0               	rlf	??_GPIO_PinRead,f
  9431  0CC9                     u2314:	
  9432  0CC9  3EFF               	addlw	-1
  9433  0CCA  1D03               	skipz
  9434  0CCB  2CC7               	goto	u2315
  9435  0CCC  0870               	movf	??_GPIO_PinRead,w
  9436  0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  9437  0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  9438  0CCF  0506               	andwf	6,w	;volatile
  9439  0CD0  2CFA               	goto	L11
  9440  0CD1                     l2420:	
  9441                           ;gpio.c: 214: case 2:
  9442                           
  9443                           ;gpio.c: 211: break;
  9444                           
  9445                           
  9446                           ;gpio.c: 215: returnStatus = (((PORTC)&((1<<(enm_pinNumber))))!=0u);
  9447  0CD1  3001               	movlw	1
  9448  0CD2  00F0               	movwf	??_GPIO_PinRead
  9449  0CD3  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  9450  0CD4  2CD7               	goto	u2344
  9451  0CD5                     u2345:	
  9452  0CD5  1003               	clrc
  9453  0CD6  0DF0               	rlf	??_GPIO_PinRead,f
  9454  0CD7                     u2344:	
  9455  0CD7  3EFF               	addlw	-1
  9456  0CD8  1D03               	skipz
  9457  0CD9  2CD5               	goto	u2345
  9458  0CDA  0870               	movf	??_GPIO_PinRead,w
  9459  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  9460  0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  9461  0CDD  0507               	andwf	7,w	;volatile
  9462  0CDE  2CFA               	goto	L11
  9463  0CDF                     l2422:	
  9464                           ;gpio.c: 220: case 3:
  9465                           
  9466                           ;gpio.c: 216: break;
  9467                           
  9468                           
  9469                           ;gpio.c: 221: returnStatus = (((PORTD)&((1<<(enm_pinNumber))))!=0u);
  9470  0CDF  3001               	movlw	1
  9471  0CE0  00F0               	movwf	??_GPIO_PinRead
  9472  0CE1  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  9473  0CE2  2CE5               	goto	u2374
  9474  0CE3                     u2375:	
  9475  0CE3  1003               	clrc
  9476  0CE4  0DF0               	rlf	??_GPIO_PinRead,f
  9477  0CE5                     u2374:	
  9478  0CE5  3EFF               	addlw	-1
  9479  0CE6  1D03               	skipz
  9480  0CE7  2CE3               	goto	u2375
  9481  0CE8  0870               	movf	??_GPIO_PinRead,w
  9482  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  9483  0CEA  1303               	bcf	3,6	;RP1=0, select bank0
  9484  0CEB  0508               	andwf	8,w	;volatile
  9485  0CEC  2CFA               	goto	L11
  9486  0CED                     l2424:	
  9487                           ;gpio.c: 226: case 4:
  9488                           
  9489                           ;gpio.c: 222: break;
  9490                           
  9491                           
  9492                           ;gpio.c: 227: returnStatus = (((PORTE)&((1<<(enm_pinNumber))))!=0u);
  9493  0CED  3001               	movlw	1
  9494  0CEE  00F0               	movwf	??_GPIO_PinRead
  9495  0CEF  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  9496  0CF0  2CF3               	goto	u2404
  9497  0CF1                     u2405:	
  9498  0CF1  1003               	clrc
  9499  0CF2  0DF0               	rlf	??_GPIO_PinRead,f
  9500  0CF3                     u2404:	
  9501  0CF3  3EFF               	addlw	-1
  9502  0CF4  1D03               	skipz
  9503  0CF5  2CF1               	goto	u2405
  9504  0CF6  0870               	movf	??_GPIO_PinRead,w
  9505  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  9506  0CF8  1303               	bcf	3,6	;RP1=0, select bank0
  9507  0CF9  0509               	andwf	9,w	;volatile
  9508  0CFA                     L11:	
  9509  0CFA  1903               	btfsc	3,2
  9510  0CFB  2CFE               	goto	u2410
  9511  0CFC  3001               	movlw	1
  9512  0CFD  2CFF               	goto	u2420
  9513  0CFE                     u2410:	
  9514  0CFE  3000               	movlw	0
  9515  0CFF                     u2420:	
  9516  0CFF  00F1               	movwf	??_GPIO_PinRead+1
  9517  0D00  0871               	movf	??_GPIO_PinRead+1,w
  9518  0D01  00F3               	movwf	GPIO_PinRead@returnStatus
  9519                           
  9520                           ;gpio.c: 229: }
  9521                           
  9522                           ;gpio.c: 228: break;
  9523  0D02  2D14               	goto	l2430
  9524  0D03                     l2428:	
  9525  0D03  0872               	movf	GPIO_PinRead@var_portNumber_u8,w
  9526                           
  9527                           ; Switch size 1, requested type "space"
  9528                           ; Number of cases is 5, Range of values is 0 to 4
  9529                           ; switch strategies available:
  9530                           ; Name         Instructions Cycles
  9531                           ; simple_byte           16     9 (average)
  9532                           ; direct_byte           23     8 (fixed)
  9533                           ; jumptable            260     6 (fixed)
  9534                           ;	Chosen strategy is simple_byte
  9535  0D04  3A00               	xorlw	0	; case 0
  9536  0D05  1903               	skipnz
  9537  0D06  2CB5               	goto	l2416
  9538  0D07  3A01               	xorlw	1	; case 1
  9539  0D08  1903               	skipnz
  9540  0D09  2CC3               	goto	l2418
  9541  0D0A  3A03               	xorlw	3	; case 2
  9542  0D0B  1903               	skipnz
  9543  0D0C  2CD1               	goto	l2420
  9544  0D0D  3A01               	xorlw	1	; case 3
  9545  0D0E  1903               	skipnz
  9546  0D0F  2CDF               	goto	l2422
  9547  0D10  3A07               	xorlw	7	; case 4
  9548  0D11  1903               	skipnz
  9549  0D12  2CED               	goto	l2424
  9550  0D13  2D14               	goto	l2430
  9551  0D14                     l2430:	
  9552                           
  9553                           ;gpio.c: 230: return returnStatus;
  9554  0D14  0873               	movf	GPIO_PinRead@returnStatus,w
  9555  0D15  0008               	return
  9556  0D16                     __end_of_GPIO_PinRead:	
  9557                           
  9558                           	psect	text55
  9559  0325                     __ptext55:	
  9560 ;; *************** function _GPIO_PinDirection *****************
  9561 ;; Defined at:
  9562 ;;		line 60 in file "../00-libfiles/gpio.c"
  9563 ;; Parameters:    Size  Location     Type
  9564 ;;  enm_pinNumbe    1    wreg     enum E1088
  9565 ;;  var_pinDirn_    1    0[COMMON] unsigned char 
  9566 ;; Auto vars:     Size  Location     Type
  9567 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  9568 ;;  var_portNumb    1    3[COMMON] unsigned char 
  9569 ;; Return value:  Size  Location     Type
  9570 ;;                  1    wreg      void 
  9571 ;; Registers used:
  9572 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9573 ;; Tracked objects:
  9574 ;;		On entry : 0/0
  9575 ;;		On exit  : 0/0
  9576 ;;		Unchanged: 0/0
  9577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9578 ;;      Params:         1       0       0       0       0
  9579 ;;      Locals:         2       0       0       0       0
  9580 ;;      Temps:          2       0       0       0       0
  9581 ;;      Totals:         5       0       0       0       0
  9582 ;;Total ram usage:        5 bytes
  9583 ;; Hardware stack levels used:    1
  9584 ;; This function calls:
  9585 ;;		Nothing
  9586 ;; This function is called by:
  9587 ;;		_KEYPAD_Init
  9588 ;;		_LCD_SetUp
  9589 ;;		_lcd_BusyCheck
  9590 ;; This function uses a non-reentrant model
  9591 ;;
  9592                           
  9593                           
  9594                           ;psect for function _GPIO_PinDirection
  9595  0325                     _GPIO_PinDirection:	
  9596                           
  9597                           ;incstack = 0
  9598                           ; Regs used in _GPIO_PinDirection: [wreg-fsr0h+status,2+status,0]
  9599                           ;GPIO_PinDirection@enm_pinNumber stored from wreg
  9600  0325  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  9601                           
  9602                           ;gpio.c: 63: uint8_t var_portNumber_u8;
  9603                           ;gpio.c: 66: var_portNumber_u8 = (enm_pinNumber>>3);
  9604  0326  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  9605  0327  00F1               	movwf	??_GPIO_PinDirection
  9606  0328  3003               	movlw	3
  9607  0329                     u1955:	
  9608  0329  1003               	clrc
  9609  032A  0CF1               	rrf	??_GPIO_PinDirection,f
  9610  032B  3EFF               	addlw	-1
  9611  032C  1D03               	skipz
  9612  032D  2B29               	goto	u1955
  9613  032E  0871               	movf	??_GPIO_PinDirection,w
  9614  032F  00F2               	movwf	??_GPIO_PinDirection+1
  9615  0330  0872               	movf	??_GPIO_PinDirection+1,w
  9616  0331  00F3               	movwf	GPIO_PinDirection@var_portNumber_u8
  9617                           
  9618                           ;gpio.c: 67: enm_pinNumber = enm_pinNumber & 0x07;
  9619  0332  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  9620  0333  3907               	andlw	7
  9621  0334  00F1               	movwf	??_GPIO_PinDirection
  9622  0335  0871               	movf	??_GPIO_PinDirection,w
  9623  0336  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  9624                           
  9625                           ;gpio.c: 71: switch(var_portNumber_u8)
  9626  0337  2BEC               	goto	l2370
  9627  0338                     l2338:	
  9628                           ;gpio.c: 72: {
  9629                           ;gpio.c: 74: case 0:
  9630                           
  9631                           
  9632                           ;gpio.c: 75: ((var_pinDirn_u8)? ((TRISA) |= (1<<(enm_pinNumber))): ((TRISA) &= ~(1<<(enm
      +                          _pinNumber))));
  9633  0338  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  9634  0339  1903               	btfsc	3,2
  9635  033A  2B4B               	goto	l2342
  9636  033B  3001               	movlw	1
  9637  033C  00F1               	movwf	??_GPIO_PinDirection
  9638  033D  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  9639  033E  2B41               	goto	u1974
  9640  033F                     u1975:	
  9641  033F  1003               	clrc
  9642  0340  0DF1               	rlf	??_GPIO_PinDirection,f
  9643  0341                     u1974:	
  9644  0341  3EFF               	addlw	-1
  9645  0342  1D03               	skipz
  9646  0343  2B3F               	goto	u1975
  9647  0344  0871               	movf	??_GPIO_PinDirection,w
  9648  0345  00F2               	movwf	??_GPIO_PinDirection+1
  9649  0346  0872               	movf	??_GPIO_PinDirection+1,w
  9650  0347  1683               	bsf	3,5	;RP0=1, select bank1
  9651  0348  1303               	bcf	3,6	;RP1=0, select bank1
  9652  0349  0485               	iorwf	5,f	;volatile
  9653  034A  0008               	return
  9654  034B                     l2342:	
  9655  034B  3001               	movlw	1
  9656  034C  00F1               	movwf	??_GPIO_PinDirection
  9657  034D  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  9658  034E  2B51               	goto	u1984
  9659  034F                     u1985:	
  9660  034F  1003               	clrc
  9661  0350  0DF1               	rlf	??_GPIO_PinDirection,f
  9662  0351                     u1984:	
  9663  0351  3EFF               	addlw	-1
  9664  0352  1D03               	skipz
  9665  0353  2B4F               	goto	u1985
  9666  0354  0871               	movf	??_GPIO_PinDirection,w
  9667  0355  3AFF               	xorlw	255
  9668  0356  00F2               	movwf	??_GPIO_PinDirection+1
  9669  0357  0872               	movf	??_GPIO_PinDirection+1,w
  9670  0358  1683               	bsf	3,5	;RP0=1, select bank1
  9671  0359  1303               	bcf	3,6	;RP1=0, select bank1
  9672  035A  0585               	andwf	5,f	;volatile
  9673                           
  9674                           ;gpio.c: 76: break;
  9675  035B  0008               	return
  9676  035C                     l2344:	
  9677                           ;gpio.c: 80: case 1:
  9678                           
  9679                           
  9680                           ;gpio.c: 81: ((var_pinDirn_u8)? ((TRISB) |= (1<<(enm_pinNumber))): ((TRISB) &= ~(1<<(enm
      +                          _pinNumber))));
  9681  035C  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  9682  035D  1903               	btfsc	3,2
  9683  035E  2B6F               	goto	l2348
  9684  035F  3001               	movlw	1
  9685  0360  00F1               	movwf	??_GPIO_PinDirection
  9686  0361  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  9687  0362  2B65               	goto	u2004
  9688  0363                     u2005:	
  9689  0363  1003               	clrc
  9690  0364  0DF1               	rlf	??_GPIO_PinDirection,f
  9691  0365                     u2004:	
  9692  0365  3EFF               	addlw	-1
  9693  0366  1D03               	skipz
  9694  0367  2B63               	goto	u2005
  9695  0368  0871               	movf	??_GPIO_PinDirection,w
  9696  0369  00F2               	movwf	??_GPIO_PinDirection+1
  9697  036A  0872               	movf	??_GPIO_PinDirection+1,w
  9698  036B  1683               	bsf	3,5	;RP0=1, select bank1
  9699  036C  1303               	bcf	3,6	;RP1=0, select bank1
  9700  036D  0486               	iorwf	6,f	;volatile
  9701  036E  0008               	return
  9702  036F                     l2348:	
  9703  036F  3001               	movlw	1
  9704  0370  00F1               	movwf	??_GPIO_PinDirection
  9705  0371  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  9706  0372  2B75               	goto	u2014
  9707  0373                     u2015:	
  9708  0373  1003               	clrc
  9709  0374  0DF1               	rlf	??_GPIO_PinDirection,f
  9710  0375                     u2014:	
  9711  0375  3EFF               	addlw	-1
  9712  0376  1D03               	skipz
  9713  0377  2B73               	goto	u2015
  9714  0378  0871               	movf	??_GPIO_PinDirection,w
  9715  0379  3AFF               	xorlw	255
  9716  037A  00F2               	movwf	??_GPIO_PinDirection+1
  9717  037B  0872               	movf	??_GPIO_PinDirection+1,w
  9718  037C  1683               	bsf	3,5	;RP0=1, select bank1
  9719  037D  1303               	bcf	3,6	;RP1=0, select bank1
  9720  037E  0586               	andwf	6,f	;volatile
  9721                           
  9722                           ;gpio.c: 82: break;
  9723  037F  0008               	return
  9724  0380                     l2350:	
  9725                           ;gpio.c: 86: case 2:
  9726                           
  9727                           
  9728                           ;gpio.c: 87: ((var_pinDirn_u8)? ((TRISC) |= (1<<(enm_pinNumber))): ((TRISC) &= ~(1<<(enm
      +                          _pinNumber))));
  9729  0380  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  9730  0381  1903               	btfsc	3,2
  9731  0382  2B93               	goto	l2354
  9732  0383  3001               	movlw	1
  9733  0384  00F1               	movwf	??_GPIO_PinDirection
  9734  0385  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  9735  0386  2B89               	goto	u2034
  9736  0387                     u2035:	
  9737  0387  1003               	clrc
  9738  0388  0DF1               	rlf	??_GPIO_PinDirection,f
  9739  0389                     u2034:	
  9740  0389  3EFF               	addlw	-1
  9741  038A  1D03               	skipz
  9742  038B  2B87               	goto	u2035
  9743  038C  0871               	movf	??_GPIO_PinDirection,w
  9744  038D  00F2               	movwf	??_GPIO_PinDirection+1
  9745  038E  0872               	movf	??_GPIO_PinDirection+1,w
  9746  038F  1683               	bsf	3,5	;RP0=1, select bank1
  9747  0390  1303               	bcf	3,6	;RP1=0, select bank1
  9748  0391  0487               	iorwf	7,f	;volatile
  9749  0392  0008               	return
  9750  0393                     l2354:	
  9751  0393  3001               	movlw	1
  9752  0394  00F1               	movwf	??_GPIO_PinDirection
  9753  0395  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  9754  0396  2B99               	goto	u2044
  9755  0397                     u2045:	
  9756  0397  1003               	clrc
  9757  0398  0DF1               	rlf	??_GPIO_PinDirection,f
  9758  0399                     u2044:	
  9759  0399  3EFF               	addlw	-1
  9760  039A  1D03               	skipz
  9761  039B  2B97               	goto	u2045
  9762  039C  0871               	movf	??_GPIO_PinDirection,w
  9763  039D  3AFF               	xorlw	255
  9764  039E  00F2               	movwf	??_GPIO_PinDirection+1
  9765  039F  0872               	movf	??_GPIO_PinDirection+1,w
  9766  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  9767  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  9768  03A2  0587               	andwf	7,f	;volatile
  9769                           
  9770                           ;gpio.c: 88: break;
  9771  03A3  0008               	return
  9772  03A4                     l2356:	
  9773                           ;gpio.c: 92: case 3:
  9774                           
  9775                           
  9776                           ;gpio.c: 93: ((var_pinDirn_u8)? ((TRISD) |= (1<<(enm_pinNumber))): ((TRISD) &= ~(1<<(enm
      +                          _pinNumber))));
  9777  03A4  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  9778  03A5  1903               	btfsc	3,2
  9779  03A6  2BB7               	goto	l2360
  9780  03A7  3001               	movlw	1
  9781  03A8  00F1               	movwf	??_GPIO_PinDirection
  9782  03A9  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  9783  03AA  2BAD               	goto	u2064
  9784  03AB                     u2065:	
  9785  03AB  1003               	clrc
  9786  03AC  0DF1               	rlf	??_GPIO_PinDirection,f
  9787  03AD                     u2064:	
  9788  03AD  3EFF               	addlw	-1
  9789  03AE  1D03               	skipz
  9790  03AF  2BAB               	goto	u2065
  9791  03B0  0871               	movf	??_GPIO_PinDirection,w
  9792  03B1  00F2               	movwf	??_GPIO_PinDirection+1
  9793  03B2  0872               	movf	??_GPIO_PinDirection+1,w
  9794  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  9795  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  9796  03B5  0488               	iorwf	8,f	;volatile
  9797  03B6  0008               	return
  9798  03B7                     l2360:	
  9799  03B7  3001               	movlw	1
  9800  03B8  00F1               	movwf	??_GPIO_PinDirection
  9801  03B9  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  9802  03BA  2BBD               	goto	u2074
  9803  03BB                     u2075:	
  9804  03BB  1003               	clrc
  9805  03BC  0DF1               	rlf	??_GPIO_PinDirection,f
  9806  03BD                     u2074:	
  9807  03BD  3EFF               	addlw	-1
  9808  03BE  1D03               	skipz
  9809  03BF  2BBB               	goto	u2075
  9810  03C0  0871               	movf	??_GPIO_PinDirection,w
  9811  03C1  3AFF               	xorlw	255
  9812  03C2  00F2               	movwf	??_GPIO_PinDirection+1
  9813  03C3  0872               	movf	??_GPIO_PinDirection+1,w
  9814  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  9815  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  9816  03C6  0588               	andwf	8,f	;volatile
  9817                           
  9818                           ;gpio.c: 94: break;
  9819  03C7  0008               	return
  9820  03C8                     l2362:	
  9821                           ;gpio.c: 97: case 4:
  9822                           
  9823                           
  9824                           ;gpio.c: 98: ((var_pinDirn_u8)? ((TRISE) |= (1<<(enm_pinNumber))): ((TRISE) &= ~(1<<(enm
      +                          _pinNumber))));
  9825  03C8  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  9826  03C9  1903               	btfsc	3,2
  9827  03CA  2BDB               	goto	l2366
  9828  03CB  3001               	movlw	1
  9829  03CC  00F1               	movwf	??_GPIO_PinDirection
  9830  03CD  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  9831  03CE  2BD1               	goto	u2094
  9832  03CF                     u2095:	
  9833  03CF  1003               	clrc
  9834  03D0  0DF1               	rlf	??_GPIO_PinDirection,f
  9835  03D1                     u2094:	
  9836  03D1  3EFF               	addlw	-1
  9837  03D2  1D03               	skipz
  9838  03D3  2BCF               	goto	u2095
  9839  03D4  0871               	movf	??_GPIO_PinDirection,w
  9840  03D5  00F2               	movwf	??_GPIO_PinDirection+1
  9841  03D6  0872               	movf	??_GPIO_PinDirection+1,w
  9842  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  9843  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  9844  03D9  0489               	iorwf	9,f	;volatile
  9845  03DA  0008               	return
  9846  03DB                     l2366:	
  9847  03DB  3001               	movlw	1
  9848  03DC  00F1               	movwf	??_GPIO_PinDirection
  9849  03DD  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  9850  03DE  2BE1               	goto	u2104
  9851  03DF                     u2105:	
  9852  03DF  1003               	clrc
  9853  03E0  0DF1               	rlf	??_GPIO_PinDirection,f
  9854  03E1                     u2104:	
  9855  03E1  3EFF               	addlw	-1
  9856  03E2  1D03               	skipz
  9857  03E3  2BDF               	goto	u2105
  9858  03E4  0871               	movf	??_GPIO_PinDirection,w
  9859  03E5  3AFF               	xorlw	255
  9860  03E6  00F2               	movwf	??_GPIO_PinDirection+1
  9861  03E7  0872               	movf	??_GPIO_PinDirection+1,w
  9862  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  9863  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  9864  03EA  0589               	andwf	9,f	;volatile
  9865                           
  9866                           ;gpio.c: 101: }
  9867                           
  9868                           ;gpio.c: 99: break;
  9869  03EB  0008               	return
  9870  03EC                     l2370:	
  9871  03EC  0873               	movf	GPIO_PinDirection@var_portNumber_u8,w
  9872                           
  9873                           ; Switch size 1, requested type "space"
  9874                           ; Number of cases is 5, Range of values is 0 to 4
  9875                           ; switch strategies available:
  9876                           ; Name         Instructions Cycles
  9877                           ; simple_byte           16     9 (average)
  9878                           ; direct_byte           23     8 (fixed)
  9879                           ; jumptable            260     6 (fixed)
  9880                           ;	Chosen strategy is simple_byte
  9881  03ED  3A00               	xorlw	0	; case 0
  9882  03EE  1903               	skipnz
  9883  03EF  2B38               	goto	l2338
  9884  03F0  3A01               	xorlw	1	; case 1
  9885  03F1  1903               	skipnz
  9886  03F2  2B5C               	goto	l2344
  9887  03F3  3A03               	xorlw	3	; case 2
  9888  03F4  1903               	skipnz
  9889  03F5  2B80               	goto	l2350
  9890  03F6  3A01               	xorlw	1	; case 3
  9891  03F7  1903               	skipnz
  9892  03F8  2BA4               	goto	l2356
  9893  03F9  3A07               	xorlw	7	; case 4
  9894  03FA  1903               	skipnz
  9895  03FB  2BC8               	goto	l2362
  9896  03FC  2BFD               	goto	l122
  9897  03FD                     l122:	
  9898  03FD  0008               	return
  9899  03FE                     __end_of_GPIO_PinDirection:	
  9900                           
  9901                           	psect	text56
  9902  133F                     __ptext56:	
  9903 ;; *************** function _DELAY_ms *****************
  9904 ;; Defined at:
  9905 ;;		line 75 in file "../00-libfiles/delay.c"
  9906 ;; Parameters:    Size  Location     Type
  9907 ;;  ms_count        2    2[COMMON] unsigned int 
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;		None
  9910 ;; Return value:  Size  Location     Type
  9911 ;;                  1    wreg      void 
  9912 ;; Registers used:
  9913 ;;		wreg, status,2, status,0, pclath, cstack
  9914 ;; Tracked objects:
  9915 ;;		On entry : 0/0
  9916 ;;		On exit  : 0/0
  9917 ;;		Unchanged: 0/0
  9918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9919 ;;      Params:         2       0       0       0       0
  9920 ;;      Locals:         0       0       0       0       0
  9921 ;;      Temps:          0       0       0       0       0
  9922 ;;      Totals:         2       0       0       0       0
  9923 ;;Total ram usage:        2 bytes
  9924 ;; Hardware stack levels used:    1
  9925 ;; Hardware stack levels required when called:    1
  9926 ;; This function calls:
  9927 ;;		_DELAY_us
  9928 ;; This function is called by:
  9929 ;;		_LCD_Init
  9930 ;;		_lcd_BusyCheck
  9931 ;;		_lcd_Reset
  9932 ;;		_gpio_test
  9933 ;;		_LCD_8bit_test
  9934 ;;		_LCD_4bit_test
  9935 ;;		_DELAY_sec
  9936 ;; This function uses a non-reentrant model
  9937 ;;
  9938                           
  9939                           
  9940                           ;psect for function _DELAY_ms
  9941  133F                     _DELAY_ms:	
  9942  133F                     l2332:	
  9943                           ;delay.c: 77: while (ms_count != 0)
  9944                           
  9945                           ;incstack = 0
  9946                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  9947                           
  9948  133F  0872               	movf	DELAY_ms@ms_count,w
  9949  1340  0473               	iorwf	DELAY_ms@ms_count+1,w
  9950  1341  1903               	btfsc	3,2
  9951  1342  0008               	return
  9952                           
  9953                           ;delay.c: 78: {
  9954                           ;delay.c: 79: DELAY_us(300u);
  9955  1343  302C               	movlw	44
  9956  1344  00F0               	movwf	DELAY_us@us_count
  9957  1345  3001               	movlw	1
  9958  1346  00F1               	movwf	DELAY_us@us_count+1
  9959  1347  160A  118A  22CE  160A  118A  	fcall	_DELAY_us
  9960                           
  9961                           ;delay.c: 80: ms_count--;
  9962  134C  3001               	movlw	1
  9963  134D  02F2               	subwf	DELAY_ms@ms_count,f
  9964  134E  3000               	movlw	0
  9965  134F  1C03               	skipc
  9966  1350  03F3               	decf	DELAY_ms@ms_count+1,f
  9967  1351  02F3               	subwf	DELAY_ms@ms_count+1,f
  9968  1352  2B3F               	goto	l2332
  9969  1353                     __end_of_DELAY_ms:	
  9970                           
  9971                           	psect	text57
  9972  12CE                     __ptext57:	
  9973 ;; *************** function _DELAY_us *****************
  9974 ;; Defined at:
  9975 ;;		line 56 in file "../00-libfiles/delay.c"
  9976 ;; Parameters:    Size  Location     Type
  9977 ;;  us_count        2    0[COMMON] unsigned int 
  9978 ;; Auto vars:     Size  Location     Type
  9979 ;;		None
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  1    wreg      void 
  9982 ;; Registers used:
  9983 ;;		wreg, status,2, status,0
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9989 ;;      Params:         2       0       0       0       0
  9990 ;;      Locals:         0       0       0       0       0
  9991 ;;      Temps:          0       0       0       0       0
  9992 ;;      Totals:         2       0       0       0       0
  9993 ;;Total ram usage:        2 bytes
  9994 ;; Hardware stack levels used:    1
  9995 ;; This function calls:
  9996 ;;		Nothing
  9997 ;; This function is called by:
  9998 ;;		_ADC_GetAdcValue
  9999 ;;		_DELAY_ms
 10000 ;;		_keypad_WaitForKeyRelease
 10001 ;;		_keypad_WaitForKeyPress
 10002 ;;		_lcd_BusyCheck
 10003 ;;		_lcd_Reset
 10004 ;;		_lcd_SendCmdSignals
 10005 ;;		_lcd_SendDataSignals
 10006 ;;		_seg_test
 10007 ;; This function uses a non-reentrant model
 10008 ;;
 10009                           
 10010                           
 10011                           ;psect for function _DELAY_us
 10012  12CE                     _DELAY_us:	
 10013  12CE                     l2324:	
 10014                           ;delay.c: 58: while (us_count != 0)
 10015                           
 10016                           ;incstack = 0
 10017                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
 10018                           
 10019  12CE  0870               	movf	DELAY_us@us_count,w
 10020  12CF  0471               	iorwf	DELAY_us@us_count+1,w
 10021  12D0  1903               	btfsc	3,2
 10022  12D1  0008               	return
 10023                           
 10024                           ;delay.c: 59: {
 10025                           ;delay.c: 60: us_count--;
 10026  12D2  3001               	movlw	1
 10027  12D3  02F0               	subwf	DELAY_us@us_count,f
 10028  12D4  3000               	movlw	0
 10029  12D5  1C03               	skipc
 10030  12D6  03F1               	decf	DELAY_us@us_count+1,f
 10031  12D7  02F1               	subwf	DELAY_us@us_count+1,f
 10032  12D8  2ACE               	goto	l2324
 10033  12D9                     __end_of_DELAY_us:	
 10034  007E                     btemp	set	126	;btemp
 10035  007E                     wtemp	set	126
 10036  007E                     wtemp0	set	126
 10037  0080                     wtemp1	set	128
 10038  0082                     wtemp2	set	130
 10039  0084                     wtemp3	set	132
 10040  0086                     wtemp4	set	134
 10041  0088                     wtemp5	set	136
 10042  007F                     wtemp6	set	127
 10043  007E                     ttemp	set	126
 10044  007E                     ttemp0	set	126
 10045  0081                     ttemp1	set	129
 10046  0084                     ttemp2	set	132
 10047  0087                     ttemp3	set	135
 10048  007F                     ttemp4	set	127
 10049  007E                     ltemp	set	126
 10050  007E                     ltemp0	set	126
 10051  0082                     ltemp1	set	130
 10052  0086                     ltemp2	set	134
 10053  0080                     ltemp3	set	128


Data Sizes:
    Strings     826
    Constant    16
    Data        8
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     12      45
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Printf@str	PTR unsigned char  size(1) Largest target is 0

    UART_Printf@argList	PTR const unsigned char  size(2) Largest target is 47
		 -> STR_23(CODE[10]), STR_22(CODE[40]), STR_21(CODE[21]), STR_20(CODE[29]), 
		 -> STR_19(CODE[16]), STR_18(CODE[23]), STR_17(CODE[38]), STR_16(CODE[42]), 
		 -> STR_15(CODE[34]), STR_14(CODE[41]), STR_10(CODE[41]), STR_6(CODE[41]), 
		 -> STR_4(CODE[40]), STR_3(CODE[47]), 

    UART_Printf@ptr	PTR const unsigned char  size(2) Largest target is 47
		 -> STR_23(CODE[10]), STR_22(CODE[40]), STR_21(CODE[21]), STR_20(CODE[29]), 
		 -> STR_19(CODE[16]), STR_18(CODE[23]), STR_17(CODE[38]), STR_16(CODE[42]), 
		 -> STR_15(CODE[34]), STR_14(CODE[41]), STR_10(CODE[41]), STR_6(CODE[41]), 
		 -> STR_4(CODE[40]), STR_3(CODE[47]), 

    UART_Printf@argp	PTR void [1] size(1) Largest target is 1
		 -> ?_UART_Printf(BANK0[1]), 

    UART_TxString@ptr_string	PTR const unsigned char  size(2) Largest target is 141
		 -> STR_13(CODE[77]), STR_9(CODE[53]), STR_5(CODE[49]), STR_2(CODE[37]), 
		 -> STR_1(CODE[141]), 

    RTC_GetDateTime@rtc	PTR struct . size(1) Largest target is 7
		 -> rtc_test@rtc(BANK0[7]), 

    RTC_SetDateTime@rtc	PTR struct . size(1) Largest target is 7
		 -> rtc_test@rtc(BANK0[7]), 

    LCD_DisplayString@ptr_stringPointer_u8	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_12(CODE[15]), STR_11(CODE[17]), STR_8(CODE[15]), STR_7(CODE[17]), 


Critical Paths under _main in COMMON

    _RTC_SetDateTime->_I2C_Write
    _RTC_Init->_I2C_Write
    _RTC_GetDateTime->_I2C_Read
    _KEYPAD_Init->_GPIO_PinDirection
    _KEYPAD_GetKey->_keypad_WaitForKeyPress
    _KEYPAD_GetKey->_keypad_WaitForKeyRelease
    _keypad_WaitForKeyRelease->_GPIO_PinRead
    _keypad_WaitForKeyRelease->_GPIO_PinWrite
    _keypad_WaitForKeyPress->_GPIO_PinRead
    _keypad_WaitForKeyPress->_GPIO_PinWrite
    _EEPROM_WriteByte->_eeprom_write
    _ADC_GetAdcValue->_DELAY_us
    _UART_SetBaudRate->___lldiv
    _LCD_8bit_test->_LCD_Init
    _LCD_4bit_test->_LCD_Init
    _UART_TxString->_UART_TxChar
    _UART_TxNumber->___lldiv
    ___bmul->___lldiv
    _LCD_SetUp->_GPIO_PinDirection
    _lcd_Reset->_lcd_SendHigherNibble
    _LCD_Clear->_LCD_GoToLine
    _LCD_GoToLine->_LCD_CmdWrite
    _LCD_DisplayString->_LCD_DisplayChar
    _LCD_DisplayChar->_LCD_GoToNextLine
    _lcd_DataWrite->_lcd_BusyCheck
    _lcd_DataWrite->_lcd_SendHigherNibble
    _lcd_DataWrite->_lcd_SendLowerNibble
    _lcd_SendDataSignals->_GPIO_PinWrite
    _LCD_GoToNextLine->_LCD_CmdWrite
    _LCD_CmdWrite->_lcd_BusyCheck
    _LCD_CmdWrite->_lcd_SendHigherNibble
    _LCD_CmdWrite->_lcd_SendLowerNibble
    _lcd_SendLowerNibble->_GPIO_PinWrite
    _lcd_SendHigherNibble->_GPIO_PinWrite
    _lcd_SendCmdSignals->_GPIO_PinWrite
    _lcd_BusyCheck->_GPIO_PinDirection
    _lcd_BusyCheck->_GPIO_PinRead
    _lcd_BusyCheck->_GPIO_PinWrite
    _DELAY_ms->_DELAY_us

Critical Paths under _main in BANK0

    _main->_LCD_4bit_test
    _main->_LCD_8bit_test
    _seg_test->_UART_Printf
    _rtc_test->_UART_Printf
    _keypad_test->_UART_Printf
    _gpio_test->_UART_Printf
    _eeprom_test->_UART_Printf
    _adc_test->_UART_Printf
    _UART_Init->_UART_SetBaudRate
    _LCD_8bit_test->_UART_Printf
    _LCD_4bit_test->_UART_Printf
    _UART_Printf->_UART_TxNumber
    _UART_TxNumber->___bmul

Critical Paths under _main in BANK1

    _main->_rtc_test

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  205571
                                             79 BANK0      1     1      0
                      _LCD_4bit_test
                      _LCD_8bit_test
                          _UART_Init
                        _UART_RxChar
                      _UART_TxString
                           _adc_test
                        _eeprom_test
                          _gpio_test
                        _keypad_test
                           _rtc_test
                           _seg_test
 ---------------------------------------------------------------------------------
 (1) _seg_test                                             4     4      0    6041
                                             69 BANK0      4     4      0
                           _DELAY_us
                        _UART_Printf
                        _UART_RxChar
                      _UART_TxString
 ---------------------------------------------------------------------------------
 (1) _rtc_test                                            19    19      0    5461
                                             69 BANK0      7     7      0
                                              0 BANK1     12    12      0
                    _RTC_GetDateTime
                           _RTC_Init
                    _RTC_SetDateTime
                        _UART_Printf
                        _UART_RxChar
 ---------------------------------------------------------------------------------
 (2) _RTC_SetDateTime                                      1     1      0     203
                                              1 COMMON     1     1      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Init                                             0     0      0      22
                           _I2C_Init
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTC_GetDateTime                                      2     2      0     249
                                              3 COMMON     2     2      0
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                    _i2c_WaitForIdle
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             3     3      0      46
                                              0 COMMON     3     3      0
                            _i2c_Ack
                          _i2c_NoAck
                    _i2c_WaitForIdle
 ---------------------------------------------------------------------------------
 (4) _i2c_WaitForIdle                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_NoAck                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad_test                                          8     8      0   15336
                                             69 BANK0      8     8      0
                      _KEYPAD_GetKey
                        _KEYPAD_Init
                        _UART_Printf
                        _UART_RxChar
 ---------------------------------------------------------------------------------
 (2) _KEYPAD_Init                                         10     3      7    1876
                                              5 COMMON     8     1      7
                                              0 BANK0      2     2      0
                  _GPIO_PinDirection
 ---------------------------------------------------------------------------------
 (2) _KEYPAD_GetKey                                        7     7      0    8797
                                              8 COMMON     4     4      0
                                              0 BANK0      3     3      0
                       _GPIO_PinRead
                      _GPIO_PinWrite
             _keypad_WaitForKeyPress
           _keypad_WaitForKeyRelease
 ---------------------------------------------------------------------------------
 (3) _keypad_WaitForKeyRelease                             3     3      0    3211
                                              5 COMMON     3     3      0
                           _DELAY_us
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _keypad_WaitForKeyPress                               3     3      0    3211
                                              5 COMMON     3     3      0
                           _DELAY_us
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (1) _gpio_test                                            3     3      0    6475
                                             69 BANK0      3     3      0
                           _DELAY_ms
                        _UART_Printf
                        _UART_RxChar
 ---------------------------------------------------------------------------------
 (1) _eeprom_test                                          6     6      0    5280
                                             69 BANK0      6     6      0
                    _EEPROM_ReadByte
                   _EEPROM_WriteByte
                        _UART_Printf
 ---------------------------------------------------------------------------------
 (2) _EEPROM_WriteByte                                     4     1      3     353
                                              3 COMMON     4     1      3
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         3     2      1      97
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_ReadByte                                      2     0      2     128
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_test                                             8     8      0    5655
                                             69 BANK0      8     8      0
                    _ADC_GetAdcValue
                           _ADC_Init
                        _UART_Printf
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetAdcValue                                      4     2      2     946
                                              2 COMMON     4     2      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4     698
                                             10 BANK0      4     0      4
                   _UART_SetBaudRate
 ---------------------------------------------------------------------------------
 (2) _UART_SetBaudRate                                    10     6      4     623
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _LCD_8bit_test                                       10    10      0   80120
                                             69 BANK0     10    10      0
                           _DELAY_ms
                  _LCD_DisplayString
                           _LCD_Init
                          _LCD_SetUp
                        _UART_Printf
                        _UART_RxChar
                      _UART_TxString
 ---------------------------------------------------------------------------------
 (1) _LCD_4bit_test                                       10    10      0   80120
                                             69 BANK0     10    10      0
                           _DELAY_ms
                  _LCD_DisplayString
                           _LCD_Init
                          _LCD_SetUp
                        _UART_Printf
                        _UART_RxChar
                      _UART_TxString
 ---------------------------------------------------------------------------------
 (2) _UART_RxChar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_Printf                                         34    20     14    4640
                                             35 BANK0     34    20     14
                        _UART_TxChar
                      _UART_TxNumber
                      _UART_TxString
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _UART_TxString                                        2     0      2     385
                                              1 COMMON     2     0      2
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (3) _UART_TxNumber                                       31    26      5    2202
                                              4 BANK0     31    26      5
                        _UART_TxChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_SetUp                                           12     2     10    2825
                                              5 COMMON     2     2      0
                                              0 BANK0     10     0     10
                  _GPIO_PinDirection
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     2      1   45814
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                           _DELAY_ms
                          _LCD_Clear
                       _LCD_CmdWrite
                          _lcd_Reset
 ---------------------------------------------------------------------------------
 (3) _lcd_Reset                                            0     0      0    7071
                           _DELAY_ms
                           _DELAY_us
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            0     0      0   24722
                       _LCD_CmdWrite
                       _LCD_GoToLine
 ---------------------------------------------------------------------------------
 (4) _LCD_GoToLine                                         2     2      0   12394
                                             10 COMMON     2     2      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayString                                    2     0      2   24979
                                              0 BANK0      2     0      2
                    _LCD_DisplayChar
 ---------------------------------------------------------------------------------
 (3) _LCD_DisplayChar                                      2     2      0   24722
                                             11 COMMON     2     2      0
                   _LCD_GoToNextLine
                      _lcd_DataWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_DataWrite                                        3     3      0   12328
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                _lcd_SendDataSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendDataSignals                                  0     0      0    2753
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _LCD_GoToNextLine                                     1     1      0   12328
                                             10 COMMON     1     1      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (3) _LCD_CmdWrite                                         3     3      0   12328
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (4) _lcd_SendLowerNibble                                  2     2      0    1917
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_SendHigherNibble                                 2     2      0    1917
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_SendCmdSignals                                   0     0      0    2753
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_BusyCheck                                        2     2      0    5652
                                              5 COMMON     2     2      0
                           _DELAY_ms
                           _DELAY_us
                  _GPIO_PinDirection
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _GPIO_PinWrite                                        5     4      1    1829
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (4) _GPIO_PinRead                                         5     5      0     206
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (3) _GPIO_PinDirection                                    5     4      1    1193
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _DELAY_ms                                             2     0      2    1477
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (2) _DELAY_us                                             2     0      2     924
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_4bit_test
     _DELAY_ms
       _DELAY_us
     _LCD_DisplayString
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     _LCD_Init
       _DELAY_ms
         _DELAY_us
       _LCD_Clear
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
         _LCD_GoToLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
       _lcd_Reset
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
     _LCD_SetUp
       _GPIO_PinDirection
     _UART_Printf
       _UART_TxChar
       _UART_TxNumber
         _UART_TxChar
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       _UART_TxString
         _UART_TxChar
       ___bmul
         ___lldiv (ARG)
     _UART_RxChar
     _UART_TxString
       _UART_TxChar
   _LCD_8bit_test
     _DELAY_ms
       _DELAY_us
     _LCD_DisplayString
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     _LCD_Init
       _DELAY_ms
         _DELAY_us
       _LCD_Clear
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
         _LCD_GoToLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
       _lcd_Reset
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
     _LCD_SetUp
       _GPIO_PinDirection
     _UART_Printf
       _UART_TxChar
       _UART_TxNumber
         _UART_TxChar
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       _UART_TxString
         _UART_TxChar
       ___bmul
         ___lldiv (ARG)
     _UART_RxChar
     _UART_TxString
       _UART_TxChar
   _UART_Init
     _UART_SetBaudRate
       ___lldiv
   _UART_RxChar
   _UART_TxString
     _UART_TxChar
   _adc_test
     _ADC_GetAdcValue
       _DELAY_us
     _ADC_Init
     _UART_Printf
       _UART_TxChar
       _UART_TxNumber
         _UART_TxChar
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       _UART_TxString
         _UART_TxChar
       ___bmul
         ___lldiv (ARG)
   _eeprom_test
     _EEPROM_ReadByte
     _EEPROM_WriteByte
       _eeprom_write
     _UART_Printf
       _UART_TxChar
       _UART_TxNumber
         _UART_TxChar
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       _UART_TxString
         _UART_TxChar
       ___bmul
         ___lldiv (ARG)
   _gpio_test
     _DELAY_ms
       _DELAY_us
     _UART_Printf
       _UART_TxChar
       _UART_TxNumber
         _UART_TxChar
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       _UART_TxString
         _UART_TxChar
       ___bmul
         ___lldiv (ARG)
     _UART_RxChar
   _keypad_test
     _KEYPAD_GetKey
       _GPIO_PinRead
       _GPIO_PinWrite
       _keypad_WaitForKeyPress
         _DELAY_us
         _GPIO_PinRead
         _GPIO_PinWrite
       _keypad_WaitForKeyRelease
         _DELAY_us
         _GPIO_PinRead
         _GPIO_PinWrite
     _KEYPAD_Init
       _GPIO_PinDirection
     _UART_Printf
       _UART_TxChar
       _UART_TxNumber
         _UART_TxChar
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       _UART_TxString
         _UART_TxChar
       ___bmul
         ___lldiv (ARG)
     _UART_RxChar
   _rtc_test
     _RTC_GetDateTime
       _I2C_Read
         _i2c_Ack
         _i2c_NoAck
         _i2c_WaitForIdle
       _I2C_Start
       _I2C_Stop
       _I2C_Write
         _i2c_WaitForIdle
     _RTC_Init
       _I2C_Init
       _I2C_Start
       _I2C_Stop
       _I2C_Write
         _i2c_WaitForIdle
     _RTC_SetDateTime
       _I2C_Start
       _I2C_Stop
       _I2C_Write
         _i2c_WaitForIdle
     _UART_Printf
       _UART_TxChar
       _UART_TxNumber
         _UART_TxChar
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       _UART_TxString
         _UART_TxChar
       ___bmul
         ___lldiv (ARG)
     _UART_RxChar
   _seg_test
     _DELAY_us
     _UART_Printf
       _UART_TxChar
       _UART_TxNumber
         _UART_TxChar
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       _UART_TxString
         _UART_TxChar
       ___bmul
         ___lldiv (ARG)
     _UART_RxChar
     _UART_TxString
       _UART_TxChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      C      2D       7       56.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      8B      12        0.0%
ABS                  0      0      8B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Tue May 17 12:02:36 2016

                                      pc 0002                           ___bmul@product 0022  
                     __size_of_I2C_Start 0006                              __CFG_CP$OFF 0000  
                       ?_i2c_WaitForIdle 0070                            ?_LCD_CmdWrite 0070  
                     __size_of_I2C_Write 000D                  ?_keypad_WaitForKeyPress 0070  
                                     l22 140C                                       _BF 04A0  
                                     l59 130A                                       _GO 00FA  
                                     _RD 0C60                                       _WR 0C61  
                                     fsr 0004                            ?_LCD_GoToLine 0070  
               _keypad_WaitForKeyRelease 0C41                              __CFG_LVP$ON 0000  
                                    l122 03FD                                      l220 12F4  
                                    l214 0006                                      l152 04D6  
                                    l240 129A                                      l208 128C  
                                    l234 12E4                                      l226 13B6  
                                    l246 12A1                                      l276 0C59  
                                    l470 128F                                      l359 0050  
                                    l720 15A9                                      l289 0BF9  
                                    l715 0BE0                                      l476 12BD  
                                    l662 0156                                      l399 0F94  
                                    l752 0B5D                                      l677 0E7A  
                                    l686 0E02                                      _GIE 005F  
                                    _PEN 048A                             __CFG_CPD$OFF 0000  
                                    _SEN 0488          EEPROM_WriteByte@v_eepromData_u8 0075  
                                    _R_W 04A2                  __end_of_RTC_SetDateTime 1745  
                                    fsr0 0004                                      indf 0000  
                           __CFG_FOSC$HS 0000   keypad_WaitForKeyRelease@v_keyStatus_u8 0076  
                           ?_KEYPAD_Init 0075                  __end_of_ADC_GetAdcValue 1415  
                __end_of_LCD_DisplayChar 13B1                                     l3100 069B  
                                   l3102 06B0                                     l3030 164B  
                                   l2400 04A1                                     l3120 0715  
                                   l3114 06F6                                     l3034 1689  
                                   l2324 12CE                                     l2332 133F  
                                   l2420 0CD1                                     l2404 04B4  
                                   l3108 06CF                                     l3220 0177  
                                   l2350 0380                                     l2342 034B  
                                   l2422 0CDF                                     l2430 0D14  
                                   l3134 0751                                     l3126 073C  
                                   l3070 0632                                     l3310 01E8  
                                   l2360 03B7                                     l2344 035C  
                                   l2424 0CED                                     l2416 0CB5  
                                   l2408 04C5                                     l3152 07A7  
                                   l3144 077D                                     l3136 0762  
                                   l3160 07E1                                     l3072 0637  
                                   l3232 0E17                                     l3400 0EA9  
                                   l2362 03C8                                     l2354 0393  
                                   l2338 0338                                     l2370 03EC  
                                   l2418 0CC3                                     l2530 151A  
                                   l3146 0790                                     l3090 0674  
                                   l3066 0608                                     l3162 05D3  
                                   l3218 0158                                     l3170 010F  
                                   l3410 0EC7                                     l3402 0EAF  
                                   l2356 03A4                                     l2348 036F  
                                   l2428 0D03                                     l2380 0424  
                                   l2452 0FED                                     l2540 1330  
                                   l3156 07A9                                     l3244 0D9F  
                                   l3324 0B91                                     l3340 175B  
                                   l2620 13CC                                     l3260 0D42  
                                   l3412 0ECD                                     l3404 0EB5  
                                   l2366 03DB                                     l2382 0435  
                                   l2526 1502                                     l3078 0643  
                                   l3158 07DB                                     l2622 13CF  
                                   l3414 0ED3                                     l3406 0EBB  
                                   l2392 046C                                     l2376 0411  
                                   l2456 0FF8                                     l2544 1336  
                                   l2560 17C2                                     l3088 065E  
                                   l3192 0129                                     l2712 0C3D  
                                   l2632 0C46                                     l3344 1787  
                                   l3264 0D4E                                     l3408 0EC1  
                                   l2394 047D                                     l2386 0448  
                                   l2474 14CD                                     l2802 05C5  
                                   l3186 0123                                     l2706 0C28  
                                   l2650 0C75                                     l3290 01B0  
                                   l3418 0ED8                                     l2388 0459  
                                   l2740 13A2                                     l2572 17F7  
                                   l2644 0C60                                     l2398 0490  
                                   l2478 14E5                                     l2558 17B2  
                                   l2662 0C88                                     l2910 00F3  
                                   l2568 17EA                                     l2760 04E0  
                                   l2752 143A                                     l2840 16BE  
                                   l2738 139D                                     l2906 00D0  
                                   l2924 02B8                                     l2780 058F  
                                   l2772 052D                                     l2676 0BE6  
                                   l2668 0C9D                                     l2926 02BF  
                                   l2790 0530                                     l2766 051E  
                                   l2694 0C15                                     l2846 16D3  
                                   l2960 003F                                     l2936 02E9  
                                   l2792 05A0                                     l2768 0522  
                                   l2688 0C00                                     l2880 0089  
                                   l2970 1415                                     l2954 002E  
                                   l2874 0084                                     l2796 05B0  
                                   l2788 059B                                     l2892 00AD  
                                   l2868 006E                                     l2896 00B7  
                                   l2888 009B                                     _ADON 00F8  
                                   STR_1 0822                                     STR_2 0A83  
            __end_of_A_KeyLookUptable_U8 0822                                     STR_3 0962  
                                   STR_4 0A0D                                     STR_5 0931  
                                   STR_6 09E4                                     STR_7 0B13  
                                   STR_8 0B43                                     STR_9 08FC  
                                   u2004 0365                                     u2005 0363  
                                   u2014 0375                                     u2015 0373  
                                   u2104 03E1                                     u2105 03DF  
                                   u2034 0389                                     u2035 0387  
                                   u2115 0402                                     u2044 0399  
                                   u2204 0472                                     u2045 0397  
                                   u2205 0470                                     u2134 041A  
                                   u2135 0418                                     u2064 03AD  
                                   u2224 0486                                     u2144 042A  
                                   u2065 03AB                                     u2225 0484  
                                   u2145 0428                                     u2074 03BD  
                                   u2410 0CFE                                     u2314 0CC9  
                                   u2234 0496                                     u2075 03BB  
                                   u2315 0CC7                                     u2235 0494  
                                   u2420 0CFF                                     u2404 0CF3  
                                   u2164 043E                                     u2500 1589  
                                   u2405 0CF1                                     u2165 043C  
                                   u2094 03D1                                     u2254 04AA  
                                   u2174 044E                                     u2510 158A  
                                   u3150 050F                                     u2095 03CF  
                                   u2255 04A8                                     u2175 044C  
                                   u2344 0CD7                                     u2264 04BA  
                                   u2600 1559                                     u2520 1599  
                                   u3160 0510                                     u3144 04F4  
                                   u2345 0CD5                                     u2265 04B8  
                                   u3145 04F1                                     u2194 0462  
                                   u2610 155A                                     u2530 159A  
                                   u2275 0CA6                                     u2195 0460  
                                   u2284 0CBB                                     u2540 1529  
                                   u2460 1569                                     u2285 0CB9  
                                   u2374 0CE5                                     u2550 152A  
                                   u2470 156A                                     u2375 0CE3  
                                   u3255 13F5                                     u2560 1539  
                                   u2480 1579                                     u3513 1649  
                                   u3425 00D7                                     u2570 153A  
                                   u2490 157A                                     u2635 14DB  
                                   u3523 165A                                     u2580 1549  
                                   u2590 154A                                     u2815 17C4  
                                   u3535 1665                                     u2745 1510  
                                   u2825 17D9                                     u1955 0329  
                                   u2835 17EB                                     u1974 0341  
                                   u1975 033F                                     u1984 0351  
                                   u1985 034F                                     u2795 17B6  
                                   _RCEN 048B                                     _RCIF 0065  
                                   _RSEN 0489                                     _WREN 0C62  
                                   _TXIF 0064                           ??_eeprom_write 0071  
                           __CFG_WRT$OFF 0000                                     _main 0E7B  
                     __size_of_LCD_Clear 000B                         __end_of_I2C_Init 130A  
                       __end_of_I2C_Read 13D1                                     btemp 007E  
                       __end_of_I2C_Stop 0009                         __end_of_ADC_Init 12AC  
                                   ltemp 007E                       __size_of_LCD_SetUp 00D1  
                                   start 0000                                     ttemp 007E  
                                   wtemp 007E                         __end_of_DELAY_ms 1353  
                       __end_of_DELAY_us 12D9                 __size_of_EEPROM_ReadByte 0011  
                      ___bmul@multiplier 0023                            ?_GPIO_PinRead 0070  
                        __end_of_i2c_Ack 129D           __end_of_keypad_WaitForKeyPress 0C41  
                         ??_LCD_CmdWrite 0077                            _KEYPAD_GetKey 005A  
                            LCD_SetUp@D0 0022                              LCD_SetUp@D1 0023  
                            LCD_SetUp@D2 0024                              LCD_SetUp@D3 0025  
                            LCD_SetUp@D4 0026                              LCD_SetUp@D5 0027  
                            LCD_SetUp@D6 0028                              LCD_SetUp@D7 0029  
                            LCD_SetUp@EN 0021                              LCD_SetUp@RS 0076  
                            LCD_SetUp@RW 0020                           ??_LCD_GoToLine 007A  
                        ??_LCD_4bit_test 0065                            _GPIO_PinWrite 03FE  
                       __end_of_LCD_Init 005A                  LCD_CmdWrite@v_lcdCmd_u8 0079  
                                  ?_main 0070                                    _ACKEN 048C  
                                  _ACKDT 048D                                    _EEADR 010D  
                                  STR_10 09E4                                    STR_11 0B13  
                                  STR_12 0B34                                    STR_20 0ACA  
                                  STR_21 0AFE                                    STR_13 08AF  
                                  STR_22 0A35                                    STR_14 09BB  
                                  STR_23 0B52                                    STR_15 0AA8  
                                  STR_16 0991                                    STR_17 0A5D  
                          __CFG_WDTE$OFF 0000                                    STR_18 0AE7  
                                  STR_19 0B24                                    _CARRY 0018  
                        __end_of___lldiv 1800                                    _RCREG 001A  
                                  _RCSTA 0018                                    _SPBRG 0099  
                                  _PORTA 0005                                    _PORTB 0006  
                                  _PORTC 0007                                    _PORTD 0008  
                                  _PORTE 0009                                    _TRISA 0085  
                                  _TRISB 0086                                    _TRISC 0087  
                                  _TRISD 0088                                    _TRISE 0089  
                                  _TXREG 0019                          ??_LCD_8bit_test 0065  
                                  _TXSTA 0098                       __size_of_UART_Init 0016  
  LCD_DisplayString@ptr_stringPointer_u8 0020                             ?_keypad_test 0070  
                       __end_of_RTC_Init 13F1                        __end_of_I2C_Start 128F  
                      __end_of_I2C_Write 12FC                           __CFG_BOREN$OFF 0000  
                                  pclath 000A                                    ltemp0 007E  
                                  ltemp1 0082                                    ltemp2 0086  
                                  ltemp3 0080             __end_of_lcd_SendHigherNibble 1564  
                                  ttemp0 007E                                    ttemp1 0081  
                                  ttemp2 0084                                    ttemp3 0087  
                                  ttemp4 007F                                    status 0003  
                                  wtemp0 007E                                    wtemp1 0080  
                                  wtemp2 0082                                    wtemp3 0084  
                                  wtemp4 0086                                    wtemp5 0088  
                                  wtemp6 007F                           ??_GPIO_PinRead 0070  
                        __initialization 07E8               GPIO_PinWrite@enm_pinNumber 0074  
                         ?_KEYPAD_GetKey 0070                             __end_of_main 0EF5  
                         ?_GPIO_PinWrite 0070                        _GPIO_PinDirection 0325  
                                 ??_main 006F              __size_of_lcd_SendCmdSignals 002D  
                      __end_of_LCD_Clear 12E4                       RTC_SetDateTime@rtc 0071  
                       ?_RTC_SetDateTime 0070                       ?_GPIO_PinDirection 0070  
                      __end_of_LCD_SetUp 0325                         ?_ADC_GetAdcValue 0072  
                                 _ADCON0 001F                                   _ADCON1 009F  
                       ?_LCD_DisplayChar 0070              LCD_DisplayChar@v_lcdData_u8 007C  
                                 _ADRESH 001E                                   _ADRESL 009E  
                                 _EEDATA 010C                       __size_of_i2c_NoAck 0007  
                                 _EECON1 018C                                   _EECON2 018D  
                    ??_GPIO_PinDirection 0071                         __end_of_adc_test 15EA  
                      ?_UART_SetBaudRate 0020                                   _SSPADD 0093  
                                 _TRISC3 043B                                   _TRISC4 043C  
                                 _SSPCON 0014                                   _SSPBUF 0013  
                              ??_i2c_Ack 0070                    lcd_BusyCheck@busyflag 0076  
                     ??_UART_SetBaudRate 0024                             ?_UART_RxChar 0070  
                         __CFG_PWRTE$OFF 0000                             ?_UART_TxChar 0070  
                           ?_UART_Printf 0043                     __size_of_eeprom_test 005F  
                  I2C_Write@v_i2cData_u8 0070                GPIO_PinRead@enm_pinNumber 0074  
                      __end_of_UART_Init 1392                                   ___bmul 132C  
                              ??___lldiv 0078                __end_of_GPIO_PinDirection 03FE  
                           KEYPAD_Init@i 0021                        ??_EEPROM_ReadByte 0072  
         GPIO_PinDirection@enm_pinNumber 0074                     __end_of_eeprom_write 0B82  
               __end_of_EEPROM_WriteByte 12CE                         DELAY_ms@ms_count 0072  
                       __end_of_seg_test 0D8B  UART_TxNumber@v_numOfDigitsToTransmit_u8 0028  
                              ?_I2C_Init 0070                                ?_I2C_Read 0070  
                              ?_I2C_Stop 0070                                ?_ADC_Init 0070  
                      ?_LCD_GoToNextLine 0070                         __end_of_rtc_test 0254  
                              ?_DELAY_ms 0072                                ?_DELAY_us 0070  
            __end_of_lcd_SendLowerNibble 15A4                       ??_LCD_GoToNextLine 007A  
                   __end_of_LCD_CmdWrite 14EF                     __size_of_KEYPAD_Init 0059  
                   __end_of_LCD_GoToLine 137C              lcd_SendLowerNibble@dataByte 0076  
                __end_of__initialization 07FC                                ?_LCD_Init 007C  
                  __end_of_UART_TxNumber 05C9                    __end_of_UART_TxString 145F  
             ??_keypad_WaitForKeyRelease 0075                          ??_KEYPAD_GetKey 0078  
                    ___bmul@multiplicand 0020                          ??_GPIO_PinWrite 0071  
                         __pcstackCOMMON 0070                             __pidataBANK1 12B4  
                  __end_of_lcd_DataWrite 1524                        __end_of_i2c_NoAck 12A4  
                              ?_RTC_Init 0070                     _lcd_SendHigherNibble 1524  
                             ??_I2C_Init 0070                               ??_I2C_Read 0070  
                     __size_of_lcd_Reset 004F                               ??_I2C_Stop 0070  
                             ??_ADC_Init 0070             __size_of_lcd_SendDataSignals 002E  
                      eeprom_write@value 0070                               ??_DELAY_ms 0074  
                             ??_DELAY_us 0072                     __end_of_GPIO_PinRead 0D16  
         GPIO_PinWrite@var_portNumber_u8 0073                     eeprom_test@read_char 0068  
               __size_of_RTC_GetDateTime 007F                               __pbssBANK1 00A0  
                  __end_of_lcd_BusyCheck 1000             lcd_SendHigherNibble@dataByte 0076  
           GPIO_PinWrite@var_pinValue_u8 0070                     __size_of_keypad_test 005D  
                             ??_LCD_Init 007D                       __size_of_gpio_test 00A1  
                             __pmaintext 0E7B                                  ?___bmul 0020  
    EEPROM_WriteByte@v_eepromAddress_u16 0073               __size_of_GPIO_PinDirection 00D9  
                             ??_RTC_Init 0071                            seg_test@F1296 00C9  
                  ?_lcd_SendHigherNibble 0070                                ?_adc_test 0070  
                                _GO_DONE 00FA                 __size_of_i2c_WaitForIdle 000B  
                           adc_test@temp 0067                         DELAY_us@us_count 0070  
                                _SSPSTAT 0094                               __stringtab 0800  
                                _i2c_Ack 1296                                _I2C_Start 1289  
                              _I2C_Write 12EF                         KEYPAD_Init@col_0 0078  
                       KEYPAD_Init@col_1 0079                         KEYPAD_Init@col_2 007A  
                       KEYPAD_Init@col_3 007B                                ?_seg_test 0070  
                      __end_of_lcd_Reset 1639                         KEYPAD_Init@row_0 0020  
                       KEYPAD_Init@row_1 0075                         KEYPAD_Init@row_2 0076  
                       KEYPAD_Init@row_3 0077                     __size_of_UART_RxChar 0007  
                  __size_of_eeprom_write 0026                     __size_of_UART_TxChar 0009  
                        __size_of___bmul 0013                                ?_rtc_test 0070  
                   __size_of_UART_Printf 021F                LCD_Init@v_lcdNoOfLines_u8 0020  
                                ___lldiv 17A2       EEPROM_ReadByte@v_eepromAddress_u16 0070  
                  __end_of_LCD_4bit_test 0E03                                  __ptext1 0D16  
                                __ptext2 019A                                  __ptext3 16EB  
                                __ptext4 13D1                                  __ptext5 12FC  
                                __ptext6 0EF5                                  __ptext7 12EF  
                                __ptext8 0003                                  __ptext9 1289  
                             ??_adc_test 0065                        __end_of_gpio_test 019A  
                  __size_of_LCD_CmdWrite 0035                                _LCDConfig 00A0  
                  __size_of_LCD_GoToLine 0015                    __end_of_LCD_8bit_test 0E7B  
                              _LCD_Clear 12D9                           UART_Printf@ptr 0060  
                         UART_Printf@str 0053             KEYPAD_GetKey@v_KeyPressed_u8 0020  
                              _LCD_SetUp 0254                                  clrloop0 12AD  
                   end_of_initialization 07FC                           UART_TxNumber@a 0035  
                         UART_TxNumber@i 0042                   I2C_Read@v_ackOption_u8 0071  
           LCD_Init@v_MaxCharsPerLine_u8 007C                            _A_ColsPins_U8 00AE  
                           _eeprom_write 0B5C                               ?_I2C_Start 0070  
                        _EEPROM_ReadByte 130A                               ?_I2C_Write 0070  
       __end_of_keypad_WaitForKeyRelease 0CA1                        ??_RTC_GetDateTime 0073  
                             ??_seg_test 007E                          ___lldiv@divisor 0070  
                        ___lldiv@counter 007D           UART_SetBaudRate@v_baudRate_u32 0020  
                             ??_rtc_test 00B9                             __pstringtext 0800  
                 ??_lcd_SendHigherNibble 0075               __end_of_lcd_SendCmdSignals 148C  
                           _LCD_CmdWrite 14BA                                _UART_Init 137C  
              __size_of_UART_SetBaudRate 0059                             _LCD_GoToLine 1367  
       ADC_GetAdcValue@var_adcChannel_u8 0075                    __size_of_GPIO_PinRead 0075  
                      ?_EEPROM_WriteByte 0073                       ??_EEPROM_WriteByte 0076  
                             ?_LCD_Clear 0070                        __size_of_I2C_Init 000E  
                      __size_of_I2C_Read 0020                        __size_of_I2C_Stop 0006  
                             ?_LCD_SetUp 0020                        __size_of_ADC_Init 0008  
                      __size_of_DELAY_ms 0014                        __size_of_DELAY_us 000B  
               __size_of_RTC_SetDateTime 005A                        ??_i2c_WaitForIdle 0070  
               ??_keypad_WaitForKeyPress 0075                            ??_eeprom_test 0065  
               __size_of_ADC_GetAdcValue 0024                 __size_of_LCD_DisplayChar 001F  
                      __size_of_LCD_Init 0051                __size_of_LCD_GoToNextLine 0014  
                            rtc_test@rtc 0065                      _lcd_SendDataSignals 148C  
        UART_TxNumber@v_numericSystem_u8 0041       GPIO_PinDirection@var_portNumber_u8 0073  
                           _GPIO_PinRead 0CA1                           __end_of___bmul 133F  
                             ?_UART_Init 002A                                _i2c_NoAck 129D  
               _ARR_LcdLineNumAddress_U8 00C5                        __size_of_RTC_Init 0020  
                    start_initialization 07E8                     ?_lcd_SendDataSignals 0070  
                 _v_LcdTrackCursorPos_U8 00B7                            ??_KEYPAD_Init 007C  
                __end_of_EEPROM_ReadByte 131B                  keypad_WaitForKeyPress@i 0077  
              eeprom_test@eeprom_address 0069                               gpio_test@i 0067  
          GPIO_PinRead@var_portNumber_u8 0072                              ??_I2C_Start 0070  
           __size_of_lcd_SendLowerNibble 0040                              ??_I2C_Write 0070  
        GPIO_PinDirection@var_pinDirn_u8 0070                    __end_of_KEYPAD_GetKey 00F9  
                               ??___bmul 0021                               init_fetch0 131B  
                  __end_of_GPIO_PinWrite 04D7                      __end_of_eeprom_test 0BE1  
                            __pdataBANK1 00C5                        _UART_TxNumber$486 003F  
                             ?_i2c_NoAck 0070     keypad_WaitForKeyPress@v_keyStatus_u8 0076  
      __size_of_keypad_WaitForKeyRelease 0060                    ??_lcd_SendDataSignals 0075  
                   _v_LcdTrackLineNum_U8 00B8                   __size_of_UART_TxNumber 00F2  
              ?_keypad_WaitForKeyRelease 0070                        __size_of_adc_test 0046  
                    _A_KeyLookUptable_U8 0812                                ___latbits 0002  
                  lcd_DataWrite@dataByte 0079                   __size_of_UART_TxString 0025  
                          __pcstackBANK0 0020                            __pcstackBANK1 00B9  
                            ??_LCD_Clear 007C                              ??_LCD_SetUp 0075  
                          ??_keypad_test 0065                   __size_of_lcd_DataWrite 0035  
                       eeprom_write@addr 0072                      __end_of_KEYPAD_Init 16EB  
                               ?_i2c_Ack 0070          __size_of_keypad_WaitForKeyPress 0060  
            LCD_GoToLine@v_lineNumber_u8 007B                        ??_RTC_SetDateTime 0071  
                      __size_of_seg_test 0075                                 ?___lldiv 0070  
                      ??_ADC_GetAdcValue 0074                                _lcd_Reset 15EA  
                      ??_LCD_DisplayChar 007B                              ??_UART_Init 007E  
                       _UART_SetBaudRate 1639                        __size_of_rtc_test 00BA  
                   I2C_Read@v_i2cData_u8 0072                              adc_test@pot 006B  
                 __size_of_lcd_BusyCheck 008C                                 _I2C_Init 12FC  
                               _I2C_Read 13B1                                 _I2C_Stop 0003  
                               _ADC_Init 12A4                        _LCD_DisplayString 1415  
                              _gpio_test 00F9                                 _DELAY_ms 133F  
                               _DELAY_us 12CE                          _RTC_GetDateTime 0EF5  
                     ?_LCD_DisplayString 0020                         ?_EEPROM_ReadByte 0070  
                              _mm_option 00B6                            UART_Printf@ch 0062  
                               _LCD_Init 0009                      ??_LCD_DisplayString 007D  
                    __end_of_keypad_test 17A2                                clear_ram0 12AC  
                          ??_UART_RxChar 0070                              _eeprom_test 0B82  
                          ??_UART_TxChar 0070                            _UART_TxNumber 04D7  
                       _LCD_GoToNextLine 1353                            ??_UART_Printf 0051  
                          _UART_TxString 143A                            adc_test@light 0069  
                UART_Init@v_baudRate_u32 002A                               ?_lcd_Reset 0070  
                          _lcd_DataWrite 14EF                  UART_TxString@ptr_string 0071  
                  eeprom_test@write_char 006A                                 _RTC_Init 13D1  
               GPIO_PinRead@returnStatus 0073                              __stringbase 0812  
                          _A_RowsPins_U8 00B2                              ??_i2c_NoAck 0070  
                 _keypad_WaitForKeyPress 0BE1                __end_of_LCD_DisplayString 143A  
                        _i2c_WaitForIdle 12E4                               ?_gpio_test 0070  
                            _KEYPAD_Init 1692                       _lcd_SendCmdSignals 145F  
                          _lcd_BusyCheck 0F74                __size_of_EEPROM_WriteByte 0009  
                    ?_lcd_SendCmdSignals 0070                UART_TxNumber@v_number_u32 0024  
                         ?_UART_TxNumber 0024                   __size_of_LCD_4bit_test 0078  
                       __size_of_i2c_Ack 0007                           ?_UART_TxString 0071  
               UART_TxChar@v_uartData_u8 0070                   __size_of_LCD_8bit_test 0078  
                         ?_lcd_DataWrite 0070                      __end_of_UART_RxChar 1296  
                    __end_of_UART_TxChar 12C5                         __size_of___lldiv 005E  
                    __end_of_UART_Printf 07E8                       __end_of__stringtab 0812  
                   ??_lcd_SendCmdSignals 0075            __size_of_lcd_SendHigherNibble 0040  
                               _adc_test 15A4                  __end_of_RTC_GetDateTime 0F74  
                    _lcd_SendLowerNibble 1564                           KEYPAD_GetKey@i 0022  
                         KEYPAD_GetKey@j 0021                                 __ptext10 13B1  
                               __ptext11 12E4                                 __ptext20 0B82  
                               __ptext12 129D                                 __ptext21 12C5  
                               __ptext13 1296                                 __ptext30 0D8B  
                               __ptext22 0B5C                                 __ptext14 1745  
                               __ptext31 128F                                 __ptext23 130A  
                               __ptext15 1692                                 __ptext40 15EA  
                               __ptext32 05C9                                 __ptext24 15A4  
                               __ptext16 005A                                 __ptext41 12D9  
                               __ptext33 143A                                 __ptext25 12A4  
                               __ptext17 0C41                                 __ptext50 1524  
                               __ptext42 1367                                 __ptext34 04D7  
                               __ptext26 13F1                                 __ptext18 0BE1  
                               __ptext51 145F                                 __ptext43 1415  
                               __ptext35 17A2                                 __ptext27 137C  
                               __ptext19 00F9                                 __ptext52 0F74  
                               __ptext44 1392                                 __ptext36 132C  
                               __ptext28 1639                                 __ptext53 03FE  
                               __ptext45 14EF                                 __ptext37 12BC  
                               __ptext29 0E03                                 __ptext54 0CA1  
                               __ptext46 148C                                 __ptext38 0254  
                               __ptext55 0325                                 __ptext47 1353  
                               __ptext39 0009                                 __ptext56 133F  
                               __ptext48 14BA                                 __ptext57 12CE  
                               __ptext49 1564                              _keypad_test 1745  
                         ?_lcd_BusyCheck 0070                            __size_of_main 007A  
                   ?_lcd_SendLowerNibble 0070                                 _seg_test 0D16  
                               _rtc_test 019A                          UART_Printf@argp 0064  
                __end_of_i2c_WaitForIdle 12EF                              ??_lcd_Reset 0077  
               UART_SetBaudRate@RegValue 0029                            _LCD_4bit_test 0D8B  
             __size_of_LCD_DisplayString 0025                              ??_gpio_test 0065  
                               init_ram0 131F                       RTC_GetDateTime@rtc 0074  
                          _LCD_8bit_test 0E03                keypad_WaitForKeyRelease@i 0077  
                        _RTC_SetDateTime 16EB                          ??_UART_TxNumber 0029  
               __end_of_UART_SetBaudRate 1692                          _ADC_GetAdcValue 13F1  
                        ??_UART_TxString 0073                    ??_lcd_SendLowerNibble 0075  
                       ___lldiv@dividend 0074                          _LCD_DisplayChar 1392  
                            _UART_RxChar 128F                                stringcode 080A  
                            _UART_TxChar 12BC                              _UART_Printf 05C9  
                        ??_lcd_DataWrite 0077              __end_of_lcd_SendDataSignals 14BA  
                         ?_LCD_4bit_test 0070                         ?_RTC_GetDateTime 0070  
                       ___lldiv@quotient 0079                 __end_of_LCD_GoToNextLine 1367  
                               stringtab 0800                           ?_LCD_8bit_test 0070  
                        ??_lcd_BusyCheck 0075                   __size_of_KEYPAD_GetKey 009F  
                 __size_of_GPIO_PinWrite 00D9    UART_Printf@v_numOfDigitsToTransmit_u8 0063  
                     UART_Printf@argList 0043                         _EEPROM_WriteByte 12C5  
                          ?_eeprom_write 0070                         seg_test@seg_code 0065  
                           ?_eeprom_test 0070                           keypad_test@key 006C  
                   UART_Printf@v_num_s16 0058                     UART_Printf@v_num_s32 0054  
                   UART_Printf@v_num_u16 005E                     UART_Printf@v_num_u32 005A  
