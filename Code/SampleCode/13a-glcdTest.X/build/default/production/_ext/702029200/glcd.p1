Version 3.2 HI-TECH Software Intermediate Code
"105 ../00-libfiles/glcd.h
[s S96 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S96 . PageNum LineNum CursorPos Invertdisplay ]
"1337 C:\Program Files\Microchip\xc8\v1.36\include\pic16f877a.h
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"1459
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"43 ../00-libfiles/glcd.c
[v _glcd_SelectPage0 `(v ~T0 @X0 0 ef ]
"46
[v _glcd_CmdWrite `(v ~T0 @X0 0 ef1`uc ]
"44
[v _glcd_SelectPage1 `(v ~T0 @X0 0 ef ]
"68 ../00-libfiles/delay.h
[v _DELAY_ms `(v ~T0 @X0 0 ef1`ui ]
"128 ../00-libfiles/glcd.h
[v _GLCD_GoToPage `(v ~T0 @X0 0 ef1`uc ]
"127
[v _GLCD_Clear `(v ~T0 @X0 0 ef ]
"130
[v _GLCD_GoToNextLine `(v ~T0 @X0 0 ef ]
"47 ../00-libfiles/glcd.c
[v _glcd_DataWrite `(v ~T0 @X0 0 ef1`uc ]
"10 C:\Program Files\Microchip\xc8\v1.36\include\stdarg.h
[v ___va_start `(*v ~T0 @X0 0 ef ]
[p i ___va_start ]
"13
[v ___va_arg `(*v ~T0 @X0 0 ev`*v ]
[p i ___va_arg ]
"129 ../00-libfiles/glcd.h
[v _GLCD_GoToLine `(v ~T0 @X0 0 ef1`uc ]
"912 ../00-libfiles/glcd.c
[c E1088 2 10 16 .. ]
[n E1088 . E_BINARY E_DECIMAL E_HEX  ]
"45
[v _glcd_BusyCheck `(v ~T0 @X0 0 ef ]
"209 C:\Program Files\Microchip\xc8\v1.36\include\pic16f877a.h
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"331
[v _PORTD `Vuc ~T0 @X0 0 e@8 ]
"67 ../00-libfiles/delay.h
[v _DELAY_us `(v ~T0 @X0 0 ef1`ui ]
[; ;pic16f877a.h: 49: extern volatile unsigned char INDF @ 0x000;
"51 C:\Program Files\Microchip\xc8\v1.36\include\pic16f877a.h
[; ;pic16f877a.h: 51: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f877a.h: 55: extern volatile unsigned char TMR0 @ 0x001;
"57
[; ;pic16f877a.h: 57: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f877a.h: 61: extern volatile unsigned char PCL @ 0x002;
"63
[; ;pic16f877a.h: 63: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f877a.h: 67: extern volatile unsigned char STATUS @ 0x003;
"69
[; ;pic16f877a.h: 69: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f877a.h: 72: typedef union {
[; ;pic16f877a.h: 73: struct {
[; ;pic16f877a.h: 74: unsigned C :1;
[; ;pic16f877a.h: 75: unsigned DC :1;
[; ;pic16f877a.h: 76: unsigned Z :1;
[; ;pic16f877a.h: 77: unsigned nPD :1;
[; ;pic16f877a.h: 78: unsigned nTO :1;
[; ;pic16f877a.h: 79: unsigned RP :2;
[; ;pic16f877a.h: 80: unsigned IRP :1;
[; ;pic16f877a.h: 81: };
[; ;pic16f877a.h: 82: struct {
[; ;pic16f877a.h: 83: unsigned :5;
[; ;pic16f877a.h: 84: unsigned RP0 :1;
[; ;pic16f877a.h: 85: unsigned RP1 :1;
[; ;pic16f877a.h: 86: };
[; ;pic16f877a.h: 87: struct {
[; ;pic16f877a.h: 88: unsigned CARRY :1;
[; ;pic16f877a.h: 89: };
[; ;pic16f877a.h: 90: struct {
[; ;pic16f877a.h: 91: unsigned :2;
[; ;pic16f877a.h: 92: unsigned ZERO :1;
[; ;pic16f877a.h: 93: };
[; ;pic16f877a.h: 94: } STATUSbits_t;
[; ;pic16f877a.h: 95: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f877a.h: 154: extern volatile unsigned char FSR @ 0x004;
"156
[; ;pic16f877a.h: 156: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f877a.h: 160: extern volatile unsigned char PORTA @ 0x005;
"162
[; ;pic16f877a.h: 162: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f877a.h: 165: typedef union {
[; ;pic16f877a.h: 166: struct {
[; ;pic16f877a.h: 167: unsigned RA0 :1;
[; ;pic16f877a.h: 168: unsigned RA1 :1;
[; ;pic16f877a.h: 169: unsigned RA2 :1;
[; ;pic16f877a.h: 170: unsigned RA3 :1;
[; ;pic16f877a.h: 171: unsigned RA4 :1;
[; ;pic16f877a.h: 172: unsigned RA5 :1;
[; ;pic16f877a.h: 173: };
[; ;pic16f877a.h: 174: } PORTAbits_t;
[; ;pic16f877a.h: 175: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f877a.h: 209: extern volatile unsigned char PORTB @ 0x006;
"211
[; ;pic16f877a.h: 211: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f877a.h: 214: typedef union {
[; ;pic16f877a.h: 215: struct {
[; ;pic16f877a.h: 216: unsigned RB0 :1;
[; ;pic16f877a.h: 217: unsigned RB1 :1;
[; ;pic16f877a.h: 218: unsigned RB2 :1;
[; ;pic16f877a.h: 219: unsigned RB3 :1;
[; ;pic16f877a.h: 220: unsigned RB4 :1;
[; ;pic16f877a.h: 221: unsigned RB5 :1;
[; ;pic16f877a.h: 222: unsigned RB6 :1;
[; ;pic16f877a.h: 223: unsigned RB7 :1;
[; ;pic16f877a.h: 224: };
[; ;pic16f877a.h: 225: } PORTBbits_t;
[; ;pic16f877a.h: 226: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f877a.h: 270: extern volatile unsigned char PORTC @ 0x007;
"272
[; ;pic16f877a.h: 272: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f877a.h: 275: typedef union {
[; ;pic16f877a.h: 276: struct {
[; ;pic16f877a.h: 277: unsigned RC0 :1;
[; ;pic16f877a.h: 278: unsigned RC1 :1;
[; ;pic16f877a.h: 279: unsigned RC2 :1;
[; ;pic16f877a.h: 280: unsigned RC3 :1;
[; ;pic16f877a.h: 281: unsigned RC4 :1;
[; ;pic16f877a.h: 282: unsigned RC5 :1;
[; ;pic16f877a.h: 283: unsigned RC6 :1;
[; ;pic16f877a.h: 284: unsigned RC7 :1;
[; ;pic16f877a.h: 285: };
[; ;pic16f877a.h: 286: } PORTCbits_t;
[; ;pic16f877a.h: 287: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f877a.h: 331: extern volatile unsigned char PORTD @ 0x008;
"333
[; ;pic16f877a.h: 333: asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
[; ;pic16f877a.h: 336: typedef union {
[; ;pic16f877a.h: 337: struct {
[; ;pic16f877a.h: 338: unsigned RD0 :1;
[; ;pic16f877a.h: 339: unsigned RD1 :1;
[; ;pic16f877a.h: 340: unsigned RD2 :1;
[; ;pic16f877a.h: 341: unsigned RD3 :1;
[; ;pic16f877a.h: 342: unsigned RD4 :1;
[; ;pic16f877a.h: 343: unsigned RD5 :1;
[; ;pic16f877a.h: 344: unsigned RD6 :1;
[; ;pic16f877a.h: 345: unsigned RD7 :1;
[; ;pic16f877a.h: 346: };
[; ;pic16f877a.h: 347: } PORTDbits_t;
[; ;pic16f877a.h: 348: extern volatile PORTDbits_t PORTDbits @ 0x008;
[; ;pic16f877a.h: 392: extern volatile unsigned char PORTE @ 0x009;
"394
[; ;pic16f877a.h: 394: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f877a.h: 397: typedef union {
[; ;pic16f877a.h: 398: struct {
[; ;pic16f877a.h: 399: unsigned RE0 :1;
[; ;pic16f877a.h: 400: unsigned RE1 :1;
[; ;pic16f877a.h: 401: unsigned RE2 :1;
[; ;pic16f877a.h: 402: };
[; ;pic16f877a.h: 403: } PORTEbits_t;
[; ;pic16f877a.h: 404: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16f877a.h: 423: extern volatile unsigned char PCLATH @ 0x00A;
"425
[; ;pic16f877a.h: 425: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f877a.h: 428: typedef union {
[; ;pic16f877a.h: 429: struct {
[; ;pic16f877a.h: 430: unsigned PCLATH :5;
[; ;pic16f877a.h: 431: };
[; ;pic16f877a.h: 432: } PCLATHbits_t;
[; ;pic16f877a.h: 433: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f877a.h: 442: extern volatile unsigned char INTCON @ 0x00B;
"444
[; ;pic16f877a.h: 444: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f877a.h: 447: typedef union {
[; ;pic16f877a.h: 448: struct {
[; ;pic16f877a.h: 449: unsigned RBIF :1;
[; ;pic16f877a.h: 450: unsigned INTF :1;
[; ;pic16f877a.h: 451: unsigned TMR0IF :1;
[; ;pic16f877a.h: 452: unsigned RBIE :1;
[; ;pic16f877a.h: 453: unsigned INTE :1;
[; ;pic16f877a.h: 454: unsigned TMR0IE :1;
[; ;pic16f877a.h: 455: unsigned PEIE :1;
[; ;pic16f877a.h: 456: unsigned GIE :1;
[; ;pic16f877a.h: 457: };
[; ;pic16f877a.h: 458: struct {
[; ;pic16f877a.h: 459: unsigned :2;
[; ;pic16f877a.h: 460: unsigned T0IF :1;
[; ;pic16f877a.h: 461: unsigned :2;
[; ;pic16f877a.h: 462: unsigned T0IE :1;
[; ;pic16f877a.h: 463: };
[; ;pic16f877a.h: 464: } INTCONbits_t;
[; ;pic16f877a.h: 465: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f877a.h: 519: extern volatile unsigned char PIR1 @ 0x00C;
"521
[; ;pic16f877a.h: 521: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f877a.h: 524: typedef union {
[; ;pic16f877a.h: 525: struct {
[; ;pic16f877a.h: 526: unsigned TMR1IF :1;
[; ;pic16f877a.h: 527: unsigned TMR2IF :1;
[; ;pic16f877a.h: 528: unsigned CCP1IF :1;
[; ;pic16f877a.h: 529: unsigned SSPIF :1;
[; ;pic16f877a.h: 530: unsigned TXIF :1;
[; ;pic16f877a.h: 531: unsigned RCIF :1;
[; ;pic16f877a.h: 532: unsigned ADIF :1;
[; ;pic16f877a.h: 533: unsigned PSPIF :1;
[; ;pic16f877a.h: 534: };
[; ;pic16f877a.h: 535: } PIR1bits_t;
[; ;pic16f877a.h: 536: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f877a.h: 580: extern volatile unsigned char PIR2 @ 0x00D;
"582
[; ;pic16f877a.h: 582: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f877a.h: 585: typedef union {
[; ;pic16f877a.h: 586: struct {
[; ;pic16f877a.h: 587: unsigned CCP2IF :1;
[; ;pic16f877a.h: 588: unsigned :2;
[; ;pic16f877a.h: 589: unsigned BCLIF :1;
[; ;pic16f877a.h: 590: unsigned EEIF :1;
[; ;pic16f877a.h: 591: unsigned :1;
[; ;pic16f877a.h: 592: unsigned CMIF :1;
[; ;pic16f877a.h: 593: };
[; ;pic16f877a.h: 594: } PIR2bits_t;
[; ;pic16f877a.h: 595: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f877a.h: 619: extern volatile unsigned short TMR1 @ 0x00E;
"621
[; ;pic16f877a.h: 621: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f877a.h: 625: extern volatile unsigned char TMR1L @ 0x00E;
"627
[; ;pic16f877a.h: 627: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f877a.h: 631: extern volatile unsigned char TMR1H @ 0x00F;
"633
[; ;pic16f877a.h: 633: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f877a.h: 637: extern volatile unsigned char T1CON @ 0x010;
"639
[; ;pic16f877a.h: 639: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f877a.h: 642: typedef union {
[; ;pic16f877a.h: 643: struct {
[; ;pic16f877a.h: 644: unsigned TMR1ON :1;
[; ;pic16f877a.h: 645: unsigned TMR1CS :1;
[; ;pic16f877a.h: 646: unsigned nT1SYNC :1;
[; ;pic16f877a.h: 647: unsigned T1OSCEN :1;
[; ;pic16f877a.h: 648: unsigned T1CKPS :2;
[; ;pic16f877a.h: 649: };
[; ;pic16f877a.h: 650: struct {
[; ;pic16f877a.h: 651: unsigned :2;
[; ;pic16f877a.h: 652: unsigned T1SYNC :1;
[; ;pic16f877a.h: 653: unsigned :1;
[; ;pic16f877a.h: 654: unsigned T1CKPS0 :1;
[; ;pic16f877a.h: 655: unsigned T1CKPS1 :1;
[; ;pic16f877a.h: 656: };
[; ;pic16f877a.h: 657: struct {
[; ;pic16f877a.h: 658: unsigned :2;
[; ;pic16f877a.h: 659: unsigned T1INSYNC :1;
[; ;pic16f877a.h: 660: };
[; ;pic16f877a.h: 661: } T1CONbits_t;
[; ;pic16f877a.h: 662: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f877a.h: 711: extern volatile unsigned char TMR2 @ 0x011;
"713
[; ;pic16f877a.h: 713: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f877a.h: 717: extern volatile unsigned char T2CON @ 0x012;
"719
[; ;pic16f877a.h: 719: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f877a.h: 722: typedef union {
[; ;pic16f877a.h: 723: struct {
[; ;pic16f877a.h: 724: unsigned T2CKPS :2;
[; ;pic16f877a.h: 725: unsigned TMR2ON :1;
[; ;pic16f877a.h: 726: unsigned TOUTPS :4;
[; ;pic16f877a.h: 727: };
[; ;pic16f877a.h: 728: struct {
[; ;pic16f877a.h: 729: unsigned T2CKPS0 :1;
[; ;pic16f877a.h: 730: unsigned T2CKPS1 :1;
[; ;pic16f877a.h: 731: unsigned :1;
[; ;pic16f877a.h: 732: unsigned TOUTPS0 :1;
[; ;pic16f877a.h: 733: unsigned TOUTPS1 :1;
[; ;pic16f877a.h: 734: unsigned TOUTPS2 :1;
[; ;pic16f877a.h: 735: unsigned TOUTPS3 :1;
[; ;pic16f877a.h: 736: };
[; ;pic16f877a.h: 737: } T2CONbits_t;
[; ;pic16f877a.h: 738: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f877a.h: 787: extern volatile unsigned char SSPBUF @ 0x013;
"789
[; ;pic16f877a.h: 789: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f877a.h: 793: extern volatile unsigned char SSPCON @ 0x014;
"795
[; ;pic16f877a.h: 795: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f877a.h: 798: typedef union {
[; ;pic16f877a.h: 799: struct {
[; ;pic16f877a.h: 800: unsigned SSPM :4;
[; ;pic16f877a.h: 801: unsigned CKP :1;
[; ;pic16f877a.h: 802: unsigned SSPEN :1;
[; ;pic16f877a.h: 803: unsigned SSPOV :1;
[; ;pic16f877a.h: 804: unsigned WCOL :1;
[; ;pic16f877a.h: 805: };
[; ;pic16f877a.h: 806: struct {
[; ;pic16f877a.h: 807: unsigned SSPM0 :1;
[; ;pic16f877a.h: 808: unsigned SSPM1 :1;
[; ;pic16f877a.h: 809: unsigned SSPM2 :1;
[; ;pic16f877a.h: 810: unsigned SSPM3 :1;
[; ;pic16f877a.h: 811: };
[; ;pic16f877a.h: 812: } SSPCONbits_t;
[; ;pic16f877a.h: 813: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f877a.h: 862: extern volatile unsigned short CCPR1 @ 0x015;
"864
[; ;pic16f877a.h: 864: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f877a.h: 868: extern volatile unsigned char CCPR1L @ 0x015;
"870
[; ;pic16f877a.h: 870: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f877a.h: 874: extern volatile unsigned char CCPR1H @ 0x016;
"876
[; ;pic16f877a.h: 876: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f877a.h: 880: extern volatile unsigned char CCP1CON @ 0x017;
"882
[; ;pic16f877a.h: 882: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f877a.h: 885: typedef union {
[; ;pic16f877a.h: 886: struct {
[; ;pic16f877a.h: 887: unsigned CCP1M :4;
[; ;pic16f877a.h: 888: unsigned CCP1Y :1;
[; ;pic16f877a.h: 889: unsigned CCP1X :1;
[; ;pic16f877a.h: 890: };
[; ;pic16f877a.h: 891: struct {
[; ;pic16f877a.h: 892: unsigned CCP1M0 :1;
[; ;pic16f877a.h: 893: unsigned CCP1M1 :1;
[; ;pic16f877a.h: 894: unsigned CCP1M2 :1;
[; ;pic16f877a.h: 895: unsigned CCP1M3 :1;
[; ;pic16f877a.h: 896: };
[; ;pic16f877a.h: 897: } CCP1CONbits_t;
[; ;pic16f877a.h: 898: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f877a.h: 937: extern volatile unsigned char RCSTA @ 0x018;
"939
[; ;pic16f877a.h: 939: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f877a.h: 942: typedef union {
[; ;pic16f877a.h: 943: struct {
[; ;pic16f877a.h: 944: unsigned RX9D :1;
[; ;pic16f877a.h: 945: unsigned OERR :1;
[; ;pic16f877a.h: 946: unsigned FERR :1;
[; ;pic16f877a.h: 947: unsigned ADDEN :1;
[; ;pic16f877a.h: 948: unsigned CREN :1;
[; ;pic16f877a.h: 949: unsigned SREN :1;
[; ;pic16f877a.h: 950: unsigned RX9 :1;
[; ;pic16f877a.h: 951: unsigned SPEN :1;
[; ;pic16f877a.h: 952: };
[; ;pic16f877a.h: 953: struct {
[; ;pic16f877a.h: 954: unsigned RCD8 :1;
[; ;pic16f877a.h: 955: unsigned :5;
[; ;pic16f877a.h: 956: unsigned RC9 :1;
[; ;pic16f877a.h: 957: };
[; ;pic16f877a.h: 958: struct {
[; ;pic16f877a.h: 959: unsigned :6;
[; ;pic16f877a.h: 960: unsigned nRC8 :1;
[; ;pic16f877a.h: 961: };
[; ;pic16f877a.h: 962: struct {
[; ;pic16f877a.h: 963: unsigned :6;
[; ;pic16f877a.h: 964: unsigned RC8_9 :1;
[; ;pic16f877a.h: 965: };
[; ;pic16f877a.h: 966: } RCSTAbits_t;
[; ;pic16f877a.h: 967: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f877a.h: 1031: extern volatile unsigned char TXREG @ 0x019;
"1033
[; ;pic16f877a.h: 1033: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f877a.h: 1037: extern volatile unsigned char RCREG @ 0x01A;
"1039
[; ;pic16f877a.h: 1039: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f877a.h: 1043: extern volatile unsigned short CCPR2 @ 0x01B;
"1045
[; ;pic16f877a.h: 1045: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f877a.h: 1049: extern volatile unsigned char CCPR2L @ 0x01B;
"1051
[; ;pic16f877a.h: 1051: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f877a.h: 1055: extern volatile unsigned char CCPR2H @ 0x01C;
"1057
[; ;pic16f877a.h: 1057: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f877a.h: 1061: extern volatile unsigned char CCP2CON @ 0x01D;
"1063
[; ;pic16f877a.h: 1063: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f877a.h: 1066: typedef union {
[; ;pic16f877a.h: 1067: struct {
[; ;pic16f877a.h: 1068: unsigned CCP2M :4;
[; ;pic16f877a.h: 1069: unsigned CCP2Y :1;
[; ;pic16f877a.h: 1070: unsigned CCP2X :1;
[; ;pic16f877a.h: 1071: };
[; ;pic16f877a.h: 1072: struct {
[; ;pic16f877a.h: 1073: unsigned CCP2M0 :1;
[; ;pic16f877a.h: 1074: unsigned CCP2M1 :1;
[; ;pic16f877a.h: 1075: unsigned CCP2M2 :1;
[; ;pic16f877a.h: 1076: unsigned CCP2M3 :1;
[; ;pic16f877a.h: 1077: };
[; ;pic16f877a.h: 1078: } CCP2CONbits_t;
[; ;pic16f877a.h: 1079: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f877a.h: 1118: extern volatile unsigned char ADRESH @ 0x01E;
"1120
[; ;pic16f877a.h: 1120: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f877a.h: 1124: extern volatile unsigned char ADCON0 @ 0x01F;
"1126
[; ;pic16f877a.h: 1126: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f877a.h: 1129: typedef union {
[; ;pic16f877a.h: 1130: struct {
[; ;pic16f877a.h: 1131: unsigned ADON :1;
[; ;pic16f877a.h: 1132: unsigned :1;
[; ;pic16f877a.h: 1133: unsigned GO_nDONE :1;
[; ;pic16f877a.h: 1134: unsigned CHS :3;
[; ;pic16f877a.h: 1135: unsigned ADCS :2;
[; ;pic16f877a.h: 1136: };
[; ;pic16f877a.h: 1137: struct {
[; ;pic16f877a.h: 1138: unsigned :2;
[; ;pic16f877a.h: 1139: unsigned GO :1;
[; ;pic16f877a.h: 1140: unsigned CHS0 :1;
[; ;pic16f877a.h: 1141: unsigned CHS1 :1;
[; ;pic16f877a.h: 1142: unsigned CHS2 :1;
[; ;pic16f877a.h: 1143: unsigned ADCS0 :1;
[; ;pic16f877a.h: 1144: unsigned ADCS1 :1;
[; ;pic16f877a.h: 1145: };
[; ;pic16f877a.h: 1146: struct {
[; ;pic16f877a.h: 1147: unsigned :2;
[; ;pic16f877a.h: 1148: unsigned nDONE :1;
[; ;pic16f877a.h: 1149: };
[; ;pic16f877a.h: 1150: struct {
[; ;pic16f877a.h: 1151: unsigned :2;
[; ;pic16f877a.h: 1152: unsigned GO_DONE :1;
[; ;pic16f877a.h: 1153: };
[; ;pic16f877a.h: 1154: } ADCON0bits_t;
[; ;pic16f877a.h: 1155: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f877a.h: 1219: extern volatile unsigned char OPTION_REG @ 0x081;
"1221
[; ;pic16f877a.h: 1221: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f877a.h: 1224: typedef union {
[; ;pic16f877a.h: 1225: struct {
[; ;pic16f877a.h: 1226: unsigned PS :3;
[; ;pic16f877a.h: 1227: unsigned PSA :1;
[; ;pic16f877a.h: 1228: unsigned T0SE :1;
[; ;pic16f877a.h: 1229: unsigned T0CS :1;
[; ;pic16f877a.h: 1230: unsigned INTEDG :1;
[; ;pic16f877a.h: 1231: unsigned nRBPU :1;
[; ;pic16f877a.h: 1232: };
[; ;pic16f877a.h: 1233: struct {
[; ;pic16f877a.h: 1234: unsigned PS0 :1;
[; ;pic16f877a.h: 1235: unsigned PS1 :1;
[; ;pic16f877a.h: 1236: unsigned PS2 :1;
[; ;pic16f877a.h: 1237: };
[; ;pic16f877a.h: 1238: } OPTION_REGbits_t;
[; ;pic16f877a.h: 1239: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f877a.h: 1288: extern volatile unsigned char TRISA @ 0x085;
"1290
[; ;pic16f877a.h: 1290: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f877a.h: 1293: typedef union {
[; ;pic16f877a.h: 1294: struct {
[; ;pic16f877a.h: 1295: unsigned TRISA0 :1;
[; ;pic16f877a.h: 1296: unsigned TRISA1 :1;
[; ;pic16f877a.h: 1297: unsigned TRISA2 :1;
[; ;pic16f877a.h: 1298: unsigned TRISA3 :1;
[; ;pic16f877a.h: 1299: unsigned TRISA4 :1;
[; ;pic16f877a.h: 1300: unsigned TRISA5 :1;
[; ;pic16f877a.h: 1301: };
[; ;pic16f877a.h: 1302: } TRISAbits_t;
[; ;pic16f877a.h: 1303: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f877a.h: 1337: extern volatile unsigned char TRISB @ 0x086;
"1339
[; ;pic16f877a.h: 1339: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f877a.h: 1342: typedef union {
[; ;pic16f877a.h: 1343: struct {
[; ;pic16f877a.h: 1344: unsigned TRISB0 :1;
[; ;pic16f877a.h: 1345: unsigned TRISB1 :1;
[; ;pic16f877a.h: 1346: unsigned TRISB2 :1;
[; ;pic16f877a.h: 1347: unsigned TRISB3 :1;
[; ;pic16f877a.h: 1348: unsigned TRISB4 :1;
[; ;pic16f877a.h: 1349: unsigned TRISB5 :1;
[; ;pic16f877a.h: 1350: unsigned TRISB6 :1;
[; ;pic16f877a.h: 1351: unsigned TRISB7 :1;
[; ;pic16f877a.h: 1352: };
[; ;pic16f877a.h: 1353: } TRISBbits_t;
[; ;pic16f877a.h: 1354: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f877a.h: 1398: extern volatile unsigned char TRISC @ 0x087;
"1400
[; ;pic16f877a.h: 1400: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f877a.h: 1403: typedef union {
[; ;pic16f877a.h: 1404: struct {
[; ;pic16f877a.h: 1405: unsigned TRISC0 :1;
[; ;pic16f877a.h: 1406: unsigned TRISC1 :1;
[; ;pic16f877a.h: 1407: unsigned TRISC2 :1;
[; ;pic16f877a.h: 1408: unsigned TRISC3 :1;
[; ;pic16f877a.h: 1409: unsigned TRISC4 :1;
[; ;pic16f877a.h: 1410: unsigned TRISC5 :1;
[; ;pic16f877a.h: 1411: unsigned TRISC6 :1;
[; ;pic16f877a.h: 1412: unsigned TRISC7 :1;
[; ;pic16f877a.h: 1413: };
[; ;pic16f877a.h: 1414: } TRISCbits_t;
[; ;pic16f877a.h: 1415: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f877a.h: 1459: extern volatile unsigned char TRISD @ 0x088;
"1461
[; ;pic16f877a.h: 1461: asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
[; ;pic16f877a.h: 1464: typedef union {
[; ;pic16f877a.h: 1465: struct {
[; ;pic16f877a.h: 1466: unsigned TRISD0 :1;
[; ;pic16f877a.h: 1467: unsigned TRISD1 :1;
[; ;pic16f877a.h: 1468: unsigned TRISD2 :1;
[; ;pic16f877a.h: 1469: unsigned TRISD3 :1;
[; ;pic16f877a.h: 1470: unsigned TRISD4 :1;
[; ;pic16f877a.h: 1471: unsigned TRISD5 :1;
[; ;pic16f877a.h: 1472: unsigned TRISD6 :1;
[; ;pic16f877a.h: 1473: unsigned TRISD7 :1;
[; ;pic16f877a.h: 1474: };
[; ;pic16f877a.h: 1475: } TRISDbits_t;
[; ;pic16f877a.h: 1476: extern volatile TRISDbits_t TRISDbits @ 0x088;
[; ;pic16f877a.h: 1520: extern volatile unsigned char TRISE @ 0x089;
"1522
[; ;pic16f877a.h: 1522: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f877a.h: 1525: typedef union {
[; ;pic16f877a.h: 1526: struct {
[; ;pic16f877a.h: 1527: unsigned TRISE0 :1;
[; ;pic16f877a.h: 1528: unsigned TRISE1 :1;
[; ;pic16f877a.h: 1529: unsigned TRISE2 :1;
[; ;pic16f877a.h: 1530: unsigned :1;
[; ;pic16f877a.h: 1531: unsigned PSPMODE :1;
[; ;pic16f877a.h: 1532: unsigned IBOV :1;
[; ;pic16f877a.h: 1533: unsigned OBF :1;
[; ;pic16f877a.h: 1534: unsigned IBF :1;
[; ;pic16f877a.h: 1535: };
[; ;pic16f877a.h: 1536: } TRISEbits_t;
[; ;pic16f877a.h: 1537: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16f877a.h: 1576: extern volatile unsigned char PIE1 @ 0x08C;
"1578
[; ;pic16f877a.h: 1578: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f877a.h: 1581: typedef union {
[; ;pic16f877a.h: 1582: struct {
[; ;pic16f877a.h: 1583: unsigned TMR1IE :1;
[; ;pic16f877a.h: 1584: unsigned TMR2IE :1;
[; ;pic16f877a.h: 1585: unsigned CCP1IE :1;
[; ;pic16f877a.h: 1586: unsigned SSPIE :1;
[; ;pic16f877a.h: 1587: unsigned TXIE :1;
[; ;pic16f877a.h: 1588: unsigned RCIE :1;
[; ;pic16f877a.h: 1589: unsigned ADIE :1;
[; ;pic16f877a.h: 1590: unsigned PSPIE :1;
[; ;pic16f877a.h: 1591: };
[; ;pic16f877a.h: 1592: } PIE1bits_t;
[; ;pic16f877a.h: 1593: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f877a.h: 1637: extern volatile unsigned char PIE2 @ 0x08D;
"1639
[; ;pic16f877a.h: 1639: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f877a.h: 1642: typedef union {
[; ;pic16f877a.h: 1643: struct {
[; ;pic16f877a.h: 1644: unsigned CCP2IE :1;
[; ;pic16f877a.h: 1645: unsigned :2;
[; ;pic16f877a.h: 1646: unsigned BCLIE :1;
[; ;pic16f877a.h: 1647: unsigned EEIE :1;
[; ;pic16f877a.h: 1648: unsigned :1;
[; ;pic16f877a.h: 1649: unsigned CMIE :1;
[; ;pic16f877a.h: 1650: };
[; ;pic16f877a.h: 1651: } PIE2bits_t;
[; ;pic16f877a.h: 1652: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f877a.h: 1676: extern volatile unsigned char PCON @ 0x08E;
"1678
[; ;pic16f877a.h: 1678: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f877a.h: 1681: typedef union {
[; ;pic16f877a.h: 1682: struct {
[; ;pic16f877a.h: 1683: unsigned nBOR :1;
[; ;pic16f877a.h: 1684: unsigned nPOR :1;
[; ;pic16f877a.h: 1685: };
[; ;pic16f877a.h: 1686: struct {
[; ;pic16f877a.h: 1687: unsigned nBO :1;
[; ;pic16f877a.h: 1688: };
[; ;pic16f877a.h: 1689: } PCONbits_t;
[; ;pic16f877a.h: 1690: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f877a.h: 1709: extern volatile unsigned char SSPCON2 @ 0x091;
"1711
[; ;pic16f877a.h: 1711: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f877a.h: 1714: typedef union {
[; ;pic16f877a.h: 1715: struct {
[; ;pic16f877a.h: 1716: unsigned SEN :1;
[; ;pic16f877a.h: 1717: unsigned RSEN :1;
[; ;pic16f877a.h: 1718: unsigned PEN :1;
[; ;pic16f877a.h: 1719: unsigned RCEN :1;
[; ;pic16f877a.h: 1720: unsigned ACKEN :1;
[; ;pic16f877a.h: 1721: unsigned ACKDT :1;
[; ;pic16f877a.h: 1722: unsigned ACKSTAT :1;
[; ;pic16f877a.h: 1723: unsigned GCEN :1;
[; ;pic16f877a.h: 1724: };
[; ;pic16f877a.h: 1725: } SSPCON2bits_t;
[; ;pic16f877a.h: 1726: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f877a.h: 1770: extern volatile unsigned char PR2 @ 0x092;
"1772
[; ;pic16f877a.h: 1772: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f877a.h: 1776: extern volatile unsigned char SSPADD @ 0x093;
"1778
[; ;pic16f877a.h: 1778: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f877a.h: 1782: extern volatile unsigned char SSPSTAT @ 0x094;
"1784
[; ;pic16f877a.h: 1784: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f877a.h: 1787: typedef union {
[; ;pic16f877a.h: 1788: struct {
[; ;pic16f877a.h: 1789: unsigned BF :1;
[; ;pic16f877a.h: 1790: unsigned UA :1;
[; ;pic16f877a.h: 1791: unsigned R_nW :1;
[; ;pic16f877a.h: 1792: unsigned S :1;
[; ;pic16f877a.h: 1793: unsigned P :1;
[; ;pic16f877a.h: 1794: unsigned D_nA :1;
[; ;pic16f877a.h: 1795: unsigned CKE :1;
[; ;pic16f877a.h: 1796: unsigned SMP :1;
[; ;pic16f877a.h: 1797: };
[; ;pic16f877a.h: 1798: struct {
[; ;pic16f877a.h: 1799: unsigned :2;
[; ;pic16f877a.h: 1800: unsigned R :1;
[; ;pic16f877a.h: 1801: unsigned :2;
[; ;pic16f877a.h: 1802: unsigned D :1;
[; ;pic16f877a.h: 1803: };
[; ;pic16f877a.h: 1804: struct {
[; ;pic16f877a.h: 1805: unsigned :2;
[; ;pic16f877a.h: 1806: unsigned I2C_READ :1;
[; ;pic16f877a.h: 1807: unsigned I2C_START :1;
[; ;pic16f877a.h: 1808: unsigned I2C_STOP :1;
[; ;pic16f877a.h: 1809: unsigned I2C_DATA :1;
[; ;pic16f877a.h: 1810: };
[; ;pic16f877a.h: 1811: struct {
[; ;pic16f877a.h: 1812: unsigned :2;
[; ;pic16f877a.h: 1813: unsigned nW :1;
[; ;pic16f877a.h: 1814: unsigned :2;
[; ;pic16f877a.h: 1815: unsigned nA :1;
[; ;pic16f877a.h: 1816: };
[; ;pic16f877a.h: 1817: struct {
[; ;pic16f877a.h: 1818: unsigned :2;
[; ;pic16f877a.h: 1819: unsigned nWRITE :1;
[; ;pic16f877a.h: 1820: unsigned :2;
[; ;pic16f877a.h: 1821: unsigned nADDRESS :1;
[; ;pic16f877a.h: 1822: };
[; ;pic16f877a.h: 1823: struct {
[; ;pic16f877a.h: 1824: unsigned :2;
[; ;pic16f877a.h: 1825: unsigned R_W :1;
[; ;pic16f877a.h: 1826: unsigned :2;
[; ;pic16f877a.h: 1827: unsigned D_A :1;
[; ;pic16f877a.h: 1828: };
[; ;pic16f877a.h: 1829: struct {
[; ;pic16f877a.h: 1830: unsigned :2;
[; ;pic16f877a.h: 1831: unsigned READ_WRITE :1;
[; ;pic16f877a.h: 1832: unsigned :2;
[; ;pic16f877a.h: 1833: unsigned DATA_ADDRESS :1;
[; ;pic16f877a.h: 1834: };
[; ;pic16f877a.h: 1835: } SSPSTATbits_t;
[; ;pic16f877a.h: 1836: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f877a.h: 1950: extern volatile unsigned char TXSTA @ 0x098;
"1952
[; ;pic16f877a.h: 1952: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f877a.h: 1955: typedef union {
[; ;pic16f877a.h: 1956: struct {
[; ;pic16f877a.h: 1957: unsigned TX9D :1;
[; ;pic16f877a.h: 1958: unsigned TRMT :1;
[; ;pic16f877a.h: 1959: unsigned BRGH :1;
[; ;pic16f877a.h: 1960: unsigned :1;
[; ;pic16f877a.h: 1961: unsigned SYNC :1;
[; ;pic16f877a.h: 1962: unsigned TXEN :1;
[; ;pic16f877a.h: 1963: unsigned TX9 :1;
[; ;pic16f877a.h: 1964: unsigned CSRC :1;
[; ;pic16f877a.h: 1965: };
[; ;pic16f877a.h: 1966: struct {
[; ;pic16f877a.h: 1967: unsigned TXD8 :1;
[; ;pic16f877a.h: 1968: unsigned :5;
[; ;pic16f877a.h: 1969: unsigned nTX8 :1;
[; ;pic16f877a.h: 1970: };
[; ;pic16f877a.h: 1971: struct {
[; ;pic16f877a.h: 1972: unsigned :6;
[; ;pic16f877a.h: 1973: unsigned TX8_9 :1;
[; ;pic16f877a.h: 1974: };
[; ;pic16f877a.h: 1975: } TXSTAbits_t;
[; ;pic16f877a.h: 1976: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f877a.h: 2030: extern volatile unsigned char SPBRG @ 0x099;
"2032
[; ;pic16f877a.h: 2032: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f877a.h: 2036: extern volatile unsigned char CMCON @ 0x09C;
"2038
[; ;pic16f877a.h: 2038: asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
[; ;pic16f877a.h: 2041: typedef union {
[; ;pic16f877a.h: 2042: struct {
[; ;pic16f877a.h: 2043: unsigned CM :3;
[; ;pic16f877a.h: 2044: unsigned CIS :1;
[; ;pic16f877a.h: 2045: unsigned C1INV :1;
[; ;pic16f877a.h: 2046: unsigned C2INV :1;
[; ;pic16f877a.h: 2047: unsigned C1OUT :1;
[; ;pic16f877a.h: 2048: unsigned C2OUT :1;
[; ;pic16f877a.h: 2049: };
[; ;pic16f877a.h: 2050: struct {
[; ;pic16f877a.h: 2051: unsigned CM0 :1;
[; ;pic16f877a.h: 2052: unsigned CM1 :1;
[; ;pic16f877a.h: 2053: unsigned CM2 :1;
[; ;pic16f877a.h: 2054: };
[; ;pic16f877a.h: 2055: } CMCONbits_t;
[; ;pic16f877a.h: 2056: extern volatile CMCONbits_t CMCONbits @ 0x09C;
[; ;pic16f877a.h: 2105: extern volatile unsigned char CVRCON @ 0x09D;
"2107
[; ;pic16f877a.h: 2107: asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
[; ;pic16f877a.h: 2110: typedef union {
[; ;pic16f877a.h: 2111: struct {
[; ;pic16f877a.h: 2112: unsigned CVR :4;
[; ;pic16f877a.h: 2113: unsigned :1;
[; ;pic16f877a.h: 2114: unsigned CVRR :1;
[; ;pic16f877a.h: 2115: unsigned CVROE :1;
[; ;pic16f877a.h: 2116: unsigned CVREN :1;
[; ;pic16f877a.h: 2117: };
[; ;pic16f877a.h: 2118: struct {
[; ;pic16f877a.h: 2119: unsigned CVR0 :1;
[; ;pic16f877a.h: 2120: unsigned CVR1 :1;
[; ;pic16f877a.h: 2121: unsigned CVR2 :1;
[; ;pic16f877a.h: 2122: unsigned CVR3 :1;
[; ;pic16f877a.h: 2123: };
[; ;pic16f877a.h: 2124: } CVRCONbits_t;
[; ;pic16f877a.h: 2125: extern volatile CVRCONbits_t CVRCONbits @ 0x09D;
[; ;pic16f877a.h: 2169: extern volatile unsigned char ADRESL @ 0x09E;
"2171
[; ;pic16f877a.h: 2171: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f877a.h: 2175: extern volatile unsigned char ADCON1 @ 0x09F;
"2177
[; ;pic16f877a.h: 2177: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f877a.h: 2180: typedef union {
[; ;pic16f877a.h: 2181: struct {
[; ;pic16f877a.h: 2182: unsigned PCFG :4;
[; ;pic16f877a.h: 2183: unsigned :2;
[; ;pic16f877a.h: 2184: unsigned ADCS2 :1;
[; ;pic16f877a.h: 2185: unsigned ADFM :1;
[; ;pic16f877a.h: 2186: };
[; ;pic16f877a.h: 2187: struct {
[; ;pic16f877a.h: 2188: unsigned PCFG0 :1;
[; ;pic16f877a.h: 2189: unsigned PCFG1 :1;
[; ;pic16f877a.h: 2190: unsigned PCFG2 :1;
[; ;pic16f877a.h: 2191: unsigned PCFG3 :1;
[; ;pic16f877a.h: 2192: };
[; ;pic16f877a.h: 2193: } ADCON1bits_t;
[; ;pic16f877a.h: 2194: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f877a.h: 2233: extern volatile unsigned char EEDATA @ 0x10C;
"2235
[; ;pic16f877a.h: 2235: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f877a.h: 2239: extern volatile unsigned char EEADR @ 0x10D;
"2241
[; ;pic16f877a.h: 2241: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f877a.h: 2245: extern volatile unsigned char EEDATH @ 0x10E;
"2247
[; ;pic16f877a.h: 2247: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f877a.h: 2251: extern volatile unsigned char EEADRH @ 0x10F;
"2253
[; ;pic16f877a.h: 2253: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f877a.h: 2257: extern volatile unsigned char EECON1 @ 0x18C;
"2259
[; ;pic16f877a.h: 2259: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f877a.h: 2262: typedef union {
[; ;pic16f877a.h: 2263: struct {
[; ;pic16f877a.h: 2264: unsigned RD :1;
[; ;pic16f877a.h: 2265: unsigned WR :1;
[; ;pic16f877a.h: 2266: unsigned WREN :1;
[; ;pic16f877a.h: 2267: unsigned WRERR :1;
[; ;pic16f877a.h: 2268: unsigned :3;
[; ;pic16f877a.h: 2269: unsigned EEPGD :1;
[; ;pic16f877a.h: 2270: };
[; ;pic16f877a.h: 2271: } EECON1bits_t;
[; ;pic16f877a.h: 2272: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f877a.h: 2301: extern volatile unsigned char EECON2 @ 0x18D;
"2303
[; ;pic16f877a.h: 2303: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f877a.h: 2313: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f877a.h: 2315: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f877a.h: 2317: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f877a.h: 2319: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f877a.h: 2321: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f877a.h: 2323: extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f877a.h: 2325: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f877a.h: 2327: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f877a.h: 2329: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f877a.h: 2331: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f877a.h: 2333: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f877a.h: 2335: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f877a.h: 2337: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f877a.h: 2339: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f877a.h: 2341: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f877a.h: 2343: extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f877a.h: 2345: extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f877a.h: 2347: extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f877a.h: 2349: extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f877a.h: 2351: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f877a.h: 2353: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f877a.h: 2355: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f877a.h: 2357: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f877a.h: 2359: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f877a.h: 2361: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f877a.h: 2363: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f877a.h: 2365: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f877a.h: 2367: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f877a.h: 2369: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f877a.h: 2371: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f877a.h: 2373: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f877a.h: 2375: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f877a.h: 2377: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f877a.h: 2379: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f877a.h: 2381: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f877a.h: 2383: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f877a.h: 2385: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f877a.h: 2387: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f877a.h: 2389: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f877a.h: 2391: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f877a.h: 2393: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f877a.h: 2395: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f877a.h: 2397: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f877a.h: 2399: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f877a.h: 2401: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f877a.h: 2403: extern volatile __bit CMIE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f877a.h: 2405: extern volatile __bit CMIF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f877a.h: 2407: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f877a.h: 2409: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f877a.h: 2411: extern volatile __bit CVR0 @ (((unsigned) &CVRCON)*8) + 0;
[; ;pic16f877a.h: 2413: extern volatile __bit CVR1 @ (((unsigned) &CVRCON)*8) + 1;
[; ;pic16f877a.h: 2415: extern volatile __bit CVR2 @ (((unsigned) &CVRCON)*8) + 2;
[; ;pic16f877a.h: 2417: extern volatile __bit CVR3 @ (((unsigned) &CVRCON)*8) + 3;
[; ;pic16f877a.h: 2419: extern volatile __bit CVREN @ (((unsigned) &CVRCON)*8) + 7;
[; ;pic16f877a.h: 2421: extern volatile __bit CVROE @ (((unsigned) &CVRCON)*8) + 6;
[; ;pic16f877a.h: 2423: extern volatile __bit CVRR @ (((unsigned) &CVRCON)*8) + 5;
[; ;pic16f877a.h: 2425: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2427: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f877a.h: 2429: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2431: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2433: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f877a.h: 2435: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f877a.h: 2437: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f877a.h: 2439: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f877a.h: 2441: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f877a.h: 2443: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f877a.h: 2445: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2447: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2449: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2451: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2453: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2455: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f877a.h: 2457: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f877a.h: 2459: extern volatile __bit IBF @ (((unsigned) &TRISE)*8) + 7;
[; ;pic16f877a.h: 2461: extern volatile __bit IBOV @ (((unsigned) &TRISE)*8) + 5;
[; ;pic16f877a.h: 2463: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f877a.h: 2465: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f877a.h: 2467: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f877a.h: 2469: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f877a.h: 2471: extern volatile __bit OBF @ (((unsigned) &TRISE)*8) + 6;
[; ;pic16f877a.h: 2473: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f877a.h: 2475: extern volatile __bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f877a.h: 2477: extern volatile __bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f877a.h: 2479: extern volatile __bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f877a.h: 2481: extern volatile __bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic16f877a.h: 2483: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f877a.h: 2485: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f877a.h: 2487: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f877a.h: 2489: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f877a.h: 2491: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f877a.h: 2493: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f877a.h: 2495: extern volatile __bit PSPIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f877a.h: 2497: extern volatile __bit PSPIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f877a.h: 2499: extern volatile __bit PSPMODE @ (((unsigned) &TRISE)*8) + 4;
[; ;pic16f877a.h: 2501: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f877a.h: 2503: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f877a.h: 2505: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f877a.h: 2507: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f877a.h: 2509: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f877a.h: 2511: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f877a.h: 2513: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f877a.h: 2515: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f877a.h: 2517: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f877a.h: 2519: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f877a.h: 2521: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f877a.h: 2523: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f877a.h: 2525: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f877a.h: 2527: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f877a.h: 2529: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f877a.h: 2531: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f877a.h: 2533: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f877a.h: 2535: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f877a.h: 2537: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f877a.h: 2539: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f877a.h: 2541: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f877a.h: 2543: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f877a.h: 2545: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f877a.h: 2547: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f877a.h: 2549: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2551: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2553: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f877a.h: 2555: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f877a.h: 2557: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f877a.h: 2559: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f877a.h: 2561: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f877a.h: 2563: extern volatile __bit RD0 @ (((unsigned) &PORTD)*8) + 0;
[; ;pic16f877a.h: 2565: extern volatile __bit RD1 @ (((unsigned) &PORTD)*8) + 1;
[; ;pic16f877a.h: 2567: extern volatile __bit RD2 @ (((unsigned) &PORTD)*8) + 2;
[; ;pic16f877a.h: 2569: extern volatile __bit RD3 @ (((unsigned) &PORTD)*8) + 3;
[; ;pic16f877a.h: 2571: extern volatile __bit RD4 @ (((unsigned) &PORTD)*8) + 4;
[; ;pic16f877a.h: 2573: extern volatile __bit RD5 @ (((unsigned) &PORTD)*8) + 5;
[; ;pic16f877a.h: 2575: extern volatile __bit RD6 @ (((unsigned) &PORTD)*8) + 6;
[; ;pic16f877a.h: 2577: extern volatile __bit RD7 @ (((unsigned) &PORTD)*8) + 7;
[; ;pic16f877a.h: 2579: extern volatile __bit RE0 @ (((unsigned) &PORTE)*8) + 0;
[; ;pic16f877a.h: 2581: extern volatile __bit RE1 @ (((unsigned) &PORTE)*8) + 1;
[; ;pic16f877a.h: 2583: extern volatile __bit RE2 @ (((unsigned) &PORTE)*8) + 2;
[; ;pic16f877a.h: 2585: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2587: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f877a.h: 2589: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f877a.h: 2591: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f877a.h: 2593: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2595: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f877a.h: 2597: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2599: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2601: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f877a.h: 2603: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f877a.h: 2605: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f877a.h: 2607: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f877a.h: 2609: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f877a.h: 2611: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f877a.h: 2613: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f877a.h: 2615: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f877a.h: 2617: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f877a.h: 2619: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f877a.h: 2621: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f877a.h: 2623: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f877a.h: 2625: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f877a.h: 2627: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f877a.h: 2629: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f877a.h: 2631: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f877a.h: 2633: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f877a.h: 2635: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f877a.h: 2637: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f877a.h: 2639: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 2641: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f877a.h: 2643: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 2645: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f877a.h: 2647: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f877a.h: 2649: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f877a.h: 2651: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f877a.h: 2653: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f877a.h: 2655: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f877a.h: 2657: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f877a.h: 2659: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f877a.h: 2661: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f877a.h: 2663: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f877a.h: 2665: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f877a.h: 2667: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f877a.h: 2669: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f877a.h: 2671: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f877a.h: 2673: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f877a.h: 2675: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f877a.h: 2677: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f877a.h: 2679: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f877a.h: 2681: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f877a.h: 2683: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f877a.h: 2685: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f877a.h: 2687: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f877a.h: 2689: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f877a.h: 2691: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f877a.h: 2693: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f877a.h: 2695: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f877a.h: 2697: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f877a.h: 2699: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f877a.h: 2701: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f877a.h: 2703: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f877a.h: 2705: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f877a.h: 2707: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f877a.h: 2709: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f877a.h: 2711: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f877a.h: 2713: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f877a.h: 2715: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f877a.h: 2717: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f877a.h: 2719: extern volatile __bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;
[; ;pic16f877a.h: 2721: extern volatile __bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;
[; ;pic16f877a.h: 2723: extern volatile __bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;
[; ;pic16f877a.h: 2725: extern volatile __bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;
[; ;pic16f877a.h: 2727: extern volatile __bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;
[; ;pic16f877a.h: 2729: extern volatile __bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;
[; ;pic16f877a.h: 2731: extern volatile __bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;
[; ;pic16f877a.h: 2733: extern volatile __bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;
[; ;pic16f877a.h: 2735: extern volatile __bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;
[; ;pic16f877a.h: 2737: extern volatile __bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;
[; ;pic16f877a.h: 2739: extern volatile __bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;
[; ;pic16f877a.h: 2741: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f877a.h: 2743: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 2745: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 2747: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f877a.h: 2749: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f877a.h: 2751: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f877a.h: 2753: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f877a.h: 2755: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f877a.h: 2757: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f877a.h: 2759: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f877a.h: 2761: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f877a.h: 2763: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f877a.h: 2765: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f877a.h: 2767: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f877a.h: 2769: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2771: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2773: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f877a.h: 2775: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f877a.h: 2777: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2779: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f877a.h: 2781: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f877a.h: 2783: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f877a.h: 2785: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2787: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 2789: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f877a.h: 2791: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 2793: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2795: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdutils.h: 68: typedef signed char sint8_t;
[; ;stdutils.h: 69: typedef unsigned char uint8_t;
[; ;stdutils.h: 71: typedef signed int sint16_t;
[; ;stdutils.h: 72: typedef unsigned int uint16_t;
[; ;stdutils.h: 74: typedef signed long int sint32_t;
[; ;stdutils.h: 75: typedef unsigned long int uint32_t;
[; ;stdutils.h: 180: typedef enum
[; ;stdutils.h: 181: {
[; ;stdutils.h: 182: E_FALSE,
[; ;stdutils.h: 183: E_TRUE
[; ;stdutils.h: 184: }Boolean_et;
[; ;stdutils.h: 187: typedef enum
[; ;stdutils.h: 188: {
[; ;stdutils.h: 189: E_FAILED,
[; ;stdutils.h: 190: E_SUCCESS,
[; ;stdutils.h: 191: E_BUSY,
[; ;stdutils.h: 192: E_TIMEOUT
[; ;stdutils.h: 193: }Status_et;
[; ;stdutils.h: 196: typedef enum
[; ;stdutils.h: 197: {
[; ;stdutils.h: 198: E_BINARY=2,
[; ;stdutils.h: 199: E_DECIMAL = 10,
[; ;stdutils.h: 200: E_HEX = 16
[; ;stdutils.h: 201: }NumericSystem_et;
"302 ../00-libfiles/stdutils.h
[p x FOSC=HS ]
"303
[p x WDTE=OFF ]
"304
[p x PWRTE=OFF ]
"305
[p x BOREN=OFF ]
"306
[p x LVP=OFF ]
"307
[p x CPD=OFF ]
"308
[p x WRT=OFF ]
"309
[p x CP=OFF ]
[; ;delay.h: 67: void DELAY_us(uint16_t us_count);
[; ;delay.h: 68: void DELAY_ms(uint16_t ms_count);
[; ;delay.h: 69: void DELAY_sec(uint16_t var_delaySecCount_u16);
[; ;glcd.h: 105: typedef struct{
[; ;glcd.h: 106: uint8_t PageNum;
[; ;glcd.h: 107: uint8_t LineNum;
[; ;glcd.h: 108: uint8_t CursorPos;
[; ;glcd.h: 109: uint8_t Invertdisplay;
[; ;glcd.h: 110: }GLCD_Config;
[; ;glcd.h: 112: extern const unsigned char LogoBitMap[];
[; ;glcd.h: 120: void GLCD_Init(void);
[; ;glcd.h: 121: void GLCD_DisplayChar(uint8_t ch);
[; ;glcd.h: 122: void GLCD_DisplayString(uint8_t *);
[; ;glcd.h: 123: void GLCD_ScrollMessage(uint8_t lineNum, char *strptr);
[; ;glcd.h: 124: void GLCD_DisplayNumber(uint8_t v_numericSystem_u8, uint32_t v_number_u32, uint8_t v_numOfDigitsToDisplay_u8);
[; ;glcd.h: 125: void GLCD_DisplayFloatNumber(double v_floatNum_f32);
[; ;glcd.h: 126: void GLCD_Printf(const char *argList, ...);
[; ;glcd.h: 127: void GLCD_Clear(void);
[; ;glcd.h: 128: void GLCD_GoToPage(uint8_t );
[; ;glcd.h: 129: void GLCD_GoToLine(uint8_t );
[; ;glcd.h: 130: void GLCD_GoToNextLine(void);
[; ;glcd.h: 131: void GLCD_SetCursor(uint8_t lineNumber,uint8_t CursorPosition);
[; ;glcd.h: 132: void GLCD_DisplayLogo(const char ptr_Logo[]);
[; ;glcd.h: 133: void GLCD_EnableInversion(void);
[; ;glcd.h: 134: void GLCD_DisableInversion(void);
[; ;glcd.h: 135: void GLCD_VerticalGraph(uint8_t var_barGraphNumber_u8, uint8_t var_percentageValue_u8);
[; ;glcd.h: 136: void GLCD_HorizontalGraph(uint8_t var_barGraphNumber_u8, uint8_t var_percentageValue_u8);
"31 ../00-libfiles/glcd.c
[p k ]
"32
[p n 752 ]
"33
[p n 1496 ]
"34
[p n 520 ]
"35
[p n 1498 ]
"36
[p n 356 ]
[; ;glcd.c: 43: void glcd_SelectPage0();
[; ;glcd.c: 44: void glcd_SelectPage1();
[; ;glcd.c: 45: void glcd_BusyCheck();
[; ;glcd.c: 46: void glcd_CmdWrite( uint8_t cmd);
[; ;glcd.c: 47: void glcd_DataWrite( uint8_t dat);
[v F1154 `Cuc ~T0 @X0 -> 5 `i t ]
"52
[v _A_GlcdFontTable_U8 `F1154 ~T0 @X0 -> 0 `x e ]
[i _A_GlcdFontTable_U8
:U ..
:U ..
"54
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"55
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 47 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"56
-> -> 0 `i `uc
-> -> 7 `i `uc
-> -> 0 `i `uc
-> -> 7 `i `uc
-> -> 0 `i `uc
..
:U ..
"57
-> -> 20 `i `uc
-> -> 127 `i `uc
-> -> 20 `i `uc
-> -> 127 `i `uc
-> -> 20 `i `uc
..
:U ..
"58
-> -> 36 `i `uc
-> -> 42 `i `uc
-> -> 127 `i `uc
-> -> 42 `i `uc
-> -> 18 `i `uc
..
:U ..
"59
-> -> 35 `i `uc
-> -> 19 `i `uc
-> -> 8 `i `uc
-> -> 100 `i `uc
-> -> 98 `i `uc
..
:U ..
"60
-> -> 54 `i `uc
-> -> 73 `i `uc
-> -> 85 `i `uc
-> -> 34 `i `uc
-> -> 80 `i `uc
..
:U ..
"61
-> -> 0 `i `uc
-> -> 5 `i `uc
-> -> 3 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"62
-> -> 0 `i `uc
-> -> 28 `i `uc
-> -> 34 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
..
:U ..
"63
-> -> 0 `i `uc
-> -> 65 `i `uc
-> -> 34 `i `uc
-> -> 28 `i `uc
-> -> 0 `i `uc
..
:U ..
"64
-> -> 20 `i `uc
-> -> 8 `i `uc
-> -> 62 `i `uc
-> -> 8 `i `uc
-> -> 20 `i `uc
..
:U ..
"65
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 62 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
..
:U ..
"66
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 160 `i `uc
-> -> 96 `i `uc
-> -> 0 `i `uc
..
:U ..
"67
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
..
:U ..
"68
-> -> 0 `i `uc
-> -> 96 `i `uc
-> -> 96 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"69
-> -> 32 `i `uc
-> -> 16 `i `uc
-> -> 8 `i `uc
-> -> 4 `i `uc
-> -> 2 `i `uc
..
:U ..
"71
-> -> 62 `i `uc
-> -> 81 `i `uc
-> -> 73 `i `uc
-> -> 69 `i `uc
-> -> 62 `i `uc
..
:U ..
"72
-> -> 0 `i `uc
-> -> 66 `i `uc
-> -> 127 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
..
:U ..
"73
-> -> 66 `i `uc
-> -> 97 `i `uc
-> -> 81 `i `uc
-> -> 73 `i `uc
-> -> 70 `i `uc
..
:U ..
"74
-> -> 33 `i `uc
-> -> 65 `i `uc
-> -> 69 `i `uc
-> -> 75 `i `uc
-> -> 49 `i `uc
..
:U ..
"75
-> -> 24 `i `uc
-> -> 20 `i `uc
-> -> 18 `i `uc
-> -> 127 `i `uc
-> -> 16 `i `uc
..
:U ..
"76
-> -> 39 `i `uc
-> -> 69 `i `uc
-> -> 69 `i `uc
-> -> 69 `i `uc
-> -> 57 `i `uc
..
:U ..
"77
-> -> 60 `i `uc
-> -> 74 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 48 `i `uc
..
:U ..
"78
-> -> 1 `i `uc
-> -> 113 `i `uc
-> -> 9 `i `uc
-> -> 5 `i `uc
-> -> 3 `i `uc
..
:U ..
"79
-> -> 54 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 54 `i `uc
..
:U ..
"80
-> -> 6 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 41 `i `uc
-> -> 30 `i `uc
..
:U ..
"82
-> -> 0 `i `uc
-> -> 54 `i `uc
-> -> 54 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"83
-> -> 0 `i `uc
-> -> 86 `i `uc
-> -> 54 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"84
-> -> 8 `i `uc
-> -> 20 `i `uc
-> -> 34 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
..
:U ..
"85
-> -> 20 `i `uc
-> -> 20 `i `uc
-> -> 20 `i `uc
-> -> 20 `i `uc
-> -> 20 `i `uc
..
:U ..
"86
-> -> 0 `i `uc
-> -> 65 `i `uc
-> -> 34 `i `uc
-> -> 20 `i `uc
-> -> 8 `i `uc
..
:U ..
"87
-> -> 2 `i `uc
-> -> 1 `i `uc
-> -> 81 `i `uc
-> -> 9 `i `uc
-> -> 6 `i `uc
..
:U ..
"88
-> -> 50 `i `uc
-> -> 73 `i `uc
-> -> 89 `i `uc
-> -> 81 `i `uc
-> -> 62 `i `uc
..
:U ..
"90
-> -> 124 `i `uc
-> -> 18 `i `uc
-> -> 17 `i `uc
-> -> 18 `i `uc
-> -> 124 `i `uc
..
:U ..
"91
-> -> 127 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 54 `i `uc
..
:U ..
"92
-> -> 62 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 34 `i `uc
..
:U ..
"93
-> -> 127 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 34 `i `uc
-> -> 28 `i `uc
..
:U ..
"94
-> -> 127 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 65 `i `uc
..
:U ..
"95
-> -> 127 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
-> -> 1 `i `uc
..
:U ..
"96
-> -> 62 `i `uc
-> -> 65 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 122 `i `uc
..
:U ..
"97
-> -> 127 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 127 `i `uc
..
:U ..
"98
-> -> 0 `i `uc
-> -> 65 `i `uc
-> -> 127 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
..
:U ..
"99
-> -> 32 `i `uc
-> -> 64 `i `uc
-> -> 65 `i `uc
-> -> 63 `i `uc
-> -> 1 `i `uc
..
:U ..
"100
-> -> 127 `i `uc
-> -> 8 `i `uc
-> -> 20 `i `uc
-> -> 34 `i `uc
-> -> 65 `i `uc
..
:U ..
"101
-> -> 127 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
..
:U ..
"102
-> -> 127 `i `uc
-> -> 2 `i `uc
-> -> 12 `i `uc
-> -> 2 `i `uc
-> -> 127 `i `uc
..
:U ..
"103
-> -> 127 `i `uc
-> -> 4 `i `uc
-> -> 8 `i `uc
-> -> 16 `i `uc
-> -> 127 `i `uc
..
:U ..
"104
-> -> 62 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 62 `i `uc
..
:U ..
"105
-> -> 127 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
-> -> 6 `i `uc
..
:U ..
"106
-> -> 62 `i `uc
-> -> 65 `i `uc
-> -> 81 `i `uc
-> -> 33 `i `uc
-> -> 94 `i `uc
..
:U ..
"107
-> -> 127 `i `uc
-> -> 9 `i `uc
-> -> 25 `i `uc
-> -> 41 `i `uc
-> -> 70 `i `uc
..
:U ..
"108
-> -> 70 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 49 `i `uc
..
:U ..
"109
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 127 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
..
:U ..
"110
-> -> 63 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 63 `i `uc
..
:U ..
"111
-> -> 31 `i `uc
-> -> 32 `i `uc
-> -> 64 `i `uc
-> -> 32 `i `uc
-> -> 31 `i `uc
..
:U ..
"112
-> -> 63 `i `uc
-> -> 64 `i `uc
-> -> 56 `i `uc
-> -> 64 `i `uc
-> -> 63 `i `uc
..
:U ..
"113
-> -> 99 `i `uc
-> -> 20 `i `uc
-> -> 8 `i `uc
-> -> 20 `i `uc
-> -> 99 `i `uc
..
:U ..
"114
-> -> 7 `i `uc
-> -> 8 `i `uc
-> -> 112 `i `uc
-> -> 8 `i `uc
-> -> 7 `i `uc
..
:U ..
"115
-> -> 97 `i `uc
-> -> 81 `i `uc
-> -> 73 `i `uc
-> -> 69 `i `uc
-> -> 67 `i `uc
..
:U ..
"117
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
..
:U ..
"118
-> -> 85 `i `uc
-> -> 170 `i `uc
-> -> 85 `i `uc
-> -> 170 `i `uc
-> -> 85 `i `uc
..
:U ..
"119
-> -> 0 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 127 `i `uc
-> -> 0 `i `uc
..
:U ..
"120
-> -> 4 `i `uc
-> -> 2 `i `uc
-> -> 1 `i `uc
-> -> 2 `i `uc
-> -> 4 `i `uc
..
:U ..
"121
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
..
:U ..
"122
-> -> 0 `i `uc
-> -> 3 `i `uc
-> -> 5 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"124
-> -> 32 `i `uc
-> -> 84 `i `uc
-> -> 84 `i `uc
-> -> 84 `i `uc
-> -> 120 `i `uc
..
:U ..
"125
-> -> 127 `i `uc
-> -> 72 `i `uc
-> -> 68 `i `uc
-> -> 68 `i `uc
-> -> 56 `i `uc
..
:U ..
"126
-> -> 56 `i `uc
-> -> 68 `i `uc
-> -> 68 `i `uc
-> -> 68 `i `uc
-> -> 32 `i `uc
..
:U ..
"127
-> -> 56 `i `uc
-> -> 68 `i `uc
-> -> 68 `i `uc
-> -> 72 `i `uc
-> -> 127 `i `uc
..
:U ..
"128
-> -> 56 `i `uc
-> -> 84 `i `uc
-> -> 84 `i `uc
-> -> 84 `i `uc
-> -> 24 `i `uc
..
:U ..
"129
-> -> 8 `i `uc
-> -> 126 `i `uc
-> -> 9 `i `uc
-> -> 1 `i `uc
-> -> 2 `i `uc
..
:U ..
"130
-> -> 24 `i `uc
-> -> 164 `i `uc
-> -> 164 `i `uc
-> -> 164 `i `uc
-> -> 124 `i `uc
..
:U ..
"131
-> -> 127 `i `uc
-> -> 8 `i `uc
-> -> 4 `i `uc
-> -> 4 `i `uc
-> -> 120 `i `uc
..
:U ..
"132
-> -> 0 `i `uc
-> -> 68 `i `uc
-> -> 125 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
..
:U ..
"133
-> -> 64 `i `uc
-> -> 128 `i `uc
-> -> 132 `i `uc
-> -> 125 `i `uc
-> -> 0 `i `uc
..
:U ..
"134
-> -> 127 `i `uc
-> -> 16 `i `uc
-> -> 40 `i `uc
-> -> 68 `i `uc
-> -> 0 `i `uc
..
:U ..
"135
-> -> 0 `i `uc
-> -> 65 `i `uc
-> -> 127 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
..
:U ..
"136
-> -> 124 `i `uc
-> -> 4 `i `uc
-> -> 24 `i `uc
-> -> 4 `i `uc
-> -> 120 `i `uc
..
:U ..
"137
-> -> 124 `i `uc
-> -> 8 `i `uc
-> -> 4 `i `uc
-> -> 4 `i `uc
-> -> 120 `i `uc
..
:U ..
"138
-> -> 56 `i `uc
-> -> 68 `i `uc
-> -> 68 `i `uc
-> -> 68 `i `uc
-> -> 56 `i `uc
..
:U ..
"139
-> -> 252 `i `uc
-> -> 36 `i `uc
-> -> 36 `i `uc
-> -> 36 `i `uc
-> -> 24 `i `uc
..
:U ..
"140
-> -> 24 `i `uc
-> -> 36 `i `uc
-> -> 36 `i `uc
-> -> 24 `i `uc
-> -> 252 `i `uc
..
:U ..
"141
-> -> 124 `i `uc
-> -> 8 `i `uc
-> -> 4 `i `uc
-> -> 4 `i `uc
-> -> 8 `i `uc
..
:U ..
"142
-> -> 72 `i `uc
-> -> 84 `i `uc
-> -> 84 `i `uc
-> -> 84 `i `uc
-> -> 32 `i `uc
..
:U ..
"143
-> -> 4 `i `uc
-> -> 63 `i `uc
-> -> 68 `i `uc
-> -> 64 `i `uc
-> -> 32 `i `uc
..
:U ..
"144
-> -> 60 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 32 `i `uc
-> -> 124 `i `uc
..
:U ..
"145
-> -> 28 `i `uc
-> -> 32 `i `uc
-> -> 64 `i `uc
-> -> 32 `i `uc
-> -> 28 `i `uc
..
:U ..
"146
-> -> 60 `i `uc
-> -> 64 `i `uc
-> -> 48 `i `uc
-> -> 64 `i `uc
-> -> 60 `i `uc
..
:U ..
"147
-> -> 68 `i `uc
-> -> 40 `i `uc
-> -> 16 `i `uc
-> -> 40 `i `uc
-> -> 68 `i `uc
..
:U ..
"148
-> -> 28 `i `uc
-> -> 160 `i `uc
-> -> 160 `i `uc
-> -> 160 `i `uc
-> -> 124 `i `uc
..
:U ..
"149
-> -> 68 `i `uc
-> -> 100 `i `uc
-> -> 84 `i `uc
-> -> 76 `i `uc
-> -> 68 `i `uc
..
:U ..
"151
-> -> 0 `i `uc
-> -> 16 `i `uc
-> -> 124 `i `uc
-> -> 130 `i `uc
-> -> 0 `i `uc
..
:U ..
"152
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"153
-> -> 0 `i `uc
-> -> 130 `i `uc
-> -> 124 `i `uc
-> -> 16 `i `uc
-> -> 0 `i `uc
..
:U ..
"154
-> -> 0 `i `uc
-> -> 6 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
"155
-> -> 6 `i `uc
..
..
]
[; ;glcd.c: 52: const uint8_t A_GlcdFontTable_U8[][5]=
[; ;glcd.c: 53: {
[; ;glcd.c: 54: 0x00, 0x00, 0x00, 0x00, 0x00,
[; ;glcd.c: 55: 0x00, 0x00, 0x2f, 0x00, 0x00,
[; ;glcd.c: 56: 0x00, 0x07, 0x00, 0x07, 0x00,
[; ;glcd.c: 57: 0x14, 0x7f, 0x14, 0x7f, 0x14,
[; ;glcd.c: 58: 0x24, 0x2a, 0x7f, 0x2a, 0x12,
[; ;glcd.c: 59: 0x23, 0x13, 0x08, 0x64, 0x62,
[; ;glcd.c: 60: 0x36, 0x49, 0x55, 0x22, 0x50,
[; ;glcd.c: 61: 0x00, 0x05, 0x03, 0x00, 0x00,
[; ;glcd.c: 62: 0x00, 0x1c, 0x22, 0x41, 0x00,
[; ;glcd.c: 63: 0x00, 0x41, 0x22, 0x1c, 0x00,
[; ;glcd.c: 64: 0x14, 0x08, 0x3E, 0x08, 0x14,
[; ;glcd.c: 65: 0x08, 0x08, 0x3E, 0x08, 0x08,
[; ;glcd.c: 66: 0x00, 0x00, 0xA0, 0x60, 0x00,
[; ;glcd.c: 67: 0x08, 0x08, 0x08, 0x08, 0x08,
[; ;glcd.c: 68: 0x00, 0x60, 0x60, 0x00, 0x00,
[; ;glcd.c: 69: 0x20, 0x10, 0x08, 0x04, 0x02,
[; ;glcd.c: 71: 0x3E, 0x51, 0x49, 0x45, 0x3E,
[; ;glcd.c: 72: 0x00, 0x42, 0x7F, 0x40, 0x00,
[; ;glcd.c: 73: 0x42, 0x61, 0x51, 0x49, 0x46,
[; ;glcd.c: 74: 0x21, 0x41, 0x45, 0x4B, 0x31,
[; ;glcd.c: 75: 0x18, 0x14, 0x12, 0x7F, 0x10,
[; ;glcd.c: 76: 0x27, 0x45, 0x45, 0x45, 0x39,
[; ;glcd.c: 77: 0x3C, 0x4A, 0x49, 0x49, 0x30,
[; ;glcd.c: 78: 0x01, 0x71, 0x09, 0x05, 0x03,
[; ;glcd.c: 79: 0x36, 0x49, 0x49, 0x49, 0x36,
[; ;glcd.c: 80: 0x06, 0x49, 0x49, 0x29, 0x1E,
[; ;glcd.c: 82: 0x00, 0x36, 0x36, 0x00, 0x00,
[; ;glcd.c: 83: 0x00, 0x56, 0x36, 0x00, 0x00,
[; ;glcd.c: 84: 0x08, 0x14, 0x22, 0x41, 0x00,
[; ;glcd.c: 85: 0x14, 0x14, 0x14, 0x14, 0x14,
[; ;glcd.c: 86: 0x00, 0x41, 0x22, 0x14, 0x08,
[; ;glcd.c: 87: 0x02, 0x01, 0x51, 0x09, 0x06,
[; ;glcd.c: 88: 0x32, 0x49, 0x59, 0x51, 0x3E,
[; ;glcd.c: 90: 0x7C, 0x12, 0x11, 0x12, 0x7C,
[; ;glcd.c: 91: 0x7F, 0x49, 0x49, 0x49, 0x36,
[; ;glcd.c: 92: 0x3E, 0x41, 0x41, 0x41, 0x22,
[; ;glcd.c: 93: 0x7F, 0x41, 0x41, 0x22, 0x1C,
[; ;glcd.c: 94: 0x7F, 0x49, 0x49, 0x49, 0x41,
[; ;glcd.c: 95: 0x7F, 0x09, 0x09, 0x09, 0x01,
[; ;glcd.c: 96: 0x3E, 0x41, 0x49, 0x49, 0x7A,
[; ;glcd.c: 97: 0x7F, 0x08, 0x08, 0x08, 0x7F,
[; ;glcd.c: 98: 0x00, 0x41, 0x7F, 0x41, 0x00,
[; ;glcd.c: 99: 0x20, 0x40, 0x41, 0x3F, 0x01,
[; ;glcd.c: 100: 0x7F, 0x08, 0x14, 0x22, 0x41,
[; ;glcd.c: 101: 0x7F, 0x40, 0x40, 0x40, 0x40,
[; ;glcd.c: 102: 0x7F, 0x02, 0x0C, 0x02, 0x7F,
[; ;glcd.c: 103: 0x7F, 0x04, 0x08, 0x10, 0x7F,
[; ;glcd.c: 104: 0x3E, 0x41, 0x41, 0x41, 0x3E,
[; ;glcd.c: 105: 0x7F, 0x09, 0x09, 0x09, 0x06,
[; ;glcd.c: 106: 0x3E, 0x41, 0x51, 0x21, 0x5E,
[; ;glcd.c: 107: 0x7F, 0x09, 0x19, 0x29, 0x46,
[; ;glcd.c: 108: 0x46, 0x49, 0x49, 0x49, 0x31,
[; ;glcd.c: 109: 0x01, 0x01, 0x7F, 0x01, 0x01,
[; ;glcd.c: 110: 0x3F, 0x40, 0x40, 0x40, 0x3F,
[; ;glcd.c: 111: 0x1F, 0x20, 0x40, 0x20, 0x1F,
[; ;glcd.c: 112: 0x3F, 0x40, 0x38, 0x40, 0x3F,
[; ;glcd.c: 113: 0x63, 0x14, 0x08, 0x14, 0x63,
[; ;glcd.c: 114: 0x07, 0x08, 0x70, 0x08, 0x07,
[; ;glcd.c: 115: 0x61, 0x51, 0x49, 0x45, 0x43,
[; ;glcd.c: 117: 0x00, 0x7F, 0x41, 0x41, 0x00,
[; ;glcd.c: 118: 0x55, 0xAA, 0x55, 0xAA, 0x55,
[; ;glcd.c: 119: 0x00, 0x41, 0x41, 0x7F, 0x00,
[; ;glcd.c: 120: 0x04, 0x02, 0x01, 0x02, 0x04,
[; ;glcd.c: 121: 0x40, 0x40, 0x40, 0x40, 0x40,
[; ;glcd.c: 122: 0x00, 0x03, 0x05, 0x00, 0x00,
[; ;glcd.c: 124: 0x20, 0x54, 0x54, 0x54, 0x78,
[; ;glcd.c: 125: 0x7F, 0x48, 0x44, 0x44, 0x38,
[; ;glcd.c: 126: 0x38, 0x44, 0x44, 0x44, 0x20,
[; ;glcd.c: 127: 0x38, 0x44, 0x44, 0x48, 0x7F,
[; ;glcd.c: 128: 0x38, 0x54, 0x54, 0x54, 0x18,
[; ;glcd.c: 129: 0x08, 0x7E, 0x09, 0x01, 0x02,
[; ;glcd.c: 130: 0x18, 0xA4, 0xA4, 0xA4, 0x7C,
[; ;glcd.c: 131: 0x7F, 0x08, 0x04, 0x04, 0x78,
[; ;glcd.c: 132: 0x00, 0x44, 0x7D, 0x40, 0x00,
[; ;glcd.c: 133: 0x40, 0x80, 0x84, 0x7D, 0x00,
[; ;glcd.c: 134: 0x7F, 0x10, 0x28, 0x44, 0x00,
[; ;glcd.c: 135: 0x00, 0x41, 0x7F, 0x40, 0x00,
[; ;glcd.c: 136: 0x7C, 0x04, 0x18, 0x04, 0x78,
[; ;glcd.c: 137: 0x7C, 0x08, 0x04, 0x04, 0x78,
[; ;glcd.c: 138: 0x38, 0x44, 0x44, 0x44, 0x38,
[; ;glcd.c: 139: 0xFC, 0x24, 0x24, 0x24, 0x18,
[; ;glcd.c: 140: 0x18, 0x24, 0x24, 0x18, 0xFC,
[; ;glcd.c: 141: 0x7C, 0x08, 0x04, 0x04, 0x08,
[; ;glcd.c: 142: 0x48, 0x54, 0x54, 0x54, 0x20,
[; ;glcd.c: 143: 0x04, 0x3F, 0x44, 0x40, 0x20,
[; ;glcd.c: 144: 0x3C, 0x40, 0x40, 0x20, 0x7C,
[; ;glcd.c: 145: 0x1C, 0x20, 0x40, 0x20, 0x1C,
[; ;glcd.c: 146: 0x3C, 0x40, 0x30, 0x40, 0x3C,
[; ;glcd.c: 147: 0x44, 0x28, 0x10, 0x28, 0x44,
[; ;glcd.c: 148: 0x1C, 0xA0, 0xA0, 0xA0, 0x7C,
[; ;glcd.c: 149: 0x44, 0x64, 0x54, 0x4C, 0x44,
[; ;glcd.c: 151: 0x00, 0x10, 0x7C, 0x82, 0x00,
[; ;glcd.c: 152: 0x00, 0x00, 0xFF, 0x00, 0x00,
[; ;glcd.c: 153: 0x00, 0x82, 0x7C, 0x10, 0x00,
[; ;glcd.c: 154: 0x00, 0x06, 0x09, 0x09, 0x06
[; ;glcd.c: 155: };
"157
[v _GLCD `S96 ~T0 @X0 1 e ]
[; ;glcd.c: 157: GLCD_Config GLCD;
"168
[v _GLCD_Init `(v ~T0 @X0 1 ef ]
"169
{
[; ;glcd.c: 168: void GLCD_Init()
[; ;glcd.c: 169: {
[e :U _GLCD_Init ]
[f ]
[; ;glcd.c: 170: TRISB = 0x00;
"170
[e = _TRISB -> -> 0 `i `uc ]
[; ;glcd.c: 171: TRISD &= ~((1<<0)|(1<<1)|(1<<2)|(1<<3)|(1<<4));
"171
[e =& _TRISD -> ~ | | | | << -> 1 `i -> 0 `i << -> 1 `i -> 1 `i << -> 1 `i -> 2 `i << -> 1 `i -> 3 `i << -> 1 `i -> 4 `i `uc ]
[; ;glcd.c: 174: glcd_SelectPage0();
"174
[e ( _glcd_SelectPage0 ..  ]
[; ;glcd.c: 175: glcd_CmdWrite(0x3f);
"175
[e ( _glcd_CmdWrite (1 -> -> 63 `i `uc ]
[; ;glcd.c: 176: glcd_SelectPage1();
"176
[e ( _glcd_SelectPage1 ..  ]
[; ;glcd.c: 177: glcd_CmdWrite(0x3f);
"177
[e ( _glcd_CmdWrite (1 -> -> 63 `i `uc ]
[; ;glcd.c: 178: DELAY_ms(10);
"178
[e ( _DELAY_ms (1 -> -> 10 `i `ui ]
[; ;glcd.c: 181: glcd_SelectPage0();
"181
[e ( _glcd_SelectPage0 ..  ]
[; ;glcd.c: 182: glcd_CmdWrite(0xc0);
"182
[e ( _glcd_CmdWrite (1 -> -> 192 `i `uc ]
[; ;glcd.c: 183: glcd_SelectPage1();
"183
[e ( _glcd_SelectPage1 ..  ]
[; ;glcd.c: 184: glcd_CmdWrite(0xc0);
"184
[e ( _glcd_CmdWrite (1 -> -> 192 `i `uc ]
[; ;glcd.c: 185: GLCD_GoToPage(0);
"185
[e ( _GLCD_GoToPage (1 -> -> 0 `i `uc ]
[; ;glcd.c: 188: GLCD_Clear();
"188
[e ( _GLCD_Clear ..  ]
[; ;glcd.c: 191: GLCD.PageNum=0;
"191
[e = . _GLCD 0 -> -> 0 `i `uc ]
[; ;glcd.c: 192: GLCD.LineNum=0xB8;
"192
[e = . _GLCD 1 -> -> 184 `i `uc ]
[; ;glcd.c: 193: GLCD.CursorPos=0x40;
"193
[e = . _GLCD 2 -> -> 64 `i `uc ]
[; ;glcd.c: 194: GLCD_GoToPage(0);
"194
[e ( _GLCD_GoToPage (1 -> -> 0 `i `uc ]
[; ;glcd.c: 195: }
"195
[e :UE 97 ]
}
"213
[v _GLCD_DisplayChar `(v ~T0 @X0 1 ef1`uc ]
"214
{
[; ;glcd.c: 213: void GLCD_DisplayChar(uint8_t ch)
[; ;glcd.c: 214: {
[e :U _GLCD_DisplayChar ]
"213
[v _ch `uc ~T0 @X0 1 r1 ]
"214
[f ]
"215
[v _dat `uc ~T0 @X0 1 a ]
[v _i `uc ~T0 @X0 1 a ]
[; ;glcd.c: 215: uint8_t dat,i=0;
[e = _i -> -> 0 `i `uc ]
[; ;glcd.c: 218: if(((GLCD.PageNum == 0x01) && ((GLCD.CursorPos+5)>=128)) || (ch=='\n'))
"218
[e $ ! || && == -> . _GLCD 0 `i -> 1 `i >= + -> . _GLCD 2 `i -> 5 `i -> 128 `i == -> _ch `ui -> 10 `ui 99  ]
[; ;glcd.c: 219: {
"219
{
[; ;glcd.c: 222: GLCD_GoToNextLine();
"222
[e ( _GLCD_GoToNextLine ..  ]
"223
}
[e :U 99 ]
[; ;glcd.c: 223: }
[; ;glcd.c: 224: if(ch!='\n')
"224
[e $ ! != -> _ch `ui -> 10 `ui 100  ]
[; ;glcd.c: 225: {
"225
{
[; ;glcd.c: 226: ch = ch-0x20;
"226
[e = _ch -> - -> _ch `i -> 32 `i `uc ]
[; ;glcd.c: 228: while(1)
"228
[e :U 102 ]
[; ;glcd.c: 229: {
"229
{
[; ;glcd.c: 230: if((GLCD.PageNum == 0x00) && (GLCD.CursorPos==0x80))
"230
[e $ ! && == -> . _GLCD 0 `i -> 0 `i == -> . _GLCD 2 `i -> 128 `i 104  ]
[; ;glcd.c: 231: {
"231
{
[; ;glcd.c: 234: GLCD_GoToPage(1);
"234
[e ( _GLCD_GoToPage (1 -> -> 1 `i `uc ]
"235
}
[e :U 104 ]
[; ;glcd.c: 235: }
[; ;glcd.c: 237: dat= A_GlcdFontTable_U8[ch][i];
"237
[e = _dat *U + &U *U + &U _A_GlcdFontTable_U8 * -> _ch `ux -> * -> # *U &U *U &U _A_GlcdFontTable_U8 `ui -> -> 5 `i `ui `ux * -> _i `ux -> -> # *U &U *U + &U _A_GlcdFontTable_U8 * -> _ch `ux -> * -> # *U &U *U &U _A_GlcdFontTable_U8 `ui -> -> 5 `i `ui `ux `ui `ux ]
[; ;glcd.c: 240: glcd_DataWrite(dat);
"240
[e ( _glcd_DataWrite (1 _dat ]
[; ;glcd.c: 241: GLCD.CursorPos++;
"241
[e ++ . _GLCD 2 -> -> 1 `i `uc ]
[; ;glcd.c: 243: i++;
"243
[e ++ _i -> -> 1 `i `uc ]
[; ;glcd.c: 245: if(i==5)
"245
[e $ ! == -> _i `i -> 5 `i 105  ]
[; ;glcd.c: 246: {
"246
{
[; ;glcd.c: 247: glcd_DataWrite(0x00);
"247
[e ( _glcd_DataWrite (1 -> -> 0 `i `uc ]
[; ;glcd.c: 248: GLCD.CursorPos++;
"248
[e ++ . _GLCD 2 -> -> 1 `i `uc ]
[; ;glcd.c: 249: break;
"249
[e $U 103  ]
"250
}
[e :U 105 ]
"251
}
[e :U 101 ]
"228
[e $U 102  ]
[e :U 103 ]
"252
}
[e :U 100 ]
[; ;glcd.c: 250: }
[; ;glcd.c: 251: }
[; ;glcd.c: 252: }
[; ;glcd.c: 253: }
"253
[e :UE 98 ]
}
"274
[v _GLCD_DisplayString `(v ~T0 @X0 1 ef1`*uc ]
"275
{
[; ;glcd.c: 274: void GLCD_DisplayString(uint8_t *ptr)
[; ;glcd.c: 275: {
[e :U _GLCD_DisplayString ]
"274
[v _ptr `*uc ~T0 @X0 1 r1 ]
"275
[f ]
[; ;glcd.c: 276: while(*ptr)
"276
[e $U 107  ]
[e :U 108 ]
[; ;glcd.c: 277: GLCD_DisplayChar(*ptr++);
"277
[e ( _GLCD_DisplayChar (1 *U ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x ]
[e :U 107 ]
"276
[e $ != -> *U _ptr `i -> -> -> 0 `i `uc `i 108  ]
[e :U 109 ]
[; ;glcd.c: 278: }
"278
[e :UE 106 ]
}
"392
[v _GLCD_DisplayNumber `(v ~T0 @X0 1 ef3`uc`ul`uc ]
"393
{
[; ;glcd.c: 392: void GLCD_DisplayNumber(uint8_t v_numericSystem_u8, uint32_t v_number_u32, uint8_t v_numOfDigitsToDisplay_u8)
[; ;glcd.c: 393: {
[e :U _GLCD_DisplayNumber ]
"392
[v _v_numericSystem_u8 `uc ~T0 @X0 1 r1 ]
[v _v_number_u32 `ul ~T0 @X0 1 r2 ]
[v _v_numOfDigitsToDisplay_u8 `uc ~T0 @X0 1 r3 ]
"393
[f ]
"394
[v _i `uc ~T0 @X0 1 a ]
[; ;glcd.c: 394: uint8_t i=0,a[10];
[e = _i -> -> 0 `i `uc ]
[v _a `uc ~T0 @X0 -> 10 `i a ]
[; ;glcd.c: 396: if(2u == v_numericSystem_u8)
"396
[e $ ! == -> 2 `ui -> _v_numericSystem_u8 `ui 111  ]
[; ;glcd.c: 397: {
"397
{
[; ;glcd.c: 398: while(v_numOfDigitsToDisplay_u8!=0)
"398
[e $U 112  ]
[e :U 113 ]
[; ;glcd.c: 399: {
"399
{
[; ;glcd.c: 402: i = (((v_number_u32)&((1<<((v_numOfDigitsToDisplay_u8-1)))))!=0u);
"402
[e = _i -> -> != & _v_number_u32 -> -> << -> 1 `i - -> _v_numOfDigitsToDisplay_u8 `i -> 1 `i `l `ul -> -> 0 `ui `ul `i `uc ]
[; ;glcd.c: 403: GLCD_DisplayChar(((i)+0x30));
"403
[e ( _GLCD_DisplayChar (1 -> + -> _i `i -> 48 `i `uc ]
[; ;glcd.c: 404: v_numOfDigitsToDisplay_u8--;
"404
[e -- _v_numOfDigitsToDisplay_u8 -> -> 1 `i `uc ]
"405
}
[e :U 112 ]
"398
[e $ != -> _v_numOfDigitsToDisplay_u8 `i -> 0 `i 113  ]
[e :U 114 ]
"406
}
[; ;glcd.c: 405: }
[; ;glcd.c: 406: }
[e $U 115  ]
"407
[e :U 111 ]
[; ;glcd.c: 407: else if(v_number_u32==0)
[e $ ! == _v_number_u32 -> -> -> 0 `i `l `ul 116  ]
[; ;glcd.c: 408: {
"408
{
[; ;glcd.c: 410: for(i=0;((i<v_numOfDigitsToDisplay_u8) && (i<10u));i++)
"410
{
[e = _i -> -> 0 `i `uc ]
[e $U 120  ]
"411
[e :U 117 ]
[; ;glcd.c: 411: GLCD_DisplayChar('0');
[e ( _GLCD_DisplayChar (1 -> -> 48 `ui `uc ]
"410
[e ++ _i -> -> 1 `i `uc ]
[e :U 120 ]
[e $ && < -> _i `i -> _v_numOfDigitsToDisplay_u8 `i < -> _i `ui -> 10 `ui 117  ]
[e :U 118 ]
"411
}
"412
}
[; ;glcd.c: 412: }
[e $U 121  ]
"413
[e :U 116 ]
[; ;glcd.c: 413: else
[; ;glcd.c: 414: {
"414
{
[; ;glcd.c: 415: for(i=0;i<v_numOfDigitsToDisplay_u8;i++)
"415
{
[e = _i -> -> 0 `i `uc ]
[e $U 125  ]
"416
[e :U 122 ]
[; ;glcd.c: 416: {
{
[; ;glcd.c: 419: if(v_number_u32!=0)
"419
[e $ ! != _v_number_u32 -> -> -> 0 `i `l `ul 126  ]
[; ;glcd.c: 420: {
"420
{
[; ;glcd.c: 427: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u32/v_numericSystem_u8)));
"427
[e = *U + &U _a * -> _i `ux -> -> # *U &U _a `ui `ux -> - _v_number_u32 * -> _v_numericSystem_u8 `ul / _v_number_u32 -> _v_numericSystem_u8 `ul `uc ]
[; ;glcd.c: 428: v_number_u32=v_number_u32/v_numericSystem_u8;
"428
[e = _v_number_u32 / _v_number_u32 -> _v_numericSystem_u8 `ul ]
"429
}
[; ;glcd.c: 429: }
[e $U 127  ]
"430
[e :U 126 ]
[; ;glcd.c: 430: else if( (v_numOfDigitsToDisplay_u8 == 0xffu) ||
[; ;glcd.c: 431: (v_numOfDigitsToDisplay_u8 > 10u))
"431
[e $ ! || == -> _v_numOfDigitsToDisplay_u8 `ui -> 255 `ui > -> _v_numOfDigitsToDisplay_u8 `ui -> 10 `ui 128  ]
[; ;glcd.c: 432: {
"432
{
[; ;glcd.c: 435: break;
"435
[e $U 123  ]
"436
}
[; ;glcd.c: 436: }
[e $U 129  ]
"437
[e :U 128 ]
[; ;glcd.c: 437: else
[; ;glcd.c: 438: {
"438
{
[; ;glcd.c: 442: a[i]=0;
"442
[e = *U + &U _a * -> _i `ux -> -> # *U &U _a `ui `ux -> -> 0 `i `uc ]
"443
}
[e :U 129 ]
[e :U 127 ]
"444
}
"415
[e ++ _i -> -> 1 `i `uc ]
[e :U 125 ]
[e $ < -> _i `i -> _v_numOfDigitsToDisplay_u8 `i 122  ]
[e :U 123 ]
"444
}
[; ;glcd.c: 443: }
[; ;glcd.c: 444: }
[; ;glcd.c: 446: while(i!=0)
"446
[e $U 130  ]
[e :U 131 ]
[; ;glcd.c: 447: {
"447
{
[; ;glcd.c: 449: GLCD_DisplayChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
"449
[e ( _GLCD_DisplayChar (1 -> ? > -> *U + &U _a * -> -> - -> _i `i -> 1 `i `ui `ux -> -> # *U &U _a `ui `ux `i -> 9 `i : + -> *U + &U _a * -> -> - -> _i `i -> 1 `i `ui `ux -> -> # *U &U _a `ui `ux `i -> 55 `i + -> *U + &U _a * -> -> - -> _i `i -> 1 `i `ui `ux -> -> # *U &U _a `ui `ux `i -> 48 `i `uc ]
[; ;glcd.c: 450: i--;
"450
[e -- _i -> -> 1 `i `uc ]
"451
}
[e :U 130 ]
"446
[e $ != -> _i `i -> 0 `i 131  ]
[e :U 132 ]
"452
}
[e :U 121 ]
[e :U 115 ]
[; ;glcd.c: 451: }
[; ;glcd.c: 452: }
[; ;glcd.c: 453: }
"453
[e :UE 110 ]
}
"538
[v _GLCD_Printf `(v ~T0 @X0 1 ev`*Cuc ]
"539
{
[; ;glcd.c: 538: void GLCD_Printf(const char *argList, ...)
[; ;glcd.c: 539: {
[e :U _GLCD_Printf ]
"538
[v _argList `*Cuc ~T0 @X0 1 r0 ]
"539
[f ]
"540
[v _ptr `*Cuc ~T0 @X0 1 a ]
"541
[v _argp `*v ~T0 @X0 -> -> 1 `i `ux a ]
"542
[v _v_num_s16 `i ~T0 @X0 1 a ]
"543
[v _v_num_s32 `l ~T0 @X0 1 a ]
"544
[v _v_num_u16 `ui ~T0 @X0 1 a ]
"545
[v _v_num_u32 `ul ~T0 @X0 1 a ]
"546
[v _str `*uc ~T0 @X0 1 a ]
"547
[v _ch `uc ~T0 @X0 1 a ]
"548
[v _v_numOfDigitsToDisp_u8 `uc ~T0 @X0 1 a ]
[; ;glcd.c: 540: const char *ptr;
[; ;glcd.c: 541: va_list argp;
[; ;glcd.c: 542: sint16_t v_num_s16;
[; ;glcd.c: 543: sint32_t v_num_s32;
[; ;glcd.c: 544: uint16_t v_num_u16;
[; ;glcd.c: 545: uint32_t v_num_u32;
[; ;glcd.c: 546: char *str;
[; ;glcd.c: 547: char ch;
[; ;glcd.c: 548: uint8_t v_numOfDigitsToDisp_u8;
[; ;glcd.c: 553: *argp = __va_start();
"553
[e = *U &U _argp ( ___va_start ..  ]
[; ;glcd.c: 556: for(ptr = argList; *ptr != '\0'; ptr++)
"556
{
[e = _ptr _argList ]
[e $U 137  ]
"557
[e :U 134 ]
[; ;glcd.c: 557: {
{
[; ;glcd.c: 559: ch= *ptr;
"559
[e = _ch *U _ptr ]
[; ;glcd.c: 560: if(ch == '%')
"560
[e $ ! == -> _ch `ui -> 37 `ui 138  ]
[; ;glcd.c: 561: {
"561
{
[; ;glcd.c: 562: ptr++;
"562
[e ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x ]
[; ;glcd.c: 563: ch = *ptr;
"563
[e = _ch *U _ptr ]
[; ;glcd.c: 564: if((ch>=0x30) && (ch<=0x39))
"564
[e $ ! && >= -> _ch `i -> 48 `i <= -> _ch `i -> 57 `i 139  ]
[; ;glcd.c: 565: {
"565
{
[; ;glcd.c: 566: v_numOfDigitsToDisp_u8 = 0;
"566
[e = _v_numOfDigitsToDisp_u8 -> -> 0 `i `uc ]
[; ;glcd.c: 567: while((ch>=0x30) && (ch<=0x39))
"567
[e $U 140  ]
[e :U 141 ]
[; ;glcd.c: 568: {
"568
{
[; ;glcd.c: 569: v_numOfDigitsToDisp_u8 = (v_numOfDigitsToDisp_u8 * 10) + (ch-0x30);
"569
[e = _v_numOfDigitsToDisp_u8 -> + * -> _v_numOfDigitsToDisp_u8 `i -> 10 `i - -> _ch `i -> 48 `i `uc ]
[; ;glcd.c: 570: ptr++;
"570
[e ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x ]
[; ;glcd.c: 571: ch = *ptr;
"571
[e = _ch *U _ptr ]
"572
}
[e :U 140 ]
"567
[e $ && >= -> _ch `i -> 48 `i <= -> _ch `i -> 57 `i 141  ]
[e :U 142 ]
"573
}
[; ;glcd.c: 572: }
[; ;glcd.c: 573: }
[e $U 143  ]
"574
[e :U 139 ]
[; ;glcd.c: 574: else
[; ;glcd.c: 575: {
"575
{
[; ;glcd.c: 576: v_numOfDigitsToDisp_u8 = 0xffu;
"576
[e = _v_numOfDigitsToDisp_u8 -> -> 255 `ui `uc ]
"577
}
[e :U 143 ]
[; ;glcd.c: 577: }
[; ;glcd.c: 580: switch(ch)
"580
[e $U 145  ]
[; ;glcd.c: 581: {
"581
{
[; ;glcd.c: 582: case 'C':
"582
[e :U 146 ]
"583
[e :U 147 ]
[; ;glcd.c: 583: case 'c':
[; ;glcd.c: 584: ch = (*(int *)__va_arg((*(int **)argp), (int)0));
"584
[e = _ch -> *U -> ( ___va_arg , (. -> *U -> &U _argp `**i `*v -> 0 `i `*i `uc ]
[; ;glcd.c: 585: GLCD_DisplayChar(ch);
"585
[e ( _GLCD_DisplayChar (1 _ch ]
[; ;glcd.c: 586: break;
"586
[e $U 144  ]
[; ;glcd.c: 588: case 'd':
"588
[e :U 148 ]
[; ;glcd.c: 589: v_num_s16 = (*(int *)__va_arg((*(int **)argp), (int)0));
"589
[e = _v_num_s16 *U -> ( ___va_arg , (. -> *U -> &U _argp `**i `*v -> 0 `i `*i ]
[; ;glcd.c: 590: if(v_num_s16<0)
"590
[e $ ! < _v_num_s16 -> 0 `i 149  ]
[; ;glcd.c: 591: {
"591
{
[; ;glcd.c: 592: v_num_s16 = -v_num_s16;
"592
[e = _v_num_s16 -U _v_num_s16 ]
[; ;glcd.c: 593: GLCD_DisplayChar('-');
"593
[e ( _GLCD_DisplayChar (1 -> -> 45 `ui `uc ]
"594
}
[e :U 149 ]
[; ;glcd.c: 594: }
[; ;glcd.c: 595: GLCD_DisplayNumber(10u,v_num_s16,v_numOfDigitsToDisp_u8);
"595
[e ( _GLCD_DisplayNumber (3 , , -> -> 10 `ui `uc -> -> _v_num_s16 `l `ul _v_numOfDigitsToDisp_u8 ]
[; ;glcd.c: 596: break;
"596
[e $U 144  ]
[; ;glcd.c: 598: case 'D':
"598
[e :U 150 ]
[; ;glcd.c: 599: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
"599
[e = _v_num_s32 *U -> ( ___va_arg , (. -> *U -> &U _argp `**l `*v -> -> 0 `i `l `*l ]
[; ;glcd.c: 600: if(v_num_s32<0)
"600
[e $ ! < _v_num_s32 -> -> 0 `i `l 151  ]
[; ;glcd.c: 601: {
"601
{
[; ;glcd.c: 602: v_num_s32 = -v_num_s32;
"602
[e = _v_num_s32 -U _v_num_s32 ]
[; ;glcd.c: 603: GLCD_DisplayChar('-');
"603
[e ( _GLCD_DisplayChar (1 -> -> 45 `ui `uc ]
"604
}
[e :U 151 ]
[; ;glcd.c: 604: }
[; ;glcd.c: 605: GLCD_DisplayNumber(10u,v_num_s32,v_numOfDigitsToDisp_u8);
"605
[e ( _GLCD_DisplayNumber (3 , , -> -> 10 `ui `uc -> _v_num_s32 `ul _v_numOfDigitsToDisp_u8 ]
[; ;glcd.c: 606: break;
"606
[e $U 144  ]
[; ;glcd.c: 608: case 'u':
"608
[e :U 152 ]
[; ;glcd.c: 609: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
"609
[e = _v_num_u16 -> *U -> ( ___va_arg , (. -> *U -> &U _argp `**i `*v -> 0 `i `*i `ui ]
[; ;glcd.c: 610: GLCD_DisplayNumber(10u,v_num_u16,v_numOfDigitsToDisp_u8);
"610
[e ( _GLCD_DisplayNumber (3 , , -> -> 10 `ui `uc -> _v_num_u16 `ul _v_numOfDigitsToDisp_u8 ]
[; ;glcd.c: 611: break;
"611
[e $U 144  ]
[; ;glcd.c: 613: case 'U':
"613
[e :U 153 ]
[; ;glcd.c: 614: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
"614
[e = _v_num_u32 *U -> ( ___va_arg , (. -> *U -> &U _argp `**ul `*v -> -> 0 `i `ul `*ul ]
[; ;glcd.c: 615: GLCD_DisplayNumber(10u,v_num_u32,v_numOfDigitsToDisp_u8);
"615
[e ( _GLCD_DisplayNumber (3 , , -> -> 10 `ui `uc _v_num_u32 _v_numOfDigitsToDisp_u8 ]
[; ;glcd.c: 616: break;
"616
[e $U 144  ]
[; ;glcd.c: 618: case 'x':
"618
[e :U 154 ]
[; ;glcd.c: 619: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
"619
[e = _v_num_u16 -> *U -> ( ___va_arg , (. -> *U -> &U _argp `**i `*v -> 0 `i `*i `ui ]
[; ;glcd.c: 620: GLCD_DisplayNumber(16u,v_num_u16,v_numOfDigitsToDisp_u8);
"620
[e ( _GLCD_DisplayNumber (3 , , -> -> 16 `ui `uc -> _v_num_u16 `ul _v_numOfDigitsToDisp_u8 ]
[; ;glcd.c: 621: break;
"621
[e $U 144  ]
[; ;glcd.c: 623: case 'X':
"623
[e :U 155 ]
[; ;glcd.c: 624: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
"624
[e = _v_num_u32 *U -> ( ___va_arg , (. -> *U -> &U _argp `**ul `*v -> -> 0 `i `ul `*ul ]
[; ;glcd.c: 625: GLCD_DisplayNumber(16u,v_num_u32,v_numOfDigitsToDisp_u8);
"625
[e ( _GLCD_DisplayNumber (3 , , -> -> 16 `ui `uc _v_num_u32 _v_numOfDigitsToDisp_u8 ]
[; ;glcd.c: 626: break;
"626
[e $U 144  ]
[; ;glcd.c: 629: case 'b':
"629
[e :U 156 ]
[; ;glcd.c: 630: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
"630
[e = _v_num_u16 -> *U -> ( ___va_arg , (. -> *U -> &U _argp `**i `*v -> 0 `i `*i `ui ]
[; ;glcd.c: 631: if(v_numOfDigitsToDisp_u8 == 0xffu)
"631
[e $ ! == -> _v_numOfDigitsToDisp_u8 `ui -> 255 `ui 157  ]
[; ;glcd.c: 632: v_numOfDigitsToDisp_u8 = 16;
"632
[e = _v_numOfDigitsToDisp_u8 -> -> 16 `i `uc ]
[e :U 157 ]
[; ;glcd.c: 633: GLCD_DisplayNumber(2u,v_num_u16,v_numOfDigitsToDisp_u8);
"633
[e ( _GLCD_DisplayNumber (3 , , -> -> 2 `ui `uc -> _v_num_u16 `ul _v_numOfDigitsToDisp_u8 ]
[; ;glcd.c: 634: break;
"634
[e $U 144  ]
[; ;glcd.c: 636: case 'B':
"636
[e :U 158 ]
[; ;glcd.c: 637: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
"637
[e = _v_num_u32 *U -> ( ___va_arg , (. -> *U -> &U _argp `**ul `*v -> -> 0 `i `ul `*ul ]
[; ;glcd.c: 638: if(v_numOfDigitsToDisp_u8 == 0xffu)
"638
[e $ ! == -> _v_numOfDigitsToDisp_u8 `ui -> 255 `ui 159  ]
[; ;glcd.c: 639: v_numOfDigitsToDisp_u8 = 16;
"639
[e = _v_numOfDigitsToDisp_u8 -> -> 16 `i `uc ]
[e :U 159 ]
[; ;glcd.c: 640: GLCD_DisplayNumber(2u,v_num_u32,v_numOfDigitsToDisp_u8);
"640
[e ( _GLCD_DisplayNumber (3 , , -> -> 2 `ui `uc _v_num_u32 _v_numOfDigitsToDisp_u8 ]
[; ;glcd.c: 641: break;
"641
[e $U 144  ]
[; ;glcd.c: 644: case 'F':
"644
[e :U 160 ]
"645
[e :U 161 ]
[; ;glcd.c: 645: case 'f':
[; ;glcd.c: 650: break;
"650
[e $U 144  ]
[; ;glcd.c: 653: case 'S':
"653
[e :U 162 ]
"654
[e :U 163 ]
[; ;glcd.c: 654: case 's':
[; ;glcd.c: 655: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
"655
[e = _str *U -> ( ___va_arg , (. -> *U -> &U _argp `***uc `*v -> -> 0 `i `*uc `**uc ]
[; ;glcd.c: 656: GLCD_DisplayString(str);
"656
[e ( _GLCD_DisplayString (1 _str ]
[; ;glcd.c: 657: break;
"657
[e $U 144  ]
[; ;glcd.c: 659: case '%':
"659
[e :U 164 ]
[; ;glcd.c: 660: GLCD_DisplayChar('%');
"660
[e ( _GLCD_DisplayChar (1 -> -> 37 `ui `uc ]
[; ;glcd.c: 661: break;
"661
[e $U 144  ]
"662
}
[; ;glcd.c: 662: }
[e $U 144  ]
"580
[e :U 145 ]
[e [\ _ch , $ -> -> 67 `ui `uc 146
 , $ -> -> 99 `ui `uc 147
 , $ -> -> 100 `ui `uc 148
 , $ -> -> 68 `ui `uc 150
 , $ -> -> 117 `ui `uc 152
 , $ -> -> 85 `ui `uc 153
 , $ -> -> 120 `ui `uc 154
 , $ -> -> 88 `ui `uc 155
 , $ -> -> 98 `ui `uc 156
 , $ -> -> 66 `ui `uc 158
 , $ -> -> 70 `ui `uc 160
 , $ -> -> 102 `ui `uc 161
 , $ -> -> 83 `ui `uc 162
 , $ -> -> 115 `ui `uc 163
 , $ -> -> 37 `ui `uc 164
 144 ]
"662
[e :U 144 ]
"663
}
[; ;glcd.c: 663: }
[e $U 165  ]
"664
[e :U 138 ]
[; ;glcd.c: 664: else
[; ;glcd.c: 665: {
"665
{
[; ;glcd.c: 667: GLCD_DisplayChar(ch);
"667
[e ( _GLCD_DisplayChar (1 _ch ]
"668
}
[e :U 165 ]
"669
}
"556
[e ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x ]
[e :U 137 ]
[e $ != -> *U _ptr `ui -> 0 `ui 134  ]
[e :U 135 ]
"669
}
[; ;glcd.c: 668: }
[; ;glcd.c: 669: }
[; ;glcd.c: 671: ;
[; ;glcd.c: 672: }
"672
[e :UE 133 ]
}
"688
[v _GLCD_Clear `(v ~T0 @X0 1 ef ]
"689
{
[; ;glcd.c: 688: void GLCD_Clear()
[; ;glcd.c: 689: {
[e :U _GLCD_Clear ]
[f ]
"690
[v _line `uc ~T0 @X0 1 a ]
[v _cursor `uc ~T0 @X0 1 a ]
[; ;glcd.c: 690: uint8_t line,cursor;
[; ;glcd.c: 692: for(line=0;line<8;line++)
"692
{
[e = _line -> -> 0 `i `uc ]
[e $ < -> _line `i -> 8 `i 167  ]
[e $U 168  ]
"693
[e :U 167 ]
[; ;glcd.c: 693: {
{
[; ;glcd.c: 694: glcd_SelectPage0();
"694
[e ( _glcd_SelectPage0 ..  ]
[; ;glcd.c: 695: glcd_CmdWrite(0x40);
"695
[e ( _glcd_CmdWrite (1 -> -> 64 `i `uc ]
[; ;glcd.c: 696: glcd_CmdWrite(0xB8+line);
"696
[e ( _glcd_CmdWrite (1 -> + -> 184 `i -> _line `i `uc ]
[; ;glcd.c: 697: for(cursor=0;cursor<128;cursor++)
"697
{
[e = _cursor -> -> 0 `i `uc ]
[e $ < -> _cursor `i -> 128 `i 170  ]
[e $U 171  ]
"698
[e :U 170 ]
[; ;glcd.c: 698: {
{
[; ;glcd.c: 699: if(cursor==64)
"699
[e $ ! == -> _cursor `i -> 64 `i 173  ]
[; ;glcd.c: 700: {
"700
{
[; ;glcd.c: 701: glcd_SelectPage1();
"701
[e ( _glcd_SelectPage1 ..  ]
[; ;glcd.c: 702: glcd_CmdWrite(0x40);
"702
[e ( _glcd_CmdWrite (1 -> -> 64 `i `uc ]
[; ;glcd.c: 703: glcd_CmdWrite(0xB8+line);
"703
[e ( _glcd_CmdWrite (1 -> + -> 184 `i -> _line `i `uc ]
"704
}
[e :U 173 ]
[; ;glcd.c: 704: }
[; ;glcd.c: 705: glcd_DataWrite(0x00);
"705
[e ( _glcd_DataWrite (1 -> -> 0 `i `uc ]
"706
}
"697
[e ++ _cursor -> -> 1 `i `uc ]
[e $ < -> _cursor `i -> 128 `i 170  ]
[e :U 171 ]
"706
}
"707
}
"692
[e ++ _line -> -> 1 `i `uc ]
[e $ < -> _line `i -> 8 `i 167  ]
[e :U 168 ]
"707
}
[; ;glcd.c: 706: }
[; ;glcd.c: 707: }
[; ;glcd.c: 709: GLCD_GoToLine(0);
"709
[e ( _GLCD_GoToLine (1 -> -> 0 `i `uc ]
[; ;glcd.c: 710: }
"710
[e :UE 166 ]
}
"726
[v _GLCD_GoToPage `(v ~T0 @X0 1 ef1`uc ]
"727
{
[; ;glcd.c: 726: void GLCD_GoToPage(uint8_t pageNumber)
[; ;glcd.c: 727: {
[e :U _GLCD_GoToPage ]
"726
[v _pageNumber `uc ~T0 @X0 1 r1 ]
"727
[f ]
[; ;glcd.c: 729: if((pageNumber==0) || (pageNumber ==1))
"729
[e $ ! || == -> _pageNumber `i -> 0 `i == -> _pageNumber `i -> 1 `i 175  ]
[; ;glcd.c: 730: {
"730
{
[; ;glcd.c: 732: if(pageNumber == 0)
"732
[e $ ! == -> _pageNumber `i -> 0 `i 176  ]
[; ;glcd.c: 733: {
"733
{
[; ;glcd.c: 735: glcd_SelectPage0();
"735
[e ( _glcd_SelectPage0 ..  ]
"736
}
[; ;glcd.c: 736: }
[e $U 177  ]
"737
[e :U 176 ]
[; ;glcd.c: 737: else
[; ;glcd.c: 738: {
"738
{
[; ;glcd.c: 739: glcd_SelectPage1();
"739
[e ( _glcd_SelectPage1 ..  ]
"740
}
[e :U 177 ]
[; ;glcd.c: 740: }
[; ;glcd.c: 742: GLCD.PageNum=pageNumber;
"742
[e = . _GLCD 0 _pageNumber ]
[; ;glcd.c: 743: GLCD.CursorPos=0x40;
"743
[e = . _GLCD 2 -> -> 64 `i `uc ]
[; ;glcd.c: 744: glcd_CmdWrite(GLCD.LineNum);
"744
[e ( _glcd_CmdWrite (1 . _GLCD 1 ]
[; ;glcd.c: 745: glcd_CmdWrite(GLCD.CursorPos);
"745
[e ( _glcd_CmdWrite (1 . _GLCD 2 ]
"746
}
[e :U 175 ]
[; ;glcd.c: 746: }
[; ;glcd.c: 747: }
"747
[e :UE 174 ]
}
"764
[v _GLCD_GoToLine `(v ~T0 @X0 1 ef1`uc ]
"765
{
[; ;glcd.c: 764: void GLCD_GoToLine(uint8_t lineNumber)
[; ;glcd.c: 765: {
[e :U _GLCD_GoToLine ]
"764
[v _lineNumber `uc ~T0 @X0 1 r1 ]
"765
[f ]
[; ;glcd.c: 766: if(lineNumber<8)
"766
[e $ ! < -> _lineNumber `i -> 8 `i 179  ]
[; ;glcd.c: 767: {
"767
{
[; ;glcd.c: 769: GLCD.LineNum = lineNumber+0xB8;
"769
[e = . _GLCD 1 -> + -> _lineNumber `i -> 184 `i `uc ]
[; ;glcd.c: 770: GLCD_GoToPage(0);
"770
[e ( _GLCD_GoToPage (1 -> -> 0 `i `uc ]
"771
}
[e :U 179 ]
[; ;glcd.c: 771: }
[; ;glcd.c: 772: }
"772
[e :UE 178 ]
}
"789
[v _GLCD_GoToNextLine `(v ~T0 @X0 1 ef ]
"790
{
[; ;glcd.c: 789: void GLCD_GoToNextLine()
[; ;glcd.c: 790: {
[e :U _GLCD_GoToNextLine ]
[f ]
[; ;glcd.c: 793: GLCD.LineNum++;
"793
[e ++ . _GLCD 1 -> -> 1 `i `uc ]
[; ;glcd.c: 794: if(GLCD.LineNum > 0xBF)
"794
[e $ ! > -> . _GLCD 1 `i -> 191 `i 181  ]
[; ;glcd.c: 795: GLCD.LineNum = 0xB8;
"795
[e = . _GLCD 1 -> -> 184 `i `uc ]
[e :U 181 ]
[; ;glcd.c: 796: GLCD_GoToPage(0);
"796
[e ( _GLCD_GoToPage (1 -> -> 0 `i `uc ]
[; ;glcd.c: 797: }
"797
[e :UE 180 ]
}
"820
[v _GLCD_SetCursor `(v ~T0 @X0 1 ef2`uc`uc ]
"821
{
[; ;glcd.c: 820: void GLCD_SetCursor(uint8_t lineNumber,uint8_t CursorPosition)
[; ;glcd.c: 821: {
[e :U _GLCD_SetCursor ]
"820
[v _lineNumber `uc ~T0 @X0 1 r1 ]
[v _CursorPosition `uc ~T0 @X0 1 r2 ]
"821
[f ]
"823
[v _pageNumber `uc ~T0 @X0 1 a ]
[; ;glcd.c: 823: uint8_t pageNumber;
[; ;glcd.c: 825: if((lineNumber <= 0x07u) && (CursorPosition <= 128))
"825
[e $ ! && <= -> _lineNumber `ui -> 7 `ui <= -> _CursorPosition `i -> 128 `i 183  ]
[; ;glcd.c: 826: {
"826
{
[; ;glcd.c: 827: pageNumber = CursorPosition / 64;
"827
[e = _pageNumber -> / -> _CursorPosition `i -> 64 `i `uc ]
[; ;glcd.c: 828: CursorPosition = CursorPosition % 0x3f;
"828
[e = _CursorPosition -> % -> _CursorPosition `i -> 63 `i `uc ]
[; ;glcd.c: 829: if(pageNumber==0x00)
"829
[e $ ! == -> _pageNumber `i -> 0 `i 184  ]
[; ;glcd.c: 830: {
"830
{
[; ;glcd.c: 831: glcd_SelectPage0();
"831
[e ( _glcd_SelectPage0 ..  ]
"832
}
[; ;glcd.c: 832: }
[e $U 185  ]
"833
[e :U 184 ]
[; ;glcd.c: 833: else
[; ;glcd.c: 834: {
"834
{
[; ;glcd.c: 835: glcd_SelectPage1();
"835
[e ( _glcd_SelectPage1 ..  ]
"836
}
[e :U 185 ]
[; ;glcd.c: 836: }
[; ;glcd.c: 838: GLCD.PageNum = pageNumber;
"838
[e = . _GLCD 0 _pageNumber ]
[; ;glcd.c: 839: GLCD.LineNum=lineNumber | 0xB8;
"839
[e = . _GLCD 1 -> | -> _lineNumber `i -> 184 `i `uc ]
[; ;glcd.c: 840: GLCD.CursorPos=CursorPosition |0x40;
"840
[e = . _GLCD 2 -> | -> _CursorPosition `i -> 64 `i `uc ]
[; ;glcd.c: 842: glcd_CmdWrite(GLCD.CursorPos);
"842
[e ( _glcd_CmdWrite (1 . _GLCD 2 ]
[; ;glcd.c: 843: glcd_CmdWrite(GLCD.LineNum);
"843
[e ( _glcd_CmdWrite (1 . _GLCD 1 ]
"844
}
[e :U 183 ]
[; ;glcd.c: 844: }
[; ;glcd.c: 845: }
"845
[e :UE 182 ]
}
"863
[v _GLCD_DisplayLogo `(v ~T0 @X0 1 ef1`*Cuc ]
"864
{
[; ;glcd.c: 863: void GLCD_DisplayLogo(const char ptr_Logo[])
[; ;glcd.c: 864: {
[e :U _GLCD_DisplayLogo ]
"863
[v _ptr_Logo `*Cuc ~T0 @X0 1 r1 ]
"864
[f ]
"865
[v _line `uc ~T0 @X0 1 a ]
[v _cursor `uc ~T0 @X0 1 a ]
[; ;glcd.c: 865: uint8_t line,cursor;
[; ;glcd.c: 867: for(line=0;line<8;line++)
"867
{
[e = _line -> -> 0 `i `uc ]
[e $ < -> _line `i -> 8 `i 187  ]
[e $U 188  ]
"868
[e :U 187 ]
[; ;glcd.c: 868: {
{
[; ;glcd.c: 869: glcd_SelectPage0();
"869
[e ( _glcd_SelectPage0 ..  ]
[; ;glcd.c: 870: glcd_CmdWrite(0x40);
"870
[e ( _glcd_CmdWrite (1 -> -> 64 `i `uc ]
[; ;glcd.c: 871: glcd_CmdWrite(0xB8+line);
"871
[e ( _glcd_CmdWrite (1 -> + -> 184 `i -> _line `i `uc ]
[; ;glcd.c: 872: for(cursor=0;cursor<128;cursor++)
"872
{
[e = _cursor -> -> 0 `i `uc ]
[e $ < -> _cursor `i -> 128 `i 190  ]
[e $U 191  ]
"873
[e :U 190 ]
[; ;glcd.c: 873: {
{
[; ;glcd.c: 874: if(cursor==64)
"874
[e $ ! == -> _cursor `i -> 64 `i 193  ]
[; ;glcd.c: 875: {
"875
{
[; ;glcd.c: 876: glcd_SelectPage1();
"876
[e ( _glcd_SelectPage1 ..  ]
[; ;glcd.c: 877: glcd_CmdWrite(0x40);
"877
[e ( _glcd_CmdWrite (1 -> -> 64 `i `uc ]
[; ;glcd.c: 878: glcd_CmdWrite(0xB8+line);
"878
[e ( _glcd_CmdWrite (1 -> + -> 184 `i -> _line `i `uc ]
"879
}
[e :U 193 ]
[; ;glcd.c: 879: }
[; ;glcd.c: 880: glcd_DataWrite(*ptr_Logo++);
"880
[e ( _glcd_DataWrite (1 *U ++ _ptr_Logo * -> -> 1 `i `x -> -> # *U _ptr_Logo `i `x ]
"881
}
"872
[e ++ _cursor -> -> 1 `i `uc ]
[e $ < -> _cursor `i -> 128 `i 190  ]
[e :U 191 ]
"881
}
"882
}
"867
[e ++ _line -> -> 1 `i `uc ]
[e $ < -> _line `i -> 8 `i 187  ]
[e :U 188 ]
"882
}
[; ;glcd.c: 881: }
[; ;glcd.c: 882: }
[; ;glcd.c: 883: }
"883
[e :UE 186 ]
}
"901
[v _GLCD_VerticalGraph `(v ~T0 @X0 1 ef2`uc`uc ]
"902
{
[; ;glcd.c: 901: void GLCD_VerticalGraph(uint8_t var_barGraphNumber_u8, uint8_t var_percentageValue_u8)
[; ;glcd.c: 902: {
[e :U _GLCD_VerticalGraph ]
"901
[v _var_barGraphNumber_u8 `uc ~T0 @X0 1 r1 ]
[v _var_percentageValue_u8 `uc ~T0 @X0 1 r2 ]
"902
[f ]
"903
[v _var_lineNumberToStartDisplay_u8 `uc ~T0 @X0 1 a ]
[v _i `uc ~T0 @X0 1 a ]
[v _j `uc ~T0 @X0 1 a ]
[v _var_barGraphPosition_u8 `uc ~T0 @X0 1 a ]
"904
[v _lineNumber `uc ~T0 @X0 1 a ]
[v _var_valueToDisplay_u8 `uc ~T0 @X0 1 a ]
[; ;glcd.c: 903: uint8_t var_lineNumberToStartDisplay_u8,i,j,var_barGraphPosition_u8;
[; ;glcd.c: 904: uint8_t lineNumber,var_valueToDisplay_u8;
[; ;glcd.c: 907: if((var_barGraphNumber_u8 < 4) && (var_percentageValue_u8<=100))
"907
[e $ ! && < -> _var_barGraphNumber_u8 `i -> 4 `i <= -> _var_percentageValue_u8 `i -> 100 `i 195  ]
[; ;glcd.c: 908: {
"908
{
[; ;glcd.c: 909: var_barGraphPosition_u8 = var_barGraphNumber_u8 * 32;
"909
[e = _var_barGraphPosition_u8 -> * -> _var_barGraphNumber_u8 `i -> 32 `i `uc ]
[; ;glcd.c: 911: GLCD_SetCursor(0,var_barGraphPosition_u8+8);
"911
[e ( _GLCD_SetCursor (2 , -> -> 0 `i `uc -> + -> _var_barGraphPosition_u8 `i -> 8 `i `uc ]
[; ;glcd.c: 912: GLCD_DisplayNumber(E_DECIMAL,var_percentageValue_u8,3);
"912
[e ( _GLCD_DisplayNumber (3 , , -> . `E1088 1 `uc -> _var_percentageValue_u8 `ul -> -> 3 `i `uc ]
[; ;glcd.c: 916: var_percentageValue_u8 = var_percentageValue_u8/2;
"916
[e = _var_percentageValue_u8 -> / -> _var_percentageValue_u8 `i -> 2 `i `uc ]
[; ;glcd.c: 917: var_lineNumberToStartDisplay_u8 = (var_percentageValue_u8>>3);
"917
[e = _var_lineNumberToStartDisplay_u8 -> >> -> _var_percentageValue_u8 `i -> 3 `i `uc ]
[; ;glcd.c: 918: lineNumber = 7-var_lineNumberToStartDisplay_u8;
"918
[e = _lineNumber -> - -> 7 `i -> _var_lineNumberToStartDisplay_u8 `i `uc ]
[; ;glcd.c: 921: for(i=1;i<8;i++)
"921
{
[e = _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 196  ]
[e $U 197  ]
"922
[e :U 196 ]
[; ;glcd.c: 922: {
{
[; ;glcd.c: 923: GLCD_SetCursor(i,(var_barGraphPosition_u8+12));
"923
[e ( _GLCD_SetCursor (2 , _i -> + -> _var_barGraphPosition_u8 `i -> 12 `i `uc ]
[; ;glcd.c: 924: if(i<lineNumber)
"924
[e $ ! < -> _i `i -> _lineNumber `i 199  ]
[; ;glcd.c: 925: {
"925
{
[; ;glcd.c: 926: var_valueToDisplay_u8 = 0x00;
"926
[e = _var_valueToDisplay_u8 -> -> 0 `i `uc ]
"927
}
[; ;glcd.c: 927: }
[e $U 200  ]
"928
[e :U 199 ]
[; ;glcd.c: 928: else if(i== lineNumber)
[e $ ! == -> _i `i -> _lineNumber `i 201  ]
[; ;glcd.c: 929: {
"929
{
[; ;glcd.c: 930: var_valueToDisplay_u8 = (uint8_t) (var_percentageValue_u8 - (8 * (uint8_t) (var_percentageValue_u8/8)));
"930
[e = _var_valueToDisplay_u8 -> - -> _var_percentageValue_u8 `i * -> 8 `i -> -> / -> _var_percentageValue_u8 `i -> 8 `i `uc `i `uc ]
[; ;glcd.c: 931: var_valueToDisplay_u8 = (0xff<<(8-var_valueToDisplay_u8));
"931
[e = _var_valueToDisplay_u8 -> << -> 255 `i - -> 8 `i -> _var_valueToDisplay_u8 `i `uc ]
"932
}
[; ;glcd.c: 932: }
[e $U 202  ]
"933
[e :U 201 ]
[; ;glcd.c: 933: else
[; ;glcd.c: 934: {
"934
{
[; ;glcd.c: 935: var_valueToDisplay_u8 = 0xff;
"935
[e = _var_valueToDisplay_u8 -> -> 255 `i `uc ]
"936
}
[e :U 202 ]
[e :U 200 ]
[; ;glcd.c: 936: }
[; ;glcd.c: 938: for(j=0;j<12;j++)
"938
{
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i -> 12 `i 203  ]
[e $U 204  ]
"939
[e :U 203 ]
[; ;glcd.c: 939: {
{
[; ;glcd.c: 940: glcd_DataWrite(var_valueToDisplay_u8);
"940
[e ( _glcd_DataWrite (1 _var_valueToDisplay_u8 ]
"941
}
"938
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i -> 12 `i 203  ]
[e :U 204 ]
"941
}
"942
}
"921
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 196  ]
[e :U 197 ]
"942
}
"943
}
[e :U 195 ]
[; ;glcd.c: 941: }
[; ;glcd.c: 942: }
[; ;glcd.c: 943: }
[; ;glcd.c: 944: }
"944
[e :UE 194 ]
}
"961
[v _GLCD_HorizontalGraph `(v ~T0 @X0 1 ef2`uc`uc ]
"962
{
[; ;glcd.c: 961: void GLCD_HorizontalGraph(uint8_t var_barGraphNumber_u8, uint8_t var_percentageValue_u8)
[; ;glcd.c: 962: {
[e :U _GLCD_HorizontalGraph ]
"961
[v _var_barGraphNumber_u8 `uc ~T0 @X0 1 r1 ]
[v _var_percentageValue_u8 `uc ~T0 @X0 1 r2 ]
"962
[f ]
"963
[v _var_lineNumber_u8 `uc ~T0 @X0 1 a ]
[v _i `uc ~T0 @X0 1 a ]
[; ;glcd.c: 963: uint8_t var_lineNumber_u8,i;
[; ;glcd.c: 964: var_lineNumber_u8 = (var_barGraphNumber_u8 * 2)+1;
"964
[e = _var_lineNumber_u8 -> + * -> _var_barGraphNumber_u8 `i -> 2 `i -> 1 `i `uc ]
[; ;glcd.c: 966: if((var_barGraphNumber_u8 < 4) && (var_percentageValue_u8<=100))
"966
[e $ ! && < -> _var_barGraphNumber_u8 `i -> 4 `i <= -> _var_percentageValue_u8 `i -> 100 `i 207  ]
[; ;glcd.c: 967: {
"967
{
[; ;glcd.c: 968: GLCD_GoToPage(0);
"968
[e ( _GLCD_GoToPage (1 -> -> 0 `i `uc ]
[; ;glcd.c: 969: GLCD_SetCursor(var_lineNumber_u8,0);
"969
[e ( _GLCD_SetCursor (2 , _var_lineNumber_u8 -> -> 0 `i `uc ]
[; ;glcd.c: 971: for(i=0;i<var_percentageValue_u8;i++)
"971
{
[e = _i -> -> 0 `i `uc ]
[e $U 211  ]
"972
[e :U 208 ]
[; ;glcd.c: 972: {
{
[; ;glcd.c: 973: if(i==64)
"973
[e $ ! == -> _i `i -> 64 `i 212  ]
[; ;glcd.c: 974: GLCD_GoToPage(1);
"974
[e ( _GLCD_GoToPage (1 -> -> 1 `i `uc ]
[e :U 212 ]
[; ;glcd.c: 976: glcd_DataWrite(0xff);
"976
[e ( _glcd_DataWrite (1 -> -> 255 `i `uc ]
"978
}
"971
[e ++ _i -> -> 1 `i `uc ]
[e :U 211 ]
[e $ < -> _i `i -> _var_percentageValue_u8 `i 208  ]
[e :U 209 ]
"978
}
[; ;glcd.c: 978: }
[; ;glcd.c: 980: for(i=var_percentageValue_u8;i<100;i++)
"980
{
[e = _i _var_percentageValue_u8 ]
[e $ < -> _i `i -> 100 `i 213  ]
[e $U 214  ]
"981
[e :U 213 ]
[; ;glcd.c: 981: {
{
[; ;glcd.c: 982: if(i==64)
"982
[e $ ! == -> _i `i -> 64 `i 216  ]
[; ;glcd.c: 983: GLCD_GoToPage(1);
"983
[e ( _GLCD_GoToPage (1 -> -> 1 `i `uc ]
[e :U 216 ]
[; ;glcd.c: 985: glcd_DataWrite(0x00);
"985
[e ( _glcd_DataWrite (1 -> -> 0 `i `uc ]
"986
}
"980
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 100 `i 213  ]
[e :U 214 ]
"986
}
[; ;glcd.c: 986: }
[; ;glcd.c: 988: GLCD_SetCursor(var_lineNumber_u8,105);
"988
[e ( _GLCD_SetCursor (2 , _var_lineNumber_u8 -> -> 105 `i `uc ]
[; ;glcd.c: 990: GLCD_DisplayNumber(E_DECIMAL,var_percentageValue_u8,3);
"990
[e ( _GLCD_DisplayNumber (3 , , -> . `E1088 1 `uc -> _var_percentageValue_u8 `ul -> -> 3 `i `uc ]
"991
}
[e :U 207 ]
[; ;glcd.c: 991: }
[; ;glcd.c: 992: }
"992
[e :UE 206 ]
}
"1009
[v _GLCD_EnableInversion `(v ~T0 @X0 1 ef ]
"1010
{
[; ;glcd.c: 1009: void GLCD_EnableInversion(void)
[; ;glcd.c: 1010: {
[e :U _GLCD_EnableInversion ]
[f ]
[; ;glcd.c: 1011: GLCD.Invertdisplay = 0xFF;
"1011
[e = . _GLCD 3 -> -> 255 `i `uc ]
[; ;glcd.c: 1012: }
"1012
[e :UE 217 ]
}
"1045
[v _glcd_CmdWrite `(v ~T0 @X0 1 ef1`uc ]
"1046
{
[; ;glcd.c: 1045: void glcd_CmdWrite( uint8_t cmd)
[; ;glcd.c: 1046: {
[e :U _glcd_CmdWrite ]
"1045
[v _cmd `uc ~T0 @X0 1 r1 ]
"1046
[f ]
[; ;glcd.c: 1047: glcd_BusyCheck();
"1047
[e ( _glcd_BusyCheck ..  ]
[; ;glcd.c: 1048: PORTB = cmd;
"1048
[e = _PORTB _cmd ]
[; ;glcd.c: 1049: (((PORTD)) &= ~(1<<((0))));
"1049
[e =& _PORTD -> ~ << -> 1 `i -> 0 `i `uc ]
[; ;glcd.c: 1050: (((PORTD)) &= ~(1<<((1))));
"1050
[e =& _PORTD -> ~ << -> 1 `i -> 1 `i `uc ]
[; ;glcd.c: 1051: (((PORTD)) |= (1<<((2))));
"1051
[e =| _PORTD -> << -> 1 `i -> 2 `i `uc ]
[; ;glcd.c: 1052: DELAY_us(1);
"1052
[e ( _DELAY_us (1 -> -> 1 `i `ui ]
[; ;glcd.c: 1053: (((PORTD)) &= ~(1<<((2))));
"1053
[e =& _PORTD -> ~ << -> 1 `i -> 2 `i `uc ]
[; ;glcd.c: 1054: }
"1054
[e :UE 218 ]
}
"1059
[v _glcd_DataWrite `(v ~T0 @X0 1 ef1`uc ]
"1060
{
[; ;glcd.c: 1059: void glcd_DataWrite( uint8_t dat)
[; ;glcd.c: 1060: {
[e :U _glcd_DataWrite ]
"1059
[v _dat `uc ~T0 @X0 1 r1 ]
"1060
[f ]
[; ;glcd.c: 1061: glcd_BusyCheck();
"1061
[e ( _glcd_BusyCheck ..  ]
[; ;glcd.c: 1062: PORTB = dat ^ GLCD.Invertdisplay;
"1062
[e = _PORTB -> ^ -> _dat `i -> . _GLCD 3 `i `uc ]
[; ;glcd.c: 1063: (((PORTD)) |= (1<<((0))));
"1063
[e =| _PORTD -> << -> 1 `i -> 0 `i `uc ]
[; ;glcd.c: 1064: (((PORTD)) &= ~(1<<((1))));
"1064
[e =& _PORTD -> ~ << -> 1 `i -> 1 `i `uc ]
[; ;glcd.c: 1065: (((PORTD)) |= (1<<((2))));
"1065
[e =| _PORTD -> << -> 1 `i -> 2 `i `uc ]
[; ;glcd.c: 1066: DELAY_us(1);
"1066
[e ( _DELAY_us (1 -> -> 1 `i `ui ]
[; ;glcd.c: 1067: (((PORTD)) &= ~(1<<((2))));
"1067
[e =& _PORTD -> ~ << -> 1 `i -> 2 `i `uc ]
[; ;glcd.c: 1068: }
"1068
[e :UE 219 ]
}
"1073
[v _glcd_SelectPage0 `(v ~T0 @X0 1 ef ]
"1074
{
[; ;glcd.c: 1073: void glcd_SelectPage0()
[; ;glcd.c: 1074: {
[e :U _glcd_SelectPage0 ]
[f ]
[; ;glcd.c: 1075: (((PORTD)) |= (1<<((3))));
"1075
[e =| _PORTD -> << -> 1 `i -> 3 `i `uc ]
[; ;glcd.c: 1076: (((PORTD)) &= ~(1<<((4))));
"1076
[e =& _PORTD -> ~ << -> 1 `i -> 4 `i `uc ]
[; ;glcd.c: 1077: }
"1077
[e :UE 220 ]
}
"1081
[v _glcd_SelectPage1 `(v ~T0 @X0 1 ef ]
"1082
{
[; ;glcd.c: 1081: void glcd_SelectPage1()
[; ;glcd.c: 1082: {
[e :U _glcd_SelectPage1 ]
[f ]
[; ;glcd.c: 1083: (((PORTD)) |= (1<<((4))));
"1083
[e =| _PORTD -> << -> 1 `i -> 4 `i `uc ]
[; ;glcd.c: 1084: (((PORTD)) &= ~(1<<((3))));
"1084
[e =& _PORTD -> ~ << -> 1 `i -> 3 `i `uc ]
[; ;glcd.c: 1085: }
"1085
[e :UE 221 ]
}
"1091
[v _glcd_BusyCheck `(v ~T0 @X0 1 ef ]
"1092
{
[; ;glcd.c: 1091: void glcd_BusyCheck()
[; ;glcd.c: 1092: {
[e :U _glcd_BusyCheck ]
[f ]
[; ;glcd.c: 1111: DELAY_us(10);
"1111
[e ( _DELAY_us (1 -> -> 10 `i `ui ]
[; ;glcd.c: 1113: }
"1113
[e :UE 222 ]
}
"1118
[p o ]
