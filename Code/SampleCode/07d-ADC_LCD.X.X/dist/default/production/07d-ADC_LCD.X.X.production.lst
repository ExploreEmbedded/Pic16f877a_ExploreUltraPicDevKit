

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Feb 20 20:42:34 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  009F                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230                           
   231                           	psect	idataBANK1
   232  08C7                     __pidataBANK1:	
   233                           
   234                           ;initializer for _ARR_LcdLineNumAddress_U8
   235  08C7  3480               	retlw	128
   236  08C8  34C0               	retlw	192
   237  08C9  3490               	retlw	144
   238  08CA  34D0               	retlw	208
   239  001F                     _ADCON0	set	31
   240  001E                     _ADRESH	set	30
   241  0005                     _PORTA	set	5
   242  0006                     _PORTB	set	6
   243  0007                     _PORTC	set	7
   244  0008                     _PORTD	set	8
   245  0009                     _PORTE	set	9
   246  00F8                     _ADON	set	248
   247  00FA                     _GO	set	250
   248  00FA                     _GO_DONE	set	250
   249  009F                     _ADCON1	set	159
   250  009E                     _ADRESL	set	158
   251  0085                     _TRISA	set	133
   252  0086                     _TRISB	set	134
   253  0087                     _TRISC	set	135
   254  0088                     _TRISD	set	136
   255  0089                     _TRISE	set	137
   256                           
   257                           	psect	strings
   258  0800                     __pstrings:	
   259  0800                     stringtab:	
   260  0800                     __stringtab:	
   261  0800                     stringcode:	
   262                           ;	String table - string pointers are 1 byte each
   263                           
   264  0800                     stringdir:	
   265  0800  3008               	movlw	high stringdir
   266  0801  008A               	movwf	10
   267  0802  0804               	movf	4,w
   268  0803  0A84               	incf	4,f
   269  0804  0782               	addwf	2,f
   270  0805                     __stringbase:	
   271  0805  3400               	retlw	0
   272  0806                     __end_of__stringtab:	
   273  0806                     STR_1:	
   274  0806  3441               	retlw	65	;'A'
   275  0807  3444               	retlw	68	;'D'
   276  0808  3443               	retlw	67	;'C'
   277  0809  3430               	retlw	48	;'0'
   278  080A  3420               	retlw	32	;' '
   279  080B  3456               	retlw	86	;'V'
   280  080C  3461               	retlw	97	;'a'
   281  080D  346C               	retlw	108	;'l'
   282  080E  3475               	retlw	117	;'u'
   283  080F  3465               	retlw	101	;'e'
   284  0810  343A               	retlw	58	;':'
   285  0811  3425               	retlw	37	;'%'
   286  0812  3434               	retlw	52	;'4'
   287  0813  3464               	retlw	100	;'d'
   288  0814  340A               	retlw	10
   289  0815  3456               	retlw	86	;'V'
   290  0816  346F               	retlw	111	;'o'
   291  0817  346C               	retlw	108	;'l'
   292  0818  3474               	retlw	116	;'t'
   293  0819  343A               	retlw	58	;':'
   294  081A  3425               	retlw	37	;'%'
   295  081B  3466               	retlw	102	;'f'
   296  081C  3400               	retlw	0
   297                           
   298                           ; #config settings
   299  0000                     
   300                           	psect	cinit
   301  07D4                     start_initialization:	
   302  07D4                     __initialization:	
   303                           
   304                           ; Clear objects allocated to BANK0
   305  07D4  01EC               	clrf	__pbssBANK0& (0+127)
   306  07D5  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   307                           
   308                           ; Clear objects allocated to BANK1
   309  07D6  1683               	bsf	3,5	;RP0=1, select bank1
   310  07D7  1303               	bcf	3,6	;RP1=0, select bank1
   311  07D8  01A0               	clrf	__pbssBANK1& (0+127)
   312  07D9  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   313  07DA  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   314  07DB  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   315  07DC  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   316  07DD  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   317  07DE  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   318  07DF  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   319  07E0  01A8               	clrf	(__pbssBANK1+8)& (0+127)
   320  07E1  01A9               	clrf	(__pbssBANK1+9)& (0+127)
   321  07E2  01AA               	clrf	(__pbssBANK1+10)& (0+127)
   322  07E3  01AB               	clrf	(__pbssBANK1+11)& (0+127)
   323  07E4  01AC               	clrf	(__pbssBANK1+12)& (0+127)
   324  07E5  01AD               	clrf	(__pbssBANK1+13)& (0+127)
   325                           
   326                           ; Initialize objects allocated to BANK1
   327  07E6  120A  158A  20C7  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   328  07EB  00B8               	movwf	__pdataBANK1& (0+127)
   329  07EC  120A  158A  20C8  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   330  07F1  00B9               	movwf	(__pdataBANK1+1)& (0+127)
   331  07F2  120A  158A  20C9  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   332  07F7  00BA               	movwf	(__pdataBANK1+2)& (0+127)
   333  07F8  120A  158A  20CA   	fcall	__pidataBANK1+3	;fetch initializer
   334  07FB  00BB               	movwf	(__pdataBANK1+3)& (0+127)
   335  07FC                     end_of_initialization:	
   336                           ;End of C runtime variable initialization code
   337                           
   338  07FC                     __end_of__initialization:	
   339  07FC  0183               	clrf	3
   340  07FD  120A  158A  2F3D   	ljmp	_main	;jump to C main() function
   341                           
   342                           	psect	bssBANK0
   343  006C                     __pbssBANK0:	
   344  006C                     _v_LcdTrackCursorPos_U8:	
   345  006C                     	ds	1
   346  006D                     _v_LcdTrackLineNum_U8:	
   347  006D                     	ds	1
   348                           
   349                           	psect	bssBANK1
   350  00A0                     __pbssBANK1:	
   351  00A0                     _LCDConfig:	
   352  00A0                     	ds	14
   353                           
   354                           	psect	dataBANK1
   355  00B8                     __pdataBANK1:	
   356  00B8                     _ARR_LcdLineNumAddress_U8:	
   357  00B8                     	ds	4
   358                           
   359                           	psect	cstackBANK1
   360  00AE                     __pcstackBANK1:	
   361  00AE                     ??_main:	
   362                           
   363                           ; 1 bytes @ 0x0
   364  00AE                     	ds	10
   365                           
   366                           	psect	cstackCOMMON
   367  0070                     __pcstackCOMMON:	
   368  0070                     ?_LCD_CmdWrite:	
   369  0070                     ?_lcd_Reset:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ?_LCD_Clear:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_LCD_GoToLine:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ?_lcd_BusyCheck:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_lcd_SendLowerNibble:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_lcd_SendHigherNibble:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ?_lcd_SendCmdSignals:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ?_lcd_DataWrite:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ?_lcd_SendDataSignals:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ?_GPIO_PinDirection:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_GPIO_PinWrite:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_GPIO_PinRead:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ??_GPIO_PinRead:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_DELAY_us:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_ADC_Init:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ??_ADC_Init:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_LCD_GoToNextLine:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_LCD_DisplayChar:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_LCD_DisplayString:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_main:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?___ftpack:	
   430                           ; 2 bytes @ 0x0
   431                           
   432  0070                     ?___lldiv:	
   433                           ; 3 bytes @ 0x0
   434                           
   435  0070                     GPIO_PinDirection@var_pinDirn_u8:	
   436                           ; 4 bytes @ 0x0
   437                           
   438  0070                     GPIO_PinWrite@var_pinValue_u8:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     DELAY_us@us_count:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ___ftpack@arg:	
   445                           ; 2 bytes @ 0x0
   446                           
   447  0070                     ___lldiv@divisor:	
   448                           ; 3 bytes @ 0x0
   449                           
   450                           
   451                           ; 4 bytes @ 0x0
   452  0070                     	ds	1
   453  0071                     ??_GPIO_PinDirection:	
   454  0071                     ??_GPIO_PinWrite:	
   455                           ; 1 bytes @ 0x1
   456                           
   457                           
   458                           ; 1 bytes @ 0x1
   459  0071                     	ds	1
   460  0072                     ??_DELAY_us:	
   461  0072                     ?_DELAY_ms:	
   462                           ; 1 bytes @ 0x2
   463                           
   464  0072                     ?_ADC_GetAdcValue:	
   465                           ; 1 bytes @ 0x2
   466                           
   467  0072                     GPIO_PinRead@var_portNumber_u8:	
   468                           ; 2 bytes @ 0x2
   469                           
   470  0072                     DELAY_ms@ms_count:	
   471                           ; 1 bytes @ 0x2
   472                           
   473                           
   474                           ; 2 bytes @ 0x2
   475  0072                     	ds	1
   476  0073                     GPIO_PinDirection@var_portNumber_u8:	
   477  0073                     GPIO_PinWrite@var_portNumber_u8:	
   478                           ; 1 bytes @ 0x3
   479                           
   480  0073                     GPIO_PinRead@returnStatus:	
   481                           ; 1 bytes @ 0x3
   482                           
   483  0073                     ___ftpack@exp:	
   484                           ; 1 bytes @ 0x3
   485                           
   486                           
   487                           ; 1 bytes @ 0x3
   488  0073                     	ds	1
   489  0074                     ??_DELAY_ms:	
   490  0074                     ??_ADC_GetAdcValue:	
   491                           ; 1 bytes @ 0x4
   492                           
   493  0074                     GPIO_PinDirection@enm_pinNumber:	
   494                           ; 1 bytes @ 0x4
   495                           
   496  0074                     GPIO_PinWrite@enm_pinNumber:	
   497                           ; 1 bytes @ 0x4
   498                           
   499  0074                     GPIO_PinRead@enm_pinNumber:	
   500                           ; 1 bytes @ 0x4
   501                           
   502  0074                     ___ftpack@sign:	
   503                           ; 1 bytes @ 0x4
   504                           
   505  0074                     ___lldiv@dividend:	
   506                           ; 1 bytes @ 0x4
   507                           
   508                           
   509                           ; 4 bytes @ 0x4
   510  0074                     	ds	1
   511  0075                     ??_lcd_BusyCheck:	
   512  0075                     ??_lcd_SendLowerNibble:	
   513                           ; 1 bytes @ 0x5
   514                           
   515  0075                     ??_lcd_SendHigherNibble:	
   516                           ; 1 bytes @ 0x5
   517                           
   518  0075                     ??_lcd_SendCmdSignals:	
   519                           ; 1 bytes @ 0x5
   520                           
   521  0075                     ??_lcd_SendDataSignals:	
   522                           ; 1 bytes @ 0x5
   523                           
   524  0075                     ??___ftpack:	
   525                           ; 1 bytes @ 0x5
   526                           
   527  0075                     ??_LCD_SetUp:	
   528                           ; 1 bytes @ 0x5
   529                           
   530  0075                     ADC_GetAdcValue@var_adcChannel_u8:	
   531                           ; 1 bytes @ 0x5
   532                           
   533                           
   534                           ; 1 bytes @ 0x5
   535  0075                     	ds	1
   536  0076                     LCD_SetUp@RS:	
   537  0076                     lcd_BusyCheck@busyflag:	
   538                           ; 1 bytes @ 0x6
   539                           
   540  0076                     lcd_SendHigherNibble@dataByte:	
   541                           ; 1 bytes @ 0x6
   542                           
   543  0076                     lcd_SendLowerNibble@dataByte:	
   544                           ; 1 bytes @ 0x6
   545                           
   546                           
   547                           ; 1 bytes @ 0x6
   548  0076                     	ds	1
   549  0077                     ??_LCD_CmdWrite:	
   550  0077                     ??_lcd_Reset:	
   551                           ; 1 bytes @ 0x7
   552                           
   553  0077                     ??_lcd_DataWrite:	
   554                           ; 1 bytes @ 0x7
   555                           
   556                           
   557                           ; 1 bytes @ 0x7
   558  0077                     	ds	1
   559  0078                     ??___lldiv:	
   560  0078                     ?___awtoft:	
   561                           ; 1 bytes @ 0x8
   562                           
   563  0078                     ?___lltoft:	
   564                           ; 3 bytes @ 0x8
   565                           
   566  0078                     ___awtoft@c:	
   567                           ; 3 bytes @ 0x8
   568                           
   569  0078                     ___lltoft@c:	
   570                           ; 2 bytes @ 0x8
   571                           
   572                           
   573                           ; 4 bytes @ 0x8
   574  0078                     	ds	1
   575  0079                     LCD_CmdWrite@v_lcdCmd_u8:	
   576  0079                     lcd_DataWrite@dataByte:	
   577                           ; 1 bytes @ 0x9
   578                           
   579  0079                     ___lldiv@quotient:	
   580                           ; 1 bytes @ 0x9
   581                           
   582                           
   583                           ; 4 bytes @ 0x9
   584  0079                     	ds	1
   585  007A                     ??_LCD_GoToLine:	
   586  007A                     ??_LCD_GoToNextLine:	
   587                           ; 1 bytes @ 0xA
   588                           
   589                           
   590                           ; 1 bytes @ 0xA
   591  007A                     	ds	1
   592  007B                     ??_LCD_DisplayChar:	
   593  007B                     ??___awtoft:	
   594                           ; 1 bytes @ 0xB
   595                           
   596  007B                     LCD_GoToLine@v_lineNumber_u8:	
   597                           ; 1 bytes @ 0xB
   598                           
   599                           
   600                           ; 1 bytes @ 0xB
   601  007B                     	ds	1
   602  007C                     ??_LCD_Clear:	
   603  007C                     ?_LCD_Init:	
   604                           ; 1 bytes @ 0xC
   605                           
   606  007C                     ??___lltoft:	
   607                           ; 1 bytes @ 0xC
   608                           
   609  007C                     LCD_Init@v_MaxCharsPerLine_u8:	
   610                           ; 1 bytes @ 0xC
   611                           
   612  007C                     LCD_DisplayChar@v_lcdData_u8:	
   613                           ; 1 bytes @ 0xC
   614                           
   615                           
   616                           ; 1 bytes @ 0xC
   617  007C                     	ds	1
   618  007D                     ??_LCD_Init:	
   619  007D                     ??_LCD_DisplayString:	
   620                           ; 1 bytes @ 0xD
   621                           
   622  007D                     ___awtoft@sign:	
   623                           ; 1 bytes @ 0xD
   624                           
   625  007D                     ___lldiv@counter:	
   626                           ; 1 bytes @ 0xD
   627                           
   628  007D                     ___lltoft@exp:	
   629                           ; 1 bytes @ 0xD
   630                           
   631                           
   632                           ; 1 bytes @ 0xD
   633  007D                     	ds	1
   634  007E                     ??___ftneg:	
   635                           
   636                           	psect	cstackBANK0
   637  0020                     __pcstackBANK0:	
   638                           ; 1 bytes @ 0xE
   639                           
   640  0020                     ?_LCD_SetUp:	
   641  0020                     ?___bmul:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0020                     ?___ftmul:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0020                     ?___ftneg:	
   648                           ; 3 bytes @ 0x0
   649                           
   650  0020                     LCD_SetUp@RW:	
   651                           ; 3 bytes @ 0x0
   652                           
   653  0020                     LCD_Init@v_lcdNoOfLines_u8:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0020                     LCD_DisplayString@ptr_stringPointer_u8:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0020                     ___bmul@multiplicand:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0020                     ___ftmul@f1:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0020                     ___ftneg@f1:	
   666                           ; 3 bytes @ 0x0
   667                           
   668                           
   669                           ; 3 bytes @ 0x0
   670  0020                     	ds	1
   671  0021                     ??___bmul:	
   672  0021                     LCD_SetUp@EN:	
   673                           ; 1 bytes @ 0x1
   674                           
   675                           
   676                           ; 1 bytes @ 0x1
   677  0021                     	ds	1
   678  0022                     LCD_SetUp@D0:	
   679  0022                     ___bmul@product:	
   680                           ; 1 bytes @ 0x2
   681                           
   682                           
   683                           ; 1 bytes @ 0x2
   684  0022                     	ds	1
   685  0023                     ?___ftadd:	
   686  0023                     LCD_SetUp@D1:	
   687                           ; 3 bytes @ 0x3
   688                           
   689  0023                     ___bmul@multiplier:	
   690                           ; 1 bytes @ 0x3
   691                           
   692  0023                     ___ftadd@f1:	
   693                           ; 1 bytes @ 0x3
   694                           
   695  0023                     ___ftmul@f2:	
   696                           ; 3 bytes @ 0x3
   697                           
   698                           
   699                           ; 3 bytes @ 0x3
   700  0023                     	ds	1
   701  0024                     ?_LCD_DisplayNumber:	
   702  0024                     LCD_SetUp@D2:	
   703                           ; 1 bytes @ 0x4
   704                           
   705  0024                     LCD_DisplayNumber@v_number_u32:	
   706                           ; 1 bytes @ 0x4
   707                           
   708                           
   709                           ; 4 bytes @ 0x4
   710  0024                     	ds	1
   711  0025                     LCD_SetUp@D3:	
   712                           
   713                           ; 1 bytes @ 0x5
   714  0025                     	ds	1
   715  0026                     ??___ftmul:	
   716  0026                     LCD_SetUp@D4:	
   717                           ; 1 bytes @ 0x6
   718                           
   719  0026                     ___ftadd@f2:	
   720                           ; 1 bytes @ 0x6
   721                           
   722                           
   723                           ; 3 bytes @ 0x6
   724  0026                     	ds	1
   725  0027                     LCD_SetUp@D5:	
   726                           
   727                           ; 1 bytes @ 0x7
   728  0027                     	ds	1
   729  0028                     LCD_SetUp@D6:	
   730  0028                     LCD_DisplayNumber@v_numOfDigitsToDisplay_u8:	
   731                           ; 1 bytes @ 0x8
   732                           
   733                           
   734                           ; 1 bytes @ 0x8
   735  0028                     	ds	1
   736  0029                     ??_LCD_DisplayNumber:	
   737  0029                     ??___ftadd:	
   738                           ; 1 bytes @ 0x9
   739                           
   740  0029                     LCD_SetUp@D7:	
   741                           ; 1 bytes @ 0x9
   742                           
   743                           
   744                           ; 1 bytes @ 0x9
   745  0029                     	ds	1
   746  002A                     ___ftmul@exp:	
   747                           
   748                           ; 1 bytes @ 0xA
   749  002A                     	ds	1
   750  002B                     ___ftmul@f3_as_product:	
   751                           
   752                           ; 3 bytes @ 0xB
   753  002B                     	ds	2
   754  002D                     ___ftadd@sign:	
   755                           
   756                           ; 1 bytes @ 0xD
   757  002D                     	ds	1
   758  002E                     ___ftadd@exp2:	
   759  002E                     ___ftmul@cntr:	
   760                           ; 1 bytes @ 0xE
   761                           
   762                           
   763                           ; 1 bytes @ 0xE
   764  002E                     	ds	1
   765  002F                     ___ftadd@exp1:	
   766  002F                     ___ftmul@sign:	
   767                           ; 1 bytes @ 0xF
   768                           
   769                           
   770                           ; 1 bytes @ 0xF
   771  002F                     	ds	1
   772  0030                     ?___ftdiv:	
   773  0030                     ?___fttol:	
   774                           ; 3 bytes @ 0x10
   775                           
   776  0030                     ___ftdiv@f2:	
   777                           ; 4 bytes @ 0x10
   778                           
   779  0030                     ___fttol@f1:	
   780                           ; 3 bytes @ 0x10
   781                           
   782                           
   783                           ; 3 bytes @ 0x10
   784  0030                     	ds	3
   785  0033                     ___ftdiv@f1:	
   786                           
   787                           ; 3 bytes @ 0x13
   788  0033                     	ds	1
   789  0034                     ??___fttol:	
   790                           
   791                           ; 1 bytes @ 0x14
   792  0034                     	ds	1
   793  0035                     LCD_DisplayNumber@a:	
   794                           
   795                           ; 10 bytes @ 0x15
   796  0035                     	ds	1
   797  0036                     ??___ftdiv:	
   798                           
   799                           ; 1 bytes @ 0x16
   800  0036                     	ds	2
   801  0038                     ___fttol@sign1:	
   802                           
   803                           ; 1 bytes @ 0x18
   804  0038                     	ds	1
   805  0039                     ___fttol@lval:	
   806                           
   807                           ; 4 bytes @ 0x19
   808  0039                     	ds	1
   809  003A                     ___ftdiv@cntr:	
   810                           
   811                           ; 1 bytes @ 0x1A
   812  003A                     	ds	1
   813  003B                     ___ftdiv@f3:	
   814                           
   815                           ; 3 bytes @ 0x1B
   816  003B                     	ds	2
   817  003D                     ___fttol@exp1:	
   818                           
   819                           ; 1 bytes @ 0x1D
   820  003D                     	ds	1
   821  003E                     ___ftdiv@exp:	
   822                           
   823                           ; 1 bytes @ 0x1E
   824  003E                     	ds	1
   825  003F                     ___ftdiv@sign:	
   826  003F                     _LCD_DisplayNumber$273:	
   827                           ; 1 bytes @ 0x1F
   828                           
   829                           
   830                           ; 2 bytes @ 0x1F
   831  003F                     	ds	2
   832  0041                     LCD_DisplayNumber@v_numericSystem_u8:	
   833                           
   834                           ; 1 bytes @ 0x21
   835  0041                     	ds	1
   836  0042                     LCD_DisplayNumber@i:	
   837                           
   838                           ; 1 bytes @ 0x22
   839  0042                     	ds	1
   840  0043                     ?_LCD_DisplayFloatNumber:	
   841  0043                     LCD_DisplayFloatNumber@v_floatNum_f32:	
   842                           ; 1 bytes @ 0x23
   843                           
   844                           
   845                           ; 3 bytes @ 0x23
   846  0043                     	ds	3
   847  0046                     ??_LCD_DisplayFloatNumber:	
   848                           
   849                           ; 1 bytes @ 0x26
   850  0046                     	ds	1
   851  0047                     LCD_DisplayFloatNumber@v_temp_u32:	
   852                           
   853                           ; 4 bytes @ 0x27
   854  0047                     	ds	4
   855  004B                     ?_LCD_Printf:	
   856                           
   857                           ; 1 bytes @ 0x2B
   858  004B                     	ds	5
   859  0050                     ??_LCD_Printf:	
   860                           
   861                           ; 1 bytes @ 0x30
   862  0050                     	ds	2
   863  0052                     LCD_Printf@v_floatNum_f32:	
   864                           
   865                           ; 3 bytes @ 0x32
   866  0052                     	ds	3
   867  0055                     LCD_Printf@str:	
   868                           
   869                           ; 1 bytes @ 0x35
   870  0055                     	ds	1
   871  0056                     LCD_Printf@argList:	
   872                           
   873                           ; 1 bytes @ 0x36
   874  0056                     	ds	1
   875  0057                     LCD_Printf@v_num_s32:	
   876                           
   877                           ; 4 bytes @ 0x37
   878  0057                     	ds	4
   879  005B                     LCD_Printf@v_num_s16:	
   880                           
   881                           ; 2 bytes @ 0x3B
   882  005B                     	ds	2
   883  005D                     LCD_Printf@v_num_u32:	
   884                           
   885                           ; 4 bytes @ 0x3D
   886  005D                     	ds	4
   887  0061                     LCD_Printf@v_num_u16:	
   888                           
   889                           ; 2 bytes @ 0x41
   890  0061                     	ds	2
   891  0063                     LCD_Printf@ptr:	
   892                           
   893                           ; 1 bytes @ 0x43
   894  0063                     	ds	1
   895  0064                     LCD_Printf@ch:	
   896                           
   897                           ; 1 bytes @ 0x44
   898  0064                     	ds	1
   899  0065                     LCD_Printf@v_numOfDigitsToDisp_u8:	
   900                           
   901                           ; 1 bytes @ 0x45
   902  0065                     	ds	1
   903  0066                     LCD_Printf@argp:	
   904                           
   905                           ; 1 bytes @ 0x46
   906  0066                     	ds	1
   907  0067                     main@volt:	
   908                           
   909                           ; 3 bytes @ 0x47
   910  0067                     	ds	3
   911  006A                     main@adcValue:	
   912                           
   913                           ; 2 bytes @ 0x4A
   914  006A                     	ds	2
   915                           
   916                           	psect	maintext
   917  0F3D                     __pmaintext:	
   918 ;;
   919 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   920 ;;
   921 ;; *************** function _main *****************
   922 ;; Defined at:
   923 ;;		line 41 in file "main.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  volt            3   71[BANK0 ] float 
   928 ;;  adcValue        2   74[BANK0 ] int 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  2  334[None  ] int 
   931 ;; Registers used:
   932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : B00/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   938 ;;      Params:         0       0       0       0       0
   939 ;;      Locals:         0       5       0       0       0
   940 ;;      Temps:          0       0      10       0       0
   941 ;;      Totals:         0       5      10       0       0
   942 ;;Total ram usage:       15 bytes
   943 ;; Hardware stack levels required when called:    9
   944 ;; This function calls:
   945 ;;		_ADC_GetAdcValue
   946 ;;		_ADC_Init
   947 ;;		_LCD_GoToLine
   948 ;;		_LCD_Init
   949 ;;		_LCD_Printf
   950 ;;		_LCD_SetUp
   951 ;;		___awtoft
   952 ;;		___ftdiv
   953 ;;		___ftmul
   954 ;; This function is called by:
   955 ;;		Startup code after reset
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           
   960                           ;psect for function _main
   961  0F3D                     _main:	
   962                           
   963                           ;main.c: 43: int adcValue;
   964                           ;main.c: 44: float volt;
   965                           ;main.c: 46: ADC_Init();
   966                           
   967                           ;incstack = 0
   968 ;; hardware stack exceeded
   969                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   970  0F3D  120A  158A  20CB  120A  158A  	fcall	_ADC_Init
   971                           
   972                           ;main.c: 49: LCD_SetUp(PB_0,PB_1,PB_2,P_NC,P_NC,P_NC,P_NC,PB_4,PB_5,PB_6,PB_7);
   973  0F42  3009               	movlw	9
   974  0F43  1683               	bsf	3,5	;RP0=1, select bank1
   975  0F44  1303               	bcf	3,6	;RP1=0, select bank1
   976  0F45  00AE               	movwf	??_main^(0+128)
   977  0F46  082E               	movf	??_main^(0+128),w
   978  0F47  1283               	bcf	3,5	;RP0=0, select bank0
   979  0F48  1303               	bcf	3,6	;RP1=0, select bank0
   980  0F49  00A0               	movwf	LCD_SetUp@RW
   981  0F4A  300A               	movlw	10
   982  0F4B  1683               	bsf	3,5	;RP0=1, select bank1
   983  0F4C  1303               	bcf	3,6	;RP1=0, select bank1
   984  0F4D  00AF               	movwf	(??_main+1)^(0+128)
   985  0F4E  082F               	movf	(??_main+1)^(0+128),w
   986  0F4F  1283               	bcf	3,5	;RP0=0, select bank0
   987  0F50  1303               	bcf	3,6	;RP1=0, select bank0
   988  0F51  00A1               	movwf	LCD_SetUp@EN
   989  0F52  30FF               	movlw	255
   990  0F53  1683               	bsf	3,5	;RP0=1, select bank1
   991  0F54  1303               	bcf	3,6	;RP1=0, select bank1
   992  0F55  00B0               	movwf	(??_main+2)^(0+128)
   993  0F56  0830               	movf	(??_main+2)^(0+128),w
   994  0F57  1283               	bcf	3,5	;RP0=0, select bank0
   995  0F58  1303               	bcf	3,6	;RP1=0, select bank0
   996  0F59  00A2               	movwf	LCD_SetUp@D0
   997  0F5A  30FF               	movlw	255
   998  0F5B  1683               	bsf	3,5	;RP0=1, select bank1
   999  0F5C  1303               	bcf	3,6	;RP1=0, select bank1
  1000  0F5D  00B1               	movwf	(??_main+3)^(0+128)
  1001  0F5E  0831               	movf	(??_main+3)^(0+128),w
  1002  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  1003  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  1004  0F61  00A3               	movwf	LCD_SetUp@D1
  1005  0F62  30FF               	movlw	255
  1006  0F63  1683               	bsf	3,5	;RP0=1, select bank1
  1007  0F64  1303               	bcf	3,6	;RP1=0, select bank1
  1008  0F65  00B2               	movwf	(??_main+4)^(0+128)
  1009  0F66  0832               	movf	(??_main+4)^(0+128),w
  1010  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  1011  0F68  1303               	bcf	3,6	;RP1=0, select bank0
  1012  0F69  00A4               	movwf	LCD_SetUp@D2
  1013  0F6A  30FF               	movlw	255
  1014  0F6B  1683               	bsf	3,5	;RP0=1, select bank1
  1015  0F6C  1303               	bcf	3,6	;RP1=0, select bank1
  1016  0F6D  00B3               	movwf	(??_main+5)^(0+128)
  1017  0F6E  0833               	movf	(??_main+5)^(0+128),w
  1018  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0F70  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0F71  00A5               	movwf	LCD_SetUp@D3
  1021  0F72  300C               	movlw	12
  1022  0F73  1683               	bsf	3,5	;RP0=1, select bank1
  1023  0F74  1303               	bcf	3,6	;RP1=0, select bank1
  1024  0F75  00B4               	movwf	(??_main+6)^(0+128)
  1025  0F76  0834               	movf	(??_main+6)^(0+128),w
  1026  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0F78  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0F79  00A6               	movwf	LCD_SetUp@D4
  1029  0F7A  300D               	movlw	13
  1030  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  1031  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  1032  0F7D  00B5               	movwf	(??_main+7)^(0+128)
  1033  0F7E  0835               	movf	(??_main+7)^(0+128),w
  1034  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  1035  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  1036  0F81  00A7               	movwf	LCD_SetUp@D5
  1037  0F82  300E               	movlw	14
  1038  0F83  1683               	bsf	3,5	;RP0=1, select bank1
  1039  0F84  1303               	bcf	3,6	;RP1=0, select bank1
  1040  0F85  00B6               	movwf	(??_main+8)^(0+128)
  1041  0F86  0836               	movf	(??_main+8)^(0+128),w
  1042  0F87  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0F88  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0F89  00A8               	movwf	LCD_SetUp@D6
  1045  0F8A  300F               	movlw	15
  1046  0F8B  1683               	bsf	3,5	;RP0=1, select bank1
  1047  0F8C  1303               	bcf	3,6	;RP1=0, select bank1
  1048  0F8D  00B7               	movwf	(??_main+9)^(0+128)
  1049  0F8E  0837               	movf	(??_main+9)^(0+128),w
  1050  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  1051  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  1052  0F91  00A9               	movwf	LCD_SetUp@D7
  1053  0F92  3008               	movlw	8
  1054  0F93  120A  118A  2051  120A  158A  	fcall	_LCD_SetUp
  1055                           
  1056                           ;main.c: 50: LCD_Init(2,16);
  1057  0F98  3010               	movlw	16
  1058  0F99  1683               	bsf	3,5	;RP0=1, select bank1
  1059  0F9A  1303               	bcf	3,6	;RP1=0, select bank1
  1060  0F9B  00AE               	movwf	??_main^(0+128)
  1061  0F9C  082E               	movf	??_main^(0+128),w
  1062  0F9D  00FC               	movwf	LCD_Init@v_MaxCharsPerLine_u8
  1063  0F9E  3002               	movlw	2
  1064  0F9F  120A  158A  233C  120A  158A  	fcall	_LCD_Init
  1065  0FA4                     l335:	
  1066                           ;main.c: 52: while(1)
  1067                           
  1068                           
  1069                           ;main.c: 53: {
  1070                           ;main.c: 54: adcValue = ADC_GetAdcValue(0);
  1071  0FA4  3000               	movlw	0
  1072  0FA5  120A  158A  2199  120A  158A  	fcall	_ADC_GetAdcValue
  1073  0FAA  0873               	movf	?_ADC_GetAdcValue+1,w
  1074  0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0FAD  00EB               	movwf	main@adcValue+1
  1077  0FAE  0872               	movf	?_ADC_GetAdcValue,w
  1078  0FAF  00EA               	movwf	main@adcValue
  1079                           
  1080                           ;main.c: 55: volt = (adcValue*5.00)/1023;
  1081  0FB0  30C0               	movlw	192
  1082  0FB1  00B0               	movwf	___ftdiv@f2
  1083  0FB2  307F               	movlw	127
  1084  0FB3  00B1               	movwf	___ftdiv@f2+1
  1085  0FB4  3044               	movlw	68
  1086  0FB5  00B2               	movwf	___ftdiv@f2+2
  1087  0FB6  3000               	movlw	0
  1088  0FB7  00A0               	movwf	___ftmul@f1
  1089  0FB8  30A0               	movlw	160
  1090  0FB9  00A1               	movwf	___ftmul@f1+1
  1091  0FBA  3040               	movlw	64
  1092  0FBB  00A2               	movwf	___ftmul@f1+2
  1093  0FBC  086B               	movf	main@adcValue+1,w
  1094  0FBD  00F9               	movwf	___awtoft@c+1
  1095  0FBE  086A               	movf	main@adcValue,w
  1096  0FBF  00F8               	movwf	___awtoft@c
  1097  0FC0  120A  158A  2178  120A  158A  	fcall	___awtoft
  1098  0FC5  0878               	movf	?___awtoft,w
  1099  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0FC8  00A3               	movwf	___ftmul@f2
  1102  0FC9  0879               	movf	?___awtoft+1,w
  1103  0FCA  00A4               	movwf	___ftmul@f2+1
  1104  0FCB  087A               	movf	?___awtoft+2,w
  1105  0FCC  00A5               	movwf	___ftmul@f2+2
  1106  0FCD  120A  118A  2122  120A  158A  	fcall	___ftmul
  1107  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0FD4  0820               	movf	?___ftmul,w
  1110  0FD5  00B3               	movwf	___ftdiv@f1
  1111  0FD6  0821               	movf	?___ftmul+1,w
  1112  0FD7  00B4               	movwf	___ftdiv@f1+1
  1113  0FD8  0822               	movf	?___ftmul+2,w
  1114  0FD9  00B5               	movwf	___ftdiv@f1+2
  1115  0FDA  120A  158A  2685  120A  158A  	fcall	___ftdiv
  1116  0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0FE1  0830               	movf	?___ftdiv,w
  1119  0FE2  00E7               	movwf	main@volt
  1120  0FE3  0831               	movf	?___ftdiv+1,w
  1121  0FE4  00E8               	movwf	main@volt+1
  1122  0FE5  0832               	movf	?___ftdiv+2,w
  1123  0FE6  00E9               	movwf	main@volt+2
  1124                           
  1125                           ;main.c: 56: LCD_GoToLine(0);
  1126  0FE7  3000               	movlw	0
  1127  0FE8  120A  158A  210F  120A  158A  	fcall	_LCD_GoToLine
  1128                           
  1129                           ;main.c: 57: LCD_Printf("ADC0 Value:%4d\nVolt:%f",adcValue,volt);
  1130  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0FEF  086B               	movf	main@adcValue+1,w
  1133  0FF0  00CC               	movwf	?_LCD_Printf+1
  1134  0FF1  086A               	movf	main@adcValue,w
  1135  0FF2  00CB               	movwf	?_LCD_Printf
  1136  0FF3  0867               	movf	main@volt,w
  1137  0FF4  00CD               	movwf	?_LCD_Printf+2
  1138  0FF5  0868               	movf	main@volt+1,w
  1139  0FF6  00CE               	movwf	?_LCD_Printf+3
  1140  0FF7  0869               	movf	main@volt+2,w
  1141  0FF8  00CF               	movwf	?_LCD_Printf+4
  1142  0FF9  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1143  0FFA  120A  118A  25A2  120A  158A  	fcall	_LCD_Printf
  1144  0FFF  2FA4               	goto	l335
  1145  1000                     __end_of_main:	
  1146                           ;main.c: 58: }
  1147                           ;main.c: 60: return (0);
  1148                           ;	Return value of _main is never used
  1149                           
  1150                           
  1151                           	psect	text1
  1152  0E85                     __ptext1:	
  1153 ;; *************** function ___ftdiv *****************
  1154 ;; Defined at:
  1155 ;;		line 56 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftdiv.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;  f2              3   16[BANK0 ] float 
  1158 ;;  f1              3   19[BANK0 ] float 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  f3              3   27[BANK0 ] float 
  1161 ;;  sign            1   31[BANK0 ] unsigned char 
  1162 ;;  exp             1   30[BANK0 ] unsigned char 
  1163 ;;  cntr            1   26[BANK0 ] unsigned char 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  3   16[BANK0 ] float 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0, pclath, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         0       6       0       0       0
  1174 ;;      Locals:         0       6       0       0       0
  1175 ;;      Temps:          0       4       0       0       0
  1176 ;;      Totals:         0      16       0       0       0
  1177 ;;Total ram usage:       16 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    1
  1180 ;; This function calls:
  1181 ;;		___ftpack
  1182 ;; This function is called by:
  1183 ;;		_main
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           
  1188                           ;psect for function ___ftdiv
  1189  0E85                     ___ftdiv:	
  1190                           
  1191                           ;incstack = 0
  1192                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1193  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0E87  0833               	movf	___ftdiv@f1,w
  1196  0E88  00B6               	movwf	??___ftdiv
  1197  0E89  0834               	movf	___ftdiv@f1+1,w
  1198  0E8A  00B7               	movwf	??___ftdiv+1
  1199  0E8B  0835               	movf	___ftdiv@f1+2,w
  1200  0E8C  00B8               	movwf	??___ftdiv+2
  1201  0E8D  1003               	clrc
  1202  0E8E  0D37               	rlf	??___ftdiv+1,w
  1203  0E8F  0D38               	rlf	??___ftdiv+2,w
  1204  0E90  00B9               	movwf	??___ftdiv+3
  1205  0E91  0839               	movf	??___ftdiv+3,w
  1206  0E92  00BE               	movwf	___ftdiv@exp
  1207  0E93  083E               	movf	___ftdiv@exp,w
  1208  0E94  1D03               	btfss	3,2
  1209  0E95  2E9D               	goto	l2390
  1210  0E96  3000               	movlw	0
  1211  0E97  00B0               	movwf	?___ftdiv
  1212  0E98  3000               	movlw	0
  1213  0E99  00B1               	movwf	?___ftdiv+1
  1214  0E9A  3000               	movlw	0
  1215  0E9B  00B2               	movwf	?___ftdiv+2
  1216  0E9C  0008               	return
  1217  0E9D                     l2390:	
  1218  0E9D  0830               	movf	___ftdiv@f2,w
  1219  0E9E  00B6               	movwf	??___ftdiv
  1220  0E9F  0831               	movf	___ftdiv@f2+1,w
  1221  0EA0  00B7               	movwf	??___ftdiv+1
  1222  0EA1  0832               	movf	___ftdiv@f2+2,w
  1223  0EA2  00B8               	movwf	??___ftdiv+2
  1224  0EA3  1003               	clrc
  1225  0EA4  0D37               	rlf	??___ftdiv+1,w
  1226  0EA5  0D38               	rlf	??___ftdiv+2,w
  1227  0EA6  00B9               	movwf	??___ftdiv+3
  1228  0EA7  0839               	movf	??___ftdiv+3,w
  1229  0EA8  00BF               	movwf	___ftdiv@sign
  1230  0EA9  083F               	movf	___ftdiv@sign,w
  1231  0EAA  1D03               	btfss	3,2
  1232  0EAB  2EB3               	goto	l2396
  1233  0EAC  3000               	movlw	0
  1234  0EAD  00B0               	movwf	?___ftdiv
  1235  0EAE  3000               	movlw	0
  1236  0EAF  00B1               	movwf	?___ftdiv+1
  1237  0EB0  3000               	movlw	0
  1238  0EB1  00B2               	movwf	?___ftdiv+2
  1239  0EB2  0008               	return
  1240  0EB3                     l2396:	
  1241  0EB3  3000               	movlw	0
  1242  0EB4  00BB               	movwf	___ftdiv@f3
  1243  0EB5  3000               	movlw	0
  1244  0EB6  00BC               	movwf	___ftdiv@f3+1
  1245  0EB7  3000               	movlw	0
  1246  0EB8  00BD               	movwf	___ftdiv@f3+2
  1247  0EB9  3089               	movlw	137
  1248  0EBA  073F               	addwf	___ftdiv@sign,w
  1249  0EBB  00B6               	movwf	??___ftdiv
  1250  0EBC  0836               	movf	??___ftdiv,w
  1251  0EBD  02BE               	subwf	___ftdiv@exp,f
  1252  0EBE  0833               	movf	___ftdiv@f1,w
  1253  0EBF  00B6               	movwf	??___ftdiv
  1254  0EC0  0834               	movf	___ftdiv@f1+1,w
  1255  0EC1  00B7               	movwf	??___ftdiv+1
  1256  0EC2  0835               	movf	___ftdiv@f1+2,w
  1257  0EC3  00B8               	movwf	??___ftdiv+2
  1258  0EC4  3010               	movlw	16
  1259  0EC5                     u3825:	
  1260  0EC5  1003               	clrc
  1261  0EC6  0CB8               	rrf	??___ftdiv+2,f
  1262  0EC7  0CB7               	rrf	??___ftdiv+1,f
  1263  0EC8  0CB6               	rrf	??___ftdiv,f
  1264  0EC9  3EFF               	addlw	-1
  1265  0ECA  1D03               	skipz
  1266  0ECB  2EC5               	goto	u3825
  1267  0ECC  0836               	movf	??___ftdiv,w
  1268  0ECD  00B9               	movwf	??___ftdiv+3
  1269  0ECE  0839               	movf	??___ftdiv+3,w
  1270  0ECF  00BF               	movwf	___ftdiv@sign
  1271  0ED0  0830               	movf	___ftdiv@f2,w
  1272  0ED1  00B6               	movwf	??___ftdiv
  1273  0ED2  0831               	movf	___ftdiv@f2+1,w
  1274  0ED3  00B7               	movwf	??___ftdiv+1
  1275  0ED4  0832               	movf	___ftdiv@f2+2,w
  1276  0ED5  00B8               	movwf	??___ftdiv+2
  1277  0ED6  3010               	movlw	16
  1278  0ED7                     u3835:	
  1279  0ED7  1003               	clrc
  1280  0ED8  0CB8               	rrf	??___ftdiv+2,f
  1281  0ED9  0CB7               	rrf	??___ftdiv+1,f
  1282  0EDA  0CB6               	rrf	??___ftdiv,f
  1283  0EDB  3EFF               	addlw	-1
  1284  0EDC  1D03               	skipz
  1285  0EDD  2ED7               	goto	u3835
  1286  0EDE  0836               	movf	??___ftdiv,w
  1287  0EDF  00B9               	movwf	??___ftdiv+3
  1288  0EE0  0839               	movf	??___ftdiv+3,w
  1289  0EE1  06BF               	xorwf	___ftdiv@sign,f
  1290  0EE2  3080               	movlw	128
  1291  0EE3  00B6               	movwf	??___ftdiv
  1292  0EE4  0836               	movf	??___ftdiv,w
  1293  0EE5  05BF               	andwf	___ftdiv@sign,f
  1294  0EE6  17B4               	bsf	___ftdiv@f1+1,7
  1295  0EE7  30FF               	movlw	255
  1296  0EE8  05B3               	andwf	___ftdiv@f1,f
  1297  0EE9  30FF               	movlw	255
  1298  0EEA  05B4               	andwf	___ftdiv@f1+1,f
  1299  0EEB  3000               	movlw	0
  1300  0EEC  05B5               	andwf	___ftdiv@f1+2,f
  1301  0EED  17B1               	bsf	___ftdiv@f2+1,7
  1302  0EEE  30FF               	movlw	255
  1303  0EEF  05B0               	andwf	___ftdiv@f2,f
  1304  0EF0  30FF               	movlw	255
  1305  0EF1  05B1               	andwf	___ftdiv@f2+1,f
  1306  0EF2  3000               	movlw	0
  1307  0EF3  05B2               	andwf	___ftdiv@f2+2,f
  1308  0EF4  3018               	movlw	24
  1309  0EF5  00B6               	movwf	??___ftdiv
  1310  0EF6  0836               	movf	??___ftdiv,w
  1311  0EF7  00BA               	movwf	___ftdiv@cntr
  1312  0EF8                     l2410:	
  1313  0EF8  3001               	movlw	1
  1314  0EF9                     u3845:	
  1315  0EF9  1003               	clrc
  1316  0EFA  0DBB               	rlf	___ftdiv@f3,f
  1317  0EFB  0DBC               	rlf	___ftdiv@f3+1,f
  1318  0EFC  0DBD               	rlf	___ftdiv@f3+2,f
  1319  0EFD  3EFF               	addlw	-1
  1320  0EFE  1D03               	skipz
  1321  0EFF  2EF9               	goto	u3845
  1322  0F00  0832               	movf	___ftdiv@f2+2,w
  1323  0F01  0235               	subwf	___ftdiv@f1+2,w
  1324  0F02  1D03               	skipz
  1325  0F03  2F0A               	goto	u3855
  1326  0F04  0831               	movf	___ftdiv@f2+1,w
  1327  0F05  0234               	subwf	___ftdiv@f1+1,w
  1328  0F06  1D03               	skipz
  1329  0F07  2F0A               	goto	u3855
  1330  0F08  0830               	movf	___ftdiv@f2,w
  1331  0F09  0233               	subwf	___ftdiv@f1,w
  1332  0F0A                     u3855:	
  1333  0F0A  1C03               	skipc
  1334  0F0B  2F17               	goto	l2418
  1335  0F0C  0830               	movf	___ftdiv@f2,w
  1336  0F0D  02B3               	subwf	___ftdiv@f1,f
  1337  0F0E  0831               	movf	___ftdiv@f2+1,w
  1338  0F0F  1C03               	skipc
  1339  0F10  0F31               	incfsz	___ftdiv@f2+1,w
  1340  0F11  02B4               	subwf	___ftdiv@f1+1,f
  1341  0F12  0832               	movf	___ftdiv@f2+2,w
  1342  0F13  1C03               	skipc
  1343  0F14  0A32               	incf	___ftdiv@f2+2,w
  1344  0F15  02B5               	subwf	___ftdiv@f1+2,f
  1345  0F16  143B               	bsf	___ftdiv@f3,0
  1346  0F17                     l2418:	
  1347  0F17  3001               	movlw	1
  1348  0F18                     u3865:	
  1349  0F18  1003               	clrc
  1350  0F19  0DB3               	rlf	___ftdiv@f1,f
  1351  0F1A  0DB4               	rlf	___ftdiv@f1+1,f
  1352  0F1B  0DB5               	rlf	___ftdiv@f1+2,f
  1353  0F1C  3EFF               	addlw	-1
  1354  0F1D  1D03               	skipz
  1355  0F1E  2F18               	goto	u3865
  1356  0F1F  3001               	movlw	1
  1357  0F20  02BA               	subwf	___ftdiv@cntr,f
  1358  0F21  1D03               	btfss	3,2
  1359  0F22  2EF8               	goto	l2410
  1360  0F23  083B               	movf	___ftdiv@f3,w
  1361  0F24  00F0               	movwf	___ftpack@arg
  1362  0F25  083C               	movf	___ftdiv@f3+1,w
  1363  0F26  00F1               	movwf	___ftpack@arg+1
  1364  0F27  083D               	movf	___ftdiv@f3+2,w
  1365  0F28  00F2               	movwf	___ftpack@arg+2
  1366  0F29  083E               	movf	___ftdiv@exp,w
  1367  0F2A  00B6               	movwf	??___ftdiv
  1368  0F2B  0836               	movf	??___ftdiv,w
  1369  0F2C  00F3               	movwf	___ftpack@exp
  1370  0F2D  083F               	movf	___ftdiv@sign,w
  1371  0F2E  00B7               	movwf	??___ftdiv+1
  1372  0F2F  0837               	movf	??___ftdiv+1,w
  1373  0F30  00F4               	movwf	___ftpack@sign
  1374  0F31  120A  158A  23EB   	fcall	___ftpack
  1375  0F34  0870               	movf	?___ftpack,w
  1376  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0F36  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0F37  00B0               	movwf	?___ftdiv
  1379  0F38  0871               	movf	?___ftpack+1,w
  1380  0F39  00B1               	movwf	?___ftdiv+1
  1381  0F3A  0872               	movf	?___ftpack+2,w
  1382  0F3B  00B2               	movwf	?___ftdiv+2
  1383  0F3C  0008               	return
  1384  0F3D                     __end_of___ftdiv:	
  1385                           
  1386                           	psect	text2
  1387  0978                     __ptext2:	
  1388 ;; *************** function ___awtoft *****************
  1389 ;; Defined at:
  1390 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\awtoft.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;  c               2    8[COMMON] int 
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  sign            1   13[COMMON] unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  3    8[COMMON] float 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0, pclath, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1404 ;;      Params:         3       0       0       0       0
  1405 ;;      Locals:         1       0       0       0       0
  1406 ;;      Temps:          2       0       0       0       0
  1407 ;;      Totals:         6       0       0       0       0
  1408 ;;Total ram usage:        6 bytes
  1409 ;; Hardware stack levels used:    1
  1410 ;; Hardware stack levels required when called:    1
  1411 ;; This function calls:
  1412 ;;		___ftpack
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           
  1419                           ;psect for function ___awtoft
  1420  0978                     ___awtoft:	
  1421                           
  1422                           ;incstack = 0
  1423                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1424  0978  01FD               	clrf	___awtoft@sign
  1425  0979  1FF9               	btfss	___awtoft@c+1,7
  1426  097A  2982               	goto	l2380
  1427  097B  09F8               	comf	___awtoft@c,f
  1428  097C  09F9               	comf	___awtoft@c+1,f
  1429  097D  0AF8               	incf	___awtoft@c,f
  1430  097E  1903               	skipnz
  1431  097F  0AF9               	incf	___awtoft@c+1,f
  1432  0980  01FD               	clrf	___awtoft@sign
  1433  0981  0AFD               	incf	___awtoft@sign,f
  1434  0982                     l2380:	
  1435  0982  0878               	movf	___awtoft@c,w
  1436  0983  00F0               	movwf	___ftpack@arg
  1437  0984  0879               	movf	___awtoft@c+1,w
  1438  0985  00F1               	movwf	___ftpack@arg+1
  1439  0986  01F2               	clrf	___ftpack@arg+2
  1440  0987  308E               	movlw	142
  1441  0988  00FB               	movwf	??___awtoft
  1442  0989  087B               	movf	??___awtoft,w
  1443  098A  00F3               	movwf	___ftpack@exp
  1444  098B  087D               	movf	___awtoft@sign,w
  1445  098C  00FC               	movwf	??___awtoft+1
  1446  098D  087C               	movf	??___awtoft+1,w
  1447  098E  00F4               	movwf	___ftpack@sign
  1448  098F  120A  158A  23EB   	fcall	___ftpack
  1449  0992  0870               	movf	?___ftpack,w
  1450  0993  00F8               	movwf	?___awtoft
  1451  0994  0871               	movf	?___ftpack+1,w
  1452  0995  00F9               	movwf	?___awtoft+1
  1453  0996  0872               	movf	?___ftpack+2,w
  1454  0997  00FA               	movwf	?___awtoft+2
  1455  0998  0008               	return
  1456  0999                     __end_of___awtoft:	
  1457                           
  1458                           	psect	text3
  1459  0051                     __ptext3:	
  1460 ;; *************** function _LCD_SetUp *****************
  1461 ;; Defined at:
  1462 ;;		line 129 in file "../00-libfiles/lcd.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  RS              1    wreg     enum E33
  1465 ;;  RW              1    0[BANK0 ] enum E33
  1466 ;;  EN              1    1[BANK0 ] enum E33
  1467 ;;  D0              1    2[BANK0 ] enum E33
  1468 ;;  D1              1    3[BANK0 ] enum E33
  1469 ;;  D2              1    4[BANK0 ] enum E33
  1470 ;;  D3              1    5[BANK0 ] enum E33
  1471 ;;  D4              1    6[BANK0 ] enum E33
  1472 ;;  D5              1    7[BANK0 ] enum E33
  1473 ;;  D6              1    8[BANK0 ] enum E33
  1474 ;;  D7              1    9[BANK0 ] enum E33
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  RS              1    6[COMMON] enum E33
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0      10       0       0       0
  1487 ;;      Locals:         1       0       0       0       0
  1488 ;;      Temps:          1       0       0       0       0
  1489 ;;      Totals:         2      10       0       0       0
  1490 ;;Total ram usage:       12 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:    1
  1493 ;; This function calls:
  1494 ;;		_GPIO_PinDirection
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           
  1501                           ;psect for function _LCD_SetUp
  1502  0051                     _LCD_SetUp:	
  1503                           
  1504                           ;incstack = 0
  1505                           ; Regs used in _LCD_SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1506                           ;LCD_SetUp@RS stored from wreg
  1507  0051  00F6               	movwf	LCD_SetUp@RS
  1508                           
  1509                           ;lcd.c: 142: LCDConfig.RS = RS;
  1510  0052  0876               	movf	LCD_SetUp@RS,w
  1511  0053  00F5               	movwf	??_LCD_SetUp
  1512  0054  0875               	movf	??_LCD_SetUp,w
  1513  0055  1683               	bsf	3,5	;RP0=1, select bank1
  1514  0056  1303               	bcf	3,6	;RP1=0, select bank1
  1515  0057  00A3               	movwf	(_LCDConfig^(0+128)+3)
  1516                           
  1517                           ;lcd.c: 143: LCDConfig.RW = RW;
  1518  0058  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0059  1303               	bcf	3,6	;RP1=0, select bank0
  1520  005A  0820               	movf	LCD_SetUp@RW,w
  1521  005B  00F5               	movwf	??_LCD_SetUp
  1522  005C  0875               	movf	??_LCD_SetUp,w
  1523  005D  1683               	bsf	3,5	;RP0=1, select bank1
  1524  005E  1303               	bcf	3,6	;RP1=0, select bank1
  1525  005F  00A4               	movwf	(_LCDConfig^(0+128)+4)
  1526                           
  1527                           ;lcd.c: 144: LCDConfig.EN = EN;
  1528  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0062  0821               	movf	LCD_SetUp@EN,w
  1531  0063  00F5               	movwf	??_LCD_SetUp
  1532  0064  0875               	movf	??_LCD_SetUp,w
  1533  0065  1683               	bsf	3,5	;RP0=1, select bank1
  1534  0066  1303               	bcf	3,6	;RP1=0, select bank1
  1535  0067  00A5               	movwf	(_LCDConfig^(0+128)+5)
  1536                           
  1537                           ;lcd.c: 146: LCDConfig.D0 = D0;
  1538  0068  1283               	bcf	3,5	;RP0=0, select bank0
  1539  0069  1303               	bcf	3,6	;RP1=0, select bank0
  1540  006A  0822               	movf	LCD_SetUp@D0,w
  1541  006B  00F5               	movwf	??_LCD_SetUp
  1542  006C  0875               	movf	??_LCD_SetUp,w
  1543  006D  1683               	bsf	3,5	;RP0=1, select bank1
  1544  006E  1303               	bcf	3,6	;RP1=0, select bank1
  1545  006F  00A6               	movwf	(_LCDConfig^(0+128)+6)
  1546                           
  1547                           ;lcd.c: 147: LCDConfig.D1 = D1;
  1548  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0072  0823               	movf	LCD_SetUp@D1,w
  1551  0073  00F5               	movwf	??_LCD_SetUp
  1552  0074  0875               	movf	??_LCD_SetUp,w
  1553  0075  1683               	bsf	3,5	;RP0=1, select bank1
  1554  0076  1303               	bcf	3,6	;RP1=0, select bank1
  1555  0077  00A7               	movwf	(_LCDConfig^(0+128)+7)
  1556                           
  1557                           ;lcd.c: 148: LCDConfig.D2 = D2;
  1558  0078  1283               	bcf	3,5	;RP0=0, select bank0
  1559  0079  1303               	bcf	3,6	;RP1=0, select bank0
  1560  007A  0824               	movf	LCD_SetUp@D2,w
  1561  007B  00F5               	movwf	??_LCD_SetUp
  1562  007C  0875               	movf	??_LCD_SetUp,w
  1563  007D  1683               	bsf	3,5	;RP0=1, select bank1
  1564  007E  1303               	bcf	3,6	;RP1=0, select bank1
  1565  007F  00A8               	movwf	(_LCDConfig^(0+128)+8)
  1566                           
  1567                           ;lcd.c: 149: LCDConfig.D3 = D3;
  1568  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1569  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1570  0082  0825               	movf	LCD_SetUp@D3,w
  1571  0083  00F5               	movwf	??_LCD_SetUp
  1572  0084  0875               	movf	??_LCD_SetUp,w
  1573  0085  1683               	bsf	3,5	;RP0=1, select bank1
  1574  0086  1303               	bcf	3,6	;RP1=0, select bank1
  1575  0087  00A9               	movwf	(_LCDConfig^(0+128)+9)
  1576                           
  1577                           ;lcd.c: 150: LCDConfig.D4 = D4;
  1578  0088  1283               	bcf	3,5	;RP0=0, select bank0
  1579  0089  1303               	bcf	3,6	;RP1=0, select bank0
  1580  008A  0826               	movf	LCD_SetUp@D4,w
  1581  008B  00F5               	movwf	??_LCD_SetUp
  1582  008C  0875               	movf	??_LCD_SetUp,w
  1583  008D  1683               	bsf	3,5	;RP0=1, select bank1
  1584  008E  1303               	bcf	3,6	;RP1=0, select bank1
  1585  008F  00AA               	movwf	(_LCDConfig^(0+128)+10)
  1586                           
  1587                           ;lcd.c: 151: LCDConfig.D5 = D5;
  1588  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1589  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1590  0092  0827               	movf	LCD_SetUp@D5,w
  1591  0093  00F5               	movwf	??_LCD_SetUp
  1592  0094  0875               	movf	??_LCD_SetUp,w
  1593  0095  1683               	bsf	3,5	;RP0=1, select bank1
  1594  0096  1303               	bcf	3,6	;RP1=0, select bank1
  1595  0097  00AB               	movwf	(_LCDConfig^(0+128)+11)
  1596                           
  1597                           ;lcd.c: 152: LCDConfig.D6 = D6;
  1598  0098  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0099  1303               	bcf	3,6	;RP1=0, select bank0
  1600  009A  0828               	movf	LCD_SetUp@D6,w
  1601  009B  00F5               	movwf	??_LCD_SetUp
  1602  009C  0875               	movf	??_LCD_SetUp,w
  1603  009D  1683               	bsf	3,5	;RP0=1, select bank1
  1604  009E  1303               	bcf	3,6	;RP1=0, select bank1
  1605  009F  00AC               	movwf	(_LCDConfig^(0+128)+12)
  1606                           
  1607                           ;lcd.c: 153: LCDConfig.D7 = D7;
  1608  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1609  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1610  00A2  0829               	movf	LCD_SetUp@D7,w
  1611  00A3  00F5               	movwf	??_LCD_SetUp
  1612  00A4  0875               	movf	??_LCD_SetUp,w
  1613  00A5  1683               	bsf	3,5	;RP0=1, select bank1
  1614  00A6  1303               	bcf	3,6	;RP1=0, select bank1
  1615  00A7  00AD               	movwf	(_LCDConfig^(0+128)+13)
  1616                           
  1617                           ;lcd.c: 156: if((D0 == P_NC) || (D1 == P_NC) || (D2 == P_NC) || (D3 == P_NC))
  1618  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1619  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1620  00AA  0A22               	incf	LCD_SetUp@D0,w
  1621  00AB  1903               	btfsc	3,2
  1622  00AC  28B5               	goto	l2208
  1623  00AD  0A23               	incf	LCD_SetUp@D1,w
  1624  00AE  1903               	btfsc	3,2
  1625  00AF  28B5               	goto	l2208
  1626  00B0  0A24               	incf	LCD_SetUp@D2,w
  1627  00B1  1D03               	btfss	3,2
  1628  00B2  0A25               	incf	LCD_SetUp@D3,w
  1629  00B3  1D03               	btfss	3,2
  1630  00B4  28BC               	goto	l2210
  1631  00B5                     l2208:	
  1632                           
  1633                           ;lcd.c: 157: {
  1634                           ;lcd.c: 158: LCDConfig.v_LcdMode_U8 = 4;
  1635  00B5  3004               	movlw	4
  1636  00B6  00F5               	movwf	??_LCD_SetUp
  1637  00B7  0875               	movf	??_LCD_SetUp,w
  1638  00B8  1683               	bsf	3,5	;RP0=1, select bank1
  1639  00B9  1303               	bcf	3,6	;RP1=0, select bank1
  1640  00BA  00A2               	movwf	(_LCDConfig^(0+128)+2)
  1641                           
  1642                           ;lcd.c: 159: }
  1643  00BB  28E6               	goto	l2220
  1644  00BC                     l2210:	
  1645                           
  1646                           ;lcd.c: 160: else
  1647                           ;lcd.c: 161: {
  1648                           ;lcd.c: 162: LCDConfig.v_LcdMode_U8 = 8;
  1649  00BC  3008               	movlw	8
  1650  00BD  00F5               	movwf	??_LCD_SetUp
  1651  00BE  0875               	movf	??_LCD_SetUp,w
  1652  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  1653  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  1654  00C1  00A2               	movwf	(_LCDConfig^(0+128)+2)
  1655                           
  1656                           ;lcd.c: 163: GPIO_PinDirection(D0,0x00u);
  1657  00C2  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1658  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1659  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1660  00C5  0822               	movf	LCD_SetUp@D0,w
  1661  00C6  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1662                           
  1663                           ;lcd.c: 164: GPIO_PinDirection(D1,0x00u);
  1664  00CB  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1665  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1666  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1667  00CE  0823               	movf	LCD_SetUp@D1,w
  1668  00CF  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1669                           
  1670                           ;lcd.c: 165: GPIO_PinDirection(D2,0x00u);
  1671  00D4  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1672  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1673  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1674  00D7  0824               	movf	LCD_SetUp@D2,w
  1675  00D8  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1676                           
  1677                           ;lcd.c: 166: GPIO_PinDirection(D3,0x00u);
  1678  00DD  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1679  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1680  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1681  00E0  0825               	movf	LCD_SetUp@D3,w
  1682  00E1  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1683  00E6                     l2220:	
  1684                           
  1685                           ;lcd.c: 167: }
  1686                           ;lcd.c: 170: GPIO_PinDirection(RS,0x00u);
  1687  00E6  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1688  00E7  0876               	movf	LCD_SetUp@RS,w
  1689  00E8  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1690                           
  1691                           ;lcd.c: 171: GPIO_PinDirection(RW,0x00u);
  1692  00ED  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1693  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1694  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1695  00F0  0820               	movf	LCD_SetUp@RW,w
  1696  00F1  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1697                           
  1698                           ;lcd.c: 172: GPIO_PinDirection(EN,0x00u);
  1699  00F6  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1700  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1701  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1702  00F9  0821               	movf	LCD_SetUp@EN,w
  1703  00FA  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1704                           
  1705                           ;lcd.c: 174: GPIO_PinDirection(D4,0x00u);
  1706  00FF  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1707  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1708  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1709  0102  0826               	movf	LCD_SetUp@D4,w
  1710  0103  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1711                           
  1712                           ;lcd.c: 175: GPIO_PinDirection(D5,0x00u);
  1713  0108  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1714  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1715  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1716  010B  0827               	movf	LCD_SetUp@D5,w
  1717  010C  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1718                           
  1719                           ;lcd.c: 176: GPIO_PinDirection(D6,0x00u);
  1720  0111  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1721  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1722  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1723  0114  0828               	movf	LCD_SetUp@D6,w
  1724  0115  120A  118A  21F5  120A  118A  	fcall	_GPIO_PinDirection
  1725                           
  1726                           ;lcd.c: 177: GPIO_PinDirection(D7,0x00u);
  1727  011A  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1728  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1729  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1730  011D  0829               	movf	LCD_SetUp@D7,w
  1731  011E  120A  118A  21F5   	fcall	_GPIO_PinDirection
  1732  0121  0008               	return
  1733  0122                     __end_of_LCD_SetUp:	
  1734                           
  1735                           	psect	text4
  1736  05A2                     __ptext4:	
  1737 ;; *************** function _LCD_Printf *****************
  1738 ;; Defined at:
  1739 ;;		line 669 in file "../00-libfiles/lcd.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  argList         1    wreg     PTR const unsigned char 
  1742 ;;		 -> STR_1(23), 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  argList         1   54[BANK0 ] PTR const unsigned char 
  1745 ;;		 -> STR_1(23), 
  1746 ;;  v_num_u32       4   61[BANK0 ] unsigned long 
  1747 ;;  v_num_s32       4   55[BANK0 ] long 
  1748 ;;  v_floatNum_f    3   50[BANK0 ] long 
  1749 ;;  v_num_u16       2   65[BANK0 ] unsigned int 
  1750 ;;  v_num_s16       2   59[BANK0 ] int 
  1751 ;;  argp            1   70[BANK0 ] PTR void [1]
  1752 ;;		 -> ?_LCD_Printf(1), 
  1753 ;;  v_numOfDigit    1   69[BANK0 ] unsigned char 
  1754 ;;  ch              1   68[BANK0 ] unsigned char 
  1755 ;;  ptr             1   67[BANK0 ] PTR const unsigned char 
  1756 ;;		 -> STR_1(23), 
  1757 ;;  str             1   53[BANK0 ] PTR unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1767 ;;      Params:         0       5       0       0       0
  1768 ;;      Locals:         0      21       0       0       0
  1769 ;;      Temps:          0       2       0       0       0
  1770 ;;      Totals:         0      28       0       0       0
  1771 ;;Total ram usage:       28 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    8
  1774 ;; This function calls:
  1775 ;;		_LCD_DisplayChar
  1776 ;;		_LCD_DisplayFloatNumber
  1777 ;;		_LCD_DisplayNumber
  1778 ;;		_LCD_DisplayString
  1779 ;;		___bmul
  1780 ;; This function is called by:
  1781 ;;		_main
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           
  1786                           ;psect for function _LCD_Printf
  1787  05A2                     _LCD_Printf:	
  1788                           
  1789                           ;incstack = 0
  1790 ;; hardware stack exceeded
  1791                           ; Regs used in _LCD_Printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1792                           ;LCD_Printf@argList stored from wreg
  1793  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  1794  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  1795  05A4  00D6               	movwf	LCD_Printf@argList
  1796                           
  1797                           ;lcd.c: 671: const char *ptr;
  1798                           ;lcd.c: 672: va_list argp;
  1799                           ;lcd.c: 673: sint16_t v_num_s16;
  1800                           ;lcd.c: 674: sint32_t v_num_s32;
  1801                           ;lcd.c: 675: uint16_t v_num_u16;
  1802                           ;lcd.c: 676: uint32_t v_num_u32;
  1803                           ;lcd.c: 677: char *str;
  1804                           ;lcd.c: 678: char ch;
  1805                           ;lcd.c: 679: uint8_t v_numOfDigitsToDisp_u8;
  1806                           ;lcd.c: 681: double v_floatNum_f32;
  1807                           ;lcd.c: 684: *argp = __va_start();
  1808  05A5  304B               	movlw	(low (?_LCD_Printf| 0))& (0+255)
  1809  05A6  00D0               	movwf	??_LCD_Printf
  1810  05A7  0850               	movf	??_LCD_Printf,w
  1811  05A8  00E6               	movwf	LCD_Printf@argp
  1812                           
  1813                           ;lcd.c: 687: for(ptr = argList; *ptr != '\0'; ptr++)
  1814  05A9  0856               	movf	LCD_Printf@argList,w
  1815  05AA  00D0               	movwf	??_LCD_Printf
  1816  05AB  0850               	movf	??_LCD_Printf,w
  1817  05AC  00E3               	movwf	LCD_Printf@ptr
  1818  05AD                     l2370:	
  1819  05AD  0863               	movf	LCD_Printf@ptr,w
  1820  05AE  0084               	movwf	4
  1821  05AF  120A  158A  2000  120A  118A  	fcall	stringdir
  1822  05B4  3A00               	xorlw	0
  1823  05B5  1903               	btfsc	3,2
  1824  05B6  0008               	return
  1825                           
  1826                           ;lcd.c: 688: {
  1827                           ;lcd.c: 690: ch= *ptr;
  1828  05B7  0863               	movf	LCD_Printf@ptr,w
  1829  05B8  0084               	movwf	4
  1830  05B9  120A  158A  2000  120A  118A  	fcall	stringdir
  1831  05BE  00D0               	movwf	??_LCD_Printf
  1832  05BF  0850               	movf	??_LCD_Printf,w
  1833  05C0  00E4               	movwf	LCD_Printf@ch
  1834                           
  1835                           ;lcd.c: 691: if(ch == '%')
  1836  05C1  3025               	movlw	37
  1837  05C2  0664               	xorwf	LCD_Printf@ch,w
  1838  05C3  1D03               	btfss	3,2
  1839  05C4  2FC7               	goto	l2366
  1840                           
  1841                           ;lcd.c: 692: {
  1842                           ;lcd.c: 693: ptr++;
  1843  05C5  3001               	movlw	1
  1844  05C6  00D0               	movwf	??_LCD_Printf
  1845  05C7  0850               	movf	??_LCD_Printf,w
  1846  05C8  07E3               	addwf	LCD_Printf@ptr,f
  1847                           
  1848                           ;lcd.c: 694: ch = *ptr;
  1849  05C9  0863               	movf	LCD_Printf@ptr,w
  1850  05CA  0084               	movwf	4
  1851  05CB  120A  158A  2000  120A  118A  	fcall	stringdir
  1852  05D0  00D0               	movwf	??_LCD_Printf
  1853  05D1  0850               	movf	??_LCD_Printf,w
  1854  05D2  00E4               	movwf	LCD_Printf@ch
  1855                           
  1856                           ;lcd.c: 695: if((ch>=0x30) && (ch<=0x39))
  1857  05D3  3030               	movlw	48
  1858  05D4  0264               	subwf	LCD_Printf@ch,w
  1859  05D5  1C03               	skipc
  1860  05D6  2E04               	goto	l2274
  1861  05D7  303A               	movlw	58
  1862  05D8  0264               	subwf	LCD_Printf@ch,w
  1863  05D9  1803               	skipnc
  1864  05DA  2E04               	goto	l2274
  1865                           
  1866                           ;lcd.c: 696: {
  1867                           ;lcd.c: 697: v_numOfDigitsToDisp_u8 = 0;
  1868  05DB  01E5               	clrf	LCD_Printf@v_numOfDigitsToDisp_u8
  1869  05DC                     l2270:	
  1870                           ;lcd.c: 698: while((ch>=0x30) && (ch<=0x39))
  1871                           
  1872  05DC  3030               	movlw	48
  1873  05DD  0264               	subwf	LCD_Printf@ch,w
  1874  05DE  1C03               	skipc
  1875  05DF  2F95               	goto	l2364
  1876  05E0  303A               	movlw	58
  1877  05E1  0264               	subwf	LCD_Printf@ch,w
  1878  05E2  1803               	btfsc	3,0
  1879  05E3  2F95               	goto	l2364
  1880                           
  1881                           ;lcd.c: 699: {
  1882                           ;lcd.c: 700: v_numOfDigitsToDisp_u8 = (v_numOfDigitsToDisp_u8 * 10) + (ch-0x30);
  1883  05E4  300A               	movlw	10
  1884  05E5  00D0               	movwf	??_LCD_Printf
  1885  05E6  0850               	movf	??_LCD_Printf,w
  1886  05E7  00A0               	movwf	___bmul@multiplicand
  1887  05E8  0865               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1888  05E9  120A  158A  20E8  120A  118A  	fcall	___bmul
  1889  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  1890  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  1891  05F0  0764               	addwf	LCD_Printf@ch,w
  1892  05F1  3ED0               	addlw	208
  1893  05F2  00D1               	movwf	??_LCD_Printf+1
  1894  05F3  0851               	movf	??_LCD_Printf+1,w
  1895  05F4  00E5               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  1896                           
  1897                           ;lcd.c: 701: ptr++;
  1898  05F5  3001               	movlw	1
  1899  05F6  00D0               	movwf	??_LCD_Printf
  1900  05F7  0850               	movf	??_LCD_Printf,w
  1901  05F8  07E3               	addwf	LCD_Printf@ptr,f
  1902                           
  1903                           ;lcd.c: 702: ch = *ptr;
  1904  05F9  0863               	movf	LCD_Printf@ptr,w
  1905  05FA  0084               	movwf	4
  1906  05FB  120A  158A  2000  120A  118A  	fcall	stringdir
  1907  0600  00D0               	movwf	??_LCD_Printf
  1908  0601  0850               	movf	??_LCD_Printf,w
  1909  0602  00E4               	movwf	LCD_Printf@ch
  1910  0603  2DDC               	goto	l2270
  1911  0604                     l2274:	
  1912                           ;lcd.c: 703: }
  1913                           ;lcd.c: 704: }
  1914                           
  1915                           
  1916                           ;lcd.c: 705: else
  1917                           ;lcd.c: 706: {
  1918                           ;lcd.c: 707: v_numOfDigitsToDisp_u8 = 0xffu;
  1919  0604  30FF               	movlw	255
  1920  0605  00D0               	movwf	??_LCD_Printf
  1921  0606  0850               	movf	??_LCD_Printf,w
  1922  0607  00E5               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  1923                           
  1924                           ;lcd.c: 708: }
  1925                           ;lcd.c: 711: switch(ch)
  1926  0608  2F95               	goto	l2364
  1927  0609                     l2276:	
  1928                           ;lcd.c: 712: {
  1929                           ;lcd.c: 713: case 'C':
  1930                           
  1931                           
  1932                           ;lcd.c: 714: case 'c':
  1933                           ;lcd.c: 715: ch = (*(int *)__va_arg((*(int **)argp), (int)0));
  1934  0609  0866               	movf	LCD_Printf@argp,w
  1935  060A  0084               	movwf	4
  1936  060B  1383               	bcf	3,7	;select IRP bank0
  1937  060C  0800               	movf	0,w
  1938  060D  00D0               	movwf	??_LCD_Printf
  1939  060E  0850               	movf	??_LCD_Printf,w
  1940  060F  00E4               	movwf	LCD_Printf@ch
  1941  0610  3002               	movlw	2
  1942  0611  00D0               	movwf	??_LCD_Printf
  1943  0612  0850               	movf	??_LCD_Printf,w
  1944  0613  07E6               	addwf	LCD_Printf@argp,f
  1945  0614  2FC7               	goto	l2366
  1946  0615                     l2282:	
  1947                           ;lcd.c: 719: case 'd':
  1948                           
  1949                           ;lcd.c: 717: break;
  1950                           
  1951                           ;lcd.c: 716: LCD_DisplayChar(ch);
  1952                           
  1953                           
  1954                           ;lcd.c: 720: v_num_s16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  1955  0615  1283               	bcf	3,5	;RP0=0, select bank0
  1956  0616  1303               	bcf	3,6	;RP1=0, select bank0
  1957  0617  0866               	movf	LCD_Printf@argp,w
  1958  0618  0084               	movwf	4
  1959  0619  1383               	bcf	3,7	;select IRP bank0
  1960  061A  0800               	movf	0,w
  1961  061B  00DB               	movwf	LCD_Printf@v_num_s16
  1962  061C  0A84               	incf	4,f
  1963  061D  0800               	movf	0,w
  1964  061E  00DC               	movwf	LCD_Printf@v_num_s16+1
  1965  061F  3002               	movlw	2
  1966  0620  00D0               	movwf	??_LCD_Printf
  1967  0621  0850               	movf	??_LCD_Printf,w
  1968  0622  07E6               	addwf	LCD_Printf@argp,f
  1969                           
  1970                           ;lcd.c: 721: if(v_num_s16<0)
  1971  0623  1FDC               	btfss	LCD_Printf@v_num_s16+1,7
  1972  0624  2E30               	goto	l2292
  1973                           
  1974                           ;lcd.c: 722: {
  1975                           ;lcd.c: 723: v_num_s16 = -v_num_s16;
  1976  0625  09DB               	comf	LCD_Printf@v_num_s16,f
  1977  0626  09DC               	comf	LCD_Printf@v_num_s16+1,f
  1978  0627  0ADB               	incf	LCD_Printf@v_num_s16,f
  1979  0628  1903               	skipnz
  1980  0629  0ADC               	incf	LCD_Printf@v_num_s16+1,f
  1981                           
  1982                           ;lcd.c: 724: LCD_DisplayChar('-');
  1983  062A  302D               	movlw	45
  1984  062B  120A  158A  2157  120A  118A  	fcall	_LCD_DisplayChar
  1985  0630                     l2292:	
  1986                           
  1987                           ;lcd.c: 725: }
  1988                           ;lcd.c: 726: LCD_DisplayNumber(10u,v_num_s16,v_numOfDigitsToDisp_u8);
  1989  0630  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0631  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0632  085B               	movf	LCD_Printf@v_num_s16,w
  1992  0633  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1993  0634  085C               	movf	LCD_Printf@v_num_s16+1,w
  1994  0635  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1995  0636  3000               	movlw	0
  1996  0637  1BA5               	btfsc	LCD_DisplayNumber@v_number_u32+1,7
  1997  0638  30FF               	movlw	255
  1998  0639  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  1999  063A  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2000  063B  0865               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2001  063C  00D0               	movwf	??_LCD_Printf
  2002  063D  0850               	movf	??_LCD_Printf,w
  2003  063E  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2004  063F  300A               	movlw	10
  2005  0640  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2006                           
  2007                           ;lcd.c: 727: break;
  2008  0645  2FCD               	goto	l2368
  2009  0646                     l2294:	
  2010                           ;lcd.c: 729: case 'D':
  2011                           
  2012                           
  2013                           ;lcd.c: 730: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
  2014  0646  1283               	bcf	3,5	;RP0=0, select bank0
  2015  0647  1303               	bcf	3,6	;RP1=0, select bank0
  2016  0648  0866               	movf	LCD_Printf@argp,w
  2017  0649  0084               	movwf	4
  2018  064A  1383               	bcf	3,7	;select IRP bank0
  2019  064B  0800               	movf	0,w
  2020  064C  00D7               	movwf	LCD_Printf@v_num_s32
  2021  064D  0A84               	incf	4,f
  2022  064E  0800               	movf	0,w
  2023  064F  00D8               	movwf	LCD_Printf@v_num_s32+1
  2024  0650  0A84               	incf	4,f
  2025  0651  0800               	movf	0,w
  2026  0652  00D9               	movwf	LCD_Printf@v_num_s32+2
  2027  0653  0A84               	incf	4,f
  2028  0654  0800               	movf	0,w
  2029  0655  00DA               	movwf	LCD_Printf@v_num_s32+3
  2030  0656  3004               	movlw	4
  2031  0657  00D0               	movwf	??_LCD_Printf
  2032  0658  0850               	movf	??_LCD_Printf,w
  2033  0659  07E6               	addwf	LCD_Printf@argp,f
  2034                           
  2035                           ;lcd.c: 731: if(v_num_s32<0)
  2036  065A  1FDA               	btfss	LCD_Printf@v_num_s32+3,7
  2037  065B  2E6D               	goto	l276
  2038                           
  2039                           ;lcd.c: 732: {
  2040                           ;lcd.c: 733: v_num_s32 = -v_num_s32;
  2041  065C  09D7               	comf	LCD_Printf@v_num_s32,f
  2042  065D  09D8               	comf	LCD_Printf@v_num_s32+1,f
  2043  065E  09D9               	comf	LCD_Printf@v_num_s32+2,f
  2044  065F  09DA               	comf	LCD_Printf@v_num_s32+3,f
  2045  0660  0AD7               	incf	LCD_Printf@v_num_s32,f
  2046  0661  1903               	skipnz
  2047  0662  0AD8               	incf	LCD_Printf@v_num_s32+1,f
  2048  0663  1903               	skipnz
  2049  0664  0AD9               	incf	LCD_Printf@v_num_s32+2,f
  2050  0665  1903               	skipnz
  2051  0666  0ADA               	incf	LCD_Printf@v_num_s32+3,f
  2052                           
  2053                           ;lcd.c: 734: LCD_DisplayChar('-');
  2054  0667  302D               	movlw	45
  2055  0668  120A  158A  2157  120A  118A  	fcall	_LCD_DisplayChar
  2056  066D                     l276:	
  2057                           
  2058                           ;lcd.c: 735: }
  2059                           ;lcd.c: 736: LCD_DisplayNumber(10u,v_num_s32,v_numOfDigitsToDisp_u8);
  2060  066D  1283               	bcf	3,5	;RP0=0, select bank0
  2061  066E  1303               	bcf	3,6	;RP1=0, select bank0
  2062  066F  085A               	movf	LCD_Printf@v_num_s32+3,w
  2063  0670  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2064  0671  0859               	movf	LCD_Printf@v_num_s32+2,w
  2065  0672  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2066  0673  0858               	movf	LCD_Printf@v_num_s32+1,w
  2067  0674  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2068  0675  0857               	movf	LCD_Printf@v_num_s32,w
  2069  0676  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2070  0677  0865               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2071  0678  00D0               	movwf	??_LCD_Printf
  2072  0679  0850               	movf	??_LCD_Printf,w
  2073  067A  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2074  067B  300A               	movlw	10
  2075  067C  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2076                           
  2077                           ;lcd.c: 737: break;
  2078  0681  2FCD               	goto	l2368
  2079  0682                     l2304:	
  2080                           ;lcd.c: 739: case 'u':
  2081                           
  2082                           
  2083                           ;lcd.c: 740: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  2084  0682  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0683  1303               	bcf	3,6	;RP1=0, select bank0
  2086  0684  0866               	movf	LCD_Printf@argp,w
  2087  0685  0084               	movwf	4
  2088  0686  1383               	bcf	3,7	;select IRP bank0
  2089  0687  0800               	movf	0,w
  2090  0688  00E1               	movwf	LCD_Printf@v_num_u16
  2091  0689  0A84               	incf	4,f
  2092  068A  0800               	movf	0,w
  2093  068B  00E2               	movwf	LCD_Printf@v_num_u16+1
  2094  068C  3002               	movlw	2
  2095  068D  00D0               	movwf	??_LCD_Printf
  2096  068E  0850               	movf	??_LCD_Printf,w
  2097  068F  07E6               	addwf	LCD_Printf@argp,f
  2098                           
  2099                           ;lcd.c: 741: LCD_DisplayNumber(10u,v_num_u16,v_numOfDigitsToDisp_u8);
  2100  0690  0861               	movf	LCD_Printf@v_num_u16,w
  2101  0691  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2102  0692  0862               	movf	LCD_Printf@v_num_u16+1,w
  2103  0693  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2104  0694  01A6               	clrf	LCD_DisplayNumber@v_number_u32+2
  2105  0695  01A7               	clrf	LCD_DisplayNumber@v_number_u32+3
  2106  0696  0865               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2107  0697  00D0               	movwf	??_LCD_Printf
  2108  0698  0850               	movf	??_LCD_Printf,w
  2109  0699  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2110  069A  300A               	movlw	10
  2111  069B  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2112                           
  2113                           ;lcd.c: 742: break;
  2114  06A0  2FCD               	goto	l2368
  2115  06A1                     l2310:	
  2116                           ;lcd.c: 744: case 'U':
  2117                           
  2118                           
  2119                           ;lcd.c: 745: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  2120  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  2121  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  2122  06A3  0866               	movf	LCD_Printf@argp,w
  2123  06A4  0084               	movwf	4
  2124  06A5  1383               	bcf	3,7	;select IRP bank0
  2125  06A6  0800               	movf	0,w
  2126  06A7  00DD               	movwf	LCD_Printf@v_num_u32
  2127  06A8  0A84               	incf	4,f
  2128  06A9  0800               	movf	0,w
  2129  06AA  00DE               	movwf	LCD_Printf@v_num_u32+1
  2130  06AB  0A84               	incf	4,f
  2131  06AC  0800               	movf	0,w
  2132  06AD  00DF               	movwf	LCD_Printf@v_num_u32+2
  2133  06AE  0A84               	incf	4,f
  2134  06AF  0800               	movf	0,w
  2135  06B0  00E0               	movwf	LCD_Printf@v_num_u32+3
  2136  06B1  3004               	movlw	4
  2137  06B2  00D0               	movwf	??_LCD_Printf
  2138  06B3  0850               	movf	??_LCD_Printf,w
  2139  06B4  07E6               	addwf	LCD_Printf@argp,f
  2140                           
  2141                           ;lcd.c: 746: LCD_DisplayNumber(10u,v_num_u32,v_numOfDigitsToDisp_u8);
  2142  06B5  0860               	movf	LCD_Printf@v_num_u32+3,w
  2143  06B6  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2144  06B7  085F               	movf	LCD_Printf@v_num_u32+2,w
  2145  06B8  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2146  06B9  085E               	movf	LCD_Printf@v_num_u32+1,w
  2147  06BA  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2148  06BB  085D               	movf	LCD_Printf@v_num_u32,w
  2149  06BC  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2150  06BD  0865               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2151  06BE  00D0               	movwf	??_LCD_Printf
  2152  06BF  0850               	movf	??_LCD_Printf,w
  2153  06C0  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2154  06C1  300A               	movlw	10
  2155  06C2  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2156                           
  2157                           ;lcd.c: 747: break;
  2158  06C7  2FCD               	goto	l2368
  2159  06C8                     l2316:	
  2160                           ;lcd.c: 749: case 'x':
  2161                           
  2162                           
  2163                           ;lcd.c: 750: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  2164  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2165  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2166  06CA  0866               	movf	LCD_Printf@argp,w
  2167  06CB  0084               	movwf	4
  2168  06CC  1383               	bcf	3,7	;select IRP bank0
  2169  06CD  0800               	movf	0,w
  2170  06CE  00E1               	movwf	LCD_Printf@v_num_u16
  2171  06CF  0A84               	incf	4,f
  2172  06D0  0800               	movf	0,w
  2173  06D1  00E2               	movwf	LCD_Printf@v_num_u16+1
  2174  06D2  3002               	movlw	2
  2175  06D3  00D0               	movwf	??_LCD_Printf
  2176  06D4  0850               	movf	??_LCD_Printf,w
  2177  06D5  07E6               	addwf	LCD_Printf@argp,f
  2178                           
  2179                           ;lcd.c: 751: LCD_DisplayNumber(16u,v_num_u16,v_numOfDigitsToDisp_u8);
  2180  06D6  0861               	movf	LCD_Printf@v_num_u16,w
  2181  06D7  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2182  06D8  0862               	movf	LCD_Printf@v_num_u16+1,w
  2183  06D9  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2184  06DA  01A6               	clrf	LCD_DisplayNumber@v_number_u32+2
  2185  06DB  01A7               	clrf	LCD_DisplayNumber@v_number_u32+3
  2186  06DC  0865               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2187  06DD  00D0               	movwf	??_LCD_Printf
  2188  06DE  0850               	movf	??_LCD_Printf,w
  2189  06DF  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2190  06E0  3010               	movlw	16
  2191  06E1  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2192                           
  2193                           ;lcd.c: 752: break;
  2194  06E6  2FCD               	goto	l2368
  2195  06E7                     l2322:	
  2196                           ;lcd.c: 754: case 'X':
  2197                           
  2198                           
  2199                           ;lcd.c: 755: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  2200  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  2201  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  2202  06E9  0866               	movf	LCD_Printf@argp,w
  2203  06EA  0084               	movwf	4
  2204  06EB  1383               	bcf	3,7	;select IRP bank0
  2205  06EC  0800               	movf	0,w
  2206  06ED  00DD               	movwf	LCD_Printf@v_num_u32
  2207  06EE  0A84               	incf	4,f
  2208  06EF  0800               	movf	0,w
  2209  06F0  00DE               	movwf	LCD_Printf@v_num_u32+1
  2210  06F1  0A84               	incf	4,f
  2211  06F2  0800               	movf	0,w
  2212  06F3  00DF               	movwf	LCD_Printf@v_num_u32+2
  2213  06F4  0A84               	incf	4,f
  2214  06F5  0800               	movf	0,w
  2215  06F6  00E0               	movwf	LCD_Printf@v_num_u32+3
  2216  06F7  3004               	movlw	4
  2217  06F8  00D0               	movwf	??_LCD_Printf
  2218  06F9  0850               	movf	??_LCD_Printf,w
  2219  06FA  07E6               	addwf	LCD_Printf@argp,f
  2220                           
  2221                           ;lcd.c: 756: LCD_DisplayNumber(16u,v_num_u32,v_numOfDigitsToDisp_u8);
  2222  06FB  0860               	movf	LCD_Printf@v_num_u32+3,w
  2223  06FC  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2224  06FD  085F               	movf	LCD_Printf@v_num_u32+2,w
  2225  06FE  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2226  06FF  085E               	movf	LCD_Printf@v_num_u32+1,w
  2227  0700  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2228  0701  085D               	movf	LCD_Printf@v_num_u32,w
  2229  0702  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2230  0703  0865               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2231  0704  00D0               	movwf	??_LCD_Printf
  2232  0705  0850               	movf	??_LCD_Printf,w
  2233  0706  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2234  0707  3010               	movlw	16
  2235  0708  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2236                           
  2237                           ;lcd.c: 757: break;
  2238  070D  2FCD               	goto	l2368
  2239  070E                     l2328:	
  2240                           ;lcd.c: 760: case 'b':
  2241                           
  2242                           
  2243                           ;lcd.c: 761: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  2244  070E  1283               	bcf	3,5	;RP0=0, select bank0
  2245  070F  1303               	bcf	3,6	;RP1=0, select bank0
  2246  0710  0866               	movf	LCD_Printf@argp,w
  2247  0711  0084               	movwf	4
  2248  0712  1383               	bcf	3,7	;select IRP bank0
  2249  0713  0800               	movf	0,w
  2250  0714  00E1               	movwf	LCD_Printf@v_num_u16
  2251  0715  0A84               	incf	4,f
  2252  0716  0800               	movf	0,w
  2253  0717  00E2               	movwf	LCD_Printf@v_num_u16+1
  2254  0718  3002               	movlw	2
  2255  0719  00D0               	movwf	??_LCD_Printf
  2256  071A  0850               	movf	??_LCD_Printf,w
  2257  071B  07E6               	addwf	LCD_Printf@argp,f
  2258                           
  2259                           ;lcd.c: 762: if(v_numOfDigitsToDisp_u8 == 0xffu)
  2260  071C  0A65               	incf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2261  071D  1D03               	btfss	3,2
  2262  071E  2F23               	goto	l2336
  2263                           
  2264                           ;lcd.c: 763: v_numOfDigitsToDisp_u8 = 16;
  2265  071F  3010               	movlw	16
  2266  0720  00D0               	movwf	??_LCD_Printf
  2267  0721  0850               	movf	??_LCD_Printf,w
  2268  0722  00E5               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  2269  0723                     l2336:	
  2270                           
  2271                           ;lcd.c: 764: LCD_DisplayNumber(2u,v_num_u16,v_numOfDigitsToDisp_u8);
  2272  0723  0861               	movf	LCD_Printf@v_num_u16,w
  2273  0724  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2274  0725  0862               	movf	LCD_Printf@v_num_u16+1,w
  2275  0726  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2276  0727  01A6               	clrf	LCD_DisplayNumber@v_number_u32+2
  2277  0728  01A7               	clrf	LCD_DisplayNumber@v_number_u32+3
  2278  0729  0865               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2279  072A  00D0               	movwf	??_LCD_Printf
  2280  072B  0850               	movf	??_LCD_Printf,w
  2281  072C  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2282  072D  3002               	movlw	2
  2283  072E  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2284                           
  2285                           ;lcd.c: 765: break;
  2286  0733  2FCD               	goto	l2368
  2287  0734                     l2338:	
  2288                           ;lcd.c: 767: case 'B':
  2289                           
  2290                           
  2291                           ;lcd.c: 768: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  2292  0734  1283               	bcf	3,5	;RP0=0, select bank0
  2293  0735  1303               	bcf	3,6	;RP1=0, select bank0
  2294  0736  0866               	movf	LCD_Printf@argp,w
  2295  0737  0084               	movwf	4
  2296  0738  1383               	bcf	3,7	;select IRP bank0
  2297  0739  0800               	movf	0,w
  2298  073A  00DD               	movwf	LCD_Printf@v_num_u32
  2299  073B  0A84               	incf	4,f
  2300  073C  0800               	movf	0,w
  2301  073D  00DE               	movwf	LCD_Printf@v_num_u32+1
  2302  073E  0A84               	incf	4,f
  2303  073F  0800               	movf	0,w
  2304  0740  00DF               	movwf	LCD_Printf@v_num_u32+2
  2305  0741  0A84               	incf	4,f
  2306  0742  0800               	movf	0,w
  2307  0743  00E0               	movwf	LCD_Printf@v_num_u32+3
  2308  0744  3004               	movlw	4
  2309  0745  00D0               	movwf	??_LCD_Printf
  2310  0746  0850               	movf	??_LCD_Printf,w
  2311  0747  07E6               	addwf	LCD_Printf@argp,f
  2312                           
  2313                           ;lcd.c: 769: if(v_numOfDigitsToDisp_u8 == 0xffu)
  2314  0748  0A65               	incf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2315  0749  1D03               	btfss	3,2
  2316  074A  2F4F               	goto	l2346
  2317                           
  2318                           ;lcd.c: 770: v_numOfDigitsToDisp_u8 = 16;
  2319  074B  3010               	movlw	16
  2320  074C  00D0               	movwf	??_LCD_Printf
  2321  074D  0850               	movf	??_LCD_Printf,w
  2322  074E  00E5               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  2323  074F                     l2346:	
  2324                           
  2325                           ;lcd.c: 771: LCD_DisplayNumber(2u,v_num_u32,v_numOfDigitsToDisp_u8);
  2326  074F  0860               	movf	LCD_Printf@v_num_u32+3,w
  2327  0750  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2328  0751  085F               	movf	LCD_Printf@v_num_u32+2,w
  2329  0752  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2330  0753  085E               	movf	LCD_Printf@v_num_u32+1,w
  2331  0754  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2332  0755  085D               	movf	LCD_Printf@v_num_u32,w
  2333  0756  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2334  0757  0865               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  2335  0758  00D0               	movwf	??_LCD_Printf
  2336  0759  0850               	movf	??_LCD_Printf,w
  2337  075A  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2338  075B  3002               	movlw	2
  2339  075C  120A  118A  23A7  120A  118A  	fcall	_LCD_DisplayNumber
  2340                           
  2341                           ;lcd.c: 772: break;
  2342  0761  2FCD               	goto	l2368
  2343  0762                     l2348:	
  2344                           ;lcd.c: 775: case 'F':
  2345                           
  2346                           
  2347                           ;lcd.c: 776: case 'f':
  2348                           ;lcd.c: 778: v_floatNum_f32 = (*(double *)__va_arg((*(double **)argp), (double)0));
  2349  0762  1283               	bcf	3,5	;RP0=0, select bank0
  2350  0763  1303               	bcf	3,6	;RP1=0, select bank0
  2351  0764  0866               	movf	LCD_Printf@argp,w
  2352  0765  0084               	movwf	4
  2353  0766  1383               	bcf	3,7	;select IRP bank0
  2354  0767  0800               	movf	0,w
  2355  0768  00D2               	movwf	LCD_Printf@v_floatNum_f32
  2356  0769  0A84               	incf	4,f
  2357  076A  0800               	movf	0,w
  2358  076B  00D3               	movwf	LCD_Printf@v_floatNum_f32+1
  2359  076C  0A84               	incf	4,f
  2360  076D  0800               	movf	0,w
  2361  076E  00D4               	movwf	LCD_Printf@v_floatNum_f32+2
  2362  076F  3003               	movlw	3
  2363  0770  00D0               	movwf	??_LCD_Printf
  2364  0771  0850               	movf	??_LCD_Printf,w
  2365  0772  07E6               	addwf	LCD_Printf@argp,f
  2366                           
  2367                           ;lcd.c: 779: LCD_DisplayFloatNumber(v_floatNum_f32);
  2368  0773  0852               	movf	LCD_Printf@v_floatNum_f32,w
  2369  0774  00C3               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32
  2370  0775  0853               	movf	LCD_Printf@v_floatNum_f32+1,w
  2371  0776  00C4               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+1
  2372  0777  0854               	movf	LCD_Printf@v_floatNum_f32+2,w
  2373  0778  00C5               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+2
  2374  0779  120A  158A  25E6  120A  118A  	fcall	_LCD_DisplayFloatNumber
  2375                           
  2376                           ;lcd.c: 781: break;
  2377  077E  2FCD               	goto	l2368
  2378  077F                     l2354:	
  2379                           ;lcd.c: 784: case 'S':
  2380                           
  2381                           
  2382                           ;lcd.c: 785: case 's':
  2383                           ;lcd.c: 786: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  2384  077F  1283               	bcf	3,5	;RP0=0, select bank0
  2385  0780  1303               	bcf	3,6	;RP1=0, select bank0
  2386  0781  0866               	movf	LCD_Printf@argp,w
  2387  0782  0084               	movwf	4
  2388  0783  1383               	bcf	3,7	;select IRP bank0
  2389  0784  0800               	movf	0,w
  2390  0785  00D0               	movwf	??_LCD_Printf
  2391  0786  0850               	movf	??_LCD_Printf,w
  2392  0787  00D5               	movwf	LCD_Printf@str
  2393  0788  3001               	movlw	1
  2394  0789  00D0               	movwf	??_LCD_Printf
  2395  078A  0850               	movf	??_LCD_Printf,w
  2396  078B  07E6               	addwf	LCD_Printf@argp,f
  2397                           
  2398                           ;lcd.c: 787: LCD_DisplayString(str);
  2399  078C  0855               	movf	LCD_Printf@str,w
  2400  078D  120A  158A  213E  120A  118A  	fcall	_LCD_DisplayString
  2401                           
  2402                           ;lcd.c: 788: break;
  2403  0792  2FCD               	goto	l2368
  2404  0793                     l2360:	
  2405                           ;lcd.c: 790: case '%':
  2406                           
  2407                           
  2408                           ;lcd.c: 791: LCD_DisplayChar('%');
  2409  0793  3025               	movlw	37
  2410  0794  2FC8               	goto	L1
  2411  0795                     l2364:	
  2412                           ;lcd.c: 793: }
  2413                           
  2414                           ;lcd.c: 792: break;
  2415                           
  2416  0795  1283               	bcf	3,5	;RP0=0, select bank0
  2417  0796  1303               	bcf	3,6	;RP1=0, select bank0
  2418  0797  0864               	movf	LCD_Printf@ch,w
  2419                           
  2420                           ; Switch size 1, requested type "space"
  2421                           ; Number of cases is 15, Range of values is 37 to 120
  2422                           ; switch strategies available:
  2423                           ; Name         Instructions Cycles
  2424                           ; simple_byte           46    24 (average)
  2425                           ; direct_byte          263    11 (fixed)
  2426                           ; jumptable            263     9 (fixed)
  2427                           ;	Chosen strategy is simple_byte
  2428  0798  3A25               	xorlw	37	; case 37
  2429  0799  1903               	skipnz
  2430  079A  2F93               	goto	l2360
  2431  079B  3A67               	xorlw	103	; case 66
  2432  079C  1903               	skipnz
  2433  079D  2F34               	goto	l2338
  2434  079E  3A01               	xorlw	1	; case 67
  2435  079F  1903               	skipnz
  2436  07A0  2E09               	goto	l2276
  2437  07A1  3A07               	xorlw	7	; case 68
  2438  07A2  1903               	skipnz
  2439  07A3  2E46               	goto	l2294
  2440  07A4  3A02               	xorlw	2	; case 70
  2441  07A5  1903               	skipnz
  2442  07A6  2F62               	goto	l2348
  2443  07A7  3A15               	xorlw	21	; case 83
  2444  07A8  1903               	skipnz
  2445  07A9  2F7F               	goto	l2354
  2446  07AA  3A06               	xorlw	6	; case 85
  2447  07AB  1903               	skipnz
  2448  07AC  2EA1               	goto	l2310
  2449  07AD  3A0D               	xorlw	13	; case 88
  2450  07AE  1903               	skipnz
  2451  07AF  2EE7               	goto	l2322
  2452  07B0  3A3A               	xorlw	58	; case 98
  2453  07B1  1903               	skipnz
  2454  07B2  2F0E               	goto	l2328
  2455  07B3  3A01               	xorlw	1	; case 99
  2456  07B4  1903               	skipnz
  2457  07B5  2E09               	goto	l2276
  2458  07B6  3A07               	xorlw	7	; case 100
  2459  07B7  1903               	skipnz
  2460  07B8  2E15               	goto	l2282
  2461  07B9  3A02               	xorlw	2	; case 102
  2462  07BA  1903               	skipnz
  2463  07BB  2F62               	goto	l2348
  2464  07BC  3A15               	xorlw	21	; case 115
  2465  07BD  1903               	skipnz
  2466  07BE  2F7F               	goto	l2354
  2467  07BF  3A06               	xorlw	6	; case 117
  2468  07C0  1903               	skipnz
  2469  07C1  2E82               	goto	l2304
  2470  07C2  3A0D               	xorlw	13	; case 120
  2471  07C3  1903               	skipnz
  2472  07C4  2EC8               	goto	l2316
  2473  07C5  2FCD               	goto	l2368
  2474                           
  2475                           ;lcd.c: 794: }
  2476  07C6  2FCD               	goto	l2368
  2477  07C7                     l2366:	
  2478                           
  2479                           ;lcd.c: 795: else
  2480                           ;lcd.c: 796: {
  2481                           ;lcd.c: 798: LCD_DisplayChar(ch);
  2482  07C7  0864               	movf	LCD_Printf@ch,w
  2483  07C8                     L1:	
  2484  07C8  120A  158A  2157  120A  118A  	fcall	_LCD_DisplayChar
  2485  07CD                     l2368:	
  2486  07CD  3001               	movlw	1
  2487  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  2488  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  2489  07D0  00D0               	movwf	??_LCD_Printf
  2490  07D1  0850               	movf	??_LCD_Printf,w
  2491  07D2  07E3               	addwf	LCD_Printf@ptr,f
  2492  07D3  2DAD               	goto	l2370
  2493  07D4                     __end_of_LCD_Printf:	
  2494                           
  2495                           	psect	text5
  2496  093E                     __ptext5:	
  2497 ;; *************** function _LCD_DisplayString *****************
  2498 ;; Defined at:
  2499 ;;		line 421 in file "../00-libfiles/lcd.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  ptr_stringPo    1    wreg     PTR const unsigned char 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  ptr_stringPo    1    0[BANK0 ] PTR const unsigned char 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2513 ;;      Params:         0       0       0       0       0
  2514 ;;      Locals:         0       1       0       0       0
  2515 ;;      Temps:          1       0       0       0       0
  2516 ;;      Totals:         1       1       0       0       0
  2517 ;;Total ram usage:        2 bytes
  2518 ;; Hardware stack levels used:    1
  2519 ;; Hardware stack levels required when called:    6
  2520 ;; This function calls:
  2521 ;;		_LCD_DisplayChar
  2522 ;; This function is called by:
  2523 ;;		_LCD_Printf
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           
  2528                           ;psect for function _LCD_DisplayString
  2529  093E                     _LCD_DisplayString:	
  2530                           
  2531                           ;incstack = 0
  2532                           ; Regs used in _LCD_DisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2533                           ;LCD_DisplayString@ptr_stringPointer_u8 stored from wreg
  2534  093E  1283               	bcf	3,5	;RP0=0, select bank0
  2535  093F  1303               	bcf	3,6	;RP1=0, select bank0
  2536  0940  00A0               	movwf	LCD_DisplayString@ptr_stringPointer_u8
  2537  0941                     l2172:	
  2538                           ;lcd.c: 423: while((*ptr_stringPointer_u8)!=0)
  2539                           
  2540  0941  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  2541  0942  0084               	movwf	4
  2542  0943  1383               	bcf	3,7	;select IRP bank0
  2543  0944  0800               	movf	0,w
  2544  0945  1903               	btfsc	3,2
  2545  0946  0008               	return
  2546                           
  2547                           ;lcd.c: 424: LCD_DisplayChar(*ptr_stringPointer_u8++);
  2548  0947  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  2549  0948  0084               	movwf	4
  2550  0949  1383               	bcf	3,7	;select IRP bank0
  2551  094A  0800               	movf	0,w
  2552  094B  120A  158A  2157  120A  158A  	fcall	_LCD_DisplayChar
  2553  0950  3001               	movlw	1
  2554  0951  00FD               	movwf	??_LCD_DisplayString
  2555  0952  087D               	movf	??_LCD_DisplayString,w
  2556  0953  1283               	bcf	3,5	;RP0=0, select bank0
  2557  0954  1303               	bcf	3,6	;RP1=0, select bank0
  2558  0955  07A0               	addwf	LCD_DisplayString@ptr_stringPointer_u8,f
  2559  0956  2941               	goto	l2172
  2560  0957                     __end_of_LCD_DisplayString:	
  2561                           
  2562                           	psect	text6
  2563  0DE6                     __ptext6:	
  2564 ;; *************** function _LCD_DisplayFloatNumber *****************
  2565 ;; Defined at:
  2566 ;;		line 609 in file "../00-libfiles/lcd.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  v_floatNum_f    3   35[BANK0 ] void 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  v_temp_u32      4   39[BANK0 ] unsigned long 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2580 ;;      Params:         0       3       0       0       0
  2581 ;;      Locals:         0       4       0       0       0
  2582 ;;      Temps:          0       1       0       0       0
  2583 ;;      Totals:         0       8       0       0       0
  2584 ;;Total ram usage:        8 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    7
  2587 ;; This function calls:
  2588 ;;		_LCD_DisplayChar
  2589 ;;		_LCD_DisplayNumber
  2590 ;;		___ftadd
  2591 ;;		___ftmul
  2592 ;;		___ftneg
  2593 ;;		___fttol
  2594 ;;		___lltoft
  2595 ;; This function is called by:
  2596 ;;		_LCD_Printf
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           
  2601                           ;psect for function _LCD_DisplayFloatNumber
  2602  0DE6                     _LCD_DisplayFloatNumber:	
  2603                           
  2604                           ;lcd.c: 611: uint32_t v_temp_u32;
  2605                           ;lcd.c: 618: v_temp_u32 = (uint32_t) v_floatNum_f32;
  2606                           
  2607                           ;incstack = 0
  2608 ;; hardware stack exceeded
  2609                           ; Regs used in _LCD_DisplayFloatNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2610  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  2611  0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  2612  0DE8  0843               	movf	LCD_DisplayFloatNumber@v_floatNum_f32,w
  2613  0DE9  00B0               	movwf	___fttol@f1
  2614  0DEA  0844               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+1,w
  2615  0DEB  00B1               	movwf	___fttol@f1+1
  2616  0DEC  0845               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+2,w
  2617  0DED  00B2               	movwf	___fttol@f1+2
  2618  0DEE  120A  158A  2558  120A  158A  	fcall	___fttol
  2619  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0DF4  1303               	bcf	3,6	;RP1=0, select bank0
  2621  0DF5  0833               	movf	?___fttol+3,w
  2622  0DF6  00CA               	movwf	LCD_DisplayFloatNumber@v_temp_u32+3
  2623  0DF7  0832               	movf	?___fttol+2,w
  2624  0DF8  00C9               	movwf	LCD_DisplayFloatNumber@v_temp_u32+2
  2625  0DF9  0831               	movf	?___fttol+1,w
  2626  0DFA  00C8               	movwf	LCD_DisplayFloatNumber@v_temp_u32+1
  2627  0DFB  0830               	movf	?___fttol,w
  2628  0DFC  00C7               	movwf	LCD_DisplayFloatNumber@v_temp_u32
  2629                           
  2630                           ;lcd.c: 619: LCD_DisplayNumber(10u,v_temp_u32,0xffu);
  2631  0DFD  084A               	movf	LCD_DisplayFloatNumber@v_temp_u32+3,w
  2632  0DFE  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2633  0DFF  0849               	movf	LCD_DisplayFloatNumber@v_temp_u32+2,w
  2634  0E00  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2635  0E01  0848               	movf	LCD_DisplayFloatNumber@v_temp_u32+1,w
  2636  0E02  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2637  0E03  0847               	movf	LCD_DisplayFloatNumber@v_temp_u32,w
  2638  0E04  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2639  0E05  30FF               	movlw	255
  2640  0E06  00C6               	movwf	??_LCD_DisplayFloatNumber
  2641  0E07  0846               	movf	??_LCD_DisplayFloatNumber,w
  2642  0E08  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2643  0E09  300A               	movlw	10
  2644  0E0A  120A  118A  23A7  120A  158A  	fcall	_LCD_DisplayNumber
  2645                           
  2646                           ;lcd.c: 621: LCD_DisplayChar('.');
  2647  0E0F  302E               	movlw	46
  2648  0E10  120A  158A  2157  120A  158A  	fcall	_LCD_DisplayChar
  2649                           
  2650                           ;lcd.c: 623: v_floatNum_f32 = v_floatNum_f32 - v_temp_u32;
  2651  0E15  1283               	bcf	3,5	;RP0=0, select bank0
  2652  0E16  1303               	bcf	3,6	;RP1=0, select bank0
  2653  0E17  0843               	movf	LCD_DisplayFloatNumber@v_floatNum_f32,w
  2654  0E18  00A3               	movwf	___ftadd@f1
  2655  0E19  0844               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+1,w
  2656  0E1A  00A4               	movwf	___ftadd@f1+1
  2657  0E1B  0845               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+2,w
  2658  0E1C  00A5               	movwf	___ftadd@f1+2
  2659  0E1D  084A               	movf	LCD_DisplayFloatNumber@v_temp_u32+3,w
  2660  0E1E  00FB               	movwf	___lltoft@c+3
  2661  0E1F  0849               	movf	LCD_DisplayFloatNumber@v_temp_u32+2,w
  2662  0E20  00FA               	movwf	___lltoft@c+2
  2663  0E21  0848               	movf	LCD_DisplayFloatNumber@v_temp_u32+1,w
  2664  0E22  00F9               	movwf	___lltoft@c+1
  2665  0E23  0847               	movf	LCD_DisplayFloatNumber@v_temp_u32,w
  2666  0E24  00F8               	movwf	___lltoft@c
  2667  0E25  120A  158A  21BD  120A  158A  	fcall	___lltoft
  2668  0E2A  0878               	movf	?___lltoft,w
  2669  0E2B  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0E2C  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0E2D  00A0               	movwf	___ftneg@f1
  2672  0E2E  0879               	movf	?___lltoft+1,w
  2673  0E2F  00A1               	movwf	___ftneg@f1+1
  2674  0E30  087A               	movf	?___lltoft+2,w
  2675  0E31  00A2               	movwf	___ftneg@f1+2
  2676  0E32  120A  158A  20D3  120A  158A  	fcall	___ftneg
  2677  0E37  1283               	bcf	3,5	;RP0=0, select bank0
  2678  0E38  1303               	bcf	3,6	;RP1=0, select bank0
  2679  0E39  0820               	movf	?___ftneg,w
  2680  0E3A  00A6               	movwf	___ftadd@f2
  2681  0E3B  0821               	movf	?___ftneg+1,w
  2682  0E3C  00A7               	movwf	___ftadd@f2+1
  2683  0E3D  0822               	movf	?___ftneg+2,w
  2684  0E3E  00A8               	movwf	___ftadd@f2+2
  2685  0E3F  120A  118A  2499  120A  158A  	fcall	___ftadd
  2686  0E44  1283               	bcf	3,5	;RP0=0, select bank0
  2687  0E45  1303               	bcf	3,6	;RP1=0, select bank0
  2688  0E46  0823               	movf	?___ftadd,w
  2689  0E47  00C3               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32
  2690  0E48  0824               	movf	?___ftadd+1,w
  2691  0E49  00C4               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+1
  2692  0E4A  0825               	movf	?___ftadd+2,w
  2693  0E4B  00C5               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+2
  2694                           
  2695                           ;lcd.c: 624: v_temp_u32 = v_floatNum_f32 * 1000000;
  2696  0E4C  0843               	movf	LCD_DisplayFloatNumber@v_floatNum_f32,w
  2697  0E4D  00A3               	movwf	___ftmul@f2
  2698  0E4E  0844               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+1,w
  2699  0E4F  00A4               	movwf	___ftmul@f2+1
  2700  0E50  0845               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+2,w
  2701  0E51  00A5               	movwf	___ftmul@f2+2
  2702  0E52  3024               	movlw	36
  2703  0E53  00A0               	movwf	___ftmul@f1
  2704  0E54  3074               	movlw	116
  2705  0E55  00A1               	movwf	___ftmul@f1+1
  2706  0E56  3049               	movlw	73
  2707  0E57  00A2               	movwf	___ftmul@f1+2
  2708  0E58  120A  118A  2122  120A  158A  	fcall	___ftmul
  2709  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  2710  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  2711  0E5F  0820               	movf	?___ftmul,w
  2712  0E60  00B0               	movwf	___fttol@f1
  2713  0E61  0821               	movf	?___ftmul+1,w
  2714  0E62  00B1               	movwf	___fttol@f1+1
  2715  0E63  0822               	movf	?___ftmul+2,w
  2716  0E64  00B2               	movwf	___fttol@f1+2
  2717  0E65  120A  158A  2558  120A  158A  	fcall	___fttol
  2718  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  2720  0E6C  0833               	movf	?___fttol+3,w
  2721  0E6D  00CA               	movwf	LCD_DisplayFloatNumber@v_temp_u32+3
  2722  0E6E  0832               	movf	?___fttol+2,w
  2723  0E6F  00C9               	movwf	LCD_DisplayFloatNumber@v_temp_u32+2
  2724  0E70  0831               	movf	?___fttol+1,w
  2725  0E71  00C8               	movwf	LCD_DisplayFloatNumber@v_temp_u32+1
  2726  0E72  0830               	movf	?___fttol,w
  2727  0E73  00C7               	movwf	LCD_DisplayFloatNumber@v_temp_u32
  2728                           
  2729                           ;lcd.c: 625: LCD_DisplayNumber(10u,v_temp_u32,0xffu);
  2730  0E74  084A               	movf	LCD_DisplayFloatNumber@v_temp_u32+3,w
  2731  0E75  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2732  0E76  0849               	movf	LCD_DisplayFloatNumber@v_temp_u32+2,w
  2733  0E77  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2734  0E78  0848               	movf	LCD_DisplayFloatNumber@v_temp_u32+1,w
  2735  0E79  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2736  0E7A  0847               	movf	LCD_DisplayFloatNumber@v_temp_u32,w
  2737  0E7B  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2738  0E7C  30FF               	movlw	255
  2739  0E7D  00C6               	movwf	??_LCD_DisplayFloatNumber
  2740  0E7E  0846               	movf	??_LCD_DisplayFloatNumber,w
  2741  0E7F  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2742  0E80  300A               	movlw	10
  2743  0E81  120A  118A  23A7   	fcall	_LCD_DisplayNumber
  2744  0E84  0008               	return
  2745  0E85                     __end_of_LCD_DisplayFloatNumber:	
  2746                           
  2747                           	psect	text7
  2748  09BD                     __ptext7:	
  2749 ;; *************** function ___lltoft *****************
  2750 ;; Defined at:
  2751 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lltoft.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  c               4    8[COMMON] unsigned long 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  exp             1   13[COMMON] unsigned char 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  3    8[COMMON] float 
  2758 ;; Registers used:
  2759 ;;		wreg, status,2, status,0, pclath, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2765 ;;      Params:         4       0       0       0       0
  2766 ;;      Locals:         1       0       0       0       0
  2767 ;;      Temps:          1       0       0       0       0
  2768 ;;      Totals:         6       0       0       0       0
  2769 ;;Total ram usage:        6 bytes
  2770 ;; Hardware stack levels used:    1
  2771 ;; Hardware stack levels required when called:    1
  2772 ;; This function calls:
  2773 ;;		___ftpack
  2774 ;; This function is called by:
  2775 ;;		_LCD_DisplayFloatNumber
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           
  2780                           ;psect for function ___lltoft
  2781  09BD                     ___lltoft:	
  2782                           
  2783                           ;incstack = 0
  2784                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  2785  09BD  308E               	movlw	142
  2786  09BE  00FC               	movwf	??___lltoft
  2787  09BF  087C               	movf	??___lltoft,w
  2788  09C0  00FD               	movwf	___lltoft@exp
  2789  09C1                     l2140:	
  2790  09C1  30FF               	movlw	255
  2791  09C2  057B               	andwf	___lltoft@c+3,w
  2792  09C3  1903               	btfsc	3,2
  2793  09C4  29D3               	goto	l2142
  2794  09C5  3001               	movlw	1
  2795  09C6                     u3575:	
  2796  09C6  1003               	clrc
  2797  09C7  0CFB               	rrf	___lltoft@c+3,f
  2798  09C8  0CFA               	rrf	___lltoft@c+2,f
  2799  09C9  0CF9               	rrf	___lltoft@c+1,f
  2800  09CA  0CF8               	rrf	___lltoft@c,f
  2801  09CB  3EFF               	addlw	-1
  2802  09CC  1D03               	skipz
  2803  09CD  29C6               	goto	u3575
  2804  09CE  3001               	movlw	1
  2805  09CF  00FC               	movwf	??___lltoft
  2806  09D0  087C               	movf	??___lltoft,w
  2807  09D1  07FD               	addwf	___lltoft@exp,f
  2808  09D2  29C1               	goto	l2140
  2809  09D3                     l2142:	
  2810  09D3  0878               	movf	___lltoft@c,w
  2811  09D4  00F0               	movwf	___ftpack@arg
  2812  09D5  0879               	movf	___lltoft@c+1,w
  2813  09D6  00F1               	movwf	___ftpack@arg+1
  2814  09D7  087A               	movf	___lltoft@c+2,w
  2815  09D8  00F2               	movwf	___ftpack@arg+2
  2816  09D9  087D               	movf	___lltoft@exp,w
  2817  09DA  00FC               	movwf	??___lltoft
  2818  09DB  087C               	movf	??___lltoft,w
  2819  09DC  00F3               	movwf	___ftpack@exp
  2820  09DD  01F4               	clrf	___ftpack@sign
  2821  09DE  120A  158A  23EB   	fcall	___ftpack
  2822  09E1  0870               	movf	?___ftpack,w
  2823  09E2  00F8               	movwf	?___lltoft
  2824  09E3  0871               	movf	?___ftpack+1,w
  2825  09E4  00F9               	movwf	?___lltoft+1
  2826  09E5  0872               	movf	?___ftpack+2,w
  2827  09E6  00FA               	movwf	?___lltoft+2
  2828  09E7  0008               	return
  2829  09E8                     __end_of___lltoft:	
  2830                           
  2831                           	psect	text8
  2832  0D58                     __ptext8:	
  2833 ;; *************** function ___fttol *****************
  2834 ;; Defined at:
  2835 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\fttol.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;  f1              3   16[BANK0 ] float 
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;  lval            4   25[BANK0 ] unsigned long 
  2840 ;;  exp1            1   29[BANK0 ] unsigned char 
  2841 ;;  sign1           1   24[BANK0 ] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  4   16[BANK0 ] long 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2851 ;;      Params:         0       4       0       0       0
  2852 ;;      Locals:         0       6       0       0       0
  2853 ;;      Temps:          0       4       0       0       0
  2854 ;;      Totals:         0      14       0       0       0
  2855 ;;Total ram usage:       14 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; This function calls:
  2858 ;;		Nothing
  2859 ;; This function is called by:
  2860 ;;		_LCD_DisplayFloatNumber
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           
  2865                           ;psect for function ___fttol
  2866  0D58                     ___fttol:	
  2867                           
  2868                           ;incstack = 0
  2869                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2870  0D58  1283               	bcf	3,5	;RP0=0, select bank0
  2871  0D59  1303               	bcf	3,6	;RP1=0, select bank0
  2872  0D5A  0830               	movf	___fttol@f1,w
  2873  0D5B  00B4               	movwf	??___fttol
  2874  0D5C  0831               	movf	___fttol@f1+1,w
  2875  0D5D  00B5               	movwf	??___fttol+1
  2876  0D5E  0832               	movf	___fttol@f1+2,w
  2877  0D5F  00B6               	movwf	??___fttol+2
  2878  0D60  1003               	clrc
  2879  0D61  0D35               	rlf	??___fttol+1,w
  2880  0D62  0D36               	rlf	??___fttol+2,w
  2881  0D63  00B7               	movwf	??___fttol+3
  2882  0D64  0837               	movf	??___fttol+3,w
  2883  0D65  00BD               	movwf	___fttol@exp1
  2884  0D66  083D               	movf	___fttol@exp1,w
  2885  0D67  1D03               	btfss	3,2
  2886  0D68  2D72               	goto	l2100
  2887  0D69  3000               	movlw	0
  2888  0D6A  00B3               	movwf	?___fttol+3
  2889  0D6B  3000               	movlw	0
  2890  0D6C  00B2               	movwf	?___fttol+2
  2891  0D6D  3000               	movlw	0
  2892  0D6E  00B1               	movwf	?___fttol+1
  2893  0D6F  3000               	movlw	0
  2894  0D70  00B0               	movwf	?___fttol
  2895  0D71  0008               	return
  2896  0D72                     l2100:	
  2897  0D72  0830               	movf	___fttol@f1,w
  2898  0D73  00B4               	movwf	??___fttol
  2899  0D74  0831               	movf	___fttol@f1+1,w
  2900  0D75  00B5               	movwf	??___fttol+1
  2901  0D76  0832               	movf	___fttol@f1+2,w
  2902  0D77  00B6               	movwf	??___fttol+2
  2903  0D78  3017               	movlw	23
  2904  0D79                     u3485:	
  2905  0D79  1003               	clrc
  2906  0D7A  0CB6               	rrf	??___fttol+2,f
  2907  0D7B  0CB5               	rrf	??___fttol+1,f
  2908  0D7C  0CB4               	rrf	??___fttol,f
  2909  0D7D  3EFF               	addlw	-1
  2910  0D7E  1D03               	skipz
  2911  0D7F  2D79               	goto	u3485
  2912  0D80  0834               	movf	??___fttol,w
  2913  0D81  00B7               	movwf	??___fttol+3
  2914  0D82  0837               	movf	??___fttol+3,w
  2915  0D83  00B8               	movwf	___fttol@sign1
  2916  0D84  17B1               	bsf	___fttol@f1+1,7
  2917  0D85  30FF               	movlw	255
  2918  0D86  05B0               	andwf	___fttol@f1,f
  2919  0D87  30FF               	movlw	255
  2920  0D88  05B1               	andwf	___fttol@f1+1,f
  2921  0D89  3000               	movlw	0
  2922  0D8A  05B2               	andwf	___fttol@f1+2,f
  2923  0D8B  0830               	movf	___fttol@f1,w
  2924  0D8C  00B9               	movwf	___fttol@lval
  2925  0D8D  0831               	movf	___fttol@f1+1,w
  2926  0D8E  00BA               	movwf	___fttol@lval+1
  2927  0D8F  0832               	movf	___fttol@f1+2,w
  2928  0D90  00BB               	movwf	___fttol@lval+2
  2929  0D91  01BC               	clrf	___fttol@lval+3
  2930  0D92  308E               	movlw	142
  2931  0D93  02BD               	subwf	___fttol@exp1,f
  2932  0D94  1FBD               	btfss	___fttol@exp1,7
  2933  0D95  2DB4               	goto	l2120
  2934  0D96  083D               	movf	___fttol@exp1,w
  2935  0D97  3A80               	xorlw	128
  2936  0D98  3E8F               	addlw	143
  2937  0D99  1803               	skipnc
  2938  0D9A  2DA4               	goto	l2118
  2939  0D9B  3000               	movlw	0
  2940  0D9C  00B3               	movwf	?___fttol+3
  2941  0D9D  3000               	movlw	0
  2942  0D9E  00B2               	movwf	?___fttol+2
  2943  0D9F  3000               	movlw	0
  2944  0DA0  00B1               	movwf	?___fttol+1
  2945  0DA1  3000               	movlw	0
  2946  0DA2  00B0               	movwf	?___fttol
  2947  0DA3  0008               	return
  2948  0DA4                     l2118:	
  2949  0DA4  3001               	movlw	1
  2950  0DA5                     u3515:	
  2951  0DA5  1003               	clrc
  2952  0DA6  0CBC               	rrf	___fttol@lval+3,f
  2953  0DA7  0CBB               	rrf	___fttol@lval+2,f
  2954  0DA8  0CBA               	rrf	___fttol@lval+1,f
  2955  0DA9  0CB9               	rrf	___fttol@lval,f
  2956  0DAA  3EFF               	addlw	-1
  2957  0DAB  1D03               	skipz
  2958  0DAC  2DA5               	goto	u3515
  2959  0DAD  3001               	movlw	1
  2960  0DAE  00B4               	movwf	??___fttol
  2961  0DAF  0834               	movf	??___fttol,w
  2962  0DB0  07BD               	addwf	___fttol@exp1,f
  2963  0DB1  1903               	btfsc	3,2
  2964  0DB2  2DCF               	goto	l2128
  2965  0DB3  2DA4               	goto	l2118
  2966  0DB4                     l2120:	
  2967  0DB4  3018               	movlw	24
  2968  0DB5  023D               	subwf	___fttol@exp1,w
  2969  0DB6  1C03               	skipc
  2970  0DB7  2DCC               	goto	l674
  2971  0DB8  3000               	movlw	0
  2972  0DB9  00B3               	movwf	?___fttol+3
  2973  0DBA  3000               	movlw	0
  2974  0DBB  00B2               	movwf	?___fttol+2
  2975  0DBC  3000               	movlw	0
  2976  0DBD  00B1               	movwf	?___fttol+1
  2977  0DBE  3000               	movlw	0
  2978  0DBF  00B0               	movwf	?___fttol
  2979  0DC0  0008               	return
  2980  0DC1                     l2126:	
  2981  0DC1  3001               	movlw	1
  2982  0DC2  00B4               	movwf	??___fttol
  2983  0DC3                     u3545:	
  2984  0DC3  1003               	clrc
  2985  0DC4  0DB9               	rlf	___fttol@lval,f
  2986  0DC5  0DBA               	rlf	___fttol@lval+1,f
  2987  0DC6  0DBB               	rlf	___fttol@lval+2,f
  2988  0DC7  0DBC               	rlf	___fttol@lval+3,f
  2989  0DC8  0BB4               	decfsz	??___fttol,f
  2990  0DC9  2DC3               	goto	u3545
  2991  0DCA  3001               	movlw	1
  2992  0DCB  02BD               	subwf	___fttol@exp1,f
  2993  0DCC                     l674:	
  2994  0DCC  083D               	movf	___fttol@exp1,w
  2995  0DCD  1D03               	btfss	3,2
  2996  0DCE  2DC1               	goto	l2126
  2997  0DCF                     l2128:	
  2998  0DCF  0838               	movf	___fttol@sign1,w
  2999  0DD0  1903               	btfsc	3,2
  3000  0DD1  2DDD               	goto	l2132
  3001  0DD2  09B9               	comf	___fttol@lval,f
  3002  0DD3  09BA               	comf	___fttol@lval+1,f
  3003  0DD4  09BB               	comf	___fttol@lval+2,f
  3004  0DD5  09BC               	comf	___fttol@lval+3,f
  3005  0DD6  0AB9               	incf	___fttol@lval,f
  3006  0DD7  1903               	skipnz
  3007  0DD8  0ABA               	incf	___fttol@lval+1,f
  3008  0DD9  1903               	skipnz
  3009  0DDA  0ABB               	incf	___fttol@lval+2,f
  3010  0DDB  1903               	skipnz
  3011  0DDC  0ABC               	incf	___fttol@lval+3,f
  3012  0DDD                     l2132:	
  3013  0DDD  083C               	movf	___fttol@lval+3,w
  3014  0DDE  00B3               	movwf	?___fttol+3
  3015  0DDF  083B               	movf	___fttol@lval+2,w
  3016  0DE0  00B2               	movwf	?___fttol+2
  3017  0DE1  083A               	movf	___fttol@lval+1,w
  3018  0DE2  00B1               	movwf	?___fttol+1
  3019  0DE3  0839               	movf	___fttol@lval,w
  3020  0DE4  00B0               	movwf	?___fttol
  3021  0DE5  0008               	return
  3022  0DE6                     __end_of___fttol:	
  3023                           
  3024                           	psect	text9
  3025  08D3                     __ptext9:	
  3026 ;; *************** function ___ftneg *****************
  3027 ;; Defined at:
  3028 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftneg.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  f1              3    0[BANK0 ] float 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  3    0[BANK0 ] float 
  3035 ;; Registers used:
  3036 ;;		wreg
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3042 ;;      Params:         0       3       0       0       0
  3043 ;;      Locals:         0       0       0       0       0
  3044 ;;      Temps:          0       0       0       0       0
  3045 ;;      Totals:         0       3       0       0       0
  3046 ;;Total ram usage:        3 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; This function calls:
  3049 ;;		Nothing
  3050 ;; This function is called by:
  3051 ;;		_LCD_DisplayFloatNumber
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           
  3056                           ;psect for function ___ftneg
  3057  08D3                     ___ftneg:	
  3058                           
  3059                           ;incstack = 0
  3060                           ; Regs used in ___ftneg: [wreg]
  3061  08D3  1283               	bcf	3,5	;RP0=0, select bank0
  3062  08D4  1303               	bcf	3,6	;RP1=0, select bank0
  3063  08D5  0822               	movf	___ftneg@f1+2,w
  3064  08D6  0421               	iorwf	___ftneg@f1+1,w
  3065  08D7  0420               	iorwf	___ftneg@f1,w
  3066  08D8  1903               	skipnz
  3067  08D9  0008               	return
  3068  08DA  3080               	movlw	128
  3069  08DB  06A2               	xorwf	___ftneg@f1+2,f
  3070  08DC  0008               	return
  3071  08DD                     __end_of___ftneg:	
  3072                           
  3073                           	psect	text10
  3074  0122                     __ptext10:	
  3075 ;; *************** function ___ftmul *****************
  3076 ;; Defined at:
  3077 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftmul.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  f1              3    0[BANK0 ] float 
  3080 ;;  f2              3    3[BANK0 ] float 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  3083 ;;  sign            1   15[BANK0 ] unsigned char 
  3084 ;;  cntr            1   14[BANK0 ] unsigned char 
  3085 ;;  exp             1   10[BANK0 ] unsigned char 
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  3    0[BANK0 ] float 
  3088 ;; Registers used:
  3089 ;;		wreg, status,2, status,0, pclath, cstack
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3095 ;;      Params:         0       6       0       0       0
  3096 ;;      Locals:         0       6       0       0       0
  3097 ;;      Temps:          0       4       0       0       0
  3098 ;;      Totals:         0      16       0       0       0
  3099 ;;Total ram usage:       16 bytes
  3100 ;; Hardware stack levels used:    1
  3101 ;; Hardware stack levels required when called:    1
  3102 ;; This function calls:
  3103 ;;		___ftpack
  3104 ;; This function is called by:
  3105 ;;		_LCD_DisplayFloatNumber
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function ___ftmul
  3112  0122                     ___ftmul:	
  3113                           
  3114                           ;incstack = 0
  3115                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3116  0122  1283               	bcf	3,5	;RP0=0, select bank0
  3117  0123  1303               	bcf	3,6	;RP1=0, select bank0
  3118  0124  0820               	movf	___ftmul@f1,w
  3119  0125  00A6               	movwf	??___ftmul
  3120  0126  0821               	movf	___ftmul@f1+1,w
  3121  0127  00A7               	movwf	??___ftmul+1
  3122  0128  0822               	movf	___ftmul@f1+2,w
  3123  0129  00A8               	movwf	??___ftmul+2
  3124  012A  1003               	clrc
  3125  012B  0D27               	rlf	??___ftmul+1,w
  3126  012C  0D28               	rlf	??___ftmul+2,w
  3127  012D  00A9               	movwf	??___ftmul+3
  3128  012E  0829               	movf	??___ftmul+3,w
  3129  012F  00AA               	movwf	___ftmul@exp
  3130  0130  082A               	movf	___ftmul@exp,w
  3131  0131  1D03               	btfss	3,2
  3132  0132  293A               	goto	l2042
  3133  0133  3000               	movlw	0
  3134  0134  00A0               	movwf	?___ftmul
  3135  0135  3000               	movlw	0
  3136  0136  00A1               	movwf	?___ftmul+1
  3137  0137  3000               	movlw	0
  3138  0138  00A2               	movwf	?___ftmul+2
  3139  0139  0008               	return
  3140  013A                     l2042:	
  3141  013A  0823               	movf	___ftmul@f2,w
  3142  013B  00A6               	movwf	??___ftmul
  3143  013C  0824               	movf	___ftmul@f2+1,w
  3144  013D  00A7               	movwf	??___ftmul+1
  3145  013E  0825               	movf	___ftmul@f2+2,w
  3146  013F  00A8               	movwf	??___ftmul+2
  3147  0140  1003               	clrc
  3148  0141  0D27               	rlf	??___ftmul+1,w
  3149  0142  0D28               	rlf	??___ftmul+2,w
  3150  0143  00A9               	movwf	??___ftmul+3
  3151  0144  0829               	movf	??___ftmul+3,w
  3152  0145  00AF               	movwf	___ftmul@sign
  3153  0146  082F               	movf	___ftmul@sign,w
  3154  0147  1D03               	btfss	3,2
  3155  0148  2950               	goto	l2048
  3156  0149  3000               	movlw	0
  3157  014A  00A0               	movwf	?___ftmul
  3158  014B  3000               	movlw	0
  3159  014C  00A1               	movwf	?___ftmul+1
  3160  014D  3000               	movlw	0
  3161  014E  00A2               	movwf	?___ftmul+2
  3162  014F  0008               	return
  3163  0150                     l2048:	
  3164  0150  082F               	movf	___ftmul@sign,w
  3165  0151  3E7B               	addlw	123
  3166  0152  00A6               	movwf	??___ftmul
  3167  0153  0826               	movf	??___ftmul,w
  3168  0154  07AA               	addwf	___ftmul@exp,f
  3169  0155  0820               	movf	___ftmul@f1,w
  3170  0156  00A6               	movwf	??___ftmul
  3171  0157  0821               	movf	___ftmul@f1+1,w
  3172  0158  00A7               	movwf	??___ftmul+1
  3173  0159  0822               	movf	___ftmul@f1+2,w
  3174  015A  00A8               	movwf	??___ftmul+2
  3175  015B  3010               	movlw	16
  3176  015C                     u3345:	
  3177  015C  1003               	clrc
  3178  015D  0CA8               	rrf	??___ftmul+2,f
  3179  015E  0CA7               	rrf	??___ftmul+1,f
  3180  015F  0CA6               	rrf	??___ftmul,f
  3181  0160  3EFF               	addlw	-1
  3182  0161  1D03               	skipz
  3183  0162  295C               	goto	u3345
  3184  0163  0826               	movf	??___ftmul,w
  3185  0164  00A9               	movwf	??___ftmul+3
  3186  0165  0829               	movf	??___ftmul+3,w
  3187  0166  00AF               	movwf	___ftmul@sign
  3188  0167  0823               	movf	___ftmul@f2,w
  3189  0168  00A6               	movwf	??___ftmul
  3190  0169  0824               	movf	___ftmul@f2+1,w
  3191  016A  00A7               	movwf	??___ftmul+1
  3192  016B  0825               	movf	___ftmul@f2+2,w
  3193  016C  00A8               	movwf	??___ftmul+2
  3194  016D  3010               	movlw	16
  3195  016E                     u3355:	
  3196  016E  1003               	clrc
  3197  016F  0CA8               	rrf	??___ftmul+2,f
  3198  0170  0CA7               	rrf	??___ftmul+1,f
  3199  0171  0CA6               	rrf	??___ftmul,f
  3200  0172  3EFF               	addlw	-1
  3201  0173  1D03               	skipz
  3202  0174  296E               	goto	u3355
  3203  0175  0826               	movf	??___ftmul,w
  3204  0176  00A9               	movwf	??___ftmul+3
  3205  0177  0829               	movf	??___ftmul+3,w
  3206  0178  06AF               	xorwf	___ftmul@sign,f
  3207  0179  3080               	movlw	128
  3208  017A  00A6               	movwf	??___ftmul
  3209  017B  0826               	movf	??___ftmul,w
  3210  017C  05AF               	andwf	___ftmul@sign,f
  3211  017D  17A1               	bsf	___ftmul@f1+1,7
  3212  017E  17A4               	bsf	___ftmul@f2+1,7
  3213  017F  30FF               	movlw	255
  3214  0180  05A3               	andwf	___ftmul@f2,f
  3215  0181  30FF               	movlw	255
  3216  0182  05A4               	andwf	___ftmul@f2+1,f
  3217  0183  3000               	movlw	0
  3218  0184  05A5               	andwf	___ftmul@f2+2,f
  3219  0185  3000               	movlw	0
  3220  0186  00AB               	movwf	___ftmul@f3_as_product
  3221  0187  3000               	movlw	0
  3222  0188  00AC               	movwf	___ftmul@f3_as_product+1
  3223  0189  3000               	movlw	0
  3224  018A  00AD               	movwf	___ftmul@f3_as_product+2
  3225  018B  3007               	movlw	7
  3226  018C  00A6               	movwf	??___ftmul
  3227  018D  0826               	movf	??___ftmul,w
  3228  018E  00AE               	movwf	___ftmul@cntr
  3229  018F                     l2060:	
  3230  018F  1C20               	btfss	___ftmul@f1,0
  3231  0190  299F               	goto	l2064
  3232  0191  0823               	movf	___ftmul@f2,w
  3233  0192  07AB               	addwf	___ftmul@f3_as_product,f
  3234  0193  0824               	movf	___ftmul@f2+1,w
  3235  0194  1103               	clrz
  3236  0195  1803               	skipnc
  3237  0196  0A24               	incf	___ftmul@f2+1,w
  3238  0197  1D03               	btfss	3,2
  3239  0198  07AC               	addwf	___ftmul@f3_as_product+1,f
  3240  0199  0825               	movf	___ftmul@f2+2,w
  3241  019A  1103               	clrz
  3242  019B  1803               	skipnc
  3243  019C  0A25               	incf	___ftmul@f2+2,w
  3244  019D  1D03               	btfss	3,2
  3245  019E  07AD               	addwf	___ftmul@f3_as_product+2,f
  3246  019F                     l2064:	
  3247  019F  3001               	movlw	1
  3248  01A0                     u3385:	
  3249  01A0  1003               	clrc
  3250  01A1  0CA2               	rrf	___ftmul@f1+2,f
  3251  01A2  0CA1               	rrf	___ftmul@f1+1,f
  3252  01A3  0CA0               	rrf	___ftmul@f1,f
  3253  01A4  3EFF               	addlw	-1
  3254  01A5  1D03               	skipz
  3255  01A6  29A0               	goto	u3385
  3256  01A7  3001               	movlw	1
  3257  01A8                     u3395:	
  3258  01A8  1003               	clrc
  3259  01A9  0DA3               	rlf	___ftmul@f2,f
  3260  01AA  0DA4               	rlf	___ftmul@f2+1,f
  3261  01AB  0DA5               	rlf	___ftmul@f2+2,f
  3262  01AC  3EFF               	addlw	-1
  3263  01AD  1D03               	skipz
  3264  01AE  29A8               	goto	u3395
  3265  01AF  3001               	movlw	1
  3266  01B0  02AE               	subwf	___ftmul@cntr,f
  3267  01B1  1D03               	btfss	3,2
  3268  01B2  298F               	goto	l2060
  3269  01B3  3009               	movlw	9
  3270  01B4  00A6               	movwf	??___ftmul
  3271  01B5  0826               	movf	??___ftmul,w
  3272  01B6  00AE               	movwf	___ftmul@cntr
  3273  01B7                     l2072:	
  3274  01B7  1C20               	btfss	___ftmul@f1,0
  3275  01B8  29C7               	goto	l2076
  3276  01B9  0823               	movf	___ftmul@f2,w
  3277  01BA  07AB               	addwf	___ftmul@f3_as_product,f
  3278  01BB  0824               	movf	___ftmul@f2+1,w
  3279  01BC  1103               	clrz
  3280  01BD  1803               	skipnc
  3281  01BE  0A24               	incf	___ftmul@f2+1,w
  3282  01BF  1D03               	btfss	3,2
  3283  01C0  07AC               	addwf	___ftmul@f3_as_product+1,f
  3284  01C1  0825               	movf	___ftmul@f2+2,w
  3285  01C2  1103               	clrz
  3286  01C3  1803               	skipnc
  3287  01C4  0A25               	incf	___ftmul@f2+2,w
  3288  01C5  1D03               	btfss	3,2
  3289  01C6  07AD               	addwf	___ftmul@f3_as_product+2,f
  3290  01C7                     l2076:	
  3291  01C7  3001               	movlw	1
  3292  01C8                     u3435:	
  3293  01C8  1003               	clrc
  3294  01C9  0CA2               	rrf	___ftmul@f1+2,f
  3295  01CA  0CA1               	rrf	___ftmul@f1+1,f
  3296  01CB  0CA0               	rrf	___ftmul@f1,f
  3297  01CC  3EFF               	addlw	-1
  3298  01CD  1D03               	skipz
  3299  01CE  29C8               	goto	u3435
  3300  01CF  3001               	movlw	1
  3301  01D0                     u3445:	
  3302  01D0  1003               	clrc
  3303  01D1  0CAD               	rrf	___ftmul@f3_as_product+2,f
  3304  01D2  0CAC               	rrf	___ftmul@f3_as_product+1,f
  3305  01D3  0CAB               	rrf	___ftmul@f3_as_product,f
  3306  01D4  3EFF               	addlw	-1
  3307  01D5  1D03               	skipz
  3308  01D6  29D0               	goto	u3445
  3309  01D7  3001               	movlw	1
  3310  01D8  02AE               	subwf	___ftmul@cntr,f
  3311  01D9  1D03               	btfss	3,2
  3312  01DA  29B7               	goto	l2072
  3313  01DB  082B               	movf	___ftmul@f3_as_product,w
  3314  01DC  00F0               	movwf	___ftpack@arg
  3315  01DD  082C               	movf	___ftmul@f3_as_product+1,w
  3316  01DE  00F1               	movwf	___ftpack@arg+1
  3317  01DF  082D               	movf	___ftmul@f3_as_product+2,w
  3318  01E0  00F2               	movwf	___ftpack@arg+2
  3319  01E1  082A               	movf	___ftmul@exp,w
  3320  01E2  00A6               	movwf	??___ftmul
  3321  01E3  0826               	movf	??___ftmul,w
  3322  01E4  00F3               	movwf	___ftpack@exp
  3323  01E5  082F               	movf	___ftmul@sign,w
  3324  01E6  00A7               	movwf	??___ftmul+1
  3325  01E7  0827               	movf	??___ftmul+1,w
  3326  01E8  00F4               	movwf	___ftpack@sign
  3327  01E9  120A  158A  23EB   	fcall	___ftpack
  3328  01EC  0870               	movf	?___ftpack,w
  3329  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  3330  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  3331  01EF  00A0               	movwf	?___ftmul
  3332  01F0  0871               	movf	?___ftpack+1,w
  3333  01F1  00A1               	movwf	?___ftmul+1
  3334  01F2  0872               	movf	?___ftpack+2,w
  3335  01F3  00A2               	movwf	?___ftmul+2
  3336  01F4  0008               	return
  3337  01F5                     __end_of___ftmul:	
  3338                           
  3339                           	psect	text11
  3340  0499                     __ptext11:	
  3341 ;; *************** function ___ftadd *****************
  3342 ;; Defined at:
  3343 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftadd.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  f1              3    3[BANK0 ] float 
  3346 ;;  f2              3    6[BANK0 ] float 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  exp1            1   15[BANK0 ] unsigned char 
  3349 ;;  exp2            1   14[BANK0 ] unsigned char 
  3350 ;;  sign            1   13[BANK0 ] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  3    3[BANK0 ] float 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2, status,0, pclath, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3360 ;;      Params:         0       6       0       0       0
  3361 ;;      Locals:         0       3       0       0       0
  3362 ;;      Temps:          0       4       0       0       0
  3363 ;;      Totals:         0      13       0       0       0
  3364 ;;Total ram usage:       13 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    1
  3367 ;; This function calls:
  3368 ;;		___ftpack
  3369 ;; This function is called by:
  3370 ;;		_LCD_DisplayFloatNumber
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           
  3375                           ;psect for function ___ftadd
  3376  0499                     ___ftadd:	
  3377                           
  3378                           ;incstack = 0
  3379                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3380  0499  1283               	bcf	3,5	;RP0=0, select bank0
  3381  049A  1303               	bcf	3,6	;RP1=0, select bank0
  3382  049B  0823               	movf	___ftadd@f1,w
  3383  049C  00A9               	movwf	??___ftadd
  3384  049D  0824               	movf	___ftadd@f1+1,w
  3385  049E  00AA               	movwf	??___ftadd+1
  3386  049F  0825               	movf	___ftadd@f1+2,w
  3387  04A0  00AB               	movwf	??___ftadd+2
  3388  04A1  1003               	clrc
  3389  04A2  0D2A               	rlf	??___ftadd+1,w
  3390  04A3  0D2B               	rlf	??___ftadd+2,w
  3391  04A4  00AC               	movwf	??___ftadd+3
  3392  04A5  082C               	movf	??___ftadd+3,w
  3393  04A6  00AF               	movwf	___ftadd@exp1
  3394  04A7  0826               	movf	___ftadd@f2,w
  3395  04A8  00A9               	movwf	??___ftadd
  3396  04A9  0827               	movf	___ftadd@f2+1,w
  3397  04AA  00AA               	movwf	??___ftadd+1
  3398  04AB  0828               	movf	___ftadd@f2+2,w
  3399  04AC  00AB               	movwf	??___ftadd+2
  3400  04AD  1003               	clrc
  3401  04AE  0D2A               	rlf	??___ftadd+1,w
  3402  04AF  0D2B               	rlf	??___ftadd+2,w
  3403  04B0  00AC               	movwf	??___ftadd+3
  3404  04B1  082C               	movf	??___ftadd+3,w
  3405  04B2  00AE               	movwf	___ftadd@exp2
  3406  04B3  082F               	movf	___ftadd@exp1,w
  3407  04B4  1903               	btfsc	3,2
  3408  04B5  2CC2               	goto	l1972
  3409  04B6  082E               	movf	___ftadd@exp2,w
  3410  04B7  022F               	subwf	___ftadd@exp1,w
  3411  04B8  1803               	skipnc
  3412  04B9  2CC9               	goto	l1976
  3413  04BA  032F               	decf	___ftadd@exp1,w
  3414  04BB  3AFF               	xorlw	255
  3415  04BC  072E               	addwf	___ftadd@exp2,w
  3416  04BD  00A9               	movwf	??___ftadd
  3417  04BE  3019               	movlw	25
  3418  04BF  0229               	subwf	??___ftadd,w
  3419  04C0  1C03               	skipc
  3420  04C1  2CC9               	goto	l1976
  3421  04C2                     l1972:	
  3422  04C2  0826               	movf	___ftadd@f2,w
  3423  04C3  00A3               	movwf	?___ftadd
  3424  04C4  0827               	movf	___ftadd@f2+1,w
  3425  04C5  00A4               	movwf	?___ftadd+1
  3426  04C6  0828               	movf	___ftadd@f2+2,w
  3427  04C7  00A5               	movwf	?___ftadd+2
  3428  04C8  0008               	return
  3429  04C9                     l1976:	
  3430  04C9  082E               	movf	___ftadd@exp2,w
  3431  04CA  1903               	btfsc	3,2
  3432  04CB  0008               	return
  3433  04CC  082F               	movf	___ftadd@exp1,w
  3434  04CD  022E               	subwf	___ftadd@exp2,w
  3435  04CE  1803               	skipnc
  3436  04CF  2CD8               	goto	l1982
  3437  04D0  032E               	decf	___ftadd@exp2,w
  3438  04D1  3AFF               	xorlw	255
  3439  04D2  072F               	addwf	___ftadd@exp1,w
  3440  04D3  00A9               	movwf	??___ftadd
  3441  04D4  3019               	movlw	25
  3442  04D5  0229               	subwf	??___ftadd,w
  3443  04D6  1803               	btfsc	3,0
  3444  04D7  0008               	return
  3445  04D8                     l1982:	
  3446  04D8  3006               	movlw	6
  3447  04D9  00A9               	movwf	??___ftadd
  3448  04DA  0829               	movf	??___ftadd,w
  3449  04DB  00AD               	movwf	___ftadd@sign
  3450  04DC  1BA5               	btfsc	___ftadd@f1+2,7
  3451  04DD  17AD               	bsf	___ftadd@sign,7
  3452  04DE  1BA8               	btfsc	___ftadd@f2+2,7
  3453  04DF  172D               	bsf	___ftadd@sign,6
  3454  04E0  17A4               	bsf	___ftadd@f1+1,7
  3455  04E1  30FF               	movlw	255
  3456  04E2  05A3               	andwf	___ftadd@f1,f
  3457  04E3  30FF               	movlw	255
  3458  04E4  05A4               	andwf	___ftadd@f1+1,f
  3459  04E5  3000               	movlw	0
  3460  04E6  05A5               	andwf	___ftadd@f1+2,f
  3461  04E7  17A7               	bsf	___ftadd@f2+1,7
  3462  04E8  30FF               	movlw	255
  3463  04E9  05A6               	andwf	___ftadd@f2,f
  3464  04EA  30FF               	movlw	255
  3465  04EB  05A7               	andwf	___ftadd@f2+1,f
  3466  04EC  3000               	movlw	0
  3467  04ED  05A8               	andwf	___ftadd@f2+2,f
  3468  04EE  082E               	movf	___ftadd@exp2,w
  3469  04EF  022F               	subwf	___ftadd@exp1,w
  3470  04F0  1803               	skipnc
  3471  04F1  2D18               	goto	l2004
  3472  04F2                     l1994:	
  3473  04F2  3001               	movlw	1
  3474  04F3                     u3175:	
  3475  04F3  1003               	clrc
  3476  04F4  0DA6               	rlf	___ftadd@f2,f
  3477  04F5  0DA7               	rlf	___ftadd@f2+1,f
  3478  04F6  0DA8               	rlf	___ftadd@f2+2,f
  3479  04F7  3EFF               	addlw	-1
  3480  04F8  1D03               	skipz
  3481  04F9  2CF3               	goto	u3175
  3482  04FA  3001               	movlw	1
  3483  04FB  02AE               	subwf	___ftadd@exp2,f
  3484  04FC  082E               	movf	___ftadd@exp2,w
  3485  04FD  062F               	xorwf	___ftadd@exp1,w
  3486  04FE  1903               	skipnz
  3487  04FF  2D13               	goto	l2002
  3488  0500  3001               	movlw	1
  3489  0501  02AD               	subwf	___ftadd@sign,f
  3490  0502  082D               	movf	___ftadd@sign,w
  3491  0503  3907               	andlw	7
  3492  0504  1903               	btfsc	3,2
  3493  0505  2D13               	goto	l2002
  3494  0506  2CF2               	goto	l1994
  3495  0507                     l2000:	
  3496  0507  3001               	movlw	1
  3497  0508                     u3205:	
  3498  0508  1003               	clrc
  3499  0509  0CA5               	rrf	___ftadd@f1+2,f
  3500  050A  0CA4               	rrf	___ftadd@f1+1,f
  3501  050B  0CA3               	rrf	___ftadd@f1,f
  3502  050C  3EFF               	addlw	-1
  3503  050D  1D03               	skipz
  3504  050E  2D08               	goto	u3205
  3505  050F  3001               	movlw	1
  3506  0510  00A9               	movwf	??___ftadd
  3507  0511  0829               	movf	??___ftadd,w
  3508  0512  07AF               	addwf	___ftadd@exp1,f
  3509  0513                     l2002:	
  3510  0513  082F               	movf	___ftadd@exp1,w
  3511  0514  062E               	xorwf	___ftadd@exp2,w
  3512  0515  1903               	btfsc	3,2
  3513  0516  2D41               	goto	l614
  3514  0517  2D07               	goto	l2000
  3515  0518                     l2004:	
  3516  0518  082F               	movf	___ftadd@exp1,w
  3517  0519  022E               	subwf	___ftadd@exp2,w
  3518  051A  1803               	skipnc
  3519  051B  2D41               	goto	l614
  3520  051C                     l2006:	
  3521  051C  3001               	movlw	1
  3522  051D                     u3235:	
  3523  051D  1003               	clrc
  3524  051E  0DA3               	rlf	___ftadd@f1,f
  3525  051F  0DA4               	rlf	___ftadd@f1+1,f
  3526  0520  0DA5               	rlf	___ftadd@f1+2,f
  3527  0521  3EFF               	addlw	-1
  3528  0522  1D03               	skipz
  3529  0523  2D1D               	goto	u3235
  3530  0524  3001               	movlw	1
  3531  0525  02AF               	subwf	___ftadd@exp1,f
  3532  0526  082E               	movf	___ftadd@exp2,w
  3533  0527  062F               	xorwf	___ftadd@exp1,w
  3534  0528  1903               	skipnz
  3535  0529  2D3D               	goto	l2014
  3536  052A  3001               	movlw	1
  3537  052B  02AD               	subwf	___ftadd@sign,f
  3538  052C  082D               	movf	___ftadd@sign,w
  3539  052D  3907               	andlw	7
  3540  052E  1903               	btfsc	3,2
  3541  052F  2D3D               	goto	l2014
  3542  0530  2D1C               	goto	l2006
  3543  0531                     l2012:	
  3544  0531  3001               	movlw	1
  3545  0532                     u3265:	
  3546  0532  1003               	clrc
  3547  0533  0CA8               	rrf	___ftadd@f2+2,f
  3548  0534  0CA7               	rrf	___ftadd@f2+1,f
  3549  0535  0CA6               	rrf	___ftadd@f2,f
  3550  0536  3EFF               	addlw	-1
  3551  0537  1D03               	skipz
  3552  0538  2D32               	goto	u3265
  3553  0539  3001               	movlw	1
  3554  053A  00A9               	movwf	??___ftadd
  3555  053B  0829               	movf	??___ftadd,w
  3556  053C  07AE               	addwf	___ftadd@exp2,f
  3557  053D                     l2014:	
  3558  053D  082F               	movf	___ftadd@exp1,w
  3559  053E  062E               	xorwf	___ftadd@exp2,w
  3560  053F  1D03               	skipz
  3561  0540  2D31               	goto	l2012
  3562  0541                     l614:	
  3563  0541  1FAD               	btfss	___ftadd@sign,7
  3564  0542  2D53               	goto	l2018
  3565  0543  30FF               	movlw	255
  3566  0544  06A3               	xorwf	___ftadd@f1,f
  3567  0545  30FF               	movlw	255
  3568  0546  06A4               	xorwf	___ftadd@f1+1,f
  3569  0547  30FF               	movlw	255
  3570  0548  06A5               	xorwf	___ftadd@f1+2,f
  3571  0549  3001               	movlw	1
  3572  054A  07A3               	addwf	___ftadd@f1,f
  3573  054B  3000               	movlw	0
  3574  054C  1803               	skipnc
  3575  054D  3001               	movlw	1
  3576  054E  07A4               	addwf	___ftadd@f1+1,f
  3577  054F  3000               	movlw	0
  3578  0550  1803               	skipnc
  3579  0551  3001               	movlw	1
  3580  0552  07A5               	addwf	___ftadd@f1+2,f
  3581  0553                     l2018:	
  3582  0553  1F2D               	btfss	___ftadd@sign,6
  3583  0554  2D65               	goto	l2022
  3584  0555  30FF               	movlw	255
  3585  0556  06A6               	xorwf	___ftadd@f2,f
  3586  0557  30FF               	movlw	255
  3587  0558  06A7               	xorwf	___ftadd@f2+1,f
  3588  0559  30FF               	movlw	255
  3589  055A  06A8               	xorwf	___ftadd@f2+2,f
  3590  055B  3001               	movlw	1
  3591  055C  07A6               	addwf	___ftadd@f2,f
  3592  055D  3000               	movlw	0
  3593  055E  1803               	skipnc
  3594  055F  3001               	movlw	1
  3595  0560  07A7               	addwf	___ftadd@f2+1,f
  3596  0561  3000               	movlw	0
  3597  0562  1803               	skipnc
  3598  0563  3001               	movlw	1
  3599  0564  07A8               	addwf	___ftadd@f2+2,f
  3600  0565                     l2022:	
  3601  0565  01AD               	clrf	___ftadd@sign
  3602  0566  0823               	movf	___ftadd@f1,w
  3603  0567  07A6               	addwf	___ftadd@f2,f
  3604  0568  0824               	movf	___ftadd@f1+1,w
  3605  0569  1103               	clrz
  3606  056A  1803               	skipnc
  3607  056B  0A24               	incf	___ftadd@f1+1,w
  3608  056C  1D03               	btfss	3,2
  3609  056D  07A7               	addwf	___ftadd@f2+1,f
  3610  056E  0825               	movf	___ftadd@f1+2,w
  3611  056F  1103               	clrz
  3612  0570  1803               	skipnc
  3613  0571  0A25               	incf	___ftadd@f1+2,w
  3614  0572  1D03               	btfss	3,2
  3615  0573  07A8               	addwf	___ftadd@f2+2,f
  3616  0574  1FA8               	btfss	___ftadd@f2+2,7
  3617  0575  2D88               	goto	l2032
  3618  0576  30FF               	movlw	255
  3619  0577  06A6               	xorwf	___ftadd@f2,f
  3620  0578  30FF               	movlw	255
  3621  0579  06A7               	xorwf	___ftadd@f2+1,f
  3622  057A  30FF               	movlw	255
  3623  057B  06A8               	xorwf	___ftadd@f2+2,f
  3624  057C  3001               	movlw	1
  3625  057D  07A6               	addwf	___ftadd@f2,f
  3626  057E  3000               	movlw	0
  3627  057F  1803               	skipnc
  3628  0580  3001               	movlw	1
  3629  0581  07A7               	addwf	___ftadd@f2+1,f
  3630  0582  3000               	movlw	0
  3631  0583  1803               	skipnc
  3632  0584  3001               	movlw	1
  3633  0585  07A8               	addwf	___ftadd@f2+2,f
  3634  0586  01AD               	clrf	___ftadd@sign
  3635  0587  0AAD               	incf	___ftadd@sign,f
  3636  0588                     l2032:	
  3637  0588  0826               	movf	___ftadd@f2,w
  3638  0589  00F0               	movwf	___ftpack@arg
  3639  058A  0827               	movf	___ftadd@f2+1,w
  3640  058B  00F1               	movwf	___ftpack@arg+1
  3641  058C  0828               	movf	___ftadd@f2+2,w
  3642  058D  00F2               	movwf	___ftpack@arg+2
  3643  058E  082F               	movf	___ftadd@exp1,w
  3644  058F  00A9               	movwf	??___ftadd
  3645  0590  0829               	movf	??___ftadd,w
  3646  0591  00F3               	movwf	___ftpack@exp
  3647  0592  082D               	movf	___ftadd@sign,w
  3648  0593  00AA               	movwf	??___ftadd+1
  3649  0594  082A               	movf	??___ftadd+1,w
  3650  0595  00F4               	movwf	___ftpack@sign
  3651  0596  120A  158A  23EB   	fcall	___ftpack
  3652  0599  0870               	movf	?___ftpack,w
  3653  059A  1283               	bcf	3,5	;RP0=0, select bank0
  3654  059B  1303               	bcf	3,6	;RP1=0, select bank0
  3655  059C  00A3               	movwf	?___ftadd
  3656  059D  0871               	movf	?___ftpack+1,w
  3657  059E  00A4               	movwf	?___ftadd+1
  3658  059F  0872               	movf	?___ftpack+2,w
  3659  05A0  00A5               	movwf	?___ftadd+2
  3660  05A1  0008               	return
  3661  05A2                     __end_of___ftadd:	
  3662                           
  3663                           	psect	text12
  3664  0BEB                     __ptext12:	
  3665 ;; *************** function ___ftpack *****************
  3666 ;; Defined at:
  3667 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\float.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;  arg             3    0[COMMON] unsigned um
  3670 ;;  exp             1    3[COMMON] unsigned char 
  3671 ;;  sign            1    4[COMMON] unsigned char 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;		None
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  3    0[COMMON] float 
  3676 ;; Registers used:
  3677 ;;		wreg, status,2, status,0
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3683 ;;      Params:         5       0       0       0       0
  3684 ;;      Locals:         0       0       0       0       0
  3685 ;;      Temps:          3       0       0       0       0
  3686 ;;      Totals:         8       0       0       0       0
  3687 ;;Total ram usage:        8 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; This function calls:
  3690 ;;		Nothing
  3691 ;; This function is called by:
  3692 ;;		___awtoft
  3693 ;;		___ftadd
  3694 ;;		___ftdiv
  3695 ;;		___ftmul
  3696 ;;		___lltoft
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           
  3701                           ;psect for function ___ftpack
  3702  0BEB                     ___ftpack:	
  3703                           
  3704                           ;incstack = 0
  3705                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3706  0BEB  0873               	movf	___ftpack@exp,w
  3707  0BEC  1903               	btfsc	3,2
  3708  0BED  2BF3               	goto	l1856
  3709  0BEE  0872               	movf	___ftpack@arg+2,w
  3710  0BEF  0471               	iorwf	___ftpack@arg+1,w
  3711  0BF0  0470               	iorwf	___ftpack@arg,w
  3712  0BF1  1D03               	skipz
  3713  0BF2  2C06               	goto	l1862
  3714  0BF3                     l1856:	
  3715  0BF3  3000               	movlw	0
  3716  0BF4  00F0               	movwf	?___ftpack
  3717  0BF5  3000               	movlw	0
  3718  0BF6  00F1               	movwf	?___ftpack+1
  3719  0BF7  3000               	movlw	0
  3720  0BF8  00F2               	movwf	?___ftpack+2
  3721  0BF9  0008               	return
  3722  0BFA                     l1860:	
  3723  0BFA  3001               	movlw	1
  3724  0BFB  00F5               	movwf	??___ftpack
  3725  0BFC  0875               	movf	??___ftpack,w
  3726  0BFD  07F3               	addwf	___ftpack@exp,f
  3727  0BFE  3001               	movlw	1
  3728  0BFF                     u2785:	
  3729  0BFF  1003               	clrc
  3730  0C00  0CF2               	rrf	___ftpack@arg+2,f
  3731  0C01  0CF1               	rrf	___ftpack@arg+1,f
  3732  0C02  0CF0               	rrf	___ftpack@arg,f
  3733  0C03  3EFF               	addlw	-1
  3734  0C04  1D03               	skipz
  3735  0C05  2BFF               	goto	u2785
  3736  0C06                     l1862:	
  3737  0C06  30FE               	movlw	254
  3738  0C07  0572               	andwf	___ftpack@arg+2,w
  3739  0C08  1903               	btfsc	3,2
  3740  0C09  2C21               	goto	l583
  3741  0C0A  2BFA               	goto	l1860
  3742  0C0B                     l1864:	
  3743  0C0B  3001               	movlw	1
  3744  0C0C  00F5               	movwf	??___ftpack
  3745  0C0D  0875               	movf	??___ftpack,w
  3746  0C0E  07F3               	addwf	___ftpack@exp,f
  3747  0C0F  3001               	movlw	1
  3748  0C10  07F0               	addwf	___ftpack@arg,f
  3749  0C11  3000               	movlw	0
  3750  0C12  1803               	skipnc
  3751  0C13  3001               	movlw	1
  3752  0C14  07F1               	addwf	___ftpack@arg+1,f
  3753  0C15  3000               	movlw	0
  3754  0C16  1803               	skipnc
  3755  0C17  3001               	movlw	1
  3756  0C18  07F2               	addwf	___ftpack@arg+2,f
  3757  0C19  3001               	movlw	1
  3758  0C1A                     u2805:	
  3759  0C1A  1003               	clrc
  3760  0C1B  0CF2               	rrf	___ftpack@arg+2,f
  3761  0C1C  0CF1               	rrf	___ftpack@arg+1,f
  3762  0C1D  0CF0               	rrf	___ftpack@arg,f
  3763  0C1E  3EFF               	addlw	-1
  3764  0C1F  1D03               	skipz
  3765  0C20  2C1A               	goto	u2805
  3766  0C21                     l583:	
  3767  0C21  30FF               	movlw	255
  3768  0C22  0572               	andwf	___ftpack@arg+2,w
  3769  0C23  1903               	btfsc	3,2
  3770  0C24  2C30               	goto	l1872
  3771  0C25  2C0B               	goto	l1864
  3772  0C26                     l1870:	
  3773  0C26  3001               	movlw	1
  3774  0C27  02F3               	subwf	___ftpack@exp,f
  3775  0C28  3001               	movlw	1
  3776  0C29                     u2825:	
  3777  0C29  1003               	clrc
  3778  0C2A  0DF0               	rlf	___ftpack@arg,f
  3779  0C2B  0DF1               	rlf	___ftpack@arg+1,f
  3780  0C2C  0DF2               	rlf	___ftpack@arg+2,f
  3781  0C2D  3EFF               	addlw	-1
  3782  0C2E  1D03               	skipz
  3783  0C2F  2C29               	goto	u2825
  3784  0C30                     l1872:	
  3785  0C30  1BF1               	btfsc	___ftpack@arg+1,7
  3786  0C31  2C36               	goto	l590
  3787  0C32  3002               	movlw	2
  3788  0C33  0273               	subwf	___ftpack@exp,w
  3789  0C34  1803               	skipnc
  3790  0C35  2C26               	goto	l1870
  3791  0C36                     l590:	
  3792  0C36  1873               	btfsc	___ftpack@exp,0
  3793  0C37  2C3E               	goto	l591
  3794  0C38  30FF               	movlw	255
  3795  0C39  05F0               	andwf	___ftpack@arg,f
  3796  0C3A  307F               	movlw	127
  3797  0C3B  05F1               	andwf	___ftpack@arg+1,f
  3798  0C3C  30FF               	movlw	255
  3799  0C3D  05F2               	andwf	___ftpack@arg+2,f
  3800  0C3E                     l591:	
  3801  0C3E  1003               	clrc
  3802  0C3F  0CF3               	rrf	___ftpack@exp,f
  3803  0C40  0873               	movf	___ftpack@exp,w
  3804  0C41  00F5               	movwf	??___ftpack
  3805  0C42  01F6               	clrf	??___ftpack+1
  3806  0C43  01F7               	clrf	??___ftpack+2
  3807  0C44  3010               	movlw	16
  3808  0C45                     u2865:	
  3809  0C45  1003               	clrc
  3810  0C46  0DF5               	rlf	??___ftpack,f
  3811  0C47  0DF6               	rlf	??___ftpack+1,f
  3812  0C48  0DF7               	rlf	??___ftpack+2,f
  3813  0C49  3EFF               	addlw	-1
  3814  0C4A  1D03               	skipz
  3815  0C4B  2C45               	goto	u2865
  3816  0C4C  0875               	movf	??___ftpack,w
  3817  0C4D  04F0               	iorwf	___ftpack@arg,f
  3818  0C4E  0876               	movf	??___ftpack+1,w
  3819  0C4F  04F1               	iorwf	___ftpack@arg+1,f
  3820  0C50  0877               	movf	??___ftpack+2,w
  3821  0C51  04F2               	iorwf	___ftpack@arg+2,f
  3822  0C52  0874               	movf	___ftpack@sign,w
  3823  0C53  1903               	btfsc	3,2
  3824  0C54  0008               	return
  3825  0C55  17F2               	bsf	___ftpack@arg+2,7
  3826  0C56  0008               	return
  3827  0C57                     __end_of___ftpack:	
  3828                           
  3829                           	psect	text13
  3830  03A7                     __ptext13:	
  3831 ;; *************** function _LCD_DisplayNumber *****************
  3832 ;; Defined at:
  3833 ;;		line 523 in file "../00-libfiles/lcd.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  v_numericSys    1    wreg     unsigned char 
  3836 ;;  v_number_u32    4    4[BANK0 ] unsigned long 
  3837 ;;  v_numOfDigit    1    8[BANK0 ] unsigned char 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  v_numericSys    1   33[BANK0 ] unsigned char 
  3840 ;;  a              10   21[BANK0 ] unsigned char [10]
  3841 ;;  i               1   34[BANK0 ] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3851 ;;      Params:         0       5       0       0       0
  3852 ;;      Locals:         0      14       0       0       0
  3853 ;;      Temps:          0      12       0       0       0
  3854 ;;      Totals:         0      31       0       0       0
  3855 ;;Total ram usage:       31 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    6
  3858 ;; This function calls:
  3859 ;;		_LCD_DisplayChar
  3860 ;;		___bmul
  3861 ;;		___lldiv
  3862 ;; This function is called by:
  3863 ;;		_LCD_DisplayFloatNumber
  3864 ;;		_LCD_Printf
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           
  3869                           ;psect for function _LCD_DisplayNumber
  3870  03A7                     _LCD_DisplayNumber:	
  3871                           
  3872                           ;incstack = 0
  3873                           ; Regs used in _LCD_DisplayNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3874                           ;LCD_DisplayNumber@v_numericSystem_u8 stored from wreg
  3875  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  3876  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  3877  03A9  00C1               	movwf	LCD_DisplayNumber@v_numericSystem_u8
  3878                           
  3879                           ;lcd.c: 525: uint8_t i=0,a[10];
  3880  03AA  01C2               	clrf	LCD_DisplayNumber@i
  3881                           
  3882                           ;lcd.c: 527: if(2u == v_numericSystem_u8)
  3883  03AB  3002               	movlw	2
  3884  03AC  0641               	xorwf	LCD_DisplayNumber@v_numericSystem_u8,w
  3885  03AD  1903               	btfsc	3,2
  3886  03AE  2BEE               	goto	l1928
  3887  03AF  2BF2               	goto	l1930
  3888  03B0                     l1922:	
  3889                           ;lcd.c: 528: {
  3890                           ;lcd.c: 529: while(v_numOfDigitsToDisplay_u8!=0)
  3891                           
  3892                           
  3893                           ;lcd.c: 530: {
  3894                           ;lcd.c: 533: i = (((v_number_u32)&((1<<((v_numOfDigitsToDisplay_u8-1)))))!=0u);
  3895  03B0  0824               	movf	LCD_DisplayNumber@v_number_u32,w
  3896  03B1  00A9               	movwf	??_LCD_DisplayNumber
  3897  03B2  0825               	movf	LCD_DisplayNumber@v_number_u32+1,w
  3898  03B3  00AA               	movwf	??_LCD_DisplayNumber+1
  3899  03B4  0826               	movf	LCD_DisplayNumber@v_number_u32+2,w
  3900  03B5  00AB               	movwf	??_LCD_DisplayNumber+2
  3901  03B6  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  3902  03B7  00AC               	movwf	??_LCD_DisplayNumber+3
  3903  03B8  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  3904  03B9  3EFF               	addlw	-1
  3905  03BA  00AD               	movwf	??_LCD_DisplayNumber+4
  3906  03BB  0AAD               	incf	??_LCD_DisplayNumber+4,f
  3907  03BC  3001               	movlw	1
  3908  03BD  00AE               	movwf	??_LCD_DisplayNumber+5
  3909  03BE  3000               	movlw	0
  3910  03BF  00AF               	movwf	??_LCD_DisplayNumber+6
  3911  03C0  2BC4               	goto	u2974
  3912  03C1                     u2975:	
  3913  03C1  1003               	clrc
  3914  03C2  0DAE               	rlf	??_LCD_DisplayNumber+5,f
  3915  03C3  0DAF               	rlf	??_LCD_DisplayNumber+6,f
  3916  03C4                     u2974:	
  3917  03C4  0BAD               	decfsz	??_LCD_DisplayNumber+4,f
  3918  03C5  2BC1               	goto	u2975
  3919  03C6  082E               	movf	??_LCD_DisplayNumber+5,w
  3920  03C7  00B0               	movwf	??_LCD_DisplayNumber+7
  3921  03C8  082F               	movf	??_LCD_DisplayNumber+6,w
  3922  03C9  00B1               	movwf	??_LCD_DisplayNumber+8
  3923  03CA  3000               	movlw	0
  3924  03CB  1BB1               	btfsc	??_LCD_DisplayNumber+8,7
  3925  03CC  30FF               	movlw	255
  3926  03CD  00B2               	movwf	??_LCD_DisplayNumber+9
  3927  03CE  00B3               	movwf	??_LCD_DisplayNumber+10
  3928  03CF  0830               	movf	??_LCD_DisplayNumber+7,w
  3929  03D0  05A9               	andwf	??_LCD_DisplayNumber,f
  3930  03D1  0831               	movf	??_LCD_DisplayNumber+8,w
  3931  03D2  05AA               	andwf	??_LCD_DisplayNumber+1,f
  3932  03D3  0832               	movf	??_LCD_DisplayNumber+9,w
  3933  03D4  05AB               	andwf	??_LCD_DisplayNumber+2,f
  3934  03D5  0833               	movf	??_LCD_DisplayNumber+10,w
  3935  03D6  05AC               	andwf	??_LCD_DisplayNumber+3,f
  3936  03D7  082C               	movf	??_LCD_DisplayNumber+3,w
  3937  03D8  042B               	iorwf	??_LCD_DisplayNumber+2,w
  3938  03D9  042A               	iorwf	??_LCD_DisplayNumber+1,w
  3939  03DA  0429               	iorwf	??_LCD_DisplayNumber,w
  3940  03DB  1903               	btfsc	3,2
  3941  03DC  2BDF               	goto	u2980
  3942  03DD  3001               	movlw	1
  3943  03DE  2BE0               	goto	u2990
  3944  03DF                     u2980:	
  3945  03DF  3000               	movlw	0
  3946  03E0                     u2990:	
  3947  03E0  00B4               	movwf	??_LCD_DisplayNumber+11
  3948  03E1  0834               	movf	??_LCD_DisplayNumber+11,w
  3949  03E2  00C2               	movwf	LCD_DisplayNumber@i
  3950                           
  3951                           ;lcd.c: 534: LCD_DisplayChar(((i)+0x30));
  3952  03E3  0842               	movf	LCD_DisplayNumber@i,w
  3953  03E4  3E30               	addlw	48
  3954  03E5  120A  158A  2157  120A  118A  	fcall	_LCD_DisplayChar
  3955                           
  3956                           ;lcd.c: 535: v_numOfDigitsToDisplay_u8--;
  3957  03EA  3001               	movlw	1
  3958  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  3959  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  3960  03ED  02A8               	subwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,f
  3961  03EE                     l1928:	
  3962  03EE  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  3963  03EF  1903               	btfsc	3,2
  3964  03F0  0008               	return
  3965  03F1  2BB0               	goto	l1922
  3966  03F2                     l1930:	
  3967                           ;lcd.c: 536: }
  3968                           ;lcd.c: 537: }
  3969                           
  3970                           
  3971                           ;lcd.c: 538: else if(v_number_u32==0)
  3972  03F2  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  3973  03F3  0426               	iorwf	LCD_DisplayNumber@v_number_u32+2,w
  3974  03F4  0425               	iorwf	LCD_DisplayNumber@v_number_u32+1,w
  3975  03F5  0424               	iorwf	LCD_DisplayNumber@v_number_u32,w
  3976  03F6  1D03               	skipz
  3977  03F7  2BFD               	goto	l1934
  3978                           
  3979                           ;lcd.c: 539: {
  3980                           ;lcd.c: 542: LCD_DisplayChar('0');
  3981  03F8  3030               	movlw	48
  3982  03F9  120A  158A  2157   	fcall	_LCD_DisplayChar
  3983                           
  3984                           ;lcd.c: 543: }
  3985  03FC  0008               	return
  3986  03FD                     l1934:	
  3987                           
  3988                           ;lcd.c: 544: else
  3989                           ;lcd.c: 545: {
  3990                           ;lcd.c: 546: for(i=0;i<v_numOfDigitsToDisplay_u8;i++)
  3991  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  3992  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  3993  03FF  01C2               	clrf	LCD_DisplayNumber@i
  3994  0400                     l1952:	
  3995  0400  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  3996  0401  0242               	subwf	LCD_DisplayNumber@i,w
  3997  0402  1803               	btfsc	3,0
  3998  0403  2C95               	goto	l1964
  3999                           
  4000                           ;lcd.c: 547: {
  4001                           ;lcd.c: 550: if(v_number_u32!=0)
  4002  0404  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  4003  0405  0426               	iorwf	LCD_DisplayNumber@v_number_u32+2,w
  4004  0406  0425               	iorwf	LCD_DisplayNumber@v_number_u32+1,w
  4005  0407  0424               	iorwf	LCD_DisplayNumber@v_number_u32,w
  4006  0408  1903               	skipnz
  4007  0409  2C5F               	goto	l1942
  4008                           
  4009                           ;lcd.c: 551: {
  4010                           ;lcd.c: 558: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u3
      +                          2/v_numericSystem_u8)));
  4011  040A  0841               	movf	LCD_DisplayNumber@v_numericSystem_u8,w
  4012  040B  00A9               	movwf	??_LCD_DisplayNumber
  4013  040C  0829               	movf	??_LCD_DisplayNumber,w
  4014  040D  00A0               	movwf	___bmul@multiplicand
  4015  040E  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  4016  040F  00F7               	movwf	___lldiv@dividend+3
  4017  0410  0826               	movf	LCD_DisplayNumber@v_number_u32+2,w
  4018  0411  00F6               	movwf	___lldiv@dividend+2
  4019  0412  0825               	movf	LCD_DisplayNumber@v_number_u32+1,w
  4020  0413  00F5               	movwf	___lldiv@dividend+1
  4021  0414  0824               	movf	LCD_DisplayNumber@v_number_u32,w
  4022  0415  00F4               	movwf	___lldiv@dividend
  4023  0416  0841               	movf	LCD_DisplayNumber@v_numericSystem_u8,w
  4024  0417  00AA               	movwf	??_LCD_DisplayNumber+1
  4025  0418  01AB               	clrf	??_LCD_DisplayNumber+2
  4026  0419  01AC               	clrf	??_LCD_DisplayNumber+3
  4027  041A  01AD               	clrf	??_LCD_DisplayNumber+4
  4028  041B  082D               	movf	??_LCD_DisplayNumber+4,w
  4029  041C  00F3               	movwf	___lldiv@divisor+3
  4030  041D  082C               	movf	??_LCD_DisplayNumber+3,w
  4031  041E  00F2               	movwf	___lldiv@divisor+2
  4032  041F  082B               	movf	??_LCD_DisplayNumber+2,w
  4033  0420  00F1               	movwf	___lldiv@divisor+1
  4034  0421  082A               	movf	??_LCD_DisplayNumber+1,w
  4035  0422  00F0               	movwf	___lldiv@divisor
  4036  0423  120A  158A  238D  120A  118A  	fcall	___lldiv
  4037  0428  0870               	movf	?___lldiv,w
  4038  0429  120A  158A  20E8  120A  118A  	fcall	___bmul
  4039  042E  3AFF               	xorlw	255
  4040  042F  3E01               	addlw	1
  4041  0430  1283               	bcf	3,5	;RP0=0, select bank0
  4042  0431  1303               	bcf	3,6	;RP1=0, select bank0
  4043  0432  0724               	addwf	LCD_DisplayNumber@v_number_u32,w
  4044  0433  00AE               	movwf	??_LCD_DisplayNumber+5
  4045  0434  0842               	movf	LCD_DisplayNumber@i,w
  4046  0435  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  4047  0436  0084               	movwf	4
  4048  0437  082E               	movf	??_LCD_DisplayNumber+5,w
  4049  0438  1383               	bcf	3,7	;select IRP bank0
  4050  0439  0080               	movwf	0
  4051                           
  4052                           ;lcd.c: 559: v_number_u32=v_number_u32/v_numericSystem_u8;
  4053  043A  0841               	movf	LCD_DisplayNumber@v_numericSystem_u8,w
  4054  043B  00A9               	movwf	??_LCD_DisplayNumber
  4055  043C  01AA               	clrf	??_LCD_DisplayNumber+1
  4056  043D  01AB               	clrf	??_LCD_DisplayNumber+2
  4057  043E  01AC               	clrf	??_LCD_DisplayNumber+3
  4058  043F  082C               	movf	??_LCD_DisplayNumber+3,w
  4059  0440  00F3               	movwf	___lldiv@divisor+3
  4060  0441  082B               	movf	??_LCD_DisplayNumber+2,w
  4061  0442  00F2               	movwf	___lldiv@divisor+2
  4062  0443  082A               	movf	??_LCD_DisplayNumber+1,w
  4063  0444  00F1               	movwf	___lldiv@divisor+1
  4064  0445  0829               	movf	??_LCD_DisplayNumber,w
  4065  0446  00F0               	movwf	___lldiv@divisor
  4066  0447  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  4067  0448  00F7               	movwf	___lldiv@dividend+3
  4068  0449  0826               	movf	LCD_DisplayNumber@v_number_u32+2,w
  4069  044A  00F6               	movwf	___lldiv@dividend+2
  4070  044B  0825               	movf	LCD_DisplayNumber@v_number_u32+1,w
  4071  044C  00F5               	movwf	___lldiv@dividend+1
  4072  044D  0824               	movf	LCD_DisplayNumber@v_number_u32,w
  4073  044E  00F4               	movwf	___lldiv@dividend
  4074  044F  120A  158A  238D  120A  118A  	fcall	___lldiv
  4075  0454  0873               	movf	?___lldiv+3,w
  4076  0455  1283               	bcf	3,5	;RP0=0, select bank0
  4077  0456  1303               	bcf	3,6	;RP1=0, select bank0
  4078  0457  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  4079  0458  0872               	movf	?___lldiv+2,w
  4080  0459  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  4081  045A  0871               	movf	?___lldiv+1,w
  4082  045B  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  4083  045C  0870               	movf	?___lldiv,w
  4084  045D  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  4085                           
  4086                           ;lcd.c: 560: }
  4087  045E  2C6B               	goto	l1950
  4088  045F                     l1942:	
  4089                           
  4090                           ;lcd.c: 561: else if( (v_numOfDigitsToDisplay_u8 == 0xffu) ||
  4091                           ;lcd.c: 562: (v_numOfDigitsToDisplay_u8 > 10u))
  4092  045F  0A28               	incf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  4093  0460  1903               	btfsc	3,2
  4094  0461  2C95               	goto	l1964
  4095  0462  300B               	movlw	11
  4096  0463  0228               	subwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  4097  0464  1803               	btfsc	3,0
  4098  0465  2C95               	goto	l1964
  4099                           
  4100                           ;lcd.c: 568: else
  4101                           ;lcd.c: 569: {
  4102                           ;lcd.c: 573: a[i]=0;
  4103                           
  4104                           ;lcd.c: 567: }
  4105                           
  4106                           ;lcd.c: 563: {
  4107                           ;lcd.c: 566: break;
  4108  0466  0842               	movf	LCD_DisplayNumber@i,w
  4109  0467  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  4110  0468  0084               	movwf	4
  4111  0469  1383               	bcf	3,7	;select IRP bank0
  4112  046A  0180               	clrf	0
  4113  046B                     l1950:	
  4114  046B  3001               	movlw	1
  4115  046C  00A9               	movwf	??_LCD_DisplayNumber
  4116  046D  0829               	movf	??_LCD_DisplayNumber,w
  4117  046E  07C2               	addwf	LCD_DisplayNumber@i,f
  4118  046F  2C00               	goto	l1952
  4119  0470                     l1954:	
  4120                           ;lcd.c: 574: }
  4121                           ;lcd.c: 575: }
  4122                           ;lcd.c: 577: while(i!=0)
  4123                           
  4124                           
  4125                           ;lcd.c: 578: {
  4126                           ;lcd.c: 580: LCD_DisplayChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  4127  0470  0842               	movf	LCD_DisplayNumber@i,w
  4128  0471  3EFF               	addlw	255
  4129  0472  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  4130  0473  0084               	movwf	4
  4131  0474  300A               	movlw	10
  4132  0475  1383               	bcf	3,7	;select IRP bank0
  4133  0476  0200               	subwf	0,w
  4134  0477  1803               	skipnc
  4135  0478  2C80               	goto	l1958
  4136  0479  0842               	movf	LCD_DisplayNumber@i,w
  4137  047A  3EFF               	addlw	255
  4138  047B  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  4139  047C  0084               	movwf	4
  4140  047D  0800               	movf	0,w
  4141  047E  3E30               	addlw	48
  4142  047F  2C86               	goto	L2
  4143  0480                     l1958:	
  4144  0480  0842               	movf	LCD_DisplayNumber@i,w
  4145  0481  3EFF               	addlw	255
  4146  0482  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  4147  0483  0084               	movwf	4
  4148  0484  0800               	movf	0,w
  4149  0485  3E37               	addlw	55
  4150  0486                     L2:	
  4151  0486  00BF               	movwf	_LCD_DisplayNumber$273
  4152  0487  3000               	movlw	0
  4153  0488  1803               	skipnc
  4154  0489  3001               	movlw	1
  4155  048A  00C0               	movwf	_LCD_DisplayNumber$273+1
  4156  048B  083F               	movf	_LCD_DisplayNumber$273,w
  4157  048C  120A  158A  2157  120A  118A  	fcall	_LCD_DisplayChar
  4158                           
  4159                           ;lcd.c: 581: i--;
  4160  0491  3001               	movlw	1
  4161  0492  1283               	bcf	3,5	;RP0=0, select bank0
  4162  0493  1303               	bcf	3,6	;RP1=0, select bank0
  4163  0494  02C2               	subwf	LCD_DisplayNumber@i,f
  4164  0495                     l1964:	
  4165  0495  0842               	movf	LCD_DisplayNumber@i,w
  4166  0496  1903               	btfsc	3,2
  4167  0497  0008               	return
  4168  0498  2C70               	goto	l1954
  4169  0499                     __end_of_LCD_DisplayNumber:	
  4170                           
  4171                           	psect	text14
  4172  0B8D                     __ptext14:	
  4173 ;; *************** function ___lldiv *****************
  4174 ;; Defined at:
  4175 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;  divisor         4    0[COMMON] unsigned long 
  4178 ;;  dividend        4    4[COMMON] unsigned long 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  quotient        4    9[COMMON] unsigned long 
  4181 ;;  counter         1   13[COMMON] unsigned char 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  4    0[COMMON] unsigned long 
  4184 ;; Registers used:
  4185 ;;		wreg, status,2, status,0
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4191 ;;      Params:         8       0       0       0       0
  4192 ;;      Locals:         5       0       0       0       0
  4193 ;;      Temps:          1       0       0       0       0
  4194 ;;      Totals:        14       0       0       0       0
  4195 ;;Total ram usage:       14 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_LCD_DisplayNumber
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           
  4205                           ;psect for function ___lldiv
  4206  0B8D                     ___lldiv:	
  4207                           
  4208                           ;incstack = 0
  4209                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4210  0B8D  3000               	movlw	0
  4211  0B8E  00FC               	movwf	___lldiv@quotient+3
  4212  0B8F  3000               	movlw	0
  4213  0B90  00FB               	movwf	___lldiv@quotient+2
  4214  0B91  3000               	movlw	0
  4215  0B92  00FA               	movwf	___lldiv@quotient+1
  4216  0B93  3000               	movlw	0
  4217  0B94  00F9               	movwf	___lldiv@quotient
  4218  0B95  0873               	movf	___lldiv@divisor+3,w
  4219  0B96  0472               	iorwf	___lldiv@divisor+2,w
  4220  0B97  0471               	iorwf	___lldiv@divisor+1,w
  4221  0B98  0470               	iorwf	___lldiv@divisor,w
  4222  0B99  1903               	skipnz
  4223  0B9A  2BE2               	goto	l1904
  4224  0B9B  01FD               	clrf	___lldiv@counter
  4225  0B9C  0AFD               	incf	___lldiv@counter,f
  4226  0B9D                     l1890:	
  4227  0B9D  1BF3               	btfsc	___lldiv@divisor+3,7
  4228  0B9E  2BAD               	goto	l1892
  4229  0B9F  3001               	movlw	1
  4230  0BA0  00F8               	movwf	??___lldiv
  4231  0BA1                     u2895:	
  4232  0BA1  1003               	clrc
  4233  0BA2  0DF0               	rlf	___lldiv@divisor,f
  4234  0BA3  0DF1               	rlf	___lldiv@divisor+1,f
  4235  0BA4  0DF2               	rlf	___lldiv@divisor+2,f
  4236  0BA5  0DF3               	rlf	___lldiv@divisor+3,f
  4237  0BA6  0BF8               	decfsz	??___lldiv,f
  4238  0BA7  2BA1               	goto	u2895
  4239  0BA8  3001               	movlw	1
  4240  0BA9  00F8               	movwf	??___lldiv
  4241  0BAA  0878               	movf	??___lldiv,w
  4242  0BAB  07FD               	addwf	___lldiv@counter,f
  4243  0BAC  2B9D               	goto	l1890
  4244  0BAD                     l1892:	
  4245  0BAD  3001               	movlw	1
  4246  0BAE  00F8               	movwf	??___lldiv
  4247  0BAF                     u2915:	
  4248  0BAF  1003               	clrc
  4249  0BB0  0DF9               	rlf	___lldiv@quotient,f
  4250  0BB1  0DFA               	rlf	___lldiv@quotient+1,f
  4251  0BB2  0DFB               	rlf	___lldiv@quotient+2,f
  4252  0BB3  0DFC               	rlf	___lldiv@quotient+3,f
  4253  0BB4  0BF8               	decfsz	??___lldiv,f
  4254  0BB5  2BAF               	goto	u2915
  4255  0BB6  0873               	movf	___lldiv@divisor+3,w
  4256  0BB7  0277               	subwf	___lldiv@dividend+3,w
  4257  0BB8  1D03               	skipz
  4258  0BB9  2BC4               	goto	u2925
  4259  0BBA  0872               	movf	___lldiv@divisor+2,w
  4260  0BBB  0276               	subwf	___lldiv@dividend+2,w
  4261  0BBC  1D03               	skipz
  4262  0BBD  2BC4               	goto	u2925
  4263  0BBE  0871               	movf	___lldiv@divisor+1,w
  4264  0BBF  0275               	subwf	___lldiv@dividend+1,w
  4265  0BC0  1D03               	skipz
  4266  0BC1  2BC4               	goto	u2925
  4267  0BC2  0870               	movf	___lldiv@divisor,w
  4268  0BC3  0274               	subwf	___lldiv@dividend,w
  4269  0BC4                     u2925:	
  4270  0BC4  1C03               	skipc
  4271  0BC5  2BD5               	goto	l1900
  4272  0BC6  0870               	movf	___lldiv@divisor,w
  4273  0BC7  02F4               	subwf	___lldiv@dividend,f
  4274  0BC8  0871               	movf	___lldiv@divisor+1,w
  4275  0BC9  1C03               	skipc
  4276  0BCA  0F71               	incfsz	___lldiv@divisor+1,w
  4277  0BCB  02F5               	subwf	___lldiv@dividend+1,f
  4278  0BCC  0872               	movf	___lldiv@divisor+2,w
  4279  0BCD  1C03               	skipc
  4280  0BCE  0F72               	incfsz	___lldiv@divisor+2,w
  4281  0BCF  02F6               	subwf	___lldiv@dividend+2,f
  4282  0BD0  0873               	movf	___lldiv@divisor+3,w
  4283  0BD1  1C03               	skipc
  4284  0BD2  0F73               	incfsz	___lldiv@divisor+3,w
  4285  0BD3  02F7               	subwf	___lldiv@dividend+3,f
  4286  0BD4  1479               	bsf	___lldiv@quotient,0
  4287  0BD5                     l1900:	
  4288  0BD5  3001               	movlw	1
  4289  0BD6                     u2935:	
  4290  0BD6  1003               	clrc
  4291  0BD7  0CF3               	rrf	___lldiv@divisor+3,f
  4292  0BD8  0CF2               	rrf	___lldiv@divisor+2,f
  4293  0BD9  0CF1               	rrf	___lldiv@divisor+1,f
  4294  0BDA  0CF0               	rrf	___lldiv@divisor,f
  4295  0BDB  3EFF               	addlw	-1
  4296  0BDC  1D03               	skipz
  4297  0BDD  2BD6               	goto	u2935
  4298  0BDE  3001               	movlw	1
  4299  0BDF  02FD               	subwf	___lldiv@counter,f
  4300  0BE0  1D03               	btfss	3,2
  4301  0BE1  2BAD               	goto	l1892
  4302  0BE2                     l1904:	
  4303  0BE2  087C               	movf	___lldiv@quotient+3,w
  4304  0BE3  00F3               	movwf	?___lldiv+3
  4305  0BE4  087B               	movf	___lldiv@quotient+2,w
  4306  0BE5  00F2               	movwf	?___lldiv+2
  4307  0BE6  087A               	movf	___lldiv@quotient+1,w
  4308  0BE7  00F1               	movwf	?___lldiv+1
  4309  0BE8  0879               	movf	___lldiv@quotient,w
  4310  0BE9  00F0               	movwf	?___lldiv
  4311  0BEA  0008               	return
  4312  0BEB                     __end_of___lldiv:	
  4313                           
  4314                           	psect	text15
  4315  08E8                     __ptext15:	
  4316 ;; *************** function ___bmul *****************
  4317 ;; Defined at:
  4318 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\Umul8.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;  multiplier      1    wreg     unsigned char 
  4321 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;  multiplier      1    3[BANK0 ] unsigned char 
  4324 ;;  product         1    2[BANK0 ] unsigned char 
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  1    wreg      unsigned char 
  4327 ;; Registers used:
  4328 ;;		wreg, status,2, status,0
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4334 ;;      Params:         0       1       0       0       0
  4335 ;;      Locals:         0       2       0       0       0
  4336 ;;      Temps:          0       1       0       0       0
  4337 ;;      Totals:         0       4       0       0       0
  4338 ;;Total ram usage:        4 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_LCD_DisplayNumber
  4344 ;;		_LCD_Printf
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           
  4349                           ;psect for function ___bmul
  4350  08E8                     ___bmul:	
  4351                           
  4352                           ;incstack = 0
  4353                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4354                           ;___bmul@multiplier stored from wreg
  4355  08E8  1283               	bcf	3,5	;RP0=0, select bank0
  4356  08E9  1303               	bcf	3,6	;RP1=0, select bank0
  4357  08EA  00A3               	movwf	___bmul@multiplier
  4358  08EB  01A2               	clrf	___bmul@product
  4359  08EC                     l1840:	
  4360  08EC  1C23               	btfss	___bmul@multiplier,0
  4361  08ED  28F2               	goto	l1844
  4362  08EE  0820               	movf	___bmul@multiplicand,w
  4363  08EF  00A1               	movwf	??___bmul
  4364  08F0  0821               	movf	??___bmul,w
  4365  08F1  07A2               	addwf	___bmul@product,f
  4366  08F2                     l1844:	
  4367  08F2  1003               	clrc
  4368  08F3  0DA0               	rlf	___bmul@multiplicand,f
  4369  08F4  1003               	clrc
  4370  08F5  0CA3               	rrf	___bmul@multiplier,f
  4371  08F6  0823               	movf	___bmul@multiplier,w
  4372  08F7  1D03               	btfss	3,2
  4373  08F8  28EC               	goto	l1840
  4374  08F9  0822               	movf	___bmul@product,w
  4375  08FA  0008               	return
  4376  08FB                     __end_of___bmul:	
  4377                           
  4378                           	psect	text16
  4379  0957                     __ptext16:	
  4380 ;; *************** function _LCD_DisplayChar *****************
  4381 ;; Defined at:
  4382 ;;		line 386 in file "../00-libfiles/lcd.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  v_lcdData_u8    1    wreg     unsigned char 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  v_lcdData_u8    1   12[COMMON] unsigned char 
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4396 ;;      Params:         0       0       0       0       0
  4397 ;;      Locals:         1       0       0       0       0
  4398 ;;      Temps:          1       0       0       0       0
  4399 ;;      Totals:         2       0       0       0       0
  4400 ;;Total ram usage:        2 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    5
  4403 ;; This function calls:
  4404 ;;		_LCD_GoToNextLine
  4405 ;;		_lcd_DataWrite
  4406 ;; This function is called by:
  4407 ;;		_LCD_DisplayString
  4408 ;;		_LCD_DisplayNumber
  4409 ;;		_LCD_DisplayFloatNumber
  4410 ;;		_LCD_Printf
  4411 ;;		_LCD_ScrollMessage
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           
  4416                           ;psect for function _LCD_DisplayChar
  4417  0957                     _LCD_DisplayChar:	
  4418                           
  4419                           ;incstack = 0
  4420                           ; Regs used in _LCD_DisplayChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4421                           ;LCD_DisplayChar@v_lcdData_u8 stored from wreg
  4422  0957  00FC               	movwf	LCD_DisplayChar@v_lcdData_u8
  4423                           
  4424                           ;lcd.c: 388: if((v_LcdTrackCursorPos_U8>=LCDConfig.v_MaxSupportedChars_U8) || (v_lcdData
      +                          _u8=='\n'))
  4425  0958  1683               	bsf	3,5	;RP0=1, select bank1
  4426  0959  1303               	bcf	3,6	;RP1=0, select bank1
  4427  095A  0821               	movf	(_LCDConfig^(0+128)+1),w
  4428  095B  1283               	bcf	3,5	;RP0=0, select bank0
  4429  095C  1303               	bcf	3,6	;RP1=0, select bank0
  4430  095D  026C               	subwf	_v_LcdTrackCursorPos_U8,w
  4431  095E  1803               	skipnc
  4432  095F  2964               	goto	l1830
  4433  0960  300A               	movlw	10
  4434  0961  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  4435  0962  1D03               	btfss	3,2
  4436  0963  2969               	goto	l1832
  4437  0964                     l1830:	
  4438                           
  4439                           ;lcd.c: 389: {
  4440                           ;lcd.c: 392: LCD_GoToNextLine();
  4441  0964  120A  158A  2126  120A  158A  	fcall	_LCD_GoToNextLine
  4442  0969                     l1832:	
  4443                           
  4444                           ;lcd.c: 393: }
  4445                           ;lcd.c: 394: if(v_lcdData_u8!='\n')
  4446  0969  300A               	movlw	10
  4447  096A  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  4448  096B  1903               	btfsc	3,2
  4449  096C  0008               	return
  4450                           
  4451                           ;lcd.c: 395: {
  4452                           ;lcd.c: 397: lcd_DataWrite(v_lcdData_u8);
  4453  096D  087C               	movf	LCD_DisplayChar@v_lcdData_u8,w
  4454  096E  120A  158A  2278   	fcall	_lcd_DataWrite
  4455                           
  4456                           ;lcd.c: 398: v_LcdTrackCursorPos_U8++;
  4457  0971  3001               	movlw	1
  4458  0972  00FB               	movwf	??_LCD_DisplayChar
  4459  0973  087B               	movf	??_LCD_DisplayChar,w
  4460  0974  1283               	bcf	3,5	;RP0=0, select bank0
  4461  0975  1303               	bcf	3,6	;RP1=0, select bank0
  4462  0976  07EC               	addwf	_v_LcdTrackCursorPos_U8,f
  4463  0977  0008               	return
  4464  0978                     __end_of_LCD_DisplayChar:	
  4465                           
  4466                           	psect	text17
  4467  0A78                     __ptext17:	
  4468 ;; *************** function _lcd_DataWrite *****************
  4469 ;; Defined at:
  4470 ;;		line 819 in file "../00-libfiles/lcd.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  dataByte        1    wreg     unsigned char 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  dataByte        1    9[COMMON] unsigned char 
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  1    wreg      void 
  4477 ;; Registers used:
  4478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4484 ;;      Params:         0       0       0       0       0
  4485 ;;      Locals:         1       0       0       0       0
  4486 ;;      Temps:          2       0       0       0       0
  4487 ;;      Totals:         3       0       0       0       0
  4488 ;;Total ram usage:        3 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; Hardware stack levels required when called:    3
  4491 ;; This function calls:
  4492 ;;		_lcd_BusyCheck
  4493 ;;		_lcd_SendDataSignals
  4494 ;;		_lcd_SendHigherNibble
  4495 ;;		_lcd_SendLowerNibble
  4496 ;; This function is called by:
  4497 ;;		_LCD_DisplayChar
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           
  4502                           ;psect for function _lcd_DataWrite
  4503  0A78                     _lcd_DataWrite:	
  4504                           
  4505                           ;incstack = 0
  4506                           ; Regs used in _lcd_DataWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4507                           ;lcd_DataWrite@dataByte stored from wreg
  4508  0A78  00F9               	movwf	lcd_DataWrite@dataByte
  4509                           
  4510                           ;lcd.c: 821: lcd_BusyCheck();
  4511  0A79  120A  158A  24CC  120A  158A  	fcall	_lcd_BusyCheck
  4512                           
  4513                           ;lcd.c: 822: if(LCDConfig.v_LcdMode_U8 == 8u)
  4514  0A7E  3008               	movlw	8
  4515  0A7F  1683               	bsf	3,5	;RP0=1, select bank1
  4516  0A80  1303               	bcf	3,6	;RP1=0, select bank1
  4517  0A81  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  4518  0A82  1D03               	btfss	3,2
  4519  0A83  2A8B               	goto	l1818
  4520                           
  4521                           ;lcd.c: 823: {
  4522                           ;lcd.c: 824: lcd_SendLowerNibble(dataByte);
  4523  0A84  0879               	movf	lcd_DataWrite@dataByte,w
  4524  0A85  120A  118A  2011  120A  158A  	fcall	_lcd_SendLowerNibble
  4525                           
  4526                           ;lcd.c: 825: }
  4527  0A8A  2AA3               	goto	l1822
  4528  0A8B                     l1818:	
  4529                           
  4530                           ;lcd.c: 826: else
  4531                           ;lcd.c: 827: {
  4532                           ;lcd.c: 828: lcd_SendHigherNibble(dataByte);
  4533  0A8B  0879               	movf	lcd_DataWrite@dataByte,w
  4534  0A8C  120A  158A  22AD  120A  158A  	fcall	_lcd_SendHigherNibble
  4535                           
  4536                           ;lcd.c: 829: lcd_SendDataSignals();
  4537  0A91  120A  158A  2215  120A  158A  	fcall	_lcd_SendDataSignals
  4538                           
  4539                           ;lcd.c: 830: dataByte = dataByte << 4;
  4540  0A96  0879               	movf	lcd_DataWrite@dataByte,w
  4541  0A97  00F7               	movwf	??_lcd_DataWrite
  4542  0A98  3003               	movlw	3
  4543  0A99                     u2705:	
  4544  0A99  1003               	clrc
  4545  0A9A  0DF7               	rlf	??_lcd_DataWrite,f
  4546  0A9B  3EFF               	addlw	-1
  4547  0A9C  1D03               	skipz
  4548  0A9D  2A99               	goto	u2705
  4549  0A9E  1003               	clrc
  4550  0A9F  0D77               	rlf	??_lcd_DataWrite,w
  4551  0AA0  00F8               	movwf	??_lcd_DataWrite+1
  4552  0AA1  0878               	movf	??_lcd_DataWrite+1,w
  4553  0AA2  00F9               	movwf	lcd_DataWrite@dataByte
  4554  0AA3                     l1822:	
  4555                           
  4556                           ;lcd.c: 831: }
  4557                           ;lcd.c: 833: lcd_SendHigherNibble(dataByte);
  4558  0AA3  0879               	movf	lcd_DataWrite@dataByte,w
  4559  0AA4  120A  158A  22AD  120A  158A  	fcall	_lcd_SendHigherNibble
  4560                           
  4561                           ;lcd.c: 834: lcd_SendDataSignals();
  4562  0AA9  120A  158A  2215   	fcall	_lcd_SendDataSignals
  4563  0AAC  0008               	return
  4564  0AAD                     __end_of_lcd_DataWrite:	
  4565                           
  4566                           	psect	text18
  4567  0A15                     __ptext18:	
  4568 ;; *************** function _lcd_SendDataSignals *****************
  4569 ;; Defined at:
  4570 ;;		line 995 in file "../00-libfiles/lcd.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;		None
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;		None
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  1    wreg      void 
  4577 ;; Registers used:
  4578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4584 ;;      Params:         0       0       0       0       0
  4585 ;;      Locals:         0       0       0       0       0
  4586 ;;      Temps:          0       0       0       0       0
  4587 ;;      Totals:         0       0       0       0       0
  4588 ;;Total ram usage:        0 bytes
  4589 ;; Hardware stack levels used:    1
  4590 ;; Hardware stack levels required when called:    1
  4591 ;; This function calls:
  4592 ;;		_DELAY_us
  4593 ;;		_GPIO_PinWrite
  4594 ;; This function is called by:
  4595 ;;		_lcd_DataWrite
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           
  4600                           ;psect for function _lcd_SendDataSignals
  4601  0A15                     _lcd_SendDataSignals:	
  4602                           
  4603                           ;lcd.c: 997: GPIO_PinWrite(LCDConfig.RS,1);
  4604                           
  4605                           ;incstack = 0
  4606                           ; Regs used in _lcd_SendDataSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4607  0A15  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4608  0A16  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  4609  0A17  1683               	bsf	3,5	;RP0=1, select bank1
  4610  0A18  1303               	bcf	3,6	;RP1=0, select bank1
  4611  0A19  0823               	movf	(_LCDConfig^(0+128)+3),w
  4612  0A1A  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  4613                           
  4614                           ;lcd.c: 998: GPIO_PinWrite(LCDConfig.RW,0);
  4615  0A1F  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4616  0A20  1683               	bsf	3,5	;RP0=1, select bank1
  4617  0A21  1303               	bcf	3,6	;RP1=0, select bank1
  4618  0A22  0824               	movf	(_LCDConfig^(0+128)+4),w
  4619  0A23  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  4620                           
  4621                           ;lcd.c: 999: GPIO_PinWrite(LCDConfig.EN,1);
  4622  0A28  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4623  0A29  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  4624  0A2A  1683               	bsf	3,5	;RP0=1, select bank1
  4625  0A2B  1303               	bcf	3,6	;RP1=0, select bank1
  4626  0A2C  0825               	movf	(_LCDConfig^(0+128)+5),w
  4627  0A2D  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  4628                           
  4629                           ;lcd.c: 1000: DELAY_us(10);
  4630  0A32  300A               	movlw	10
  4631  0A33  00F0               	movwf	DELAY_us@us_count
  4632  0A34  3000               	movlw	0
  4633  0A35  00F1               	movwf	DELAY_us@us_count+1
  4634  0A36  120A  158A  20DD  120A  158A  	fcall	_DELAY_us
  4635                           
  4636                           ;lcd.c: 1001: GPIO_PinWrite(LCDConfig.EN,0);
  4637  0A3B  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4638  0A3C  1683               	bsf	3,5	;RP0=1, select bank1
  4639  0A3D  1303               	bcf	3,6	;RP1=0, select bank1
  4640  0A3E  0825               	movf	(_LCDConfig^(0+128)+5),w
  4641  0A3F  120A  118A  22CE   	fcall	_GPIO_PinWrite
  4642  0A42  0008               	return
  4643  0A43                     __end_of_lcd_SendDataSignals:	
  4644                           
  4645                           	psect	text19
  4646  0926                     __ptext19:	
  4647 ;; *************** function _LCD_GoToNextLine *****************
  4648 ;; Defined at:
  4649 ;;		line 286 in file "../00-libfiles/lcd.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;		None
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;		None
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  1    wreg      void 
  4656 ;; Registers used:
  4657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4663 ;;      Params:         0       0       0       0       0
  4664 ;;      Locals:         0       0       0       0       0
  4665 ;;      Temps:          1       0       0       0       0
  4666 ;;      Totals:         1       0       0       0       0
  4667 ;;Total ram usage:        1 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:    4
  4670 ;; This function calls:
  4671 ;;		_LCD_CmdWrite
  4672 ;; This function is called by:
  4673 ;;		_LCD_DisplayChar
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           
  4678                           ;psect for function _LCD_GoToNextLine
  4679  0926                     _LCD_GoToNextLine:	
  4680                           
  4681                           ;lcd.c: 290: v_LcdTrackLineNum_U8++;
  4682                           
  4683                           ;incstack = 0
  4684                           ; Regs used in _LCD_GoToNextLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4685  0926  3001               	movlw	1
  4686  0927  00FA               	movwf	??_LCD_GoToNextLine
  4687  0928  087A               	movf	??_LCD_GoToNextLine,w
  4688  0929  1283               	bcf	3,5	;RP0=0, select bank0
  4689  092A  1303               	bcf	3,6	;RP1=0, select bank0
  4690  092B  07ED               	addwf	_v_LcdTrackLineNum_U8,f
  4691                           
  4692                           ;lcd.c: 291: v_LcdTrackCursorPos_U8 = 0x00;
  4693  092C  01EC               	clrf	_v_LcdTrackCursorPos_U8
  4694                           
  4695                           ;lcd.c: 292: if(v_LcdTrackLineNum_U8 >= LCDConfig.v_MaxSupportedLines_U8)
  4696  092D  1683               	bsf	3,5	;RP0=1, select bank1
  4697  092E  1303               	bcf	3,6	;RP1=0, select bank1
  4698  092F  0820               	movf	_LCDConfig^(0+128),w
  4699  0930  1283               	bcf	3,5	;RP0=0, select bank0
  4700  0931  1303               	bcf	3,6	;RP1=0, select bank0
  4701  0932  026D               	subwf	_v_LcdTrackLineNum_U8,w
  4702  0933  1803               	btfsc	3,0
  4703                           
  4704                           ;lcd.c: 293: v_LcdTrackLineNum_U8 = 0x00;
  4705  0934  01ED               	clrf	_v_LcdTrackLineNum_U8
  4706                           
  4707                           ;lcd.c: 294: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_LcdTrackLineNum_U8]);
  4708  0935  086D               	movf	_v_LcdTrackLineNum_U8,w
  4709  0936  3EB8               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  4710  0937  0084               	movwf	4
  4711  0938  1383               	bcf	3,7	;select IRP bank1
  4712  0939  0800               	movf	0,w
  4713  093A  120A  158A  2243   	fcall	_LCD_CmdWrite
  4714  093D  0008               	return
  4715  093E                     __end_of_LCD_GoToNextLine:	
  4716                           
  4717                           	psect	text20
  4718  0B3C                     __ptext20:	
  4719 ;; *************** function _LCD_Init *****************
  4720 ;; Defined at:
  4721 ;;		line 192 in file "../00-libfiles/lcd.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  v_lcdNoOfLin    1    wreg     unsigned char 
  4724 ;;  v_MaxCharsPe    1   12[COMMON] unsigned char 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  v_lcdNoOfLin    1    0[BANK0 ] unsigned char 
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  1    wreg      void 
  4729 ;; Registers used:
  4730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4736 ;;      Params:         1       0       0       0       0
  4737 ;;      Locals:         0       1       0       0       0
  4738 ;;      Temps:          1       0       0       0       0
  4739 ;;      Totals:         2       1       0       0       0
  4740 ;;Total ram usage:        3 bytes
  4741 ;; Hardware stack levels used:    1
  4742 ;; Hardware stack levels required when called:    6
  4743 ;; This function calls:
  4744 ;;		_DELAY_ms
  4745 ;;		_LCD_Clear
  4746 ;;		_LCD_CmdWrite
  4747 ;;		_lcd_Reset
  4748 ;; This function is called by:
  4749 ;;		_main
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           
  4754                           ;psect for function _LCD_Init
  4755  0B3C                     _LCD_Init:	
  4756                           
  4757                           ;incstack = 0
  4758                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4759                           ;LCD_Init@v_lcdNoOfLines_u8 stored from wreg
  4760  0B3C  1283               	bcf	3,5	;RP0=0, select bank0
  4761  0B3D  1303               	bcf	3,6	;RP1=0, select bank0
  4762  0B3E  00A0               	movwf	LCD_Init@v_lcdNoOfLines_u8
  4763                           
  4764                           ;lcd.c: 196: LCDConfig.v_MaxSupportedChars_U8 = v_MaxCharsPerLine_u8;
  4765  0B3F  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  4766  0B40  00FD               	movwf	??_LCD_Init
  4767  0B41  087D               	movf	??_LCD_Init,w
  4768  0B42  1683               	bsf	3,5	;RP0=1, select bank1
  4769  0B43  1303               	bcf	3,6	;RP1=0, select bank1
  4770  0B44  00A1               	movwf	(_LCDConfig^(0+128)+1)
  4771                           
  4772                           ;lcd.c: 197: LCDConfig.v_MaxSupportedLines_U8 = v_lcdNoOfLines_u8;
  4773  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  4774  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  4775  0B47  0820               	movf	LCD_Init@v_lcdNoOfLines_u8,w
  4776  0B48  00FD               	movwf	??_LCD_Init
  4777  0B49  087D               	movf	??_LCD_Init,w
  4778  0B4A  1683               	bsf	3,5	;RP0=1, select bank1
  4779  0B4B  1303               	bcf	3,6	;RP1=0, select bank1
  4780  0B4C  00A0               	movwf	_LCDConfig^(0+128)
  4781                           
  4782                           ;lcd.c: 198: if(v_lcdNoOfLines_u8 > 0x02)
  4783  0B4D  3003               	movlw	3
  4784  0B4E  1283               	bcf	3,5	;RP0=0, select bank0
  4785  0B4F  1303               	bcf	3,6	;RP1=0, select bank0
  4786  0B50  0220               	subwf	LCD_Init@v_lcdNoOfLines_u8,w
  4787  0B51  1C03               	skipc
  4788  0B52  2B61               	goto	l2238
  4789                           
  4790                           ;lcd.c: 199: {
  4791                           ;lcd.c: 200: ARR_LcdLineNumAddress_U8[0x02] = 0x90 + (v_MaxCharsPerLine_u8 & 0x0fu);
  4792  0B53  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  4793  0B54  390F               	andlw	15
  4794  0B55  3E90               	addlw	144
  4795  0B56  00FD               	movwf	??_LCD_Init
  4796  0B57  087D               	movf	??_LCD_Init,w
  4797  0B58  1683               	bsf	3,5	;RP0=1, select bank1
  4798  0B59  1303               	bcf	3,6	;RP1=0, select bank1
  4799  0B5A  00BA               	movwf	(_ARR_LcdLineNumAddress_U8^(0+128)+2)
  4800                           
  4801                           ;lcd.c: 201: ARR_LcdLineNumAddress_U8[0x03] = 0xd0 + (v_MaxCharsPerLine_u8 & 0x0fu);
  4802  0B5B  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  4803  0B5C  390F               	andlw	15
  4804  0B5D  3ED0               	addlw	208
  4805  0B5E  00FD               	movwf	??_LCD_Init
  4806  0B5F  087D               	movf	??_LCD_Init,w
  4807  0B60  00BB               	movwf	(_ARR_LcdLineNumAddress_U8^(0+128)+3)
  4808  0B61                     l2238:	
  4809                           
  4810                           ;lcd.c: 202: }
  4811                           ;lcd.c: 204: DELAY_ms(100);
  4812  0B61  3064               	movlw	100
  4813  0B62  00F2               	movwf	DELAY_ms@ms_count
  4814  0B63  3000               	movlw	0
  4815  0B64  00F3               	movwf	DELAY_ms@ms_count+1
  4816  0B65  120A  158A  20FB  120A  158A  	fcall	_DELAY_ms
  4817                           
  4818                           ;lcd.c: 206: if(LCDConfig.v_LcdMode_U8 == 8u)
  4819  0B6A  3008               	movlw	8
  4820  0B6B  1683               	bsf	3,5	;RP0=1, select bank1
  4821  0B6C  1303               	bcf	3,6	;RP1=0, select bank1
  4822  0B6D  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  4823  0B6E  1D03               	btfss	3,2
  4824  0B6F  2B72               	goto	l2244
  4825                           
  4826                           ;lcd.c: 207: {
  4827                           ;lcd.c: 208: LCD_CmdWrite(0x38u);
  4828  0B70  3038               	movlw	56
  4829  0B71  2B7E               	goto	L3
  4830  0B72                     l2244:	
  4831                           ;lcd.c: 209: }
  4832                           
  4833                           
  4834                           ;lcd.c: 210: else if(LCDConfig.v_LcdMode_U8 == 4u)
  4835  0B72  3004               	movlw	4
  4836  0B73  1683               	bsf	3,5	;RP0=1, select bank1
  4837  0B74  1303               	bcf	3,6	;RP1=0, select bank1
  4838  0B75  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  4839  0B76  1D03               	btfss	3,2
  4840  0B77  2B83               	goto	l181
  4841                           
  4842                           ;lcd.c: 211: {
  4843                           ;lcd.c: 212: lcd_Reset();
  4844  0B78  120A  158A  22ED  120A  158A  	fcall	_lcd_Reset
  4845                           
  4846                           ;lcd.c: 213: LCD_CmdWrite(0x28u);
  4847  0B7D  3028               	movlw	40
  4848  0B7E                     L3:	
  4849  0B7E  120A  158A  2243  120A  158A  	fcall	_LCD_CmdWrite
  4850  0B83                     l181:	
  4851                           
  4852                           ;lcd.c: 214: }
  4853                           ;lcd.c: 216: LCD_CmdWrite(0x0Eu);
  4854  0B83  300E               	movlw	14
  4855  0B84  120A  158A  2243  120A  158A  	fcall	_LCD_CmdWrite
  4856                           
  4857                           ;lcd.c: 217: LCD_Clear();
  4858  0B89  120A  118A  2006   	fcall	_LCD_Clear
  4859  0B8C  0008               	return
  4860  0B8D                     __end_of_LCD_Init:	
  4861                           
  4862                           	psect	text21
  4863  0AED                     __ptext21:	
  4864 ;; *************** function _lcd_Reset *****************
  4865 ;; Defined at:
  4866 ;;		line 906 in file "../00-libfiles/lcd.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;		None
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;		None
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  1    wreg      void 
  4873 ;; Registers used:
  4874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4880 ;;      Params:         0       0       0       0       0
  4881 ;;      Locals:         0       0       0       0       0
  4882 ;;      Temps:          0       0       0       0       0
  4883 ;;      Totals:         0       0       0       0       0
  4884 ;;Total ram usage:        0 bytes
  4885 ;; Hardware stack levels used:    1
  4886 ;; Hardware stack levels required when called:    2
  4887 ;; This function calls:
  4888 ;;		_DELAY_ms
  4889 ;;		_DELAY_us
  4890 ;;		_lcd_SendCmdSignals
  4891 ;;		_lcd_SendHigherNibble
  4892 ;; This function is called by:
  4893 ;;		_LCD_Init
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           
  4898                           ;psect for function _lcd_Reset
  4899  0AED                     _lcd_Reset:	
  4900                           
  4901                           ;lcd.c: 909: lcd_SendHigherNibble(0x30);
  4902                           
  4903                           ;incstack = 0
  4904                           ; Regs used in _lcd_Reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4905  0AED  3030               	movlw	48
  4906  0AEE  120A  158A  22AD  120A  158A  	fcall	_lcd_SendHigherNibble
  4907                           
  4908                           ;lcd.c: 910: lcd_SendCmdSignals();
  4909  0AF3  120A  158A  21E8  120A  158A  	fcall	_lcd_SendCmdSignals
  4910                           
  4911                           ;lcd.c: 911: DELAY_ms(100);
  4912  0AF8  3064               	movlw	100
  4913  0AF9  00F2               	movwf	DELAY_ms@ms_count
  4914  0AFA  3000               	movlw	0
  4915  0AFB  00F3               	movwf	DELAY_ms@ms_count+1
  4916  0AFC  120A  158A  20FB  120A  158A  	fcall	_DELAY_ms
  4917                           
  4918                           ;lcd.c: 912: lcd_SendHigherNibble(0x30);
  4919  0B01  3030               	movlw	48
  4920  0B02  120A  158A  22AD  120A  158A  	fcall	_lcd_SendHigherNibble
  4921                           
  4922                           ;lcd.c: 913: lcd_SendCmdSignals();
  4923  0B07  120A  158A  21E8  120A  158A  	fcall	_lcd_SendCmdSignals
  4924                           
  4925                           ;lcd.c: 914: DELAY_us(200);
  4926  0B0C  30C8               	movlw	200
  4927  0B0D  00F0               	movwf	DELAY_us@us_count
  4928  0B0E  3000               	movlw	0
  4929  0B0F  00F1               	movwf	DELAY_us@us_count+1
  4930  0B10  120A  158A  20DD  120A  158A  	fcall	_DELAY_us
  4931                           
  4932                           ;lcd.c: 915: lcd_SendHigherNibble(0x30);
  4933  0B15  3030               	movlw	48
  4934  0B16  120A  158A  22AD  120A  158A  	fcall	_lcd_SendHigherNibble
  4935                           
  4936                           ;lcd.c: 916: lcd_SendCmdSignals();
  4937  0B1B  120A  158A  21E8  120A  158A  	fcall	_lcd_SendCmdSignals
  4938                           
  4939                           ;lcd.c: 917: DELAY_us(200);
  4940  0B20  30C8               	movlw	200
  4941  0B21  00F0               	movwf	DELAY_us@us_count
  4942  0B22  3000               	movlw	0
  4943  0B23  00F1               	movwf	DELAY_us@us_count+1
  4944  0B24  120A  158A  20DD  120A  158A  	fcall	_DELAY_us
  4945                           
  4946                           ;lcd.c: 918: lcd_SendHigherNibble(0x20);
  4947  0B29  3020               	movlw	32
  4948  0B2A  120A  158A  22AD  120A  158A  	fcall	_lcd_SendHigherNibble
  4949                           
  4950                           ;lcd.c: 919: lcd_SendCmdSignals();
  4951  0B2F  120A  158A  21E8  120A  158A  	fcall	_lcd_SendCmdSignals
  4952                           
  4953                           ;lcd.c: 920: DELAY_us(200);
  4954  0B34  30C8               	movlw	200
  4955  0B35  00F0               	movwf	DELAY_us@us_count
  4956  0B36  3000               	movlw	0
  4957  0B37  00F1               	movwf	DELAY_us@us_count+1
  4958  0B38  120A  158A  20DD   	fcall	_DELAY_us
  4959  0B3B  0008               	return
  4960  0B3C                     __end_of_lcd_Reset:	
  4961                           
  4962                           	psect	text22
  4963  0006                     __ptext22:	
  4964 ;; *************** function _LCD_Clear *****************
  4965 ;; Defined at:
  4966 ;;		line 231 in file "../00-libfiles/lcd.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;		None
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;		None
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  1    wreg      void 
  4973 ;; Registers used:
  4974 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4980 ;;      Params:         0       0       0       0       0
  4981 ;;      Locals:         0       0       0       0       0
  4982 ;;      Temps:          0       0       0       0       0
  4983 ;;      Totals:         0       0       0       0       0
  4984 ;;Total ram usage:        0 bytes
  4985 ;; Hardware stack levels used:    1
  4986 ;; Hardware stack levels required when called:    5
  4987 ;; This function calls:
  4988 ;;		_LCD_CmdWrite
  4989 ;;		_LCD_GoToLine
  4990 ;; This function is called by:
  4991 ;;		_LCD_Init
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           
  4996                           ;psect for function _LCD_Clear
  4997  0006                     _LCD_Clear:	
  4998                           
  4999                           ;lcd.c: 233: LCD_CmdWrite(0x01u);
  5000                           
  5001                           ;incstack = 0
  5002                           ; Regs used in _LCD_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5003  0006  3001               	movlw	1
  5004  0007  120A  158A  2243  120A  118A  	fcall	_LCD_CmdWrite
  5005                           
  5006                           ;lcd.c: 234: LCD_GoToLine(0x00);
  5007  000C  3000               	movlw	0
  5008  000D  120A  158A  210F   	fcall	_LCD_GoToLine
  5009  0010  0008               	return
  5010  0011                     __end_of_LCD_Clear:	
  5011                           
  5012                           	psect	text23
  5013  090F                     __ptext23:	
  5014 ;; *************** function _LCD_GoToLine *****************
  5015 ;; Defined at:
  5016 ;;		line 259 in file "../00-libfiles/lcd.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;  v_lineNumber    1    wreg     unsigned char 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;  v_lineNumber    1   11[COMMON] unsigned char 
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      void 
  5023 ;; Registers used:
  5024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5030 ;;      Params:         0       0       0       0       0
  5031 ;;      Locals:         1       0       0       0       0
  5032 ;;      Temps:          1       0       0       0       0
  5033 ;;      Totals:         2       0       0       0       0
  5034 ;;Total ram usage:        2 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; Hardware stack levels required when called:    4
  5037 ;; This function calls:
  5038 ;;		_LCD_CmdWrite
  5039 ;; This function is called by:
  5040 ;;		_LCD_Clear
  5041 ;;		_main
  5042 ;;		_LCD_ScrollMessage
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           
  5047                           ;psect for function _LCD_GoToLine
  5048  090F                     _LCD_GoToLine:	
  5049                           
  5050                           ;incstack = 0
  5051                           ; Regs used in _LCD_GoToLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5052                           ;LCD_GoToLine@v_lineNumber_u8 stored from wreg
  5053  090F  00FB               	movwf	LCD_GoToLine@v_lineNumber_u8
  5054                           
  5055                           ;lcd.c: 261: if(v_lineNumber_u8 < LCDConfig.v_MaxSupportedLines_U8)
  5056  0910  1683               	bsf	3,5	;RP0=1, select bank1
  5057  0911  1303               	bcf	3,6	;RP1=0, select bank1
  5058  0912  0820               	movf	_LCDConfig^(0+128),w
  5059  0913  027B               	subwf	LCD_GoToLine@v_lineNumber_u8,w
  5060  0914  1803               	skipnc
  5061  0915  0008               	return
  5062                           
  5063                           ;lcd.c: 262: {
  5064                           ;lcd.c: 265: v_LcdTrackCursorPos_U8 = 0x00;
  5065  0916  1283               	bcf	3,5	;RP0=0, select bank0
  5066  0917  1303               	bcf	3,6	;RP1=0, select bank0
  5067  0918  01EC               	clrf	_v_LcdTrackCursorPos_U8
  5068                           
  5069                           ;lcd.c: 266: v_LcdTrackLineNum_U8 = v_lineNumber_u8;
  5070  0919  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  5071  091A  00FA               	movwf	??_LCD_GoToLine
  5072  091B  087A               	movf	??_LCD_GoToLine,w
  5073  091C  00ED               	movwf	_v_LcdTrackLineNum_U8
  5074                           
  5075                           ;lcd.c: 267: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_lineNumber_u8]);
  5076  091D  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  5077  091E  3EB8               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  5078  091F  0084               	movwf	4
  5079  0920  1383               	bcf	3,7	;select IRP bank1
  5080  0921  0800               	movf	0,w
  5081  0922  120A  158A  2243   	fcall	_LCD_CmdWrite
  5082  0925  0008               	return
  5083  0926                     __end_of_LCD_GoToLine:	
  5084                           
  5085                           	psect	text24
  5086  0A43                     __ptext24:	
  5087 ;; *************** function _LCD_CmdWrite *****************
  5088 ;; Defined at:
  5089 ;;		line 352 in file "../00-libfiles/lcd.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;  v_lcdCmd_u8     1    wreg     unsigned char 
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;  v_lcdCmd_u8     1    9[COMMON] unsigned char 
  5094 ;; Return value:  Size  Location     Type
  5095 ;;                  1    wreg      void 
  5096 ;; Registers used:
  5097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5103 ;;      Params:         0       0       0       0       0
  5104 ;;      Locals:         1       0       0       0       0
  5105 ;;      Temps:          2       0       0       0       0
  5106 ;;      Totals:         3       0       0       0       0
  5107 ;;Total ram usage:        3 bytes
  5108 ;; Hardware stack levels used:    1
  5109 ;; Hardware stack levels required when called:    3
  5110 ;; This function calls:
  5111 ;;		_lcd_BusyCheck
  5112 ;;		_lcd_SendCmdSignals
  5113 ;;		_lcd_SendHigherNibble
  5114 ;;		_lcd_SendLowerNibble
  5115 ;; This function is called by:
  5116 ;;		_LCD_Init
  5117 ;;		_LCD_Clear
  5118 ;;		_LCD_GoToLine
  5119 ;;		_LCD_GoToNextLine
  5120 ;;		_LCD_ScrollMessage
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           
  5125                           ;psect for function _LCD_CmdWrite
  5126  0A43                     _LCD_CmdWrite:	
  5127                           
  5128                           ;incstack = 0
  5129                           ; Regs used in _LCD_CmdWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5130                           ;LCD_CmdWrite@v_lcdCmd_u8 stored from wreg
  5131  0A43  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  5132                           
  5133                           ;lcd.c: 354: lcd_BusyCheck();
  5134  0A44  120A  158A  24CC  120A  158A  	fcall	_lcd_BusyCheck
  5135                           
  5136                           ;lcd.c: 355: if(LCDConfig.v_LcdMode_U8 == 8u)
  5137  0A49  3008               	movlw	8
  5138  0A4A  1683               	bsf	3,5	;RP0=1, select bank1
  5139  0A4B  1303               	bcf	3,6	;RP1=0, select bank1
  5140  0A4C  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  5141  0A4D  1D03               	btfss	3,2
  5142  0A4E  2A56               	goto	l1788
  5143                           
  5144                           ;lcd.c: 356: {
  5145                           ;lcd.c: 357: lcd_SendLowerNibble(v_lcdCmd_u8);
  5146  0A4F  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  5147  0A50  120A  118A  2011  120A  158A  	fcall	_lcd_SendLowerNibble
  5148                           
  5149                           ;lcd.c: 358: }
  5150  0A55  2A6E               	goto	l1792
  5151  0A56                     l1788:	
  5152                           
  5153                           ;lcd.c: 359: else
  5154                           ;lcd.c: 360: {
  5155                           ;lcd.c: 361: lcd_SendHigherNibble(v_lcdCmd_u8);
  5156  0A56  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  5157  0A57  120A  158A  22AD  120A  158A  	fcall	_lcd_SendHigherNibble
  5158                           
  5159                           ;lcd.c: 362: lcd_SendCmdSignals();
  5160  0A5C  120A  158A  21E8  120A  158A  	fcall	_lcd_SendCmdSignals
  5161                           
  5162                           ;lcd.c: 363: v_lcdCmd_u8 = v_lcdCmd_u8 << 4;
  5163  0A61  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  5164  0A62  00F7               	movwf	??_LCD_CmdWrite
  5165  0A63  3003               	movlw	3
  5166  0A64                     u2675:	
  5167  0A64  1003               	clrc
  5168  0A65  0DF7               	rlf	??_LCD_CmdWrite,f
  5169  0A66  3EFF               	addlw	-1
  5170  0A67  1D03               	skipz
  5171  0A68  2A64               	goto	u2675
  5172  0A69  1003               	clrc
  5173  0A6A  0D77               	rlf	??_LCD_CmdWrite,w
  5174  0A6B  00F8               	movwf	??_LCD_CmdWrite+1
  5175  0A6C  0878               	movf	??_LCD_CmdWrite+1,w
  5176  0A6D  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  5177  0A6E                     l1792:	
  5178                           
  5179                           ;lcd.c: 364: }
  5180                           ;lcd.c: 366: lcd_SendHigherNibble(v_lcdCmd_u8);
  5181  0A6E  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  5182  0A6F  120A  158A  22AD  120A  158A  	fcall	_lcd_SendHigherNibble
  5183                           
  5184                           ;lcd.c: 367: lcd_SendCmdSignals();
  5185  0A74  120A  158A  21E8   	fcall	_lcd_SendCmdSignals
  5186  0A77  0008               	return
  5187  0A78                     __end_of_LCD_CmdWrite:	
  5188                           
  5189                           	psect	text25
  5190  0011                     __ptext25:	
  5191 ;; *************** function _lcd_SendLowerNibble *****************
  5192 ;; Defined at:
  5193 ;;		line 955 in file "../00-libfiles/lcd.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;  dataByte        1    wreg     unsigned char 
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;  dataByte        1    6[COMMON] unsigned char 
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  1    wreg      void 
  5200 ;; Registers used:
  5201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5207 ;;      Params:         0       0       0       0       0
  5208 ;;      Locals:         1       0       0       0       0
  5209 ;;      Temps:          1       0       0       0       0
  5210 ;;      Totals:         2       0       0       0       0
  5211 ;;Total ram usage:        2 bytes
  5212 ;; Hardware stack levels used:    1
  5213 ;; Hardware stack levels required when called:    1
  5214 ;; This function calls:
  5215 ;;		_GPIO_PinWrite
  5216 ;; This function is called by:
  5217 ;;		_LCD_CmdWrite
  5218 ;;		_lcd_DataWrite
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           
  5223                           ;psect for function _lcd_SendLowerNibble
  5224  0011                     _lcd_SendLowerNibble:	
  5225                           
  5226                           ;incstack = 0
  5227                           ; Regs used in _lcd_SendLowerNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5228                           ;lcd_SendLowerNibble@dataByte stored from wreg
  5229  0011  00F6               	movwf	lcd_SendLowerNibble@dataByte
  5230                           
  5231                           ;lcd.c: 957: GPIO_PinWrite(LCDConfig.D0,(((dataByte)&((1<<(0))))!=0u));
  5232  0012  1C76               	btfss	lcd_SendLowerNibble@dataByte,0
  5233  0013  2816               	goto	u2500
  5234  0014  3001               	movlw	1
  5235  0015  2817               	goto	u2510
  5236  0016                     u2500:	
  5237  0016  3000               	movlw	0
  5238  0017                     u2510:	
  5239  0017  00F5               	movwf	??_lcd_SendLowerNibble
  5240  0018  0875               	movf	??_lcd_SendLowerNibble,w
  5241  0019  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5242  001A  1683               	bsf	3,5	;RP0=1, select bank1
  5243  001B  1303               	bcf	3,6	;RP1=0, select bank1
  5244  001C  0826               	movf	(_LCDConfig^(0+128)+6),w
  5245  001D  120A  118A  22CE  120A  118A  	fcall	_GPIO_PinWrite
  5246                           
  5247                           ;lcd.c: 958: GPIO_PinWrite(LCDConfig.D1,(((dataByte)&((1<<(1))))!=0u));
  5248  0022  1CF6               	btfss	lcd_SendLowerNibble@dataByte,1
  5249  0023  2826               	goto	u2520
  5250  0024  3001               	movlw	1
  5251  0025  2827               	goto	u2530
  5252  0026                     u2520:	
  5253  0026  3000               	movlw	0
  5254  0027                     u2530:	
  5255  0027  00F5               	movwf	??_lcd_SendLowerNibble
  5256  0028  0875               	movf	??_lcd_SendLowerNibble,w
  5257  0029  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5258  002A  1683               	bsf	3,5	;RP0=1, select bank1
  5259  002B  1303               	bcf	3,6	;RP1=0, select bank1
  5260  002C  0827               	movf	(_LCDConfig^(0+128)+7),w
  5261  002D  120A  118A  22CE  120A  118A  	fcall	_GPIO_PinWrite
  5262                           
  5263                           ;lcd.c: 959: GPIO_PinWrite(LCDConfig.D2,(((dataByte)&((1<<(2))))!=0u));
  5264  0032  1D76               	btfss	lcd_SendLowerNibble@dataByte,2
  5265  0033  2836               	goto	u2540
  5266  0034  3001               	movlw	1
  5267  0035  2837               	goto	u2550
  5268  0036                     u2540:	
  5269  0036  3000               	movlw	0
  5270  0037                     u2550:	
  5271  0037  00F5               	movwf	??_lcd_SendLowerNibble
  5272  0038  0875               	movf	??_lcd_SendLowerNibble,w
  5273  0039  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5274  003A  1683               	bsf	3,5	;RP0=1, select bank1
  5275  003B  1303               	bcf	3,6	;RP1=0, select bank1
  5276  003C  0828               	movf	(_LCDConfig^(0+128)+8),w
  5277  003D  120A  118A  22CE  120A  118A  	fcall	_GPIO_PinWrite
  5278                           
  5279                           ;lcd.c: 960: GPIO_PinWrite(LCDConfig.D3,(((dataByte)&((1<<(3))))!=0u));
  5280  0042  1DF6               	btfss	lcd_SendLowerNibble@dataByte,3
  5281  0043  2846               	goto	u2560
  5282  0044  3001               	movlw	1
  5283  0045  2847               	goto	u2570
  5284  0046                     u2560:	
  5285  0046  3000               	movlw	0
  5286  0047                     u2570:	
  5287  0047  00F5               	movwf	??_lcd_SendLowerNibble
  5288  0048  0875               	movf	??_lcd_SendLowerNibble,w
  5289  0049  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5290  004A  1683               	bsf	3,5	;RP0=1, select bank1
  5291  004B  1303               	bcf	3,6	;RP1=0, select bank1
  5292  004C  0829               	movf	(_LCDConfig^(0+128)+9),w
  5293  004D  120A  118A  22CE   	fcall	_GPIO_PinWrite
  5294  0050  0008               	return
  5295  0051                     __end_of_lcd_SendLowerNibble:	
  5296                           
  5297                           	psect	text26
  5298  0AAD                     __ptext26:	
  5299 ;; *************** function _lcd_SendHigherNibble *****************
  5300 ;; Defined at:
  5301 ;;		line 936 in file "../00-libfiles/lcd.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  dataByte        1    wreg     unsigned char 
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;  dataByte        1    6[COMMON] unsigned char 
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  1    wreg      void 
  5308 ;; Registers used:
  5309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5315 ;;      Params:         0       0       0       0       0
  5316 ;;      Locals:         1       0       0       0       0
  5317 ;;      Temps:          1       0       0       0       0
  5318 ;;      Totals:         2       0       0       0       0
  5319 ;;Total ram usage:        2 bytes
  5320 ;; Hardware stack levels used:    1
  5321 ;; Hardware stack levels required when called:    1
  5322 ;; This function calls:
  5323 ;;		_GPIO_PinWrite
  5324 ;; This function is called by:
  5325 ;;		_LCD_CmdWrite
  5326 ;;		_lcd_DataWrite
  5327 ;;		_lcd_Reset
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           
  5332                           ;psect for function _lcd_SendHigherNibble
  5333  0AAD                     _lcd_SendHigherNibble:	
  5334                           
  5335                           ;incstack = 0
  5336                           ; Regs used in _lcd_SendHigherNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5337                           ;lcd_SendHigherNibble@dataByte stored from wreg
  5338  0AAD  00F6               	movwf	lcd_SendHigherNibble@dataByte
  5339                           
  5340                           ;lcd.c: 938: GPIO_PinWrite(LCDConfig.D4,(((dataByte)&((1<<(4))))!=0u));
  5341  0AAE  1E76               	btfss	lcd_SendHigherNibble@dataByte,4
  5342  0AAF  2AB2               	goto	u2580
  5343  0AB0  3001               	movlw	1
  5344  0AB1  2AB3               	goto	u2590
  5345  0AB2                     u2580:	
  5346  0AB2  3000               	movlw	0
  5347  0AB3                     u2590:	
  5348  0AB3  00F5               	movwf	??_lcd_SendHigherNibble
  5349  0AB4  0875               	movf	??_lcd_SendHigherNibble,w
  5350  0AB5  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5351  0AB6  1683               	bsf	3,5	;RP0=1, select bank1
  5352  0AB7  1303               	bcf	3,6	;RP1=0, select bank1
  5353  0AB8  082A               	movf	(_LCDConfig^(0+128)+10),w
  5354  0AB9  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5355                           
  5356                           ;lcd.c: 939: GPIO_PinWrite(LCDConfig.D5,(((dataByte)&((1<<(5))))!=0u));
  5357  0ABE  1EF6               	btfss	lcd_SendHigherNibble@dataByte,5
  5358  0ABF  2AC2               	goto	u2600
  5359  0AC0  3001               	movlw	1
  5360  0AC1  2AC3               	goto	u2610
  5361  0AC2                     u2600:	
  5362  0AC2  3000               	movlw	0
  5363  0AC3                     u2610:	
  5364  0AC3  00F5               	movwf	??_lcd_SendHigherNibble
  5365  0AC4  0875               	movf	??_lcd_SendHigherNibble,w
  5366  0AC5  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5367  0AC6  1683               	bsf	3,5	;RP0=1, select bank1
  5368  0AC7  1303               	bcf	3,6	;RP1=0, select bank1
  5369  0AC8  082B               	movf	(_LCDConfig^(0+128)+11),w
  5370  0AC9  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5371                           
  5372                           ;lcd.c: 940: GPIO_PinWrite(LCDConfig.D6,(((dataByte)&((1<<(6))))!=0u));
  5373  0ACE  1F76               	btfss	lcd_SendHigherNibble@dataByte,6
  5374  0ACF  2AD2               	goto	u2620
  5375  0AD0  3001               	movlw	1
  5376  0AD1  2AD3               	goto	u2630
  5377  0AD2                     u2620:	
  5378  0AD2  3000               	movlw	0
  5379  0AD3                     u2630:	
  5380  0AD3  00F5               	movwf	??_lcd_SendHigherNibble
  5381  0AD4  0875               	movf	??_lcd_SendHigherNibble,w
  5382  0AD5  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5383  0AD6  1683               	bsf	3,5	;RP0=1, select bank1
  5384  0AD7  1303               	bcf	3,6	;RP1=0, select bank1
  5385  0AD8  082C               	movf	(_LCDConfig^(0+128)+12),w
  5386  0AD9  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5387                           
  5388                           ;lcd.c: 941: GPIO_PinWrite(LCDConfig.D7,(((dataByte)&((1<<(7))))!=0u));
  5389  0ADE  1FF6               	btfss	lcd_SendHigherNibble@dataByte,7
  5390  0ADF  2AE2               	goto	u2640
  5391  0AE0  3001               	movlw	1
  5392  0AE1  2AE3               	goto	u2650
  5393  0AE2                     u2640:	
  5394  0AE2  3000               	movlw	0
  5395  0AE3                     u2650:	
  5396  0AE3  00F5               	movwf	??_lcd_SendHigherNibble
  5397  0AE4  0875               	movf	??_lcd_SendHigherNibble,w
  5398  0AE5  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  5399  0AE6  1683               	bsf	3,5	;RP0=1, select bank1
  5400  0AE7  1303               	bcf	3,6	;RP1=0, select bank1
  5401  0AE8  082D               	movf	(_LCDConfig^(0+128)+13),w
  5402  0AE9  120A  118A  22CE   	fcall	_GPIO_PinWrite
  5403  0AEC  0008               	return
  5404  0AED                     __end_of_lcd_SendHigherNibble:	
  5405                           
  5406                           	psect	text27
  5407  09E8                     __ptext27:	
  5408 ;; *************** function _lcd_SendCmdSignals *****************
  5409 ;; Defined at:
  5410 ;;		line 974 in file "../00-libfiles/lcd.c"
  5411 ;; Parameters:    Size  Location     Type
  5412 ;;		None
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;		None
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  1    wreg      void 
  5417 ;; Registers used:
  5418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5424 ;;      Params:         0       0       0       0       0
  5425 ;;      Locals:         0       0       0       0       0
  5426 ;;      Temps:          0       0       0       0       0
  5427 ;;      Totals:         0       0       0       0       0
  5428 ;;Total ram usage:        0 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; Hardware stack levels required when called:    1
  5431 ;; This function calls:
  5432 ;;		_DELAY_us
  5433 ;;		_GPIO_PinWrite
  5434 ;; This function is called by:
  5435 ;;		_LCD_CmdWrite
  5436 ;;		_lcd_Reset
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           
  5441                           ;psect for function _lcd_SendCmdSignals
  5442  09E8                     _lcd_SendCmdSignals:	
  5443                           
  5444                           ;lcd.c: 976: GPIO_PinWrite(LCDConfig.RS,0);
  5445                           
  5446                           ;incstack = 0
  5447                           ; Regs used in _lcd_SendCmdSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5448  09E8  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5449  09E9  1683               	bsf	3,5	;RP0=1, select bank1
  5450  09EA  1303               	bcf	3,6	;RP1=0, select bank1
  5451  09EB  0823               	movf	(_LCDConfig^(0+128)+3),w
  5452  09EC  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5453                           
  5454                           ;lcd.c: 977: GPIO_PinWrite(LCDConfig.RW,0);
  5455  09F1  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5456  09F2  1683               	bsf	3,5	;RP0=1, select bank1
  5457  09F3  1303               	bcf	3,6	;RP1=0, select bank1
  5458  09F4  0824               	movf	(_LCDConfig^(0+128)+4),w
  5459  09F5  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5460                           
  5461                           ;lcd.c: 978: GPIO_PinWrite(LCDConfig.EN,1);
  5462  09FA  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5463  09FB  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  5464  09FC  1683               	bsf	3,5	;RP0=1, select bank1
  5465  09FD  1303               	bcf	3,6	;RP1=0, select bank1
  5466  09FE  0825               	movf	(_LCDConfig^(0+128)+5),w
  5467  09FF  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5468                           
  5469                           ;lcd.c: 979: DELAY_us(10);
  5470  0A04  300A               	movlw	10
  5471  0A05  00F0               	movwf	DELAY_us@us_count
  5472  0A06  3000               	movlw	0
  5473  0A07  00F1               	movwf	DELAY_us@us_count+1
  5474  0A08  120A  158A  20DD  120A  158A  	fcall	_DELAY_us
  5475                           
  5476                           ;lcd.c: 980: GPIO_PinWrite(LCDConfig.EN,0);
  5477  0A0D  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5478  0A0E  1683               	bsf	3,5	;RP0=1, select bank1
  5479  0A0F  1303               	bcf	3,6	;RP1=0, select bank1
  5480  0A10  0825               	movf	(_LCDConfig^(0+128)+5),w
  5481  0A11  120A  118A  22CE   	fcall	_GPIO_PinWrite
  5482  0A14  0008               	return
  5483  0A15                     __end_of_lcd_SendCmdSignals:	
  5484                           
  5485                           	psect	text28
  5486  0CCC                     __ptext28:	
  5487 ;; *************** function _lcd_BusyCheck *****************
  5488 ;; Defined at:
  5489 ;;		line 853 in file "../00-libfiles/lcd.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;		None
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  busyflag        1    6[COMMON] unsigned char 
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  1    wreg      void 
  5496 ;; Registers used:
  5497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5503 ;;      Params:         0       0       0       0       0
  5504 ;;      Locals:         1       0       0       0       0
  5505 ;;      Temps:          1       0       0       0       0
  5506 ;;      Totals:         2       0       0       0       0
  5507 ;;Total ram usage:        2 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:    2
  5510 ;; This function calls:
  5511 ;;		_DELAY_ms
  5512 ;;		_DELAY_us
  5513 ;;		_GPIO_PinDirection
  5514 ;;		_GPIO_PinRead
  5515 ;;		_GPIO_PinWrite
  5516 ;; This function is called by:
  5517 ;;		_LCD_CmdWrite
  5518 ;;		_lcd_DataWrite
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           
  5523                           ;psect for function _lcd_BusyCheck
  5524  0CCC                     _lcd_BusyCheck:	
  5525                           
  5526                           ;lcd.c: 855: uint8_t busyflag;
  5527                           ;lcd.c: 857: if(LCDConfig.RW == P_NC)
  5528                           
  5529                           ;incstack = 0
  5530                           ; Regs used in _lcd_BusyCheck: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5531  0CCC  1683               	bsf	3,5	;RP0=1, select bank1
  5532  0CCD  1303               	bcf	3,6	;RP1=0, select bank1
  5533  0CCE  0A24               	incf	(_LCDConfig^(0+128)+4),w
  5534  0CCF  1D03               	btfss	3,2
  5535  0CD0  2D50               	goto	l1770
  5536                           
  5537                           ;lcd.c: 858: {
  5538                           ;lcd.c: 859: GPIO_PinDirection(LCDConfig.D7,0x01u);
  5539  0CD1  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  5540  0CD2  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  5541  0CD3  082D               	movf	(_LCDConfig^(0+128)+13),w
  5542  0CD4  120A  118A  21F5  120A  158A  	fcall	_GPIO_PinDirection
  5543                           
  5544                           ;lcd.c: 860: GPIO_PinWrite(LCDConfig.RS,0);
  5545  0CD9  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5546  0CDA  1683               	bsf	3,5	;RP0=1, select bank1
  5547  0CDB  1303               	bcf	3,6	;RP1=0, select bank1
  5548  0CDC  0823               	movf	(_LCDConfig^(0+128)+3),w
  5549  0CDD  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5550                           
  5551                           ;lcd.c: 861: GPIO_PinWrite(LCDConfig.RW,1);
  5552  0CE2  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5553  0CE3  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  5554  0CE4  1683               	bsf	3,5	;RP0=1, select bank1
  5555  0CE5  1303               	bcf	3,6	;RP1=0, select bank1
  5556  0CE6  0824               	movf	(_LCDConfig^(0+128)+4),w
  5557  0CE7  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5558  0CEC                     l301:	
  5559                           ;lcd.c: 862: do
  5560                           
  5561                           
  5562                           ;lcd.c: 863: {
  5563                           ;lcd.c: 865: GPIO_PinWrite(LCDConfig.EN,0);
  5564  0CEC  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5565  0CED  1683               	bsf	3,5	;RP0=1, select bank1
  5566  0CEE  1303               	bcf	3,6	;RP1=0, select bank1
  5567  0CEF  0825               	movf	(_LCDConfig^(0+128)+5),w
  5568  0CF0  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5569                           
  5570                           ;lcd.c: 866: DELAY_us(10);
  5571  0CF5  300A               	movlw	10
  5572  0CF6  00F0               	movwf	DELAY_us@us_count
  5573  0CF7  3000               	movlw	0
  5574  0CF8  00F1               	movwf	DELAY_us@us_count+1
  5575  0CF9  120A  158A  20DD  120A  158A  	fcall	_DELAY_us
  5576                           
  5577                           ;lcd.c: 867: GPIO_PinWrite(LCDConfig.EN,1);
  5578  0CFE  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5579  0CFF  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  5580  0D00  1683               	bsf	3,5	;RP0=1, select bank1
  5581  0D01  1303               	bcf	3,6	;RP1=0, select bank1
  5582  0D02  0825               	movf	(_LCDConfig^(0+128)+5),w
  5583  0D03  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5584                           
  5585                           ;lcd.c: 868: DELAY_us(10);
  5586  0D08  300A               	movlw	10
  5587  0D09  00F0               	movwf	DELAY_us@us_count
  5588  0D0A  3000               	movlw	0
  5589  0D0B  00F1               	movwf	DELAY_us@us_count+1
  5590  0D0C  120A  158A  20DD  120A  158A  	fcall	_DELAY_us
  5591                           
  5592                           ;lcd.c: 869: busyflag = GPIO_PinRead(LCDConfig.D7);
  5593  0D11  1683               	bsf	3,5	;RP0=1, select bank1
  5594  0D12  1303               	bcf	3,6	;RP1=0, select bank1
  5595  0D13  082D               	movf	(_LCDConfig^(0+128)+13),w
  5596  0D14  120A  158A  2457  120A  158A  	fcall	_GPIO_PinRead
  5597  0D19  00F5               	movwf	??_lcd_BusyCheck
  5598  0D1A  0875               	movf	??_lcd_BusyCheck,w
  5599  0D1B  00F6               	movwf	lcd_BusyCheck@busyflag
  5600                           
  5601                           ;lcd.c: 872: if(LCDConfig.v_LcdMode_U8 == 4)
  5602  0D1C  3004               	movlw	4
  5603  0D1D  1683               	bsf	3,5	;RP0=1, select bank1
  5604  0D1E  1303               	bcf	3,6	;RP1=0, select bank1
  5605  0D1F  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  5606  0D20  1D03               	btfss	3,2
  5607  0D21  2D45               	goto	l1766
  5608                           
  5609                           ;lcd.c: 873: {
  5610                           ;lcd.c: 875: GPIO_PinWrite(LCDConfig.EN,0);
  5611  0D22  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5612  0D23  0825               	movf	(_LCDConfig^(0+128)+5),w
  5613  0D24  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5614                           
  5615                           ;lcd.c: 876: DELAY_us(10);
  5616  0D29  300A               	movlw	10
  5617  0D2A  00F0               	movwf	DELAY_us@us_count
  5618  0D2B  3000               	movlw	0
  5619  0D2C  00F1               	movwf	DELAY_us@us_count+1
  5620  0D2D  120A  158A  20DD  120A  158A  	fcall	_DELAY_us
  5621                           
  5622                           ;lcd.c: 877: GPIO_PinWrite(LCDConfig.EN,1);
  5623  0D32  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5624  0D33  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  5625  0D34  1683               	bsf	3,5	;RP0=1, select bank1
  5626  0D35  1303               	bcf	3,6	;RP1=0, select bank1
  5627  0D36  0825               	movf	(_LCDConfig^(0+128)+5),w
  5628  0D37  120A  118A  22CE  120A  158A  	fcall	_GPIO_PinWrite
  5629                           
  5630                           ;lcd.c: 878: DELAY_us(10);
  5631  0D3C  300A               	movlw	10
  5632  0D3D  00F0               	movwf	DELAY_us@us_count
  5633  0D3E  3000               	movlw	0
  5634  0D3F  00F1               	movwf	DELAY_us@us_count+1
  5635  0D40  120A  158A  20DD  120A  158A  	fcall	_DELAY_us
  5636  0D45                     l1766:	
  5637                           
  5638                           ;lcd.c: 879: }
  5639                           ;lcd.c: 880: }while(busyflag!=0);
  5640  0D45  0876               	movf	lcd_BusyCheck@busyflag,w
  5641  0D46  1D03               	btfss	3,2
  5642  0D47  2CEC               	goto	l301
  5643                           
  5644                           ;lcd.c: 882: GPIO_PinDirection(LCDConfig.D7,0x00u);
  5645  0D48  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  5646  0D49  1683               	bsf	3,5	;RP0=1, select bank1
  5647  0D4A  1303               	bcf	3,6	;RP1=0, select bank1
  5648  0D4B  082D               	movf	(_LCDConfig^(0+128)+13),w
  5649  0D4C  120A  118A  21F5   	fcall	_GPIO_PinDirection
  5650                           
  5651                           ;lcd.c: 883: }
  5652  0D4F  0008               	return
  5653  0D50                     l1770:	
  5654                           
  5655                           ;lcd.c: 884: else
  5656                           ;lcd.c: 885: {
  5657                           ;lcd.c: 888: DELAY_ms(1);
  5658  0D50  3001               	movlw	1
  5659  0D51  00F2               	movwf	DELAY_ms@ms_count
  5660  0D52  3000               	movlw	0
  5661  0D53  00F3               	movwf	DELAY_ms@ms_count+1
  5662  0D54  120A  158A  20FB   	fcall	_DELAY_ms
  5663  0D57  0008               	return
  5664  0D58                     __end_of_lcd_BusyCheck:	
  5665                           
  5666                           	psect	text29
  5667  02CE                     __ptext29:	
  5668 ;; *************** function _GPIO_PinWrite *****************
  5669 ;; Defined at:
  5670 ;;		line 127 in file "../00-libfiles/gpio.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;  enm_pinNumbe    1    wreg     enum E1088
  5673 ;;  var_pinValue    1    0[COMMON] unsigned char 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  5676 ;;  var_portNumb    1    3[COMMON] unsigned char 
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      void 
  5679 ;; Registers used:
  5680 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5686 ;;      Params:         1       0       0       0       0
  5687 ;;      Locals:         2       0       0       0       0
  5688 ;;      Temps:          2       0       0       0       0
  5689 ;;      Totals:         5       0       0       0       0
  5690 ;;Total ram usage:        5 bytes
  5691 ;; Hardware stack levels used:    1
  5692 ;; This function calls:
  5693 ;;		Nothing
  5694 ;; This function is called by:
  5695 ;;		_lcd_BusyCheck
  5696 ;;		_lcd_SendHigherNibble
  5697 ;;		_lcd_SendLowerNibble
  5698 ;;		_lcd_SendCmdSignals
  5699 ;;		_lcd_SendDataSignals
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702                           
  5703                           
  5704                           ;psect for function _GPIO_PinWrite
  5705  02CE                     _GPIO_PinWrite:	
  5706                           
  5707                           ;incstack = 0
  5708                           ; Regs used in _GPIO_PinWrite: [wreg-fsr0h+status,2+status,0]
  5709                           ;GPIO_PinWrite@enm_pinNumber stored from wreg
  5710  02CE  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  5711                           
  5712                           ;gpio.c: 130: uint8_t var_portNumber_u8;
  5713                           ;gpio.c: 133: var_portNumber_u8 = (enm_pinNumber>>3);
  5714  02CF  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  5715  02D0  00F1               	movwf	??_GPIO_PinWrite
  5716  02D1  3003               	movlw	3
  5717  02D2                     u2145:	
  5718  02D2  1003               	clrc
  5719  02D3  0CF1               	rrf	??_GPIO_PinWrite,f
  5720  02D4  3EFF               	addlw	-1
  5721  02D5  1D03               	skipz
  5722  02D6  2AD2               	goto	u2145
  5723  02D7  0871               	movf	??_GPIO_PinWrite,w
  5724  02D8  00F2               	movwf	??_GPIO_PinWrite+1
  5725  02D9  0872               	movf	??_GPIO_PinWrite+1,w
  5726  02DA  00F3               	movwf	GPIO_PinWrite@var_portNumber_u8
  5727                           
  5728                           ;gpio.c: 134: enm_pinNumber = enm_pinNumber & 0x07;
  5729  02DB  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  5730  02DC  3907               	andlw	7
  5731  02DD  00F1               	movwf	??_GPIO_PinWrite
  5732  02DE  0871               	movf	??_GPIO_PinWrite,w
  5733  02DF  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  5734                           
  5735                           ;gpio.c: 138: switch(var_portNumber_u8)
  5736  02E0  2B95               	goto	l1714
  5737  02E1                     l1682:	
  5738                           ;gpio.c: 139: {
  5739                           ;gpio.c: 141: case 0:
  5740                           
  5741                           
  5742                           ;gpio.c: 142: ((var_pinValue_u8)? ((PORTA) |= (1<<(enm_pinNumber))): ((PORTA) &= ~(1<<(e
      +                          nm_pinNumber))));
  5743  02E1  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  5744  02E2  1903               	btfsc	3,2
  5745  02E3  2AF4               	goto	l1686
  5746  02E4  3001               	movlw	1
  5747  02E5  00F1               	movwf	??_GPIO_PinWrite
  5748  02E6  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5749  02E7  2AEA               	goto	u2164
  5750  02E8                     u2165:	
  5751  02E8  1003               	clrc
  5752  02E9  0DF1               	rlf	??_GPIO_PinWrite,f
  5753  02EA                     u2164:	
  5754  02EA  3EFF               	addlw	-1
  5755  02EB  1D03               	skipz
  5756  02EC  2AE8               	goto	u2165
  5757  02ED  0871               	movf	??_GPIO_PinWrite,w
  5758  02EE  00F2               	movwf	??_GPIO_PinWrite+1
  5759  02EF  0872               	movf	??_GPIO_PinWrite+1,w
  5760  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  5761  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  5762  02F2  0485               	iorwf	5,f	;volatile
  5763  02F3  0008               	return
  5764  02F4                     l1686:	
  5765  02F4  3001               	movlw	1
  5766  02F5  00F1               	movwf	??_GPIO_PinWrite
  5767  02F6  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5768  02F7  2AFA               	goto	u2174
  5769  02F8                     u2175:	
  5770  02F8  1003               	clrc
  5771  02F9  0DF1               	rlf	??_GPIO_PinWrite,f
  5772  02FA                     u2174:	
  5773  02FA  3EFF               	addlw	-1
  5774  02FB  1D03               	skipz
  5775  02FC  2AF8               	goto	u2175
  5776  02FD  0871               	movf	??_GPIO_PinWrite,w
  5777  02FE  3AFF               	xorlw	255
  5778  02FF  00F2               	movwf	??_GPIO_PinWrite+1
  5779  0300  0872               	movf	??_GPIO_PinWrite+1,w
  5780  0301  1283               	bcf	3,5	;RP0=0, select bank0
  5781  0302  1303               	bcf	3,6	;RP1=0, select bank0
  5782  0303  0585               	andwf	5,f	;volatile
  5783                           
  5784                           ;gpio.c: 143: break;
  5785  0304  0008               	return
  5786  0305                     l1688:	
  5787                           ;gpio.c: 147: case 1:
  5788                           
  5789                           
  5790                           ;gpio.c: 148: ((var_pinValue_u8)? ((PORTB) |= (1<<(enm_pinNumber))): ((PORTB) &= ~(1<<(e
      +                          nm_pinNumber))));
  5791  0305  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  5792  0306  1903               	btfsc	3,2
  5793  0307  2B18               	goto	l1692
  5794  0308  3001               	movlw	1
  5795  0309  00F1               	movwf	??_GPIO_PinWrite
  5796  030A  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5797  030B  2B0E               	goto	u2194
  5798  030C                     u2195:	
  5799  030C  1003               	clrc
  5800  030D  0DF1               	rlf	??_GPIO_PinWrite,f
  5801  030E                     u2194:	
  5802  030E  3EFF               	addlw	-1
  5803  030F  1D03               	skipz
  5804  0310  2B0C               	goto	u2195
  5805  0311  0871               	movf	??_GPIO_PinWrite,w
  5806  0312  00F2               	movwf	??_GPIO_PinWrite+1
  5807  0313  0872               	movf	??_GPIO_PinWrite+1,w
  5808  0314  1283               	bcf	3,5	;RP0=0, select bank0
  5809  0315  1303               	bcf	3,6	;RP1=0, select bank0
  5810  0316  0486               	iorwf	6,f	;volatile
  5811  0317  0008               	return
  5812  0318                     l1692:	
  5813  0318  3001               	movlw	1
  5814  0319  00F1               	movwf	??_GPIO_PinWrite
  5815  031A  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5816  031B  2B1E               	goto	u2204
  5817  031C                     u2205:	
  5818  031C  1003               	clrc
  5819  031D  0DF1               	rlf	??_GPIO_PinWrite,f
  5820  031E                     u2204:	
  5821  031E  3EFF               	addlw	-1
  5822  031F  1D03               	skipz
  5823  0320  2B1C               	goto	u2205
  5824  0321  0871               	movf	??_GPIO_PinWrite,w
  5825  0322  3AFF               	xorlw	255
  5826  0323  00F2               	movwf	??_GPIO_PinWrite+1
  5827  0324  0872               	movf	??_GPIO_PinWrite+1,w
  5828  0325  1283               	bcf	3,5	;RP0=0, select bank0
  5829  0326  1303               	bcf	3,6	;RP1=0, select bank0
  5830  0327  0586               	andwf	6,f	;volatile
  5831                           
  5832                           ;gpio.c: 149: break;
  5833  0328  0008               	return
  5834  0329                     l1694:	
  5835                           ;gpio.c: 153: case 2:
  5836                           
  5837                           
  5838                           ;gpio.c: 154: ((var_pinValue_u8)? ((PORTC) |= (1<<(enm_pinNumber))): ((PORTC) &= ~(1<<(e
      +                          nm_pinNumber))));
  5839  0329  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  5840  032A  1903               	btfsc	3,2
  5841  032B  2B3C               	goto	l1698
  5842  032C  3001               	movlw	1
  5843  032D  00F1               	movwf	??_GPIO_PinWrite
  5844  032E  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5845  032F  2B32               	goto	u2224
  5846  0330                     u2225:	
  5847  0330  1003               	clrc
  5848  0331  0DF1               	rlf	??_GPIO_PinWrite,f
  5849  0332                     u2224:	
  5850  0332  3EFF               	addlw	-1
  5851  0333  1D03               	skipz
  5852  0334  2B30               	goto	u2225
  5853  0335  0871               	movf	??_GPIO_PinWrite,w
  5854  0336  00F2               	movwf	??_GPIO_PinWrite+1
  5855  0337  0872               	movf	??_GPIO_PinWrite+1,w
  5856  0338  1283               	bcf	3,5	;RP0=0, select bank0
  5857  0339  1303               	bcf	3,6	;RP1=0, select bank0
  5858  033A  0487               	iorwf	7,f	;volatile
  5859  033B  0008               	return
  5860  033C                     l1698:	
  5861  033C  3001               	movlw	1
  5862  033D  00F1               	movwf	??_GPIO_PinWrite
  5863  033E  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5864  033F  2B42               	goto	u2234
  5865  0340                     u2235:	
  5866  0340  1003               	clrc
  5867  0341  0DF1               	rlf	??_GPIO_PinWrite,f
  5868  0342                     u2234:	
  5869  0342  3EFF               	addlw	-1
  5870  0343  1D03               	skipz
  5871  0344  2B40               	goto	u2235
  5872  0345  0871               	movf	??_GPIO_PinWrite,w
  5873  0346  3AFF               	xorlw	255
  5874  0347  00F2               	movwf	??_GPIO_PinWrite+1
  5875  0348  0872               	movf	??_GPIO_PinWrite+1,w
  5876  0349  1283               	bcf	3,5	;RP0=0, select bank0
  5877  034A  1303               	bcf	3,6	;RP1=0, select bank0
  5878  034B  0587               	andwf	7,f	;volatile
  5879                           
  5880                           ;gpio.c: 155: break;
  5881  034C  0008               	return
  5882  034D                     l1700:	
  5883                           ;gpio.c: 159: case 3:
  5884                           
  5885                           
  5886                           ;gpio.c: 160: ((var_pinValue_u8)? ((PORTD) |= (1<<(enm_pinNumber))): ((PORTD) &= ~(1<<(e
      +                          nm_pinNumber))));
  5887  034D  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  5888  034E  1903               	btfsc	3,2
  5889  034F  2B60               	goto	l1704
  5890  0350  3001               	movlw	1
  5891  0351  00F1               	movwf	??_GPIO_PinWrite
  5892  0352  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5893  0353  2B56               	goto	u2254
  5894  0354                     u2255:	
  5895  0354  1003               	clrc
  5896  0355  0DF1               	rlf	??_GPIO_PinWrite,f
  5897  0356                     u2254:	
  5898  0356  3EFF               	addlw	-1
  5899  0357  1D03               	skipz
  5900  0358  2B54               	goto	u2255
  5901  0359  0871               	movf	??_GPIO_PinWrite,w
  5902  035A  00F2               	movwf	??_GPIO_PinWrite+1
  5903  035B  0872               	movf	??_GPIO_PinWrite+1,w
  5904  035C  1283               	bcf	3,5	;RP0=0, select bank0
  5905  035D  1303               	bcf	3,6	;RP1=0, select bank0
  5906  035E  0488               	iorwf	8,f	;volatile
  5907  035F  0008               	return
  5908  0360                     l1704:	
  5909  0360  3001               	movlw	1
  5910  0361  00F1               	movwf	??_GPIO_PinWrite
  5911  0362  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5912  0363  2B66               	goto	u2264
  5913  0364                     u2265:	
  5914  0364  1003               	clrc
  5915  0365  0DF1               	rlf	??_GPIO_PinWrite,f
  5916  0366                     u2264:	
  5917  0366  3EFF               	addlw	-1
  5918  0367  1D03               	skipz
  5919  0368  2B64               	goto	u2265
  5920  0369  0871               	movf	??_GPIO_PinWrite,w
  5921  036A  3AFF               	xorlw	255
  5922  036B  00F2               	movwf	??_GPIO_PinWrite+1
  5923  036C  0872               	movf	??_GPIO_PinWrite+1,w
  5924  036D  1283               	bcf	3,5	;RP0=0, select bank0
  5925  036E  1303               	bcf	3,6	;RP1=0, select bank0
  5926  036F  0588               	andwf	8,f	;volatile
  5927                           
  5928                           ;gpio.c: 161: break;
  5929  0370  0008               	return
  5930  0371                     l1706:	
  5931                           ;gpio.c: 165: case 4:
  5932                           
  5933                           
  5934                           ;gpio.c: 166: ((var_pinValue_u8)? ((PORTE) |= (1<<(enm_pinNumber))): ((PORTE) &= ~(1<<(e
      +                          nm_pinNumber))));
  5935  0371  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  5936  0372  1903               	btfsc	3,2
  5937  0373  2B84               	goto	l1710
  5938  0374  3001               	movlw	1
  5939  0375  00F1               	movwf	??_GPIO_PinWrite
  5940  0376  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5941  0377  2B7A               	goto	u2284
  5942  0378                     u2285:	
  5943  0378  1003               	clrc
  5944  0379  0DF1               	rlf	??_GPIO_PinWrite,f
  5945  037A                     u2284:	
  5946  037A  3EFF               	addlw	-1
  5947  037B  1D03               	skipz
  5948  037C  2B78               	goto	u2285
  5949  037D  0871               	movf	??_GPIO_PinWrite,w
  5950  037E  00F2               	movwf	??_GPIO_PinWrite+1
  5951  037F  0872               	movf	??_GPIO_PinWrite+1,w
  5952  0380  1283               	bcf	3,5	;RP0=0, select bank0
  5953  0381  1303               	bcf	3,6	;RP1=0, select bank0
  5954  0382  0489               	iorwf	9,f	;volatile
  5955  0383  0008               	return
  5956  0384                     l1710:	
  5957  0384  3001               	movlw	1
  5958  0385  00F1               	movwf	??_GPIO_PinWrite
  5959  0386  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5960  0387  2B8A               	goto	u2294
  5961  0388                     u2295:	
  5962  0388  1003               	clrc
  5963  0389  0DF1               	rlf	??_GPIO_PinWrite,f
  5964  038A                     u2294:	
  5965  038A  3EFF               	addlw	-1
  5966  038B  1D03               	skipz
  5967  038C  2B88               	goto	u2295
  5968  038D  0871               	movf	??_GPIO_PinWrite,w
  5969  038E  3AFF               	xorlw	255
  5970  038F  00F2               	movwf	??_GPIO_PinWrite+1
  5971  0390  0872               	movf	??_GPIO_PinWrite+1,w
  5972  0391  1283               	bcf	3,5	;RP0=0, select bank0
  5973  0392  1303               	bcf	3,6	;RP1=0, select bank0
  5974  0393  0589               	andwf	9,f	;volatile
  5975                           
  5976                           ;gpio.c: 169: }
  5977                           
  5978                           ;gpio.c: 167: break;
  5979  0394  0008               	return
  5980  0395                     l1714:	
  5981  0395  0873               	movf	GPIO_PinWrite@var_portNumber_u8,w
  5982                           
  5983                           ; Switch size 1, requested type "space"
  5984                           ; Number of cases is 5, Range of values is 0 to 4
  5985                           ; switch strategies available:
  5986                           ; Name         Instructions Cycles
  5987                           ; simple_byte           16     9 (average)
  5988                           ; direct_byte           23     8 (fixed)
  5989                           ; jumptable            260     6 (fixed)
  5990                           ;	Chosen strategy is simple_byte
  5991  0396  3A00               	xorlw	0	; case 0
  5992  0397  1903               	skipnz
  5993  0398  2AE1               	goto	l1682
  5994  0399  3A01               	xorlw	1	; case 1
  5995  039A  1903               	skipnz
  5996  039B  2B05               	goto	l1688
  5997  039C  3A03               	xorlw	3	; case 2
  5998  039D  1903               	skipnz
  5999  039E  2B29               	goto	l1694
  6000  039F  3A01               	xorlw	1	; case 3
  6001  03A0  1903               	skipnz
  6002  03A1  2B4D               	goto	l1700
  6003  03A2  3A07               	xorlw	7	; case 4
  6004  03A3  1903               	skipnz
  6005  03A4  2B71               	goto	l1706
  6006  03A5  2BA6               	goto	l80
  6007  03A6                     l80:	
  6008  03A6  0008               	return
  6009  03A7                     __end_of_GPIO_PinWrite:	
  6010                           
  6011                           	psect	text30
  6012  0C57                     __ptext30:	
  6013 ;; *************** function _GPIO_PinRead *****************
  6014 ;; Defined at:
  6015 ;;		line 192 in file "../00-libfiles/gpio.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;  enm_pinNumbe    1    wreg     enum E1088
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  6020 ;;  returnStatus    1    3[COMMON] unsigned char 
  6021 ;;  var_portNumb    1    2[COMMON] unsigned char 
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  1    wreg      unsigned char 
  6024 ;; Registers used:
  6025 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6031 ;;      Params:         0       0       0       0       0
  6032 ;;      Locals:         3       0       0       0       0
  6033 ;;      Temps:          2       0       0       0       0
  6034 ;;      Totals:         5       0       0       0       0
  6035 ;;Total ram usage:        5 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; This function calls:
  6038 ;;		Nothing
  6039 ;; This function is called by:
  6040 ;;		_lcd_BusyCheck
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           
  6045                           ;psect for function _GPIO_PinRead
  6046  0C57                     _GPIO_PinRead:	
  6047                           
  6048                           ;incstack = 0
  6049                           ; Regs used in _GPIO_PinRead: [wreg-fsr0h+status,2+status,0]
  6050                           ;GPIO_PinRead@enm_pinNumber stored from wreg
  6051  0C57  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  6052                           
  6053                           ;gpio.c: 194: uint8_t var_portNumber_u8;
  6054                           ;gpio.c: 195: uint8_t returnStatus = 0;
  6055  0C58  01F3               	clrf	GPIO_PinRead@returnStatus
  6056                           
  6057                           ;gpio.c: 197: var_portNumber_u8 = (enm_pinNumber>>3);
  6058  0C59  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  6059  0C5A  00F0               	movwf	??_GPIO_PinRead
  6060  0C5B  3003               	movlw	3
  6061  0C5C                     u2305:	
  6062  0C5C  1003               	clrc
  6063  0C5D  0CF0               	rrf	??_GPIO_PinRead,f
  6064  0C5E  3EFF               	addlw	-1
  6065  0C5F  1D03               	skipz
  6066  0C60  2C5C               	goto	u2305
  6067  0C61  0870               	movf	??_GPIO_PinRead,w
  6068  0C62  00F1               	movwf	??_GPIO_PinRead+1
  6069  0C63  0871               	movf	??_GPIO_PinRead+1,w
  6070  0C64  00F2               	movwf	GPIO_PinRead@var_portNumber_u8
  6071                           
  6072                           ;gpio.c: 198: enm_pinNumber = enm_pinNumber & 0x07;
  6073  0C65  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  6074  0C66  3907               	andlw	7
  6075  0C67  00F0               	movwf	??_GPIO_PinRead
  6076  0C68  0870               	movf	??_GPIO_PinRead,w
  6077  0C69  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  6078                           
  6079                           ;gpio.c: 201: switch(var_portNumber_u8)
  6080  0C6A  2CB9               	goto	l1734
  6081  0C6B                     l1722:	
  6082                           ;gpio.c: 202: {
  6083                           ;gpio.c: 204: case 0:
  6084                           
  6085                           
  6086                           ;gpio.c: 205: returnStatus = (((PORTA)&((1<<(enm_pinNumber))))!=0u);
  6087  0C6B  3001               	movlw	1
  6088  0C6C  00F0               	movwf	??_GPIO_PinRead
  6089  0C6D  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6090  0C6E  2C71               	goto	u2314
  6091  0C6F                     u2315:	
  6092  0C6F  1003               	clrc
  6093  0C70  0DF0               	rlf	??_GPIO_PinRead,f
  6094  0C71                     u2314:	
  6095  0C71  3EFF               	addlw	-1
  6096  0C72  1D03               	skipz
  6097  0C73  2C6F               	goto	u2315
  6098  0C74  0870               	movf	??_GPIO_PinRead,w
  6099  0C75  1283               	bcf	3,5	;RP0=0, select bank0
  6100  0C76  1303               	bcf	3,6	;RP1=0, select bank0
  6101  0C77  0505               	andwf	5,w	;volatile
  6102  0C78  2CB0               	goto	L7
  6103  0C79                     l1724:	
  6104                           ;gpio.c: 209: case 1:
  6105                           
  6106                           ;gpio.c: 206: break;
  6107                           
  6108                           
  6109                           ;gpio.c: 210: returnStatus = (((PORTB)&((1<<(enm_pinNumber))))!=0u);
  6110  0C79  3001               	movlw	1
  6111  0C7A  00F0               	movwf	??_GPIO_PinRead
  6112  0C7B  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6113  0C7C  2C7F               	goto	u2344
  6114  0C7D                     u2345:	
  6115  0C7D  1003               	clrc
  6116  0C7E  0DF0               	rlf	??_GPIO_PinRead,f
  6117  0C7F                     u2344:	
  6118  0C7F  3EFF               	addlw	-1
  6119  0C80  1D03               	skipz
  6120  0C81  2C7D               	goto	u2345
  6121  0C82  0870               	movf	??_GPIO_PinRead,w
  6122  0C83  1283               	bcf	3,5	;RP0=0, select bank0
  6123  0C84  1303               	bcf	3,6	;RP1=0, select bank0
  6124  0C85  0506               	andwf	6,w	;volatile
  6125  0C86  2CB0               	goto	L7
  6126  0C87                     l1726:	
  6127                           ;gpio.c: 214: case 2:
  6128                           
  6129                           ;gpio.c: 211: break;
  6130                           
  6131                           
  6132                           ;gpio.c: 215: returnStatus = (((PORTC)&((1<<(enm_pinNumber))))!=0u);
  6133  0C87  3001               	movlw	1
  6134  0C88  00F0               	movwf	??_GPIO_PinRead
  6135  0C89  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6136  0C8A  2C8D               	goto	u2374
  6137  0C8B                     u2375:	
  6138  0C8B  1003               	clrc
  6139  0C8C  0DF0               	rlf	??_GPIO_PinRead,f
  6140  0C8D                     u2374:	
  6141  0C8D  3EFF               	addlw	-1
  6142  0C8E  1D03               	skipz
  6143  0C8F  2C8B               	goto	u2375
  6144  0C90  0870               	movf	??_GPIO_PinRead,w
  6145  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  6146  0C92  1303               	bcf	3,6	;RP1=0, select bank0
  6147  0C93  0507               	andwf	7,w	;volatile
  6148  0C94  2CB0               	goto	L7
  6149  0C95                     l1728:	
  6150                           ;gpio.c: 220: case 3:
  6151                           
  6152                           ;gpio.c: 216: break;
  6153                           
  6154                           
  6155                           ;gpio.c: 221: returnStatus = (((PORTD)&((1<<(enm_pinNumber))))!=0u);
  6156  0C95  3001               	movlw	1
  6157  0C96  00F0               	movwf	??_GPIO_PinRead
  6158  0C97  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6159  0C98  2C9B               	goto	u2404
  6160  0C99                     u2405:	
  6161  0C99  1003               	clrc
  6162  0C9A  0DF0               	rlf	??_GPIO_PinRead,f
  6163  0C9B                     u2404:	
  6164  0C9B  3EFF               	addlw	-1
  6165  0C9C  1D03               	skipz
  6166  0C9D  2C99               	goto	u2405
  6167  0C9E  0870               	movf	??_GPIO_PinRead,w
  6168  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  6169  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  6170  0CA1  0508               	andwf	8,w	;volatile
  6171  0CA2  2CB0               	goto	L7
  6172  0CA3                     l1730:	
  6173                           ;gpio.c: 226: case 4:
  6174                           
  6175                           ;gpio.c: 222: break;
  6176                           
  6177                           
  6178                           ;gpio.c: 227: returnStatus = (((PORTE)&((1<<(enm_pinNumber))))!=0u);
  6179  0CA3  3001               	movlw	1
  6180  0CA4  00F0               	movwf	??_GPIO_PinRead
  6181  0CA5  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6182  0CA6  2CA9               	goto	u2434
  6183  0CA7                     u2435:	
  6184  0CA7  1003               	clrc
  6185  0CA8  0DF0               	rlf	??_GPIO_PinRead,f
  6186  0CA9                     u2434:	
  6187  0CA9  3EFF               	addlw	-1
  6188  0CAA  1D03               	skipz
  6189  0CAB  2CA7               	goto	u2435
  6190  0CAC  0870               	movf	??_GPIO_PinRead,w
  6191  0CAD  1283               	bcf	3,5	;RP0=0, select bank0
  6192  0CAE  1303               	bcf	3,6	;RP1=0, select bank0
  6193  0CAF  0509               	andwf	9,w	;volatile
  6194  0CB0                     L7:	
  6195  0CB0  1903               	btfsc	3,2
  6196  0CB1  2CB4               	goto	u2440
  6197  0CB2  3001               	movlw	1
  6198  0CB3  2CB5               	goto	u2450
  6199  0CB4                     u2440:	
  6200  0CB4  3000               	movlw	0
  6201  0CB5                     u2450:	
  6202  0CB5  00F1               	movwf	??_GPIO_PinRead+1
  6203  0CB6  0871               	movf	??_GPIO_PinRead+1,w
  6204  0CB7  00F3               	movwf	GPIO_PinRead@returnStatus
  6205                           
  6206                           ;gpio.c: 229: }
  6207                           
  6208                           ;gpio.c: 228: break;
  6209  0CB8  2CCA               	goto	l1736
  6210  0CB9                     l1734:	
  6211  0CB9  0872               	movf	GPIO_PinRead@var_portNumber_u8,w
  6212                           
  6213                           ; Switch size 1, requested type "space"
  6214                           ; Number of cases is 5, Range of values is 0 to 4
  6215                           ; switch strategies available:
  6216                           ; Name         Instructions Cycles
  6217                           ; simple_byte           16     9 (average)
  6218                           ; direct_byte           23     8 (fixed)
  6219                           ; jumptable            260     6 (fixed)
  6220                           ;	Chosen strategy is simple_byte
  6221  0CBA  3A00               	xorlw	0	; case 0
  6222  0CBB  1903               	skipnz
  6223  0CBC  2C6B               	goto	l1722
  6224  0CBD  3A01               	xorlw	1	; case 1
  6225  0CBE  1903               	skipnz
  6226  0CBF  2C79               	goto	l1724
  6227  0CC0  3A03               	xorlw	3	; case 2
  6228  0CC1  1903               	skipnz
  6229  0CC2  2C87               	goto	l1726
  6230  0CC3  3A01               	xorlw	1	; case 3
  6231  0CC4  1903               	skipnz
  6232  0CC5  2C95               	goto	l1728
  6233  0CC6  3A07               	xorlw	7	; case 4
  6234  0CC7  1903               	skipnz
  6235  0CC8  2CA3               	goto	l1730
  6236  0CC9  2CCA               	goto	l1736
  6237  0CCA                     l1736:	
  6238                           
  6239                           ;gpio.c: 230: return returnStatus;
  6240  0CCA  0873               	movf	GPIO_PinRead@returnStatus,w
  6241  0CCB  0008               	return
  6242  0CCC                     __end_of_GPIO_PinRead:	
  6243                           
  6244                           	psect	text31
  6245  01F5                     __ptext31:	
  6246 ;; *************** function _GPIO_PinDirection *****************
  6247 ;; Defined at:
  6248 ;;		line 60 in file "../00-libfiles/gpio.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  enm_pinNumbe    1    wreg     enum E1088
  6251 ;;  var_pinDirn_    1    0[COMMON] unsigned char 
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  6254 ;;  var_portNumb    1    3[COMMON] unsigned char 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  1    wreg      void 
  6257 ;; Registers used:
  6258 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6264 ;;      Params:         1       0       0       0       0
  6265 ;;      Locals:         2       0       0       0       0
  6266 ;;      Temps:          2       0       0       0       0
  6267 ;;      Totals:         5       0       0       0       0
  6268 ;;Total ram usage:        5 bytes
  6269 ;; Hardware stack levels used:    1
  6270 ;; This function calls:
  6271 ;;		Nothing
  6272 ;; This function is called by:
  6273 ;;		_LCD_SetUp
  6274 ;;		_lcd_BusyCheck
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           
  6279                           ;psect for function _GPIO_PinDirection
  6280  01F5                     _GPIO_PinDirection:	
  6281                           
  6282                           ;incstack = 0
  6283                           ; Regs used in _GPIO_PinDirection: [wreg-fsr0h+status,2+status,0]
  6284                           ;GPIO_PinDirection@enm_pinNumber stored from wreg
  6285  01F5  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  6286                           
  6287                           ;gpio.c: 63: uint8_t var_portNumber_u8;
  6288                           ;gpio.c: 66: var_portNumber_u8 = (enm_pinNumber>>3);
  6289  01F6  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  6290  01F7  00F1               	movwf	??_GPIO_PinDirection
  6291  01F8  3003               	movlw	3
  6292  01F9                     u1985:	
  6293  01F9  1003               	clrc
  6294  01FA  0CF1               	rrf	??_GPIO_PinDirection,f
  6295  01FB  3EFF               	addlw	-1
  6296  01FC  1D03               	skipz
  6297  01FD  29F9               	goto	u1985
  6298  01FE  0871               	movf	??_GPIO_PinDirection,w
  6299  01FF  00F2               	movwf	??_GPIO_PinDirection+1
  6300  0200  0872               	movf	??_GPIO_PinDirection+1,w
  6301  0201  00F3               	movwf	GPIO_PinDirection@var_portNumber_u8
  6302                           
  6303                           ;gpio.c: 67: enm_pinNumber = enm_pinNumber & 0x07;
  6304  0202  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  6305  0203  3907               	andlw	7
  6306  0204  00F1               	movwf	??_GPIO_PinDirection
  6307  0205  0871               	movf	??_GPIO_PinDirection,w
  6308  0206  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  6309                           
  6310                           ;gpio.c: 71: switch(var_portNumber_u8)
  6311  0207  2ABC               	goto	l1676
  6312  0208                     l1644:	
  6313                           ;gpio.c: 72: {
  6314                           ;gpio.c: 74: case 0:
  6315                           
  6316                           
  6317                           ;gpio.c: 75: ((var_pinDirn_u8)? ((TRISA) |= (1<<(enm_pinNumber))): ((TRISA) &= ~(1<<(enm
      +                          _pinNumber))));
  6318  0208  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  6319  0209  1903               	btfsc	3,2
  6320  020A  2A1B               	goto	l1648
  6321  020B  3001               	movlw	1
  6322  020C  00F1               	movwf	??_GPIO_PinDirection
  6323  020D  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6324  020E  2A11               	goto	u2004
  6325  020F                     u2005:	
  6326  020F  1003               	clrc
  6327  0210  0DF1               	rlf	??_GPIO_PinDirection,f
  6328  0211                     u2004:	
  6329  0211  3EFF               	addlw	-1
  6330  0212  1D03               	skipz
  6331  0213  2A0F               	goto	u2005
  6332  0214  0871               	movf	??_GPIO_PinDirection,w
  6333  0215  00F2               	movwf	??_GPIO_PinDirection+1
  6334  0216  0872               	movf	??_GPIO_PinDirection+1,w
  6335  0217  1683               	bsf	3,5	;RP0=1, select bank1
  6336  0218  1303               	bcf	3,6	;RP1=0, select bank1
  6337  0219  0485               	iorwf	5,f	;volatile
  6338  021A  0008               	return
  6339  021B                     l1648:	
  6340  021B  3001               	movlw	1
  6341  021C  00F1               	movwf	??_GPIO_PinDirection
  6342  021D  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6343  021E  2A21               	goto	u2014
  6344  021F                     u2015:	
  6345  021F  1003               	clrc
  6346  0220  0DF1               	rlf	??_GPIO_PinDirection,f
  6347  0221                     u2014:	
  6348  0221  3EFF               	addlw	-1
  6349  0222  1D03               	skipz
  6350  0223  2A1F               	goto	u2015
  6351  0224  0871               	movf	??_GPIO_PinDirection,w
  6352  0225  3AFF               	xorlw	255
  6353  0226  00F2               	movwf	??_GPIO_PinDirection+1
  6354  0227  0872               	movf	??_GPIO_PinDirection+1,w
  6355  0228  1683               	bsf	3,5	;RP0=1, select bank1
  6356  0229  1303               	bcf	3,6	;RP1=0, select bank1
  6357  022A  0585               	andwf	5,f	;volatile
  6358                           
  6359                           ;gpio.c: 76: break;
  6360  022B  0008               	return
  6361  022C                     l1650:	
  6362                           ;gpio.c: 80: case 1:
  6363                           
  6364                           
  6365                           ;gpio.c: 81: ((var_pinDirn_u8)? ((TRISB) |= (1<<(enm_pinNumber))): ((TRISB) &= ~(1<<(enm
      +                          _pinNumber))));
  6366  022C  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  6367  022D  1903               	btfsc	3,2
  6368  022E  2A3F               	goto	l1654
  6369  022F  3001               	movlw	1
  6370  0230  00F1               	movwf	??_GPIO_PinDirection
  6371  0231  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6372  0232  2A35               	goto	u2034
  6373  0233                     u2035:	
  6374  0233  1003               	clrc
  6375  0234  0DF1               	rlf	??_GPIO_PinDirection,f
  6376  0235                     u2034:	
  6377  0235  3EFF               	addlw	-1
  6378  0236  1D03               	skipz
  6379  0237  2A33               	goto	u2035
  6380  0238  0871               	movf	??_GPIO_PinDirection,w
  6381  0239  00F2               	movwf	??_GPIO_PinDirection+1
  6382  023A  0872               	movf	??_GPIO_PinDirection+1,w
  6383  023B  1683               	bsf	3,5	;RP0=1, select bank1
  6384  023C  1303               	bcf	3,6	;RP1=0, select bank1
  6385  023D  0486               	iorwf	6,f	;volatile
  6386  023E  0008               	return
  6387  023F                     l1654:	
  6388  023F  3001               	movlw	1
  6389  0240  00F1               	movwf	??_GPIO_PinDirection
  6390  0241  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6391  0242  2A45               	goto	u2044
  6392  0243                     u2045:	
  6393  0243  1003               	clrc
  6394  0244  0DF1               	rlf	??_GPIO_PinDirection,f
  6395  0245                     u2044:	
  6396  0245  3EFF               	addlw	-1
  6397  0246  1D03               	skipz
  6398  0247  2A43               	goto	u2045
  6399  0248  0871               	movf	??_GPIO_PinDirection,w
  6400  0249  3AFF               	xorlw	255
  6401  024A  00F2               	movwf	??_GPIO_PinDirection+1
  6402  024B  0872               	movf	??_GPIO_PinDirection+1,w
  6403  024C  1683               	bsf	3,5	;RP0=1, select bank1
  6404  024D  1303               	bcf	3,6	;RP1=0, select bank1
  6405  024E  0586               	andwf	6,f	;volatile
  6406                           
  6407                           ;gpio.c: 82: break;
  6408  024F  0008               	return
  6409  0250                     l1656:	
  6410                           ;gpio.c: 86: case 2:
  6411                           
  6412                           
  6413                           ;gpio.c: 87: ((var_pinDirn_u8)? ((TRISC) |= (1<<(enm_pinNumber))): ((TRISC) &= ~(1<<(enm
      +                          _pinNumber))));
  6414  0250  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  6415  0251  1903               	btfsc	3,2
  6416  0252  2A63               	goto	l1660
  6417  0253  3001               	movlw	1
  6418  0254  00F1               	movwf	??_GPIO_PinDirection
  6419  0255  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6420  0256  2A59               	goto	u2064
  6421  0257                     u2065:	
  6422  0257  1003               	clrc
  6423  0258  0DF1               	rlf	??_GPIO_PinDirection,f
  6424  0259                     u2064:	
  6425  0259  3EFF               	addlw	-1
  6426  025A  1D03               	skipz
  6427  025B  2A57               	goto	u2065
  6428  025C  0871               	movf	??_GPIO_PinDirection,w
  6429  025D  00F2               	movwf	??_GPIO_PinDirection+1
  6430  025E  0872               	movf	??_GPIO_PinDirection+1,w
  6431  025F  1683               	bsf	3,5	;RP0=1, select bank1
  6432  0260  1303               	bcf	3,6	;RP1=0, select bank1
  6433  0261  0487               	iorwf	7,f	;volatile
  6434  0262  0008               	return
  6435  0263                     l1660:	
  6436  0263  3001               	movlw	1
  6437  0264  00F1               	movwf	??_GPIO_PinDirection
  6438  0265  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6439  0266  2A69               	goto	u2074
  6440  0267                     u2075:	
  6441  0267  1003               	clrc
  6442  0268  0DF1               	rlf	??_GPIO_PinDirection,f
  6443  0269                     u2074:	
  6444  0269  3EFF               	addlw	-1
  6445  026A  1D03               	skipz
  6446  026B  2A67               	goto	u2075
  6447  026C  0871               	movf	??_GPIO_PinDirection,w
  6448  026D  3AFF               	xorlw	255
  6449  026E  00F2               	movwf	??_GPIO_PinDirection+1
  6450  026F  0872               	movf	??_GPIO_PinDirection+1,w
  6451  0270  1683               	bsf	3,5	;RP0=1, select bank1
  6452  0271  1303               	bcf	3,6	;RP1=0, select bank1
  6453  0272  0587               	andwf	7,f	;volatile
  6454                           
  6455                           ;gpio.c: 88: break;
  6456  0273  0008               	return
  6457  0274                     l1662:	
  6458                           ;gpio.c: 92: case 3:
  6459                           
  6460                           
  6461                           ;gpio.c: 93: ((var_pinDirn_u8)? ((TRISD) |= (1<<(enm_pinNumber))): ((TRISD) &= ~(1<<(enm
      +                          _pinNumber))));
  6462  0274  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  6463  0275  1903               	btfsc	3,2
  6464  0276  2A87               	goto	l1666
  6465  0277  3001               	movlw	1
  6466  0278  00F1               	movwf	??_GPIO_PinDirection
  6467  0279  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6468  027A  2A7D               	goto	u2094
  6469  027B                     u2095:	
  6470  027B  1003               	clrc
  6471  027C  0DF1               	rlf	??_GPIO_PinDirection,f
  6472  027D                     u2094:	
  6473  027D  3EFF               	addlw	-1
  6474  027E  1D03               	skipz
  6475  027F  2A7B               	goto	u2095
  6476  0280  0871               	movf	??_GPIO_PinDirection,w
  6477  0281  00F2               	movwf	??_GPIO_PinDirection+1
  6478  0282  0872               	movf	??_GPIO_PinDirection+1,w
  6479  0283  1683               	bsf	3,5	;RP0=1, select bank1
  6480  0284  1303               	bcf	3,6	;RP1=0, select bank1
  6481  0285  0488               	iorwf	8,f	;volatile
  6482  0286  0008               	return
  6483  0287                     l1666:	
  6484  0287  3001               	movlw	1
  6485  0288  00F1               	movwf	??_GPIO_PinDirection
  6486  0289  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6487  028A  2A8D               	goto	u2104
  6488  028B                     u2105:	
  6489  028B  1003               	clrc
  6490  028C  0DF1               	rlf	??_GPIO_PinDirection,f
  6491  028D                     u2104:	
  6492  028D  3EFF               	addlw	-1
  6493  028E  1D03               	skipz
  6494  028F  2A8B               	goto	u2105
  6495  0290  0871               	movf	??_GPIO_PinDirection,w
  6496  0291  3AFF               	xorlw	255
  6497  0292  00F2               	movwf	??_GPIO_PinDirection+1
  6498  0293  0872               	movf	??_GPIO_PinDirection+1,w
  6499  0294  1683               	bsf	3,5	;RP0=1, select bank1
  6500  0295  1303               	bcf	3,6	;RP1=0, select bank1
  6501  0296  0588               	andwf	8,f	;volatile
  6502                           
  6503                           ;gpio.c: 94: break;
  6504  0297  0008               	return
  6505  0298                     l1668:	
  6506                           ;gpio.c: 97: case 4:
  6507                           
  6508                           
  6509                           ;gpio.c: 98: ((var_pinDirn_u8)? ((TRISE) |= (1<<(enm_pinNumber))): ((TRISE) &= ~(1<<(enm
      +                          _pinNumber))));
  6510  0298  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  6511  0299  1903               	btfsc	3,2
  6512  029A  2AAB               	goto	l1672
  6513  029B  3001               	movlw	1
  6514  029C  00F1               	movwf	??_GPIO_PinDirection
  6515  029D  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6516  029E  2AA1               	goto	u2124
  6517  029F                     u2125:	
  6518  029F  1003               	clrc
  6519  02A0  0DF1               	rlf	??_GPIO_PinDirection,f
  6520  02A1                     u2124:	
  6521  02A1  3EFF               	addlw	-1
  6522  02A2  1D03               	skipz
  6523  02A3  2A9F               	goto	u2125
  6524  02A4  0871               	movf	??_GPIO_PinDirection,w
  6525  02A5  00F2               	movwf	??_GPIO_PinDirection+1
  6526  02A6  0872               	movf	??_GPIO_PinDirection+1,w
  6527  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  6528  02A8  1303               	bcf	3,6	;RP1=0, select bank1
  6529  02A9  0489               	iorwf	9,f	;volatile
  6530  02AA  0008               	return
  6531  02AB                     l1672:	
  6532  02AB  3001               	movlw	1
  6533  02AC  00F1               	movwf	??_GPIO_PinDirection
  6534  02AD  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  6535  02AE  2AB1               	goto	u2134
  6536  02AF                     u2135:	
  6537  02AF  1003               	clrc
  6538  02B0  0DF1               	rlf	??_GPIO_PinDirection,f
  6539  02B1                     u2134:	
  6540  02B1  3EFF               	addlw	-1
  6541  02B2  1D03               	skipz
  6542  02B3  2AAF               	goto	u2135
  6543  02B4  0871               	movf	??_GPIO_PinDirection,w
  6544  02B5  3AFF               	xorlw	255
  6545  02B6  00F2               	movwf	??_GPIO_PinDirection+1
  6546  02B7  0872               	movf	??_GPIO_PinDirection+1,w
  6547  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  6548  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  6549  02BA  0589               	andwf	9,f	;volatile
  6550                           
  6551                           ;gpio.c: 101: }
  6552                           
  6553                           ;gpio.c: 99: break;
  6554  02BB  0008               	return
  6555  02BC                     l1676:	
  6556  02BC  0873               	movf	GPIO_PinDirection@var_portNumber_u8,w
  6557                           
  6558                           ; Switch size 1, requested type "space"
  6559                           ; Number of cases is 5, Range of values is 0 to 4
  6560                           ; switch strategies available:
  6561                           ; Name         Instructions Cycles
  6562                           ; simple_byte           16     9 (average)
  6563                           ; direct_byte           23     8 (fixed)
  6564                           ; jumptable            260     6 (fixed)
  6565                           ;	Chosen strategy is simple_byte
  6566  02BD  3A00               	xorlw	0	; case 0
  6567  02BE  1903               	skipnz
  6568  02BF  2A08               	goto	l1644
  6569  02C0  3A01               	xorlw	1	; case 1
  6570  02C1  1903               	skipnz
  6571  02C2  2A2C               	goto	l1650
  6572  02C3  3A03               	xorlw	3	; case 2
  6573  02C4  1903               	skipnz
  6574  02C5  2A50               	goto	l1656
  6575  02C6  3A01               	xorlw	1	; case 3
  6576  02C7  1903               	skipnz
  6577  02C8  2A74               	goto	l1662
  6578  02C9  3A07               	xorlw	7	; case 4
  6579  02CA  1903               	skipnz
  6580  02CB  2A98               	goto	l1668
  6581  02CC  2ACD               	goto	l50
  6582  02CD                     l50:	
  6583  02CD  0008               	return
  6584  02CE                     __end_of_GPIO_PinDirection:	
  6585                           
  6586                           	psect	text32
  6587  08FB                     __ptext32:	
  6588 ;; *************** function _DELAY_ms *****************
  6589 ;; Defined at:
  6590 ;;		line 75 in file "../00-libfiles/delay.c"
  6591 ;; Parameters:    Size  Location     Type
  6592 ;;  ms_count        2    2[COMMON] unsigned int 
  6593 ;; Auto vars:     Size  Location     Type
  6594 ;;		None
  6595 ;; Return value:  Size  Location     Type
  6596 ;;                  1    wreg      void 
  6597 ;; Registers used:
  6598 ;;		wreg, status,2, status,0, pclath, cstack
  6599 ;; Tracked objects:
  6600 ;;		On entry : 0/0
  6601 ;;		On exit  : 0/0
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6604 ;;      Params:         2       0       0       0       0
  6605 ;;      Locals:         0       0       0       0       0
  6606 ;;      Temps:          0       0       0       0       0
  6607 ;;      Totals:         2       0       0       0       0
  6608 ;;Total ram usage:        2 bytes
  6609 ;; Hardware stack levels used:    1
  6610 ;; Hardware stack levels required when called:    1
  6611 ;; This function calls:
  6612 ;;		_DELAY_us
  6613 ;; This function is called by:
  6614 ;;		_LCD_Init
  6615 ;;		_lcd_BusyCheck
  6616 ;;		_lcd_Reset
  6617 ;;		_LCD_ScrollMessage
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           
  6621                           
  6622                           ;psect for function _DELAY_ms
  6623  08FB                     _DELAY_ms:	
  6624  08FB                     l1746:	
  6625                           ;delay.c: 77: while (ms_count != 0)
  6626                           
  6627                           ;incstack = 0
  6628                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  6629                           
  6630  08FB  0872               	movf	DELAY_ms@ms_count,w
  6631  08FC  0473               	iorwf	DELAY_ms@ms_count+1,w
  6632  08FD  1903               	btfsc	3,2
  6633  08FE  0008               	return
  6634                           
  6635                           ;delay.c: 78: {
  6636                           ;delay.c: 79: DELAY_us(300u);
  6637  08FF  302C               	movlw	44
  6638  0900  00F0               	movwf	DELAY_us@us_count
  6639  0901  3001               	movlw	1
  6640  0902  00F1               	movwf	DELAY_us@us_count+1
  6641  0903  120A  158A  20DD  120A  158A  	fcall	_DELAY_us
  6642                           
  6643                           ;delay.c: 80: ms_count--;
  6644  0908  3001               	movlw	1
  6645  0909  02F2               	subwf	DELAY_ms@ms_count,f
  6646  090A  3000               	movlw	0
  6647  090B  1C03               	skipc
  6648  090C  03F3               	decf	DELAY_ms@ms_count+1,f
  6649  090D  02F3               	subwf	DELAY_ms@ms_count+1,f
  6650  090E  28FB               	goto	l1746
  6651  090F                     __end_of_DELAY_ms:	
  6652                           
  6653                           	psect	text33
  6654  08CB                     __ptext33:	
  6655 ;; *************** function _ADC_Init *****************
  6656 ;; Defined at:
  6657 ;;		line 54 in file "../00-libfiles/adc.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;		None
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;		None
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  1    wreg      void 
  6664 ;; Registers used:
  6665 ;;		wreg, status,2
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/0
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6671 ;;      Params:         0       0       0       0       0
  6672 ;;      Locals:         0       0       0       0       0
  6673 ;;      Temps:          0       0       0       0       0
  6674 ;;      Totals:         0       0       0       0       0
  6675 ;;Total ram usage:        0 bytes
  6676 ;; Hardware stack levels used:    1
  6677 ;; This function calls:
  6678 ;;		Nothing
  6679 ;; This function is called by:
  6680 ;;		_main
  6681 ;; This function uses a non-reentrant model
  6682 ;;
  6683                           
  6684                           
  6685                           ;psect for function _ADC_Init
  6686  08CB                     _ADC_Init:	
  6687                           
  6688                           ;adc.c: 56: ADCON0=0x00;
  6689                           
  6690                           ;incstack = 0
  6691                           ; Regs used in _ADC_Init: [wreg+status,2]
  6692  08CB  1283               	bcf	3,5	;RP0=0, select bank0
  6693  08CC  1303               	bcf	3,6	;RP1=0, select bank0
  6694  08CD  019F               	clrf	31	;volatile
  6695                           
  6696                           ;adc.c: 57: ADCON1=0x80;
  6697  08CE  3080               	movlw	128
  6698  08CF  1683               	bsf	3,5	;RP0=1, select bank1
  6699  08D0  1303               	bcf	3,6	;RP1=0, select bank1
  6700  08D1  009F               	movwf	31	;volatile
  6701  08D2  0008               	return
  6702  08D3                     __end_of_ADC_Init:	
  6703                           
  6704                           	psect	text34
  6705  0999                     __ptext34:	
  6706 ;; *************** function _ADC_GetAdcValue *****************
  6707 ;; Defined at:
  6708 ;;		line 76 in file "../00-libfiles/adc.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;  var_adcChann    1    wreg     unsigned char 
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;  var_adcChann    1    5[COMMON] unsigned char 
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  2    2[COMMON] unsigned int 
  6715 ;; Registers used:
  6716 ;;		wreg, status,2, status,0, pclath, cstack
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6722 ;;      Params:         2       0       0       0       0
  6723 ;;      Locals:         1       0       0       0       0
  6724 ;;      Temps:          1       0       0       0       0
  6725 ;;      Totals:         4       0       0       0       0
  6726 ;;Total ram usage:        4 bytes
  6727 ;; Hardware stack levels used:    1
  6728 ;; Hardware stack levels required when called:    1
  6729 ;; This function calls:
  6730 ;;		_DELAY_us
  6731 ;; This function is called by:
  6732 ;;		_main
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           
  6737                           ;psect for function _ADC_GetAdcValue
  6738  0999                     _ADC_GetAdcValue:	
  6739                           
  6740                           ;incstack = 0
  6741                           ; Regs used in _ADC_GetAdcValue: [wreg+status,2+status,0+pclath+cstack]
  6742                           ;ADC_GetAdcValue@var_adcChannel_u8 stored from wreg
  6743  0999  00F5               	movwf	ADC_GetAdcValue@var_adcChannel_u8
  6744                           
  6745                           ;adc.c: 79: ADCON0= (var_adcChannel_u8<<3);
  6746  099A  0875               	movf	ADC_GetAdcValue@var_adcChannel_u8,w
  6747  099B  00F4               	movwf	??_ADC_GetAdcValue
  6748  099C  3002               	movlw	2
  6749  099D                     u3605:	
  6750  099D  1003               	clrc
  6751  099E  0DF4               	rlf	??_ADC_GetAdcValue,f
  6752  099F  3EFF               	addlw	-1
  6753  09A0  1D03               	skipz
  6754  09A1  299D               	goto	u3605
  6755  09A2  1003               	clrc
  6756  09A3  0D74               	rlf	??_ADC_GetAdcValue,w
  6757  09A4  1283               	bcf	3,5	;RP0=0, select bank0
  6758  09A5  1303               	bcf	3,6	;RP1=0, select bank0
  6759  09A6  009F               	movwf	31	;volatile
  6760                           
  6761                           ;adc.c: 80: ADON = 1;
  6762  09A7  141F               	bsf	31,0	;volatile
  6763                           
  6764                           ;adc.c: 81: DELAY_us(10);
  6765  09A8  300A               	movlw	10
  6766  09A9  00F0               	movwf	DELAY_us@us_count
  6767  09AA  3000               	movlw	0
  6768  09AB  00F1               	movwf	DELAY_us@us_count+1
  6769  09AC  120A  158A  20DD  120A  158A  	fcall	_DELAY_us
  6770                           
  6771                           ;adc.c: 83: GO=1;
  6772  09B1  1283               	bcf	3,5	;RP0=0, select bank0
  6773  09B2  1303               	bcf	3,6	;RP1=0, select bank0
  6774  09B3  151F               	bsf	31,2	;volatile
  6775  09B4                     l124:	
  6776                           ;adc.c: 84: while(GO_DONE==1);
  6777                           
  6778  09B4  191F               	btfsc	31,2	;volatile
  6779  09B5  29B4               	goto	l124
  6780                           
  6781                           ;adc.c: 87: return((ADRESH<<8) + ADRESL);
  6782  09B6  081E               	movf	30,w	;volatile
  6783  09B7  00F3               	movwf	?_ADC_GetAdcValue+1
  6784  09B8  1683               	bsf	3,5	;RP0=1, select bank1
  6785  09B9  1303               	bcf	3,6	;RP1=0, select bank1
  6786  09BA  081E               	movf	30,w	;volatile
  6787  09BB  00F2               	movwf	?_ADC_GetAdcValue
  6788  09BC  0008               	return
  6789  09BD                     __end_of_ADC_GetAdcValue:	
  6790                           
  6791                           	psect	text35
  6792  08DD                     __ptext35:	
  6793 ;; *************** function _DELAY_us *****************
  6794 ;; Defined at:
  6795 ;;		line 56 in file "../00-libfiles/delay.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;  us_count        2    0[COMMON] unsigned int 
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;		None
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  1    wreg      void 
  6802 ;; Registers used:
  6803 ;;		wreg, status,2, status,0
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6809 ;;      Params:         2       0       0       0       0
  6810 ;;      Locals:         0       0       0       0       0
  6811 ;;      Temps:          0       0       0       0       0
  6812 ;;      Totals:         2       0       0       0       0
  6813 ;;Total ram usage:        2 bytes
  6814 ;; Hardware stack levels used:    1
  6815 ;; This function calls:
  6816 ;;		Nothing
  6817 ;; This function is called by:
  6818 ;;		_DELAY_ms
  6819 ;;		_ADC_GetAdcValue
  6820 ;;		_lcd_BusyCheck
  6821 ;;		_lcd_Reset
  6822 ;;		_lcd_SendCmdSignals
  6823 ;;		_lcd_SendDataSignals
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           
  6828                           ;psect for function _DELAY_us
  6829  08DD                     _DELAY_us:	
  6830  08DD                     l1638:	
  6831                           ;delay.c: 58: while (us_count != 0)
  6832                           
  6833                           ;incstack = 0
  6834                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  6835                           
  6836  08DD  0870               	movf	DELAY_us@us_count,w
  6837  08DE  0471               	iorwf	DELAY_us@us_count+1,w
  6838  08DF  1903               	btfsc	3,2
  6839  08E0  0008               	return
  6840                           
  6841                           ;delay.c: 59: {
  6842                           ;delay.c: 60: us_count--;
  6843  08E1  3001               	movlw	1
  6844  08E2  02F0               	subwf	DELAY_us@us_count,f
  6845  08E3  3000               	movlw	0
  6846  08E4  1C03               	skipc
  6847  08E5  03F1               	decf	DELAY_us@us_count+1,f
  6848  08E6  02F1               	subwf	DELAY_us@us_count+1,f
  6849  08E7  28DD               	goto	l1638
  6850  08E8                     __end_of_DELAY_us:	
  6851  007E                     btemp	set	126	;btemp
  6852  007E                     wtemp	set	126
  6853  007E                     wtemp0	set	126
  6854  0080                     wtemp1	set	128
  6855  0082                     wtemp2	set	130
  6856  0084                     wtemp3	set	132
  6857  0086                     wtemp4	set	134
  6858  0088                     wtemp5	set	136
  6859  007F                     wtemp6	set	127
  6860  007E                     ttemp	set	126
  6861  007E                     ttemp0	set	126
  6862  0081                     ttemp1	set	129
  6863  0084                     ttemp2	set	132
  6864  0087                     ttemp3	set	135
  6865  007F                     ttemp4	set	127
  6866  007E                     ltemp	set	126
  6867  007E                     ltemp0	set	126
  6868  0082                     ltemp1	set	130
  6869  0086                     ltemp2	set	134
  6870  0080                     ltemp3	set	128


Data Sizes:
    Strings     23
    Constant    0
    Data        4
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      78
    BANK1            80     10      28
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Printf@str	PTR unsigned char  size(1) Largest target is 0

    LCD_Printf@argList	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_1(CODE[23]), 

    LCD_Printf@ptr	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_1(CODE[23]), 

    LCD_Printf@argp	PTR void [1] size(1) Largest target is 1
		 -> ?_LCD_Printf(BANK0[1]), 

    LCD_DisplayString@ptr_stringPointer_u8	PTR const unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _LCD_SetUp->_GPIO_PinDirection
    _LCD_Printf->_LCD_DisplayString
    _LCD_DisplayString->_LCD_DisplayChar
    _LCD_DisplayFloatNumber->___lltoft
    ___lltoft->___ftpack
    ___ftneg->___lltoft
    ___ftmul->___awtoft
    ___ftadd->___lltoft
    _LCD_DisplayNumber->___lldiv
    ___bmul->___lldiv
    _LCD_DisplayChar->_LCD_GoToNextLine
    _lcd_DataWrite->_lcd_BusyCheck
    _lcd_DataWrite->_lcd_SendHigherNibble
    _lcd_DataWrite->_lcd_SendLowerNibble
    _lcd_SendDataSignals->_GPIO_PinWrite
    _LCD_GoToNextLine->_LCD_CmdWrite
    _lcd_Reset->_lcd_SendHigherNibble
    _LCD_Clear->_LCD_GoToLine
    _LCD_GoToLine->_LCD_CmdWrite
    _LCD_CmdWrite->_lcd_BusyCheck
    _LCD_CmdWrite->_lcd_SendHigherNibble
    _LCD_CmdWrite->_lcd_SendLowerNibble
    _lcd_SendLowerNibble->_GPIO_PinWrite
    _lcd_SendHigherNibble->_GPIO_PinWrite
    _lcd_SendCmdSignals->_GPIO_PinWrite
    _lcd_BusyCheck->_GPIO_PinDirection
    _lcd_BusyCheck->_GPIO_PinRead
    _lcd_BusyCheck->_GPIO_PinWrite
    _DELAY_ms->_DELAY_us
    _ADC_GetAdcValue->_DELAY_us

Critical Paths under _main in BANK0

    _main->_LCD_Printf
    ___ftdiv->___ftmul
    _LCD_Printf->_LCD_DisplayFloatNumber
    _LCD_DisplayFloatNumber->_LCD_DisplayNumber
    ___fttol->___ftmul
    ___ftadd->___ftneg
    _LCD_DisplayNumber->___bmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0  167960
                                             71 BANK0      5     5      0
                                              0 BANK1     10    10      0
                    _ADC_GetAdcValue
                           _ADC_Init
                       _LCD_GoToLine
                           _LCD_Init
                         _LCD_Printf
                          _LCD_SetUp
                           ___awtoft
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2132
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    1890
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _LCD_SetUp                                           12     2     10    2189
                                              5 COMMON     2     2      0
                                              0 BANK0     10     0     10
                  _GPIO_PinDirection
 ---------------------------------------------------------------------------------
 (1) _LCD_Printf                                          28    23      5  112804
                                             43 BANK0     28    23      5
                    _LCD_DisplayChar
             _LCD_DisplayFloatNumber
                  _LCD_DisplayNumber
                  _LCD_DisplayString
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayString                                    2     2      0   19918
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                    _LCD_DisplayChar
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayFloatNumber                               8     5      3   49546
                                             35 BANK0      8     5      3
                    _LCD_DisplayChar
                  _LCD_DisplayNumber
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    1868
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     358
                                             16 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                              0 BANK0      3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2284
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2772
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayNumber                                   31    26      5   22132
                                              4 BANK0     31    26      5
                    _LCD_DisplayChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_DisplayChar                                      2     2      0   19846
                                             11 COMMON     2     2      0
                   _LCD_GoToNextLine
                      _lcd_DataWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_DataWrite                                        3     3      0    9890
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                _lcd_SendDataSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendDataSignals                                  0     0      0    2170
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _LCD_GoToNextLine                                     1     1      0    9890
                                             10 COMMON     1     1      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     2      1   36009
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                           _DELAY_ms
                          _LCD_Clear
                       _LCD_CmdWrite
                          _lcd_Reset
 ---------------------------------------------------------------------------------
 (2) _lcd_Reset                                            0     0      0    5269
                           _DELAY_ms
                           _DELAY_us
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0   19846
                       _LCD_CmdWrite
                       _LCD_GoToLine
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToLine                                         2     2      0    9956
                                             10 COMMON     2     2      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (5) _LCD_CmdWrite                                         3     3      0    9890
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendLowerNibble                                  2     2      0    1652
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (5) _lcd_SendHigherNibble                                 2     2      0    1652
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (6) _lcd_SendCmdSignals                                   0     0      0    2170
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (5) _lcd_BusyCheck                                        2     2      0    4327
                                              5 COMMON     2     2      0
                           _DELAY_ms
                           _DELAY_us
                  _GPIO_PinDirection
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (6) _GPIO_PinWrite                                        5     4      1    1564
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (6) _GPIO_PinRead                                         5     5      0     206
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinDirection                                    5     4      1    1087
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (6) _DELAY_ms                                             2     0      2     841
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetAdcValue                                      4     2      2     628
                                              2 COMMON     4     2      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (6) _DELAY_us                                             2     0      2     606
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetAdcValue
     _DELAY_us
   _ADC_Init
   _LCD_GoToLine
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
   _LCD_Init
     _DELAY_ms
       _DELAY_us
     _LCD_Clear
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
       _LCD_GoToLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
     _lcd_Reset
       _DELAY_ms
         _DELAY_us
       _DELAY_us
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
   _LCD_Printf
     _LCD_DisplayChar
       _LCD_GoToNextLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _lcd_DataWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendDataSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
     _LCD_DisplayFloatNumber
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _LCD_DisplayNumber
         _LCD_DisplayChar
           _LCD_GoToNextLine
             _LCD_CmdWrite
               _lcd_BusyCheck
                 _DELAY_ms
                   _DELAY_us
                 _DELAY_us
                 _GPIO_PinDirection
                 _GPIO_PinRead
                 _GPIO_PinWrite
               _lcd_SendCmdSignals
                 _DELAY_us
                 _GPIO_PinWrite
               _lcd_SendHigherNibble
                 _GPIO_PinWrite
               _lcd_SendLowerNibble
                 _GPIO_PinWrite
           _lcd_DataWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendDataSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       ___ftadd
         ___ftneg (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___lltoft
         ___ftpack
     _LCD_DisplayNumber
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       ___bmul
         ___lldiv (ARG)
       ___lldiv
     _LCD_DisplayString
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     ___bmul
       ___lldiv (ARG)
   _LCD_SetUp
     _GPIO_PinDirection
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      A      1C       7       35.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4C      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      78      12        0.0%
ABS                  0      0      78       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Feb 20 20:42:34 2016

                    _LCD_DisplayFloatNumber 0DE6                                           pc 0002  
                            ___bmul@product 0022                                 __CFG_CP$OFF 0000  
                             ?_LCD_CmdWrite 0070                                          l50 02CD  
                                        l80 03A6                                          _GO 00FA  
                               ?_LCD_Printf 004B                                          fsr 0004  
                             ?_LCD_GoToLine 0070                                ___ftadd@exp1 002F  
                              ___ftadd@exp2 002E                                 __CFG_LVP$ON 0000  
                              ___ftadd@sign 002D                                         l124 09B4  
                                       l301 0CEC                                         l181 0B83  
                                       l335 0FA4                                         l276 066D  
                                       l614 0541                                         l590 0C36  
                                       l591 0C3E                                         l583 0C21  
                                       l674 0DCC                                __CFG_CPD$OFF 0000  
                                       fsr0 0004                                         indf 0000  
                              __CFG_FOSC$HS 0000                     __end_of_ADC_GetAdcValue 09BD  
                   __end_of_LCD_DisplayChar 0978                                ___ftdiv@cntr 003A  
                              ___ftdiv@sign 003F                                        l2000 0507  
                                      l2002 0513                                        l2012 0531  
                                      l2004 0518                                        l2100 0D72  
                                      l2022 0565                                        l2014 053D  
                                      l2006 051C                                        l2032 0588  
                                      l2120 0DB4                                        l2018 0553  
                                      l2042 013A                                        l2210 00BC  
                                      l2060 018F                                        l2132 0DDD  
                                      l2140 09C1                                        l2220 00E6  
                                      l2126 0DC1                                        l2118 0DA4  
                                      l2142 09D3                                        l2310 06A1  
                                      l2072 01B7                                        l2064 019F  
                                      l2048 0150                                        l2128 0DCF  
                                      l2304 0682                                        l2208 00B5  
                                      l2322 06E7                                        l2410 0EF8  
                                      l1700 034D                                        l2244 0B72  
                                      l2076 01C7                                        l2172 0941  
                                      l2316 06C8                                        l1710 0384  
                                      l2238 0B61                                        l2270 05DC  
                                      l1704 0360                                        l2360 0793  
                                      l2336 0723                                        l2328 070E  
                                      l1650 022C                                        l1730 0CA3  
                                      l1722 0C6B                                        l1706 0371  
                                      l1714 0395                                        l2354 077F  
                                      l2346 074F                                        l2338 0734  
                                      l2282 0615                                        l2274 0604  
                                      l2370 05AD                                        l2418 0F17  
                                      l1660 0263                                        l1644 0208  
                                      l1724 0C79                                        l1900 0BD5  
                                      l2348 0762                                        l2292 0630  
                                      l2276 0609                                        l2364 0795  
                                      l2380 0982                                        l1638 08DD  
                                      l1662 0274                                        l1654 023F  
                                      l1726 0C87                                        l1734 0CB9  
                                      l1822 0AA3                                        l1830 0964  
                                      l2294 0646                                        l2366 07C7  
                                      l2390 0E9D                                        l1672 02AB  
                                      l1656 0250                                        l1648 021B  
                                      l1728 0C95                                        l1736 0CCA  
                                      l1832 0969                                        l1840 08EC  
                                      l1904 0BE2                                        l2368 07CD  
                                      l1746 08FB                                        l1666 0287  
                                      l1682 02E1                                        l1770 0D50  
                                      l1818 0A8B                                        l1922 03B0  
                                      l1930 03F2                                        l1668 0298  
                                      l1676 02BC                                        l1692 0318  
                                      l1844 08F2                                        l1860 0BFA  
                                      l2396 0EB3                                        l1694 0329  
                                      l1686 02F4                                        l1766 0D45  
                                      l1950 046B                                        l1942 045F  
                                      l1934 03FD                                        l1870 0C26  
                                      l1862 0C06                                        l1688 0305  
                                      l1792 0A6E                                        l1952 0400  
                                      l1928 03EE                                        l1872 0C30  
                                      l1864 0C0B                                        l1856 0BF3  
                                      l1698 033C                                        l1890 0B9D  
                                      l1954 0470                                        l1788 0A56  
                                      l1892 0BAD                                        l1964 0495  
                                      l1972 04C2                                        l1958 0480  
                                      l1982 04D8                                        l1976 04C9  
                                      l1994 04F2                                        _ADON 00F8  
                                      STR_1 0806                                        u2004 0211  
                                      u2005 020F                                        u2014 0221  
                                      u2015 021F                                        u2104 028D  
                                      u2105 028B                                        u2034 0235  
                                      u2035 0233                                        u2124 02A1  
                                      u2044 0245                                        u2204 031E  
                                      u2125 029F                                        u2045 0243  
                                      u2205 031C                                        u2134 02B1  
                                      u2135 02AF                                        u2064 0259  
                                      u2224 0332                                        u2065 0257  
                                      u2305 0C5C                                        u2225 0330  
                                      u2145 02D2                                        u2074 0269  
                                      u2314 0C71                                        u2234 0342  
                                      u2075 0267                                        u2315 0C6F  
                                      u2235 0340                                        u2404 0C9B  
                                      u2164 02EA                                        u2500 0016  
                                      u2405 0C99                                        u2165 02E8  
                                      u3205 0508                                        u2094 027D  
                                      u2254 0356                                        u2174 02FA  
                                      u2510 0017                                        u2095 027B  
                                      u2255 0354                                        u2175 02F8  
                                      u2440 0CB4                                        u2344 0C7F  
                                      u2264 0366                                        u2600 0AC2  
                                      u2520 0026                                        u2345 0C7D  
                                      u2265 0364                                        u2450 0CB5  
                                      u2434 0CA9                                        u2194 030E  
                                      u2610 0AC3                                        u2530 0027  
                                      u2435 0CA7                                        u2195 030C  
                                      u3235 051D                                        u2284 037A  
                                      u2620 0AD2                                        u2540 0036  
                                      u2285 0378                                        u2374 0C8D  
                                      u2294 038A                                        u2630 0AD3  
                                      u2550 0037                                        u2375 0C8B  
                                      u2295 0388                                        u3175 04F3  
                                      u2640 0AE2                                        u2560 0046  
                                      u2705 0A99                                        u3265 0532  
                                      u3345 015C                                        u2650 0AE3  
                                      u2570 0047                                        u3435 01C8  
                                      u3355 016E                                        u3515 0DA5  
                                      u2580 0AB2                                        u3605 099D  
                                      u2805 0C1A                                        u3445 01D0  
                                      u2590 0AB3                                        u2825 0C29  
                                      u3385 01A0                                        u3545 0DC3  
                                      u2675 0A64                                        u2915 0BAF  
                                      u3395 01A8                                        u2925 0BC4  
                                      u3485 0D79                                        u2935 0BD6  
                                      u3575 09C6                                        u1985 01F9  
                                      u2865 0C45                                        u2785 0BFF  
                                      u3825 0EC5                                        u3835 0ED7  
                                      u2980 03DF                                        u3845 0EF9  
                                      u2990 03E0                                        u2974 03C4  
                                      u2895 0BA1                                        u2975 03C1  
                                      u3855 0F0A                                        u3865 0F18  
                              __CFG_WRT$OFF 0000                                        _main 0F3D  
                              ___ftpack@arg 0070                          __size_of_LCD_Clear 000B  
                              ___ftpack@exp 0073                                        btemp 007E  
                          __end_of_ADC_Init 08D3                                main@adcValue 006A  
                                      ltemp 007E                          __size_of_LCD_SetUp 00D1  
                                      start 0000                                        ttemp 007E  
                                      wtemp 007E                            __end_of_DELAY_ms 090F  
                          __end_of_DELAY_us 08E8                           ___bmul@multiplier 0023  
                              ___ftmul@cntr 002E                               ?_GPIO_PinRead 0070  
                              ___ftmul@sign 002F                              ??_LCD_CmdWrite 0077  
                               LCD_SetUp@D0 0022                                 LCD_SetUp@D1 0023  
                               LCD_SetUp@D2 0024                                 LCD_SetUp@D3 0025  
                               LCD_SetUp@D4 0026                                 LCD_SetUp@D5 0027  
                               LCD_SetUp@D6 0028                                 LCD_SetUp@D7 0029  
                               LCD_SetUp@EN 0021                                ___fttol@exp1 003D  
                               LCD_SetUp@RS 0076                                 LCD_SetUp@RW 0020  
                              ___fttol@lval 0039                              ??_LCD_GoToLine 007A  
                             _GPIO_PinWrite 02CE                            __end_of_LCD_Init 0B8D  
          LCD_Printf@v_numOfDigitsToDisp_u8 0065                     LCD_CmdWrite@v_lcdCmd_u8 0079  
                                     ?_main 0070                             __end_of___ftadd 05A2  
                             __CFG_WDTE$OFF 0000                             __end_of___ftdiv 0F3D  
                           __end_of___ftneg 08DD                             __end_of___lldiv 0BEB  
                           __end_of___ftmul 01F5                             __end_of___fttol 0DE6  
                     _LCD_DisplayNumber$273 003F                                       _PORTA 0005  
                                     _PORTB 0006                                       _PORTC 0007  
                                     _PORTD 0008                                       _PORTE 0009  
                                     _TRISA 0085                                       _TRISB 0086  
                                     _TRISC 0087                                       _TRISD 0088  
                                     _TRISE 0089                                ___lltoft@exp 007D  
                             ___awtoft@sign 007D       LCD_DisplayString@ptr_stringPointer_u8 0020  
                             ___ftpack@sign 0074                              __CFG_BOREN$OFF 0000  
                                     pclath 000A                                       ltemp0 007E  
                                     ltemp1 0082                                       ltemp2 0086  
                                     ltemp3 0080                __end_of_lcd_SendHigherNibble 0AED  
                       __size_of_LCD_Printf 0232                                       ttemp0 007E  
                                     ttemp1 0081                                       ttemp2 0084  
                                     ttemp3 0087                                       ttemp4 007F  
                                     status 0003                                       wtemp0 007E  
                                     wtemp1 0080                                       wtemp2 0082  
                                     wtemp3 0084                                       wtemp4 0086  
                                     wtemp5 0088                                       wtemp6 007F  
                            ??_GPIO_PinRead 0070                             __initialization 07D4  
                GPIO_PinWrite@enm_pinNumber 0074                                __end_of_main 1000  
                            ?_GPIO_PinWrite 0070                           _GPIO_PinDirection 01F5  
                                    ??_main 00AE                               ___fttol@sign1 0038  
               __size_of_lcd_SendCmdSignals 002D                           __end_of_LCD_Clear 0011  
                        ?_GPIO_PinDirection 0070                           __end_of_LCD_SetUp 0122  
                          ?_ADC_GetAdcValue 0072                                      _ADCON0 001F  
                                    _ADCON1 009F                            ?_LCD_DisplayChar 0070  
               LCD_DisplayChar@v_lcdData_u8 007C                                LCD_Printf@ch 0064  
                                    _ADRESH 001E                                      _ADRESL 009E  
                       ??_GPIO_PinDirection 0071                            __end_of___awtoft 0999  
                          __end_of___ftpack 0C57                            __end_of___lltoft 09E8  
                     lcd_BusyCheck@busyflag 0076                              __CFG_PWRTE$OFF 0000  
                 GPIO_PinRead@enm_pinNumber 0074                                      ___bmul 08E8  
                                 ??___ftadd 0029                                   ??___ftdiv 0036  
                                 ??___ftneg 007E                                   ??___lldiv 0078  
                                 ??___ftmul 0026                                   ??___fttol 0034  
                 __end_of_GPIO_PinDirection 02CE              GPIO_PinDirection@enm_pinNumber 0074  
                          DELAY_ms@ms_count 0072                       ___ftmul@f3_as_product 002B  
                                 ?_ADC_Init 0070                           ?_LCD_GoToNextLine 0070  
                                 ?_DELAY_ms 0072                                   ?_DELAY_us 0070  
               __end_of_lcd_SendLowerNibble 0051                          ??_LCD_GoToNextLine 007A  
                      __end_of_LCD_CmdWrite 0A78                        __end_of_LCD_GoToLine 0926  
               lcd_SendLowerNibble@dataByte 0076                     __end_of__initialization 07FC  
                                 ?_LCD_Init 007C                                  ___ftadd@f1 0023  
                                ___ftadd@f2 0026                                  ___ftdiv@f1 0033  
                                ___ftdiv@f2 0030                                  ___ftdiv@f3 003B  
                   ?_LCD_DisplayFloatNumber 0043                                  ___ftneg@f1 0020  
                                ___awtoft@c 0078                         ___bmul@multiplicand 0020  
                                ___ftmul@f1 0020                                  ___ftmul@f2 0023  
                           ??_GPIO_PinWrite 0071                                  ___fttol@f1 0030  
                            __pcstackCOMMON 0070                                __pidataBANK1 08C7  
                                ___lltoft@c 0078                       __end_of_lcd_DataWrite 0AAD  
                              ??_LCD_Printf 0050                        _lcd_SendHigherNibble 0AAD  
                       LCD_Printf@v_num_s16 005B                         LCD_Printf@v_num_s32 0057  
                       LCD_Printf@v_num_u16 0061                         LCD_Printf@v_num_u32 005D  
                        __size_of_lcd_Reset 004F                                  ??_ADC_Init 0070  
              __size_of_lcd_SendDataSignals 002E                                  ??_DELAY_ms 0074  
                                ??_DELAY_us 0072                        __end_of_GPIO_PinRead 0CCC  
            GPIO_PinWrite@var_portNumber_u8 0073                                  __pbssBANK0 006C  
                                __pbssBANK1 00A0                       __end_of_lcd_BusyCheck 0D58  
              lcd_SendHigherNibble@dataByte 0076                GPIO_PinWrite@var_pinValue_u8 0070  
                                ??_LCD_Init 007D              __end_of_LCD_DisplayFloatNumber 0E85  
                        __end_of_LCD_Printf 07D4                                  __pmaintext 0F3D  
                                   ?___bmul 0020                  __size_of_GPIO_PinDirection 00D9  
                             LCD_Printf@ptr 0063                               LCD_Printf@str 0055  
                                 ?___awtoft 0078                                   ?___ftpack 0070  
                     ?_lcd_SendHigherNibble 0070                                   ?___lltoft 0078  
                                   _GO_DONE 00FA                            DELAY_us@us_count 0070  
                                __stringtab 0800                           __end_of_lcd_Reset 0B3C  
                           __size_of___bmul 0013                   LCD_Init@v_lcdNoOfLines_u8 0020  
                                   ___ftadd 0499                                     ___ftdiv 0E85  
                                   ___ftneg 08D3                                     ___lldiv 0B8D  
                                   ___ftmul 0122                                     ___fttol 0D58  
                                ??___awtoft 007B                                  ??___ftpack 0075  
                        LCD_DisplayNumber@a 0035                          LCD_DisplayNumber@i 0042  
                                ??___lltoft 007C                                     __ptext1 0E85  
                                   __ptext2 0978                                     __ptext3 0051  
                                   __ptext4 05A2                                     __ptext5 093E  
                                   __ptext6 0DE6                                     __ptext7 09BD  
                                   __ptext8 0D58                                     __ptext9 08D3  
                     __size_of_LCD_CmdWrite 0035                                   _LCDConfig 00A0  
                     __size_of_LCD_GoToLine 0017                                   _LCD_Clear 0006  
                                 _LCD_SetUp 0051                        end_of_initialization 07FC  
              LCD_Init@v_MaxCharsPerLine_u8 007C                             ___lldiv@divisor 0070  
                           ___lldiv@counter 007D            LCD_DisplayFloatNumber@v_temp_u32 0047  
                    ??_lcd_SendHigherNibble 0075                  __end_of_lcd_SendCmdSignals 0A15  
                              _LCD_CmdWrite 0A43                                _LCD_GoToLine 090F  
          ADC_GetAdcValue@var_adcChannel_u8 0075                       __size_of_GPIO_PinRead 0075  
                                ?_LCD_Clear 0070                                  ?_LCD_SetUp 0020  
                         __size_of_ADC_Init 0008                           __size_of_DELAY_ms 0014  
                         __size_of_DELAY_us 000B                                 ___ftdiv@exp 003E  
                  __size_of_ADC_GetAdcValue 0024                    __size_of_LCD_DisplayChar 0021  
                         __size_of_LCD_Init 0051                   __size_of_LCD_GoToNextLine 0018  
                       _lcd_SendDataSignals 0A15                                 ___ftmul@exp 002A  
        GPIO_PinDirection@var_portNumber_u8 0073                                _GPIO_PinRead 0C57  
                            __end_of___bmul 08FB                           LCD_Printf@argList 0056  
                  _ARR_LcdLineNumAddress_U8 00B8                         start_initialization 07D4  
                      ?_lcd_SendDataSignals 0070                      _v_LcdTrackCursorPos_U8 006C  
             GPIO_PinRead@var_portNumber_u8 0072                __size_of_lcd_SendLowerNibble 0040  
           GPIO_PinDirection@var_pinDirn_u8 0070                                    ??___bmul 0021  
                     __end_of_GPIO_PinWrite 03A7                                 __pdataBANK1 00B8  
      LCD_DisplayFloatNumber@v_floatNum_f32 0043                           __size_of___awtoft 0021  
                         __size_of___ftpack 006C                       ??_lcd_SendDataSignals 0075  
                      _v_LcdTrackLineNum_U8 006D                           __size_of___lltoft 002B  
                                 ___latbits 0002                       lcd_DataWrite@dataByte 0079  
                             __pcstackBANK0 0020                               __pcstackBANK1 00AE  
                               ??_LCD_Clear 007C                                 ??_LCD_SetUp 0075  
                    __size_of_lcd_DataWrite 0035                 LCD_GoToLine@v_lineNumber_u8 007B  
                                  ?___ftadd 0023                                    ?___ftdiv 0030  
                                  ?___ftneg 0020                                    ?___lldiv 0070  
                         ??_ADC_GetAdcValue 0074                                    ?___ftmul 0020  
                                  ?___fttol 0030                                   _lcd_Reset 0AED  
                         ??_LCD_DisplayChar 007B                                   __pstrings 0800  
                    __size_of_lcd_BusyCheck 008C                           _LCD_DisplayNumber 03A7  
                            LCD_Printf@argp 0066                                    _ADC_Init 08CB  
                         _LCD_DisplayString 093E                                    _DELAY_ms 08FB  
                                  _DELAY_us 08DD                          ?_LCD_DisplayNumber 0024  
                        ?_LCD_DisplayString 0070                         ??_LCD_DisplayNumber 0029  
                                  _LCD_Init 0B3C                         ??_LCD_DisplayString 007D  
                          _LCD_GoToNextLine 0926                                  ?_lcd_Reset 0070  
                             _lcd_DataWrite 0A78                    GPIO_PinRead@returnStatus 0073  
                 __end_of_LCD_DisplayNumber 0499                                 __stringbase 0805  
                 __end_of_LCD_DisplayString 0957                          _lcd_SendCmdSignals 09E8  
                  ??_LCD_DisplayFloatNumber 0046                               _lcd_BusyCheck 0CCC  
                       ?_lcd_SendCmdSignals 0070                              ?_lcd_DataWrite 0070  
                          __size_of___ftadd 0109                            __size_of___ftdiv 00B8  
                          __size_of___ftneg 000A                            __size_of___lldiv 005E  
                          __size_of___ftmul 00D3                            __size_of___fttol 008E  
                                  ___awtoft 0978                                    ___ftpack 0BEB  
                        __end_of__stringtab 0806                        ??_lcd_SendCmdSignals 0075  
                                  ___lltoft 09BD               __size_of_lcd_SendHigherNibble 0040  
                       _lcd_SendLowerNibble 0011                                    __ptext10 0122  
                                  __ptext11 0499                                    __ptext20 0B3C  
                                  __ptext12 0BEB                                    __ptext21 0AED  
                                  __ptext13 03A7                                    __ptext30 0C57  
                                  __ptext22 0006                                    __ptext14 0B8D  
                                  __ptext31 01F5                                    __ptext23 090F  
                                  __ptext15 08E8                                    __ptext32 08FB  
                                  __ptext24 0A43                                    __ptext16 0957  
                                  __ptext33 08CB                                    __ptext25 0011  
                                  __ptext17 0A78                                    __ptext34 0999  
                                  __ptext26 0AAD                                    __ptext18 0A15  
                                  __ptext35 08DD                                    __ptext27 09E8  
                                  __ptext19 0926                                    __ptext28 0CCC  
                                  __ptext29 02CE                              ?_lcd_BusyCheck 0070  
       LCD_DisplayNumber@v_numericSystem_u8 0041                               __size_of_main 00C3  
                      ?_lcd_SendLowerNibble 0070                                 ??_lcd_Reset 0077  
                                _LCD_Printf 05A2                                    main@volt 0067  
                __size_of_LCD_DisplayNumber 00F2                  __size_of_LCD_DisplayString 0019  
           __size_of_LCD_DisplayFloatNumber 009F                             _ADC_GetAdcValue 0999  
                     ??_lcd_SendLowerNibble 0075                            ___lldiv@dividend 0074  
                           _LCD_DisplayChar 0957                                   stringcode 0800  
                           ??_lcd_DataWrite 0077                 __end_of_lcd_SendDataSignals 0A43  
                  LCD_Printf@v_floatNum_f32 0052                            ___lldiv@quotient 0079  
                  __end_of_LCD_GoToNextLine 093E                                    stringdir 0800  
                                  stringtab 0800  LCD_DisplayNumber@v_numOfDigitsToDisplay_u8 0028  
                           ??_lcd_BusyCheck 0075                      __size_of_GPIO_PinWrite 00D9  
             LCD_DisplayNumber@v_number_u32 0024  
