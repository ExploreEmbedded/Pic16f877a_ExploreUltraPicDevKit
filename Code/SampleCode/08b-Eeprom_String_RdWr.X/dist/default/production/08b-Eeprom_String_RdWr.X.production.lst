

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Feb 22 17:38:02 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     	;# 
    36  0001                     	;# 
    37  0002                     	;# 
    38  0003                     	;# 
    39  0004                     	;# 
    40  0005                     	;# 
    41  0006                     	;# 
    42  0007                     	;# 
    43  0008                     	;# 
    44  0009                     	;# 
    45  000A                     	;# 
    46  000B                     	;# 
    47  000C                     	;# 
    48  000D                     	;# 
    49  000E                     	;# 
    50  000E                     	;# 
    51  000F                     	;# 
    52  0010                     	;# 
    53  0011                     	;# 
    54  0012                     	;# 
    55  0013                     	;# 
    56  0014                     	;# 
    57  0015                     	;# 
    58  0015                     	;# 
    59  0016                     	;# 
    60  0017                     	;# 
    61  0018                     	;# 
    62  0019                     	;# 
    63  001A                     	;# 
    64  001B                     	;# 
    65  001B                     	;# 
    66  001C                     	;# 
    67  001D                     	;# 
    68  001E                     	;# 
    69  001F                     	;# 
    70  0081                     	;# 
    71  0085                     	;# 
    72  0086                     	;# 
    73  0087                     	;# 
    74  0088                     	;# 
    75  0089                     	;# 
    76  008C                     	;# 
    77  008D                     	;# 
    78  008E                     	;# 
    79  0091                     	;# 
    80  0092                     	;# 
    81  0093                     	;# 
    82  0094                     	;# 
    83  0098                     	;# 
    84  0099                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  009F                     	;# 
    89  010C                     	;# 
    90  010D                     	;# 
    91  010E                     	;# 
    92  010F                     	;# 
    93  018C                     	;# 
    94  018D                     	;# 
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0008                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  000E                     	;# 
   111  000F                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0015                     	;# 
   118  0015                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001B                     	;# 
   125  001B                     	;# 
   126  001C                     	;# 
   127  001D                     	;# 
   128  001E                     	;# 
   129  001F                     	;# 
   130  0081                     	;# 
   131  0085                     	;# 
   132  0086                     	;# 
   133  0087                     	;# 
   134  0088                     	;# 
   135  0089                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0006                     	;# 
   162  0007                     	;# 
   163  0008                     	;# 
   164  0009                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000D                     	;# 
   169  000E                     	;# 
   170  000E                     	;# 
   171  000F                     	;# 
   172  0010                     	;# 
   173  0011                     	;# 
   174  0012                     	;# 
   175  0013                     	;# 
   176  0014                     	;# 
   177  0015                     	;# 
   178  0015                     	;# 
   179  0016                     	;# 
   180  0017                     	;# 
   181  0018                     	;# 
   182  0019                     	;# 
   183  001A                     	;# 
   184  001B                     	;# 
   185  001B                     	;# 
   186  001C                     	;# 
   187  001D                     	;# 
   188  001E                     	;# 
   189  001F                     	;# 
   190  0081                     	;# 
   191  0085                     	;# 
   192  0086                     	;# 
   193  0087                     	;# 
   194  0088                     	;# 
   195  0089                     	;# 
   196  008C                     	;# 
   197  008D                     	;# 
   198  008E                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215                           
   216                           	psect	idataBANK3
   217  0FD1                     __pidataBANK3:	
   218                           
   219                           ;initializer for main@F1131
   220  0FD1  3457               	retlw	87
   221  0FD2  3465               	retlw	101
   222  0FD3  346C               	retlw	108
   223  0FD4  3463               	retlw	99
   224  0FD5  346F               	retlw	111
   225  0FD6  346D               	retlw	109
   226  0FD7  3465               	retlw	101
   227  0FD8  3420               	retlw	32
   228  0FD9  3474               	retlw	116
   229  0FDA  346F               	retlw	111
   230  0FDB  3420               	retlw	32
   231  0FDC  3450               	retlw	80
   232  0FDD  3469               	retlw	105
   233  0FDE  3463               	retlw	99
   234  0FDF  3420               	retlw	32
   235  0FE0  3470               	retlw	112
   236  0FE1  3472               	retlw	114
   237  0FE2  346F               	retlw	111
   238  0FE3  3467               	retlw	103
   239  0FE4  3472               	retlw	114
   240  0FE5  3461               	retlw	97
   241  0FE6  346D               	retlw	109
   242  0FE7  346D               	retlw	109
   243  0FE8  3469               	retlw	105
   244  0FE9  346E               	retlw	110
   245  0FEA  3467               	retlw	103
   246  0FEB  3420               	retlw	32
   247  0FEC  3462               	retlw	98
   248  0FED  3479               	retlw	121
   249  0FEE  3420               	retlw	32
   250  0FEF  3445               	retlw	69
   251  0FF0  3478               	retlw	120
   252  0FF1  3470               	retlw	112
   253  0FF2  346C               	retlw	108
   254  0FF3  346F               	retlw	111
   255  0FF4  3472               	retlw	114
   256  0FF5  3465               	retlw	101
   257  0FF6  3420               	retlw	32
   258  0FF7  3445               	retlw	69
   259  0FF8  346D               	retlw	109
   260  0FF9  3462               	retlw	98
   261  0FFA  3465               	retlw	101
   262  0FFB  3464               	retlw	100
   263  0FFC  3464               	retlw	100
   264  0FFD  3465               	retlw	101
   265  0FFE  3464               	retlw	100
   266  0FFF  3400               	retlw	0
   267  001A                     _RCREG	set	26
   268  0018                     _RCSTA	set	24
   269  0019                     _TXREG	set	25
   270  0065                     _RCIF	set	101
   271  0064                     _TXIF	set	100
   272  0099                     _SPBRG	set	153
   273  0087                     _TRISC	set	135
   274  0098                     _TXSTA	set	152
   275  010D                     _EEADR	set	269
   276  010C                     _EEDATA	set	268
   277  018D                     _EECON2	set	397
   278  0C60                     _RD	set	3168
   279  0C61                     _WR	set	3169
   280  0C62                     _WREN	set	3170
   281                           
   282                           	psect	strings
   283  0800                     __pstrings:	
   284  0800                     stringtab:	
   285  0800                     __stringtab:	
   286  0800                     stringcode:	
   287                           ;	String table - string pointers are 1 byte each
   288                           
   289  0800                     stringdir:	
   290  0800  3008               	movlw	high stringdir
   291  0801  008A               	movwf	10
   292  0802  0804               	movf	4,w
   293  0803  0A84               	incf	4,f
   294  0804  0782               	addwf	2,f
   295  0805                     __stringbase:	
   296  0805  3400               	retlw	0
   297  0806                     __end_of__stringtab:	
   298  0806                     STR_1:	
   299  0806  340A               	retlw	10
   300  0807  340D               	retlw	13
   301  0808  3445               	retlw	69	;'E'
   302  0809  3465               	retlw	101	;'e'
   303  080A  3470               	retlw	112	;'p'
   304  080B  3472               	retlw	114	;'r'
   305  080C  346F               	retlw	111	;'o'
   306  080D  346D               	retlw	109	;'m'
   307  080E  3420               	retlw	32	;' '
   308  080F  3457               	retlw	87	;'W'
   309  0810  3472               	retlw	114	;'r'
   310  0811  3469               	retlw	105	;'i'
   311  0812  3474               	retlw	116	;'t'
   312  0813  3465               	retlw	101	;'e'
   313  0814  3420               	retlw	32	;' '
   314  0815  3453               	retlw	83	;'S'
   315  0816  3474               	retlw	116	;'t'
   316  0817  3472               	retlw	114	;'r'
   317  0818  3469               	retlw	105	;'i'
   318  0819  346E               	retlw	110	;'n'
   319  081A  3467               	retlw	103	;'g'
   320  081B  343A               	retlw	58	;':'
   321  081C  3420               	retlw	32	;' '
   322  081D  3425               	retlw	37	;'%'
   323  081E  3473               	retlw	115	;'s'
   324  081F  3400               	retlw	0
   325  0820                     STR_2:	
   326  0820  340A               	retlw	10
   327  0821  340D               	retlw	13
   328  0822  3445               	retlw	69	;'E'
   329  0823  3465               	retlw	101	;'e'
   330  0824  3470               	retlw	112	;'p'
   331  0825  3472               	retlw	114	;'r'
   332  0826  346F               	retlw	111	;'o'
   333  0827  346D               	retlw	109	;'m'
   334  0828  3420               	retlw	32	;' '
   335  0829  3452               	retlw	82	;'R'
   336  082A  3465               	retlw	101	;'e'
   337  082B  3461               	retlw	97	;'a'
   338  082C  3464               	retlw	100	;'d'
   339  082D  3420               	retlw	32	;' '
   340  082E  3453               	retlw	83	;'S'
   341  082F  3474               	retlw	116	;'t'
   342  0830  3472               	retlw	114	;'r'
   343  0831  3469               	retlw	105	;'i'
   344  0832  346E               	retlw	110	;'n'
   345  0833  3467               	retlw	103	;'g'
   346  0834  343A               	retlw	58	;':'
   347  0835  3420               	retlw	32	;' '
   348  0836  3425               	retlw	37	;'%'
   349  0837  3473               	retlw	115	;'s'
   350  0838  3400               	retlw	0
   351                           
   352                           ; #config settings
   353  0000                     
   354                           	psect	cinit
   355  07F0                     start_initialization:	
   356  07F0                     __initialization:	
   357                           
   358                           ; Initialize objects allocated to BANK3
   359  07F0  1783               	bsf	3,7	;select IRP bank2
   360  07F1  30BF               	movlw	low (__pdataBANK3+47)
   361  07F2  00FD               	movwf	btemp+-1
   362  07F3  300F               	movlw	high __pidataBANK3
   363  07F4  00FE               	movwf	btemp
   364  07F5  30D1               	movlw	low __pidataBANK3
   365  07F6  00FF               	movwf	btemp+1
   366  07F7  3090               	movlw	low __pdataBANK3
   367  07F8  0084               	movwf	4
   368  07F9  120A  158A  26F4   	fcall	init_ram0
   369  07FC                     end_of_initialization:	
   370                           ;End of C runtime variable initialization code
   371                           
   372  07FC                     __end_of__initialization:	
   373  07FC  0183               	clrf	3
   374  07FD  120A  118A  2878   	ljmp	_main	;jump to C main() function
   375                           
   376                           	psect	dataBANK3
   377  0190                     __pdataBANK3:	
   378  0190                     main@F1131:	
   379  0190                     	ds	47
   380                           
   381                           	psect	inittext
   382  0EF0                     init_fetch0:	
   383                           ;	Called with low address in FSR and high address in W
   384                           
   385  0EF0  087E               	movf	126,w
   386  0EF1  008A               	movwf	10
   387  0EF2  087F               	movf	127,w
   388  0EF3  0082               	movwf	2
   389  0EF4                     init_ram0:	
   390                           ;Called with:
   391                           ;	high address of idata address in btemp 
   392                           ;	low address of idata address in btemp+1 
   393                           ;	low address of data in FSR
   394                           ;	high address + 1 of data in btemp-1
   395                           
   396  0EF4  26F0  120A  158A   	fcall	init_fetch0
   397  0EF7  0080               	movwf	0
   398  0EF8  0A84               	incf	4,f
   399  0EF9  0804               	movf	4,w
   400  0EFA  067D               	xorwf	125,w
   401  0EFB  1903               	btfsc	3,2
   402  0EFC  3400               	retlw	0
   403  0EFD  0AFF               	incf	127,f
   404  0EFE  1903               	btfsc	3,2
   405  0EFF  0AFE               	incf	126,f
   406  0F00  2EF4               	goto	init_ram0
   407                           
   408                           	psect	cstackBANK3
   409  01BF                     __pcstackBANK3:	
   410  01BF                     main@write_str:	
   411                           
   412                           ; 47 bytes @ 0x0
   413  01BF                     	ds	47
   414                           
   415                           	psect	cstackBANK1
   416  00A0                     __pcstackBANK1:	
   417  00A0                     main@read_str:	
   418                           
   419                           ; 50 bytes @ 0x0
   420  00A0                     	ds	50
   421                           
   422                           	psect	cstackCOMMON
   423  0070                     __pcstackCOMMON:	
   424  0070                     ?_DELAY_us:	
   425  0070                     ?_UART_TxChar:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ??_UART_TxChar:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_main:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?___ftpack:	
   435                           ; 2 bytes @ 0x0
   436                           
   437  0070                     ?___lldiv:	
   438                           ; 3 bytes @ 0x0
   439                           
   440  0070                     UART_TxChar@var_uartData_u8:	
   441                           ; 4 bytes @ 0x0
   442                           
   443  0070                     DELAY_us@us_count:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ___ftpack@arg:	
   447                           ; 2 bytes @ 0x0
   448                           
   449  0070                     ___lldiv@divisor:	
   450                           ; 3 bytes @ 0x0
   451                           
   452                           
   453                           ; 4 bytes @ 0x0
   454  0070                     	ds	1
   455  0071                     ?_UART_TxString:	
   456  0071                     UART_TxString@ptr_string:	
   457                           ; 1 bytes @ 0x1
   458                           
   459                           
   460                           ; 2 bytes @ 0x1
   461  0071                     	ds	1
   462  0072                     ??_DELAY_us:	
   463  0072                     ?_EEPROM_WriteByte:	
   464                           ; 1 bytes @ 0x2
   465                           
   466  0072                     ?_EEPROM_ReadByte:	
   467                           ; 1 bytes @ 0x2
   468                           
   469  0072                     EEPROM_WriteByte@v_eepromAddress_u16:	
   470                           ; 1 bytes @ 0x2
   471                           
   472  0072                     EEPROM_ReadByte@v_eepromAddress_u16:	
   473                           ; 2 bytes @ 0x2
   474                           
   475                           
   476                           ; 2 bytes @ 0x2
   477  0072                     	ds	1
   478  0073                     ??_UART_TxString:	
   479  0073                     ___ftpack@exp:	
   480                           ; 1 bytes @ 0x3
   481                           
   482                           
   483                           ; 1 bytes @ 0x3
   484  0073                     	ds	1
   485  0074                     ?_EEPROM_ReadString:	
   486  0074                     ??_EEPROM_ReadByte:	
   487                           ; 1 bytes @ 0x4
   488                           
   489  0074                     EEPROM_WriteByte@v_eepromData_u8:	
   490                           ; 1 bytes @ 0x4
   491                           
   492  0074                     ___ftpack@sign:	
   493                           ; 1 bytes @ 0x4
   494                           
   495  0074                     EEPROM_ReadString@v_eepromAddress_u16:	
   496                           ; 1 bytes @ 0x4
   497                           
   498  0074                     ___lldiv@dividend:	
   499                           ; 2 bytes @ 0x4
   500                           
   501                           
   502                           ; 4 bytes @ 0x4
   503  0074                     	ds	1
   504  0075                     ?_EEPROM_WriteString:	
   505  0075                     ??___ftpack:	
   506                           ; 1 bytes @ 0x5
   507                           
   508  0075                     ??_EEPROM_WriteByte:	
   509                           ; 1 bytes @ 0x5
   510                           
   511  0075                     EEPROM_WriteString@v_eepromAddress_u16:	
   512                           ; 1 bytes @ 0x5
   513                           
   514                           
   515                           ; 2 bytes @ 0x5
   516  0075                     	ds	1
   517  0076                     EEPROM_ReadString@ptr_destStringAddress_u8:	
   518                           
   519                           ; 1 bytes @ 0x6
   520  0076                     	ds	1
   521  0077                     ??_EEPROM_ReadString:	
   522  0077                     EEPROM_WriteString@ptr_stringPointer_u8:	
   523                           ; 1 bytes @ 0x7
   524                           
   525                           
   526                           ; 1 bytes @ 0x7
   527  0077                     	ds	1
   528  0078                     ??_EEPROM_WriteString:	
   529  0078                     ??___lldiv:	
   530                           ; 1 bytes @ 0x8
   531                           
   532  0078                     ?___ftmul:	
   533                           ; 1 bytes @ 0x8
   534                           
   535  0078                     ?___lltoft:	
   536                           ; 3 bytes @ 0x8
   537                           
   538  0078                     EEPROM_ReadString@eeprom_data:	
   539                           ; 3 bytes @ 0x8
   540                           
   541  0078                     ___ftmul@f1:	
   542                           ; 1 bytes @ 0x8
   543                           
   544  0078                     ___lltoft@c:	
   545                           ; 3 bytes @ 0x8
   546                           
   547                           
   548                           ; 4 bytes @ 0x8
   549  0078                     	ds	1
   550  0079                     ___lldiv@quotient:	
   551                           
   552                           ; 4 bytes @ 0x9
   553  0079                     	ds	2
   554  007B                     ___ftmul@f2:	
   555                           
   556                           ; 3 bytes @ 0xB
   557  007B                     	ds	1
   558  007C                     ??___lltoft:	
   559                           
   560                           ; 1 bytes @ 0xC
   561  007C                     	ds	1
   562  007D                     ___lldiv@counter:	
   563  007D                     ___lltoft@exp:	
   564                           ; 1 bytes @ 0xD
   565                           
   566                           
   567                           ; 1 bytes @ 0xD
   568  007D                     	ds	1
   569  007E                     ??_UART_Init:	
   570  007E                     ??___ftneg:	
   571                           ; 1 bytes @ 0xE
   572                           
   573                           
   574                           	psect	cstackBANK0
   575  0020                     __pcstackBANK0:	
   576                           ; 1 bytes @ 0xE
   577                           
   578  0020                     ?_UART_SetBaudRate:	
   579  0020                     ?___bmul:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0020                     ??___ftmul:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0020                     ?___ftneg:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0020                     ___bmul@multiplicand:	
   589                           ; 3 bytes @ 0x0
   590                           
   591  0020                     ___ftneg@f1:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0020                     UART_SetBaudRate@var_baudRate_u32:	
   595                           ; 3 bytes @ 0x0
   596                           
   597                           
   598                           ; 4 bytes @ 0x0
   599  0020                     	ds	1
   600  0021                     ??___bmul:	
   601                           
   602                           ; 1 bytes @ 0x1
   603  0021                     	ds	1
   604  0022                     ___bmul@product:	
   605                           
   606                           ; 1 bytes @ 0x2
   607  0022                     	ds	1
   608  0023                     ?___ftadd:	
   609  0023                     ___bmul@multiplier:	
   610                           ; 3 bytes @ 0x3
   611                           
   612  0023                     ___ftadd@f1:	
   613                           ; 1 bytes @ 0x3
   614                           
   615                           
   616                           ; 3 bytes @ 0x3
   617  0023                     	ds	1
   618  0024                     ??_UART_SetBaudRate:	
   619  0024                     ?_UART_TxNumber:	
   620                           ; 1 bytes @ 0x4
   621                           
   622  0024                     ___ftmul@exp:	
   623                           ; 1 bytes @ 0x4
   624                           
   625  0024                     UART_TxNumber@v_number_u32:	
   626                           ; 1 bytes @ 0x4
   627                           
   628                           
   629                           ; 4 bytes @ 0x4
   630  0024                     	ds	1
   631  0025                     ___ftmul@f3_as_product:	
   632                           
   633                           ; 3 bytes @ 0x5
   634  0025                     	ds	1
   635  0026                     ___ftadd@f2:	
   636                           
   637                           ; 3 bytes @ 0x6
   638  0026                     	ds	2
   639  0028                     UART_TxNumber@v_numOfDigitsToTransmit_u8:	
   640  0028                     ___ftmul@cntr:	
   641                           ; 1 bytes @ 0x8
   642                           
   643                           
   644                           ; 1 bytes @ 0x8
   645  0028                     	ds	1
   646  0029                     ??_UART_TxNumber:	
   647  0029                     ??___ftadd:	
   648                           ; 1 bytes @ 0x9
   649                           
   650  0029                     ___ftmul@sign:	
   651                           ; 1 bytes @ 0x9
   652                           
   653                           
   654                           ; 1 bytes @ 0x9
   655  0029                     	ds	1
   656  002A                     ?___fttol:	
   657  002A                     ___fttol@f1:	
   658                           ; 4 bytes @ 0xA
   659                           
   660                           
   661                           ; 3 bytes @ 0xA
   662  002A                     	ds	2
   663  002C                     UART_SetBaudRate@RegValue:	
   664                           
   665                           ; 4 bytes @ 0xC
   666  002C                     	ds	1
   667  002D                     ___ftadd@sign:	
   668                           
   669                           ; 1 bytes @ 0xD
   670  002D                     	ds	1
   671  002E                     ??___fttol:	
   672  002E                     ___ftadd@exp2:	
   673                           ; 1 bytes @ 0xE
   674                           
   675                           
   676                           ; 1 bytes @ 0xE
   677  002E                     	ds	1
   678  002F                     ___ftadd@exp1:	
   679                           
   680                           ; 1 bytes @ 0xF
   681  002F                     	ds	1
   682  0030                     ?_UART_Init:	
   683  0030                     UART_Init@var_baudRate_u32:	
   684                           ; 1 bytes @ 0x10
   685                           
   686                           
   687                           ; 4 bytes @ 0x10
   688  0030                     	ds	2
   689  0032                     ___fttol@sign1:	
   690                           
   691                           ; 1 bytes @ 0x12
   692  0032                     	ds	1
   693  0033                     ___fttol@lval:	
   694                           
   695                           ; 4 bytes @ 0x13
   696  0033                     	ds	2
   697  0035                     UART_TxNumber@a:	
   698                           
   699                           ; 10 bytes @ 0x15
   700  0035                     	ds	2
   701  0037                     ___fttol@exp1:	
   702                           
   703                           ; 1 bytes @ 0x17
   704  0037                     	ds	8
   705  003F                     _UART_TxNumber$118:	
   706                           
   707                           ; 2 bytes @ 0x1F
   708  003F                     	ds	2
   709  0041                     UART_TxNumber@v_numericSystem_u8:	
   710                           
   711                           ; 1 bytes @ 0x21
   712  0041                     	ds	1
   713  0042                     UART_TxNumber@i:	
   714                           
   715                           ; 1 bytes @ 0x22
   716  0042                     	ds	1
   717  0043                     ?_UART_TxFloatNumber:	
   718  0043                     UART_TxFloatNumber@v_floatNumber_f32:	
   719                           ; 1 bytes @ 0x23
   720                           
   721                           
   722                           ; 3 bytes @ 0x23
   723  0043                     	ds	3
   724  0046                     ??_UART_TxFloatNumber:	
   725                           
   726                           ; 1 bytes @ 0x26
   727  0046                     	ds	1
   728  0047                     UART_TxFloatNumber@v_tempNumber_u32:	
   729                           
   730                           ; 4 bytes @ 0x27
   731  0047                     	ds	4
   732  004B                     ?_UART_Printf:	
   733                           
   734                           ; 1 bytes @ 0x2B
   735  004B                     	ds	2
   736  004D                     ??_UART_Printf:	
   737                           
   738                           ; 1 bytes @ 0x2D
   739  004D                     	ds	2
   740  004F                     UART_Printf@v_floatNum_f32:	
   741                           
   742                           ; 3 bytes @ 0x2F
   743  004F                     	ds	3
   744  0052                     UART_Printf@str:	
   745                           
   746                           ; 2 bytes @ 0x32
   747  0052                     	ds	2
   748  0054                     UART_Printf@argList:	
   749                           
   750                           ; 1 bytes @ 0x34
   751  0054                     	ds	1
   752  0055                     UART_Printf@v_num_s32:	
   753                           
   754                           ; 4 bytes @ 0x35
   755  0055                     	ds	4
   756  0059                     UART_Printf@v_num_s16:	
   757                           
   758                           ; 2 bytes @ 0x39
   759  0059                     	ds	2
   760  005B                     UART_Printf@v_num_u32:	
   761                           
   762                           ; 4 bytes @ 0x3B
   763  005B                     	ds	4
   764  005F                     UART_Printf@v_num_u16:	
   765                           
   766                           ; 2 bytes @ 0x3F
   767  005F                     	ds	2
   768  0061                     UART_Printf@ptr:	
   769                           
   770                           ; 1 bytes @ 0x41
   771  0061                     	ds	1
   772  0062                     UART_Printf@ch:	
   773                           
   774                           ; 1 bytes @ 0x42
   775  0062                     	ds	1
   776  0063                     UART_Printf@v_numOfDigitsToTransmit_u8:	
   777                           
   778                           ; 1 bytes @ 0x43
   779  0063                     	ds	1
   780  0064                     UART_Printf@argp:	
   781                           
   782                           ; 1 bytes @ 0x44
   783  0064                     	ds	1
   784  0065                     ??_main:	
   785                           
   786                           ; 1 bytes @ 0x45
   787  0065                     	ds	4
   788  0069                     main@eeprom_address:	
   789                           
   790                           ; 1 bytes @ 0x49
   791  0069                     	ds	1
   792                           
   793                           	psect	maintext
   794  0078                     __pmaintext:	
   795 ;;
   796 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   797 ;;
   798 ;; *************** function _main *****************
   799 ;; Defined at:
   800 ;;		line 42 in file "main.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;		None
   803 ;; Auto vars:     Size  Location     Type
   804 ;;  read_str       50    0[BANK1 ] unsigned char [50]
   805 ;;  write_str      47    0[BANK3 ] unsigned char [47]
   806 ;;  eeprom_addre    1   73[BANK0 ] unsigned char 
   807 ;; Return value:  Size  Location     Type
   808 ;;                  2   10[None  ] int 
   809 ;; Registers used:
   810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : B00/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   816 ;;      Params:         0       0       0       0       0
   817 ;;      Locals:         0       1      50      47       0
   818 ;;      Temps:          0       4       0       0       0
   819 ;;      Totals:         0       5      50      47       0
   820 ;;Total ram usage:      102 bytes
   821 ;; Hardware stack levels required when called:    4
   822 ;; This function calls:
   823 ;;		_EEPROM_ReadString
   824 ;;		_EEPROM_WriteString
   825 ;;		_UART_Init
   826 ;;		_UART_Printf
   827 ;; This function is called by:
   828 ;;		Startup code after reset
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           
   833                           ;psect for function _main
   834  0078                     _main:	
   835                           
   836                           ;main.c: 44: unsigned char eeprom_address = 0x00, write_str[] = "Welcome to Pic programm
      +                          ing by Explore Embedded";
   837                           
   838                           ;incstack = 0
   839                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   840  0078  1283               	bcf	3,5	;RP0=0, select bank0
   841  0079  1303               	bcf	3,6	;RP1=0, select bank0
   842  007A  01E9               	clrf	main@eeprom_address
   843  007B  30BF               	movlw	main@write_str& (0+255)
   844  007C  0084               	movwf	4
   845  007D  3090               	movlw	low main@F1131
   846  007E  00E5               	movwf	??_main
   847  007F  0804               	movf	4,w
   848  0080  00E6               	movwf	??_main+1
   849  0081  302F               	movlw	47
   850  0082  00E7               	movwf	??_main+2
   851  0083                     u2220:	
   852  0083  0865               	movf	??_main,w
   853  0084  0084               	movwf	4
   854  0085  1783               	bsf	3,7	;select IRP bank3
   855  0086  0800               	movf	0,w
   856  0087  00E8               	movwf	??_main+3
   857  0088  0AE5               	incf	??_main,f
   858  0089  0866               	movf	??_main+1,w
   859  008A  0084               	movwf	4
   860  008B  0868               	movf	??_main+3,w
   861  008C  0080               	movwf	0
   862  008D  0AE6               	incf	??_main+1,f
   863  008E  0BE7               	decfsz	??_main+2,f
   864  008F  2883               	goto	u2220
   865                           
   866                           ;main.c: 45: unsigned char read_str[50];
   867                           ;main.c: 47: UART_Init(9600);
   868  0090  3000               	movlw	0
   869  0091  00B3               	movwf	UART_Init@var_baudRate_u32+3
   870  0092  3000               	movlw	0
   871  0093  00B2               	movwf	UART_Init@var_baudRate_u32+2
   872  0094  3025               	movlw	37
   873  0095  00B1               	movwf	UART_Init@var_baudRate_u32+1
   874  0096  3080               	movlw	128
   875  0097  00B0               	movwf	UART_Init@var_baudRate_u32
   876  0098  120A  118A  2004  120A  118A  	fcall	_UART_Init
   877                           
   878                           ;main.c: 49: UART_Printf("\n\rEeprom Write String: %s", write_str);
   879  009D  30BF               	movlw	(low (main@write_str| (0+256)))& (0+255)
   880  009E  1283               	bcf	3,5	;RP0=0, select bank0
   881  009F  1303               	bcf	3,6	;RP1=0, select bank0
   882  00A0  00CB               	movwf	?_UART_Printf
   883  00A1  3001               	movlw	1
   884  00A2  00CC               	movwf	?_UART_Printf+1
   885  00A3  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   886  00A4  120A  118A  25B9  120A  118A  	fcall	_UART_Printf
   887                           
   888                           ;main.c: 50: EEPROM_WriteString(eeprom_address, write_str);
   889  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   890  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   891  00AB  0869               	movf	main@eeprom_address,w
   892  00AC  00E5               	movwf	??_main
   893  00AD  01E6               	clrf	??_main+1
   894  00AE  0865               	movf	??_main,w
   895  00AF  00F5               	movwf	EEPROM_WriteString@v_eepromAddress_u16
   896  00B0  0866               	movf	??_main+1,w
   897  00B1  00F6               	movwf	EEPROM_WriteString@v_eepromAddress_u16+1
   898  00B2  30BF               	movlw	(low (main@write_str| (0+256)))& (0+255)
   899  00B3  00E7               	movwf	??_main+2
   900  00B4  0867               	movf	??_main+2,w
   901  00B5  00F7               	movwf	EEPROM_WriteString@ptr_stringPointer_u8
   902  00B6  120A  158A  2784  120A  118A  	fcall	_EEPROM_WriteString
   903                           
   904                           ;main.c: 53: EEPROM_ReadString(eeprom_address, read_str);
   905  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   906  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   907  00BD  0869               	movf	main@eeprom_address,w
   908  00BE  00E5               	movwf	??_main
   909  00BF  01E6               	clrf	??_main+1
   910  00C0  0865               	movf	??_main,w
   911  00C1  00F4               	movwf	EEPROM_ReadString@v_eepromAddress_u16
   912  00C2  0866               	movf	??_main+1,w
   913  00C3  00F5               	movwf	EEPROM_ReadString@v_eepromAddress_u16+1
   914  00C4  30A0               	movlw	(low (main@read_str| 0))& (0+255)
   915  00C5  00E7               	movwf	??_main+2
   916  00C6  0867               	movf	??_main+2,w
   917  00C7  00F6               	movwf	EEPROM_ReadString@ptr_destStringAddress_u8
   918  00C8  120A  158A  2763  120A  118A  	fcall	_EEPROM_ReadString
   919                           
   920                           ;main.c: 54: UART_Printf("\n\rEeprom Read String: %s", read_str);
   921  00CD  30A0               	movlw	(low (main@read_str| 0))& (0+255)
   922  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   923  00CF  1303               	bcf	3,6	;RP1=0, select bank0
   924  00D0  00CB               	movwf	?_UART_Printf
   925  00D1  3000               	movlw	0
   926  00D2  00CC               	movwf	?_UART_Printf+1
   927  00D3  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   928  00D4  120A  118A  25B9  120A  118A  	fcall	_UART_Printf
   929  00D9                     l13:	
   930                           ;main.c: 56: while (1);
   931                           
   932  00D9  28D9               	goto	l13
   933  00DA                     __end_of_main:	
   934                           ;main.c: 58: return 0;
   935                           ;	Return value of _main is never used
   936                           
   937                           
   938                           	psect	text1
   939  05B9                     __ptext1:	
   940 ;; *************** function _UART_Printf *****************
   941 ;; Defined at:
   942 ;;		line 411 in file "../00-libfiles/uart.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;  argList         1    wreg     PTR const unsigned char 
   945 ;;		 -> STR_2(25), STR_1(26), 
   946 ;; Auto vars:     Size  Location     Type
   947 ;;  argList         1   52[BANK0 ] PTR const unsigned char 
   948 ;;		 -> STR_2(25), STR_1(26), 
   949 ;;  v_num_u32       4   59[BANK0 ] unsigned long 
   950 ;;  v_num_s32       4   53[BANK0 ] long 
   951 ;;  v_floatNum_f    3   47[BANK0 ] long 
   952 ;;  v_num_u16       2   63[BANK0 ] unsigned int 
   953 ;;  v_num_s16       2   57[BANK0 ] int 
   954 ;;  str             2   50[BANK0 ] PTR unsigned char 
   955 ;;		 -> main@read_str(50), main@write_str(47), 
   956 ;;  argp            1   68[BANK0 ] PTR void [1]
   957 ;;		 -> ?_UART_Printf(1), 
   958 ;;  v_numOfDigit    1   67[BANK0 ] unsigned char 
   959 ;;  ch              1   66[BANK0 ] unsigned char 
   960 ;;  ptr             1   65[BANK0 ] PTR const unsigned char 
   961 ;;		 -> STR_2(25), STR_1(26), 
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         0       2       0       0       0
   972 ;;      Locals:         0      22       0       0       0
   973 ;;      Temps:          0       2       0       0       0
   974 ;;      Totals:         0      26       0       0       0
   975 ;;Total ram usage:       26 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; Hardware stack levels required when called:    3
   978 ;; This function calls:
   979 ;;		_UART_TxChar
   980 ;;		_UART_TxFloatNumber
   981 ;;		_UART_TxNumber
   982 ;;		_UART_TxString
   983 ;;		___bmul
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           
   990                           ;psect for function _UART_Printf
   991  05B9                     _UART_Printf:	
   992                           
   993                           ;incstack = 0
   994                           ; Regs used in _UART_Printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   995                           ;UART_Printf@argList stored from wreg
   996  05B9  1283               	bcf	3,5	;RP0=0, select bank0
   997  05BA  1303               	bcf	3,6	;RP1=0, select bank0
   998  05BB  00D4               	movwf	UART_Printf@argList
   999                           
  1000                           ;uart.c: 413: const char *ptr;
  1001                           ;uart.c: 414: va_list argp;
  1002                           ;uart.c: 415: sint16_t v_num_s16;
  1003                           ;uart.c: 416: sint32_t v_num_s32;
  1004                           ;uart.c: 417: uint16_t v_num_u16;
  1005                           ;uart.c: 418: uint32_t v_num_u32;
  1006                           ;uart.c: 419: char *str;
  1007                           ;uart.c: 420: char ch;
  1008                           ;uart.c: 421: uint8_t v_numOfDigitsToTransmit_u8;
  1009                           ;uart.c: 423: double v_floatNum_f32;
  1010                           ;uart.c: 427: *argp = __va_start();
  1011  05BC  304B               	movlw	(low (?_UART_Printf| 0))& (0+255)
  1012  05BD  00CD               	movwf	??_UART_Printf
  1013  05BE  084D               	movf	??_UART_Printf,w
  1014  05BF  00E4               	movwf	UART_Printf@argp
  1015                           
  1016                           ;uart.c: 430: for(ptr = argList; *ptr != '\0'; ptr++)
  1017  05C0  0854               	movf	UART_Printf@argList,w
  1018  05C1  00CD               	movwf	??_UART_Printf
  1019  05C2  084D               	movf	??_UART_Printf,w
  1020  05C3  00E1               	movwf	UART_Printf@ptr
  1021  05C4                     l1701:	
  1022  05C4  0861               	movf	UART_Printf@ptr,w
  1023  05C5  0084               	movwf	4
  1024  05C6  120A  158A  2000  120A  118A  	fcall	stringdir
  1025  05CB  3A00               	xorlw	0
  1026  05CC  1903               	btfsc	3,2
  1027  05CD  0008               	return
  1028                           
  1029                           ;uart.c: 431: {
  1030                           ;uart.c: 433: ch= *ptr;
  1031  05CE  0861               	movf	UART_Printf@ptr,w
  1032  05CF  0084               	movwf	4
  1033  05D0  120A  158A  2000  120A  118A  	fcall	stringdir
  1034  05D5  00CD               	movwf	??_UART_Printf
  1035  05D6  084D               	movf	??_UART_Printf,w
  1036  05D7  00E2               	movwf	UART_Printf@ch
  1037                           
  1038                           ;uart.c: 434: if(ch == '%')
  1039  05D8  3025               	movlw	37
  1040  05D9  0662               	xorwf	UART_Printf@ch,w
  1041  05DA  1D03               	btfss	3,2
  1042  05DB  2FE3               	goto	l1697
  1043                           
  1044                           ;uart.c: 435: {
  1045                           ;uart.c: 436: ptr++;
  1046  05DC  3001               	movlw	1
  1047  05DD  00CD               	movwf	??_UART_Printf
  1048  05DE  084D               	movf	??_UART_Printf,w
  1049  05DF  07E1               	addwf	UART_Printf@ptr,f
  1050                           
  1051                           ;uart.c: 437: ch = *ptr;
  1052  05E0  0861               	movf	UART_Printf@ptr,w
  1053  05E1  0084               	movwf	4
  1054  05E2  120A  158A  2000  120A  118A  	fcall	stringdir
  1055  05E7  00CD               	movwf	??_UART_Printf
  1056  05E8  084D               	movf	??_UART_Printf,w
  1057  05E9  00E2               	movwf	UART_Printf@ch
  1058                           
  1059                           ;uart.c: 438: if((ch>=0x30) && (ch<=0x39))
  1060  05EA  3030               	movlw	48
  1061  05EB  0262               	subwf	UART_Printf@ch,w
  1062  05EC  1C03               	skipc
  1063  05ED  2E1B               	goto	l1603
  1064  05EE  303A               	movlw	58
  1065  05EF  0262               	subwf	UART_Printf@ch,w
  1066  05F0  1803               	skipnc
  1067  05F1  2E1B               	goto	l1603
  1068                           
  1069                           ;uart.c: 439: {
  1070                           ;uart.c: 440: v_numOfDigitsToTransmit_u8 = 0;
  1071  05F2  01E3               	clrf	UART_Printf@v_numOfDigitsToTransmit_u8
  1072  05F3                     l1599:	
  1073                           ;uart.c: 441: while((ch>=0x30) && (ch<=0x39))
  1074                           
  1075  05F3  3030               	movlw	48
  1076  05F4  0262               	subwf	UART_Printf@ch,w
  1077  05F5  1C03               	skipc
  1078  05F6  2FB1               	goto	l1695
  1079  05F7  303A               	movlw	58
  1080  05F8  0262               	subwf	UART_Printf@ch,w
  1081  05F9  1803               	btfsc	3,0
  1082  05FA  2FB1               	goto	l1695
  1083                           
  1084                           ;uart.c: 442: {
  1085                           ;uart.c: 443: v_numOfDigitsToTransmit_u8 = (v_numOfDigitsToTransmit_u8 * 10) + (ch-0x30)
      +                          ;
  1086  05FB  300A               	movlw	10
  1087  05FC  00CD               	movwf	??_UART_Printf
  1088  05FD  084D               	movf	??_UART_Printf,w
  1089  05FE  00A0               	movwf	___bmul@multiplicand
  1090  05FF  0863               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1091  0600  120A  158A  2701  120A  118A  	fcall	___bmul
  1092  0605  1283               	bcf	3,5	;RP0=0, select bank0
  1093  0606  1303               	bcf	3,6	;RP1=0, select bank0
  1094  0607  0762               	addwf	UART_Printf@ch,w
  1095  0608  3ED0               	addlw	208
  1096  0609  00CE               	movwf	??_UART_Printf+1
  1097  060A  084E               	movf	??_UART_Printf+1,w
  1098  060B  00E3               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1099                           
  1100                           ;uart.c: 444: ptr++;
  1101  060C  3001               	movlw	1
  1102  060D  00CD               	movwf	??_UART_Printf
  1103  060E  084D               	movf	??_UART_Printf,w
  1104  060F  07E1               	addwf	UART_Printf@ptr,f
  1105                           
  1106                           ;uart.c: 445: ch = *ptr;
  1107  0610  0861               	movf	UART_Printf@ptr,w
  1108  0611  0084               	movwf	4
  1109  0612  120A  158A  2000  120A  118A  	fcall	stringdir
  1110  0617  00CD               	movwf	??_UART_Printf
  1111  0618  084D               	movf	??_UART_Printf,w
  1112  0619  00E2               	movwf	UART_Printf@ch
  1113  061A  2DF3               	goto	l1599
  1114  061B                     l1603:	
  1115                           ;uart.c: 446: }
  1116                           ;uart.c: 447: }
  1117                           
  1118                           
  1119                           ;uart.c: 448: else
  1120                           ;uart.c: 449: {
  1121                           ;uart.c: 450: v_numOfDigitsToTransmit_u8 = 0xffu;
  1122  061B  30FF               	movlw	255
  1123  061C  00CD               	movwf	??_UART_Printf
  1124  061D  084D               	movf	??_UART_Printf,w
  1125  061E  00E3               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1126                           
  1127                           ;uart.c: 451: }
  1128                           ;uart.c: 454: switch(ch)
  1129  061F  2FB1               	goto	l1695
  1130  0620                     l1605:	
  1131                           ;uart.c: 455: {
  1132                           ;uart.c: 456: case 'C':
  1133                           
  1134                           
  1135                           ;uart.c: 457: case 'c':
  1136                           ;uart.c: 458: ch = (*(uint8_t *)__va_arg((*(uint8_t **)argp), (uint8_t)0));
  1137  0620  0864               	movf	UART_Printf@argp,w
  1138  0621  0084               	movwf	4
  1139  0622  1383               	bcf	3,7	;select IRP bank0
  1140  0623  0800               	movf	0,w
  1141  0624  00CD               	movwf	??_UART_Printf
  1142  0625  084D               	movf	??_UART_Printf,w
  1143  0626  00E2               	movwf	UART_Printf@ch
  1144  0627  3002               	movlw	2
  1145  0628  00CD               	movwf	??_UART_Printf
  1146  0629  084D               	movf	??_UART_Printf,w
  1147  062A  07E4               	addwf	UART_Printf@argp,f
  1148  062B  2FE3               	goto	l1697
  1149  062C                     l1611:	
  1150                           ;uart.c: 462: case 'd':
  1151                           
  1152                           ;uart.c: 460: break;
  1153                           
  1154                           ;uart.c: 459: UART_TxChar(ch);
  1155                           
  1156                           
  1157                           ;uart.c: 463: v_num_s16 = (*(sint16_t *)__va_arg((*(sint16_t **)argp), (sint16_t)0));
  1158  062C  1283               	bcf	3,5	;RP0=0, select bank0
  1159  062D  1303               	bcf	3,6	;RP1=0, select bank0
  1160  062E  0864               	movf	UART_Printf@argp,w
  1161  062F  0084               	movwf	4
  1162  0630  1383               	bcf	3,7	;select IRP bank0
  1163  0631  0800               	movf	0,w
  1164  0632  00D9               	movwf	UART_Printf@v_num_s16
  1165  0633  0A84               	incf	4,f
  1166  0634  0800               	movf	0,w
  1167  0635  00DA               	movwf	UART_Printf@v_num_s16+1
  1168  0636  3002               	movlw	2
  1169  0637  00CD               	movwf	??_UART_Printf
  1170  0638  084D               	movf	??_UART_Printf,w
  1171  0639  07E4               	addwf	UART_Printf@argp,f
  1172                           
  1173                           ;uart.c: 464: if(v_num_s16<0)
  1174  063A  1FDA               	btfss	UART_Printf@v_num_s16+1,7
  1175  063B  2E47               	goto	l1621
  1176                           
  1177                           ;uart.c: 465: {
  1178                           ;uart.c: 466: v_num_s16 = -v_num_s16;
  1179  063C  09D9               	comf	UART_Printf@v_num_s16,f
  1180  063D  09DA               	comf	UART_Printf@v_num_s16+1,f
  1181  063E  0AD9               	incf	UART_Printf@v_num_s16,f
  1182  063F  1903               	skipnz
  1183  0640  0ADA               	incf	UART_Printf@v_num_s16+1,f
  1184                           
  1185                           ;uart.c: 467: UART_TxChar('-');
  1186  0641  302D               	movlw	45
  1187  0642  120A  158A  26D2  120A  118A  	fcall	_UART_TxChar
  1188  0647                     l1621:	
  1189                           
  1190                           ;uart.c: 468: }
  1191                           ;uart.c: 469: UART_TxNumber(10u,v_num_s16,v_numOfDigitsToTransmit_u8);
  1192  0647  1283               	bcf	3,5	;RP0=0, select bank0
  1193  0648  1303               	bcf	3,6	;RP1=0, select bank0
  1194  0649  0859               	movf	UART_Printf@v_num_s16,w
  1195  064A  00A4               	movwf	UART_TxNumber@v_number_u32
  1196  064B  085A               	movf	UART_Printf@v_num_s16+1,w
  1197  064C  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1198  064D  3000               	movlw	0
  1199  064E  1BA5               	btfsc	UART_TxNumber@v_number_u32+1,7
  1200  064F  30FF               	movlw	255
  1201  0650  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1202  0651  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1203  0652  0863               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1204  0653  00CD               	movwf	??_UART_Printf
  1205  0654  084D               	movf	??_UART_Printf,w
  1206  0655  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1207  0656  300A               	movlw	10
  1208  0657  120A  118A  23BE  120A  118A  	fcall	_UART_TxNumber
  1209                           
  1210                           ;uart.c: 470: break;
  1211  065C  2FE9               	goto	l1699
  1212  065D                     l1623:	
  1213                           ;uart.c: 472: case 'D':
  1214                           
  1215                           
  1216                           ;uart.c: 473: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
  1217  065D  1283               	bcf	3,5	;RP0=0, select bank0
  1218  065E  1303               	bcf	3,6	;RP1=0, select bank0
  1219  065F  0864               	movf	UART_Printf@argp,w
  1220  0660  0084               	movwf	4
  1221  0661  1383               	bcf	3,7	;select IRP bank0
  1222  0662  0800               	movf	0,w
  1223  0663  00D5               	movwf	UART_Printf@v_num_s32
  1224  0664  0A84               	incf	4,f
  1225  0665  0800               	movf	0,w
  1226  0666  00D6               	movwf	UART_Printf@v_num_s32+1
  1227  0667  0A84               	incf	4,f
  1228  0668  0800               	movf	0,w
  1229  0669  00D7               	movwf	UART_Printf@v_num_s32+2
  1230  066A  0A84               	incf	4,f
  1231  066B  0800               	movf	0,w
  1232  066C  00D8               	movwf	UART_Printf@v_num_s32+3
  1233  066D  3004               	movlw	4
  1234  066E  00CD               	movwf	??_UART_Printf
  1235  066F  084D               	movf	??_UART_Printf,w
  1236  0670  07E4               	addwf	UART_Printf@argp,f
  1237                           
  1238                           ;uart.c: 474: if(v_num_s32<0)
  1239  0671  1FD8               	btfss	UART_Printf@v_num_s32+3,7
  1240  0672  2E84               	goto	l1633
  1241                           
  1242                           ;uart.c: 475: {
  1243                           ;uart.c: 476: v_num_s32 = -v_num_s32;
  1244  0673  09D5               	comf	UART_Printf@v_num_s32,f
  1245  0674  09D6               	comf	UART_Printf@v_num_s32+1,f
  1246  0675  09D7               	comf	UART_Printf@v_num_s32+2,f
  1247  0676  09D8               	comf	UART_Printf@v_num_s32+3,f
  1248  0677  0AD5               	incf	UART_Printf@v_num_s32,f
  1249  0678  1903               	skipnz
  1250  0679  0AD6               	incf	UART_Printf@v_num_s32+1,f
  1251  067A  1903               	skipnz
  1252  067B  0AD7               	incf	UART_Printf@v_num_s32+2,f
  1253  067C  1903               	skipnz
  1254  067D  0AD8               	incf	UART_Printf@v_num_s32+3,f
  1255                           
  1256                           ;uart.c: 477: UART_TxChar('-');
  1257  067E  302D               	movlw	45
  1258  067F  120A  158A  26D2  120A  118A  	fcall	_UART_TxChar
  1259  0684                     l1633:	
  1260                           
  1261                           ;uart.c: 478: }
  1262                           ;uart.c: 479: UART_TxNumber(10u,v_num_s32,v_numOfDigitsToTransmit_u8);
  1263  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1264  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1265  0686  0858               	movf	UART_Printf@v_num_s32+3,w
  1266  0687  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1267  0688  0857               	movf	UART_Printf@v_num_s32+2,w
  1268  0689  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1269  068A  0856               	movf	UART_Printf@v_num_s32+1,w
  1270  068B  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1271  068C  0855               	movf	UART_Printf@v_num_s32,w
  1272  068D  00A4               	movwf	UART_TxNumber@v_number_u32
  1273  068E  0863               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1274  068F  00CD               	movwf	??_UART_Printf
  1275  0690  084D               	movf	??_UART_Printf,w
  1276  0691  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1277  0692  300A               	movlw	10
  1278  0693  120A  118A  23BE  120A  118A  	fcall	_UART_TxNumber
  1279                           
  1280                           ;uart.c: 480: break;
  1281  0698  2FE9               	goto	l1699
  1282  0699                     l1635:	
  1283                           ;uart.c: 482: case 'u':
  1284                           
  1285                           
  1286                           ;uart.c: 483: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1287  0699  1283               	bcf	3,5	;RP0=0, select bank0
  1288  069A  1303               	bcf	3,6	;RP1=0, select bank0
  1289  069B  0864               	movf	UART_Printf@argp,w
  1290  069C  0084               	movwf	4
  1291  069D  1383               	bcf	3,7	;select IRP bank0
  1292  069E  0800               	movf	0,w
  1293  069F  00DF               	movwf	UART_Printf@v_num_u16
  1294  06A0  0A84               	incf	4,f
  1295  06A1  0800               	movf	0,w
  1296  06A2  00E0               	movwf	UART_Printf@v_num_u16+1
  1297  06A3  3002               	movlw	2
  1298  06A4  00CD               	movwf	??_UART_Printf
  1299  06A5  084D               	movf	??_UART_Printf,w
  1300  06A6  07E4               	addwf	UART_Printf@argp,f
  1301                           
  1302                           ;uart.c: 484: UART_TxNumber(10u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1303  06A7  085F               	movf	UART_Printf@v_num_u16,w
  1304  06A8  00A4               	movwf	UART_TxNumber@v_number_u32
  1305  06A9  0860               	movf	UART_Printf@v_num_u16+1,w
  1306  06AA  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1307  06AB  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1308  06AC  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1309  06AD  0863               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1310  06AE  00CD               	movwf	??_UART_Printf
  1311  06AF  084D               	movf	??_UART_Printf,w
  1312  06B0  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1313  06B1  300A               	movlw	10
  1314  06B2  120A  118A  23BE  120A  118A  	fcall	_UART_TxNumber
  1315                           
  1316                           ;uart.c: 485: break;
  1317  06B7  2FE9               	goto	l1699
  1318  06B8                     l1641:	
  1319                           ;uart.c: 487: case 'U':
  1320                           
  1321                           
  1322                           ;uart.c: 488: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1323  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  1324  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  1325  06BA  0864               	movf	UART_Printf@argp,w
  1326  06BB  0084               	movwf	4
  1327  06BC  1383               	bcf	3,7	;select IRP bank0
  1328  06BD  0800               	movf	0,w
  1329  06BE  00DB               	movwf	UART_Printf@v_num_u32
  1330  06BF  0A84               	incf	4,f
  1331  06C0  0800               	movf	0,w
  1332  06C1  00DC               	movwf	UART_Printf@v_num_u32+1
  1333  06C2  0A84               	incf	4,f
  1334  06C3  0800               	movf	0,w
  1335  06C4  00DD               	movwf	UART_Printf@v_num_u32+2
  1336  06C5  0A84               	incf	4,f
  1337  06C6  0800               	movf	0,w
  1338  06C7  00DE               	movwf	UART_Printf@v_num_u32+3
  1339  06C8  3004               	movlw	4
  1340  06C9  00CD               	movwf	??_UART_Printf
  1341  06CA  084D               	movf	??_UART_Printf,w
  1342  06CB  07E4               	addwf	UART_Printf@argp,f
  1343                           
  1344                           ;uart.c: 489: UART_TxNumber(10u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1345  06CC  085E               	movf	UART_Printf@v_num_u32+3,w
  1346  06CD  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1347  06CE  085D               	movf	UART_Printf@v_num_u32+2,w
  1348  06CF  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1349  06D0  085C               	movf	UART_Printf@v_num_u32+1,w
  1350  06D1  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1351  06D2  085B               	movf	UART_Printf@v_num_u32,w
  1352  06D3  00A4               	movwf	UART_TxNumber@v_number_u32
  1353  06D4  0863               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1354  06D5  00CD               	movwf	??_UART_Printf
  1355  06D6  084D               	movf	??_UART_Printf,w
  1356  06D7  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1357  06D8  300A               	movlw	10
  1358  06D9  120A  118A  23BE  120A  118A  	fcall	_UART_TxNumber
  1359                           
  1360                           ;uart.c: 490: break;
  1361  06DE  2FE9               	goto	l1699
  1362  06DF                     l1647:	
  1363                           ;uart.c: 492: case 'x':
  1364                           
  1365                           
  1366                           ;uart.c: 493: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1367  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1368  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1369  06E1  0864               	movf	UART_Printf@argp,w
  1370  06E2  0084               	movwf	4
  1371  06E3  1383               	bcf	3,7	;select IRP bank0
  1372  06E4  0800               	movf	0,w
  1373  06E5  00DF               	movwf	UART_Printf@v_num_u16
  1374  06E6  0A84               	incf	4,f
  1375  06E7  0800               	movf	0,w
  1376  06E8  00E0               	movwf	UART_Printf@v_num_u16+1
  1377  06E9  3002               	movlw	2
  1378  06EA  00CD               	movwf	??_UART_Printf
  1379  06EB  084D               	movf	??_UART_Printf,w
  1380  06EC  07E4               	addwf	UART_Printf@argp,f
  1381                           
  1382                           ;uart.c: 494: UART_TxNumber(16u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1383  06ED  085F               	movf	UART_Printf@v_num_u16,w
  1384  06EE  00A4               	movwf	UART_TxNumber@v_number_u32
  1385  06EF  0860               	movf	UART_Printf@v_num_u16+1,w
  1386  06F0  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1387  06F1  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1388  06F2  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1389  06F3  0863               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1390  06F4  00CD               	movwf	??_UART_Printf
  1391  06F5  084D               	movf	??_UART_Printf,w
  1392  06F6  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1393  06F7  3010               	movlw	16
  1394  06F8  120A  118A  23BE  120A  118A  	fcall	_UART_TxNumber
  1395                           
  1396                           ;uart.c: 495: break;
  1397  06FD  2FE9               	goto	l1699
  1398  06FE                     l1653:	
  1399                           ;uart.c: 497: case 'X':
  1400                           
  1401                           
  1402                           ;uart.c: 498: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1403  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  1404  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  1405  0700  0864               	movf	UART_Printf@argp,w
  1406  0701  0084               	movwf	4
  1407  0702  1383               	bcf	3,7	;select IRP bank0
  1408  0703  0800               	movf	0,w
  1409  0704  00DB               	movwf	UART_Printf@v_num_u32
  1410  0705  0A84               	incf	4,f
  1411  0706  0800               	movf	0,w
  1412  0707  00DC               	movwf	UART_Printf@v_num_u32+1
  1413  0708  0A84               	incf	4,f
  1414  0709  0800               	movf	0,w
  1415  070A  00DD               	movwf	UART_Printf@v_num_u32+2
  1416  070B  0A84               	incf	4,f
  1417  070C  0800               	movf	0,w
  1418  070D  00DE               	movwf	UART_Printf@v_num_u32+3
  1419  070E  3004               	movlw	4
  1420  070F  00CD               	movwf	??_UART_Printf
  1421  0710  084D               	movf	??_UART_Printf,w
  1422  0711  07E4               	addwf	UART_Printf@argp,f
  1423                           
  1424                           ;uart.c: 499: UART_TxNumber(16u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1425  0712  085E               	movf	UART_Printf@v_num_u32+3,w
  1426  0713  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1427  0714  085D               	movf	UART_Printf@v_num_u32+2,w
  1428  0715  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1429  0716  085C               	movf	UART_Printf@v_num_u32+1,w
  1430  0717  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1431  0718  085B               	movf	UART_Printf@v_num_u32,w
  1432  0719  00A4               	movwf	UART_TxNumber@v_number_u32
  1433  071A  0863               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1434  071B  00CD               	movwf	??_UART_Printf
  1435  071C  084D               	movf	??_UART_Printf,w
  1436  071D  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1437  071E  3010               	movlw	16
  1438  071F  120A  118A  23BE  120A  118A  	fcall	_UART_TxNumber
  1439                           
  1440                           ;uart.c: 500: break;
  1441  0724  2FE9               	goto	l1699
  1442  0725                     l1659:	
  1443                           ;uart.c: 503: case 'b':
  1444                           
  1445                           
  1446                           ;uart.c: 504: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1447  0725  1283               	bcf	3,5	;RP0=0, select bank0
  1448  0726  1303               	bcf	3,6	;RP1=0, select bank0
  1449  0727  0864               	movf	UART_Printf@argp,w
  1450  0728  0084               	movwf	4
  1451  0729  1383               	bcf	3,7	;select IRP bank0
  1452  072A  0800               	movf	0,w
  1453  072B  00DF               	movwf	UART_Printf@v_num_u16
  1454  072C  0A84               	incf	4,f
  1455  072D  0800               	movf	0,w
  1456  072E  00E0               	movwf	UART_Printf@v_num_u16+1
  1457  072F  3002               	movlw	2
  1458  0730  00CD               	movwf	??_UART_Printf
  1459  0731  084D               	movf	??_UART_Printf,w
  1460  0732  07E4               	addwf	UART_Printf@argp,f
  1461                           
  1462                           ;uart.c: 506: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1463  0733  0A63               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1464  0734  1D03               	btfss	3,2
  1465  0735  2F3A               	goto	l1667
  1466                           
  1467                           ;uart.c: 507: v_numOfDigitsToTransmit_u8 = 16;
  1468  0736  3010               	movlw	16
  1469  0737  00CD               	movwf	??_UART_Printf
  1470  0738  084D               	movf	??_UART_Printf,w
  1471  0739  00E3               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1472  073A                     l1667:	
  1473                           
  1474                           ;uart.c: 509: UART_TxNumber(2u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1475  073A  085F               	movf	UART_Printf@v_num_u16,w
  1476  073B  00A4               	movwf	UART_TxNumber@v_number_u32
  1477  073C  0860               	movf	UART_Printf@v_num_u16+1,w
  1478  073D  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1479  073E  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1480  073F  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1481  0740  0863               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1482  0741  00CD               	movwf	??_UART_Printf
  1483  0742  084D               	movf	??_UART_Printf,w
  1484  0743  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1485  0744  3002               	movlw	2
  1486  0745  120A  118A  23BE  120A  118A  	fcall	_UART_TxNumber
  1487                           
  1488                           ;uart.c: 510: break;
  1489  074A  2FE9               	goto	l1699
  1490  074B                     l1669:	
  1491                           ;uart.c: 512: case 'B':
  1492                           
  1493                           
  1494                           ;uart.c: 513: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1495  074B  1283               	bcf	3,5	;RP0=0, select bank0
  1496  074C  1303               	bcf	3,6	;RP1=0, select bank0
  1497  074D  0864               	movf	UART_Printf@argp,w
  1498  074E  0084               	movwf	4
  1499  074F  1383               	bcf	3,7	;select IRP bank0
  1500  0750  0800               	movf	0,w
  1501  0751  00DB               	movwf	UART_Printf@v_num_u32
  1502  0752  0A84               	incf	4,f
  1503  0753  0800               	movf	0,w
  1504  0754  00DC               	movwf	UART_Printf@v_num_u32+1
  1505  0755  0A84               	incf	4,f
  1506  0756  0800               	movf	0,w
  1507  0757  00DD               	movwf	UART_Printf@v_num_u32+2
  1508  0758  0A84               	incf	4,f
  1509  0759  0800               	movf	0,w
  1510  075A  00DE               	movwf	UART_Printf@v_num_u32+3
  1511  075B  3004               	movlw	4
  1512  075C  00CD               	movwf	??_UART_Printf
  1513  075D  084D               	movf	??_UART_Printf,w
  1514  075E  07E4               	addwf	UART_Printf@argp,f
  1515                           
  1516                           ;uart.c: 515: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1517  075F  0A63               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1518  0760  1D03               	btfss	3,2
  1519  0761  2F66               	goto	l1677
  1520                           
  1521                           ;uart.c: 516: v_numOfDigitsToTransmit_u8 = 32;
  1522  0762  3020               	movlw	32
  1523  0763  00CD               	movwf	??_UART_Printf
  1524  0764  084D               	movf	??_UART_Printf,w
  1525  0765  00E3               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1526  0766                     l1677:	
  1527                           
  1528                           ;uart.c: 518: UART_TxNumber(2u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1529  0766  085E               	movf	UART_Printf@v_num_u32+3,w
  1530  0767  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1531  0768  085D               	movf	UART_Printf@v_num_u32+2,w
  1532  0769  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1533  076A  085C               	movf	UART_Printf@v_num_u32+1,w
  1534  076B  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1535  076C  085B               	movf	UART_Printf@v_num_u32,w
  1536  076D  00A4               	movwf	UART_TxNumber@v_number_u32
  1537  076E  0863               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1538  076F  00CD               	movwf	??_UART_Printf
  1539  0770  084D               	movf	??_UART_Printf,w
  1540  0771  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1541  0772  3002               	movlw	2
  1542  0773  120A  118A  23BE  120A  118A  	fcall	_UART_TxNumber
  1543                           
  1544                           ;uart.c: 519: break;
  1545  0778  2FE9               	goto	l1699
  1546  0779                     l1679:	
  1547                           ;uart.c: 522: case 'F':
  1548                           
  1549                           
  1550                           ;uart.c: 523: case 'f':
  1551                           ;uart.c: 525: v_floatNum_f32 = (*(double *)__va_arg((*(double **)argp), (double)0));
  1552  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1553  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1554  077B  0864               	movf	UART_Printf@argp,w
  1555  077C  0084               	movwf	4
  1556  077D  1383               	bcf	3,7	;select IRP bank0
  1557  077E  0800               	movf	0,w
  1558  077F  00CF               	movwf	UART_Printf@v_floatNum_f32
  1559  0780  0A84               	incf	4,f
  1560  0781  0800               	movf	0,w
  1561  0782  00D0               	movwf	UART_Printf@v_floatNum_f32+1
  1562  0783  0A84               	incf	4,f
  1563  0784  0800               	movf	0,w
  1564  0785  00D1               	movwf	UART_Printf@v_floatNum_f32+2
  1565  0786  3003               	movlw	3
  1566  0787  00CD               	movwf	??_UART_Printf
  1567  0788  084D               	movf	??_UART_Printf,w
  1568  0789  07E4               	addwf	UART_Printf@argp,f
  1569                           
  1570                           ;uart.c: 526: UART_TxFloatNumber(v_floatNum_f32);
  1571  078A  084F               	movf	UART_Printf@v_floatNum_f32,w
  1572  078B  00C3               	movwf	UART_TxFloatNumber@v_floatNumber_f32
  1573  078C  0850               	movf	UART_Printf@v_floatNum_f32+1,w
  1574  078D  00C4               	movwf	UART_TxFloatNumber@v_floatNumber_f32+1
  1575  078E  0851               	movf	UART_Printf@v_floatNum_f32+2,w
  1576  078F  00C5               	movwf	UART_TxFloatNumber@v_floatNumber_f32+2
  1577  0790  120A  118A  224E  120A  118A  	fcall	_UART_TxFloatNumber
  1578                           
  1579                           ;uart.c: 528: break;
  1580  0795  2FE9               	goto	l1699
  1581  0796                     l1685:	
  1582                           ;uart.c: 531: case 'S':
  1583                           
  1584                           
  1585                           ;uart.c: 532: case 's':
  1586                           ;uart.c: 533: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  1587  0796  1283               	bcf	3,5	;RP0=0, select bank0
  1588  0797  1303               	bcf	3,6	;RP1=0, select bank0
  1589  0798  0864               	movf	UART_Printf@argp,w
  1590  0799  0084               	movwf	4
  1591  079A  1383               	bcf	3,7	;select IRP bank0
  1592  079B  0800               	movf	0,w
  1593  079C  00D2               	movwf	UART_Printf@str
  1594  079D  0A84               	incf	4,f
  1595  079E  0800               	movf	0,w
  1596  079F  0384               	decf	4,f
  1597  07A0  00D3               	movwf	UART_Printf@str+1
  1598  07A1  3002               	movlw	2
  1599  07A2  00CD               	movwf	??_UART_Printf
  1600  07A3  084D               	movf	??_UART_Printf,w
  1601  07A4  07E4               	addwf	UART_Printf@argp,f
  1602                           
  1603                           ;uart.c: 534: UART_TxString(str);
  1604  07A5  0852               	movf	UART_Printf@str,w
  1605  07A6  00F1               	movwf	UART_TxString@ptr_string
  1606  07A7  0853               	movf	UART_Printf@str+1,w
  1607  07A8  00F2               	movwf	UART_TxString@ptr_string+1
  1608  07A9  120A  158A  272C  120A  118A  	fcall	_UART_TxString
  1609                           
  1610                           ;uart.c: 535: break;
  1611  07AE  2FE9               	goto	l1699
  1612  07AF                     l1691:	
  1613                           ;uart.c: 537: case '%':
  1614                           
  1615                           
  1616                           ;uart.c: 538: UART_TxChar('%');
  1617  07AF  3025               	movlw	37
  1618  07B0  2FE4               	goto	L1
  1619  07B1                     l1695:	
  1620                           ;uart.c: 540: }
  1621                           
  1622                           ;uart.c: 539: break;
  1623                           
  1624  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  1625  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  1626  07B3  0862               	movf	UART_Printf@ch,w
  1627                           
  1628                           ; Switch size 1, requested type "space"
  1629                           ; Number of cases is 15, Range of values is 37 to 120
  1630                           ; switch strategies available:
  1631                           ; Name         Instructions Cycles
  1632                           ; simple_byte           46    24 (average)
  1633                           ; direct_byte          263    11 (fixed)
  1634                           ; jumptable            263     9 (fixed)
  1635                           ;	Chosen strategy is simple_byte
  1636  07B4  3A25               	xorlw	37	; case 37
  1637  07B5  1903               	skipnz
  1638  07B6  2FAF               	goto	l1691
  1639  07B7  3A67               	xorlw	103	; case 66
  1640  07B8  1903               	skipnz
  1641  07B9  2F4B               	goto	l1669
  1642  07BA  3A01               	xorlw	1	; case 67
  1643  07BB  1903               	skipnz
  1644  07BC  2E20               	goto	l1605
  1645  07BD  3A07               	xorlw	7	; case 68
  1646  07BE  1903               	skipnz
  1647  07BF  2E5D               	goto	l1623
  1648  07C0  3A02               	xorlw	2	; case 70
  1649  07C1  1903               	skipnz
  1650  07C2  2F79               	goto	l1679
  1651  07C3  3A15               	xorlw	21	; case 83
  1652  07C4  1903               	skipnz
  1653  07C5  2F96               	goto	l1685
  1654  07C6  3A06               	xorlw	6	; case 85
  1655  07C7  1903               	skipnz
  1656  07C8  2EB8               	goto	l1641
  1657  07C9  3A0D               	xorlw	13	; case 88
  1658  07CA  1903               	skipnz
  1659  07CB  2EFE               	goto	l1653
  1660  07CC  3A3A               	xorlw	58	; case 98
  1661  07CD  1903               	skipnz
  1662  07CE  2F25               	goto	l1659
  1663  07CF  3A01               	xorlw	1	; case 99
  1664  07D0  1903               	skipnz
  1665  07D1  2E20               	goto	l1605
  1666  07D2  3A07               	xorlw	7	; case 100
  1667  07D3  1903               	skipnz
  1668  07D4  2E2C               	goto	l1611
  1669  07D5  3A02               	xorlw	2	; case 102
  1670  07D6  1903               	skipnz
  1671  07D7  2F79               	goto	l1679
  1672  07D8  3A15               	xorlw	21	; case 115
  1673  07D9  1903               	skipnz
  1674  07DA  2F96               	goto	l1685
  1675  07DB  3A06               	xorlw	6	; case 117
  1676  07DC  1903               	skipnz
  1677  07DD  2E99               	goto	l1635
  1678  07DE  3A0D               	xorlw	13	; case 120
  1679  07DF  1903               	skipnz
  1680  07E0  2EDF               	goto	l1647
  1681  07E1  2FE9               	goto	l1699
  1682                           
  1683                           ;uart.c: 541: }
  1684  07E2  2FE9               	goto	l1699
  1685  07E3                     l1697:	
  1686                           
  1687                           ;uart.c: 542: else
  1688                           ;uart.c: 543: {
  1689                           ;uart.c: 545: UART_TxChar(ch);
  1690  07E3  0862               	movf	UART_Printf@ch,w
  1691  07E4                     L1:	
  1692  07E4  120A  158A  26D2  120A  118A  	fcall	_UART_TxChar
  1693  07E9                     l1699:	
  1694  07E9  3001               	movlw	1
  1695  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  1696  07EB  1303               	bcf	3,6	;RP1=0, select bank0
  1697  07EC  00CD               	movwf	??_UART_Printf
  1698  07ED  084D               	movf	??_UART_Printf,w
  1699  07EE  07E1               	addwf	UART_Printf@ptr,f
  1700  07EF  2DC4               	goto	l1701
  1701  07F0                     __end_of_UART_Printf:	
  1702                           
  1703                           	psect	text2
  1704  0F2C                     __ptext2:	
  1705 ;; *************** function _UART_TxString *****************
  1706 ;; Defined at:
  1707 ;;		line 168 in file "../00-libfiles/uart.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  ptr_string      2    1[COMMON] PTR unsigned char 
  1710 ;;		 -> main@read_str(50), main@write_str(47), 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;		None
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      void 
  1715 ;; Registers used:
  1716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1722 ;;      Params:         2       0       0       0       0
  1723 ;;      Locals:         0       0       0       0       0
  1724 ;;      Temps:          0       0       0       0       0
  1725 ;;      Totals:         2       0       0       0       0
  1726 ;;Total ram usage:        2 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; Hardware stack levels required when called:    1
  1729 ;; This function calls:
  1730 ;;		_UART_TxChar
  1731 ;; This function is called by:
  1732 ;;		_UART_Printf
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           
  1737                           ;psect for function _UART_TxString
  1738  0F2C                     _UART_TxString:	
  1739  0F2C                     l1561:	
  1740                           ;uart.c: 170: while(*ptr_string)
  1741                           
  1742                           ;incstack = 0
  1743                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1744                           
  1745  0F2C  0871               	movf	UART_TxString@ptr_string,w
  1746  0F2D  0084               	movwf	4
  1747  0F2E  1783               	bsf	3,7
  1748  0F2F  1C72               	btfss	UART_TxString@ptr_string+1,0
  1749  0F30  1383               	bcf	3,7
  1750  0F31  0800               	movf	0,w
  1751  0F32  1903               	btfsc	3,2
  1752  0F33  0008               	return
  1753                           
  1754                           ;uart.c: 171: UART_TxChar(*ptr_string++);
  1755  0F34  0871               	movf	UART_TxString@ptr_string,w
  1756  0F35  0084               	movwf	4
  1757  0F36  1783               	bsf	3,7
  1758  0F37  1C72               	btfss	UART_TxString@ptr_string+1,0
  1759  0F38  1383               	bcf	3,7
  1760  0F39  0800               	movf	0,w
  1761  0F3A  120A  158A  26D2  120A  158A  	fcall	_UART_TxChar
  1762  0F3F  3001               	movlw	1
  1763  0F40  07F1               	addwf	UART_TxString@ptr_string,f
  1764  0F41  1803               	skipnc
  1765  0F42  0AF2               	incf	UART_TxString@ptr_string+1,f
  1766  0F43  2F2C               	goto	l1561
  1767  0F44                     __end_of_UART_TxString:	
  1768                           
  1769                           	psect	text3
  1770  024E                     __ptext3:	
  1771 ;; *************** function _UART_TxFloatNumber *****************
  1772 ;; Defined at:
  1773 ;;		line 348 in file "../00-libfiles/uart.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  v_floatNumbe    3   35[BANK0 ] float 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  v_tempNumber    4   39[BANK0 ] unsigned long 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1787 ;;      Params:         0       3       0       0       0
  1788 ;;      Locals:         0       4       0       0       0
  1789 ;;      Temps:          0       1       0       0       0
  1790 ;;      Totals:         0       8       0       0       0
  1791 ;;Total ram usage:        8 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; Hardware stack levels required when called:    2
  1794 ;; This function calls:
  1795 ;;		_UART_TxChar
  1796 ;;		_UART_TxNumber
  1797 ;;		___ftadd
  1798 ;;		___ftmul
  1799 ;;		___ftneg
  1800 ;;		___fttol
  1801 ;;		___lltoft
  1802 ;; This function is called by:
  1803 ;;		_UART_Printf
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           
  1808                           ;psect for function _UART_TxFloatNumber
  1809  024E                     _UART_TxFloatNumber:	
  1810                           
  1811                           ;uart.c: 350: uint32_t v_tempNumber_u32;
  1812                           ;uart.c: 357: v_tempNumber_u32 = (uint32_t) v_floatNumber_f32;
  1813                           
  1814                           ;incstack = 0
  1815                           ; Regs used in _UART_TxFloatNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1816  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1817  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1818  0250  0843               	movf	UART_TxFloatNumber@v_floatNumber_f32,w
  1819  0251  00AA               	movwf	___fttol@f1
  1820  0252  0844               	movf	UART_TxFloatNumber@v_floatNumber_f32+1,w
  1821  0253  00AB               	movwf	___fttol@f1+1
  1822  0254  0845               	movf	UART_TxFloatNumber@v_floatNumber_f32+2,w
  1823  0255  00AC               	movwf	___fttol@f1+2
  1824  0256  120A  118A  21C0  120A  118A  	fcall	___fttol
  1825  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1826  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1827  025D  082D               	movf	?___fttol+3,w
  1828  025E  00CA               	movwf	UART_TxFloatNumber@v_tempNumber_u32+3
  1829  025F  082C               	movf	?___fttol+2,w
  1830  0260  00C9               	movwf	UART_TxFloatNumber@v_tempNumber_u32+2
  1831  0261  082B               	movf	?___fttol+1,w
  1832  0262  00C8               	movwf	UART_TxFloatNumber@v_tempNumber_u32+1
  1833  0263  082A               	movf	?___fttol,w
  1834  0264  00C7               	movwf	UART_TxFloatNumber@v_tempNumber_u32
  1835                           
  1836                           ;uart.c: 358: UART_TxNumber(10u,v_tempNumber_u32,0xffu);
  1837  0265  084A               	movf	UART_TxFloatNumber@v_tempNumber_u32+3,w
  1838  0266  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1839  0267  0849               	movf	UART_TxFloatNumber@v_tempNumber_u32+2,w
  1840  0268  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1841  0269  0848               	movf	UART_TxFloatNumber@v_tempNumber_u32+1,w
  1842  026A  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1843  026B  0847               	movf	UART_TxFloatNumber@v_tempNumber_u32,w
  1844  026C  00A4               	movwf	UART_TxNumber@v_number_u32
  1845  026D  30FF               	movlw	255
  1846  026E  00C6               	movwf	??_UART_TxFloatNumber
  1847  026F  0846               	movf	??_UART_TxFloatNumber,w
  1848  0270  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1849  0271  300A               	movlw	10
  1850  0272  120A  118A  23BE  120A  118A  	fcall	_UART_TxNumber
  1851                           
  1852                           ;uart.c: 360: UART_TxChar('.');
  1853  0277  302E               	movlw	46
  1854  0278  120A  158A  26D2  120A  118A  	fcall	_UART_TxChar
  1855                           
  1856                           ;uart.c: 362: v_floatNumber_f32 = v_floatNumber_f32 - v_tempNumber_u32;
  1857  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1858  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1859  027F  0843               	movf	UART_TxFloatNumber@v_floatNumber_f32,w
  1860  0280  00A3               	movwf	___ftadd@f1
  1861  0281  0844               	movf	UART_TxFloatNumber@v_floatNumber_f32+1,w
  1862  0282  00A4               	movwf	___ftadd@f1+1
  1863  0283  0845               	movf	UART_TxFloatNumber@v_floatNumber_f32+2,w
  1864  0284  00A5               	movwf	___ftadd@f1+2
  1865  0285  084A               	movf	UART_TxFloatNumber@v_tempNumber_u32+3,w
  1866  0286  00FB               	movwf	___lltoft@c+3
  1867  0287  0849               	movf	UART_TxFloatNumber@v_tempNumber_u32+2,w
  1868  0288  00FA               	movwf	___lltoft@c+2
  1869  0289  0848               	movf	UART_TxFloatNumber@v_tempNumber_u32+1,w
  1870  028A  00F9               	movwf	___lltoft@c+1
  1871  028B  0847               	movf	UART_TxFloatNumber@v_tempNumber_u32,w
  1872  028C  00F8               	movwf	___lltoft@c
  1873  028D  120A  158A  27A6  120A  118A  	fcall	___lltoft
  1874  0292  0878               	movf	?___lltoft,w
  1875  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1876  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0295  00A0               	movwf	___ftneg@f1
  1878  0296  0879               	movf	?___lltoft+1,w
  1879  0297  00A1               	movwf	___ftneg@f1+1
  1880  0298  087A               	movf	?___lltoft+2,w
  1881  0299  00A2               	movwf	___ftneg@f1+2
  1882  029A  120A  158A  26DB  120A  118A  	fcall	___ftneg
  1883  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1884  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1885  02A1  0820               	movf	?___ftneg,w
  1886  02A2  00A6               	movwf	___ftadd@f2
  1887  02A3  0821               	movf	?___ftneg+1,w
  1888  02A4  00A7               	movwf	___ftadd@f2+1
  1889  02A5  0822               	movf	?___ftneg+2,w
  1890  02A6  00A8               	movwf	___ftadd@f2+2
  1891  02A7  120A  118A  24B0  120A  118A  	fcall	___ftadd
  1892  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1893  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  1894  02AE  0823               	movf	?___ftadd,w
  1895  02AF  00C3               	movwf	UART_TxFloatNumber@v_floatNumber_f32
  1896  02B0  0824               	movf	?___ftadd+1,w
  1897  02B1  00C4               	movwf	UART_TxFloatNumber@v_floatNumber_f32+1
  1898  02B2  0825               	movf	?___ftadd+2,w
  1899  02B3  00C5               	movwf	UART_TxFloatNumber@v_floatNumber_f32+2
  1900                           
  1901                           ;uart.c: 363: v_tempNumber_u32 = v_floatNumber_f32 * 1000000;
  1902  02B4  0843               	movf	UART_TxFloatNumber@v_floatNumber_f32,w
  1903  02B5  00FB               	movwf	___ftmul@f2
  1904  02B6  0844               	movf	UART_TxFloatNumber@v_floatNumber_f32+1,w
  1905  02B7  00FC               	movwf	___ftmul@f2+1
  1906  02B8  0845               	movf	UART_TxFloatNumber@v_floatNumber_f32+2,w
  1907  02B9  00FD               	movwf	___ftmul@f2+2
  1908  02BA  3024               	movlw	36
  1909  02BB  00F8               	movwf	___ftmul@f1
  1910  02BC  3074               	movlw	116
  1911  02BD  00F9               	movwf	___ftmul@f1+1
  1912  02BE  3049               	movlw	73
  1913  02BF  00FA               	movwf	___ftmul@f1+2
  1914  02C0  120A  118A  22ED  120A  118A  	fcall	___ftmul
  1915  02C5  0878               	movf	?___ftmul,w
  1916  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  1917  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  1918  02C8  00AA               	movwf	___fttol@f1
  1919  02C9  0879               	movf	?___ftmul+1,w
  1920  02CA  00AB               	movwf	___fttol@f1+1
  1921  02CB  087A               	movf	?___ftmul+2,w
  1922  02CC  00AC               	movwf	___fttol@f1+2
  1923  02CD  120A  118A  21C0  120A  118A  	fcall	___fttol
  1924  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1925  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1926  02D4  082D               	movf	?___fttol+3,w
  1927  02D5  00CA               	movwf	UART_TxFloatNumber@v_tempNumber_u32+3
  1928  02D6  082C               	movf	?___fttol+2,w
  1929  02D7  00C9               	movwf	UART_TxFloatNumber@v_tempNumber_u32+2
  1930  02D8  082B               	movf	?___fttol+1,w
  1931  02D9  00C8               	movwf	UART_TxFloatNumber@v_tempNumber_u32+1
  1932  02DA  082A               	movf	?___fttol,w
  1933  02DB  00C7               	movwf	UART_TxFloatNumber@v_tempNumber_u32
  1934                           
  1935                           ;uart.c: 364: UART_TxNumber(10u,v_tempNumber_u32,0xffu);
  1936  02DC  084A               	movf	UART_TxFloatNumber@v_tempNumber_u32+3,w
  1937  02DD  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1938  02DE  0849               	movf	UART_TxFloatNumber@v_tempNumber_u32+2,w
  1939  02DF  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1940  02E0  0848               	movf	UART_TxFloatNumber@v_tempNumber_u32+1,w
  1941  02E1  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1942  02E2  0847               	movf	UART_TxFloatNumber@v_tempNumber_u32,w
  1943  02E3  00A4               	movwf	UART_TxNumber@v_number_u32
  1944  02E4  30FF               	movlw	255
  1945  02E5  00C6               	movwf	??_UART_TxFloatNumber
  1946  02E6  0846               	movf	??_UART_TxFloatNumber,w
  1947  02E7  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1948  02E8  300A               	movlw	10
  1949  02E9  120A  118A  23BE   	fcall	_UART_TxNumber
  1950  02EC  0008               	return
  1951  02ED                     __end_of_UART_TxFloatNumber:	
  1952                           
  1953                           	psect	text4
  1954  0FA6                     __ptext4:	
  1955 ;; *************** function ___lltoft *****************
  1956 ;; Defined at:
  1957 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lltoft.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  c               4    8[COMMON] unsigned long 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  exp             1   13[COMMON] unsigned char 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  3    8[COMMON] float 
  1964 ;; Registers used:
  1965 ;;		wreg, status,2, status,0, pclath, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1971 ;;      Params:         4       0       0       0       0
  1972 ;;      Locals:         1       0       0       0       0
  1973 ;;      Temps:          1       0       0       0       0
  1974 ;;      Totals:         6       0       0       0       0
  1975 ;;Total ram usage:        6 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; Hardware stack levels required when called:    1
  1978 ;; This function calls:
  1979 ;;		___ftpack
  1980 ;; This function is called by:
  1981 ;;		_UART_TxFloatNumber
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           
  1986                           ;psect for function ___lltoft
  1987  0FA6                     ___lltoft:	
  1988                           
  1989                           ;incstack = 0
  1990                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  1991  0FA6  308E               	movlw	142
  1992  0FA7  00FC               	movwf	??___lltoft
  1993  0FA8  087C               	movf	??___lltoft,w
  1994  0FA9  00FD               	movwf	___lltoft@exp
  1995  0FAA                     l1513:	
  1996  0FAA  30FF               	movlw	255
  1997  0FAB  057B               	andwf	___lltoft@c+3,w
  1998  0FAC  1903               	btfsc	3,2
  1999  0FAD  2FBC               	goto	l1515
  2000  0FAE  3001               	movlw	1
  2001  0FAF                     u1995:	
  2002  0FAF  1003               	clrc
  2003  0FB0  0CFB               	rrf	___lltoft@c+3,f
  2004  0FB1  0CFA               	rrf	___lltoft@c+2,f
  2005  0FB2  0CF9               	rrf	___lltoft@c+1,f
  2006  0FB3  0CF8               	rrf	___lltoft@c,f
  2007  0FB4  3EFF               	addlw	-1
  2008  0FB5  1D03               	skipz
  2009  0FB6  2FAF               	goto	u1995
  2010  0FB7  3001               	movlw	1
  2011  0FB8  00FC               	movwf	??___lltoft
  2012  0FB9  087C               	movf	??___lltoft,w
  2013  0FBA  07FD               	addwf	___lltoft@exp,f
  2014  0FBB  2FAA               	goto	l1513
  2015  0FBC                     l1515:	
  2016  0FBC  0878               	movf	___lltoft@c,w
  2017  0FBD  00F0               	movwf	___ftpack@arg
  2018  0FBE  0879               	movf	___lltoft@c+1,w
  2019  0FBF  00F1               	movwf	___ftpack@arg+1
  2020  0FC0  087A               	movf	___lltoft@c+2,w
  2021  0FC1  00F2               	movwf	___ftpack@arg+2
  2022  0FC2  087D               	movf	___lltoft@exp,w
  2023  0FC3  00FC               	movwf	??___lltoft
  2024  0FC4  087C               	movf	??___lltoft,w
  2025  0FC5  00F3               	movwf	___ftpack@exp
  2026  0FC6  01F4               	clrf	___ftpack@sign
  2027  0FC7  120A  118A  20DA   	fcall	___ftpack
  2028  0FCA  0870               	movf	?___ftpack,w
  2029  0FCB  00F8               	movwf	?___lltoft
  2030  0FCC  0871               	movf	?___ftpack+1,w
  2031  0FCD  00F9               	movwf	?___lltoft+1
  2032  0FCE  0872               	movf	?___ftpack+2,w
  2033  0FCF  00FA               	movwf	?___lltoft+2
  2034  0FD0  0008               	return
  2035  0FD1                     __end_of___lltoft:	
  2036                           
  2037                           	psect	text5
  2038  01C0                     __ptext5:	
  2039 ;; *************** function ___fttol *****************
  2040 ;; Defined at:
  2041 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\fttol.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  f1              3   10[BANK0 ] float 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  lval            4   19[BANK0 ] unsigned long 
  2046 ;;  exp1            1   23[BANK0 ] unsigned char 
  2047 ;;  sign1           1   18[BANK0 ] unsigned char 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  4   10[BANK0 ] long 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2, status,0
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2057 ;;      Params:         0       4       0       0       0
  2058 ;;      Locals:         0       6       0       0       0
  2059 ;;      Temps:          0       4       0       0       0
  2060 ;;      Totals:         0      14       0       0       0
  2061 ;;Total ram usage:       14 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_UART_TxFloatNumber
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           
  2071                           ;psect for function ___fttol
  2072  01C0                     ___fttol:	
  2073                           
  2074                           ;incstack = 0
  2075                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2076  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  2077  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  2078  01C2  082A               	movf	___fttol@f1,w
  2079  01C3  00AE               	movwf	??___fttol
  2080  01C4  082B               	movf	___fttol@f1+1,w
  2081  01C5  00AF               	movwf	??___fttol+1
  2082  01C6  082C               	movf	___fttol@f1+2,w
  2083  01C7  00B0               	movwf	??___fttol+2
  2084  01C8  1003               	clrc
  2085  01C9  0D2F               	rlf	??___fttol+1,w
  2086  01CA  0D30               	rlf	??___fttol+2,w
  2087  01CB  00B1               	movwf	??___fttol+3
  2088  01CC  0831               	movf	??___fttol+3,w
  2089  01CD  00B7               	movwf	___fttol@exp1
  2090  01CE  0837               	movf	___fttol@exp1,w
  2091  01CF  1D03               	btfss	3,2
  2092  01D0  29DA               	goto	l1473
  2093  01D1  3000               	movlw	0
  2094  01D2  00AD               	movwf	?___fttol+3
  2095  01D3  3000               	movlw	0
  2096  01D4  00AC               	movwf	?___fttol+2
  2097  01D5  3000               	movlw	0
  2098  01D6  00AB               	movwf	?___fttol+1
  2099  01D7  3000               	movlw	0
  2100  01D8  00AA               	movwf	?___fttol
  2101  01D9  0008               	return
  2102  01DA                     l1473:	
  2103  01DA  082A               	movf	___fttol@f1,w
  2104  01DB  00AE               	movwf	??___fttol
  2105  01DC  082B               	movf	___fttol@f1+1,w
  2106  01DD  00AF               	movwf	??___fttol+1
  2107  01DE  082C               	movf	___fttol@f1+2,w
  2108  01DF  00B0               	movwf	??___fttol+2
  2109  01E0  3017               	movlw	23
  2110  01E1                     u1905:	
  2111  01E1  1003               	clrc
  2112  01E2  0CB0               	rrf	??___fttol+2,f
  2113  01E3  0CAF               	rrf	??___fttol+1,f
  2114  01E4  0CAE               	rrf	??___fttol,f
  2115  01E5  3EFF               	addlw	-1
  2116  01E6  1D03               	skipz
  2117  01E7  29E1               	goto	u1905
  2118  01E8  082E               	movf	??___fttol,w
  2119  01E9  00B1               	movwf	??___fttol+3
  2120  01EA  0831               	movf	??___fttol+3,w
  2121  01EB  00B2               	movwf	___fttol@sign1
  2122  01EC  17AB               	bsf	___fttol@f1+1,7
  2123  01ED  30FF               	movlw	255
  2124  01EE  05AA               	andwf	___fttol@f1,f
  2125  01EF  30FF               	movlw	255
  2126  01F0  05AB               	andwf	___fttol@f1+1,f
  2127  01F1  3000               	movlw	0
  2128  01F2  05AC               	andwf	___fttol@f1+2,f
  2129  01F3  082A               	movf	___fttol@f1,w
  2130  01F4  00B3               	movwf	___fttol@lval
  2131  01F5  082B               	movf	___fttol@f1+1,w
  2132  01F6  00B4               	movwf	___fttol@lval+1
  2133  01F7  082C               	movf	___fttol@f1+2,w
  2134  01F8  00B5               	movwf	___fttol@lval+2
  2135  01F9  01B6               	clrf	___fttol@lval+3
  2136  01FA  308E               	movlw	142
  2137  01FB  02B7               	subwf	___fttol@exp1,f
  2138  01FC  1FB7               	btfss	___fttol@exp1,7
  2139  01FD  2A1C               	goto	l1493
  2140  01FE  0837               	movf	___fttol@exp1,w
  2141  01FF  3A80               	xorlw	128
  2142  0200  3E8F               	addlw	143
  2143  0201  1803               	skipnc
  2144  0202  2A0C               	goto	l1491
  2145  0203  3000               	movlw	0
  2146  0204  00AD               	movwf	?___fttol+3
  2147  0205  3000               	movlw	0
  2148  0206  00AC               	movwf	?___fttol+2
  2149  0207  3000               	movlw	0
  2150  0208  00AB               	movwf	?___fttol+1
  2151  0209  3000               	movlw	0
  2152  020A  00AA               	movwf	?___fttol
  2153  020B  0008               	return
  2154  020C                     l1491:	
  2155  020C  3001               	movlw	1
  2156  020D                     u1935:	
  2157  020D  1003               	clrc
  2158  020E  0CB6               	rrf	___fttol@lval+3,f
  2159  020F  0CB5               	rrf	___fttol@lval+2,f
  2160  0210  0CB4               	rrf	___fttol@lval+1,f
  2161  0211  0CB3               	rrf	___fttol@lval,f
  2162  0212  3EFF               	addlw	-1
  2163  0213  1D03               	skipz
  2164  0214  2A0D               	goto	u1935
  2165  0215  3001               	movlw	1
  2166  0216  00AE               	movwf	??___fttol
  2167  0217  082E               	movf	??___fttol,w
  2168  0218  07B7               	addwf	___fttol@exp1,f
  2169  0219  1903               	btfsc	3,2
  2170  021A  2A37               	goto	l1501
  2171  021B  2A0C               	goto	l1491
  2172  021C                     l1493:	
  2173  021C  3018               	movlw	24
  2174  021D  0237               	subwf	___fttol@exp1,w
  2175  021E  1C03               	skipc
  2176  021F  2A34               	goto	l525
  2177  0220  3000               	movlw	0
  2178  0221  00AD               	movwf	?___fttol+3
  2179  0222  3000               	movlw	0
  2180  0223  00AC               	movwf	?___fttol+2
  2181  0224  3000               	movlw	0
  2182  0225  00AB               	movwf	?___fttol+1
  2183  0226  3000               	movlw	0
  2184  0227  00AA               	movwf	?___fttol
  2185  0228  0008               	return
  2186  0229                     l1499:	
  2187  0229  3001               	movlw	1
  2188  022A  00AE               	movwf	??___fttol
  2189  022B                     u1965:	
  2190  022B  1003               	clrc
  2191  022C  0DB3               	rlf	___fttol@lval,f
  2192  022D  0DB4               	rlf	___fttol@lval+1,f
  2193  022E  0DB5               	rlf	___fttol@lval+2,f
  2194  022F  0DB6               	rlf	___fttol@lval+3,f
  2195  0230  0BAE               	decfsz	??___fttol,f
  2196  0231  2A2B               	goto	u1965
  2197  0232  3001               	movlw	1
  2198  0233  02B7               	subwf	___fttol@exp1,f
  2199  0234                     l525:	
  2200  0234  0837               	movf	___fttol@exp1,w
  2201  0235  1D03               	btfss	3,2
  2202  0236  2A29               	goto	l1499
  2203  0237                     l1501:	
  2204  0237  0832               	movf	___fttol@sign1,w
  2205  0238  1903               	btfsc	3,2
  2206  0239  2A45               	goto	l1505
  2207  023A  09B3               	comf	___fttol@lval,f
  2208  023B  09B4               	comf	___fttol@lval+1,f
  2209  023C  09B5               	comf	___fttol@lval+2,f
  2210  023D  09B6               	comf	___fttol@lval+3,f
  2211  023E  0AB3               	incf	___fttol@lval,f
  2212  023F  1903               	skipnz
  2213  0240  0AB4               	incf	___fttol@lval+1,f
  2214  0241  1903               	skipnz
  2215  0242  0AB5               	incf	___fttol@lval+2,f
  2216  0243  1903               	skipnz
  2217  0244  0AB6               	incf	___fttol@lval+3,f
  2218  0245                     l1505:	
  2219  0245  0836               	movf	___fttol@lval+3,w
  2220  0246  00AD               	movwf	?___fttol+3
  2221  0247  0835               	movf	___fttol@lval+2,w
  2222  0248  00AC               	movwf	?___fttol+2
  2223  0249  0834               	movf	___fttol@lval+1,w
  2224  024A  00AB               	movwf	?___fttol+1
  2225  024B  0833               	movf	___fttol@lval,w
  2226  024C  00AA               	movwf	?___fttol
  2227  024D  0008               	return
  2228  024E                     __end_of___fttol:	
  2229                           
  2230                           	psect	text6
  2231  0EDB                     __ptext6:	
  2232 ;; *************** function ___ftneg *****************
  2233 ;; Defined at:
  2234 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftneg.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  f1              3    0[BANK0 ] float 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;		None
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  3    0[BANK0 ] float 
  2241 ;; Registers used:
  2242 ;;		wreg
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2248 ;;      Params:         0       3       0       0       0
  2249 ;;      Locals:         0       0       0       0       0
  2250 ;;      Temps:          0       0       0       0       0
  2251 ;;      Totals:         0       3       0       0       0
  2252 ;;Total ram usage:        3 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_UART_TxFloatNumber
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           
  2262                           ;psect for function ___ftneg
  2263  0EDB                     ___ftneg:	
  2264                           
  2265                           ;incstack = 0
  2266                           ; Regs used in ___ftneg: [wreg]
  2267  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  2268  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  2269  0EDD  0822               	movf	___ftneg@f1+2,w
  2270  0EDE  0421               	iorwf	___ftneg@f1+1,w
  2271  0EDF  0420               	iorwf	___ftneg@f1,w
  2272  0EE0  1903               	skipnz
  2273  0EE1  0008               	return
  2274  0EE2  3080               	movlw	128
  2275  0EE3  06A2               	xorwf	___ftneg@f1+2,f
  2276  0EE4  0008               	return
  2277  0EE5                     __end_of___ftneg:	
  2278                           
  2279                           	psect	text7
  2280  02ED                     __ptext7:	
  2281 ;; *************** function ___ftmul *****************
  2282 ;; Defined at:
  2283 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftmul.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  f1              3    8[COMMON] float 
  2286 ;;  f2              3   11[COMMON] float 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  2289 ;;  sign            1    9[BANK0 ] unsigned char 
  2290 ;;  cntr            1    8[BANK0 ] unsigned char 
  2291 ;;  exp             1    4[BANK0 ] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  3    8[COMMON] float 
  2294 ;; Registers used:
  2295 ;;		wreg, status,2, status,0, pclath, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2301 ;;      Params:         6       0       0       0       0
  2302 ;;      Locals:         0       6       0       0       0
  2303 ;;      Temps:          0       4       0       0       0
  2304 ;;      Totals:         6      10       0       0       0
  2305 ;;Total ram usage:       16 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    1
  2308 ;; This function calls:
  2309 ;;		___ftpack
  2310 ;; This function is called by:
  2311 ;;		_UART_TxFloatNumber
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           
  2316                           ;psect for function ___ftmul
  2317  02ED                     ___ftmul:	
  2318                           
  2319                           ;incstack = 0
  2320                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2321  02ED  0878               	movf	___ftmul@f1,w
  2322  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2323  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2324  02F0  00A0               	movwf	??___ftmul
  2325  02F1  0879               	movf	___ftmul@f1+1,w
  2326  02F2  00A1               	movwf	??___ftmul+1
  2327  02F3  087A               	movf	___ftmul@f1+2,w
  2328  02F4  00A2               	movwf	??___ftmul+2
  2329  02F5  1003               	clrc
  2330  02F6  0D21               	rlf	??___ftmul+1,w
  2331  02F7  0D22               	rlf	??___ftmul+2,w
  2332  02F8  00A3               	movwf	??___ftmul+3
  2333  02F9  0823               	movf	??___ftmul+3,w
  2334  02FA  00A4               	movwf	___ftmul@exp
  2335  02FB  0824               	movf	___ftmul@exp,w
  2336  02FC  1D03               	btfss	3,2
  2337  02FD  2B05               	goto	l1415
  2338  02FE  3000               	movlw	0
  2339  02FF  00F8               	movwf	?___ftmul
  2340  0300  3000               	movlw	0
  2341  0301  00F9               	movwf	?___ftmul+1
  2342  0302  3000               	movlw	0
  2343  0303  00FA               	movwf	?___ftmul+2
  2344  0304  0008               	return
  2345  0305                     l1415:	
  2346  0305  087B               	movf	___ftmul@f2,w
  2347  0306  00A0               	movwf	??___ftmul
  2348  0307  087C               	movf	___ftmul@f2+1,w
  2349  0308  00A1               	movwf	??___ftmul+1
  2350  0309  087D               	movf	___ftmul@f2+2,w
  2351  030A  00A2               	movwf	??___ftmul+2
  2352  030B  1003               	clrc
  2353  030C  0D21               	rlf	??___ftmul+1,w
  2354  030D  0D22               	rlf	??___ftmul+2,w
  2355  030E  00A3               	movwf	??___ftmul+3
  2356  030F  0823               	movf	??___ftmul+3,w
  2357  0310  00A9               	movwf	___ftmul@sign
  2358  0311  0829               	movf	___ftmul@sign,w
  2359  0312  1D03               	btfss	3,2
  2360  0313  2B1B               	goto	l1421
  2361  0314  3000               	movlw	0
  2362  0315  00F8               	movwf	?___ftmul
  2363  0316  3000               	movlw	0
  2364  0317  00F9               	movwf	?___ftmul+1
  2365  0318  3000               	movlw	0
  2366  0319  00FA               	movwf	?___ftmul+2
  2367  031A  0008               	return
  2368  031B                     l1421:	
  2369  031B  0829               	movf	___ftmul@sign,w
  2370  031C  3E7B               	addlw	123
  2371  031D  00A0               	movwf	??___ftmul
  2372  031E  0820               	movf	??___ftmul,w
  2373  031F  07A4               	addwf	___ftmul@exp,f
  2374  0320  0878               	movf	___ftmul@f1,w
  2375  0321  00A0               	movwf	??___ftmul
  2376  0322  0879               	movf	___ftmul@f1+1,w
  2377  0323  00A1               	movwf	??___ftmul+1
  2378  0324  087A               	movf	___ftmul@f1+2,w
  2379  0325  00A2               	movwf	??___ftmul+2
  2380  0326  3010               	movlw	16
  2381  0327                     u1765:	
  2382  0327  1003               	clrc
  2383  0328  0CA2               	rrf	??___ftmul+2,f
  2384  0329  0CA1               	rrf	??___ftmul+1,f
  2385  032A  0CA0               	rrf	??___ftmul,f
  2386  032B  3EFF               	addlw	-1
  2387  032C  1D03               	skipz
  2388  032D  2B27               	goto	u1765
  2389  032E  0820               	movf	??___ftmul,w
  2390  032F  00A3               	movwf	??___ftmul+3
  2391  0330  0823               	movf	??___ftmul+3,w
  2392  0331  00A9               	movwf	___ftmul@sign
  2393  0332  087B               	movf	___ftmul@f2,w
  2394  0333  00A0               	movwf	??___ftmul
  2395  0334  087C               	movf	___ftmul@f2+1,w
  2396  0335  00A1               	movwf	??___ftmul+1
  2397  0336  087D               	movf	___ftmul@f2+2,w
  2398  0337  00A2               	movwf	??___ftmul+2
  2399  0338  3010               	movlw	16
  2400  0339                     u1775:	
  2401  0339  1003               	clrc
  2402  033A  0CA2               	rrf	??___ftmul+2,f
  2403  033B  0CA1               	rrf	??___ftmul+1,f
  2404  033C  0CA0               	rrf	??___ftmul,f
  2405  033D  3EFF               	addlw	-1
  2406  033E  1D03               	skipz
  2407  033F  2B39               	goto	u1775
  2408  0340  0820               	movf	??___ftmul,w
  2409  0341  00A3               	movwf	??___ftmul+3
  2410  0342  0823               	movf	??___ftmul+3,w
  2411  0343  06A9               	xorwf	___ftmul@sign,f
  2412  0344  3080               	movlw	128
  2413  0345  00A0               	movwf	??___ftmul
  2414  0346  0820               	movf	??___ftmul,w
  2415  0347  05A9               	andwf	___ftmul@sign,f
  2416  0348  17F9               	bsf	___ftmul@f1+1,7
  2417  0349  17FC               	bsf	___ftmul@f2+1,7
  2418  034A  30FF               	movlw	255
  2419  034B  05FB               	andwf	___ftmul@f2,f
  2420  034C  30FF               	movlw	255
  2421  034D  05FC               	andwf	___ftmul@f2+1,f
  2422  034E  3000               	movlw	0
  2423  034F  05FD               	andwf	___ftmul@f2+2,f
  2424  0350  3000               	movlw	0
  2425  0351  00A5               	movwf	___ftmul@f3_as_product
  2426  0352  3000               	movlw	0
  2427  0353  00A6               	movwf	___ftmul@f3_as_product+1
  2428  0354  3000               	movlw	0
  2429  0355  00A7               	movwf	___ftmul@f3_as_product+2
  2430  0356  3007               	movlw	7
  2431  0357  00A0               	movwf	??___ftmul
  2432  0358  0820               	movf	??___ftmul,w
  2433  0359  00A8               	movwf	___ftmul@cntr
  2434  035A                     l1433:	
  2435  035A  1C78               	btfss	___ftmul@f1,0
  2436  035B  2B6A               	goto	l1437
  2437  035C  087B               	movf	___ftmul@f2,w
  2438  035D  07A5               	addwf	___ftmul@f3_as_product,f
  2439  035E  087C               	movf	___ftmul@f2+1,w
  2440  035F  1103               	clrz
  2441  0360  1803               	skipnc
  2442  0361  0A7C               	incf	___ftmul@f2+1,w
  2443  0362  1D03               	btfss	3,2
  2444  0363  07A6               	addwf	___ftmul@f3_as_product+1,f
  2445  0364  087D               	movf	___ftmul@f2+2,w
  2446  0365  1103               	clrz
  2447  0366  1803               	skipnc
  2448  0367  0A7D               	incf	___ftmul@f2+2,w
  2449  0368  1D03               	btfss	3,2
  2450  0369  07A7               	addwf	___ftmul@f3_as_product+2,f
  2451  036A                     l1437:	
  2452  036A  3001               	movlw	1
  2453  036B                     u1805:	
  2454  036B  1003               	clrc
  2455  036C  0CFA               	rrf	___ftmul@f1+2,f
  2456  036D  0CF9               	rrf	___ftmul@f1+1,f
  2457  036E  0CF8               	rrf	___ftmul@f1,f
  2458  036F  3EFF               	addlw	-1
  2459  0370  1D03               	skipz
  2460  0371  2B6B               	goto	u1805
  2461  0372  3001               	movlw	1
  2462  0373                     u1815:	
  2463  0373  1003               	clrc
  2464  0374  0DFB               	rlf	___ftmul@f2,f
  2465  0375  0DFC               	rlf	___ftmul@f2+1,f
  2466  0376  0DFD               	rlf	___ftmul@f2+2,f
  2467  0377  3EFF               	addlw	-1
  2468  0378  1D03               	skipz
  2469  0379  2B73               	goto	u1815
  2470  037A  3001               	movlw	1
  2471  037B  02A8               	subwf	___ftmul@cntr,f
  2472  037C  1D03               	btfss	3,2
  2473  037D  2B5A               	goto	l1433
  2474  037E  3009               	movlw	9
  2475  037F  00A0               	movwf	??___ftmul
  2476  0380  0820               	movf	??___ftmul,w
  2477  0381  00A8               	movwf	___ftmul@cntr
  2478  0382                     l1445:	
  2479  0382  1C78               	btfss	___ftmul@f1,0
  2480  0383  2B92               	goto	l1449
  2481  0384  087B               	movf	___ftmul@f2,w
  2482  0385  07A5               	addwf	___ftmul@f3_as_product,f
  2483  0386  087C               	movf	___ftmul@f2+1,w
  2484  0387  1103               	clrz
  2485  0388  1803               	skipnc
  2486  0389  0A7C               	incf	___ftmul@f2+1,w
  2487  038A  1D03               	btfss	3,2
  2488  038B  07A6               	addwf	___ftmul@f3_as_product+1,f
  2489  038C  087D               	movf	___ftmul@f2+2,w
  2490  038D  1103               	clrz
  2491  038E  1803               	skipnc
  2492  038F  0A7D               	incf	___ftmul@f2+2,w
  2493  0390  1D03               	btfss	3,2
  2494  0391  07A7               	addwf	___ftmul@f3_as_product+2,f
  2495  0392                     l1449:	
  2496  0392  3001               	movlw	1
  2497  0393                     u1855:	
  2498  0393  1003               	clrc
  2499  0394  0CFA               	rrf	___ftmul@f1+2,f
  2500  0395  0CF9               	rrf	___ftmul@f1+1,f
  2501  0396  0CF8               	rrf	___ftmul@f1,f
  2502  0397  3EFF               	addlw	-1
  2503  0398  1D03               	skipz
  2504  0399  2B93               	goto	u1855
  2505  039A  3001               	movlw	1
  2506  039B                     u1865:	
  2507  039B  1003               	clrc
  2508  039C  0CA7               	rrf	___ftmul@f3_as_product+2,f
  2509  039D  0CA6               	rrf	___ftmul@f3_as_product+1,f
  2510  039E  0CA5               	rrf	___ftmul@f3_as_product,f
  2511  039F  3EFF               	addlw	-1
  2512  03A0  1D03               	skipz
  2513  03A1  2B9B               	goto	u1865
  2514  03A2  3001               	movlw	1
  2515  03A3  02A8               	subwf	___ftmul@cntr,f
  2516  03A4  1D03               	btfss	3,2
  2517  03A5  2B82               	goto	l1445
  2518  03A6  0825               	movf	___ftmul@f3_as_product,w
  2519  03A7  00F0               	movwf	___ftpack@arg
  2520  03A8  0826               	movf	___ftmul@f3_as_product+1,w
  2521  03A9  00F1               	movwf	___ftpack@arg+1
  2522  03AA  0827               	movf	___ftmul@f3_as_product+2,w
  2523  03AB  00F2               	movwf	___ftpack@arg+2
  2524  03AC  0824               	movf	___ftmul@exp,w
  2525  03AD  00A0               	movwf	??___ftmul
  2526  03AE  0820               	movf	??___ftmul,w
  2527  03AF  00F3               	movwf	___ftpack@exp
  2528  03B0  0829               	movf	___ftmul@sign,w
  2529  03B1  00A1               	movwf	??___ftmul+1
  2530  03B2  0821               	movf	??___ftmul+1,w
  2531  03B3  00F4               	movwf	___ftpack@sign
  2532  03B4  120A  118A  20DA   	fcall	___ftpack
  2533  03B7  0870               	movf	?___ftpack,w
  2534  03B8  00F8               	movwf	?___ftmul
  2535  03B9  0871               	movf	?___ftpack+1,w
  2536  03BA  00F9               	movwf	?___ftmul+1
  2537  03BB  0872               	movf	?___ftpack+2,w
  2538  03BC  00FA               	movwf	?___ftmul+2
  2539  03BD  0008               	return
  2540  03BE                     __end_of___ftmul:	
  2541                           
  2542                           	psect	text8
  2543  04B0                     __ptext8:	
  2544 ;; *************** function ___ftadd *****************
  2545 ;; Defined at:
  2546 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftadd.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  f1              3    3[BANK0 ] float 
  2549 ;;  f2              3    6[BANK0 ] float 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  exp1            1   15[BANK0 ] unsigned char 
  2552 ;;  exp2            1   14[BANK0 ] unsigned char 
  2553 ;;  sign            1   13[BANK0 ] unsigned char 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  3    3[BANK0 ] float 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0, pclath, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2563 ;;      Params:         0       6       0       0       0
  2564 ;;      Locals:         0       3       0       0       0
  2565 ;;      Temps:          0       4       0       0       0
  2566 ;;      Totals:         0      13       0       0       0
  2567 ;;Total ram usage:       13 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    1
  2570 ;; This function calls:
  2571 ;;		___ftpack
  2572 ;; This function is called by:
  2573 ;;		_UART_TxFloatNumber
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           
  2578                           ;psect for function ___ftadd
  2579  04B0                     ___ftadd:	
  2580                           
  2581                           ;incstack = 0
  2582                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2583  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2584  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2585  04B2  0823               	movf	___ftadd@f1,w
  2586  04B3  00A9               	movwf	??___ftadd
  2587  04B4  0824               	movf	___ftadd@f1+1,w
  2588  04B5  00AA               	movwf	??___ftadd+1
  2589  04B6  0825               	movf	___ftadd@f1+2,w
  2590  04B7  00AB               	movwf	??___ftadd+2
  2591  04B8  1003               	clrc
  2592  04B9  0D2A               	rlf	??___ftadd+1,w
  2593  04BA  0D2B               	rlf	??___ftadd+2,w
  2594  04BB  00AC               	movwf	??___ftadd+3
  2595  04BC  082C               	movf	??___ftadd+3,w
  2596  04BD  00AF               	movwf	___ftadd@exp1
  2597  04BE  0826               	movf	___ftadd@f2,w
  2598  04BF  00A9               	movwf	??___ftadd
  2599  04C0  0827               	movf	___ftadd@f2+1,w
  2600  04C1  00AA               	movwf	??___ftadd+1
  2601  04C2  0828               	movf	___ftadd@f2+2,w
  2602  04C3  00AB               	movwf	??___ftadd+2
  2603  04C4  1003               	clrc
  2604  04C5  0D2A               	rlf	??___ftadd+1,w
  2605  04C6  0D2B               	rlf	??___ftadd+2,w
  2606  04C7  00AC               	movwf	??___ftadd+3
  2607  04C8  082C               	movf	??___ftadd+3,w
  2608  04C9  00AE               	movwf	___ftadd@exp2
  2609  04CA  082F               	movf	___ftadd@exp1,w
  2610  04CB  1903               	btfsc	3,2
  2611  04CC  2CD9               	goto	l1345
  2612  04CD  082E               	movf	___ftadd@exp2,w
  2613  04CE  022F               	subwf	___ftadd@exp1,w
  2614  04CF  1803               	skipnc
  2615  04D0  2CE0               	goto	l1349
  2616  04D1  032F               	decf	___ftadd@exp1,w
  2617  04D2  3AFF               	xorlw	255
  2618  04D3  072E               	addwf	___ftadd@exp2,w
  2619  04D4  00A9               	movwf	??___ftadd
  2620  04D5  3019               	movlw	25
  2621  04D6  0229               	subwf	??___ftadd,w
  2622  04D7  1C03               	skipc
  2623  04D8  2CE0               	goto	l1349
  2624  04D9                     l1345:	
  2625  04D9  0826               	movf	___ftadd@f2,w
  2626  04DA  00A3               	movwf	?___ftadd
  2627  04DB  0827               	movf	___ftadd@f2+1,w
  2628  04DC  00A4               	movwf	?___ftadd+1
  2629  04DD  0828               	movf	___ftadd@f2+2,w
  2630  04DE  00A5               	movwf	?___ftadd+2
  2631  04DF  0008               	return
  2632  04E0                     l1349:	
  2633  04E0  082E               	movf	___ftadd@exp2,w
  2634  04E1  1903               	btfsc	3,2
  2635  04E2  0008               	return
  2636  04E3  082F               	movf	___ftadd@exp1,w
  2637  04E4  022E               	subwf	___ftadd@exp2,w
  2638  04E5  1803               	skipnc
  2639  04E6  2CEF               	goto	l1355
  2640  04E7  032E               	decf	___ftadd@exp2,w
  2641  04E8  3AFF               	xorlw	255
  2642  04E9  072F               	addwf	___ftadd@exp1,w
  2643  04EA  00A9               	movwf	??___ftadd
  2644  04EB  3019               	movlw	25
  2645  04EC  0229               	subwf	??___ftadd,w
  2646  04ED  1803               	btfsc	3,0
  2647  04EE  0008               	return
  2648  04EF                     l1355:	
  2649  04EF  3006               	movlw	6
  2650  04F0  00A9               	movwf	??___ftadd
  2651  04F1  0829               	movf	??___ftadd,w
  2652  04F2  00AD               	movwf	___ftadd@sign
  2653  04F3  1BA5               	btfsc	___ftadd@f1+2,7
  2654  04F4  17AD               	bsf	___ftadd@sign,7
  2655  04F5  1BA8               	btfsc	___ftadd@f2+2,7
  2656  04F6  172D               	bsf	___ftadd@sign,6
  2657  04F7  17A4               	bsf	___ftadd@f1+1,7
  2658  04F8  30FF               	movlw	255
  2659  04F9  05A3               	andwf	___ftadd@f1,f
  2660  04FA  30FF               	movlw	255
  2661  04FB  05A4               	andwf	___ftadd@f1+1,f
  2662  04FC  3000               	movlw	0
  2663  04FD  05A5               	andwf	___ftadd@f1+2,f
  2664  04FE  17A7               	bsf	___ftadd@f2+1,7
  2665  04FF  30FF               	movlw	255
  2666  0500  05A6               	andwf	___ftadd@f2,f
  2667  0501  30FF               	movlw	255
  2668  0502  05A7               	andwf	___ftadd@f2+1,f
  2669  0503  3000               	movlw	0
  2670  0504  05A8               	andwf	___ftadd@f2+2,f
  2671  0505  082E               	movf	___ftadd@exp2,w
  2672  0506  022F               	subwf	___ftadd@exp1,w
  2673  0507  1803               	skipnc
  2674  0508  2D2F               	goto	l1377
  2675  0509                     l1367:	
  2676  0509  3001               	movlw	1
  2677  050A                     u1595:	
  2678  050A  1003               	clrc
  2679  050B  0DA6               	rlf	___ftadd@f2,f
  2680  050C  0DA7               	rlf	___ftadd@f2+1,f
  2681  050D  0DA8               	rlf	___ftadd@f2+2,f
  2682  050E  3EFF               	addlw	-1
  2683  050F  1D03               	skipz
  2684  0510  2D0A               	goto	u1595
  2685  0511  3001               	movlw	1
  2686  0512  02AE               	subwf	___ftadd@exp2,f
  2687  0513  082E               	movf	___ftadd@exp2,w
  2688  0514  062F               	xorwf	___ftadd@exp1,w
  2689  0515  1903               	skipnz
  2690  0516  2D2A               	goto	l1375
  2691  0517  3001               	movlw	1
  2692  0518  02AD               	subwf	___ftadd@sign,f
  2693  0519  082D               	movf	___ftadd@sign,w
  2694  051A  3907               	andlw	7
  2695  051B  1903               	btfsc	3,2
  2696  051C  2D2A               	goto	l1375
  2697  051D  2D09               	goto	l1367
  2698  051E                     l1373:	
  2699  051E  3001               	movlw	1
  2700  051F                     u1625:	
  2701  051F  1003               	clrc
  2702  0520  0CA5               	rrf	___ftadd@f1+2,f
  2703  0521  0CA4               	rrf	___ftadd@f1+1,f
  2704  0522  0CA3               	rrf	___ftadd@f1,f
  2705  0523  3EFF               	addlw	-1
  2706  0524  1D03               	skipz
  2707  0525  2D1F               	goto	u1625
  2708  0526  3001               	movlw	1
  2709  0527  00A9               	movwf	??___ftadd
  2710  0528  0829               	movf	??___ftadd,w
  2711  0529  07AF               	addwf	___ftadd@exp1,f
  2712  052A                     l1375:	
  2713  052A  082F               	movf	___ftadd@exp1,w
  2714  052B  062E               	xorwf	___ftadd@exp2,w
  2715  052C  1903               	btfsc	3,2
  2716  052D  2D58               	goto	l465
  2717  052E  2D1E               	goto	l1373
  2718  052F                     l1377:	
  2719  052F  082F               	movf	___ftadd@exp1,w
  2720  0530  022E               	subwf	___ftadd@exp2,w
  2721  0531  1803               	skipnc
  2722  0532  2D58               	goto	l465
  2723  0533                     l1379:	
  2724  0533  3001               	movlw	1
  2725  0534                     u1655:	
  2726  0534  1003               	clrc
  2727  0535  0DA3               	rlf	___ftadd@f1,f
  2728  0536  0DA4               	rlf	___ftadd@f1+1,f
  2729  0537  0DA5               	rlf	___ftadd@f1+2,f
  2730  0538  3EFF               	addlw	-1
  2731  0539  1D03               	skipz
  2732  053A  2D34               	goto	u1655
  2733  053B  3001               	movlw	1
  2734  053C  02AF               	subwf	___ftadd@exp1,f
  2735  053D  082E               	movf	___ftadd@exp2,w
  2736  053E  062F               	xorwf	___ftadd@exp1,w
  2737  053F  1903               	skipnz
  2738  0540  2D54               	goto	l1387
  2739  0541  3001               	movlw	1
  2740  0542  02AD               	subwf	___ftadd@sign,f
  2741  0543  082D               	movf	___ftadd@sign,w
  2742  0544  3907               	andlw	7
  2743  0545  1903               	btfsc	3,2
  2744  0546  2D54               	goto	l1387
  2745  0547  2D33               	goto	l1379
  2746  0548                     l1385:	
  2747  0548  3001               	movlw	1
  2748  0549                     u1685:	
  2749  0549  1003               	clrc
  2750  054A  0CA8               	rrf	___ftadd@f2+2,f
  2751  054B  0CA7               	rrf	___ftadd@f2+1,f
  2752  054C  0CA6               	rrf	___ftadd@f2,f
  2753  054D  3EFF               	addlw	-1
  2754  054E  1D03               	skipz
  2755  054F  2D49               	goto	u1685
  2756  0550  3001               	movlw	1
  2757  0551  00A9               	movwf	??___ftadd
  2758  0552  0829               	movf	??___ftadd,w
  2759  0553  07AE               	addwf	___ftadd@exp2,f
  2760  0554                     l1387:	
  2761  0554  082F               	movf	___ftadd@exp1,w
  2762  0555  062E               	xorwf	___ftadd@exp2,w
  2763  0556  1D03               	skipz
  2764  0557  2D48               	goto	l1385
  2765  0558                     l465:	
  2766  0558  1FAD               	btfss	___ftadd@sign,7
  2767  0559  2D6A               	goto	l1391
  2768  055A  30FF               	movlw	255
  2769  055B  06A3               	xorwf	___ftadd@f1,f
  2770  055C  30FF               	movlw	255
  2771  055D  06A4               	xorwf	___ftadd@f1+1,f
  2772  055E  30FF               	movlw	255
  2773  055F  06A5               	xorwf	___ftadd@f1+2,f
  2774  0560  3001               	movlw	1
  2775  0561  07A3               	addwf	___ftadd@f1,f
  2776  0562  3000               	movlw	0
  2777  0563  1803               	skipnc
  2778  0564  3001               	movlw	1
  2779  0565  07A4               	addwf	___ftadd@f1+1,f
  2780  0566  3000               	movlw	0
  2781  0567  1803               	skipnc
  2782  0568  3001               	movlw	1
  2783  0569  07A5               	addwf	___ftadd@f1+2,f
  2784  056A                     l1391:	
  2785  056A  1F2D               	btfss	___ftadd@sign,6
  2786  056B  2D7C               	goto	l1395
  2787  056C  30FF               	movlw	255
  2788  056D  06A6               	xorwf	___ftadd@f2,f
  2789  056E  30FF               	movlw	255
  2790  056F  06A7               	xorwf	___ftadd@f2+1,f
  2791  0570  30FF               	movlw	255
  2792  0571  06A8               	xorwf	___ftadd@f2+2,f
  2793  0572  3001               	movlw	1
  2794  0573  07A6               	addwf	___ftadd@f2,f
  2795  0574  3000               	movlw	0
  2796  0575  1803               	skipnc
  2797  0576  3001               	movlw	1
  2798  0577  07A7               	addwf	___ftadd@f2+1,f
  2799  0578  3000               	movlw	0
  2800  0579  1803               	skipnc
  2801  057A  3001               	movlw	1
  2802  057B  07A8               	addwf	___ftadd@f2+2,f
  2803  057C                     l1395:	
  2804  057C  01AD               	clrf	___ftadd@sign
  2805  057D  0823               	movf	___ftadd@f1,w
  2806  057E  07A6               	addwf	___ftadd@f2,f
  2807  057F  0824               	movf	___ftadd@f1+1,w
  2808  0580  1103               	clrz
  2809  0581  1803               	skipnc
  2810  0582  0A24               	incf	___ftadd@f1+1,w
  2811  0583  1D03               	btfss	3,2
  2812  0584  07A7               	addwf	___ftadd@f2+1,f
  2813  0585  0825               	movf	___ftadd@f1+2,w
  2814  0586  1103               	clrz
  2815  0587  1803               	skipnc
  2816  0588  0A25               	incf	___ftadd@f1+2,w
  2817  0589  1D03               	btfss	3,2
  2818  058A  07A8               	addwf	___ftadd@f2+2,f
  2819  058B  1FA8               	btfss	___ftadd@f2+2,7
  2820  058C  2D9F               	goto	l1405
  2821  058D  30FF               	movlw	255
  2822  058E  06A6               	xorwf	___ftadd@f2,f
  2823  058F  30FF               	movlw	255
  2824  0590  06A7               	xorwf	___ftadd@f2+1,f
  2825  0591  30FF               	movlw	255
  2826  0592  06A8               	xorwf	___ftadd@f2+2,f
  2827  0593  3001               	movlw	1
  2828  0594  07A6               	addwf	___ftadd@f2,f
  2829  0595  3000               	movlw	0
  2830  0596  1803               	skipnc
  2831  0597  3001               	movlw	1
  2832  0598  07A7               	addwf	___ftadd@f2+1,f
  2833  0599  3000               	movlw	0
  2834  059A  1803               	skipnc
  2835  059B  3001               	movlw	1
  2836  059C  07A8               	addwf	___ftadd@f2+2,f
  2837  059D  01AD               	clrf	___ftadd@sign
  2838  059E  0AAD               	incf	___ftadd@sign,f
  2839  059F                     l1405:	
  2840  059F  0826               	movf	___ftadd@f2,w
  2841  05A0  00F0               	movwf	___ftpack@arg
  2842  05A1  0827               	movf	___ftadd@f2+1,w
  2843  05A2  00F1               	movwf	___ftpack@arg+1
  2844  05A3  0828               	movf	___ftadd@f2+2,w
  2845  05A4  00F2               	movwf	___ftpack@arg+2
  2846  05A5  082F               	movf	___ftadd@exp1,w
  2847  05A6  00A9               	movwf	??___ftadd
  2848  05A7  0829               	movf	??___ftadd,w
  2849  05A8  00F3               	movwf	___ftpack@exp
  2850  05A9  082D               	movf	___ftadd@sign,w
  2851  05AA  00AA               	movwf	??___ftadd+1
  2852  05AB  082A               	movf	??___ftadd+1,w
  2853  05AC  00F4               	movwf	___ftpack@sign
  2854  05AD  120A  118A  20DA   	fcall	___ftpack
  2855  05B0  0870               	movf	?___ftpack,w
  2856  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2857  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2858  05B3  00A3               	movwf	?___ftadd
  2859  05B4  0871               	movf	?___ftpack+1,w
  2860  05B5  00A4               	movwf	?___ftadd+1
  2861  05B6  0872               	movf	?___ftpack+2,w
  2862  05B7  00A5               	movwf	?___ftadd+2
  2863  05B8  0008               	return
  2864  05B9                     __end_of___ftadd:	
  2865                           
  2866                           	psect	text9
  2867  00DA                     __ptext9:	
  2868 ;; *************** function ___ftpack *****************
  2869 ;; Defined at:
  2870 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\float.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;  arg             3    0[COMMON] unsigned um
  2873 ;;  exp             1    3[COMMON] unsigned char 
  2874 ;;  sign            1    4[COMMON] unsigned char 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;		None
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  3    0[COMMON] float 
  2879 ;; Registers used:
  2880 ;;		wreg, status,2, status,0
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2886 ;;      Params:         5       0       0       0       0
  2887 ;;      Locals:         0       0       0       0       0
  2888 ;;      Temps:          3       0       0       0       0
  2889 ;;      Totals:         8       0       0       0       0
  2890 ;;Total ram usage:        8 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; This function calls:
  2893 ;;		Nothing
  2894 ;; This function is called by:
  2895 ;;		___ftadd
  2896 ;;		___ftmul
  2897 ;;		___lltoft
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           
  2902                           ;psect for function ___ftpack
  2903  00DA                     ___ftpack:	
  2904                           
  2905                           ;incstack = 0
  2906                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2907  00DA  0873               	movf	___ftpack@exp,w
  2908  00DB  1903               	btfsc	3,2
  2909  00DC  28E2               	goto	l1231
  2910  00DD  0872               	movf	___ftpack@arg+2,w
  2911  00DE  0471               	iorwf	___ftpack@arg+1,w
  2912  00DF  0470               	iorwf	___ftpack@arg,w
  2913  00E0  1D03               	skipz
  2914  00E1  28F5               	goto	l1237
  2915  00E2                     l1231:	
  2916  00E2  3000               	movlw	0
  2917  00E3  00F0               	movwf	?___ftpack
  2918  00E4  3000               	movlw	0
  2919  00E5  00F1               	movwf	?___ftpack+1
  2920  00E6  3000               	movlw	0
  2921  00E7  00F2               	movwf	?___ftpack+2
  2922  00E8  0008               	return
  2923  00E9                     l1235:	
  2924  00E9  3001               	movlw	1
  2925  00EA  00F5               	movwf	??___ftpack
  2926  00EB  0875               	movf	??___ftpack,w
  2927  00EC  07F3               	addwf	___ftpack@exp,f
  2928  00ED  3001               	movlw	1
  2929  00EE                     u1205:	
  2930  00EE  1003               	clrc
  2931  00EF  0CF2               	rrf	___ftpack@arg+2,f
  2932  00F0  0CF1               	rrf	___ftpack@arg+1,f
  2933  00F1  0CF0               	rrf	___ftpack@arg,f
  2934  00F2  3EFF               	addlw	-1
  2935  00F3  1D03               	skipz
  2936  00F4  28EE               	goto	u1205
  2937  00F5                     l1237:	
  2938  00F5  30FE               	movlw	254
  2939  00F6  0572               	andwf	___ftpack@arg+2,w
  2940  00F7  1903               	btfsc	3,2
  2941  00F8  2910               	goto	l434
  2942  00F9  28E9               	goto	l1235
  2943  00FA                     l1239:	
  2944  00FA  3001               	movlw	1
  2945  00FB  00F5               	movwf	??___ftpack
  2946  00FC  0875               	movf	??___ftpack,w
  2947  00FD  07F3               	addwf	___ftpack@exp,f
  2948  00FE  3001               	movlw	1
  2949  00FF  07F0               	addwf	___ftpack@arg,f
  2950  0100  3000               	movlw	0
  2951  0101  1803               	skipnc
  2952  0102  3001               	movlw	1
  2953  0103  07F1               	addwf	___ftpack@arg+1,f
  2954  0104  3000               	movlw	0
  2955  0105  1803               	skipnc
  2956  0106  3001               	movlw	1
  2957  0107  07F2               	addwf	___ftpack@arg+2,f
  2958  0108  3001               	movlw	1
  2959  0109                     u1225:	
  2960  0109  1003               	clrc
  2961  010A  0CF2               	rrf	___ftpack@arg+2,f
  2962  010B  0CF1               	rrf	___ftpack@arg+1,f
  2963  010C  0CF0               	rrf	___ftpack@arg,f
  2964  010D  3EFF               	addlw	-1
  2965  010E  1D03               	skipz
  2966  010F  2909               	goto	u1225
  2967  0110                     l434:	
  2968  0110  30FF               	movlw	255
  2969  0111  0572               	andwf	___ftpack@arg+2,w
  2970  0112  1903               	btfsc	3,2
  2971  0113  291F               	goto	l1247
  2972  0114  28FA               	goto	l1239
  2973  0115                     l1245:	
  2974  0115  3001               	movlw	1
  2975  0116  02F3               	subwf	___ftpack@exp,f
  2976  0117  3001               	movlw	1
  2977  0118                     u1245:	
  2978  0118  1003               	clrc
  2979  0119  0DF0               	rlf	___ftpack@arg,f
  2980  011A  0DF1               	rlf	___ftpack@arg+1,f
  2981  011B  0DF2               	rlf	___ftpack@arg+2,f
  2982  011C  3EFF               	addlw	-1
  2983  011D  1D03               	skipz
  2984  011E  2918               	goto	u1245
  2985  011F                     l1247:	
  2986  011F  1BF1               	btfsc	___ftpack@arg+1,7
  2987  0120  2925               	goto	l441
  2988  0121  3002               	movlw	2
  2989  0122  0273               	subwf	___ftpack@exp,w
  2990  0123  1803               	skipnc
  2991  0124  2915               	goto	l1245
  2992  0125                     l441:	
  2993  0125  1873               	btfsc	___ftpack@exp,0
  2994  0126  292D               	goto	l442
  2995  0127  30FF               	movlw	255
  2996  0128  05F0               	andwf	___ftpack@arg,f
  2997  0129  307F               	movlw	127
  2998  012A  05F1               	andwf	___ftpack@arg+1,f
  2999  012B  30FF               	movlw	255
  3000  012C  05F2               	andwf	___ftpack@arg+2,f
  3001  012D                     l442:	
  3002  012D  1003               	clrc
  3003  012E  0CF3               	rrf	___ftpack@exp,f
  3004  012F  0873               	movf	___ftpack@exp,w
  3005  0130  00F5               	movwf	??___ftpack
  3006  0131  01F6               	clrf	??___ftpack+1
  3007  0132  01F7               	clrf	??___ftpack+2
  3008  0133  3010               	movlw	16
  3009  0134                     u1285:	
  3010  0134  1003               	clrc
  3011  0135  0DF5               	rlf	??___ftpack,f
  3012  0136  0DF6               	rlf	??___ftpack+1,f
  3013  0137  0DF7               	rlf	??___ftpack+2,f
  3014  0138  3EFF               	addlw	-1
  3015  0139  1D03               	skipz
  3016  013A  2934               	goto	u1285
  3017  013B  0875               	movf	??___ftpack,w
  3018  013C  04F0               	iorwf	___ftpack@arg,f
  3019  013D  0876               	movf	??___ftpack+1,w
  3020  013E  04F1               	iorwf	___ftpack@arg+1,f
  3021  013F  0877               	movf	??___ftpack+2,w
  3022  0140  04F2               	iorwf	___ftpack@arg+2,f
  3023  0141  0874               	movf	___ftpack@sign,w
  3024  0142  1903               	btfsc	3,2
  3025  0143  0008               	return
  3026  0144  17F2               	bsf	___ftpack@arg+2,7
  3027  0145  0008               	return
  3028  0146                     __end_of___ftpack:	
  3029                           
  3030                           	psect	text10
  3031  03BE                     __ptext10:	
  3032 ;; *************** function _UART_TxNumber *****************
  3033 ;; Defined at:
  3034 ;;		line 259 in file "../00-libfiles/uart.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  v_numericSys    1    wreg     unsigned char 
  3037 ;;  v_number_u32    4    4[BANK0 ] unsigned long 
  3038 ;;  v_numOfDigit    1    8[BANK0 ] unsigned char 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  v_numericSys    1   33[BANK0 ] unsigned char 
  3041 ;;  a              10   21[BANK0 ] unsigned char [10]
  3042 ;;  i               1   34[BANK0 ] unsigned char 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3052 ;;      Params:         0       5       0       0       0
  3053 ;;      Locals:         0      14       0       0       0
  3054 ;;      Temps:          0      12       0       0       0
  3055 ;;      Totals:         0      31       0       0       0
  3056 ;;Total ram usage:       31 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    1
  3059 ;; This function calls:
  3060 ;;		_UART_TxChar
  3061 ;;		___bmul
  3062 ;;		___lldiv
  3063 ;; This function is called by:
  3064 ;;		_UART_TxFloatNumber
  3065 ;;		_UART_Printf
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function _UART_TxNumber
  3071  03BE                     _UART_TxNumber:	
  3072                           
  3073                           ;incstack = 0
  3074                           ; Regs used in _UART_TxNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3075                           ;UART_TxNumber@v_numericSystem_u8 stored from wreg
  3076  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  3077  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  3078  03C0  00C1               	movwf	UART_TxNumber@v_numericSystem_u8
  3079                           
  3080                           ;uart.c: 261: uint8_t i=0,a[10];
  3081  03C1  01C2               	clrf	UART_TxNumber@i
  3082                           
  3083                           ;uart.c: 263: if(2u == v_numericSystem_u8)
  3084  03C2  3002               	movlw	2
  3085  03C3  0641               	xorwf	UART_TxNumber@v_numericSystem_u8,w
  3086  03C4  1903               	btfsc	3,2
  3087  03C5  2C05               	goto	l1301
  3088  03C6  2C09               	goto	l1303
  3089  03C7                     l1295:	
  3090                           ;uart.c: 264: {
  3091                           ;uart.c: 265: while(v_numOfDigitsToTransmit_u8!=0)
  3092                           
  3093                           
  3094                           ;uart.c: 266: {
  3095                           ;uart.c: 269: i = (((v_number_u32)&((1<<((v_numOfDigitsToTransmit_u8-1)))))!=0u);
  3096  03C7  0824               	movf	UART_TxNumber@v_number_u32,w
  3097  03C8  00A9               	movwf	??_UART_TxNumber
  3098  03C9  0825               	movf	UART_TxNumber@v_number_u32+1,w
  3099  03CA  00AA               	movwf	??_UART_TxNumber+1
  3100  03CB  0826               	movf	UART_TxNumber@v_number_u32+2,w
  3101  03CC  00AB               	movwf	??_UART_TxNumber+2
  3102  03CD  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3103  03CE  00AC               	movwf	??_UART_TxNumber+3
  3104  03CF  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3105  03D0  3EFF               	addlw	-1
  3106  03D1  00AD               	movwf	??_UART_TxNumber+4
  3107  03D2  0AAD               	incf	??_UART_TxNumber+4,f
  3108  03D3  3001               	movlw	1
  3109  03D4  00AE               	movwf	??_UART_TxNumber+5
  3110  03D5  3000               	movlw	0
  3111  03D6  00AF               	movwf	??_UART_TxNumber+6
  3112  03D7  2BDB               	goto	u1394
  3113  03D8                     u1395:	
  3114  03D8  1003               	clrc
  3115  03D9  0DAE               	rlf	??_UART_TxNumber+5,f
  3116  03DA  0DAF               	rlf	??_UART_TxNumber+6,f
  3117  03DB                     u1394:	
  3118  03DB  0BAD               	decfsz	??_UART_TxNumber+4,f
  3119  03DC  2BD8               	goto	u1395
  3120  03DD  082E               	movf	??_UART_TxNumber+5,w
  3121  03DE  00B0               	movwf	??_UART_TxNumber+7
  3122  03DF  082F               	movf	??_UART_TxNumber+6,w
  3123  03E0  00B1               	movwf	??_UART_TxNumber+8
  3124  03E1  3000               	movlw	0
  3125  03E2  1BB1               	btfsc	??_UART_TxNumber+8,7
  3126  03E3  30FF               	movlw	255
  3127  03E4  00B2               	movwf	??_UART_TxNumber+9
  3128  03E5  00B3               	movwf	??_UART_TxNumber+10
  3129  03E6  0830               	movf	??_UART_TxNumber+7,w
  3130  03E7  05A9               	andwf	??_UART_TxNumber,f
  3131  03E8  0831               	movf	??_UART_TxNumber+8,w
  3132  03E9  05AA               	andwf	??_UART_TxNumber+1,f
  3133  03EA  0832               	movf	??_UART_TxNumber+9,w
  3134  03EB  05AB               	andwf	??_UART_TxNumber+2,f
  3135  03EC  0833               	movf	??_UART_TxNumber+10,w
  3136  03ED  05AC               	andwf	??_UART_TxNumber+3,f
  3137  03EE  082C               	movf	??_UART_TxNumber+3,w
  3138  03EF  042B               	iorwf	??_UART_TxNumber+2,w
  3139  03F0  042A               	iorwf	??_UART_TxNumber+1,w
  3140  03F1  0429               	iorwf	??_UART_TxNumber,w
  3141  03F2  1903               	btfsc	3,2
  3142  03F3  2BF6               	goto	u1400
  3143  03F4  3001               	movlw	1
  3144  03F5  2BF7               	goto	u1410
  3145  03F6                     u1400:	
  3146  03F6  3000               	movlw	0
  3147  03F7                     u1410:	
  3148  03F7  00B4               	movwf	??_UART_TxNumber+11
  3149  03F8  0834               	movf	??_UART_TxNumber+11,w
  3150  03F9  00C2               	movwf	UART_TxNumber@i
  3151                           
  3152                           ;uart.c: 270: UART_TxChar(((i)+0x30));
  3153  03FA  0842               	movf	UART_TxNumber@i,w
  3154  03FB  3E30               	addlw	48
  3155  03FC  120A  158A  26D2  120A  118A  	fcall	_UART_TxChar
  3156                           
  3157                           ;uart.c: 271: v_numOfDigitsToTransmit_u8--;
  3158  0401  3001               	movlw	1
  3159  0402  1283               	bcf	3,5	;RP0=0, select bank0
  3160  0403  1303               	bcf	3,6	;RP1=0, select bank0
  3161  0404  02A8               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,f
  3162  0405                     l1301:	
  3163  0405  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3164  0406  1903               	btfsc	3,2
  3165  0407  0008               	return
  3166  0408  2BC7               	goto	l1295
  3167  0409                     l1303:	
  3168                           ;uart.c: 272: }
  3169                           ;uart.c: 273: }
  3170                           
  3171                           
  3172                           ;uart.c: 274: else if(v_number_u32==0)
  3173  0409  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3174  040A  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  3175  040B  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  3176  040C  0424               	iorwf	UART_TxNumber@v_number_u32,w
  3177  040D  1D03               	skipz
  3178  040E  2C14               	goto	l1307
  3179                           
  3180                           ;uart.c: 275: {
  3181                           ;uart.c: 278: UART_TxChar('0');
  3182  040F  3030               	movlw	48
  3183  0410  120A  158A  26D2   	fcall	_UART_TxChar
  3184                           
  3185                           ;uart.c: 279: }
  3186  0413  0008               	return
  3187  0414                     l1307:	
  3188                           
  3189                           ;uart.c: 280: else
  3190                           ;uart.c: 281: {
  3191                           ;uart.c: 282: for(i=0;i<v_numOfDigitsToTransmit_u8;i++)
  3192  0414  1283               	bcf	3,5	;RP0=0, select bank0
  3193  0415  1303               	bcf	3,6	;RP1=0, select bank0
  3194  0416  01C2               	clrf	UART_TxNumber@i
  3195  0417                     l1325:	
  3196  0417  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3197  0418  0242               	subwf	UART_TxNumber@i,w
  3198  0419  1803               	btfsc	3,0
  3199  041A  2CAC               	goto	l1337
  3200                           
  3201                           ;uart.c: 283: {
  3202                           ;uart.c: 286: if(v_number_u32!=0)
  3203  041B  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3204  041C  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  3205  041D  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  3206  041E  0424               	iorwf	UART_TxNumber@v_number_u32,w
  3207  041F  1903               	skipnz
  3208  0420  2C76               	goto	l1315
  3209                           
  3210                           ;uart.c: 287: {
  3211                           ;uart.c: 294: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u
      +                          32/v_numericSystem_u8)));
  3212  0421  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  3213  0422  00A9               	movwf	??_UART_TxNumber
  3214  0423  0829               	movf	??_UART_TxNumber,w
  3215  0424  00A0               	movwf	___bmul@multiplicand
  3216  0425  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3217  0426  00F7               	movwf	___lldiv@dividend+3
  3218  0427  0826               	movf	UART_TxNumber@v_number_u32+2,w
  3219  0428  00F6               	movwf	___lldiv@dividend+2
  3220  0429  0825               	movf	UART_TxNumber@v_number_u32+1,w
  3221  042A  00F5               	movwf	___lldiv@dividend+1
  3222  042B  0824               	movf	UART_TxNumber@v_number_u32,w
  3223  042C  00F4               	movwf	___lldiv@dividend
  3224  042D  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  3225  042E  00AA               	movwf	??_UART_TxNumber+1
  3226  042F  01AB               	clrf	??_UART_TxNumber+2
  3227  0430  01AC               	clrf	??_UART_TxNumber+3
  3228  0431  01AD               	clrf	??_UART_TxNumber+4
  3229  0432  082D               	movf	??_UART_TxNumber+4,w
  3230  0433  00F3               	movwf	___lldiv@divisor+3
  3231  0434  082C               	movf	??_UART_TxNumber+3,w
  3232  0435  00F2               	movwf	___lldiv@divisor+2
  3233  0436  082B               	movf	??_UART_TxNumber+2,w
  3234  0437  00F1               	movwf	___lldiv@divisor+1
  3235  0438  082A               	movf	??_UART_TxNumber+1,w
  3236  0439  00F0               	movwf	___lldiv@divisor
  3237  043A  120A  118A  201A  120A  118A  	fcall	___lldiv
  3238  043F  0870               	movf	?___lldiv,w
  3239  0440  120A  158A  2701  120A  118A  	fcall	___bmul
  3240  0445  3AFF               	xorlw	255
  3241  0446  3E01               	addlw	1
  3242  0447  1283               	bcf	3,5	;RP0=0, select bank0
  3243  0448  1303               	bcf	3,6	;RP1=0, select bank0
  3244  0449  0724               	addwf	UART_TxNumber@v_number_u32,w
  3245  044A  00AE               	movwf	??_UART_TxNumber+5
  3246  044B  0842               	movf	UART_TxNumber@i,w
  3247  044C  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3248  044D  0084               	movwf	4
  3249  044E  082E               	movf	??_UART_TxNumber+5,w
  3250  044F  1383               	bcf	3,7	;select IRP bank0
  3251  0450  0080               	movwf	0
  3252                           
  3253                           ;uart.c: 295: v_number_u32=v_number_u32/v_numericSystem_u8;
  3254  0451  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  3255  0452  00A9               	movwf	??_UART_TxNumber
  3256  0453  01AA               	clrf	??_UART_TxNumber+1
  3257  0454  01AB               	clrf	??_UART_TxNumber+2
  3258  0455  01AC               	clrf	??_UART_TxNumber+3
  3259  0456  082C               	movf	??_UART_TxNumber+3,w
  3260  0457  00F3               	movwf	___lldiv@divisor+3
  3261  0458  082B               	movf	??_UART_TxNumber+2,w
  3262  0459  00F2               	movwf	___lldiv@divisor+2
  3263  045A  082A               	movf	??_UART_TxNumber+1,w
  3264  045B  00F1               	movwf	___lldiv@divisor+1
  3265  045C  0829               	movf	??_UART_TxNumber,w
  3266  045D  00F0               	movwf	___lldiv@divisor
  3267  045E  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3268  045F  00F7               	movwf	___lldiv@dividend+3
  3269  0460  0826               	movf	UART_TxNumber@v_number_u32+2,w
  3270  0461  00F6               	movwf	___lldiv@dividend+2
  3271  0462  0825               	movf	UART_TxNumber@v_number_u32+1,w
  3272  0463  00F5               	movwf	___lldiv@dividend+1
  3273  0464  0824               	movf	UART_TxNumber@v_number_u32,w
  3274  0465  00F4               	movwf	___lldiv@dividend
  3275  0466  120A  118A  201A  120A  118A  	fcall	___lldiv
  3276  046B  0873               	movf	?___lldiv+3,w
  3277  046C  1283               	bcf	3,5	;RP0=0, select bank0
  3278  046D  1303               	bcf	3,6	;RP1=0, select bank0
  3279  046E  00A7               	movwf	UART_TxNumber@v_number_u32+3
  3280  046F  0872               	movf	?___lldiv+2,w
  3281  0470  00A6               	movwf	UART_TxNumber@v_number_u32+2
  3282  0471  0871               	movf	?___lldiv+1,w
  3283  0472  00A5               	movwf	UART_TxNumber@v_number_u32+1
  3284  0473  0870               	movf	?___lldiv,w
  3285  0474  00A4               	movwf	UART_TxNumber@v_number_u32
  3286                           
  3287                           ;uart.c: 296: }
  3288  0475  2C82               	goto	l1323
  3289  0476                     l1315:	
  3290                           
  3291                           ;uart.c: 297: else if( (v_numOfDigitsToTransmit_u8 == 0xffu) ||
  3292                           ;uart.c: 298: (v_numOfDigitsToTransmit_u8 > 10u))
  3293  0476  0A28               	incf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3294  0477  1903               	btfsc	3,2
  3295  0478  2CAC               	goto	l1337
  3296  0479  300B               	movlw	11
  3297  047A  0228               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3298  047B  1803               	btfsc	3,0
  3299  047C  2CAC               	goto	l1337
  3300                           
  3301                           ;uart.c: 304: else
  3302                           ;uart.c: 305: {
  3303                           ;uart.c: 309: a[i]=0;
  3304                           
  3305                           ;uart.c: 303: }
  3306                           
  3307                           ;uart.c: 299: {
  3308                           ;uart.c: 302: break;
  3309  047D  0842               	movf	UART_TxNumber@i,w
  3310  047E  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3311  047F  0084               	movwf	4
  3312  0480  1383               	bcf	3,7	;select IRP bank0
  3313  0481  0180               	clrf	0
  3314  0482                     l1323:	
  3315  0482  3001               	movlw	1
  3316  0483  00A9               	movwf	??_UART_TxNumber
  3317  0484  0829               	movf	??_UART_TxNumber,w
  3318  0485  07C2               	addwf	UART_TxNumber@i,f
  3319  0486  2C17               	goto	l1325
  3320  0487                     l1327:	
  3321                           ;uart.c: 310: }
  3322                           ;uart.c: 311: }
  3323                           ;uart.c: 313: while(i)
  3324                           
  3325                           
  3326                           ;uart.c: 314: {
  3327                           ;uart.c: 316: UART_TxChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  3328  0487  0842               	movf	UART_TxNumber@i,w
  3329  0488  3EFF               	addlw	255
  3330  0489  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3331  048A  0084               	movwf	4
  3332  048B  300A               	movlw	10
  3333  048C  1383               	bcf	3,7	;select IRP bank0
  3334  048D  0200               	subwf	0,w
  3335  048E  1803               	skipnc
  3336  048F  2C97               	goto	l1331
  3337  0490  0842               	movf	UART_TxNumber@i,w
  3338  0491  3EFF               	addlw	255
  3339  0492  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3340  0493  0084               	movwf	4
  3341  0494  0800               	movf	0,w
  3342  0495  3E30               	addlw	48
  3343  0496  2C9D               	goto	L2
  3344  0497                     l1331:	
  3345  0497  0842               	movf	UART_TxNumber@i,w
  3346  0498  3EFF               	addlw	255
  3347  0499  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3348  049A  0084               	movwf	4
  3349  049B  0800               	movf	0,w
  3350  049C  3E37               	addlw	55
  3351  049D                     L2:	
  3352  049D  00BF               	movwf	_UART_TxNumber$118
  3353  049E  3000               	movlw	0
  3354  049F  1803               	skipnc
  3355  04A0  3001               	movlw	1
  3356  04A1  00C0               	movwf	_UART_TxNumber$118+1
  3357  04A2  083F               	movf	_UART_TxNumber$118,w
  3358  04A3  120A  158A  26D2  120A  118A  	fcall	_UART_TxChar
  3359                           
  3360                           ;uart.c: 317: i--;
  3361  04A8  3001               	movlw	1
  3362  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  3363  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  3364  04AB  02C2               	subwf	UART_TxNumber@i,f
  3365  04AC                     l1337:	
  3366  04AC  0842               	movf	UART_TxNumber@i,w
  3367  04AD  1903               	btfsc	3,2
  3368  04AE  0008               	return
  3369  04AF  2C87               	goto	l1327
  3370  04B0                     __end_of_UART_TxNumber:	
  3371                           
  3372                           	psect	text11
  3373  0F01                     __ptext11:	
  3374 ;; *************** function ___bmul *****************
  3375 ;; Defined at:
  3376 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\Umul8.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;  multiplier      1    wreg     unsigned char 
  3379 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3382 ;;  product         1    2[BANK0 ] unsigned char 
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      unsigned char 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3392 ;;      Params:         0       1       0       0       0
  3393 ;;      Locals:         0       2       0       0       0
  3394 ;;      Temps:          0       1       0       0       0
  3395 ;;      Totals:         0       4       0       0       0
  3396 ;;Total ram usage:        4 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_UART_TxNumber
  3402 ;;		_UART_Printf
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           
  3407                           ;psect for function ___bmul
  3408  0F01                     ___bmul:	
  3409                           
  3410                           ;incstack = 0
  3411                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3412                           ;___bmul@multiplier stored from wreg
  3413  0F01  1283               	bcf	3,5	;RP0=0, select bank0
  3414  0F02  1303               	bcf	3,6	;RP1=0, select bank0
  3415  0F03  00A3               	movwf	___bmul@multiplier
  3416  0F04  01A2               	clrf	___bmul@product
  3417  0F05                     l1215:	
  3418  0F05  1C23               	btfss	___bmul@multiplier,0
  3419  0F06  2F0B               	goto	l1219
  3420  0F07  0820               	movf	___bmul@multiplicand,w
  3421  0F08  00A1               	movwf	??___bmul
  3422  0F09  0821               	movf	??___bmul,w
  3423  0F0A  07A2               	addwf	___bmul@product,f
  3424  0F0B                     l1219:	
  3425  0F0B  1003               	clrc
  3426  0F0C  0DA0               	rlf	___bmul@multiplicand,f
  3427  0F0D  1003               	clrc
  3428  0F0E  0CA3               	rrf	___bmul@multiplier,f
  3429  0F0F  0823               	movf	___bmul@multiplier,w
  3430  0F10  1D03               	btfss	3,2
  3431  0F11  2F05               	goto	l1215
  3432  0F12  0822               	movf	___bmul@product,w
  3433  0F13  0008               	return
  3434  0F14                     __end_of___bmul:	
  3435                           
  3436                           	psect	text12
  3437  0ED2                     __ptext12:	
  3438 ;; *************** function _UART_TxChar *****************
  3439 ;; Defined at:
  3440 ;;		line 144 in file "../00-libfiles/uart.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  var_uartData    1    wreg     unsigned char 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  var_uartData    1    0[COMMON] unsigned char 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3454 ;;      Params:         0       0       0       0       0
  3455 ;;      Locals:         1       0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0
  3457 ;;      Totals:         1       0       0       0       0
  3458 ;;Total ram usage:        1 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_UART_TxString
  3464 ;;		_UART_TxNumber
  3465 ;;		_UART_TxFloatNumber
  3466 ;;		_UART_Printf
  3467 ;;		_UART_RxString
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           
  3472                           ;psect for function _UART_TxChar
  3473  0ED2                     _UART_TxChar:	
  3474                           
  3475                           ;incstack = 0
  3476                           ; Regs used in _UART_TxChar: [wreg]
  3477                           ;UART_TxChar@var_uartData_u8 stored from wreg
  3478  0ED2  00F0               	movwf	UART_TxChar@var_uartData_u8
  3479  0ED3                     l103:	
  3480                           ;uart.c: 146: while(TXIF==0);
  3481                           
  3482  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  3483  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  3484  0ED5  1E0C               	btfss	12,4	;volatile
  3485  0ED6  2ED3               	goto	l103
  3486                           
  3487                           ;uart.c: 147: TXIF=0;
  3488  0ED7  120C               	bcf	12,4	;volatile
  3489                           
  3490                           ;uart.c: 148: TXREG=var_uartData_u8;
  3491  0ED8  0870               	movf	UART_TxChar@var_uartData_u8,w
  3492  0ED9  0099               	movwf	25	;volatile
  3493  0EDA  0008               	return
  3494  0EDB                     __end_of_UART_TxChar:	
  3495                           
  3496                           	psect	text13
  3497  0004                     __ptext13:	
  3498 ;; *************** function _UART_Init *****************
  3499 ;; Defined at:
  3500 ;;		line 65 in file "../00-libfiles/uart.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;  var_baudRate    4   16[BANK0 ] unsigned long 
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;		None
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  1    wreg      void 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0, pclath, cstack
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3514 ;;      Params:         0       4       0       0       0
  3515 ;;      Locals:         0       0       0       0       0
  3516 ;;      Temps:          0       0       0       0       0
  3517 ;;      Totals:         0       4       0       0       0
  3518 ;;Total ram usage:        4 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:    2
  3521 ;; This function calls:
  3522 ;;		_UART_SetBaudRate
  3523 ;; This function is called by:
  3524 ;;		_main
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           
  3529                           ;psect for function _UART_Init
  3530  0004                     _UART_Init:	
  3531                           
  3532                           ;uart.c: 67: TRISC=0x80;
  3533                           
  3534                           ;incstack = 0
  3535                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3536  0004  3080               	movlw	128
  3537  0005  1683               	bsf	3,5	;RP0=1, select bank1
  3538  0006  1303               	bcf	3,6	;RP1=0, select bank1
  3539  0007  0087               	movwf	7	;volatile
  3540                           
  3541                           ;uart.c: 68: TXSTA=0x20;
  3542  0008  3020               	movlw	32
  3543  0009  0098               	movwf	24	;volatile
  3544                           
  3545                           ;uart.c: 69: RCSTA=0x90;
  3546  000A  3090               	movlw	144
  3547  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3548  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3549  000D  0098               	movwf	24	;volatile
  3550                           
  3551                           ;uart.c: 70: UART_SetBaudRate(var_baudRate_u32);
  3552  000E  0833               	movf	UART_Init@var_baudRate_u32+3,w
  3553  000F  00A3               	movwf	UART_SetBaudRate@var_baudRate_u32+3
  3554  0010  0832               	movf	UART_Init@var_baudRate_u32+2,w
  3555  0011  00A2               	movwf	UART_SetBaudRate@var_baudRate_u32+2
  3556  0012  0831               	movf	UART_Init@var_baudRate_u32+1,w
  3557  0013  00A1               	movwf	UART_SetBaudRate@var_baudRate_u32+1
  3558  0014  0830               	movf	UART_Init@var_baudRate_u32,w
  3559  0015  00A0               	movwf	UART_SetBaudRate@var_baudRate_u32
  3560  0016  120A  118A  2146   	fcall	_UART_SetBaudRate
  3561  0019  0008               	return
  3562  001A                     __end_of_UART_Init:	
  3563                           
  3564                           	psect	text14
  3565  0146                     __ptext14:	
  3566 ;; *************** function _UART_SetBaudRate *****************
  3567 ;; Defined at:
  3568 ;;		line 90 in file "../00-libfiles/uart.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;  var_baudRate    4    0[BANK0 ] unsigned long 
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;  RegValue        4   12[BANK0 ] unsigned long 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      void 
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0, pclath, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3582 ;;      Params:         0       4       0       0       0
  3583 ;;      Locals:         0       4       0       0       0
  3584 ;;      Temps:          0       8       0       0       0
  3585 ;;      Totals:         0      16       0       0       0
  3586 ;;Total ram usage:       16 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    1
  3589 ;; This function calls:
  3590 ;;		___lldiv
  3591 ;; This function is called by:
  3592 ;;		_UART_Init
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           
  3597                           ;psect for function _UART_SetBaudRate
  3598  0146                     _UART_SetBaudRate:	
  3599                           
  3600                           ;uart.c: 92: uint32_t RegValue;
  3601                           ;uart.c: 94: if((var_baudRate_u32 >= 2400) && (var_baudRate_u32<=115200UL))
  3602                           
  3603                           ;incstack = 0
  3604                           ; Regs used in _UART_SetBaudRate: [wreg+status,2+status,0+pclath+cstack]
  3605  0146  1283               	bcf	3,5	;RP0=0, select bank0
  3606  0147  1303               	bcf	3,6	;RP1=0, select bank0
  3607  0148  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  3608  0149  1D03               	btfss	3,2
  3609  014A  2958               	goto	l1549
  3610  014B  0822               	movf	UART_SetBaudRate@var_baudRate_u32+2,w
  3611  014C  1D03               	btfss	3,2
  3612  014D  2958               	goto	l1549
  3613  014E  3009               	movlw	9
  3614  014F  0221               	subwf	UART_SetBaudRate@var_baudRate_u32+1,w
  3615  0150  1D03               	skipz
  3616  0151  2956               	goto	u2053
  3617  0152  3060               	movlw	96
  3618  0153  0220               	subwf	UART_SetBaudRate@var_baudRate_u32,w
  3619  0154  1D03               	skipz
  3620  0155  2956               	goto	u2053
  3621  0156                     u2053:	
  3622  0156  1C03               	btfss	3,0
  3623  0157  29B3               	goto	l1553
  3624  0158                     l1549:	
  3625  0158  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  3626  0159  1D03               	btfss	3,2
  3627  015A  29B3               	goto	l1553
  3628  015B  3001               	movlw	1
  3629  015C  0222               	subwf	UART_SetBaudRate@var_baudRate_u32+2,w
  3630  015D  1D03               	skipz
  3631  015E  2967               	goto	u2063
  3632  015F  30C2               	movlw	194
  3633  0160  0221               	subwf	UART_SetBaudRate@var_baudRate_u32+1,w
  3634  0161  1D03               	skipz
  3635  0162  2967               	goto	u2063
  3636  0163  3001               	movlw	1
  3637  0164  0220               	subwf	UART_SetBaudRate@var_baudRate_u32,w
  3638  0165  1D03               	skipz
  3639  0166  2967               	goto	u2063
  3640  0167                     u2063:	
  3641  0167  1803               	btfsc	3,0
  3642  0168  29B3               	goto	l1553
  3643                           
  3644                           ;uart.c: 95: {
  3645                           ;uart.c: 98: RegValue = (uint32_t)((20000000UL / (64*(uint32_t)var_baudRate_u32)) - 1);
  3646  0169  30FF               	movlw	255
  3647  016A  00A4               	movwf	??_UART_SetBaudRate
  3648  016B  30FF               	movlw	255
  3649  016C  00A5               	movwf	??_UART_SetBaudRate+1
  3650  016D  30FF               	movlw	255
  3651  016E  00A6               	movwf	??_UART_SetBaudRate+2
  3652  016F  30FF               	movlw	255
  3653  0170  00A7               	movwf	??_UART_SetBaudRate+3
  3654  0171  0820               	movf	UART_SetBaudRate@var_baudRate_u32,w
  3655  0172  00A8               	movwf	??_UART_SetBaudRate+4
  3656  0173  0821               	movf	UART_SetBaudRate@var_baudRate_u32+1,w
  3657  0174  00A9               	movwf	??_UART_SetBaudRate+5
  3658  0175  0822               	movf	UART_SetBaudRate@var_baudRate_u32+2,w
  3659  0176  00AA               	movwf	??_UART_SetBaudRate+6
  3660  0177  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  3661  0178  00AB               	movwf	??_UART_SetBaudRate+7
  3662  0179  3006               	movlw	6
  3663  017A                     u2075:	
  3664  017A  1003               	clrc
  3665  017B  0DA8               	rlf	??_UART_SetBaudRate+4,f
  3666  017C  0DA9               	rlf	??_UART_SetBaudRate+5,f
  3667  017D  0DAA               	rlf	??_UART_SetBaudRate+6,f
  3668  017E  0DAB               	rlf	??_UART_SetBaudRate+7,f
  3669  017F  3EFF               	addlw	-1
  3670  0180  1D03               	skipz
  3671  0181  297A               	goto	u2075
  3672  0182  082B               	movf	??_UART_SetBaudRate+7,w
  3673  0183  00F3               	movwf	___lldiv@divisor+3
  3674  0184  082A               	movf	??_UART_SetBaudRate+6,w
  3675  0185  00F2               	movwf	___lldiv@divisor+2
  3676  0186  0829               	movf	??_UART_SetBaudRate+5,w
  3677  0187  00F1               	movwf	___lldiv@divisor+1
  3678  0188  0828               	movf	??_UART_SetBaudRate+4,w
  3679  0189  00F0               	movwf	___lldiv@divisor
  3680  018A  3001               	movlw	1
  3681  018B  00F7               	movwf	___lldiv@dividend+3
  3682  018C  3031               	movlw	49
  3683  018D  00F6               	movwf	___lldiv@dividend+2
  3684  018E  302D               	movlw	45
  3685  018F  00F5               	movwf	___lldiv@dividend+1
  3686  0190  3000               	movlw	0
  3687  0191  00F4               	movwf	___lldiv@dividend
  3688  0192  120A  118A  201A  120A  118A  	fcall	___lldiv
  3689  0197  0870               	movf	?___lldiv,w
  3690  0198  1283               	bcf	3,5	;RP0=0, select bank0
  3691  0199  1303               	bcf	3,6	;RP1=0, select bank0
  3692  019A  07A4               	addwf	??_UART_SetBaudRate,f
  3693  019B  0871               	movf	?___lldiv+1,w
  3694  019C  1803               	skipnc
  3695  019D  0F71               	incfsz	?___lldiv+1,w
  3696  019E  29A0               	goto	u2080
  3697  019F  29A1               	goto	u2081
  3698  01A0                     u2080:	
  3699  01A0  07A5               	addwf	??_UART_SetBaudRate+1,f
  3700  01A1                     u2081:	
  3701  01A1  0872               	movf	?___lldiv+2,w
  3702  01A2  1803               	skipnc
  3703  01A3  0F72               	incfsz	?___lldiv+2,w
  3704  01A4  29A6               	goto	u2082
  3705  01A5  29A7               	goto	u2083
  3706  01A6                     u2082:	
  3707  01A6  07A6               	addwf	??_UART_SetBaudRate+2,f
  3708  01A7                     u2083:	
  3709  01A7  0873               	movf	?___lldiv+3,w
  3710  01A8  1803               	skipnc
  3711  01A9  0A73               	incf	?___lldiv+3,w
  3712  01AA  07A7               	addwf	??_UART_SetBaudRate+3,f
  3713  01AB  0827               	movf	??_UART_SetBaudRate+3,w
  3714  01AC  00AF               	movwf	UART_SetBaudRate@RegValue+3
  3715  01AD  0826               	movf	??_UART_SetBaudRate+2,w
  3716  01AE  00AE               	movwf	UART_SetBaudRate@RegValue+2
  3717  01AF  0825               	movf	??_UART_SetBaudRate+1,w
  3718  01B0  00AD               	movwf	UART_SetBaudRate@RegValue+1
  3719  01B1  0824               	movf	??_UART_SetBaudRate,w
  3720  01B2  29BA               	goto	L3
  3721  01B3                     l1553:	
  3722                           ;uart.c: 99: }
  3723                           
  3724                           
  3725                           ;uart.c: 100: else
  3726                           ;uart.c: 101: {
  3727                           ;uart.c: 103: RegValue = (uint32_t)((20000000UL / (64*(uint32_t)9600)) - 1);
  3728  01B3  3000               	movlw	0
  3729  01B4  00AF               	movwf	UART_SetBaudRate@RegValue+3
  3730  01B5  3000               	movlw	0
  3731  01B6  00AE               	movwf	UART_SetBaudRate@RegValue+2
  3732  01B7  3000               	movlw	0
  3733  01B8  00AD               	movwf	UART_SetBaudRate@RegValue+1
  3734  01B9  301F               	movlw	31
  3735  01BA                     L3:	
  3736  01BA  00AC               	movwf	UART_SetBaudRate@RegValue
  3737                           
  3738                           ;uart.c: 104: }
  3739                           ;uart.c: 106: SPBRG = (uint8_t)RegValue;
  3740  01BB  082C               	movf	UART_SetBaudRate@RegValue,w
  3741  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  3742  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  3743  01BE  0099               	movwf	25	;volatile
  3744  01BF  0008               	return
  3745  01C0                     __end_of_UART_SetBaudRate:	
  3746                           
  3747                           	psect	text15
  3748  001A                     __ptext15:	
  3749 ;; *************** function ___lldiv *****************
  3750 ;; Defined at:
  3751 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;  divisor         4    0[COMMON] unsigned long 
  3754 ;;  dividend        4    4[COMMON] unsigned long 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  quotient        4    9[COMMON] unsigned long 
  3757 ;;  counter         1   13[COMMON] unsigned char 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  4    0[COMMON] unsigned long 
  3760 ;; Registers used:
  3761 ;;		wreg, status,2, status,0
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3767 ;;      Params:         8       0       0       0       0
  3768 ;;      Locals:         5       0       0       0       0
  3769 ;;      Temps:          1       0       0       0       0
  3770 ;;      Totals:        14       0       0       0       0
  3771 ;;Total ram usage:       14 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_UART_SetBaudRate
  3777 ;;		_UART_TxNumber
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           
  3782                           ;psect for function ___lldiv
  3783  001A                     ___lldiv:	
  3784                           
  3785                           ;incstack = 0
  3786                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3787  001A  3000               	movlw	0
  3788  001B  00FC               	movwf	___lldiv@quotient+3
  3789  001C  3000               	movlw	0
  3790  001D  00FB               	movwf	___lldiv@quotient+2
  3791  001E  3000               	movlw	0
  3792  001F  00FA               	movwf	___lldiv@quotient+1
  3793  0020  3000               	movlw	0
  3794  0021  00F9               	movwf	___lldiv@quotient
  3795  0022  0873               	movf	___lldiv@divisor+3,w
  3796  0023  0472               	iorwf	___lldiv@divisor+2,w
  3797  0024  0471               	iorwf	___lldiv@divisor+1,w
  3798  0025  0470               	iorwf	___lldiv@divisor,w
  3799  0026  1903               	skipnz
  3800  0027  286F               	goto	l1279
  3801  0028  01FD               	clrf	___lldiv@counter
  3802  0029  0AFD               	incf	___lldiv@counter,f
  3803  002A                     l1265:	
  3804  002A  1BF3               	btfsc	___lldiv@divisor+3,7
  3805  002B  283A               	goto	l1267
  3806  002C  3001               	movlw	1
  3807  002D  00F8               	movwf	??___lldiv
  3808  002E                     u1315:	
  3809  002E  1003               	clrc
  3810  002F  0DF0               	rlf	___lldiv@divisor,f
  3811  0030  0DF1               	rlf	___lldiv@divisor+1,f
  3812  0031  0DF2               	rlf	___lldiv@divisor+2,f
  3813  0032  0DF3               	rlf	___lldiv@divisor+3,f
  3814  0033  0BF8               	decfsz	??___lldiv,f
  3815  0034  282E               	goto	u1315
  3816  0035  3001               	movlw	1
  3817  0036  00F8               	movwf	??___lldiv
  3818  0037  0878               	movf	??___lldiv,w
  3819  0038  07FD               	addwf	___lldiv@counter,f
  3820  0039  282A               	goto	l1265
  3821  003A                     l1267:	
  3822  003A  3001               	movlw	1
  3823  003B  00F8               	movwf	??___lldiv
  3824  003C                     u1335:	
  3825  003C  1003               	clrc
  3826  003D  0DF9               	rlf	___lldiv@quotient,f
  3827  003E  0DFA               	rlf	___lldiv@quotient+1,f
  3828  003F  0DFB               	rlf	___lldiv@quotient+2,f
  3829  0040  0DFC               	rlf	___lldiv@quotient+3,f
  3830  0041  0BF8               	decfsz	??___lldiv,f
  3831  0042  283C               	goto	u1335
  3832  0043  0873               	movf	___lldiv@divisor+3,w
  3833  0044  0277               	subwf	___lldiv@dividend+3,w
  3834  0045  1D03               	skipz
  3835  0046  2851               	goto	u1345
  3836  0047  0872               	movf	___lldiv@divisor+2,w
  3837  0048  0276               	subwf	___lldiv@dividend+2,w
  3838  0049  1D03               	skipz
  3839  004A  2851               	goto	u1345
  3840  004B  0871               	movf	___lldiv@divisor+1,w
  3841  004C  0275               	subwf	___lldiv@dividend+1,w
  3842  004D  1D03               	skipz
  3843  004E  2851               	goto	u1345
  3844  004F  0870               	movf	___lldiv@divisor,w
  3845  0050  0274               	subwf	___lldiv@dividend,w
  3846  0051                     u1345:	
  3847  0051  1C03               	skipc
  3848  0052  2862               	goto	l1275
  3849  0053  0870               	movf	___lldiv@divisor,w
  3850  0054  02F4               	subwf	___lldiv@dividend,f
  3851  0055  0871               	movf	___lldiv@divisor+1,w
  3852  0056  1C03               	skipc
  3853  0057  0F71               	incfsz	___lldiv@divisor+1,w
  3854  0058  02F5               	subwf	___lldiv@dividend+1,f
  3855  0059  0872               	movf	___lldiv@divisor+2,w
  3856  005A  1C03               	skipc
  3857  005B  0F72               	incfsz	___lldiv@divisor+2,w
  3858  005C  02F6               	subwf	___lldiv@dividend+2,f
  3859  005D  0873               	movf	___lldiv@divisor+3,w
  3860  005E  1C03               	skipc
  3861  005F  0F73               	incfsz	___lldiv@divisor+3,w
  3862  0060  02F7               	subwf	___lldiv@dividend+3,f
  3863  0061  1479               	bsf	___lldiv@quotient,0
  3864  0062                     l1275:	
  3865  0062  3001               	movlw	1
  3866  0063                     u1355:	
  3867  0063  1003               	clrc
  3868  0064  0CF3               	rrf	___lldiv@divisor+3,f
  3869  0065  0CF2               	rrf	___lldiv@divisor+2,f
  3870  0066  0CF1               	rrf	___lldiv@divisor+1,f
  3871  0067  0CF0               	rrf	___lldiv@divisor,f
  3872  0068  3EFF               	addlw	-1
  3873  0069  1D03               	skipz
  3874  006A  2863               	goto	u1355
  3875  006B  3001               	movlw	1
  3876  006C  02FD               	subwf	___lldiv@counter,f
  3877  006D  1D03               	btfss	3,2
  3878  006E  283A               	goto	l1267
  3879  006F                     l1279:	
  3880  006F  087C               	movf	___lldiv@quotient+3,w
  3881  0070  00F3               	movwf	?___lldiv+3
  3882  0071  087B               	movf	___lldiv@quotient+2,w
  3883  0072  00F2               	movwf	?___lldiv+2
  3884  0073  087A               	movf	___lldiv@quotient+1,w
  3885  0074  00F1               	movwf	?___lldiv+1
  3886  0075  0879               	movf	___lldiv@quotient,w
  3887  0076  00F0               	movwf	?___lldiv
  3888  0077  0008               	return
  3889  0078                     __end_of___lldiv:	
  3890                           
  3891                           	psect	text16
  3892  0F84                     __ptext16:	
  3893 ;; *************** function _EEPROM_WriteString *****************
  3894 ;; Defined at:
  3895 ;;		line 173 in file "../00-libfiles/eeprom.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;  v_eepromAddr    2    5[COMMON] unsigned int 
  3898 ;;  ptr_stringPo    1    7[COMMON] PTR unsigned char 
  3899 ;;		 -> main@write_str(47), 
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;		None
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  1    wreg      void 
  3904 ;; Registers used:
  3905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3911 ;;      Params:         3       0       0       0       0
  3912 ;;      Locals:         0       0       0       0       0
  3913 ;;      Temps:          1       0       0       0       0
  3914 ;;      Totals:         4       0       0       0       0
  3915 ;;Total ram usage:        4 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:    2
  3918 ;; This function calls:
  3919 ;;		_EEPROM_WriteByte
  3920 ;; This function is called by:
  3921 ;;		_main
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           
  3926                           ;psect for function _EEPROM_WriteString
  3927  0F84                     _EEPROM_WriteString:	
  3928  0F84                     l57:	
  3929                           ;incstack = 0
  3930                           ; Regs used in _EEPROM_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3931                           ;eeprom.c: 176: do
  3932                           
  3933                           
  3934                           ;eeprom.c: 177: {
  3935                           ;eeprom.c: 178: EEPROM_WriteByte(v_eepromAddress_u16,*ptr_stringPointer_u8);
  3936  0F84  0876               	movf	EEPROM_WriteString@v_eepromAddress_u16+1,w
  3937  0F85  00F3               	movwf	EEPROM_WriteByte@v_eepromAddress_u16+1
  3938  0F86  0875               	movf	EEPROM_WriteString@v_eepromAddress_u16,w
  3939  0F87  00F2               	movwf	EEPROM_WriteByte@v_eepromAddress_u16
  3940  0F88  0877               	movf	EEPROM_WriteString@ptr_stringPointer_u8,w
  3941  0F89  0084               	movwf	4
  3942  0F8A  1783               	bsf	3,7	;select IRP bank2
  3943  0F8B  0800               	movf	0,w
  3944  0F8C  00F8               	movwf	??_EEPROM_WriteString
  3945  0F8D  0878               	movf	??_EEPROM_WriteString,w
  3946  0F8E  00F4               	movwf	EEPROM_WriteByte@v_eepromData_u8
  3947  0F8F  120A  158A  2744  120A  158A  	fcall	_EEPROM_WriteByte
  3948                           
  3949                           ;eeprom.c: 179: ptr_stringPointer_u8++;
  3950  0F94  3001               	movlw	1
  3951  0F95  00F8               	movwf	??_EEPROM_WriteString
  3952  0F96  0878               	movf	??_EEPROM_WriteString,w
  3953  0F97  07F7               	addwf	EEPROM_WriteString@ptr_stringPointer_u8,f
  3954                           
  3955                           ;eeprom.c: 180: v_eepromAddress_u16++;
  3956  0F98  3001               	movlw	1
  3957  0F99  07F5               	addwf	EEPROM_WriteString@v_eepromAddress_u16,f
  3958  0F9A  1803               	skipnc
  3959  0F9B  0AF6               	incf	EEPROM_WriteString@v_eepromAddress_u16+1,f
  3960  0F9C  3000               	movlw	0
  3961  0F9D  07F6               	addwf	EEPROM_WriteString@v_eepromAddress_u16+1,f
  3962                           
  3963                           ;eeprom.c: 181: }while(*(ptr_stringPointer_u8-1) !=0);
  3964  0F9E  0877               	movf	EEPROM_WriteString@ptr_stringPointer_u8,w
  3965  0F9F  3EFF               	addlw	-1
  3966  0FA0  0084               	movwf	4
  3967  0FA1  1783               	bsf	3,7	;select IRP bank2
  3968  0FA2  0800               	movf	0,w
  3969  0FA3  1903               	btfsc	3,2
  3970  0FA4  0008               	return
  3971  0FA5  2F84               	goto	l57
  3972  0FA6                     __end_of_EEPROM_WriteString:	
  3973                           
  3974                           	psect	text17
  3975  0F44                     __ptext17:	
  3976 ;; *************** function _EEPROM_WriteByte *****************
  3977 ;; Defined at:
  3978 ;;		line 57 in file "../00-libfiles/eeprom.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;  v_eepromAddr    2    2[COMMON] unsigned int 
  3981 ;;  v_eepromData    1    4[COMMON] unsigned char 
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0, pclath, cstack
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3993 ;;      Params:         3       0       0       0       0
  3994 ;;      Locals:         0       0       0       0       0
  3995 ;;      Temps:          0       0       0       0       0
  3996 ;;      Totals:         3       0       0       0       0
  3997 ;;Total ram usage:        3 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; Hardware stack levels required when called:    1
  4000 ;; This function calls:
  4001 ;;		_DELAY_us
  4002 ;; This function is called by:
  4003 ;;		_EEPROM_WriteString
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           
  4008                           ;psect for function _EEPROM_WriteByte
  4009  0F44                     _EEPROM_WriteByte:	
  4010  0F44                     l45:	
  4011                           ;eeprom.c: 59: while(RD || WR);
  4012                           
  4013                           ;incstack = 0
  4014                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  4015                           
  4016  0F44  1683               	bsf	3,5	;RP0=1, select bank3
  4017  0F45  1703               	bsf	3,6	;RP1=1, select bank3
  4018  0F46  180C               	btfsc	12,0	;volsfr
  4019  0F47  2F44               	goto	l45
  4020  0F48  188C               	btfsc	12,1	;volsfr
  4021  0F49  2F44               	goto	l45
  4022                           
  4023                           ;eeprom.c: 60: EEADR=v_eepromAddress_u16;
  4024  0F4A  0872               	movf	EEPROM_WriteByte@v_eepromAddress_u16,w
  4025  0F4B  1283               	bcf	3,5	;RP0=0, select bank2
  4026  0F4C  1703               	bsf	3,6	;RP1=1, select bank2
  4027  0F4D  008D               	movwf	13	;volatile
  4028                           
  4029                           ;eeprom.c: 62: EEDATA=v_eepromData_u8;
  4030  0F4E  0874               	movf	EEPROM_WriteByte@v_eepromData_u8,w
  4031  0F4F  008C               	movwf	12	;volatile
  4032                           
  4033                           ;eeprom.c: 63: WREN=1;
  4034  0F50  1683               	bsf	3,5	;RP0=1, select bank3
  4035  0F51  1703               	bsf	3,6	;RP1=1, select bank3
  4036  0F52  150C               	bsf	12,2	;volsfr
  4037                           
  4038                           ;eeprom.c: 64: EECON2=0x55;
  4039  0F53  3055               	movlw	85
  4040  0F54  008D               	movwf	13	;volsfr
  4041                           
  4042                           ;eeprom.c: 65: EECON2=0xaa;
  4043  0F55  30AA               	movlw	170
  4044  0F56  008D               	movwf	13	;volsfr
  4045                           
  4046                           ;eeprom.c: 66: WR=1;
  4047  0F57  148C               	bsf	12,1	;volsfr
  4048                           
  4049                           ;eeprom.c: 67: DELAY_us(10);
  4050  0F58  300A               	movlw	10
  4051  0F59  00F0               	movwf	DELAY_us@us_count
  4052  0F5A  3000               	movlw	0
  4053  0F5B  00F1               	movwf	DELAY_us@us_count+1
  4054  0F5C  120A  158A  26E5   	fcall	_DELAY_us
  4055                           
  4056                           ;eeprom.c: 68: WREN=0;
  4057  0F5F  1683               	bsf	3,5	;RP0=1, select bank3
  4058  0F60  1703               	bsf	3,6	;RP1=1, select bank3
  4059  0F61  110C               	bcf	12,2	;volsfr
  4060  0F62  0008               	return
  4061  0F63                     __end_of_EEPROM_WriteByte:	
  4062                           
  4063                           	psect	text18
  4064  0F63                     __ptext18:	
  4065 ;; *************** function _EEPROM_ReadString *****************
  4066 ;; Defined at:
  4067 ;;		line 200 in file "../00-libfiles/eeprom.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  v_eepromAddr    2    4[COMMON] unsigned int 
  4070 ;;  ptr_destStri    1    6[COMMON] PTR unsigned char 
  4071 ;;		 -> main@read_str(50), 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;  eeprom_data     1    8[COMMON] unsigned char 
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      void 
  4076 ;; Registers used:
  4077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4083 ;;      Params:         3       0       0       0       0
  4084 ;;      Locals:         1       0       0       0       0
  4085 ;;      Temps:          1       0       0       0       0
  4086 ;;      Totals:         5       0       0       0       0
  4087 ;;Total ram usage:        5 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    2
  4090 ;; This function calls:
  4091 ;;		_EEPROM_ReadByte
  4092 ;; This function is called by:
  4093 ;;		_main
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           
  4098                           ;psect for function _EEPROM_ReadString
  4099  0F63                     _EEPROM_ReadString:	
  4100  0F63                     l62:	
  4101                           ;incstack = 0
  4102                           ; Regs used in _EEPROM_ReadString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4103                           ;eeprom.c: 202: char eeprom_data;
  4104                           ;eeprom.c: 204: do
  4105                           
  4106                           
  4107                           ;eeprom.c: 205: {
  4108                           ;eeprom.c: 206: eeprom_data = EEPROM_ReadByte(v_eepromAddress_u16);
  4109  0F63  0875               	movf	EEPROM_ReadString@v_eepromAddress_u16+1,w
  4110  0F64  00F3               	movwf	EEPROM_ReadByte@v_eepromAddress_u16+1
  4111  0F65  0874               	movf	EEPROM_ReadString@v_eepromAddress_u16,w
  4112  0F66  00F2               	movwf	EEPROM_ReadByte@v_eepromAddress_u16
  4113  0F67  120A  158A  2714  120A  158A  	fcall	_EEPROM_ReadByte
  4114  0F6C  00F7               	movwf	??_EEPROM_ReadString
  4115  0F6D  0877               	movf	??_EEPROM_ReadString,w
  4116  0F6E  00F8               	movwf	EEPROM_ReadString@eeprom_data
  4117                           
  4118                           ;eeprom.c: 207: *ptr_destStringAddress_u8 = eeprom_data;
  4119  0F6F  0878               	movf	EEPROM_ReadString@eeprom_data,w
  4120  0F70  00F7               	movwf	??_EEPROM_ReadString
  4121  0F71  0876               	movf	EEPROM_ReadString@ptr_destStringAddress_u8,w
  4122  0F72  0084               	movwf	4
  4123  0F73  0877               	movf	??_EEPROM_ReadString,w
  4124  0F74  1383               	bcf	3,7	;select IRP bank0
  4125  0F75  0080               	movwf	0
  4126                           
  4127                           ;eeprom.c: 208: ptr_destStringAddress_u8++;
  4128  0F76  3001               	movlw	1
  4129  0F77  00F7               	movwf	??_EEPROM_ReadString
  4130  0F78  0877               	movf	??_EEPROM_ReadString,w
  4131  0F79  07F6               	addwf	EEPROM_ReadString@ptr_destStringAddress_u8,f
  4132                           
  4133                           ;eeprom.c: 209: v_eepromAddress_u16++;
  4134  0F7A  3001               	movlw	1
  4135  0F7B  07F4               	addwf	EEPROM_ReadString@v_eepromAddress_u16,f
  4136  0F7C  1803               	skipnc
  4137  0F7D  0AF5               	incf	EEPROM_ReadString@v_eepromAddress_u16+1,f
  4138  0F7E  3000               	movlw	0
  4139  0F7F  07F5               	addwf	EEPROM_ReadString@v_eepromAddress_u16+1,f
  4140                           
  4141                           ;eeprom.c: 210: }while(eeprom_data!=0);
  4142  0F80  0878               	movf	EEPROM_ReadString@eeprom_data,w
  4143  0F81  1903               	btfsc	3,2
  4144  0F82  0008               	return
  4145  0F83  2F63               	goto	l62
  4146  0F84                     __end_of_EEPROM_ReadString:	
  4147                           
  4148                           	psect	text19
  4149  0F14                     __ptext19:	
  4150 ;; *************** function _EEPROM_ReadByte *****************
  4151 ;; Defined at:
  4152 ;;		line 84 in file "../00-libfiles/eeprom.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  v_eepromAddr    2    2[COMMON] unsigned int 
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;		None
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      unsigned char 
  4159 ;; Registers used:
  4160 ;;		wreg, status,2, status,0, pclath, cstack
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4166 ;;      Params:         2       0       0       0       0
  4167 ;;      Locals:         0       0       0       0       0
  4168 ;;      Temps:          0       0       0       0       0
  4169 ;;      Totals:         2       0       0       0       0
  4170 ;;Total ram usage:        2 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:    1
  4173 ;; This function calls:
  4174 ;;		_DELAY_us
  4175 ;; This function is called by:
  4176 ;;		_EEPROM_ReadString
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           
  4181                           ;psect for function _EEPROM_ReadByte
  4182  0F14                     _EEPROM_ReadByte:	
  4183  0F14                     l51:	
  4184                           ;eeprom.c: 86: while(RD || WR);
  4185                           
  4186                           ;incstack = 0
  4187                           ; Regs used in _EEPROM_ReadByte: [wreg+status,2+status,0+pclath+cstack]
  4188                           
  4189  0F14  1683               	bsf	3,5	;RP0=1, select bank3
  4190  0F15  1703               	bsf	3,6	;RP1=1, select bank3
  4191  0F16  180C               	btfsc	12,0	;volsfr
  4192  0F17  2F14               	goto	l51
  4193  0F18  188C               	btfsc	12,1	;volsfr
  4194  0F19  2F14               	goto	l51
  4195                           
  4196                           ;eeprom.c: 87: EEADR=v_eepromAddress_u16;
  4197  0F1A  0872               	movf	EEPROM_ReadByte@v_eepromAddress_u16,w
  4198  0F1B  1283               	bcf	3,5	;RP0=0, select bank2
  4199  0F1C  1703               	bsf	3,6	;RP1=1, select bank2
  4200  0F1D  008D               	movwf	13	;volatile
  4201                           
  4202                           ;eeprom.c: 89: RD = 1;
  4203  0F1E  1683               	bsf	3,5	;RP0=1, select bank3
  4204  0F1F  1703               	bsf	3,6	;RP1=1, select bank3
  4205  0F20  140C               	bsf	12,0	;volsfr
  4206                           
  4207                           ;eeprom.c: 90: DELAY_us(50);
  4208  0F21  3032               	movlw	50
  4209  0F22  00F0               	movwf	DELAY_us@us_count
  4210  0F23  3000               	movlw	0
  4211  0F24  00F1               	movwf	DELAY_us@us_count+1
  4212  0F25  120A  158A  26E5   	fcall	_DELAY_us
  4213                           
  4214                           ;eeprom.c: 91: return(EEDATA);
  4215  0F28  1283               	bcf	3,5	;RP0=0, select bank2
  4216  0F29  1703               	bsf	3,6	;RP1=1, select bank2
  4217  0F2A  080C               	movf	12,w	;volatile
  4218  0F2B  0008               	return
  4219  0F2C                     __end_of_EEPROM_ReadByte:	
  4220                           
  4221                           	psect	text20
  4222  0EE5                     __ptext20:	
  4223 ;; *************** function _DELAY_us *****************
  4224 ;; Defined at:
  4225 ;;		line 56 in file "../00-libfiles/delay.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  us_count        2    0[COMMON] unsigned int 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		wreg, status,2, status,0
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4239 ;;      Params:         2       0       0       0       0
  4240 ;;      Locals:         0       0       0       0       0
  4241 ;;      Temps:          0       0       0       0       0
  4242 ;;      Totals:         2       0       0       0       0
  4243 ;;Total ram usage:        2 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; This function calls:
  4246 ;;		Nothing
  4247 ;; This function is called by:
  4248 ;;		_EEPROM_WriteByte
  4249 ;;		_EEPROM_ReadByte
  4250 ;;		_DELAY_ms
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           
  4255                           ;psect for function _DELAY_us
  4256  0EE5                     _DELAY_us:	
  4257  0EE5                     l1287:	
  4258                           ;delay.c: 58: while (us_count != 0)
  4259                           
  4260                           ;incstack = 0
  4261                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  4262                           
  4263  0EE5  0870               	movf	DELAY_us@us_count,w
  4264  0EE6  0471               	iorwf	DELAY_us@us_count+1,w
  4265  0EE7  1903               	btfsc	3,2
  4266  0EE8  0008               	return
  4267                           
  4268                           ;delay.c: 59: {
  4269                           ;delay.c: 60: us_count--;
  4270  0EE9  3001               	movlw	1
  4271  0EEA  02F0               	subwf	DELAY_us@us_count,f
  4272  0EEB  3000               	movlw	0
  4273  0EEC  1C03               	skipc
  4274  0EED  03F1               	decf	DELAY_us@us_count+1,f
  4275  0EEE  02F1               	subwf	DELAY_us@us_count+1,f
  4276  0EEF  2EE5               	goto	l1287
  4277  0EF0                     __end_of_DELAY_us:	
  4278  007E                     btemp	set	126	;btemp
  4279  007E                     wtemp	set	126
  4280  007E                     wtemp0	set	126
  4281  0080                     wtemp1	set	128
  4282  0082                     wtemp2	set	130
  4283  0084                     wtemp3	set	132
  4284  0086                     wtemp4	set	134
  4285  0088                     wtemp5	set	136
  4286  007F                     wtemp6	set	127
  4287  007E                     ttemp	set	126
  4288  007E                     ttemp0	set	126
  4289  0081                     ttemp1	set	129
  4290  0084                     ttemp2	set	132
  4291  0087                     ttemp3	set	135
  4292  007F                     ttemp4	set	127
  4293  007E                     ltemp	set	126
  4294  007E                     ltemp0	set	126
  4295  0082                     ltemp1	set	130
  4296  0086                     ltemp2	set	134
  4297  0080                     ltemp3	set	128


Data Sizes:
    Strings     51
    Constant    0
    Data        47
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      74
    BANK1            80     50      50
    BANK3            96     47      94
    BANK2            96      0       0

Pointer List with Targets:

    UART_Printf@str	PTR unsigned char  size(2) Largest target is 50
		 -> main@read_str(BANK1[50]), main@write_str(BANK3[47]), 

    UART_Printf@argList	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_2(CODE[25]), STR_1(CODE[26]), 

    UART_Printf@ptr	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_2(CODE[25]), STR_1(CODE[26]), 

    UART_Printf@argp	PTR void [1] size(1) Largest target is 1
		 -> ?_UART_Printf(BANK0[1]), 

    UART_TxString@ptr_string	PTR unsigned char  size(2) Largest target is 50
		 -> main@read_str(BANK1[50]), main@write_str(BANK3[47]), 

    EEPROM_ReadString@ptr_destStringAddress_u8	PTR unsigned char  size(1) Largest target is 50
		 -> main@read_str(BANK1[50]), 

    EEPROM_WriteString@ptr_stringPointer_u8	PTR unsigned char  size(1) Largest target is 47
		 -> main@write_str(BANK3[47]), 


Critical Paths under _main in COMMON

    _UART_TxString->_UART_TxChar
    _UART_TxFloatNumber->___ftmul
    _UART_TxFloatNumber->___lltoft
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftneg->___lltoft
    ___ftmul->___ftpack
    ___ftadd->___lltoft
    _UART_TxNumber->___lldiv
    ___bmul->___lldiv
    _UART_SetBaudRate->___lldiv
    _EEPROM_WriteString->_EEPROM_WriteByte
    _EEPROM_WriteByte->_DELAY_us
    _EEPROM_ReadString->_EEPROM_ReadByte
    _EEPROM_ReadByte->_DELAY_us

Critical Paths under _main in BANK0

    _main->_UART_Printf
    _UART_Printf->_UART_TxFloatNumber
    _UART_TxFloatNumber->_UART_TxNumber
    ___fttol->___ftmul
    ___ftadd->___ftneg
    _UART_TxNumber->___bmul
    _UART_Init->_UART_SetBaudRate

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               102   102      0   15387
                                             69 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK3     47    47      0
                  _EEPROM_ReadString
                 _EEPROM_WriteString
                          _UART_Init
                        _UART_Printf
 ---------------------------------------------------------------------------------
 (1) _UART_Printf                                         26    24      2   13587
                                             43 BANK0     26    24      2
                        _UART_TxChar
                 _UART_TxFloatNumber
                      _UART_TxNumber
                      _UART_TxString
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _UART_TxString                                        2     0      2      98
                                              1 COMMON     2     0      2
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxFloatNumber                                   8     5      3    9664
                                             35 BANK0      8     5      3
                        _UART_TxChar
                      _UART_TxNumber
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    1790
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     358
                                             10 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                              0 BANK0      3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2100
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2694
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _UART_TxNumber                                       31    26      5    2414
                                              4 BANK0     31    26      5
                        _UART_TxChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4     698
                                             16 BANK0      4     0      4
                   _UART_SetBaudRate
 ---------------------------------------------------------------------------------
 (2) _UART_SetBaudRate                                    16    12      4     623
                                              0 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _EEPROM_WriteString                                   4     1      3     506
                                              5 COMMON     4     1      3
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_WriteByte                                     3     0      3     332
                                              2 COMMON     3     0      3
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (1) _EEPROM_ReadString                                    5     2      3     454
                                              4 COMMON     5     2      3
                    _EEPROM_ReadByte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_ReadByte                                      2     0      2     257
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (3) _DELAY_us                                             2     0      2     182
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_ReadString
     _EEPROM_ReadByte
       _DELAY_us
   _EEPROM_WriteString
     _EEPROM_WriteByte
       _DELAY_us
   _UART_Init
     _UART_SetBaudRate
       ___lldiv
   _UART_Printf
     _UART_TxChar
     _UART_TxFloatNumber
       _UART_TxChar
       _UART_TxNumber
         _UART_TxChar
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       ___ftadd
         ___ftneg (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
     _UART_TxNumber
       _UART_TxChar
       ___bmul
         ___lldiv (ARG)
       ___lldiv
     _UART_TxString
       _UART_TxChar
     ___bmul
       ___lldiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     2F      5E       9       97.9%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     32      32       7       62.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4A      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      E8      12        0.0%
ABS                  0      0      E8       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Feb 22 17:38:02 2016

         UART_SetBaudRate@var_baudRate_u32 0020                                          pc 0002  
                           ___bmul@product 0022                                __CFG_CP$OFF 0000  
                                       l13 00D9                                         l51 0F14  
                                       l45 0F44                                         l62 0F63  
                                       l57 0F84                                         _RD 0C60  
                                       _WR 0C61                                         fsr 0004  
                             ___ftadd@exp1 002F                               ___ftadd@exp2 002E  
                              __CFG_LVP$ON 0000                               ___ftadd@sign 002D  
                                      l103 0ED3                                        l441 0125  
                                      l442 012D                                        l434 0110  
                                      l525 0234                                        l465 0558  
                             __CFG_CPD$OFF 0000            EEPROM_WriteByte@v_eepromData_u8 0074  
                                      fsr0 0004                                        indf 0000  
               __size_of_EEPROM_ReadString 0021                               __CFG_FOSC$HS 0000  
                                     l1301 0405                                       l1215 0F05  
                                     l1303 0409                                       l1231 00E2  
                                     l1219 0F0B                                       l1331 0497  
                                     l1323 0482                                       l1315 0476  
                                     l1307 0414                                       l1235 00E9  
                                     l1325 0417                                       l1245 0115  
                                     l1237 00F5                                       l1405 059F  
                                     l1421 031B                                       l1501 0237  
                                     l1327 0487                                       l1247 011F  
                                     l1239 00FA                                       l1415 0305  
                                     l1265 002A                                       l1337 04AC  
                                     l1345 04D9                                       l1433 035A  
                                     l1505 0245                                       l1513 0FAA  
                                     l1275 0062                                       l1267 003A  
                                     l1355 04EF                                       l1515 0FBC  
                                     l1611 062C                                       l1603 061B  
                                     l1373 051E                                       l1349 04E0  
                                     l1445 0382                                       l1437 036A  
                                     l1621 0647                                       l1605 0620  
                                     l1701 05C4                                       l1287 0EE5  
                                     l1279 006F                                       l1295 03C7  
                                     l1391 056A                                       l1375 052A  
                                     l1367 0509                                       l1623 065D  
                                     l1553 01B3                                       l1385 0548  
                                     l1377 052F                                       l1449 0392  
                                     l1473 01DA                                       l1561 0F2C  
                                     l1641 06B8                                       l1633 0684  
                                     l1395 057C                                       l1387 0554  
                                     l1379 0533                                       l1491 020C  
                                     l1635 0699                                       l1549 0158  
                                     l1493 021C                                       l1653 06FE  
                                     l1647 06DF                                       l1499 0229  
                                     l1691 07AF                                       l1667 073A  
                                     l1659 0725                                       l1685 0796  
                                     l1677 0766                                       l1669 074B  
                                     l1679 0779                                       l1695 07B1  
                                     l1599 05F3                                       l1697 07E3  
                                     l1699 07E9                                       STR_1 0806  
                                     STR_2 0820                                       u1205 00EE  
                                     u1400 03F6                                       u1225 0109  
                                     u1410 03F7                                       u1315 002E  
                                     u2220 0083                                       u2053 0156  
                                     u1245 0118                                       u1335 003C  
                                     u2063 0167                                       u2080 01A0  
                                     u1345 0051                                       u2081 01A1  
                                     u2082 01A6                                       u1355 0063  
                                     u2083 01A7                                       u2075 017A  
                                     u1285 0134                                       u1625 051F  
                                     u1394 03DB                                       u1395 03D8  
                                     u1805 036B                                       u1655 0534  
                                     u1815 0373                                       u1905 01E1  
                                     u1595 050A                                       u1685 0549  
                                     u1765 0327                                       u1855 0393  
                                     u1775 0339                                       u1935 020D  
                                     u1865 039B                                       u1965 022B  
                                     u1995 0FAF                                       _RCIF 0065  
                                     _WREN 0C62                                       _TXIF 0064  
                             __CFG_WRT$OFF 0000                         _UART_TxFloatNumber 024E  
                                     _main 0078                               ___ftpack@arg 0070  
                             ___ftpack@exp 0073                                       btemp 007E  
                                     ltemp 007E                                       start 0000  
                                     ttemp 007E                                       wtemp 007E  
                         __end_of_DELAY_us 0EF0                   __size_of_EEPROM_ReadByte 0018  
                      ?_UART_TxFloatNumber 0043                          ___bmul@multiplier 0023  
                             ___ftmul@cntr 0028                               ___ftmul@sign 0029  
      UART_TxFloatNumber@v_floatNumber_f32 0043                               ___fttol@exp1 0037  
                             ___fttol@lval 0033                                      ?_main 0070  
                                    _EEADR 010D                            __end_of___ftadd 05B9  
                            __CFG_WDTE$OFF 0000                            __end_of___ftneg 0EE5  
                          __end_of___lldiv 0078                            __end_of___ftmul 03BE  
                          __end_of___fttol 024E                                      _RCREG 001A  
                                    _RCSTA 0018                                      _SPBRG 0099  
                                    _TRISC 0087                                      _TXREG 0019  
                                    _TXSTA 0098                               main@read_str 00A0  
                     ??_UART_TxFloatNumber 0046                               ___lltoft@exp 007D  
                       __size_of_UART_Init 0016                              ___ftpack@sign 0074  
                           __CFG_BOREN$OFF 0000                                      pclath 000A  
                                    ltemp0 007E                                      ltemp1 0082  
                                    ltemp2 0086                                      ltemp3 0080  
                                    ttemp0 007E                                      ttemp1 0081  
                                    ttemp2 0084                                      ttemp3 0087  
                                    ttemp4 007F                                      status 0003  
                                    wtemp0 007E                                      wtemp1 0080  
                                    wtemp2 0082                                      wtemp3 0084  
                                    wtemp4 0086                                      wtemp5 0088  
                                    wtemp6 007F                            __initialization 07F0  
                             __end_of_main 00DA                                     ??_main 0065  
                            ___fttol@sign1 0032                                     _EEDATA 010C  
                                   _EECON2 018D                           __end_of___ftpack 0146  
                         __end_of___lltoft 0FD1                          ?_UART_SetBaudRate 0020  
                       ??_UART_SetBaudRate 0024                             __CFG_PWRTE$OFF 0000  
                             ?_UART_TxChar 0070                               ?_UART_Printf 004B  
                        __end_of_UART_Init 001A                                     ___bmul 0F01  
                                ??___ftadd 0029                                  ??___ftneg 007E  
                                ??___lldiv 0078                                  ??___ftmul 0020  
                                ??___fttol 002E                          ??_EEPROM_ReadByte 0074  
                 __end_of_EEPROM_WriteByte 0F63    UART_TxNumber@v_numOfDigitsToTransmit_u8 0028  
                    ___ftmul@f3_as_product 0025                                  ?_DELAY_us 0070  
                       main@eeprom_address 0069                    __end_of__initialization 07FC  
                               ___ftadd@f1 0023                                 ___ftadd@f2 0026  
                    __end_of_UART_TxNumber 04B0                              main@write_str 01BF  
                    __end_of_UART_TxString 0F44                  UART_Printf@v_floatNum_f32 004F  
                               ___ftneg@f1 0020                        ___bmul@multiplicand 0020  
                               ___ftmul@f1 0078                                 ___ftmul@f2 007B  
                               ___fttol@f1 002A                             __pcstackCOMMON 0070  
                             __pidataBANK3 0FD1                                 ___lltoft@c 0078  
                               ??_DELAY_us 0072                __size_of_EEPROM_WriteString 0022  
                               __pmaintext 0078                                    ?___bmul 0020  
      EEPROM_WriteByte@v_eepromAddress_u16 0072                                  ?___ftpack 0070  
                                ?___lltoft 0078                           DELAY_us@us_count 0070  
                               __stringtab 0800                       __size_of_UART_TxChar 0009  
                          __size_of___bmul 0013                       __size_of_UART_Printf 0237  
                                  ___ftadd 04B0                                    ___ftneg 0EDB  
                                  ___lldiv 001A                                    ___ftmul 02ED  
                                  ___fttol 01C0         EEPROM_ReadByte@v_eepromAddress_u16 0072  
    EEPROM_WriteString@v_eepromAddress_u16 0075                                 ??___ftpack 0075  
                               ??___lltoft 007C                                    __ptext1 05B9  
                                  __ptext2 0F2C                                    __ptext3 024E  
                                  __ptext4 0FA6                                    __ptext5 01C0  
                                  __ptext6 0EDB                                    __ptext7 02ED  
                                  __ptext8 04B0                                    __ptext9 00DA  
              __size_of_UART_TxFloatNumber 009F  EEPROM_ReadString@ptr_destStringAddress_u8 0076  
                           UART_Printf@ptr 0061                             UART_Printf@str 0052  
                     end_of_initialization 07FC                             UART_TxNumber@a 0035  
                           UART_TxNumber@i 0042                 UART_TxChar@var_uartData_u8 0070  
                          _EEPROM_ReadByte 0F14                            ___lldiv@divisor 0070  
                          ___lldiv@counter 007D                                  _UART_Init 0004  
                __size_of_UART_SetBaudRate 007A                          ?_EEPROM_WriteByte 0072  
                       ??_EEPROM_WriteByte 0075                          __size_of_DELAY_us 000B  
          UART_TxNumber@v_numericSystem_u8 0041                                ___ftmul@exp 0024  
                           __end_of___bmul 0F14                                 ?_UART_Init 0030  
                      start_initialization 07F0                    __end_of_EEPROM_ReadByte 0F2C  
                                 ??___bmul 0021                                 init_fetch0 0EF0  
                              __pdataBANK3 0190                          _UART_TxNumber$118 003F  
                        __size_of___ftpack 006C                     __size_of_UART_TxNumber 00F2  
                        __size_of___lltoft 002B                                  ___latbits 0002  
                   __size_of_UART_TxString 0018                              __pcstackBANK0 0020  
                            __pcstackBANK1 00A0                              __pcstackBANK3 01BF  
             EEPROM_ReadString@eeprom_data 0078                 __end_of_EEPROM_WriteString 0FA6  
                UART_Init@var_baudRate_u32 0030                                   ?___ftadd 0023  
                                 ?___ftneg 0020                                   ?___lldiv 0070  
                                 ?___ftmul 0078                                   ?___fttol 002A  
                              ??_UART_Init 007E                           _UART_SetBaudRate 0146  
                                __pstrings 0800                                   _DELAY_us 0EE5  
     EEPROM_ReadString@v_eepromAddress_u16 0074                           ?_EEPROM_ReadByte 0072  
                            UART_Printf@ch 0062                              ??_UART_TxChar 0070  
                            _UART_TxNumber 03BE                              ??_UART_Printf 004D  
                            _UART_TxString 0F2C                                  main@F1131 0190  
                  UART_TxString@ptr_string 0071                                __stringbase 0805  
               __end_of_UART_TxFloatNumber 02ED                  __size_of_EEPROM_WriteByte 001F  
                UART_TxNumber@v_number_u32 0024                             ?_UART_TxNumber 0024  
   EEPROM_WriteString@ptr_stringPointer_u8 0077                             ?_UART_TxString 0071  
                      __end_of_UART_TxChar 0EDB                           __size_of___ftadd 0109  
                         __size_of___ftneg 000A                           __size_of___lldiv 005E  
                         __size_of___ftmul 00D1                           __size_of___fttol 008E  
                      __end_of_UART_Printf 07F0                                   ___ftpack 00DA  
                       __end_of__stringtab 0806                                   ___lltoft 0FA6  
                                 __ptext10 03BE                                   __ptext11 0F01  
                                 __ptext20 0EE5                                   __ptext12 0ED2  
                                 __ptext13 0004                                   __ptext14 0146  
                                 __ptext15 001A                                   __ptext16 0F84  
                                 __ptext17 0F44                                   __ptext18 0F63  
                                 __ptext19 0F14                          _EEPROM_ReadString 0F63  
                       ?_EEPROM_ReadString 0074                              __size_of_main 0062  
                      ??_EEPROM_ReadString 0077                            UART_Printf@argp 0064  
                 UART_SetBaudRate@RegValue 002C                  __end_of_EEPROM_ReadString 0F84  
                                 init_ram0 0EF4                            ??_UART_TxNumber 0029  
                 __end_of_UART_SetBaudRate 01C0                            ??_UART_TxString 0073  
                         ___lldiv@dividend 0074                                  stringcode 0800  
                              _UART_TxChar 0ED2                                _UART_Printf 05B9  
                       _EEPROM_WriteString 0F84                           ___lldiv@quotient 0079  
                      ?_EEPROM_WriteString 0075         UART_TxFloatNumber@v_tempNumber_u32 0047  
                                 stringdir 0800                                   stringtab 0800  
    UART_Printf@v_numOfDigitsToTransmit_u8 0063                         UART_Printf@argList 0054  
                         _EEPROM_WriteByte 0F44                       ??_EEPROM_WriteString 0078  
                     UART_Printf@v_num_s16 0059                       UART_Printf@v_num_s32 0055  
                     UART_Printf@v_num_u16 005F                       UART_Printf@v_num_u32 005B  
