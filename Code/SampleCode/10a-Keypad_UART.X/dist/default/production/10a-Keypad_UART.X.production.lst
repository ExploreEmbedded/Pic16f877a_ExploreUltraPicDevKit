

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Feb 22 23:26:41 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     	;# 
    36  0001                     	;# 
    37  0002                     	;# 
    38  0003                     	;# 
    39  0004                     	;# 
    40  0005                     	;# 
    41  0006                     	;# 
    42  0007                     	;# 
    43  0008                     	;# 
    44  0009                     	;# 
    45  000A                     	;# 
    46  000B                     	;# 
    47  000C                     	;# 
    48  000D                     	;# 
    49  000E                     	;# 
    50  000E                     	;# 
    51  000F                     	;# 
    52  0010                     	;# 
    53  0011                     	;# 
    54  0012                     	;# 
    55  0013                     	;# 
    56  0014                     	;# 
    57  0015                     	;# 
    58  0015                     	;# 
    59  0016                     	;# 
    60  0017                     	;# 
    61  0018                     	;# 
    62  0019                     	;# 
    63  001A                     	;# 
    64  001B                     	;# 
    65  001B                     	;# 
    66  001C                     	;# 
    67  001D                     	;# 
    68  001E                     	;# 
    69  001F                     	;# 
    70  0081                     	;# 
    71  0085                     	;# 
    72  0086                     	;# 
    73  0087                     	;# 
    74  0088                     	;# 
    75  0089                     	;# 
    76  008C                     	;# 
    77  008D                     	;# 
    78  008E                     	;# 
    79  0091                     	;# 
    80  0092                     	;# 
    81  0093                     	;# 
    82  0094                     	;# 
    83  0098                     	;# 
    84  0099                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  009F                     	;# 
    89  010C                     	;# 
    90  010D                     	;# 
    91  010E                     	;# 
    92  010F                     	;# 
    93  018C                     	;# 
    94  018D                     	;# 
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0008                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  000E                     	;# 
   111  000F                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0015                     	;# 
   118  0015                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001B                     	;# 
   125  001B                     	;# 
   126  001C                     	;# 
   127  001D                     	;# 
   128  001E                     	;# 
   129  001F                     	;# 
   130  0081                     	;# 
   131  0085                     	;# 
   132  0086                     	;# 
   133  0087                     	;# 
   134  0088                     	;# 
   135  0089                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0006                     	;# 
   162  0007                     	;# 
   163  0008                     	;# 
   164  0009                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000D                     	;# 
   169  000E                     	;# 
   170  000E                     	;# 
   171  000F                     	;# 
   172  0010                     	;# 
   173  0011                     	;# 
   174  0012                     	;# 
   175  0013                     	;# 
   176  0014                     	;# 
   177  0015                     	;# 
   178  0015                     	;# 
   179  0016                     	;# 
   180  0017                     	;# 
   181  0018                     	;# 
   182  0019                     	;# 
   183  001A                     	;# 
   184  001B                     	;# 
   185  001B                     	;# 
   186  001C                     	;# 
   187  001D                     	;# 
   188  001E                     	;# 
   189  001F                     	;# 
   190  0081                     	;# 
   191  0085                     	;# 
   192  0086                     	;# 
   193  0087                     	;# 
   194  0088                     	;# 
   195  0089                     	;# 
   196  008C                     	;# 
   197  008D                     	;# 
   198  008E                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215                           
   216                           	psect	strings
   217  0800                     __pstrings:	
   218  0800                     stringtab:	
   219  0800                     __stringtab:	
   220  0800                     stringcode:	
   221                           ;	String table - string pointers are 1 byte each
   222                           
   223  0800                     stringdir:	
   224  0800  3008               	movlw	high stringdir
   225  0801  008A               	movwf	10
   226  0802  0804               	movf	4,w
   227  0803  0A84               	incf	4,f
   228  0804  0782               	addwf	2,f
   229  0805                     __stringbase:	
   230  0805  3400               	retlw	0
   231  0806                     __end_of__stringtab:	
   232  0806                     _A_KeyLookUptable_U8:	
   233  0806  3430               	retlw	48
   234  0807  3431               	retlw	49
   235  0808  3432               	retlw	50
   236  0809  3433               	retlw	51
   237  080A  3434               	retlw	52
   238  080B  3435               	retlw	53
   239  080C  3436               	retlw	54
   240  080D  3437               	retlw	55
   241  080E  3438               	retlw	56
   242  080F  3439               	retlw	57
   243  0810  3441               	retlw	65
   244  0811  3442               	retlw	66
   245  0812  3443               	retlw	67
   246  0813  3444               	retlw	68
   247  0814  3445               	retlw	69
   248  0815  3446               	retlw	70
   249  0816                     __end_of_A_KeyLookUptable_U8:	
   250  0005                     _PORTA	set	5
   251  0006                     _PORTB	set	6
   252  0007                     _PORTC	set	7
   253  0008                     _PORTD	set	8
   254  0009                     _PORTE	set	9
   255  001A                     _RCREG	set	26
   256  0018                     _RCSTA	set	24
   257  0019                     _TXREG	set	25
   258  0065                     _RCIF	set	101
   259  0064                     _TXIF	set	100
   260  0099                     _SPBRG	set	153
   261  0085                     _TRISA	set	133
   262  0086                     _TRISB	set	134
   263  0087                     _TRISC	set	135
   264  0088                     _TRISD	set	136
   265  0089                     _TRISE	set	137
   266  0098                     _TXSTA	set	152
   267  0816                     STR_1:	
   268  0816  340A               	retlw	10
   269  0817  340D               	retlw	13
   270  0818  3420               	retlw	32	;' '
   271  0819  344B               	retlw	75	;'K'
   272  081A  3465               	retlw	101	;'e'
   273  081B  3479               	retlw	121	;'y'
   274  081C  343A               	retlw	58	;':'
   275  081D  3425               	retlw	37	;'%'
   276  081E  3463               	retlw	99	;'c'
   277  081F  3400               	retlw	0
   278                           
   279                           ; #config settings
   280  0000                     
   281                           	psect	cinit
   282  07F2                     start_initialization:	
   283  07F2                     __initialization:	
   284                           
   285                           ; Clear objects allocated to BANK0
   286  07F2  01EC               	clrf	__pbssBANK0& (0+127)
   287  07F3  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   288  07F4  01EE               	clrf	(__pbssBANK0+2)& (0+127)
   289  07F5  01EF               	clrf	(__pbssBANK0+3)& (0+127)
   290                           
   291                           ; Clear objects allocated to BANK1
   292  07F6  1683               	bsf	3,5	;RP0=1, select bank1
   293  07F7  1303               	bcf	3,6	;RP1=0, select bank1
   294  07F8  01A0               	clrf	__pbssBANK1& (0+127)
   295  07F9  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   296  07FA  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   297  07FB  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   298  07FC                     end_of_initialization:	
   299                           ;End of C runtime variable initialization code
   300                           
   301  07FC                     __end_of__initialization:	
   302  07FC  0183               	clrf	3
   303  07FD  120A  158A  2C5B   	ljmp	_main	;jump to C main() function
   304                           
   305                           	psect	bssBANK0
   306  006C                     __pbssBANK0:	
   307  006C                     _A_RowsPins_U8:	
   308  006C                     	ds	4
   309                           
   310                           	psect	bssBANK1
   311  00A0                     __pbssBANK1:	
   312  00A0                     _A_ColsPins_U8:	
   313  00A0                     	ds	4
   314                           
   315                           	psect	cstackCOMMON
   316  0070                     __pcstackCOMMON:	
   317  0070                     ?_DELAY_us:	
   318  0070                     ?_GPIO_PinDirection:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_GPIO_PinWrite:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_GPIO_PinRead:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ??_GPIO_PinRead:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_keypad_WaitForKeyRelease:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_keypad_WaitForKeyPress:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_KEYPAD_GetKey:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_UART_TxChar:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ??_UART_TxChar:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_UART_TxString:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_main:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?___ftpack:	
   352                           ; 2 bytes @ 0x0
   353                           
   354  0070                     ?___lldiv:	
   355                           ; 3 bytes @ 0x0
   356                           
   357  0070                     GPIO_PinDirection@var_pinDirn_u8:	
   358                           ; 4 bytes @ 0x0
   359                           
   360  0070                     GPIO_PinWrite@var_pinValue_u8:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     UART_TxChar@var_uartData_u8:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     DELAY_us@us_count:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ___ftpack@arg:	
   370                           ; 2 bytes @ 0x0
   371                           
   372  0070                     ___lldiv@divisor:	
   373                           ; 3 bytes @ 0x0
   374                           
   375                           
   376                           ; 4 bytes @ 0x0
   377  0070                     	ds	1
   378  0071                     ??_GPIO_PinDirection:	
   379  0071                     ??_GPIO_PinWrite:	
   380                           ; 1 bytes @ 0x1
   381                           
   382  0071                     ??_UART_TxString:	
   383                           ; 1 bytes @ 0x1
   384                           
   385                           
   386                           ; 1 bytes @ 0x1
   387  0071                     	ds	1
   388  0072                     ??_DELAY_us:	
   389  0072                     GPIO_PinRead@var_portNumber_u8:	
   390                           ; 1 bytes @ 0x2
   391                           
   392  0072                     UART_TxString@ptr_string:	
   393                           ; 1 bytes @ 0x2
   394                           
   395                           
   396                           ; 1 bytes @ 0x2
   397  0072                     	ds	1
   398  0073                     GPIO_PinDirection@var_portNumber_u8:	
   399  0073                     GPIO_PinWrite@var_portNumber_u8:	
   400                           ; 1 bytes @ 0x3
   401                           
   402  0073                     GPIO_PinRead@returnStatus:	
   403                           ; 1 bytes @ 0x3
   404                           
   405  0073                     ___ftpack@exp:	
   406                           ; 1 bytes @ 0x3
   407                           
   408                           
   409                           ; 1 bytes @ 0x3
   410  0073                     	ds	1
   411  0074                     GPIO_PinDirection@enm_pinNumber:	
   412  0074                     GPIO_PinWrite@enm_pinNumber:	
   413                           ; 1 bytes @ 0x4
   414                           
   415  0074                     GPIO_PinRead@enm_pinNumber:	
   416                           ; 1 bytes @ 0x4
   417                           
   418  0074                     ___ftpack@sign:	
   419                           ; 1 bytes @ 0x4
   420                           
   421  0074                     ___lldiv@dividend:	
   422                           ; 1 bytes @ 0x4
   423                           
   424                           
   425                           ; 4 bytes @ 0x4
   426  0074                     	ds	1
   427  0075                     ??___ftpack:	
   428  0075                     ?_KEYPAD_Init:	
   429                           ; 1 bytes @ 0x5
   430                           
   431  0075                     ??_keypad_WaitForKeyRelease:	
   432                           ; 1 bytes @ 0x5
   433                           
   434  0075                     ??_keypad_WaitForKeyPress:	
   435                           ; 1 bytes @ 0x5
   436                           
   437  0075                     KEYPAD_Init@row_1:	
   438                           ; 1 bytes @ 0x5
   439                           
   440                           
   441                           ; 1 bytes @ 0x5
   442  0075                     	ds	1
   443  0076                     KEYPAD_Init@row_2:	
   444  0076                     keypad_WaitForKeyRelease@v_keyStatus_u8:	
   445                           ; 1 bytes @ 0x6
   446                           
   447  0076                     keypad_WaitForKeyPress@v_keyStatus_u8:	
   448                           ; 1 bytes @ 0x6
   449                           
   450                           
   451                           ; 1 bytes @ 0x6
   452  0076                     	ds	1
   453  0077                     KEYPAD_Init@row_3:	
   454  0077                     keypad_WaitForKeyRelease@i:	
   455                           ; 1 bytes @ 0x7
   456                           
   457  0077                     keypad_WaitForKeyPress@i:	
   458                           ; 1 bytes @ 0x7
   459                           
   460                           
   461                           ; 1 bytes @ 0x7
   462  0077                     	ds	1
   463  0078                     ??_KEYPAD_GetKey:	
   464  0078                     ??___lldiv:	
   465                           ; 1 bytes @ 0x8
   466                           
   467  0078                     ?___ftmul:	
   468                           ; 1 bytes @ 0x8
   469                           
   470  0078                     ?___lltoft:	
   471                           ; 3 bytes @ 0x8
   472                           
   473  0078                     KEYPAD_Init@col_0:	
   474                           ; 3 bytes @ 0x8
   475                           
   476  0078                     ___ftmul@f1:	
   477                           ; 1 bytes @ 0x8
   478                           
   479  0078                     ___lltoft@c:	
   480                           ; 3 bytes @ 0x8
   481                           
   482                           
   483                           ; 4 bytes @ 0x8
   484  0078                     	ds	1
   485  0079                     KEYPAD_Init@col_1:	
   486  0079                     ___lldiv@quotient:	
   487                           ; 1 bytes @ 0x9
   488                           
   489                           
   490                           ; 4 bytes @ 0x9
   491  0079                     	ds	1
   492  007A                     KEYPAD_Init@col_2:	
   493                           
   494                           ; 1 bytes @ 0xA
   495  007A                     	ds	1
   496  007B                     KEYPAD_Init@col_3:	
   497  007B                     KEYPAD_GetKey@v_KeyPressed_u8:	
   498                           ; 1 bytes @ 0xB
   499                           
   500  007B                     ___ftmul@f2:	
   501                           ; 1 bytes @ 0xB
   502                           
   503                           
   504                           ; 3 bytes @ 0xB
   505  007B                     	ds	1
   506  007C                     ??_KEYPAD_Init:	
   507  007C                     ??___lltoft:	
   508                           ; 1 bytes @ 0xC
   509                           
   510  007C                     KEYPAD_GetKey@j:	
   511                           ; 1 bytes @ 0xC
   512                           
   513                           
   514                           ; 1 bytes @ 0xC
   515  007C                     	ds	1
   516  007D                     KEYPAD_GetKey@i:	
   517  007D                     ___lldiv@counter:	
   518                           ; 1 bytes @ 0xD
   519                           
   520  007D                     ___lltoft@exp:	
   521                           ; 1 bytes @ 0xD
   522                           
   523                           
   524                           ; 1 bytes @ 0xD
   525  007D                     	ds	1
   526  007E                     ??_UART_Init:	
   527  007E                     ??___ftneg:	
   528                           ; 1 bytes @ 0xE
   529                           
   530                           
   531                           	psect	cstackBANK0
   532  0020                     __pcstackBANK0:	
   533                           ; 1 bytes @ 0xE
   534                           
   535  0020                     ?_UART_SetBaudRate:	
   536  0020                     ?___bmul:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0020                     ??___ftmul:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0020                     ?___ftneg:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0020                     KEYPAD_Init@row_0:	
   546                           ; 3 bytes @ 0x0
   547                           
   548  0020                     ___bmul@multiplicand:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0020                     ___ftneg@f1:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0020                     UART_SetBaudRate@var_baudRate_u32:	
   555                           ; 3 bytes @ 0x0
   556                           
   557                           
   558                           ; 4 bytes @ 0x0
   559  0020                     	ds	1
   560  0021                     ??___bmul:	
   561  0021                     KEYPAD_Init@i:	
   562                           ; 1 bytes @ 0x1
   563                           
   564                           
   565                           ; 1 bytes @ 0x1
   566  0021                     	ds	1
   567  0022                     ___bmul@product:	
   568                           
   569                           ; 1 bytes @ 0x2
   570  0022                     	ds	1
   571  0023                     ?___ftadd:	
   572  0023                     ___bmul@multiplier:	
   573                           ; 3 bytes @ 0x3
   574                           
   575  0023                     ___ftadd@f1:	
   576                           ; 1 bytes @ 0x3
   577                           
   578                           
   579                           ; 3 bytes @ 0x3
   580  0023                     	ds	1
   581  0024                     ??_UART_SetBaudRate:	
   582  0024                     ?_UART_TxNumber:	
   583                           ; 1 bytes @ 0x4
   584                           
   585  0024                     ___ftmul@exp:	
   586                           ; 1 bytes @ 0x4
   587                           
   588  0024                     UART_TxNumber@v_number_u32:	
   589                           ; 1 bytes @ 0x4
   590                           
   591                           
   592                           ; 4 bytes @ 0x4
   593  0024                     	ds	1
   594  0025                     ___ftmul@f3_as_product:	
   595                           
   596                           ; 3 bytes @ 0x5
   597  0025                     	ds	1
   598  0026                     ___ftadd@f2:	
   599                           
   600                           ; 3 bytes @ 0x6
   601  0026                     	ds	2
   602  0028                     UART_TxNumber@v_numOfDigitsToTransmit_u8:	
   603  0028                     ___ftmul@cntr:	
   604                           ; 1 bytes @ 0x8
   605                           
   606                           
   607                           ; 1 bytes @ 0x8
   608  0028                     	ds	1
   609  0029                     ??_UART_TxNumber:	
   610  0029                     ??___ftadd:	
   611                           ; 1 bytes @ 0x9
   612                           
   613  0029                     ___ftmul@sign:	
   614                           ; 1 bytes @ 0x9
   615                           
   616                           
   617                           ; 1 bytes @ 0x9
   618  0029                     	ds	1
   619  002A                     ?___fttol:	
   620  002A                     ___fttol@f1:	
   621                           ; 4 bytes @ 0xA
   622                           
   623                           
   624                           ; 3 bytes @ 0xA
   625  002A                     	ds	2
   626  002C                     UART_SetBaudRate@RegValue:	
   627                           
   628                           ; 4 bytes @ 0xC
   629  002C                     	ds	1
   630  002D                     ___ftadd@sign:	
   631                           
   632                           ; 1 bytes @ 0xD
   633  002D                     	ds	1
   634  002E                     ??___fttol:	
   635  002E                     ___ftadd@exp2:	
   636                           ; 1 bytes @ 0xE
   637                           
   638                           
   639                           ; 1 bytes @ 0xE
   640  002E                     	ds	1
   641  002F                     ___ftadd@exp1:	
   642                           
   643                           ; 1 bytes @ 0xF
   644  002F                     	ds	1
   645  0030                     ?_UART_Init:	
   646  0030                     UART_Init@var_baudRate_u32:	
   647                           ; 1 bytes @ 0x10
   648                           
   649                           
   650                           ; 4 bytes @ 0x10
   651  0030                     	ds	2
   652  0032                     ___fttol@sign1:	
   653                           
   654                           ; 1 bytes @ 0x12
   655  0032                     	ds	1
   656  0033                     ___fttol@lval:	
   657                           
   658                           ; 4 bytes @ 0x13
   659  0033                     	ds	2
   660  0035                     UART_TxNumber@a:	
   661                           
   662                           ; 10 bytes @ 0x15
   663  0035                     	ds	2
   664  0037                     ___fttol@exp1:	
   665                           
   666                           ; 1 bytes @ 0x17
   667  0037                     	ds	8
   668  003F                     _UART_TxNumber$207:	
   669                           
   670                           ; 2 bytes @ 0x1F
   671  003F                     	ds	2
   672  0041                     UART_TxNumber@v_numericSystem_u8:	
   673                           
   674                           ; 1 bytes @ 0x21
   675  0041                     	ds	1
   676  0042                     UART_TxNumber@i:	
   677                           
   678                           ; 1 bytes @ 0x22
   679  0042                     	ds	1
   680  0043                     ?_UART_TxFloatNumber:	
   681  0043                     UART_TxFloatNumber@v_floatNumber_f32:	
   682                           ; 1 bytes @ 0x23
   683                           
   684                           
   685                           ; 3 bytes @ 0x23
   686  0043                     	ds	3
   687  0046                     ??_UART_TxFloatNumber:	
   688                           
   689                           ; 1 bytes @ 0x26
   690  0046                     	ds	1
   691  0047                     UART_TxFloatNumber@v_tempNumber_u32:	
   692                           
   693                           ; 4 bytes @ 0x27
   694  0047                     	ds	4
   695  004B                     ?_UART_Printf:	
   696                           
   697                           ; 1 bytes @ 0x2B
   698  004B                     	ds	2
   699  004D                     ??_UART_Printf:	
   700                           
   701                           ; 1 bytes @ 0x2D
   702  004D                     	ds	2
   703  004F                     UART_Printf@v_floatNum_f32:	
   704                           
   705                           ; 3 bytes @ 0x2F
   706  004F                     	ds	3
   707  0052                     UART_Printf@str:	
   708                           
   709                           ; 1 bytes @ 0x32
   710  0052                     	ds	1
   711  0053                     UART_Printf@argList:	
   712                           
   713                           ; 1 bytes @ 0x33
   714  0053                     	ds	1
   715  0054                     UART_Printf@v_num_s32:	
   716                           
   717                           ; 4 bytes @ 0x34
   718  0054                     	ds	4
   719  0058                     UART_Printf@v_num_s16:	
   720                           
   721                           ; 2 bytes @ 0x38
   722  0058                     	ds	2
   723  005A                     UART_Printf@v_num_u32:	
   724                           
   725                           ; 4 bytes @ 0x3A
   726  005A                     	ds	4
   727  005E                     UART_Printf@v_num_u16:	
   728                           
   729                           ; 2 bytes @ 0x3E
   730  005E                     	ds	2
   731  0060                     UART_Printf@ptr:	
   732                           
   733                           ; 1 bytes @ 0x40
   734  0060                     	ds	1
   735  0061                     UART_Printf@ch:	
   736                           
   737                           ; 1 bytes @ 0x41
   738  0061                     	ds	1
   739  0062                     UART_Printf@v_numOfDigitsToTransmit_u8:	
   740                           
   741                           ; 1 bytes @ 0x42
   742  0062                     	ds	1
   743  0063                     UART_Printf@argp:	
   744                           
   745                           ; 1 bytes @ 0x43
   746  0063                     	ds	1
   747  0064                     ??_main:	
   748                           
   749                           ; 1 bytes @ 0x44
   750  0064                     	ds	7
   751  006B                     main@key:	
   752                           
   753                           ; 1 bytes @ 0x4B
   754  006B                     	ds	1
   755                           
   756                           	psect	maintext
   757  0C5B                     __pmaintext:	
   758 ;;
   759 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
   760 ;;
   761 ;; *************** function _main *****************
   762 ;; Defined at:
   763 ;;		line 38 in file "main.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;		None
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  key             1   75[BANK0 ] unsigned char 
   768 ;; Return value:  Size  Location     Type
   769 ;;                  2  297[None  ] int 
   770 ;; Registers used:
   771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : B00/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   777 ;;      Params:         0       0       0       0       0
   778 ;;      Locals:         0       1       0       0       0
   779 ;;      Temps:          0       7       0       0       0
   780 ;;      Totals:         0       8       0       0       0
   781 ;;Total ram usage:        8 bytes
   782 ;; Hardware stack levels required when called:    4
   783 ;; This function calls:
   784 ;;		_KEYPAD_GetKey
   785 ;;		_KEYPAD_Init
   786 ;;		_UART_Init
   787 ;;		_UART_Printf
   788 ;; This function is called by:
   789 ;;		Startup code after reset
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           
   794                           ;psect for function _main
   795  0C5B                     _main:	
   796                           
   797                           ;main.c: 40: uint8_t key;
   798                           ;main.c: 41: UART_Init(9600);
   799                           
   800                           ;incstack = 0
   801                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   802  0C5B  3000               	movlw	0
   803  0C5C  1283               	bcf	3,5	;RP0=0, select bank0
   804  0C5D  1303               	bcf	3,6	;RP1=0, select bank0
   805  0C5E  00B3               	movwf	UART_Init@var_baudRate_u32+3
   806  0C5F  3000               	movlw	0
   807  0C60  00B2               	movwf	UART_Init@var_baudRate_u32+2
   808  0C61  3025               	movlw	37
   809  0C62  00B1               	movwf	UART_Init@var_baudRate_u32+1
   810  0C63  3080               	movlw	128
   811  0C64  00B0               	movwf	UART_Init@var_baudRate_u32
   812  0C65  120A  158A  241A  120A  158A  	fcall	_UART_Init
   813                           
   814                           ;main.c: 42: KEYPAD_Init(PB_0,PB_1,PB_2,PB_3,PB_4,PB_5,PB_6,PB_7);
   815  0C6A  3009               	movlw	9
   816  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
   817  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
   818  0C6D  00E4               	movwf	??_main
   819  0C6E  0864               	movf	??_main,w
   820  0C6F  00F5               	movwf	KEYPAD_Init@row_1
   821  0C70  300A               	movlw	10
   822  0C71  00E5               	movwf	??_main+1
   823  0C72  0865               	movf	??_main+1,w
   824  0C73  00F6               	movwf	KEYPAD_Init@row_2
   825  0C74  300B               	movlw	11
   826  0C75  00E6               	movwf	??_main+2
   827  0C76  0866               	movf	??_main+2,w
   828  0C77  00F7               	movwf	KEYPAD_Init@row_3
   829  0C78  300C               	movlw	12
   830  0C79  00E7               	movwf	??_main+3
   831  0C7A  0867               	movf	??_main+3,w
   832  0C7B  00F8               	movwf	KEYPAD_Init@col_0
   833  0C7C  300D               	movlw	13
   834  0C7D  00E8               	movwf	??_main+4
   835  0C7E  0868               	movf	??_main+4,w
   836  0C7F  00F9               	movwf	KEYPAD_Init@col_1
   837  0C80  300E               	movlw	14
   838  0C81  00E9               	movwf	??_main+5
   839  0C82  0869               	movf	??_main+5,w
   840  0C83  00FA               	movwf	KEYPAD_Init@col_2
   841  0C84  300F               	movlw	15
   842  0C85  00EA               	movwf	??_main+6
   843  0C86  086A               	movf	??_main+6,w
   844  0C87  00FB               	movwf	KEYPAD_Init@col_3
   845  0C88  3008               	movlw	8
   846  0C89  120A  158A  24A6  120A  158A  	fcall	_KEYPAD_Init
   847  0C8E                     l2307:	
   848                           ;main.c: 43: while (1)
   849                           
   850                           
   851                           ;main.c: 44: {
   852                           ;main.c: 45: key = KEYPAD_GetKey();
   853  0C8E  120A  158A  2778  120A  158A  	fcall	_KEYPAD_GetKey
   854  0C93  1283               	bcf	3,5	;RP0=0, select bank0
   855  0C94  1303               	bcf	3,6	;RP1=0, select bank0
   856  0C95  00E4               	movwf	??_main
   857  0C96  0864               	movf	??_main,w
   858  0C97  00EB               	movwf	main@key
   859                           
   860                           ;main.c: 46: UART_Printf("\n\r Key:%c", key);
   861  0C98  086B               	movf	main@key,w
   862  0C99  00E4               	movwf	??_main
   863  0C9A  01E5               	clrf	??_main+1
   864  0C9B  0864               	movf	??_main,w
   865  0C9C  00CB               	movwf	?_UART_Printf
   866  0C9D  0865               	movf	??_main+1,w
   867  0C9E  00CC               	movwf	?_UART_Printf+1
   868  0C9F  3011               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   869  0CA0  120A  118A  25C0  120A  158A  	fcall	_UART_Printf
   870  0CA5  2C8E               	goto	l2307
   871  0CA6                     __end_of_main:	
   872                           ;main.c: 47: }
   873                           ;main.c: 49: return (0);
   874                           ;	Return value of _main is never used
   875                           
   876                           
   877                           	psect	text1
   878  05C0                     __ptext1:	
   879 ;; *************** function _UART_Printf *****************
   880 ;; Defined at:
   881 ;;		line 411 in file "../00-libfiles/uart.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  argList         1    wreg     PTR const unsigned char 
   884 ;;		 -> STR_1(10), 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  argList         1   51[BANK0 ] PTR const unsigned char 
   887 ;;		 -> STR_1(10), 
   888 ;;  v_num_u32       4   58[BANK0 ] unsigned long 
   889 ;;  v_num_s32       4   52[BANK0 ] long 
   890 ;;  v_floatNum_f    3   47[BANK0 ] long 
   891 ;;  v_num_u16       2   62[BANK0 ] unsigned int 
   892 ;;  v_num_s16       2   56[BANK0 ] int 
   893 ;;  argp            1   67[BANK0 ] PTR void [1]
   894 ;;		 -> ?_UART_Printf(1), 
   895 ;;  v_numOfDigit    1   66[BANK0 ] unsigned char 
   896 ;;  ch              1   65[BANK0 ] unsigned char 
   897 ;;  ptr             1   64[BANK0 ] PTR const unsigned char 
   898 ;;		 -> STR_1(10), 
   899 ;;  str             1   50[BANK0 ] PTR unsigned char 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         0       2       0       0       0
   910 ;;      Locals:         0      21       0       0       0
   911 ;;      Temps:          0       2       0       0       0
   912 ;;      Totals:         0      25       0       0       0
   913 ;;Total ram usage:       25 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; Hardware stack levels required when called:    3
   916 ;; This function calls:
   917 ;;		_UART_TxChar
   918 ;;		_UART_TxFloatNumber
   919 ;;		_UART_TxNumber
   920 ;;		_UART_TxString
   921 ;;		___bmul
   922 ;; This function is called by:
   923 ;;		_main
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           
   928                           ;psect for function _UART_Printf
   929  05C0                     _UART_Printf:	
   930                           
   931                           ;incstack = 0
   932                           ; Regs used in _UART_Printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   933                           ;UART_Printf@argList stored from wreg
   934  05C0  1283               	bcf	3,5	;RP0=0, select bank0
   935  05C1  1303               	bcf	3,6	;RP1=0, select bank0
   936  05C2  00D3               	movwf	UART_Printf@argList
   937                           
   938                           ;uart.c: 413: const char *ptr;
   939                           ;uart.c: 414: va_list argp;
   940                           ;uart.c: 415: sint16_t v_num_s16;
   941                           ;uart.c: 416: sint32_t v_num_s32;
   942                           ;uart.c: 417: uint16_t v_num_u16;
   943                           ;uart.c: 418: uint32_t v_num_u32;
   944                           ;uart.c: 419: char *str;
   945                           ;uart.c: 420: char ch;
   946                           ;uart.c: 421: uint8_t v_numOfDigitsToTransmit_u8;
   947                           ;uart.c: 423: double v_floatNum_f32;
   948                           ;uart.c: 427: *argp = __va_start();
   949  05C3  304B               	movlw	(low (?_UART_Printf| 0))& (0+255)
   950  05C4  00CD               	movwf	??_UART_Printf
   951  05C5  084D               	movf	??_UART_Printf,w
   952  05C6  00E3               	movwf	UART_Printf@argp
   953                           
   954                           ;uart.c: 430: for(ptr = argList; *ptr != '\0'; ptr++)
   955  05C7  0853               	movf	UART_Printf@argList,w
   956  05C8  00CD               	movwf	??_UART_Printf
   957  05C9  084D               	movf	??_UART_Printf,w
   958  05CA  00E0               	movwf	UART_Printf@ptr
   959  05CB                     l2273:	
   960  05CB  0860               	movf	UART_Printf@ptr,w
   961  05CC  0084               	movwf	4
   962  05CD  120A  158A  2000  120A  118A  	fcall	stringdir
   963  05D2  3A00               	xorlw	0
   964  05D3  1903               	btfsc	3,2
   965  05D4  0008               	return
   966                           
   967                           ;uart.c: 431: {
   968                           ;uart.c: 433: ch= *ptr;
   969  05D5  0860               	movf	UART_Printf@ptr,w
   970  05D6  0084               	movwf	4
   971  05D7  120A  158A  2000  120A  118A  	fcall	stringdir
   972  05DC  00CD               	movwf	??_UART_Printf
   973  05DD  084D               	movf	??_UART_Printf,w
   974  05DE  00E1               	movwf	UART_Printf@ch
   975                           
   976                           ;uart.c: 434: if(ch == '%')
   977  05DF  3025               	movlw	37
   978  05E0  0661               	xorwf	UART_Printf@ch,w
   979  05E1  1D03               	btfss	3,2
   980  05E2  2FE5               	goto	l2269
   981                           
   982                           ;uart.c: 435: {
   983                           ;uart.c: 436: ptr++;
   984  05E3  3001               	movlw	1
   985  05E4  00CD               	movwf	??_UART_Printf
   986  05E5  084D               	movf	??_UART_Printf,w
   987  05E6  07E0               	addwf	UART_Printf@ptr,f
   988                           
   989                           ;uart.c: 437: ch = *ptr;
   990  05E7  0860               	movf	UART_Printf@ptr,w
   991  05E8  0084               	movwf	4
   992  05E9  120A  158A  2000  120A  118A  	fcall	stringdir
   993  05EE  00CD               	movwf	??_UART_Printf
   994  05EF  084D               	movf	??_UART_Printf,w
   995  05F0  00E1               	movwf	UART_Printf@ch
   996                           
   997                           ;uart.c: 438: if((ch>=0x30) && (ch<=0x39))
   998  05F1  3030               	movlw	48
   999  05F2  0261               	subwf	UART_Printf@ch,w
  1000  05F3  1C03               	skipc
  1001  05F4  2E22               	goto	l2175
  1002  05F5  303A               	movlw	58
  1003  05F6  0261               	subwf	UART_Printf@ch,w
  1004  05F7  1803               	skipnc
  1005  05F8  2E22               	goto	l2175
  1006                           
  1007                           ;uart.c: 439: {
  1008                           ;uart.c: 440: v_numOfDigitsToTransmit_u8 = 0;
  1009  05F9  01E2               	clrf	UART_Printf@v_numOfDigitsToTransmit_u8
  1010  05FA                     l2171:	
  1011                           ;uart.c: 441: while((ch>=0x30) && (ch<=0x39))
  1012                           
  1013  05FA  3030               	movlw	48
  1014  05FB  0261               	subwf	UART_Printf@ch,w
  1015  05FC  1C03               	skipc
  1016  05FD  2FB3               	goto	l2267
  1017  05FE  303A               	movlw	58
  1018  05FF  0261               	subwf	UART_Printf@ch,w
  1019  0600  1803               	btfsc	3,0
  1020  0601  2FB3               	goto	l2267
  1021                           
  1022                           ;uart.c: 442: {
  1023                           ;uart.c: 443: v_numOfDigitsToTransmit_u8 = (v_numOfDigitsToTransmit_u8 * 10) + (ch-0x30)
      +                          ;
  1024  0602  300A               	movlw	10
  1025  0603  00CD               	movwf	??_UART_Printf
  1026  0604  084D               	movf	??_UART_Printf,w
  1027  0605  00A0               	movwf	___bmul@multiplicand
  1028  0606  0862               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1029  0607  120A  158A  23F2  120A  118A  	fcall	___bmul
  1030  060C  1283               	bcf	3,5	;RP0=0, select bank0
  1031  060D  1303               	bcf	3,6	;RP1=0, select bank0
  1032  060E  0761               	addwf	UART_Printf@ch,w
  1033  060F  3ED0               	addlw	208
  1034  0610  00CE               	movwf	??_UART_Printf+1
  1035  0611  084E               	movf	??_UART_Printf+1,w
  1036  0612  00E2               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1037                           
  1038                           ;uart.c: 444: ptr++;
  1039  0613  3001               	movlw	1
  1040  0614  00CD               	movwf	??_UART_Printf
  1041  0615  084D               	movf	??_UART_Printf,w
  1042  0616  07E0               	addwf	UART_Printf@ptr,f
  1043                           
  1044                           ;uart.c: 445: ch = *ptr;
  1045  0617  0860               	movf	UART_Printf@ptr,w
  1046  0618  0084               	movwf	4
  1047  0619  120A  158A  2000  120A  118A  	fcall	stringdir
  1048  061E  00CD               	movwf	??_UART_Printf
  1049  061F  084D               	movf	??_UART_Printf,w
  1050  0620  00E1               	movwf	UART_Printf@ch
  1051  0621  2DFA               	goto	l2171
  1052  0622                     l2175:	
  1053                           ;uart.c: 446: }
  1054                           ;uart.c: 447: }
  1055                           
  1056                           
  1057                           ;uart.c: 448: else
  1058                           ;uart.c: 449: {
  1059                           ;uart.c: 450: v_numOfDigitsToTransmit_u8 = 0xffu;
  1060  0622  30FF               	movlw	255
  1061  0623  00CD               	movwf	??_UART_Printf
  1062  0624  084D               	movf	??_UART_Printf,w
  1063  0625  00E2               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1064                           
  1065                           ;uart.c: 451: }
  1066                           ;uart.c: 454: switch(ch)
  1067  0626  2FB3               	goto	l2267
  1068  0627                     l2177:	
  1069                           ;uart.c: 455: {
  1070                           ;uart.c: 456: case 'C':
  1071                           
  1072                           
  1073                           ;uart.c: 457: case 'c':
  1074                           ;uart.c: 458: ch = (*(uint8_t *)__va_arg((*(uint8_t **)argp), (uint8_t)0));
  1075  0627  0863               	movf	UART_Printf@argp,w
  1076  0628  0084               	movwf	4
  1077  0629  1383               	bcf	3,7	;select IRP bank0
  1078  062A  0800               	movf	0,w
  1079  062B  00CD               	movwf	??_UART_Printf
  1080  062C  084D               	movf	??_UART_Printf,w
  1081  062D  00E1               	movwf	UART_Printf@ch
  1082  062E  3002               	movlw	2
  1083  062F  00CD               	movwf	??_UART_Printf
  1084  0630  084D               	movf	??_UART_Printf,w
  1085  0631  07E3               	addwf	UART_Printf@argp,f
  1086  0632  2FE5               	goto	l2269
  1087  0633                     l2183:	
  1088                           ;uart.c: 462: case 'd':
  1089                           
  1090                           ;uart.c: 460: break;
  1091                           
  1092                           ;uart.c: 459: UART_TxChar(ch);
  1093                           
  1094                           
  1095                           ;uart.c: 463: v_num_s16 = (*(sint16_t *)__va_arg((*(sint16_t **)argp), (sint16_t)0));
  1096  0633  1283               	bcf	3,5	;RP0=0, select bank0
  1097  0634  1303               	bcf	3,6	;RP1=0, select bank0
  1098  0635  0863               	movf	UART_Printf@argp,w
  1099  0636  0084               	movwf	4
  1100  0637  1383               	bcf	3,7	;select IRP bank0
  1101  0638  0800               	movf	0,w
  1102  0639  00D8               	movwf	UART_Printf@v_num_s16
  1103  063A  0A84               	incf	4,f
  1104  063B  0800               	movf	0,w
  1105  063C  00D9               	movwf	UART_Printf@v_num_s16+1
  1106  063D  3002               	movlw	2
  1107  063E  00CD               	movwf	??_UART_Printf
  1108  063F  084D               	movf	??_UART_Printf,w
  1109  0640  07E3               	addwf	UART_Printf@argp,f
  1110                           
  1111                           ;uart.c: 464: if(v_num_s16<0)
  1112  0641  1FD9               	btfss	UART_Printf@v_num_s16+1,7
  1113  0642  2E4E               	goto	l2193
  1114                           
  1115                           ;uart.c: 465: {
  1116                           ;uart.c: 466: v_num_s16 = -v_num_s16;
  1117  0643  09D8               	comf	UART_Printf@v_num_s16,f
  1118  0644  09D9               	comf	UART_Printf@v_num_s16+1,f
  1119  0645  0AD8               	incf	UART_Printf@v_num_s16,f
  1120  0646  1903               	skipnz
  1121  0647  0AD9               	incf	UART_Printf@v_num_s16+1,f
  1122                           
  1123                           ;uart.c: 467: UART_TxChar('-');
  1124  0648  302D               	movlw	45
  1125  0649  120A  158A  23DF  120A  118A  	fcall	_UART_TxChar
  1126  064E                     l2193:	
  1127                           
  1128                           ;uart.c: 468: }
  1129                           ;uart.c: 469: UART_TxNumber(10u,v_num_s16,v_numOfDigitsToTransmit_u8);
  1130  064E  1283               	bcf	3,5	;RP0=0, select bank0
  1131  064F  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0650  0858               	movf	UART_Printf@v_num_s16,w
  1133  0651  00A4               	movwf	UART_TxNumber@v_number_u32
  1134  0652  0859               	movf	UART_Printf@v_num_s16+1,w
  1135  0653  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1136  0654  3000               	movlw	0
  1137  0655  1BA5               	btfsc	UART_TxNumber@v_number_u32+1,7
  1138  0656  30FF               	movlw	255
  1139  0657  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1140  0658  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1141  0659  0862               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1142  065A  00CD               	movwf	??_UART_Printf
  1143  065B  084D               	movf	??_UART_Printf,w
  1144  065C  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1145  065D  300A               	movlw	10
  1146  065E  120A  118A  23C5  120A  118A  	fcall	_UART_TxNumber
  1147                           
  1148                           ;uart.c: 470: break;
  1149  0663  2FEB               	goto	l2271
  1150  0664                     l2195:	
  1151                           ;uart.c: 472: case 'D':
  1152                           
  1153                           
  1154                           ;uart.c: 473: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
  1155  0664  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0665  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0666  0863               	movf	UART_Printf@argp,w
  1158  0667  0084               	movwf	4
  1159  0668  1383               	bcf	3,7	;select IRP bank0
  1160  0669  0800               	movf	0,w
  1161  066A  00D4               	movwf	UART_Printf@v_num_s32
  1162  066B  0A84               	incf	4,f
  1163  066C  0800               	movf	0,w
  1164  066D  00D5               	movwf	UART_Printf@v_num_s32+1
  1165  066E  0A84               	incf	4,f
  1166  066F  0800               	movf	0,w
  1167  0670  00D6               	movwf	UART_Printf@v_num_s32+2
  1168  0671  0A84               	incf	4,f
  1169  0672  0800               	movf	0,w
  1170  0673  00D7               	movwf	UART_Printf@v_num_s32+3
  1171  0674  3004               	movlw	4
  1172  0675  00CD               	movwf	??_UART_Printf
  1173  0676  084D               	movf	??_UART_Printf,w
  1174  0677  07E3               	addwf	UART_Printf@argp,f
  1175                           
  1176                           ;uart.c: 474: if(v_num_s32<0)
  1177  0678  1FD7               	btfss	UART_Printf@v_num_s32+3,7
  1178  0679  2E8B               	goto	l2205
  1179                           
  1180                           ;uart.c: 475: {
  1181                           ;uart.c: 476: v_num_s32 = -v_num_s32;
  1182  067A  09D4               	comf	UART_Printf@v_num_s32,f
  1183  067B  09D5               	comf	UART_Printf@v_num_s32+1,f
  1184  067C  09D6               	comf	UART_Printf@v_num_s32+2,f
  1185  067D  09D7               	comf	UART_Printf@v_num_s32+3,f
  1186  067E  0AD4               	incf	UART_Printf@v_num_s32,f
  1187  067F  1903               	skipnz
  1188  0680  0AD5               	incf	UART_Printf@v_num_s32+1,f
  1189  0681  1903               	skipnz
  1190  0682  0AD6               	incf	UART_Printf@v_num_s32+2,f
  1191  0683  1903               	skipnz
  1192  0684  0AD7               	incf	UART_Printf@v_num_s32+3,f
  1193                           
  1194                           ;uart.c: 477: UART_TxChar('-');
  1195  0685  302D               	movlw	45
  1196  0686  120A  158A  23DF  120A  118A  	fcall	_UART_TxChar
  1197  068B                     l2205:	
  1198                           
  1199                           ;uart.c: 478: }
  1200                           ;uart.c: 479: UART_TxNumber(10u,v_num_s32,v_numOfDigitsToTransmit_u8);
  1201  068B  1283               	bcf	3,5	;RP0=0, select bank0
  1202  068C  1303               	bcf	3,6	;RP1=0, select bank0
  1203  068D  0857               	movf	UART_Printf@v_num_s32+3,w
  1204  068E  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1205  068F  0856               	movf	UART_Printf@v_num_s32+2,w
  1206  0690  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1207  0691  0855               	movf	UART_Printf@v_num_s32+1,w
  1208  0692  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1209  0693  0854               	movf	UART_Printf@v_num_s32,w
  1210  0694  00A4               	movwf	UART_TxNumber@v_number_u32
  1211  0695  0862               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1212  0696  00CD               	movwf	??_UART_Printf
  1213  0697  084D               	movf	??_UART_Printf,w
  1214  0698  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1215  0699  300A               	movlw	10
  1216  069A  120A  118A  23C5  120A  118A  	fcall	_UART_TxNumber
  1217                           
  1218                           ;uart.c: 480: break;
  1219  069F  2FEB               	goto	l2271
  1220  06A0                     l2207:	
  1221                           ;uart.c: 482: case 'u':
  1222                           
  1223                           
  1224                           ;uart.c: 483: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1225  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  1226  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  1227  06A2  0863               	movf	UART_Printf@argp,w
  1228  06A3  0084               	movwf	4
  1229  06A4  1383               	bcf	3,7	;select IRP bank0
  1230  06A5  0800               	movf	0,w
  1231  06A6  00DE               	movwf	UART_Printf@v_num_u16
  1232  06A7  0A84               	incf	4,f
  1233  06A8  0800               	movf	0,w
  1234  06A9  00DF               	movwf	UART_Printf@v_num_u16+1
  1235  06AA  3002               	movlw	2
  1236  06AB  00CD               	movwf	??_UART_Printf
  1237  06AC  084D               	movf	??_UART_Printf,w
  1238  06AD  07E3               	addwf	UART_Printf@argp,f
  1239                           
  1240                           ;uart.c: 484: UART_TxNumber(10u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1241  06AE  085E               	movf	UART_Printf@v_num_u16,w
  1242  06AF  00A4               	movwf	UART_TxNumber@v_number_u32
  1243  06B0  085F               	movf	UART_Printf@v_num_u16+1,w
  1244  06B1  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1245  06B2  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1246  06B3  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1247  06B4  0862               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1248  06B5  00CD               	movwf	??_UART_Printf
  1249  06B6  084D               	movf	??_UART_Printf,w
  1250  06B7  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1251  06B8  300A               	movlw	10
  1252  06B9  120A  118A  23C5  120A  118A  	fcall	_UART_TxNumber
  1253                           
  1254                           ;uart.c: 485: break;
  1255  06BE  2FEB               	goto	l2271
  1256  06BF                     l2213:	
  1257                           ;uart.c: 487: case 'U':
  1258                           
  1259                           
  1260                           ;uart.c: 488: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1261  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  1262  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  1263  06C1  0863               	movf	UART_Printf@argp,w
  1264  06C2  0084               	movwf	4
  1265  06C3  1383               	bcf	3,7	;select IRP bank0
  1266  06C4  0800               	movf	0,w
  1267  06C5  00DA               	movwf	UART_Printf@v_num_u32
  1268  06C6  0A84               	incf	4,f
  1269  06C7  0800               	movf	0,w
  1270  06C8  00DB               	movwf	UART_Printf@v_num_u32+1
  1271  06C9  0A84               	incf	4,f
  1272  06CA  0800               	movf	0,w
  1273  06CB  00DC               	movwf	UART_Printf@v_num_u32+2
  1274  06CC  0A84               	incf	4,f
  1275  06CD  0800               	movf	0,w
  1276  06CE  00DD               	movwf	UART_Printf@v_num_u32+3
  1277  06CF  3004               	movlw	4
  1278  06D0  00CD               	movwf	??_UART_Printf
  1279  06D1  084D               	movf	??_UART_Printf,w
  1280  06D2  07E3               	addwf	UART_Printf@argp,f
  1281                           
  1282                           ;uart.c: 489: UART_TxNumber(10u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1283  06D3  085D               	movf	UART_Printf@v_num_u32+3,w
  1284  06D4  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1285  06D5  085C               	movf	UART_Printf@v_num_u32+2,w
  1286  06D6  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1287  06D7  085B               	movf	UART_Printf@v_num_u32+1,w
  1288  06D8  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1289  06D9  085A               	movf	UART_Printf@v_num_u32,w
  1290  06DA  00A4               	movwf	UART_TxNumber@v_number_u32
  1291  06DB  0862               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1292  06DC  00CD               	movwf	??_UART_Printf
  1293  06DD  084D               	movf	??_UART_Printf,w
  1294  06DE  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1295  06DF  300A               	movlw	10
  1296  06E0  120A  118A  23C5  120A  118A  	fcall	_UART_TxNumber
  1297                           
  1298                           ;uart.c: 490: break;
  1299  06E5  2FEB               	goto	l2271
  1300  06E6                     l2219:	
  1301                           ;uart.c: 492: case 'x':
  1302                           
  1303                           
  1304                           ;uart.c: 493: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1305  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  1306  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  1307  06E8  0863               	movf	UART_Printf@argp,w
  1308  06E9  0084               	movwf	4
  1309  06EA  1383               	bcf	3,7	;select IRP bank0
  1310  06EB  0800               	movf	0,w
  1311  06EC  00DE               	movwf	UART_Printf@v_num_u16
  1312  06ED  0A84               	incf	4,f
  1313  06EE  0800               	movf	0,w
  1314  06EF  00DF               	movwf	UART_Printf@v_num_u16+1
  1315  06F0  3002               	movlw	2
  1316  06F1  00CD               	movwf	??_UART_Printf
  1317  06F2  084D               	movf	??_UART_Printf,w
  1318  06F3  07E3               	addwf	UART_Printf@argp,f
  1319                           
  1320                           ;uart.c: 494: UART_TxNumber(16u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1321  06F4  085E               	movf	UART_Printf@v_num_u16,w
  1322  06F5  00A4               	movwf	UART_TxNumber@v_number_u32
  1323  06F6  085F               	movf	UART_Printf@v_num_u16+1,w
  1324  06F7  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1325  06F8  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1326  06F9  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1327  06FA  0862               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1328  06FB  00CD               	movwf	??_UART_Printf
  1329  06FC  084D               	movf	??_UART_Printf,w
  1330  06FD  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1331  06FE  3010               	movlw	16
  1332  06FF  120A  118A  23C5  120A  118A  	fcall	_UART_TxNumber
  1333                           
  1334                           ;uart.c: 495: break;
  1335  0704  2FEB               	goto	l2271
  1336  0705                     l2225:	
  1337                           ;uart.c: 497: case 'X':
  1338                           
  1339                           
  1340                           ;uart.c: 498: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1341  0705  1283               	bcf	3,5	;RP0=0, select bank0
  1342  0706  1303               	bcf	3,6	;RP1=0, select bank0
  1343  0707  0863               	movf	UART_Printf@argp,w
  1344  0708  0084               	movwf	4
  1345  0709  1383               	bcf	3,7	;select IRP bank0
  1346  070A  0800               	movf	0,w
  1347  070B  00DA               	movwf	UART_Printf@v_num_u32
  1348  070C  0A84               	incf	4,f
  1349  070D  0800               	movf	0,w
  1350  070E  00DB               	movwf	UART_Printf@v_num_u32+1
  1351  070F  0A84               	incf	4,f
  1352  0710  0800               	movf	0,w
  1353  0711  00DC               	movwf	UART_Printf@v_num_u32+2
  1354  0712  0A84               	incf	4,f
  1355  0713  0800               	movf	0,w
  1356  0714  00DD               	movwf	UART_Printf@v_num_u32+3
  1357  0715  3004               	movlw	4
  1358  0716  00CD               	movwf	??_UART_Printf
  1359  0717  084D               	movf	??_UART_Printf,w
  1360  0718  07E3               	addwf	UART_Printf@argp,f
  1361                           
  1362                           ;uart.c: 499: UART_TxNumber(16u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1363  0719  085D               	movf	UART_Printf@v_num_u32+3,w
  1364  071A  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1365  071B  085C               	movf	UART_Printf@v_num_u32+2,w
  1366  071C  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1367  071D  085B               	movf	UART_Printf@v_num_u32+1,w
  1368  071E  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1369  071F  085A               	movf	UART_Printf@v_num_u32,w
  1370  0720  00A4               	movwf	UART_TxNumber@v_number_u32
  1371  0721  0862               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1372  0722  00CD               	movwf	??_UART_Printf
  1373  0723  084D               	movf	??_UART_Printf,w
  1374  0724  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1375  0725  3010               	movlw	16
  1376  0726  120A  118A  23C5  120A  118A  	fcall	_UART_TxNumber
  1377                           
  1378                           ;uart.c: 500: break;
  1379  072B  2FEB               	goto	l2271
  1380  072C                     l2231:	
  1381                           ;uart.c: 503: case 'b':
  1382                           
  1383                           
  1384                           ;uart.c: 504: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1385  072C  1283               	bcf	3,5	;RP0=0, select bank0
  1386  072D  1303               	bcf	3,6	;RP1=0, select bank0
  1387  072E  0863               	movf	UART_Printf@argp,w
  1388  072F  0084               	movwf	4
  1389  0730  1383               	bcf	3,7	;select IRP bank0
  1390  0731  0800               	movf	0,w
  1391  0732  00DE               	movwf	UART_Printf@v_num_u16
  1392  0733  0A84               	incf	4,f
  1393  0734  0800               	movf	0,w
  1394  0735  00DF               	movwf	UART_Printf@v_num_u16+1
  1395  0736  3002               	movlw	2
  1396  0737  00CD               	movwf	??_UART_Printf
  1397  0738  084D               	movf	??_UART_Printf,w
  1398  0739  07E3               	addwf	UART_Printf@argp,f
  1399                           
  1400                           ;uart.c: 506: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1401  073A  0A62               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1402  073B  1D03               	btfss	3,2
  1403  073C  2F41               	goto	l2239
  1404                           
  1405                           ;uart.c: 507: v_numOfDigitsToTransmit_u8 = 16;
  1406  073D  3010               	movlw	16
  1407  073E  00CD               	movwf	??_UART_Printf
  1408  073F  084D               	movf	??_UART_Printf,w
  1409  0740  00E2               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1410  0741                     l2239:	
  1411                           
  1412                           ;uart.c: 509: UART_TxNumber(2u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1413  0741  085E               	movf	UART_Printf@v_num_u16,w
  1414  0742  00A4               	movwf	UART_TxNumber@v_number_u32
  1415  0743  085F               	movf	UART_Printf@v_num_u16+1,w
  1416  0744  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1417  0745  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1418  0746  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1419  0747  0862               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1420  0748  00CD               	movwf	??_UART_Printf
  1421  0749  084D               	movf	??_UART_Printf,w
  1422  074A  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1423  074B  3002               	movlw	2
  1424  074C  120A  118A  23C5  120A  118A  	fcall	_UART_TxNumber
  1425                           
  1426                           ;uart.c: 510: break;
  1427  0751  2FEB               	goto	l2271
  1428  0752                     l2241:	
  1429                           ;uart.c: 512: case 'B':
  1430                           
  1431                           
  1432                           ;uart.c: 513: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1433  0752  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0753  1303               	bcf	3,6	;RP1=0, select bank0
  1435  0754  0863               	movf	UART_Printf@argp,w
  1436  0755  0084               	movwf	4
  1437  0756  1383               	bcf	3,7	;select IRP bank0
  1438  0757  0800               	movf	0,w
  1439  0758  00DA               	movwf	UART_Printf@v_num_u32
  1440  0759  0A84               	incf	4,f
  1441  075A  0800               	movf	0,w
  1442  075B  00DB               	movwf	UART_Printf@v_num_u32+1
  1443  075C  0A84               	incf	4,f
  1444  075D  0800               	movf	0,w
  1445  075E  00DC               	movwf	UART_Printf@v_num_u32+2
  1446  075F  0A84               	incf	4,f
  1447  0760  0800               	movf	0,w
  1448  0761  00DD               	movwf	UART_Printf@v_num_u32+3
  1449  0762  3004               	movlw	4
  1450  0763  00CD               	movwf	??_UART_Printf
  1451  0764  084D               	movf	??_UART_Printf,w
  1452  0765  07E3               	addwf	UART_Printf@argp,f
  1453                           
  1454                           ;uart.c: 515: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1455  0766  0A62               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1456  0767  1D03               	btfss	3,2
  1457  0768  2F6D               	goto	l2249
  1458                           
  1459                           ;uart.c: 516: v_numOfDigitsToTransmit_u8 = 32;
  1460  0769  3020               	movlw	32
  1461  076A  00CD               	movwf	??_UART_Printf
  1462  076B  084D               	movf	??_UART_Printf,w
  1463  076C  00E2               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1464  076D                     l2249:	
  1465                           
  1466                           ;uart.c: 518: UART_TxNumber(2u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1467  076D  085D               	movf	UART_Printf@v_num_u32+3,w
  1468  076E  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1469  076F  085C               	movf	UART_Printf@v_num_u32+2,w
  1470  0770  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1471  0771  085B               	movf	UART_Printf@v_num_u32+1,w
  1472  0772  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1473  0773  085A               	movf	UART_Printf@v_num_u32,w
  1474  0774  00A4               	movwf	UART_TxNumber@v_number_u32
  1475  0775  0862               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1476  0776  00CD               	movwf	??_UART_Printf
  1477  0777  084D               	movf	??_UART_Printf,w
  1478  0778  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1479  0779  3002               	movlw	2
  1480  077A  120A  118A  23C5  120A  118A  	fcall	_UART_TxNumber
  1481                           
  1482                           ;uart.c: 519: break;
  1483  077F  2FEB               	goto	l2271
  1484  0780                     l2251:	
  1485                           ;uart.c: 522: case 'F':
  1486                           
  1487                           
  1488                           ;uart.c: 523: case 'f':
  1489                           ;uart.c: 525: v_floatNum_f32 = (*(double *)__va_arg((*(double **)argp), (double)0));
  1490  0780  1283               	bcf	3,5	;RP0=0, select bank0
  1491  0781  1303               	bcf	3,6	;RP1=0, select bank0
  1492  0782  0863               	movf	UART_Printf@argp,w
  1493  0783  0084               	movwf	4
  1494  0784  1383               	bcf	3,7	;select IRP bank0
  1495  0785  0800               	movf	0,w
  1496  0786  00CF               	movwf	UART_Printf@v_floatNum_f32
  1497  0787  0A84               	incf	4,f
  1498  0788  0800               	movf	0,w
  1499  0789  00D0               	movwf	UART_Printf@v_floatNum_f32+1
  1500  078A  0A84               	incf	4,f
  1501  078B  0800               	movf	0,w
  1502  078C  00D1               	movwf	UART_Printf@v_floatNum_f32+2
  1503  078D  3003               	movlw	3
  1504  078E  00CD               	movwf	??_UART_Printf
  1505  078F  084D               	movf	??_UART_Printf,w
  1506  0790  07E3               	addwf	UART_Printf@argp,f
  1507                           
  1508                           ;uart.c: 526: UART_TxFloatNumber(v_floatNum_f32);
  1509  0791  084F               	movf	UART_Printf@v_floatNum_f32,w
  1510  0792  00C3               	movwf	UART_TxFloatNumber@v_floatNumber_f32
  1511  0793  0850               	movf	UART_Printf@v_floatNum_f32+1,w
  1512  0794  00C4               	movwf	UART_TxFloatNumber@v_floatNumber_f32+1
  1513  0795  0851               	movf	UART_Printf@v_floatNum_f32+2,w
  1514  0796  00C5               	movwf	UART_TxFloatNumber@v_floatNumber_f32+2
  1515  0797  120A  118A  20A3  120A  118A  	fcall	_UART_TxFloatNumber
  1516                           
  1517                           ;uart.c: 528: break;
  1518  079C  2FEB               	goto	l2271
  1519  079D                     l2257:	
  1520                           ;uart.c: 531: case 'S':
  1521                           
  1522                           
  1523                           ;uart.c: 532: case 's':
  1524                           ;uart.c: 533: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  1525  079D  1283               	bcf	3,5	;RP0=0, select bank0
  1526  079E  1303               	bcf	3,6	;RP1=0, select bank0
  1527  079F  0863               	movf	UART_Printf@argp,w
  1528  07A0  0084               	movwf	4
  1529  07A1  1383               	bcf	3,7	;select IRP bank0
  1530  07A2  0800               	movf	0,w
  1531  07A3  00CD               	movwf	??_UART_Printf
  1532  07A4  084D               	movf	??_UART_Printf,w
  1533  07A5  00D2               	movwf	UART_Printf@str
  1534  07A6  3001               	movlw	1
  1535  07A7  00CD               	movwf	??_UART_Printf
  1536  07A8  084D               	movf	??_UART_Printf,w
  1537  07A9  07E3               	addwf	UART_Printf@argp,f
  1538                           
  1539                           ;uart.c: 534: UART_TxString(str);
  1540  07AA  0852               	movf	UART_Printf@str,w
  1541  07AB  120A  158A  2405  120A  118A  	fcall	_UART_TxString
  1542                           
  1543                           ;uart.c: 535: break;
  1544  07B0  2FEB               	goto	l2271
  1545  07B1                     l2263:	
  1546                           ;uart.c: 537: case '%':
  1547                           
  1548                           
  1549                           ;uart.c: 538: UART_TxChar('%');
  1550  07B1  3025               	movlw	37
  1551  07B2  2FE6               	goto	L1
  1552  07B3                     l2267:	
  1553                           ;uart.c: 540: }
  1554                           
  1555                           ;uart.c: 539: break;
  1556                           
  1557  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1558  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1559  07B5  0861               	movf	UART_Printf@ch,w
  1560                           
  1561                           ; Switch size 1, requested type "space"
  1562                           ; Number of cases is 15, Range of values is 37 to 120
  1563                           ; switch strategies available:
  1564                           ; Name         Instructions Cycles
  1565                           ; simple_byte           46    24 (average)
  1566                           ; direct_byte          263    11 (fixed)
  1567                           ; jumptable            263     9 (fixed)
  1568                           ;	Chosen strategy is simple_byte
  1569  07B6  3A25               	xorlw	37	; case 37
  1570  07B7  1903               	skipnz
  1571  07B8  2FB1               	goto	l2263
  1572  07B9  3A67               	xorlw	103	; case 66
  1573  07BA  1903               	skipnz
  1574  07BB  2F52               	goto	l2241
  1575  07BC  3A01               	xorlw	1	; case 67
  1576  07BD  1903               	skipnz
  1577  07BE  2E27               	goto	l2177
  1578  07BF  3A07               	xorlw	7	; case 68
  1579  07C0  1903               	skipnz
  1580  07C1  2E64               	goto	l2195
  1581  07C2  3A02               	xorlw	2	; case 70
  1582  07C3  1903               	skipnz
  1583  07C4  2F80               	goto	l2251
  1584  07C5  3A15               	xorlw	21	; case 83
  1585  07C6  1903               	skipnz
  1586  07C7  2F9D               	goto	l2257
  1587  07C8  3A06               	xorlw	6	; case 85
  1588  07C9  1903               	skipnz
  1589  07CA  2EBF               	goto	l2213
  1590  07CB  3A0D               	xorlw	13	; case 88
  1591  07CC  1903               	skipnz
  1592  07CD  2F05               	goto	l2225
  1593  07CE  3A3A               	xorlw	58	; case 98
  1594  07CF  1903               	skipnz
  1595  07D0  2F2C               	goto	l2231
  1596  07D1  3A01               	xorlw	1	; case 99
  1597  07D2  1903               	skipnz
  1598  07D3  2E27               	goto	l2177
  1599  07D4  3A07               	xorlw	7	; case 100
  1600  07D5  1903               	skipnz
  1601  07D6  2E33               	goto	l2183
  1602  07D7  3A02               	xorlw	2	; case 102
  1603  07D8  1903               	skipnz
  1604  07D9  2F80               	goto	l2251
  1605  07DA  3A15               	xorlw	21	; case 115
  1606  07DB  1903               	skipnz
  1607  07DC  2F9D               	goto	l2257
  1608  07DD  3A06               	xorlw	6	; case 117
  1609  07DE  1903               	skipnz
  1610  07DF  2EA0               	goto	l2207
  1611  07E0  3A0D               	xorlw	13	; case 120
  1612  07E1  1903               	skipnz
  1613  07E2  2EE6               	goto	l2219
  1614  07E3  2FEB               	goto	l2271
  1615                           
  1616                           ;uart.c: 541: }
  1617  07E4  2FEB               	goto	l2271
  1618  07E5                     l2269:	
  1619                           
  1620                           ;uart.c: 542: else
  1621                           ;uart.c: 543: {
  1622                           ;uart.c: 545: UART_TxChar(ch);
  1623  07E5  0861               	movf	UART_Printf@ch,w
  1624  07E6                     L1:	
  1625  07E6  120A  158A  23DF  120A  118A  	fcall	_UART_TxChar
  1626  07EB                     l2271:	
  1627  07EB  3001               	movlw	1
  1628  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  1629  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  1630  07EE  00CD               	movwf	??_UART_Printf
  1631  07EF  084D               	movf	??_UART_Printf,w
  1632  07F0  07E0               	addwf	UART_Printf@ptr,f
  1633  07F1  2DCB               	goto	l2273
  1634  07F2                     __end_of_UART_Printf:	
  1635                           
  1636                           	psect	text2
  1637  0C05                     __ptext2:	
  1638 ;; *************** function _UART_TxString *****************
  1639 ;; Defined at:
  1640 ;;		line 168 in file "../00-libfiles/uart.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  ptr_string      1    wreg     PTR unsigned char 
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  ptr_string      1    2[COMMON] PTR unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1654 ;;      Params:         0       0       0       0       0
  1655 ;;      Locals:         1       0       0       0       0
  1656 ;;      Temps:          1       0       0       0       0
  1657 ;;      Totals:         2       0       0       0       0
  1658 ;;Total ram usage:        2 bytes
  1659 ;; Hardware stack levels used:    1
  1660 ;; Hardware stack levels required when called:    1
  1661 ;; This function calls:
  1662 ;;		_UART_TxChar
  1663 ;; This function is called by:
  1664 ;;		_UART_Printf
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           
  1669                           ;psect for function _UART_TxString
  1670  0C05                     _UART_TxString:	
  1671                           
  1672                           ;incstack = 0
  1673                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1674                           ;UART_TxString@ptr_string stored from wreg
  1675  0C05  00F2               	movwf	UART_TxString@ptr_string
  1676  0C06                     l2051:	
  1677                           ;uart.c: 170: while(*ptr_string)
  1678                           
  1679  0C06  0872               	movf	UART_TxString@ptr_string,w
  1680  0C07  0084               	movwf	4
  1681  0C08  1383               	bcf	3,7	;select IRP bank0
  1682  0C09  0800               	movf	0,w
  1683  0C0A  1903               	btfsc	3,2
  1684  0C0B  0008               	return
  1685                           
  1686                           ;uart.c: 171: UART_TxChar(*ptr_string++);
  1687  0C0C  0872               	movf	UART_TxString@ptr_string,w
  1688  0C0D  0084               	movwf	4
  1689  0C0E  1383               	bcf	3,7	;select IRP bank0
  1690  0C0F  0800               	movf	0,w
  1691  0C10  120A  158A  23DF  120A  158A  	fcall	_UART_TxChar
  1692  0C15  3001               	movlw	1
  1693  0C16  00F1               	movwf	??_UART_TxString
  1694  0C17  0871               	movf	??_UART_TxString,w
  1695  0C18  07F2               	addwf	UART_TxString@ptr_string,f
  1696  0C19  2C06               	goto	l2051
  1697  0C1A                     __end_of_UART_TxString:	
  1698                           
  1699                           	psect	text3
  1700  00A3                     __ptext3:	
  1701 ;; *************** function _UART_TxFloatNumber *****************
  1702 ;; Defined at:
  1703 ;;		line 348 in file "../00-libfiles/uart.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  v_floatNumbe    3   35[BANK0 ] float 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  v_tempNumber    4   39[BANK0 ] unsigned long 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1717 ;;      Params:         0       3       0       0       0
  1718 ;;      Locals:         0       4       0       0       0
  1719 ;;      Temps:          0       1       0       0       0
  1720 ;;      Totals:         0       8       0       0       0
  1721 ;;Total ram usage:        8 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:    2
  1724 ;; This function calls:
  1725 ;;		_UART_TxChar
  1726 ;;		_UART_TxNumber
  1727 ;;		___ftadd
  1728 ;;		___ftmul
  1729 ;;		___ftneg
  1730 ;;		___fttol
  1731 ;;		___lltoft
  1732 ;; This function is called by:
  1733 ;;		_UART_Printf
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           
  1738                           ;psect for function _UART_TxFloatNumber
  1739  00A3                     _UART_TxFloatNumber:	
  1740                           
  1741                           ;uart.c: 350: uint32_t v_tempNumber_u32;
  1742                           ;uart.c: 357: v_tempNumber_u32 = (uint32_t) v_floatNumber_f32;
  1743                           
  1744                           ;incstack = 0
  1745                           ; Regs used in _UART_TxFloatNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1746  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1747  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1748  00A5  0843               	movf	UART_TxFloatNumber@v_floatNumber_f32,w
  1749  00A6  00AA               	movwf	___fttol@f1
  1750  00A7  0844               	movf	UART_TxFloatNumber@v_floatNumber_f32+1,w
  1751  00A8  00AB               	movwf	___fttol@f1+1
  1752  00A9  0845               	movf	UART_TxFloatNumber@v_floatNumber_f32+2,w
  1753  00AA  00AC               	movwf	___fttol@f1+2
  1754  00AB  120A  118A  2015  120A  118A  	fcall	___fttol
  1755  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1756  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1757  00B2  082D               	movf	?___fttol+3,w
  1758  00B3  00CA               	movwf	UART_TxFloatNumber@v_tempNumber_u32+3
  1759  00B4  082C               	movf	?___fttol+2,w
  1760  00B5  00C9               	movwf	UART_TxFloatNumber@v_tempNumber_u32+2
  1761  00B6  082B               	movf	?___fttol+1,w
  1762  00B7  00C8               	movwf	UART_TxFloatNumber@v_tempNumber_u32+1
  1763  00B8  082A               	movf	?___fttol,w
  1764  00B9  00C7               	movwf	UART_TxFloatNumber@v_tempNumber_u32
  1765                           
  1766                           ;uart.c: 358: UART_TxNumber(10u,v_tempNumber_u32,0xffu);
  1767  00BA  084A               	movf	UART_TxFloatNumber@v_tempNumber_u32+3,w
  1768  00BB  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1769  00BC  0849               	movf	UART_TxFloatNumber@v_tempNumber_u32+2,w
  1770  00BD  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1771  00BE  0848               	movf	UART_TxFloatNumber@v_tempNumber_u32+1,w
  1772  00BF  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1773  00C0  0847               	movf	UART_TxFloatNumber@v_tempNumber_u32,w
  1774  00C1  00A4               	movwf	UART_TxNumber@v_number_u32
  1775  00C2  30FF               	movlw	255
  1776  00C3  00C6               	movwf	??_UART_TxFloatNumber
  1777  00C4  0846               	movf	??_UART_TxFloatNumber,w
  1778  00C5  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1779  00C6  300A               	movlw	10
  1780  00C7  120A  118A  23C5  120A  118A  	fcall	_UART_TxNumber
  1781                           
  1782                           ;uart.c: 360: UART_TxChar('.');
  1783  00CC  302E               	movlw	46
  1784  00CD  120A  158A  23DF  120A  118A  	fcall	_UART_TxChar
  1785                           
  1786                           ;uart.c: 362: v_floatNumber_f32 = v_floatNumber_f32 - v_tempNumber_u32;
  1787  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1788  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1789  00D4  0843               	movf	UART_TxFloatNumber@v_floatNumber_f32,w
  1790  00D5  00A3               	movwf	___ftadd@f1
  1791  00D6  0844               	movf	UART_TxFloatNumber@v_floatNumber_f32+1,w
  1792  00D7  00A4               	movwf	___ftadd@f1+1
  1793  00D8  0845               	movf	UART_TxFloatNumber@v_floatNumber_f32+2,w
  1794  00D9  00A5               	movwf	___ftadd@f1+2
  1795  00DA  084A               	movf	UART_TxFloatNumber@v_tempNumber_u32+3,w
  1796  00DB  00FB               	movwf	___lltoft@c+3
  1797  00DC  0849               	movf	UART_TxFloatNumber@v_tempNumber_u32+2,w
  1798  00DD  00FA               	movwf	___lltoft@c+2
  1799  00DE  0848               	movf	UART_TxFloatNumber@v_tempNumber_u32+1,w
  1800  00DF  00F9               	movwf	___lltoft@c+1
  1801  00E0  0847               	movf	UART_TxFloatNumber@v_tempNumber_u32,w
  1802  00E1  00F8               	movwf	___lltoft@c
  1803  00E2  120A  158A  2430  120A  118A  	fcall	___lltoft
  1804  00E7  0878               	movf	?___lltoft,w
  1805  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1806  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1807  00EA  00A0               	movwf	___ftneg@f1
  1808  00EB  0879               	movf	?___lltoft+1,w
  1809  00EC  00A1               	movwf	___ftneg@f1+1
  1810  00ED  087A               	movf	?___lltoft+2,w
  1811  00EE  00A2               	movwf	___ftneg@f1+2
  1812  00EF  120A  158A  23E8  120A  118A  	fcall	___ftneg
  1813  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1814  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1815  00F6  0820               	movf	?___ftneg,w
  1816  00F7  00A6               	movwf	___ftadd@f2
  1817  00F8  0821               	movf	?___ftneg+1,w
  1818  00F9  00A7               	movwf	___ftadd@f2+1
  1819  00FA  0822               	movf	?___ftneg+2,w
  1820  00FB  00A8               	movwf	___ftadd@f2+2
  1821  00FC  120A  118A  24B7  120A  118A  	fcall	___ftadd
  1822  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1823  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1824  0103  0823               	movf	?___ftadd,w
  1825  0104  00C3               	movwf	UART_TxFloatNumber@v_floatNumber_f32
  1826  0105  0824               	movf	?___ftadd+1,w
  1827  0106  00C4               	movwf	UART_TxFloatNumber@v_floatNumber_f32+1
  1828  0107  0825               	movf	?___ftadd+2,w
  1829  0108  00C5               	movwf	UART_TxFloatNumber@v_floatNumber_f32+2
  1830                           
  1831                           ;uart.c: 363: v_tempNumber_u32 = v_floatNumber_f32 * 1000000;
  1832  0109  0843               	movf	UART_TxFloatNumber@v_floatNumber_f32,w
  1833  010A  00FB               	movwf	___ftmul@f2
  1834  010B  0844               	movf	UART_TxFloatNumber@v_floatNumber_f32+1,w
  1835  010C  00FC               	movwf	___ftmul@f2+1
  1836  010D  0845               	movf	UART_TxFloatNumber@v_floatNumber_f32+2,w
  1837  010E  00FD               	movwf	___ftmul@f2+2
  1838  010F  3024               	movlw	36
  1839  0110  00F8               	movwf	___ftmul@f1
  1840  0111  3074               	movlw	116
  1841  0112  00F9               	movwf	___ftmul@f1+1
  1842  0113  3049               	movlw	73
  1843  0114  00FA               	movwf	___ftmul@f1+2
  1844  0115  120A  118A  2142  120A  118A  	fcall	___ftmul
  1845  011A  0878               	movf	?___ftmul,w
  1846  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1847  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1848  011D  00AA               	movwf	___fttol@f1
  1849  011E  0879               	movf	?___ftmul+1,w
  1850  011F  00AB               	movwf	___fttol@f1+1
  1851  0120  087A               	movf	?___ftmul+2,w
  1852  0121  00AC               	movwf	___fttol@f1+2
  1853  0122  120A  118A  2015  120A  118A  	fcall	___fttol
  1854  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1855  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1856  0129  082D               	movf	?___fttol+3,w
  1857  012A  00CA               	movwf	UART_TxFloatNumber@v_tempNumber_u32+3
  1858  012B  082C               	movf	?___fttol+2,w
  1859  012C  00C9               	movwf	UART_TxFloatNumber@v_tempNumber_u32+2
  1860  012D  082B               	movf	?___fttol+1,w
  1861  012E  00C8               	movwf	UART_TxFloatNumber@v_tempNumber_u32+1
  1862  012F  082A               	movf	?___fttol,w
  1863  0130  00C7               	movwf	UART_TxFloatNumber@v_tempNumber_u32
  1864                           
  1865                           ;uart.c: 364: UART_TxNumber(10u,v_tempNumber_u32,0xffu);
  1866  0131  084A               	movf	UART_TxFloatNumber@v_tempNumber_u32+3,w
  1867  0132  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1868  0133  0849               	movf	UART_TxFloatNumber@v_tempNumber_u32+2,w
  1869  0134  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1870  0135  0848               	movf	UART_TxFloatNumber@v_tempNumber_u32+1,w
  1871  0136  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1872  0137  0847               	movf	UART_TxFloatNumber@v_tempNumber_u32,w
  1873  0138  00A4               	movwf	UART_TxNumber@v_number_u32
  1874  0139  30FF               	movlw	255
  1875  013A  00C6               	movwf	??_UART_TxFloatNumber
  1876  013B  0846               	movf	??_UART_TxFloatNumber,w
  1877  013C  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1878  013D  300A               	movlw	10
  1879  013E  120A  118A  23C5   	fcall	_UART_TxNumber
  1880  0141  0008               	return
  1881  0142                     __end_of_UART_TxFloatNumber:	
  1882                           
  1883                           	psect	text4
  1884  0C30                     __ptext4:	
  1885 ;; *************** function ___lltoft *****************
  1886 ;; Defined at:
  1887 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lltoft.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  c               4    8[COMMON] unsigned long 
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;  exp             1   13[COMMON] unsigned char 
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  3    8[COMMON] float 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2, status,0, pclath, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1901 ;;      Params:         4       0       0       0       0
  1902 ;;      Locals:         1       0       0       0       0
  1903 ;;      Temps:          1       0       0       0       0
  1904 ;;      Totals:         6       0       0       0       0
  1905 ;;Total ram usage:        6 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:    1
  1908 ;; This function calls:
  1909 ;;		___ftpack
  1910 ;; This function is called by:
  1911 ;;		_UART_TxFloatNumber
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           
  1916                           ;psect for function ___lltoft
  1917  0C30                     ___lltoft:	
  1918                           
  1919                           ;incstack = 0
  1920                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  1921  0C30  308E               	movlw	142
  1922  0C31  00FC               	movwf	??___lltoft
  1923  0C32  087C               	movf	??___lltoft,w
  1924  0C33  00FD               	movwf	___lltoft@exp
  1925  0C34                     l1905:	
  1926  0C34  30FF               	movlw	255
  1927  0C35  057B               	andwf	___lltoft@c+3,w
  1928  0C36  1903               	btfsc	3,2
  1929  0C37  2C46               	goto	l1907
  1930  0C38  3001               	movlw	1
  1931  0C39                     u3025:	
  1932  0C39  1003               	clrc
  1933  0C3A  0CFB               	rrf	___lltoft@c+3,f
  1934  0C3B  0CFA               	rrf	___lltoft@c+2,f
  1935  0C3C  0CF9               	rrf	___lltoft@c+1,f
  1936  0C3D  0CF8               	rrf	___lltoft@c,f
  1937  0C3E  3EFF               	addlw	-1
  1938  0C3F  1D03               	skipz
  1939  0C40  2C39               	goto	u3025
  1940  0C41  3001               	movlw	1
  1941  0C42  00FC               	movwf	??___lltoft
  1942  0C43  087C               	movf	??___lltoft,w
  1943  0C44  07FD               	addwf	___lltoft@exp,f
  1944  0C45  2C34               	goto	l1905
  1945  0C46                     l1907:	
  1946  0C46  0878               	movf	___lltoft@c,w
  1947  0C47  00F0               	movwf	___ftpack@arg
  1948  0C48  0879               	movf	___lltoft@c+1,w
  1949  0C49  00F1               	movwf	___ftpack@arg+1
  1950  0C4A  087A               	movf	___lltoft@c+2,w
  1951  0C4B  00F2               	movwf	___ftpack@arg+2
  1952  0C4C  087D               	movf	___lltoft@exp,w
  1953  0C4D  00FC               	movwf	??___lltoft
  1954  0C4E  087C               	movf	??___lltoft,w
  1955  0C4F  00F3               	movwf	___ftpack@exp
  1956  0C50  01F4               	clrf	___ftpack@sign
  1957  0C51  120A  158A  261D   	fcall	___ftpack
  1958  0C54  0870               	movf	?___ftpack,w
  1959  0C55  00F8               	movwf	?___lltoft
  1960  0C56  0871               	movf	?___ftpack+1,w
  1961  0C57  00F9               	movwf	?___lltoft+1
  1962  0C58  0872               	movf	?___ftpack+2,w
  1963  0C59  00FA               	movwf	?___lltoft+2
  1964  0C5A  0008               	return
  1965  0C5B                     __end_of___lltoft:	
  1966                           
  1967                           	psect	text5
  1968  0015                     __ptext5:	
  1969 ;; *************** function ___fttol *****************
  1970 ;; Defined at:
  1971 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\fttol.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  f1              3   10[BANK0 ] float 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  lval            4   19[BANK0 ] unsigned long 
  1976 ;;  exp1            1   23[BANK0 ] unsigned char 
  1977 ;;  sign1           1   18[BANK0 ] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  4   10[BANK0 ] long 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1987 ;;      Params:         0       4       0       0       0
  1988 ;;      Locals:         0       6       0       0       0
  1989 ;;      Temps:          0       4       0       0       0
  1990 ;;      Totals:         0      14       0       0       0
  1991 ;;Total ram usage:       14 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; This function calls:
  1994 ;;		Nothing
  1995 ;; This function is called by:
  1996 ;;		_UART_TxFloatNumber
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           
  2001                           ;psect for function ___fttol
  2002  0015                     ___fttol:	
  2003                           
  2004                           ;incstack = 0
  2005                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2006  0015  1283               	bcf	3,5	;RP0=0, select bank0
  2007  0016  1303               	bcf	3,6	;RP1=0, select bank0
  2008  0017  082A               	movf	___fttol@f1,w
  2009  0018  00AE               	movwf	??___fttol
  2010  0019  082B               	movf	___fttol@f1+1,w
  2011  001A  00AF               	movwf	??___fttol+1
  2012  001B  082C               	movf	___fttol@f1+2,w
  2013  001C  00B0               	movwf	??___fttol+2
  2014  001D  1003               	clrc
  2015  001E  0D2F               	rlf	??___fttol+1,w
  2016  001F  0D30               	rlf	??___fttol+2,w
  2017  0020  00B1               	movwf	??___fttol+3
  2018  0021  0831               	movf	??___fttol+3,w
  2019  0022  00B7               	movwf	___fttol@exp1
  2020  0023  0837               	movf	___fttol@exp1,w
  2021  0024  1D03               	btfss	3,2
  2022  0025  282F               	goto	l1865
  2023  0026  3000               	movlw	0
  2024  0027  00AD               	movwf	?___fttol+3
  2025  0028  3000               	movlw	0
  2026  0029  00AC               	movwf	?___fttol+2
  2027  002A  3000               	movlw	0
  2028  002B  00AB               	movwf	?___fttol+1
  2029  002C  3000               	movlw	0
  2030  002D  00AA               	movwf	?___fttol
  2031  002E  0008               	return
  2032  002F                     l1865:	
  2033  002F  082A               	movf	___fttol@f1,w
  2034  0030  00AE               	movwf	??___fttol
  2035  0031  082B               	movf	___fttol@f1+1,w
  2036  0032  00AF               	movwf	??___fttol+1
  2037  0033  082C               	movf	___fttol@f1+2,w
  2038  0034  00B0               	movwf	??___fttol+2
  2039  0035  3017               	movlw	23
  2040  0036                     u2935:	
  2041  0036  1003               	clrc
  2042  0037  0CB0               	rrf	??___fttol+2,f
  2043  0038  0CAF               	rrf	??___fttol+1,f
  2044  0039  0CAE               	rrf	??___fttol,f
  2045  003A  3EFF               	addlw	-1
  2046  003B  1D03               	skipz
  2047  003C  2836               	goto	u2935
  2048  003D  082E               	movf	??___fttol,w
  2049  003E  00B1               	movwf	??___fttol+3
  2050  003F  0831               	movf	??___fttol+3,w
  2051  0040  00B2               	movwf	___fttol@sign1
  2052  0041  17AB               	bsf	___fttol@f1+1,7
  2053  0042  30FF               	movlw	255
  2054  0043  05AA               	andwf	___fttol@f1,f
  2055  0044  30FF               	movlw	255
  2056  0045  05AB               	andwf	___fttol@f1+1,f
  2057  0046  3000               	movlw	0
  2058  0047  05AC               	andwf	___fttol@f1+2,f
  2059  0048  082A               	movf	___fttol@f1,w
  2060  0049  00B3               	movwf	___fttol@lval
  2061  004A  082B               	movf	___fttol@f1+1,w
  2062  004B  00B4               	movwf	___fttol@lval+1
  2063  004C  082C               	movf	___fttol@f1+2,w
  2064  004D  00B5               	movwf	___fttol@lval+2
  2065  004E  01B6               	clrf	___fttol@lval+3
  2066  004F  308E               	movlw	142
  2067  0050  02B7               	subwf	___fttol@exp1,f
  2068  0051  1FB7               	btfss	___fttol@exp1,7
  2069  0052  2871               	goto	l1885
  2070  0053  0837               	movf	___fttol@exp1,w
  2071  0054  3A80               	xorlw	128
  2072  0055  3E8F               	addlw	143
  2073  0056  1803               	skipnc
  2074  0057  2861               	goto	l1883
  2075  0058  3000               	movlw	0
  2076  0059  00AD               	movwf	?___fttol+3
  2077  005A  3000               	movlw	0
  2078  005B  00AC               	movwf	?___fttol+2
  2079  005C  3000               	movlw	0
  2080  005D  00AB               	movwf	?___fttol+1
  2081  005E  3000               	movlw	0
  2082  005F  00AA               	movwf	?___fttol
  2083  0060  0008               	return
  2084  0061                     l1883:	
  2085  0061  3001               	movlw	1
  2086  0062                     u2965:	
  2087  0062  1003               	clrc
  2088  0063  0CB6               	rrf	___fttol@lval+3,f
  2089  0064  0CB5               	rrf	___fttol@lval+2,f
  2090  0065  0CB4               	rrf	___fttol@lval+1,f
  2091  0066  0CB3               	rrf	___fttol@lval,f
  2092  0067  3EFF               	addlw	-1
  2093  0068  1D03               	skipz
  2094  0069  2862               	goto	u2965
  2095  006A  3001               	movlw	1
  2096  006B  00AE               	movwf	??___fttol
  2097  006C  082E               	movf	??___fttol,w
  2098  006D  07B7               	addwf	___fttol@exp1,f
  2099  006E  1903               	btfsc	3,2
  2100  006F  288C               	goto	l1893
  2101  0070  2861               	goto	l1883
  2102  0071                     l1885:	
  2103  0071  3018               	movlw	24
  2104  0072  0237               	subwf	___fttol@exp1,w
  2105  0073  1C03               	skipc
  2106  0074  2889               	goto	l637
  2107  0075  3000               	movlw	0
  2108  0076  00AD               	movwf	?___fttol+3
  2109  0077  3000               	movlw	0
  2110  0078  00AC               	movwf	?___fttol+2
  2111  0079  3000               	movlw	0
  2112  007A  00AB               	movwf	?___fttol+1
  2113  007B  3000               	movlw	0
  2114  007C  00AA               	movwf	?___fttol
  2115  007D  0008               	return
  2116  007E                     l1891:	
  2117  007E  3001               	movlw	1
  2118  007F  00AE               	movwf	??___fttol
  2119  0080                     u2995:	
  2120  0080  1003               	clrc
  2121  0081  0DB3               	rlf	___fttol@lval,f
  2122  0082  0DB4               	rlf	___fttol@lval+1,f
  2123  0083  0DB5               	rlf	___fttol@lval+2,f
  2124  0084  0DB6               	rlf	___fttol@lval+3,f
  2125  0085  0BAE               	decfsz	??___fttol,f
  2126  0086  2880               	goto	u2995
  2127  0087  3001               	movlw	1
  2128  0088  02B7               	subwf	___fttol@exp1,f
  2129  0089                     l637:	
  2130  0089  0837               	movf	___fttol@exp1,w
  2131  008A  1D03               	btfss	3,2
  2132  008B  287E               	goto	l1891
  2133  008C                     l1893:	
  2134  008C  0832               	movf	___fttol@sign1,w
  2135  008D  1903               	btfsc	3,2
  2136  008E  289A               	goto	l1897
  2137  008F  09B3               	comf	___fttol@lval,f
  2138  0090  09B4               	comf	___fttol@lval+1,f
  2139  0091  09B5               	comf	___fttol@lval+2,f
  2140  0092  09B6               	comf	___fttol@lval+3,f
  2141  0093  0AB3               	incf	___fttol@lval,f
  2142  0094  1903               	skipnz
  2143  0095  0AB4               	incf	___fttol@lval+1,f
  2144  0096  1903               	skipnz
  2145  0097  0AB5               	incf	___fttol@lval+2,f
  2146  0098  1903               	skipnz
  2147  0099  0AB6               	incf	___fttol@lval+3,f
  2148  009A                     l1897:	
  2149  009A  0836               	movf	___fttol@lval+3,w
  2150  009B  00AD               	movwf	?___fttol+3
  2151  009C  0835               	movf	___fttol@lval+2,w
  2152  009D  00AC               	movwf	?___fttol+2
  2153  009E  0834               	movf	___fttol@lval+1,w
  2154  009F  00AB               	movwf	?___fttol+1
  2155  00A0  0833               	movf	___fttol@lval,w
  2156  00A1  00AA               	movwf	?___fttol
  2157  00A2  0008               	return
  2158  00A3                     __end_of___fttol:	
  2159                           
  2160                           	psect	text6
  2161  0BE8                     __ptext6:	
  2162 ;; *************** function ___ftneg *****************
  2163 ;; Defined at:
  2164 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftneg.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  f1              3    0[BANK0 ] float 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  3    0[BANK0 ] float 
  2171 ;; Registers used:
  2172 ;;		wreg
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2178 ;;      Params:         0       3       0       0       0
  2179 ;;      Locals:         0       0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0
  2181 ;;      Totals:         0       3       0       0       0
  2182 ;;Total ram usage:        3 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		_UART_TxFloatNumber
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           
  2192                           ;psect for function ___ftneg
  2193  0BE8                     ___ftneg:	
  2194                           
  2195                           ;incstack = 0
  2196                           ; Regs used in ___ftneg: [wreg]
  2197  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0BEA  0822               	movf	___ftneg@f1+2,w
  2200  0BEB  0421               	iorwf	___ftneg@f1+1,w
  2201  0BEC  0420               	iorwf	___ftneg@f1,w
  2202  0BED  1903               	skipnz
  2203  0BEE  0008               	return
  2204  0BEF  3080               	movlw	128
  2205  0BF0  06A2               	xorwf	___ftneg@f1+2,f
  2206  0BF1  0008               	return
  2207  0BF2                     __end_of___ftneg:	
  2208                           
  2209                           	psect	text7
  2210  0142                     __ptext7:	
  2211 ;; *************** function ___ftmul *****************
  2212 ;; Defined at:
  2213 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftmul.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  f1              3    8[COMMON] float 
  2216 ;;  f2              3   11[COMMON] float 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  2219 ;;  sign            1    9[BANK0 ] unsigned char 
  2220 ;;  cntr            1    8[BANK0 ] unsigned char 
  2221 ;;  exp             1    4[BANK0 ] unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  3    8[COMMON] float 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0, pclath, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2231 ;;      Params:         6       0       0       0       0
  2232 ;;      Locals:         0       6       0       0       0
  2233 ;;      Temps:          0       4       0       0       0
  2234 ;;      Totals:         6      10       0       0       0
  2235 ;;Total ram usage:       16 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    1
  2238 ;; This function calls:
  2239 ;;		___ftpack
  2240 ;; This function is called by:
  2241 ;;		_UART_TxFloatNumber
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           
  2246                           ;psect for function ___ftmul
  2247  0142                     ___ftmul:	
  2248                           
  2249                           ;incstack = 0
  2250                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2251  0142  0878               	movf	___ftmul@f1,w
  2252  0143  1283               	bcf	3,5	;RP0=0, select bank0
  2253  0144  1303               	bcf	3,6	;RP1=0, select bank0
  2254  0145  00A0               	movwf	??___ftmul
  2255  0146  0879               	movf	___ftmul@f1+1,w
  2256  0147  00A1               	movwf	??___ftmul+1
  2257  0148  087A               	movf	___ftmul@f1+2,w
  2258  0149  00A2               	movwf	??___ftmul+2
  2259  014A  1003               	clrc
  2260  014B  0D21               	rlf	??___ftmul+1,w
  2261  014C  0D22               	rlf	??___ftmul+2,w
  2262  014D  00A3               	movwf	??___ftmul+3
  2263  014E  0823               	movf	??___ftmul+3,w
  2264  014F  00A4               	movwf	___ftmul@exp
  2265  0150  0824               	movf	___ftmul@exp,w
  2266  0151  1D03               	btfss	3,2
  2267  0152  295A               	goto	l1807
  2268  0153  3000               	movlw	0
  2269  0154  00F8               	movwf	?___ftmul
  2270  0155  3000               	movlw	0
  2271  0156  00F9               	movwf	?___ftmul+1
  2272  0157  3000               	movlw	0
  2273  0158  00FA               	movwf	?___ftmul+2
  2274  0159  0008               	return
  2275  015A                     l1807:	
  2276  015A  087B               	movf	___ftmul@f2,w
  2277  015B  00A0               	movwf	??___ftmul
  2278  015C  087C               	movf	___ftmul@f2+1,w
  2279  015D  00A1               	movwf	??___ftmul+1
  2280  015E  087D               	movf	___ftmul@f2+2,w
  2281  015F  00A2               	movwf	??___ftmul+2
  2282  0160  1003               	clrc
  2283  0161  0D21               	rlf	??___ftmul+1,w
  2284  0162  0D22               	rlf	??___ftmul+2,w
  2285  0163  00A3               	movwf	??___ftmul+3
  2286  0164  0823               	movf	??___ftmul+3,w
  2287  0165  00A9               	movwf	___ftmul@sign
  2288  0166  0829               	movf	___ftmul@sign,w
  2289  0167  1D03               	btfss	3,2
  2290  0168  2970               	goto	l1813
  2291  0169  3000               	movlw	0
  2292  016A  00F8               	movwf	?___ftmul
  2293  016B  3000               	movlw	0
  2294  016C  00F9               	movwf	?___ftmul+1
  2295  016D  3000               	movlw	0
  2296  016E  00FA               	movwf	?___ftmul+2
  2297  016F  0008               	return
  2298  0170                     l1813:	
  2299  0170  0829               	movf	___ftmul@sign,w
  2300  0171  3E7B               	addlw	123
  2301  0172  00A0               	movwf	??___ftmul
  2302  0173  0820               	movf	??___ftmul,w
  2303  0174  07A4               	addwf	___ftmul@exp,f
  2304  0175  0878               	movf	___ftmul@f1,w
  2305  0176  00A0               	movwf	??___ftmul
  2306  0177  0879               	movf	___ftmul@f1+1,w
  2307  0178  00A1               	movwf	??___ftmul+1
  2308  0179  087A               	movf	___ftmul@f1+2,w
  2309  017A  00A2               	movwf	??___ftmul+2
  2310  017B  3010               	movlw	16
  2311  017C                     u2795:	
  2312  017C  1003               	clrc
  2313  017D  0CA2               	rrf	??___ftmul+2,f
  2314  017E  0CA1               	rrf	??___ftmul+1,f
  2315  017F  0CA0               	rrf	??___ftmul,f
  2316  0180  3EFF               	addlw	-1
  2317  0181  1D03               	skipz
  2318  0182  297C               	goto	u2795
  2319  0183  0820               	movf	??___ftmul,w
  2320  0184  00A3               	movwf	??___ftmul+3
  2321  0185  0823               	movf	??___ftmul+3,w
  2322  0186  00A9               	movwf	___ftmul@sign
  2323  0187  087B               	movf	___ftmul@f2,w
  2324  0188  00A0               	movwf	??___ftmul
  2325  0189  087C               	movf	___ftmul@f2+1,w
  2326  018A  00A1               	movwf	??___ftmul+1
  2327  018B  087D               	movf	___ftmul@f2+2,w
  2328  018C  00A2               	movwf	??___ftmul+2
  2329  018D  3010               	movlw	16
  2330  018E                     u2805:	
  2331  018E  1003               	clrc
  2332  018F  0CA2               	rrf	??___ftmul+2,f
  2333  0190  0CA1               	rrf	??___ftmul+1,f
  2334  0191  0CA0               	rrf	??___ftmul,f
  2335  0192  3EFF               	addlw	-1
  2336  0193  1D03               	skipz
  2337  0194  298E               	goto	u2805
  2338  0195  0820               	movf	??___ftmul,w
  2339  0196  00A3               	movwf	??___ftmul+3
  2340  0197  0823               	movf	??___ftmul+3,w
  2341  0198  06A9               	xorwf	___ftmul@sign,f
  2342  0199  3080               	movlw	128
  2343  019A  00A0               	movwf	??___ftmul
  2344  019B  0820               	movf	??___ftmul,w
  2345  019C  05A9               	andwf	___ftmul@sign,f
  2346  019D  17F9               	bsf	___ftmul@f1+1,7
  2347  019E  17FC               	bsf	___ftmul@f2+1,7
  2348  019F  30FF               	movlw	255
  2349  01A0  05FB               	andwf	___ftmul@f2,f
  2350  01A1  30FF               	movlw	255
  2351  01A2  05FC               	andwf	___ftmul@f2+1,f
  2352  01A3  3000               	movlw	0
  2353  01A4  05FD               	andwf	___ftmul@f2+2,f
  2354  01A5  3000               	movlw	0
  2355  01A6  00A5               	movwf	___ftmul@f3_as_product
  2356  01A7  3000               	movlw	0
  2357  01A8  00A6               	movwf	___ftmul@f3_as_product+1
  2358  01A9  3000               	movlw	0
  2359  01AA  00A7               	movwf	___ftmul@f3_as_product+2
  2360  01AB  3007               	movlw	7
  2361  01AC  00A0               	movwf	??___ftmul
  2362  01AD  0820               	movf	??___ftmul,w
  2363  01AE  00A8               	movwf	___ftmul@cntr
  2364  01AF                     l1825:	
  2365  01AF  1C78               	btfss	___ftmul@f1,0
  2366  01B0  29BF               	goto	l1829
  2367  01B1  087B               	movf	___ftmul@f2,w
  2368  01B2  07A5               	addwf	___ftmul@f3_as_product,f
  2369  01B3  087C               	movf	___ftmul@f2+1,w
  2370  01B4  1103               	clrz
  2371  01B5  1803               	skipnc
  2372  01B6  0A7C               	incf	___ftmul@f2+1,w
  2373  01B7  1D03               	btfss	3,2
  2374  01B8  07A6               	addwf	___ftmul@f3_as_product+1,f
  2375  01B9  087D               	movf	___ftmul@f2+2,w
  2376  01BA  1103               	clrz
  2377  01BB  1803               	skipnc
  2378  01BC  0A7D               	incf	___ftmul@f2+2,w
  2379  01BD  1D03               	btfss	3,2
  2380  01BE  07A7               	addwf	___ftmul@f3_as_product+2,f
  2381  01BF                     l1829:	
  2382  01BF  3001               	movlw	1
  2383  01C0                     u2835:	
  2384  01C0  1003               	clrc
  2385  01C1  0CFA               	rrf	___ftmul@f1+2,f
  2386  01C2  0CF9               	rrf	___ftmul@f1+1,f
  2387  01C3  0CF8               	rrf	___ftmul@f1,f
  2388  01C4  3EFF               	addlw	-1
  2389  01C5  1D03               	skipz
  2390  01C6  29C0               	goto	u2835
  2391  01C7  3001               	movlw	1
  2392  01C8                     u2845:	
  2393  01C8  1003               	clrc
  2394  01C9  0DFB               	rlf	___ftmul@f2,f
  2395  01CA  0DFC               	rlf	___ftmul@f2+1,f
  2396  01CB  0DFD               	rlf	___ftmul@f2+2,f
  2397  01CC  3EFF               	addlw	-1
  2398  01CD  1D03               	skipz
  2399  01CE  29C8               	goto	u2845
  2400  01CF  3001               	movlw	1
  2401  01D0  02A8               	subwf	___ftmul@cntr,f
  2402  01D1  1D03               	btfss	3,2
  2403  01D2  29AF               	goto	l1825
  2404  01D3  3009               	movlw	9
  2405  01D4  00A0               	movwf	??___ftmul
  2406  01D5  0820               	movf	??___ftmul,w
  2407  01D6  00A8               	movwf	___ftmul@cntr
  2408  01D7                     l1837:	
  2409  01D7  1C78               	btfss	___ftmul@f1,0
  2410  01D8  29E7               	goto	l1841
  2411  01D9  087B               	movf	___ftmul@f2,w
  2412  01DA  07A5               	addwf	___ftmul@f3_as_product,f
  2413  01DB  087C               	movf	___ftmul@f2+1,w
  2414  01DC  1103               	clrz
  2415  01DD  1803               	skipnc
  2416  01DE  0A7C               	incf	___ftmul@f2+1,w
  2417  01DF  1D03               	btfss	3,2
  2418  01E0  07A6               	addwf	___ftmul@f3_as_product+1,f
  2419  01E1  087D               	movf	___ftmul@f2+2,w
  2420  01E2  1103               	clrz
  2421  01E3  1803               	skipnc
  2422  01E4  0A7D               	incf	___ftmul@f2+2,w
  2423  01E5  1D03               	btfss	3,2
  2424  01E6  07A7               	addwf	___ftmul@f3_as_product+2,f
  2425  01E7                     l1841:	
  2426  01E7  3001               	movlw	1
  2427  01E8                     u2885:	
  2428  01E8  1003               	clrc
  2429  01E9  0CFA               	rrf	___ftmul@f1+2,f
  2430  01EA  0CF9               	rrf	___ftmul@f1+1,f
  2431  01EB  0CF8               	rrf	___ftmul@f1,f
  2432  01EC  3EFF               	addlw	-1
  2433  01ED  1D03               	skipz
  2434  01EE  29E8               	goto	u2885
  2435  01EF  3001               	movlw	1
  2436  01F0                     u2895:	
  2437  01F0  1003               	clrc
  2438  01F1  0CA7               	rrf	___ftmul@f3_as_product+2,f
  2439  01F2  0CA6               	rrf	___ftmul@f3_as_product+1,f
  2440  01F3  0CA5               	rrf	___ftmul@f3_as_product,f
  2441  01F4  3EFF               	addlw	-1
  2442  01F5  1D03               	skipz
  2443  01F6  29F0               	goto	u2895
  2444  01F7  3001               	movlw	1
  2445  01F8  02A8               	subwf	___ftmul@cntr,f
  2446  01F9  1D03               	btfss	3,2
  2447  01FA  29D7               	goto	l1837
  2448  01FB  0825               	movf	___ftmul@f3_as_product,w
  2449  01FC  00F0               	movwf	___ftpack@arg
  2450  01FD  0826               	movf	___ftmul@f3_as_product+1,w
  2451  01FE  00F1               	movwf	___ftpack@arg+1
  2452  01FF  0827               	movf	___ftmul@f3_as_product+2,w
  2453  0200  00F2               	movwf	___ftpack@arg+2
  2454  0201  0824               	movf	___ftmul@exp,w
  2455  0202  00A0               	movwf	??___ftmul
  2456  0203  0820               	movf	??___ftmul,w
  2457  0204  00F3               	movwf	___ftpack@exp
  2458  0205  0829               	movf	___ftmul@sign,w
  2459  0206  00A1               	movwf	??___ftmul+1
  2460  0207  0821               	movf	??___ftmul+1,w
  2461  0208  00F4               	movwf	___ftpack@sign
  2462  0209  120A  158A  261D   	fcall	___ftpack
  2463  020C  0870               	movf	?___ftpack,w
  2464  020D  00F8               	movwf	?___ftmul
  2465  020E  0871               	movf	?___ftpack+1,w
  2466  020F  00F9               	movwf	?___ftmul+1
  2467  0210  0872               	movf	?___ftpack+2,w
  2468  0211  00FA               	movwf	?___ftmul+2
  2469  0212  0008               	return
  2470  0213                     __end_of___ftmul:	
  2471                           
  2472                           	psect	text8
  2473  04B7                     __ptext8:	
  2474 ;; *************** function ___ftadd *****************
  2475 ;; Defined at:
  2476 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftadd.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;  f1              3    3[BANK0 ] float 
  2479 ;;  f2              3    6[BANK0 ] float 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  exp1            1   15[BANK0 ] unsigned char 
  2482 ;;  exp2            1   14[BANK0 ] unsigned char 
  2483 ;;  sign            1   13[BANK0 ] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  3    3[BANK0 ] float 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0, pclath, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2493 ;;      Params:         0       6       0       0       0
  2494 ;;      Locals:         0       3       0       0       0
  2495 ;;      Temps:          0       4       0       0       0
  2496 ;;      Totals:         0      13       0       0       0
  2497 ;;Total ram usage:       13 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:    1
  2500 ;; This function calls:
  2501 ;;		___ftpack
  2502 ;; This function is called by:
  2503 ;;		_UART_TxFloatNumber
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           
  2508                           ;psect for function ___ftadd
  2509  04B7                     ___ftadd:	
  2510                           
  2511                           ;incstack = 0
  2512                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2513  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2514  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2515  04B9  0823               	movf	___ftadd@f1,w
  2516  04BA  00A9               	movwf	??___ftadd
  2517  04BB  0824               	movf	___ftadd@f1+1,w
  2518  04BC  00AA               	movwf	??___ftadd+1
  2519  04BD  0825               	movf	___ftadd@f1+2,w
  2520  04BE  00AB               	movwf	??___ftadd+2
  2521  04BF  1003               	clrc
  2522  04C0  0D2A               	rlf	??___ftadd+1,w
  2523  04C1  0D2B               	rlf	??___ftadd+2,w
  2524  04C2  00AC               	movwf	??___ftadd+3
  2525  04C3  082C               	movf	??___ftadd+3,w
  2526  04C4  00AF               	movwf	___ftadd@exp1
  2527  04C5  0826               	movf	___ftadd@f2,w
  2528  04C6  00A9               	movwf	??___ftadd
  2529  04C7  0827               	movf	___ftadd@f2+1,w
  2530  04C8  00AA               	movwf	??___ftadd+1
  2531  04C9  0828               	movf	___ftadd@f2+2,w
  2532  04CA  00AB               	movwf	??___ftadd+2
  2533  04CB  1003               	clrc
  2534  04CC  0D2A               	rlf	??___ftadd+1,w
  2535  04CD  0D2B               	rlf	??___ftadd+2,w
  2536  04CE  00AC               	movwf	??___ftadd+3
  2537  04CF  082C               	movf	??___ftadd+3,w
  2538  04D0  00AE               	movwf	___ftadd@exp2
  2539  04D1  082F               	movf	___ftadd@exp1,w
  2540  04D2  1903               	btfsc	3,2
  2541  04D3  2CE0               	goto	l1737
  2542  04D4  082E               	movf	___ftadd@exp2,w
  2543  04D5  022F               	subwf	___ftadd@exp1,w
  2544  04D6  1803               	skipnc
  2545  04D7  2CE7               	goto	l1741
  2546  04D8  032F               	decf	___ftadd@exp1,w
  2547  04D9  3AFF               	xorlw	255
  2548  04DA  072E               	addwf	___ftadd@exp2,w
  2549  04DB  00A9               	movwf	??___ftadd
  2550  04DC  3019               	movlw	25
  2551  04DD  0229               	subwf	??___ftadd,w
  2552  04DE  1C03               	skipc
  2553  04DF  2CE7               	goto	l1741
  2554  04E0                     l1737:	
  2555  04E0  0826               	movf	___ftadd@f2,w
  2556  04E1  00A3               	movwf	?___ftadd
  2557  04E2  0827               	movf	___ftadd@f2+1,w
  2558  04E3  00A4               	movwf	?___ftadd+1
  2559  04E4  0828               	movf	___ftadd@f2+2,w
  2560  04E5  00A5               	movwf	?___ftadd+2
  2561  04E6  0008               	return
  2562  04E7                     l1741:	
  2563  04E7  082E               	movf	___ftadd@exp2,w
  2564  04E8  1903               	btfsc	3,2
  2565  04E9  0008               	return
  2566  04EA  082F               	movf	___ftadd@exp1,w
  2567  04EB  022E               	subwf	___ftadd@exp2,w
  2568  04EC  1803               	skipnc
  2569  04ED  2CF6               	goto	l1747
  2570  04EE  032E               	decf	___ftadd@exp2,w
  2571  04EF  3AFF               	xorlw	255
  2572  04F0  072F               	addwf	___ftadd@exp1,w
  2573  04F1  00A9               	movwf	??___ftadd
  2574  04F2  3019               	movlw	25
  2575  04F3  0229               	subwf	??___ftadd,w
  2576  04F4  1803               	btfsc	3,0
  2577  04F5  0008               	return
  2578  04F6                     l1747:	
  2579  04F6  3006               	movlw	6
  2580  04F7  00A9               	movwf	??___ftadd
  2581  04F8  0829               	movf	??___ftadd,w
  2582  04F9  00AD               	movwf	___ftadd@sign
  2583  04FA  1BA5               	btfsc	___ftadd@f1+2,7
  2584  04FB  17AD               	bsf	___ftadd@sign,7
  2585  04FC  1BA8               	btfsc	___ftadd@f2+2,7
  2586  04FD  172D               	bsf	___ftadd@sign,6
  2587  04FE  17A4               	bsf	___ftadd@f1+1,7
  2588  04FF  30FF               	movlw	255
  2589  0500  05A3               	andwf	___ftadd@f1,f
  2590  0501  30FF               	movlw	255
  2591  0502  05A4               	andwf	___ftadd@f1+1,f
  2592  0503  3000               	movlw	0
  2593  0504  05A5               	andwf	___ftadd@f1+2,f
  2594  0505  17A7               	bsf	___ftadd@f2+1,7
  2595  0506  30FF               	movlw	255
  2596  0507  05A6               	andwf	___ftadd@f2,f
  2597  0508  30FF               	movlw	255
  2598  0509  05A7               	andwf	___ftadd@f2+1,f
  2599  050A  3000               	movlw	0
  2600  050B  05A8               	andwf	___ftadd@f2+2,f
  2601  050C  082E               	movf	___ftadd@exp2,w
  2602  050D  022F               	subwf	___ftadd@exp1,w
  2603  050E  1803               	skipnc
  2604  050F  2D36               	goto	l1769
  2605  0510                     l1759:	
  2606  0510  3001               	movlw	1
  2607  0511                     u2625:	
  2608  0511  1003               	clrc
  2609  0512  0DA6               	rlf	___ftadd@f2,f
  2610  0513  0DA7               	rlf	___ftadd@f2+1,f
  2611  0514  0DA8               	rlf	___ftadd@f2+2,f
  2612  0515  3EFF               	addlw	-1
  2613  0516  1D03               	skipz
  2614  0517  2D11               	goto	u2625
  2615  0518  3001               	movlw	1
  2616  0519  02AE               	subwf	___ftadd@exp2,f
  2617  051A  082E               	movf	___ftadd@exp2,w
  2618  051B  062F               	xorwf	___ftadd@exp1,w
  2619  051C  1903               	skipnz
  2620  051D  2D31               	goto	l1767
  2621  051E  3001               	movlw	1
  2622  051F  02AD               	subwf	___ftadd@sign,f
  2623  0520  082D               	movf	___ftadd@sign,w
  2624  0521  3907               	andlw	7
  2625  0522  1903               	btfsc	3,2
  2626  0523  2D31               	goto	l1767
  2627  0524  2D10               	goto	l1759
  2628  0525                     l1765:	
  2629  0525  3001               	movlw	1
  2630  0526                     u2655:	
  2631  0526  1003               	clrc
  2632  0527  0CA5               	rrf	___ftadd@f1+2,f
  2633  0528  0CA4               	rrf	___ftadd@f1+1,f
  2634  0529  0CA3               	rrf	___ftadd@f1,f
  2635  052A  3EFF               	addlw	-1
  2636  052B  1D03               	skipz
  2637  052C  2D26               	goto	u2655
  2638  052D  3001               	movlw	1
  2639  052E  00A9               	movwf	??___ftadd
  2640  052F  0829               	movf	??___ftadd,w
  2641  0530  07AF               	addwf	___ftadd@exp1,f
  2642  0531                     l1767:	
  2643  0531  082F               	movf	___ftadd@exp1,w
  2644  0532  062E               	xorwf	___ftadd@exp2,w
  2645  0533  1903               	btfsc	3,2
  2646  0534  2D5F               	goto	l577
  2647  0535  2D25               	goto	l1765
  2648  0536                     l1769:	
  2649  0536  082F               	movf	___ftadd@exp1,w
  2650  0537  022E               	subwf	___ftadd@exp2,w
  2651  0538  1803               	skipnc
  2652  0539  2D5F               	goto	l577
  2653  053A                     l1771:	
  2654  053A  3001               	movlw	1
  2655  053B                     u2685:	
  2656  053B  1003               	clrc
  2657  053C  0DA3               	rlf	___ftadd@f1,f
  2658  053D  0DA4               	rlf	___ftadd@f1+1,f
  2659  053E  0DA5               	rlf	___ftadd@f1+2,f
  2660  053F  3EFF               	addlw	-1
  2661  0540  1D03               	skipz
  2662  0541  2D3B               	goto	u2685
  2663  0542  3001               	movlw	1
  2664  0543  02AF               	subwf	___ftadd@exp1,f
  2665  0544  082E               	movf	___ftadd@exp2,w
  2666  0545  062F               	xorwf	___ftadd@exp1,w
  2667  0546  1903               	skipnz
  2668  0547  2D5B               	goto	l1779
  2669  0548  3001               	movlw	1
  2670  0549  02AD               	subwf	___ftadd@sign,f
  2671  054A  082D               	movf	___ftadd@sign,w
  2672  054B  3907               	andlw	7
  2673  054C  1903               	btfsc	3,2
  2674  054D  2D5B               	goto	l1779
  2675  054E  2D3A               	goto	l1771
  2676  054F                     l1777:	
  2677  054F  3001               	movlw	1
  2678  0550                     u2715:	
  2679  0550  1003               	clrc
  2680  0551  0CA8               	rrf	___ftadd@f2+2,f
  2681  0552  0CA7               	rrf	___ftadd@f2+1,f
  2682  0553  0CA6               	rrf	___ftadd@f2,f
  2683  0554  3EFF               	addlw	-1
  2684  0555  1D03               	skipz
  2685  0556  2D50               	goto	u2715
  2686  0557  3001               	movlw	1
  2687  0558  00A9               	movwf	??___ftadd
  2688  0559  0829               	movf	??___ftadd,w
  2689  055A  07AE               	addwf	___ftadd@exp2,f
  2690  055B                     l1779:	
  2691  055B  082F               	movf	___ftadd@exp1,w
  2692  055C  062E               	xorwf	___ftadd@exp2,w
  2693  055D  1D03               	skipz
  2694  055E  2D4F               	goto	l1777
  2695  055F                     l577:	
  2696  055F  1FAD               	btfss	___ftadd@sign,7
  2697  0560  2D71               	goto	l1783
  2698  0561  30FF               	movlw	255
  2699  0562  06A3               	xorwf	___ftadd@f1,f
  2700  0563  30FF               	movlw	255
  2701  0564  06A4               	xorwf	___ftadd@f1+1,f
  2702  0565  30FF               	movlw	255
  2703  0566  06A5               	xorwf	___ftadd@f1+2,f
  2704  0567  3001               	movlw	1
  2705  0568  07A3               	addwf	___ftadd@f1,f
  2706  0569  3000               	movlw	0
  2707  056A  1803               	skipnc
  2708  056B  3001               	movlw	1
  2709  056C  07A4               	addwf	___ftadd@f1+1,f
  2710  056D  3000               	movlw	0
  2711  056E  1803               	skipnc
  2712  056F  3001               	movlw	1
  2713  0570  07A5               	addwf	___ftadd@f1+2,f
  2714  0571                     l1783:	
  2715  0571  1F2D               	btfss	___ftadd@sign,6
  2716  0572  2D83               	goto	l1787
  2717  0573  30FF               	movlw	255
  2718  0574  06A6               	xorwf	___ftadd@f2,f
  2719  0575  30FF               	movlw	255
  2720  0576  06A7               	xorwf	___ftadd@f2+1,f
  2721  0577  30FF               	movlw	255
  2722  0578  06A8               	xorwf	___ftadd@f2+2,f
  2723  0579  3001               	movlw	1
  2724  057A  07A6               	addwf	___ftadd@f2,f
  2725  057B  3000               	movlw	0
  2726  057C  1803               	skipnc
  2727  057D  3001               	movlw	1
  2728  057E  07A7               	addwf	___ftadd@f2+1,f
  2729  057F  3000               	movlw	0
  2730  0580  1803               	skipnc
  2731  0581  3001               	movlw	1
  2732  0582  07A8               	addwf	___ftadd@f2+2,f
  2733  0583                     l1787:	
  2734  0583  01AD               	clrf	___ftadd@sign
  2735  0584  0823               	movf	___ftadd@f1,w
  2736  0585  07A6               	addwf	___ftadd@f2,f
  2737  0586  0824               	movf	___ftadd@f1+1,w
  2738  0587  1103               	clrz
  2739  0588  1803               	skipnc
  2740  0589  0A24               	incf	___ftadd@f1+1,w
  2741  058A  1D03               	btfss	3,2
  2742  058B  07A7               	addwf	___ftadd@f2+1,f
  2743  058C  0825               	movf	___ftadd@f1+2,w
  2744  058D  1103               	clrz
  2745  058E  1803               	skipnc
  2746  058F  0A25               	incf	___ftadd@f1+2,w
  2747  0590  1D03               	btfss	3,2
  2748  0591  07A8               	addwf	___ftadd@f2+2,f
  2749  0592  1FA8               	btfss	___ftadd@f2+2,7
  2750  0593  2DA6               	goto	l1797
  2751  0594  30FF               	movlw	255
  2752  0595  06A6               	xorwf	___ftadd@f2,f
  2753  0596  30FF               	movlw	255
  2754  0597  06A7               	xorwf	___ftadd@f2+1,f
  2755  0598  30FF               	movlw	255
  2756  0599  06A8               	xorwf	___ftadd@f2+2,f
  2757  059A  3001               	movlw	1
  2758  059B  07A6               	addwf	___ftadd@f2,f
  2759  059C  3000               	movlw	0
  2760  059D  1803               	skipnc
  2761  059E  3001               	movlw	1
  2762  059F  07A7               	addwf	___ftadd@f2+1,f
  2763  05A0  3000               	movlw	0
  2764  05A1  1803               	skipnc
  2765  05A2  3001               	movlw	1
  2766  05A3  07A8               	addwf	___ftadd@f2+2,f
  2767  05A4  01AD               	clrf	___ftadd@sign
  2768  05A5  0AAD               	incf	___ftadd@sign,f
  2769  05A6                     l1797:	
  2770  05A6  0826               	movf	___ftadd@f2,w
  2771  05A7  00F0               	movwf	___ftpack@arg
  2772  05A8  0827               	movf	___ftadd@f2+1,w
  2773  05A9  00F1               	movwf	___ftpack@arg+1
  2774  05AA  0828               	movf	___ftadd@f2+2,w
  2775  05AB  00F2               	movwf	___ftpack@arg+2
  2776  05AC  082F               	movf	___ftadd@exp1,w
  2777  05AD  00A9               	movwf	??___ftadd
  2778  05AE  0829               	movf	??___ftadd,w
  2779  05AF  00F3               	movwf	___ftpack@exp
  2780  05B0  082D               	movf	___ftadd@sign,w
  2781  05B1  00AA               	movwf	??___ftadd+1
  2782  05B2  082A               	movf	??___ftadd+1,w
  2783  05B3  00F4               	movwf	___ftpack@sign
  2784  05B4  120A  158A  261D   	fcall	___ftpack
  2785  05B7  0870               	movf	?___ftpack,w
  2786  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  2787  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  2788  05BA  00A3               	movwf	?___ftadd
  2789  05BB  0871               	movf	?___ftpack+1,w
  2790  05BC  00A4               	movwf	?___ftadd+1
  2791  05BD  0872               	movf	?___ftpack+2,w
  2792  05BE  00A5               	movwf	?___ftadd+2
  2793  05BF  0008               	return
  2794  05C0                     __end_of___ftadd:	
  2795                           
  2796                           	psect	text9
  2797  0E1D                     __ptext9:	
  2798 ;; *************** function ___ftpack *****************
  2799 ;; Defined at:
  2800 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\float.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  arg             3    0[COMMON] unsigned um
  2803 ;;  exp             1    3[COMMON] unsigned char 
  2804 ;;  sign            1    4[COMMON] unsigned char 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  3    0[COMMON] float 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2816 ;;      Params:         5       0       0       0       0
  2817 ;;      Locals:         0       0       0       0       0
  2818 ;;      Temps:          3       0       0       0       0
  2819 ;;      Totals:         8       0       0       0       0
  2820 ;;Total ram usage:        8 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		___ftadd
  2826 ;;		___ftmul
  2827 ;;		___lltoft
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           
  2832                           ;psect for function ___ftpack
  2833  0E1D                     ___ftpack:	
  2834                           
  2835                           ;incstack = 0
  2836                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2837  0E1D  0873               	movf	___ftpack@exp,w
  2838  0E1E  1903               	btfsc	3,2
  2839  0E1F  2E25               	goto	l1561
  2840  0E20  0872               	movf	___ftpack@arg+2,w
  2841  0E21  0471               	iorwf	___ftpack@arg+1,w
  2842  0E22  0470               	iorwf	___ftpack@arg,w
  2843  0E23  1D03               	skipz
  2844  0E24  2E38               	goto	l1567
  2845  0E25                     l1561:	
  2846  0E25  3000               	movlw	0
  2847  0E26  00F0               	movwf	?___ftpack
  2848  0E27  3000               	movlw	0
  2849  0E28  00F1               	movwf	?___ftpack+1
  2850  0E29  3000               	movlw	0
  2851  0E2A  00F2               	movwf	?___ftpack+2
  2852  0E2B  0008               	return
  2853  0E2C                     l1565:	
  2854  0E2C  3001               	movlw	1
  2855  0E2D  00F5               	movwf	??___ftpack
  2856  0E2E  0875               	movf	??___ftpack,w
  2857  0E2F  07F3               	addwf	___ftpack@exp,f
  2858  0E30  3001               	movlw	1
  2859  0E31                     u1915:	
  2860  0E31  1003               	clrc
  2861  0E32  0CF2               	rrf	___ftpack@arg+2,f
  2862  0E33  0CF1               	rrf	___ftpack@arg+1,f
  2863  0E34  0CF0               	rrf	___ftpack@arg,f
  2864  0E35  3EFF               	addlw	-1
  2865  0E36  1D03               	skipz
  2866  0E37  2E31               	goto	u1915
  2867  0E38                     l1567:	
  2868  0E38  30FE               	movlw	254
  2869  0E39  0572               	andwf	___ftpack@arg+2,w
  2870  0E3A  1903               	btfsc	3,2
  2871  0E3B  2E53               	goto	l546
  2872  0E3C  2E2C               	goto	l1565
  2873  0E3D                     l1569:	
  2874  0E3D  3001               	movlw	1
  2875  0E3E  00F5               	movwf	??___ftpack
  2876  0E3F  0875               	movf	??___ftpack,w
  2877  0E40  07F3               	addwf	___ftpack@exp,f
  2878  0E41  3001               	movlw	1
  2879  0E42  07F0               	addwf	___ftpack@arg,f
  2880  0E43  3000               	movlw	0
  2881  0E44  1803               	skipnc
  2882  0E45  3001               	movlw	1
  2883  0E46  07F1               	addwf	___ftpack@arg+1,f
  2884  0E47  3000               	movlw	0
  2885  0E48  1803               	skipnc
  2886  0E49  3001               	movlw	1
  2887  0E4A  07F2               	addwf	___ftpack@arg+2,f
  2888  0E4B  3001               	movlw	1
  2889  0E4C                     u1935:	
  2890  0E4C  1003               	clrc
  2891  0E4D  0CF2               	rrf	___ftpack@arg+2,f
  2892  0E4E  0CF1               	rrf	___ftpack@arg+1,f
  2893  0E4F  0CF0               	rrf	___ftpack@arg,f
  2894  0E50  3EFF               	addlw	-1
  2895  0E51  1D03               	skipz
  2896  0E52  2E4C               	goto	u1935
  2897  0E53                     l546:	
  2898  0E53  30FF               	movlw	255
  2899  0E54  0572               	andwf	___ftpack@arg+2,w
  2900  0E55  1903               	btfsc	3,2
  2901  0E56  2E62               	goto	l1577
  2902  0E57  2E3D               	goto	l1569
  2903  0E58                     l1575:	
  2904  0E58  3001               	movlw	1
  2905  0E59  02F3               	subwf	___ftpack@exp,f
  2906  0E5A  3001               	movlw	1
  2907  0E5B                     u1955:	
  2908  0E5B  1003               	clrc
  2909  0E5C  0DF0               	rlf	___ftpack@arg,f
  2910  0E5D  0DF1               	rlf	___ftpack@arg+1,f
  2911  0E5E  0DF2               	rlf	___ftpack@arg+2,f
  2912  0E5F  3EFF               	addlw	-1
  2913  0E60  1D03               	skipz
  2914  0E61  2E5B               	goto	u1955
  2915  0E62                     l1577:	
  2916  0E62  1BF1               	btfsc	___ftpack@arg+1,7
  2917  0E63  2E68               	goto	l553
  2918  0E64  3002               	movlw	2
  2919  0E65  0273               	subwf	___ftpack@exp,w
  2920  0E66  1803               	skipnc
  2921  0E67  2E58               	goto	l1575
  2922  0E68                     l553:	
  2923  0E68  1873               	btfsc	___ftpack@exp,0
  2924  0E69  2E70               	goto	l554
  2925  0E6A  30FF               	movlw	255
  2926  0E6B  05F0               	andwf	___ftpack@arg,f
  2927  0E6C  307F               	movlw	127
  2928  0E6D  05F1               	andwf	___ftpack@arg+1,f
  2929  0E6E  30FF               	movlw	255
  2930  0E6F  05F2               	andwf	___ftpack@arg+2,f
  2931  0E70                     l554:	
  2932  0E70  1003               	clrc
  2933  0E71  0CF3               	rrf	___ftpack@exp,f
  2934  0E72  0873               	movf	___ftpack@exp,w
  2935  0E73  00F5               	movwf	??___ftpack
  2936  0E74  01F6               	clrf	??___ftpack+1
  2937  0E75  01F7               	clrf	??___ftpack+2
  2938  0E76  3010               	movlw	16
  2939  0E77                     u1995:	
  2940  0E77  1003               	clrc
  2941  0E78  0DF5               	rlf	??___ftpack,f
  2942  0E79  0DF6               	rlf	??___ftpack+1,f
  2943  0E7A  0DF7               	rlf	??___ftpack+2,f
  2944  0E7B  3EFF               	addlw	-1
  2945  0E7C  1D03               	skipz
  2946  0E7D  2E77               	goto	u1995
  2947  0E7E  0875               	movf	??___ftpack,w
  2948  0E7F  04F0               	iorwf	___ftpack@arg,f
  2949  0E80  0876               	movf	??___ftpack+1,w
  2950  0E81  04F1               	iorwf	___ftpack@arg+1,f
  2951  0E82  0877               	movf	??___ftpack+2,w
  2952  0E83  04F2               	iorwf	___ftpack@arg+2,f
  2953  0E84  0874               	movf	___ftpack@sign,w
  2954  0E85  1903               	btfsc	3,2
  2955  0E86  0008               	return
  2956  0E87  17F2               	bsf	___ftpack@arg+2,7
  2957  0E88  0008               	return
  2958  0E89                     __end_of___ftpack:	
  2959                           
  2960                           	psect	text10
  2961  03C5                     __ptext10:	
  2962 ;; *************** function _UART_TxNumber *****************
  2963 ;; Defined at:
  2964 ;;		line 259 in file "../00-libfiles/uart.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  v_numericSys    1    wreg     unsigned char 
  2967 ;;  v_number_u32    4    4[BANK0 ] unsigned long 
  2968 ;;  v_numOfDigit    1    8[BANK0 ] unsigned char 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  v_numericSys    1   33[BANK0 ] unsigned char 
  2971 ;;  a              10   21[BANK0 ] unsigned char [10]
  2972 ;;  i               1   34[BANK0 ] unsigned char 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2982 ;;      Params:         0       5       0       0       0
  2983 ;;      Locals:         0      14       0       0       0
  2984 ;;      Temps:          0      12       0       0       0
  2985 ;;      Totals:         0      31       0       0       0
  2986 ;;Total ram usage:       31 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    1
  2989 ;; This function calls:
  2990 ;;		_UART_TxChar
  2991 ;;		___bmul
  2992 ;;		___lldiv
  2993 ;; This function is called by:
  2994 ;;		_UART_TxFloatNumber
  2995 ;;		_UART_Printf
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           
  3000                           ;psect for function _UART_TxNumber
  3001  03C5                     _UART_TxNumber:	
  3002                           
  3003                           ;incstack = 0
  3004                           ; Regs used in _UART_TxNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3005                           ;UART_TxNumber@v_numericSystem_u8 stored from wreg
  3006  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  3007  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  3008  03C7  00C1               	movwf	UART_TxNumber@v_numericSystem_u8
  3009                           
  3010                           ;uart.c: 261: uint8_t i=0,a[10];
  3011  03C8  01C2               	clrf	UART_TxNumber@i
  3012                           
  3013                           ;uart.c: 263: if(2u == v_numericSystem_u8)
  3014  03C9  3002               	movlw	2
  3015  03CA  0641               	xorwf	UART_TxNumber@v_numericSystem_u8,w
  3016  03CB  1903               	btfsc	3,2
  3017  03CC  2C0C               	goto	l1693
  3018  03CD  2C10               	goto	l1695
  3019  03CE                     l1687:	
  3020                           ;uart.c: 264: {
  3021                           ;uart.c: 265: while(v_numOfDigitsToTransmit_u8!=0)
  3022                           
  3023                           
  3024                           ;uart.c: 266: {
  3025                           ;uart.c: 269: i = (((v_number_u32)&((1<<((v_numOfDigitsToTransmit_u8-1)))))!=0u);
  3026  03CE  0824               	movf	UART_TxNumber@v_number_u32,w
  3027  03CF  00A9               	movwf	??_UART_TxNumber
  3028  03D0  0825               	movf	UART_TxNumber@v_number_u32+1,w
  3029  03D1  00AA               	movwf	??_UART_TxNumber+1
  3030  03D2  0826               	movf	UART_TxNumber@v_number_u32+2,w
  3031  03D3  00AB               	movwf	??_UART_TxNumber+2
  3032  03D4  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3033  03D5  00AC               	movwf	??_UART_TxNumber+3
  3034  03D6  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3035  03D7  3EFF               	addlw	-1
  3036  03D8  00AD               	movwf	??_UART_TxNumber+4
  3037  03D9  0AAD               	incf	??_UART_TxNumber+4,f
  3038  03DA  3001               	movlw	1
  3039  03DB  00AE               	movwf	??_UART_TxNumber+5
  3040  03DC  3000               	movlw	0
  3041  03DD  00AF               	movwf	??_UART_TxNumber+6
  3042  03DE  2BE2               	goto	u2424
  3043  03DF                     u2425:	
  3044  03DF  1003               	clrc
  3045  03E0  0DAE               	rlf	??_UART_TxNumber+5,f
  3046  03E1  0DAF               	rlf	??_UART_TxNumber+6,f
  3047  03E2                     u2424:	
  3048  03E2  0BAD               	decfsz	??_UART_TxNumber+4,f
  3049  03E3  2BDF               	goto	u2425
  3050  03E4  082E               	movf	??_UART_TxNumber+5,w
  3051  03E5  00B0               	movwf	??_UART_TxNumber+7
  3052  03E6  082F               	movf	??_UART_TxNumber+6,w
  3053  03E7  00B1               	movwf	??_UART_TxNumber+8
  3054  03E8  3000               	movlw	0
  3055  03E9  1BB1               	btfsc	??_UART_TxNumber+8,7
  3056  03EA  30FF               	movlw	255
  3057  03EB  00B2               	movwf	??_UART_TxNumber+9
  3058  03EC  00B3               	movwf	??_UART_TxNumber+10
  3059  03ED  0830               	movf	??_UART_TxNumber+7,w
  3060  03EE  05A9               	andwf	??_UART_TxNumber,f
  3061  03EF  0831               	movf	??_UART_TxNumber+8,w
  3062  03F0  05AA               	andwf	??_UART_TxNumber+1,f
  3063  03F1  0832               	movf	??_UART_TxNumber+9,w
  3064  03F2  05AB               	andwf	??_UART_TxNumber+2,f
  3065  03F3  0833               	movf	??_UART_TxNumber+10,w
  3066  03F4  05AC               	andwf	??_UART_TxNumber+3,f
  3067  03F5  082C               	movf	??_UART_TxNumber+3,w
  3068  03F6  042B               	iorwf	??_UART_TxNumber+2,w
  3069  03F7  042A               	iorwf	??_UART_TxNumber+1,w
  3070  03F8  0429               	iorwf	??_UART_TxNumber,w
  3071  03F9  1903               	btfsc	3,2
  3072  03FA  2BFD               	goto	u2430
  3073  03FB  3001               	movlw	1
  3074  03FC  2BFE               	goto	u2440
  3075  03FD                     u2430:	
  3076  03FD  3000               	movlw	0
  3077  03FE                     u2440:	
  3078  03FE  00B4               	movwf	??_UART_TxNumber+11
  3079  03FF  0834               	movf	??_UART_TxNumber+11,w
  3080  0400  00C2               	movwf	UART_TxNumber@i
  3081                           
  3082                           ;uart.c: 270: UART_TxChar(((i)+0x30));
  3083  0401  0842               	movf	UART_TxNumber@i,w
  3084  0402  3E30               	addlw	48
  3085  0403  120A  158A  23DF  120A  118A  	fcall	_UART_TxChar
  3086                           
  3087                           ;uart.c: 271: v_numOfDigitsToTransmit_u8--;
  3088  0408  3001               	movlw	1
  3089  0409  1283               	bcf	3,5	;RP0=0, select bank0
  3090  040A  1303               	bcf	3,6	;RP1=0, select bank0
  3091  040B  02A8               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,f
  3092  040C                     l1693:	
  3093  040C  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3094  040D  1903               	btfsc	3,2
  3095  040E  0008               	return
  3096  040F  2BCE               	goto	l1687
  3097  0410                     l1695:	
  3098                           ;uart.c: 272: }
  3099                           ;uart.c: 273: }
  3100                           
  3101                           
  3102                           ;uart.c: 274: else if(v_number_u32==0)
  3103  0410  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3104  0411  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  3105  0412  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  3106  0413  0424               	iorwf	UART_TxNumber@v_number_u32,w
  3107  0414  1D03               	skipz
  3108  0415  2C1B               	goto	l1699
  3109                           
  3110                           ;uart.c: 275: {
  3111                           ;uart.c: 278: UART_TxChar('0');
  3112  0416  3030               	movlw	48
  3113  0417  120A  158A  23DF   	fcall	_UART_TxChar
  3114                           
  3115                           ;uart.c: 279: }
  3116  041A  0008               	return
  3117  041B                     l1699:	
  3118                           
  3119                           ;uart.c: 280: else
  3120                           ;uart.c: 281: {
  3121                           ;uart.c: 282: for(i=0;i<v_numOfDigitsToTransmit_u8;i++)
  3122  041B  1283               	bcf	3,5	;RP0=0, select bank0
  3123  041C  1303               	bcf	3,6	;RP1=0, select bank0
  3124  041D  01C2               	clrf	UART_TxNumber@i
  3125  041E                     l1717:	
  3126  041E  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3127  041F  0242               	subwf	UART_TxNumber@i,w
  3128  0420  1803               	btfsc	3,0
  3129  0421  2CB3               	goto	l1729
  3130                           
  3131                           ;uart.c: 283: {
  3132                           ;uart.c: 286: if(v_number_u32!=0)
  3133  0422  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3134  0423  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  3135  0424  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  3136  0425  0424               	iorwf	UART_TxNumber@v_number_u32,w
  3137  0426  1903               	skipnz
  3138  0427  2C7D               	goto	l1707
  3139                           
  3140                           ;uart.c: 287: {
  3141                           ;uart.c: 294: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u
      +                          32/v_numericSystem_u8)));
  3142  0428  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  3143  0429  00A9               	movwf	??_UART_TxNumber
  3144  042A  0829               	movf	??_UART_TxNumber,w
  3145  042B  00A0               	movwf	___bmul@multiplicand
  3146  042C  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3147  042D  00F7               	movwf	___lldiv@dividend+3
  3148  042E  0826               	movf	UART_TxNumber@v_number_u32+2,w
  3149  042F  00F6               	movwf	___lldiv@dividend+2
  3150  0430  0825               	movf	UART_TxNumber@v_number_u32+1,w
  3151  0431  00F5               	movwf	___lldiv@dividend+1
  3152  0432  0824               	movf	UART_TxNumber@v_number_u32,w
  3153  0433  00F4               	movwf	___lldiv@dividend
  3154  0434  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  3155  0435  00AA               	movwf	??_UART_TxNumber+1
  3156  0436  01AB               	clrf	??_UART_TxNumber+2
  3157  0437  01AC               	clrf	??_UART_TxNumber+3
  3158  0438  01AD               	clrf	??_UART_TxNumber+4
  3159  0439  082D               	movf	??_UART_TxNumber+4,w
  3160  043A  00F3               	movwf	___lldiv@divisor+3
  3161  043B  082C               	movf	??_UART_TxNumber+3,w
  3162  043C  00F2               	movwf	___lldiv@divisor+2
  3163  043D  082B               	movf	??_UART_TxNumber+2,w
  3164  043E  00F1               	movwf	___lldiv@divisor+1
  3165  043F  082A               	movf	??_UART_TxNumber+1,w
  3166  0440  00F0               	movwf	___lldiv@divisor
  3167  0441  120A  158A  24FF  120A  118A  	fcall	___lldiv
  3168  0446  0870               	movf	?___lldiv,w
  3169  0447  120A  158A  23F2  120A  118A  	fcall	___bmul
  3170  044C  3AFF               	xorlw	255
  3171  044D  3E01               	addlw	1
  3172  044E  1283               	bcf	3,5	;RP0=0, select bank0
  3173  044F  1303               	bcf	3,6	;RP1=0, select bank0
  3174  0450  0724               	addwf	UART_TxNumber@v_number_u32,w
  3175  0451  00AE               	movwf	??_UART_TxNumber+5
  3176  0452  0842               	movf	UART_TxNumber@i,w
  3177  0453  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3178  0454  0084               	movwf	4
  3179  0455  082E               	movf	??_UART_TxNumber+5,w
  3180  0456  1383               	bcf	3,7	;select IRP bank0
  3181  0457  0080               	movwf	0
  3182                           
  3183                           ;uart.c: 295: v_number_u32=v_number_u32/v_numericSystem_u8;
  3184  0458  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  3185  0459  00A9               	movwf	??_UART_TxNumber
  3186  045A  01AA               	clrf	??_UART_TxNumber+1
  3187  045B  01AB               	clrf	??_UART_TxNumber+2
  3188  045C  01AC               	clrf	??_UART_TxNumber+3
  3189  045D  082C               	movf	??_UART_TxNumber+3,w
  3190  045E  00F3               	movwf	___lldiv@divisor+3
  3191  045F  082B               	movf	??_UART_TxNumber+2,w
  3192  0460  00F2               	movwf	___lldiv@divisor+2
  3193  0461  082A               	movf	??_UART_TxNumber+1,w
  3194  0462  00F1               	movwf	___lldiv@divisor+1
  3195  0463  0829               	movf	??_UART_TxNumber,w
  3196  0464  00F0               	movwf	___lldiv@divisor
  3197  0465  0827               	movf	UART_TxNumber@v_number_u32+3,w
  3198  0466  00F7               	movwf	___lldiv@dividend+3
  3199  0467  0826               	movf	UART_TxNumber@v_number_u32+2,w
  3200  0468  00F6               	movwf	___lldiv@dividend+2
  3201  0469  0825               	movf	UART_TxNumber@v_number_u32+1,w
  3202  046A  00F5               	movwf	___lldiv@dividend+1
  3203  046B  0824               	movf	UART_TxNumber@v_number_u32,w
  3204  046C  00F4               	movwf	___lldiv@dividend
  3205  046D  120A  158A  24FF  120A  118A  	fcall	___lldiv
  3206  0472  0873               	movf	?___lldiv+3,w
  3207  0473  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0474  1303               	bcf	3,6	;RP1=0, select bank0
  3209  0475  00A7               	movwf	UART_TxNumber@v_number_u32+3
  3210  0476  0872               	movf	?___lldiv+2,w
  3211  0477  00A6               	movwf	UART_TxNumber@v_number_u32+2
  3212  0478  0871               	movf	?___lldiv+1,w
  3213  0479  00A5               	movwf	UART_TxNumber@v_number_u32+1
  3214  047A  0870               	movf	?___lldiv,w
  3215  047B  00A4               	movwf	UART_TxNumber@v_number_u32
  3216                           
  3217                           ;uart.c: 296: }
  3218  047C  2C89               	goto	l1715
  3219  047D                     l1707:	
  3220                           
  3221                           ;uart.c: 297: else if( (v_numOfDigitsToTransmit_u8 == 0xffu) ||
  3222                           ;uart.c: 298: (v_numOfDigitsToTransmit_u8 > 10u))
  3223  047D  0A28               	incf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3224  047E  1903               	btfsc	3,2
  3225  047F  2CB3               	goto	l1729
  3226  0480  300B               	movlw	11
  3227  0481  0228               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  3228  0482  1803               	btfsc	3,0
  3229  0483  2CB3               	goto	l1729
  3230                           
  3231                           ;uart.c: 304: else
  3232                           ;uart.c: 305: {
  3233                           ;uart.c: 309: a[i]=0;
  3234                           
  3235                           ;uart.c: 303: }
  3236                           
  3237                           ;uart.c: 299: {
  3238                           ;uart.c: 302: break;
  3239  0484  0842               	movf	UART_TxNumber@i,w
  3240  0485  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3241  0486  0084               	movwf	4
  3242  0487  1383               	bcf	3,7	;select IRP bank0
  3243  0488  0180               	clrf	0
  3244  0489                     l1715:	
  3245  0489  3001               	movlw	1
  3246  048A  00A9               	movwf	??_UART_TxNumber
  3247  048B  0829               	movf	??_UART_TxNumber,w
  3248  048C  07C2               	addwf	UART_TxNumber@i,f
  3249  048D  2C1E               	goto	l1717
  3250  048E                     l1719:	
  3251                           ;uart.c: 310: }
  3252                           ;uart.c: 311: }
  3253                           ;uart.c: 313: while(i)
  3254                           
  3255                           
  3256                           ;uart.c: 314: {
  3257                           ;uart.c: 316: UART_TxChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  3258  048E  0842               	movf	UART_TxNumber@i,w
  3259  048F  3EFF               	addlw	255
  3260  0490  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3261  0491  0084               	movwf	4
  3262  0492  300A               	movlw	10
  3263  0493  1383               	bcf	3,7	;select IRP bank0
  3264  0494  0200               	subwf	0,w
  3265  0495  1803               	skipnc
  3266  0496  2C9E               	goto	l1723
  3267  0497  0842               	movf	UART_TxNumber@i,w
  3268  0498  3EFF               	addlw	255
  3269  0499  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3270  049A  0084               	movwf	4
  3271  049B  0800               	movf	0,w
  3272  049C  3E30               	addlw	48
  3273  049D  2CA4               	goto	L2
  3274  049E                     l1723:	
  3275  049E  0842               	movf	UART_TxNumber@i,w
  3276  049F  3EFF               	addlw	255
  3277  04A0  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  3278  04A1  0084               	movwf	4
  3279  04A2  0800               	movf	0,w
  3280  04A3  3E37               	addlw	55
  3281  04A4                     L2:	
  3282  04A4  00BF               	movwf	_UART_TxNumber$207
  3283  04A5  3000               	movlw	0
  3284  04A6  1803               	skipnc
  3285  04A7  3001               	movlw	1
  3286  04A8  00C0               	movwf	_UART_TxNumber$207+1
  3287  04A9  083F               	movf	_UART_TxNumber$207,w
  3288  04AA  120A  158A  23DF  120A  118A  	fcall	_UART_TxChar
  3289                           
  3290                           ;uart.c: 317: i--;
  3291  04AF  3001               	movlw	1
  3292  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  3293  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  3294  04B2  02C2               	subwf	UART_TxNumber@i,f
  3295  04B3                     l1729:	
  3296  04B3  0842               	movf	UART_TxNumber@i,w
  3297  04B4  1903               	btfsc	3,2
  3298  04B5  0008               	return
  3299  04B6  2C8E               	goto	l1719
  3300  04B7                     __end_of_UART_TxNumber:	
  3301                           
  3302                           	psect	text11
  3303  0BF2                     __ptext11:	
  3304 ;; *************** function ___bmul *****************
  3305 ;; Defined at:
  3306 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\Umul8.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  multiplier      1    wreg     unsigned char 
  3309 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3312 ;;  product         1    2[BANK0 ] unsigned char 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      unsigned char 
  3315 ;; Registers used:
  3316 ;;		wreg, status,2, status,0
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3322 ;;      Params:         0       1       0       0       0
  3323 ;;      Locals:         0       2       0       0       0
  3324 ;;      Temps:          0       1       0       0       0
  3325 ;;      Totals:         0       4       0       0       0
  3326 ;;Total ram usage:        4 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; This function calls:
  3329 ;;		Nothing
  3330 ;; This function is called by:
  3331 ;;		_UART_TxNumber
  3332 ;;		_UART_Printf
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           
  3337                           ;psect for function ___bmul
  3338  0BF2                     ___bmul:	
  3339                           
  3340                           ;incstack = 0
  3341                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3342                           ;___bmul@multiplier stored from wreg
  3343  0BF2  1283               	bcf	3,5	;RP0=0, select bank0
  3344  0BF3  1303               	bcf	3,6	;RP1=0, select bank0
  3345  0BF4  00A3               	movwf	___bmul@multiplier
  3346  0BF5  01A2               	clrf	___bmul@product
  3347  0BF6                     l1545:	
  3348  0BF6  1C23               	btfss	___bmul@multiplier,0
  3349  0BF7  2BFC               	goto	l1549
  3350  0BF8  0820               	movf	___bmul@multiplicand,w
  3351  0BF9  00A1               	movwf	??___bmul
  3352  0BFA  0821               	movf	??___bmul,w
  3353  0BFB  07A2               	addwf	___bmul@product,f
  3354  0BFC                     l1549:	
  3355  0BFC  1003               	clrc
  3356  0BFD  0DA0               	rlf	___bmul@multiplicand,f
  3357  0BFE  1003               	clrc
  3358  0BFF  0CA3               	rrf	___bmul@multiplier,f
  3359  0C00  0823               	movf	___bmul@multiplier,w
  3360  0C01  1D03               	btfss	3,2
  3361  0C02  2BF6               	goto	l1545
  3362  0C03  0822               	movf	___bmul@product,w
  3363  0C04  0008               	return
  3364  0C05                     __end_of___bmul:	
  3365                           
  3366                           	psect	text12
  3367  0BDF                     __ptext12:	
  3368 ;; *************** function _UART_TxChar *****************
  3369 ;; Defined at:
  3370 ;;		line 144 in file "../00-libfiles/uart.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  var_uartData    1    wreg     unsigned char 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  var_uartData    1    0[COMMON] unsigned char 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      void 
  3377 ;; Registers used:
  3378 ;;		wreg
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3384 ;;      Params:         0       0       0       0       0
  3385 ;;      Locals:         1       0       0       0       0
  3386 ;;      Temps:          0       0       0       0       0
  3387 ;;      Totals:         1       0       0       0       0
  3388 ;;Total ram usage:        1 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; This function calls:
  3391 ;;		Nothing
  3392 ;; This function is called by:
  3393 ;;		_UART_TxString
  3394 ;;		_UART_TxNumber
  3395 ;;		_UART_TxFloatNumber
  3396 ;;		_UART_Printf
  3397 ;;		_UART_RxString
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           
  3402                           ;psect for function _UART_TxChar
  3403  0BDF                     _UART_TxChar:	
  3404                           
  3405                           ;incstack = 0
  3406                           ; Regs used in _UART_TxChar: [wreg]
  3407                           ;UART_TxChar@var_uartData_u8 stored from wreg
  3408  0BDF  00F0               	movwf	UART_TxChar@var_uartData_u8
  3409  0BE0                     l201:	
  3410                           ;uart.c: 146: while(TXIF==0);
  3411                           
  3412  0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0BE1  1303               	bcf	3,6	;RP1=0, select bank0
  3414  0BE2  1E0C               	btfss	12,4	;volatile
  3415  0BE3  2BE0               	goto	l201
  3416                           
  3417                           ;uart.c: 147: TXIF=0;
  3418  0BE4  120C               	bcf	12,4	;volatile
  3419                           
  3420                           ;uart.c: 148: TXREG=var_uartData_u8;
  3421  0BE5  0870               	movf	UART_TxChar@var_uartData_u8,w
  3422  0BE6  0099               	movwf	25	;volatile
  3423  0BE7  0008               	return
  3424  0BE8                     __end_of_UART_TxChar:	
  3425                           
  3426                           	psect	text13
  3427  0C1A                     __ptext13:	
  3428 ;; *************** function _UART_Init *****************
  3429 ;; Defined at:
  3430 ;;		line 65 in file "../00-libfiles/uart.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  var_baudRate    4   16[BANK0 ] unsigned long 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0, pclath, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3444 ;;      Params:         0       4       0       0       0
  3445 ;;      Locals:         0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0
  3447 ;;      Totals:         0       4       0       0       0
  3448 ;;Total ram usage:        4 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    2
  3451 ;; This function calls:
  3452 ;;		_UART_SetBaudRate
  3453 ;; This function is called by:
  3454 ;;		_main
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           
  3459                           ;psect for function _UART_Init
  3460  0C1A                     _UART_Init:	
  3461                           
  3462                           ;uart.c: 67: TRISC=0x80;
  3463                           
  3464                           ;incstack = 0
  3465                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3466  0C1A  3080               	movlw	128
  3467  0C1B  1683               	bsf	3,5	;RP0=1, select bank1
  3468  0C1C  1303               	bcf	3,6	;RP1=0, select bank1
  3469  0C1D  0087               	movwf	7	;volatile
  3470                           
  3471                           ;uart.c: 68: TXSTA=0x20;
  3472  0C1E  3020               	movlw	32
  3473  0C1F  0098               	movwf	24	;volatile
  3474                           
  3475                           ;uart.c: 69: RCSTA=0x90;
  3476  0C20  3090               	movlw	144
  3477  0C21  1283               	bcf	3,5	;RP0=0, select bank0
  3478  0C22  1303               	bcf	3,6	;RP1=0, select bank0
  3479  0C23  0098               	movwf	24	;volatile
  3480                           
  3481                           ;uart.c: 70: UART_SetBaudRate(var_baudRate_u32);
  3482  0C24  0833               	movf	UART_Init@var_baudRate_u32+3,w
  3483  0C25  00A3               	movwf	UART_SetBaudRate@var_baudRate_u32+3
  3484  0C26  0832               	movf	UART_Init@var_baudRate_u32+2,w
  3485  0C27  00A2               	movwf	UART_SetBaudRate@var_baudRate_u32+2
  3486  0C28  0831               	movf	UART_Init@var_baudRate_u32+1,w
  3487  0C29  00A1               	movwf	UART_SetBaudRate@var_baudRate_u32+1
  3488  0C2A  0830               	movf	UART_Init@var_baudRate_u32,w
  3489  0C2B  00A0               	movwf	UART_SetBaudRate@var_baudRate_u32
  3490  0C2C  120A  158A  26FE   	fcall	_UART_SetBaudRate
  3491  0C2F  0008               	return
  3492  0C30                     __end_of_UART_Init:	
  3493                           
  3494                           	psect	text14
  3495  0EFE                     __ptext14:	
  3496 ;; *************** function _UART_SetBaudRate *****************
  3497 ;; Defined at:
  3498 ;;		line 90 in file "../00-libfiles/uart.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  var_baudRate    4    0[BANK0 ] unsigned long 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  RegValue        4   12[BANK0 ] unsigned long 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1    wreg      void 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0, pclath, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3512 ;;      Params:         0       4       0       0       0
  3513 ;;      Locals:         0       4       0       0       0
  3514 ;;      Temps:          0       8       0       0       0
  3515 ;;      Totals:         0      16       0       0       0
  3516 ;;Total ram usage:       16 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    1
  3519 ;; This function calls:
  3520 ;;		___lldiv
  3521 ;; This function is called by:
  3522 ;;		_UART_Init
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function _UART_SetBaudRate
  3528  0EFE                     _UART_SetBaudRate:	
  3529                           
  3530                           ;uart.c: 92: uint32_t RegValue;
  3531                           ;uart.c: 94: if((var_baudRate_u32 >= 2400) && (var_baudRate_u32<=115200UL))
  3532                           
  3533                           ;incstack = 0
  3534                           ; Regs used in _UART_SetBaudRate: [wreg+status,2+status,0+pclath+cstack]
  3535  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  3536  0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  3537  0F00  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  3538  0F01  1D03               	btfss	3,2
  3539  0F02  2F10               	goto	l2039
  3540  0F03  0822               	movf	UART_SetBaudRate@var_baudRate_u32+2,w
  3541  0F04  1D03               	btfss	3,2
  3542  0F05  2F10               	goto	l2039
  3543  0F06  3009               	movlw	9
  3544  0F07  0221               	subwf	UART_SetBaudRate@var_baudRate_u32+1,w
  3545  0F08  1D03               	skipz
  3546  0F09  2F0E               	goto	u3363
  3547  0F0A  3060               	movlw	96
  3548  0F0B  0220               	subwf	UART_SetBaudRate@var_baudRate_u32,w
  3549  0F0C  1D03               	skipz
  3550  0F0D  2F0E               	goto	u3363
  3551  0F0E                     u3363:	
  3552  0F0E  1C03               	btfss	3,0
  3553  0F0F  2F6B               	goto	l2043
  3554  0F10                     l2039:	
  3555  0F10  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  3556  0F11  1D03               	btfss	3,2
  3557  0F12  2F6B               	goto	l2043
  3558  0F13  3001               	movlw	1
  3559  0F14  0222               	subwf	UART_SetBaudRate@var_baudRate_u32+2,w
  3560  0F15  1D03               	skipz
  3561  0F16  2F1F               	goto	u3373
  3562  0F17  30C2               	movlw	194
  3563  0F18  0221               	subwf	UART_SetBaudRate@var_baudRate_u32+1,w
  3564  0F19  1D03               	skipz
  3565  0F1A  2F1F               	goto	u3373
  3566  0F1B  3001               	movlw	1
  3567  0F1C  0220               	subwf	UART_SetBaudRate@var_baudRate_u32,w
  3568  0F1D  1D03               	skipz
  3569  0F1E  2F1F               	goto	u3373
  3570  0F1F                     u3373:	
  3571  0F1F  1803               	btfsc	3,0
  3572  0F20  2F6B               	goto	l2043
  3573                           
  3574                           ;uart.c: 95: {
  3575                           ;uart.c: 98: RegValue = (uint32_t)((20000000UL / (64*(uint32_t)var_baudRate_u32)) - 1);
  3576  0F21  30FF               	movlw	255
  3577  0F22  00A4               	movwf	??_UART_SetBaudRate
  3578  0F23  30FF               	movlw	255
  3579  0F24  00A5               	movwf	??_UART_SetBaudRate+1
  3580  0F25  30FF               	movlw	255
  3581  0F26  00A6               	movwf	??_UART_SetBaudRate+2
  3582  0F27  30FF               	movlw	255
  3583  0F28  00A7               	movwf	??_UART_SetBaudRate+3
  3584  0F29  0820               	movf	UART_SetBaudRate@var_baudRate_u32,w
  3585  0F2A  00A8               	movwf	??_UART_SetBaudRate+4
  3586  0F2B  0821               	movf	UART_SetBaudRate@var_baudRate_u32+1,w
  3587  0F2C  00A9               	movwf	??_UART_SetBaudRate+5
  3588  0F2D  0822               	movf	UART_SetBaudRate@var_baudRate_u32+2,w
  3589  0F2E  00AA               	movwf	??_UART_SetBaudRate+6
  3590  0F2F  0823               	movf	UART_SetBaudRate@var_baudRate_u32+3,w
  3591  0F30  00AB               	movwf	??_UART_SetBaudRate+7
  3592  0F31  3006               	movlw	6
  3593  0F32                     u3385:	
  3594  0F32  1003               	clrc
  3595  0F33  0DA8               	rlf	??_UART_SetBaudRate+4,f
  3596  0F34  0DA9               	rlf	??_UART_SetBaudRate+5,f
  3597  0F35  0DAA               	rlf	??_UART_SetBaudRate+6,f
  3598  0F36  0DAB               	rlf	??_UART_SetBaudRate+7,f
  3599  0F37  3EFF               	addlw	-1
  3600  0F38  1D03               	skipz
  3601  0F39  2F32               	goto	u3385
  3602  0F3A  082B               	movf	??_UART_SetBaudRate+7,w
  3603  0F3B  00F3               	movwf	___lldiv@divisor+3
  3604  0F3C  082A               	movf	??_UART_SetBaudRate+6,w
  3605  0F3D  00F2               	movwf	___lldiv@divisor+2
  3606  0F3E  0829               	movf	??_UART_SetBaudRate+5,w
  3607  0F3F  00F1               	movwf	___lldiv@divisor+1
  3608  0F40  0828               	movf	??_UART_SetBaudRate+4,w
  3609  0F41  00F0               	movwf	___lldiv@divisor
  3610  0F42  3001               	movlw	1
  3611  0F43  00F7               	movwf	___lldiv@dividend+3
  3612  0F44  3031               	movlw	49
  3613  0F45  00F6               	movwf	___lldiv@dividend+2
  3614  0F46  302D               	movlw	45
  3615  0F47  00F5               	movwf	___lldiv@dividend+1
  3616  0F48  3000               	movlw	0
  3617  0F49  00F4               	movwf	___lldiv@dividend
  3618  0F4A  120A  158A  24FF  120A  158A  	fcall	___lldiv
  3619  0F4F  0870               	movf	?___lldiv,w
  3620  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  3621  0F51  1303               	bcf	3,6	;RP1=0, select bank0
  3622  0F52  07A4               	addwf	??_UART_SetBaudRate,f
  3623  0F53  0871               	movf	?___lldiv+1,w
  3624  0F54  1803               	skipnc
  3625  0F55  0F71               	incfsz	?___lldiv+1,w
  3626  0F56  2F58               	goto	u3390
  3627  0F57  2F59               	goto	u3391
  3628  0F58                     u3390:	
  3629  0F58  07A5               	addwf	??_UART_SetBaudRate+1,f
  3630  0F59                     u3391:	
  3631  0F59  0872               	movf	?___lldiv+2,w
  3632  0F5A  1803               	skipnc
  3633  0F5B  0F72               	incfsz	?___lldiv+2,w
  3634  0F5C  2F5E               	goto	u3392
  3635  0F5D  2F5F               	goto	u3393
  3636  0F5E                     u3392:	
  3637  0F5E  07A6               	addwf	??_UART_SetBaudRate+2,f
  3638  0F5F                     u3393:	
  3639  0F5F  0873               	movf	?___lldiv+3,w
  3640  0F60  1803               	skipnc
  3641  0F61  0A73               	incf	?___lldiv+3,w
  3642  0F62  07A7               	addwf	??_UART_SetBaudRate+3,f
  3643  0F63  0827               	movf	??_UART_SetBaudRate+3,w
  3644  0F64  00AF               	movwf	UART_SetBaudRate@RegValue+3
  3645  0F65  0826               	movf	??_UART_SetBaudRate+2,w
  3646  0F66  00AE               	movwf	UART_SetBaudRate@RegValue+2
  3647  0F67  0825               	movf	??_UART_SetBaudRate+1,w
  3648  0F68  00AD               	movwf	UART_SetBaudRate@RegValue+1
  3649  0F69  0824               	movf	??_UART_SetBaudRate,w
  3650  0F6A  2F72               	goto	L3
  3651  0F6B                     l2043:	
  3652                           ;uart.c: 99: }
  3653                           
  3654                           
  3655                           ;uart.c: 100: else
  3656                           ;uart.c: 101: {
  3657                           ;uart.c: 103: RegValue = (uint32_t)((20000000UL / (64*(uint32_t)9600)) - 1);
  3658  0F6B  3000               	movlw	0
  3659  0F6C  00AF               	movwf	UART_SetBaudRate@RegValue+3
  3660  0F6D  3000               	movlw	0
  3661  0F6E  00AE               	movwf	UART_SetBaudRate@RegValue+2
  3662  0F6F  3000               	movlw	0
  3663  0F70  00AD               	movwf	UART_SetBaudRate@RegValue+1
  3664  0F71  301F               	movlw	31
  3665  0F72                     L3:	
  3666  0F72  00AC               	movwf	UART_SetBaudRate@RegValue
  3667                           
  3668                           ;uart.c: 104: }
  3669                           ;uart.c: 106: SPBRG = (uint8_t)RegValue;
  3670  0F73  082C               	movf	UART_SetBaudRate@RegValue,w
  3671  0F74  1683               	bsf	3,5	;RP0=1, select bank1
  3672  0F75  1303               	bcf	3,6	;RP1=0, select bank1
  3673  0F76  0099               	movwf	25	;volatile
  3674  0F77  0008               	return
  3675  0F78                     __end_of_UART_SetBaudRate:	
  3676                           
  3677                           	psect	text15
  3678  0CFF                     __ptext15:	
  3679 ;; *************** function ___lldiv *****************
  3680 ;; Defined at:
  3681 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;  divisor         4    0[COMMON] unsigned long 
  3684 ;;  dividend        4    4[COMMON] unsigned long 
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;  quotient        4    9[COMMON] unsigned long 
  3687 ;;  counter         1   13[COMMON] unsigned char 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  4    0[COMMON] unsigned long 
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3697 ;;      Params:         8       0       0       0       0
  3698 ;;      Locals:         5       0       0       0       0
  3699 ;;      Temps:          1       0       0       0       0
  3700 ;;      Totals:        14       0       0       0       0
  3701 ;;Total ram usage:       14 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; This function calls:
  3704 ;;		Nothing
  3705 ;; This function is called by:
  3706 ;;		_UART_SetBaudRate
  3707 ;;		_UART_TxNumber
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           
  3712                           ;psect for function ___lldiv
  3713  0CFF                     ___lldiv:	
  3714                           
  3715                           ;incstack = 0
  3716                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3717  0CFF  3000               	movlw	0
  3718  0D00  00FC               	movwf	___lldiv@quotient+3
  3719  0D01  3000               	movlw	0
  3720  0D02  00FB               	movwf	___lldiv@quotient+2
  3721  0D03  3000               	movlw	0
  3722  0D04  00FA               	movwf	___lldiv@quotient+1
  3723  0D05  3000               	movlw	0
  3724  0D06  00F9               	movwf	___lldiv@quotient
  3725  0D07  0873               	movf	___lldiv@divisor+3,w
  3726  0D08  0472               	iorwf	___lldiv@divisor+2,w
  3727  0D09  0471               	iorwf	___lldiv@divisor+1,w
  3728  0D0A  0470               	iorwf	___lldiv@divisor,w
  3729  0D0B  1903               	skipnz
  3730  0D0C  2D54               	goto	l1609
  3731  0D0D  01FD               	clrf	___lldiv@counter
  3732  0D0E  0AFD               	incf	___lldiv@counter,f
  3733  0D0F                     l1595:	
  3734  0D0F  1BF3               	btfsc	___lldiv@divisor+3,7
  3735  0D10  2D1F               	goto	l1597
  3736  0D11  3001               	movlw	1
  3737  0D12  00F8               	movwf	??___lldiv
  3738  0D13                     u2025:	
  3739  0D13  1003               	clrc
  3740  0D14  0DF0               	rlf	___lldiv@divisor,f
  3741  0D15  0DF1               	rlf	___lldiv@divisor+1,f
  3742  0D16  0DF2               	rlf	___lldiv@divisor+2,f
  3743  0D17  0DF3               	rlf	___lldiv@divisor+3,f
  3744  0D18  0BF8               	decfsz	??___lldiv,f
  3745  0D19  2D13               	goto	u2025
  3746  0D1A  3001               	movlw	1
  3747  0D1B  00F8               	movwf	??___lldiv
  3748  0D1C  0878               	movf	??___lldiv,w
  3749  0D1D  07FD               	addwf	___lldiv@counter,f
  3750  0D1E  2D0F               	goto	l1595
  3751  0D1F                     l1597:	
  3752  0D1F  3001               	movlw	1
  3753  0D20  00F8               	movwf	??___lldiv
  3754  0D21                     u2045:	
  3755  0D21  1003               	clrc
  3756  0D22  0DF9               	rlf	___lldiv@quotient,f
  3757  0D23  0DFA               	rlf	___lldiv@quotient+1,f
  3758  0D24  0DFB               	rlf	___lldiv@quotient+2,f
  3759  0D25  0DFC               	rlf	___lldiv@quotient+3,f
  3760  0D26  0BF8               	decfsz	??___lldiv,f
  3761  0D27  2D21               	goto	u2045
  3762  0D28  0873               	movf	___lldiv@divisor+3,w
  3763  0D29  0277               	subwf	___lldiv@dividend+3,w
  3764  0D2A  1D03               	skipz
  3765  0D2B  2D36               	goto	u2055
  3766  0D2C  0872               	movf	___lldiv@divisor+2,w
  3767  0D2D  0276               	subwf	___lldiv@dividend+2,w
  3768  0D2E  1D03               	skipz
  3769  0D2F  2D36               	goto	u2055
  3770  0D30  0871               	movf	___lldiv@divisor+1,w
  3771  0D31  0275               	subwf	___lldiv@dividend+1,w
  3772  0D32  1D03               	skipz
  3773  0D33  2D36               	goto	u2055
  3774  0D34  0870               	movf	___lldiv@divisor,w
  3775  0D35  0274               	subwf	___lldiv@dividend,w
  3776  0D36                     u2055:	
  3777  0D36  1C03               	skipc
  3778  0D37  2D47               	goto	l1605
  3779  0D38  0870               	movf	___lldiv@divisor,w
  3780  0D39  02F4               	subwf	___lldiv@dividend,f
  3781  0D3A  0871               	movf	___lldiv@divisor+1,w
  3782  0D3B  1C03               	skipc
  3783  0D3C  0F71               	incfsz	___lldiv@divisor+1,w
  3784  0D3D  02F5               	subwf	___lldiv@dividend+1,f
  3785  0D3E  0872               	movf	___lldiv@divisor+2,w
  3786  0D3F  1C03               	skipc
  3787  0D40  0F72               	incfsz	___lldiv@divisor+2,w
  3788  0D41  02F6               	subwf	___lldiv@dividend+2,f
  3789  0D42  0873               	movf	___lldiv@divisor+3,w
  3790  0D43  1C03               	skipc
  3791  0D44  0F73               	incfsz	___lldiv@divisor+3,w
  3792  0D45  02F7               	subwf	___lldiv@dividend+3,f
  3793  0D46  1479               	bsf	___lldiv@quotient,0
  3794  0D47                     l1605:	
  3795  0D47  3001               	movlw	1
  3796  0D48                     u2065:	
  3797  0D48  1003               	clrc
  3798  0D49  0CF3               	rrf	___lldiv@divisor+3,f
  3799  0D4A  0CF2               	rrf	___lldiv@divisor+2,f
  3800  0D4B  0CF1               	rrf	___lldiv@divisor+1,f
  3801  0D4C  0CF0               	rrf	___lldiv@divisor,f
  3802  0D4D  3EFF               	addlw	-1
  3803  0D4E  1D03               	skipz
  3804  0D4F  2D48               	goto	u2065
  3805  0D50  3001               	movlw	1
  3806  0D51  02FD               	subwf	___lldiv@counter,f
  3807  0D52  1D03               	btfss	3,2
  3808  0D53  2D1F               	goto	l1597
  3809  0D54                     l1609:	
  3810  0D54  087C               	movf	___lldiv@quotient+3,w
  3811  0D55  00F3               	movwf	?___lldiv+3
  3812  0D56  087B               	movf	___lldiv@quotient+2,w
  3813  0D57  00F2               	movwf	?___lldiv+2
  3814  0D58  087A               	movf	___lldiv@quotient+1,w
  3815  0D59  00F1               	movwf	?___lldiv+1
  3816  0D5A  0879               	movf	___lldiv@quotient,w
  3817  0D5B  00F0               	movwf	?___lldiv
  3818  0D5C  0008               	return
  3819  0D5D                     __end_of___lldiv:	
  3820                           
  3821                           	psect	text16
  3822  0CA6                     __ptext16:	
  3823 ;; *************** function _KEYPAD_Init *****************
  3824 ;; Defined at:
  3825 ;;		line 110 in file "../00-libfiles/keypad.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  row_0           1    wreg     enum E22
  3828 ;;  row_1           1    5[COMMON] enum E22
  3829 ;;  row_2           1    6[COMMON] enum E22
  3830 ;;  row_3           1    7[COMMON] enum E22
  3831 ;;  col_0           1    8[COMMON] enum E22
  3832 ;;  col_1           1    9[COMMON] enum E22
  3833 ;;  col_2           1   10[COMMON] enum E22
  3834 ;;  col_3           1   11[COMMON] enum E22
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;  row_0           1    0[BANK0 ] enum E22
  3837 ;;  i               1    1[BANK0 ] unsigned char 
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  1    wreg      void 
  3840 ;; Registers used:
  3841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3847 ;;      Params:         7       0       0       0       0
  3848 ;;      Locals:         0       2       0       0       0
  3849 ;;      Temps:          1       0       0       0       0
  3850 ;;      Totals:         8       2       0       0       0
  3851 ;;Total ram usage:       10 bytes
  3852 ;; Hardware stack levels used:    1
  3853 ;; Hardware stack levels required when called:    1
  3854 ;; This function calls:
  3855 ;;		_GPIO_PinDirection
  3856 ;; This function is called by:
  3857 ;;		_main
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           
  3862                           ;psect for function _KEYPAD_Init
  3863  0CA6                     _KEYPAD_Init:	
  3864                           
  3865                           ;incstack = 0
  3866                           ; Regs used in _KEYPAD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3867                           ;KEYPAD_Init@row_0 stored from wreg
  3868  0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  3869  0CA7  1303               	bcf	3,6	;RP1=0, select bank0
  3870  0CA8  00A0               	movwf	KEYPAD_Init@row_0
  3871                           
  3872                           ;keypad.c: 120: uint8_t i;
  3873                           ;keypad.c: 122: A_RowsPins_U8[0] = row_0;
  3874  0CA9  0820               	movf	KEYPAD_Init@row_0,w
  3875  0CAA  00FC               	movwf	??_KEYPAD_Init
  3876  0CAB  087C               	movf	??_KEYPAD_Init,w
  3877  0CAC  00EC               	movwf	_A_RowsPins_U8
  3878                           
  3879                           ;keypad.c: 123: A_RowsPins_U8[1] = row_1;
  3880  0CAD  0875               	movf	KEYPAD_Init@row_1,w
  3881  0CAE  00FC               	movwf	??_KEYPAD_Init
  3882  0CAF  087C               	movf	??_KEYPAD_Init,w
  3883  0CB0  00ED               	movwf	_A_RowsPins_U8+1
  3884                           
  3885                           ;keypad.c: 124: A_RowsPins_U8[2] = row_2;
  3886  0CB1  0876               	movf	KEYPAD_Init@row_2,w
  3887  0CB2  00FC               	movwf	??_KEYPAD_Init
  3888  0CB3  087C               	movf	??_KEYPAD_Init,w
  3889  0CB4  00EE               	movwf	_A_RowsPins_U8+2
  3890                           
  3891                           ;keypad.c: 125: A_RowsPins_U8[3] = row_3;
  3892  0CB5  0877               	movf	KEYPAD_Init@row_3,w
  3893  0CB6  00FC               	movwf	??_KEYPAD_Init
  3894  0CB7  087C               	movf	??_KEYPAD_Init,w
  3895  0CB8  00EF               	movwf	_A_RowsPins_U8+3
  3896                           
  3897                           ;keypad.c: 127: A_ColsPins_U8[0] = col_0;
  3898  0CB9  0878               	movf	KEYPAD_Init@col_0,w
  3899  0CBA  00FC               	movwf	??_KEYPAD_Init
  3900  0CBB  087C               	movf	??_KEYPAD_Init,w
  3901  0CBC  1683               	bsf	3,5	;RP0=1, select bank1
  3902  0CBD  1303               	bcf	3,6	;RP1=0, select bank1
  3903  0CBE  00A0               	movwf	_A_ColsPins_U8^(0+128)
  3904                           
  3905                           ;keypad.c: 128: A_ColsPins_U8[1] = col_1;
  3906  0CBF  0879               	movf	KEYPAD_Init@col_1,w
  3907  0CC0  00FC               	movwf	??_KEYPAD_Init
  3908  0CC1  087C               	movf	??_KEYPAD_Init,w
  3909  0CC2  00A1               	movwf	(_A_ColsPins_U8^(0+128)+1)
  3910                           
  3911                           ;keypad.c: 129: A_ColsPins_U8[2] = col_2;
  3912  0CC3  087A               	movf	KEYPAD_Init@col_2,w
  3913  0CC4  00FC               	movwf	??_KEYPAD_Init
  3914  0CC5  087C               	movf	??_KEYPAD_Init,w
  3915  0CC6  00A2               	movwf	(_A_ColsPins_U8^(0+128)+2)
  3916                           
  3917                           ;keypad.c: 130: A_ColsPins_U8[3] = col_3;
  3918  0CC7  087B               	movf	KEYPAD_Init@col_3,w
  3919  0CC8  00FC               	movwf	??_KEYPAD_Init
  3920  0CC9  087C               	movf	??_KEYPAD_Init,w
  3921  0CCA  00A3               	movwf	(_A_ColsPins_U8^(0+128)+3)
  3922                           
  3923                           ;keypad.c: 132: for(i=0;i<(4);i++)
  3924  0CCB  1283               	bcf	3,5	;RP0=0, select bank0
  3925  0CCC  1303               	bcf	3,6	;RP1=0, select bank0
  3926  0CCD  01A1               	clrf	KEYPAD_Init@i
  3927  0CCE  3004               	movlw	4
  3928  0CCF  0221               	subwf	KEYPAD_Init@i,w
  3929  0CD0  1803               	btfsc	3,0
  3930  0CD1  2CE7               	goto	l2077
  3931  0CD2                     l2071:	
  3932                           
  3933                           ;keypad.c: 133: {
  3934                           ;keypad.c: 134: GPIO_PinDirection(A_RowsPins_U8[i],0x00u);
  3935  0CD2  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  3936  0CD3  0821               	movf	KEYPAD_Init@i,w
  3937  0CD4  3E6C               	addlw	(low (_A_RowsPins_U8| 0))& (0+255)
  3938  0CD5  0084               	movwf	4
  3939  0CD6  1383               	bcf	3,7	;select IRP bank0
  3940  0CD7  0800               	movf	0,w
  3941  0CD8  120A  118A  22EC  120A  158A  	fcall	_GPIO_PinDirection
  3942  0CDD  3001               	movlw	1
  3943  0CDE  00FC               	movwf	??_KEYPAD_Init
  3944  0CDF  087C               	movf	??_KEYPAD_Init,w
  3945  0CE0  1283               	bcf	3,5	;RP0=0, select bank0
  3946  0CE1  1303               	bcf	3,6	;RP1=0, select bank0
  3947  0CE2  07A1               	addwf	KEYPAD_Init@i,f
  3948  0CE3  3004               	movlw	4
  3949  0CE4  0221               	subwf	KEYPAD_Init@i,w
  3950  0CE5  1C03               	skipc
  3951  0CE6  2CD2               	goto	l2071
  3952  0CE7                     l2077:	
  3953                           
  3954                           ;keypad.c: 135: }
  3955                           ;keypad.c: 137: for(i=0;i<(4);i++)
  3956  0CE7  01A1               	clrf	KEYPAD_Init@i
  3957  0CE8                     L4:	
  3958  0CE8  3004               	movlw	4
  3959  0CE9  0221               	subwf	KEYPAD_Init@i,w
  3960  0CEA  1803               	btfsc	3,0
  3961  0CEB  0008               	return
  3962                           
  3963                           ;keypad.c: 138: {
  3964                           ;keypad.c: 139: GPIO_PinDirection(A_ColsPins_U8[i],0x01u);
  3965  0CEC  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  3966  0CED  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  3967  0CEE  0821               	movf	KEYPAD_Init@i,w
  3968  0CEF  3EA0               	addlw	(low (_A_ColsPins_U8| 0))& (0+255)
  3969  0CF0  0084               	movwf	4
  3970  0CF1  1383               	bcf	3,7	;select IRP bank1
  3971  0CF2  0800               	movf	0,w
  3972  0CF3  120A  118A  22EC  120A  158A  	fcall	_GPIO_PinDirection
  3973  0CF8  3001               	movlw	1
  3974  0CF9  00FC               	movwf	??_KEYPAD_Init
  3975  0CFA  087C               	movf	??_KEYPAD_Init,w
  3976  0CFB  1283               	bcf	3,5	;RP0=0, select bank0
  3977  0CFC  1303               	bcf	3,6	;RP1=0, select bank0
  3978  0CFD  07A1               	addwf	KEYPAD_Init@i,f
  3979  0CFE  2CE8               	goto	L4
  3980  0CFF                     __end_of_KEYPAD_Init:	
  3981                           
  3982                           	psect	text17
  3983  02EC                     __ptext17:	
  3984 ;; *************** function _GPIO_PinDirection *****************
  3985 ;; Defined at:
  3986 ;;		line 60 in file "../00-libfiles/gpio.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;  enm_pinNumbe    1    wreg     enum E1088
  3989 ;;  var_pinDirn_    1    0[COMMON] unsigned char 
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  3992 ;;  var_portNumb    1    3[COMMON] unsigned char 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1    wreg      void 
  3995 ;; Registers used:
  3996 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4002 ;;      Params:         1       0       0       0       0
  4003 ;;      Locals:         2       0       0       0       0
  4004 ;;      Temps:          2       0       0       0       0
  4005 ;;      Totals:         5       0       0       0       0
  4006 ;;Total ram usage:        5 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; This function calls:
  4009 ;;		Nothing
  4010 ;; This function is called by:
  4011 ;;		_KEYPAD_Init
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           
  4016                           ;psect for function _GPIO_PinDirection
  4017  02EC                     _GPIO_PinDirection:	
  4018                           
  4019                           ;incstack = 0
  4020                           ; Regs used in _GPIO_PinDirection: [wreg-fsr0h+status,2+status,0]
  4021                           ;GPIO_PinDirection@enm_pinNumber stored from wreg
  4022  02EC  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  4023                           
  4024                           ;gpio.c: 63: uint8_t var_portNumber_u8;
  4025                           ;gpio.c: 66: var_portNumber_u8 = (enm_pinNumber>>3);
  4026  02ED  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  4027  02EE  00F1               	movwf	??_GPIO_PinDirection
  4028  02EF  3003               	movlw	3
  4029  02F0                     u3045:	
  4030  02F0  1003               	clrc
  4031  02F1  0CF1               	rrf	??_GPIO_PinDirection,f
  4032  02F2  3EFF               	addlw	-1
  4033  02F3  1D03               	skipz
  4034  02F4  2AF0               	goto	u3045
  4035  02F5  0871               	movf	??_GPIO_PinDirection,w
  4036  02F6  00F2               	movwf	??_GPIO_PinDirection+1
  4037  02F7  0872               	movf	??_GPIO_PinDirection+1,w
  4038  02F8  00F3               	movwf	GPIO_PinDirection@var_portNumber_u8
  4039                           
  4040                           ;gpio.c: 67: enm_pinNumber = enm_pinNumber & 0x07;
  4041  02F9  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  4042  02FA  3907               	andlw	7
  4043  02FB  00F1               	movwf	??_GPIO_PinDirection
  4044  02FC  0871               	movf	??_GPIO_PinDirection,w
  4045  02FD  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  4046                           
  4047                           ;gpio.c: 71: switch(var_portNumber_u8)
  4048  02FE  2BB3               	goto	l1947
  4049  02FF                     l1915:	
  4050                           ;gpio.c: 72: {
  4051                           ;gpio.c: 74: case 0:
  4052                           
  4053                           
  4054                           ;gpio.c: 75: ((var_pinDirn_u8)? ((TRISA) |= (1<<(enm_pinNumber))): ((TRISA) &= ~(1<<(enm
      +                          _pinNumber))));
  4055  02FF  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4056  0300  1903               	btfsc	3,2
  4057  0301  2B12               	goto	l1919
  4058  0302  3001               	movlw	1
  4059  0303  00F1               	movwf	??_GPIO_PinDirection
  4060  0304  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4061  0305  2B08               	goto	u3064
  4062  0306                     u3065:	
  4063  0306  1003               	clrc
  4064  0307  0DF1               	rlf	??_GPIO_PinDirection,f
  4065  0308                     u3064:	
  4066  0308  3EFF               	addlw	-1
  4067  0309  1D03               	skipz
  4068  030A  2B06               	goto	u3065
  4069  030B  0871               	movf	??_GPIO_PinDirection,w
  4070  030C  00F2               	movwf	??_GPIO_PinDirection+1
  4071  030D  0872               	movf	??_GPIO_PinDirection+1,w
  4072  030E  1683               	bsf	3,5	;RP0=1, select bank1
  4073  030F  1303               	bcf	3,6	;RP1=0, select bank1
  4074  0310  0485               	iorwf	5,f	;volatile
  4075  0311  0008               	return
  4076  0312                     l1919:	
  4077  0312  3001               	movlw	1
  4078  0313  00F1               	movwf	??_GPIO_PinDirection
  4079  0314  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4080  0315  2B18               	goto	u3074
  4081  0316                     u3075:	
  4082  0316  1003               	clrc
  4083  0317  0DF1               	rlf	??_GPIO_PinDirection,f
  4084  0318                     u3074:	
  4085  0318  3EFF               	addlw	-1
  4086  0319  1D03               	skipz
  4087  031A  2B16               	goto	u3075
  4088  031B  0871               	movf	??_GPIO_PinDirection,w
  4089  031C  3AFF               	xorlw	255
  4090  031D  00F2               	movwf	??_GPIO_PinDirection+1
  4091  031E  0872               	movf	??_GPIO_PinDirection+1,w
  4092  031F  1683               	bsf	3,5	;RP0=1, select bank1
  4093  0320  1303               	bcf	3,6	;RP1=0, select bank1
  4094  0321  0585               	andwf	5,f	;volatile
  4095                           
  4096                           ;gpio.c: 76: break;
  4097  0322  0008               	return
  4098  0323                     l1921:	
  4099                           ;gpio.c: 80: case 1:
  4100                           
  4101                           
  4102                           ;gpio.c: 81: ((var_pinDirn_u8)? ((TRISB) |= (1<<(enm_pinNumber))): ((TRISB) &= ~(1<<(enm
      +                          _pinNumber))));
  4103  0323  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4104  0324  1903               	btfsc	3,2
  4105  0325  2B36               	goto	l1925
  4106  0326  3001               	movlw	1
  4107  0327  00F1               	movwf	??_GPIO_PinDirection
  4108  0328  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4109  0329  2B2C               	goto	u3094
  4110  032A                     u3095:	
  4111  032A  1003               	clrc
  4112  032B  0DF1               	rlf	??_GPIO_PinDirection,f
  4113  032C                     u3094:	
  4114  032C  3EFF               	addlw	-1
  4115  032D  1D03               	skipz
  4116  032E  2B2A               	goto	u3095
  4117  032F  0871               	movf	??_GPIO_PinDirection,w
  4118  0330  00F2               	movwf	??_GPIO_PinDirection+1
  4119  0331  0872               	movf	??_GPIO_PinDirection+1,w
  4120  0332  1683               	bsf	3,5	;RP0=1, select bank1
  4121  0333  1303               	bcf	3,6	;RP1=0, select bank1
  4122  0334  0486               	iorwf	6,f	;volatile
  4123  0335  0008               	return
  4124  0336                     l1925:	
  4125  0336  3001               	movlw	1
  4126  0337  00F1               	movwf	??_GPIO_PinDirection
  4127  0338  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4128  0339  2B3C               	goto	u3104
  4129  033A                     u3105:	
  4130  033A  1003               	clrc
  4131  033B  0DF1               	rlf	??_GPIO_PinDirection,f
  4132  033C                     u3104:	
  4133  033C  3EFF               	addlw	-1
  4134  033D  1D03               	skipz
  4135  033E  2B3A               	goto	u3105
  4136  033F  0871               	movf	??_GPIO_PinDirection,w
  4137  0340  3AFF               	xorlw	255
  4138  0341  00F2               	movwf	??_GPIO_PinDirection+1
  4139  0342  0872               	movf	??_GPIO_PinDirection+1,w
  4140  0343  1683               	bsf	3,5	;RP0=1, select bank1
  4141  0344  1303               	bcf	3,6	;RP1=0, select bank1
  4142  0345  0586               	andwf	6,f	;volatile
  4143                           
  4144                           ;gpio.c: 82: break;
  4145  0346  0008               	return
  4146  0347                     l1927:	
  4147                           ;gpio.c: 86: case 2:
  4148                           
  4149                           
  4150                           ;gpio.c: 87: ((var_pinDirn_u8)? ((TRISC) |= (1<<(enm_pinNumber))): ((TRISC) &= ~(1<<(enm
      +                          _pinNumber))));
  4151  0347  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4152  0348  1903               	btfsc	3,2
  4153  0349  2B5A               	goto	l1931
  4154  034A  3001               	movlw	1
  4155  034B  00F1               	movwf	??_GPIO_PinDirection
  4156  034C  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4157  034D  2B50               	goto	u3124
  4158  034E                     u3125:	
  4159  034E  1003               	clrc
  4160  034F  0DF1               	rlf	??_GPIO_PinDirection,f
  4161  0350                     u3124:	
  4162  0350  3EFF               	addlw	-1
  4163  0351  1D03               	skipz
  4164  0352  2B4E               	goto	u3125
  4165  0353  0871               	movf	??_GPIO_PinDirection,w
  4166  0354  00F2               	movwf	??_GPIO_PinDirection+1
  4167  0355  0872               	movf	??_GPIO_PinDirection+1,w
  4168  0356  1683               	bsf	3,5	;RP0=1, select bank1
  4169  0357  1303               	bcf	3,6	;RP1=0, select bank1
  4170  0358  0487               	iorwf	7,f	;volatile
  4171  0359  0008               	return
  4172  035A                     l1931:	
  4173  035A  3001               	movlw	1
  4174  035B  00F1               	movwf	??_GPIO_PinDirection
  4175  035C  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4176  035D  2B60               	goto	u3134
  4177  035E                     u3135:	
  4178  035E  1003               	clrc
  4179  035F  0DF1               	rlf	??_GPIO_PinDirection,f
  4180  0360                     u3134:	
  4181  0360  3EFF               	addlw	-1
  4182  0361  1D03               	skipz
  4183  0362  2B5E               	goto	u3135
  4184  0363  0871               	movf	??_GPIO_PinDirection,w
  4185  0364  3AFF               	xorlw	255
  4186  0365  00F2               	movwf	??_GPIO_PinDirection+1
  4187  0366  0872               	movf	??_GPIO_PinDirection+1,w
  4188  0367  1683               	bsf	3,5	;RP0=1, select bank1
  4189  0368  1303               	bcf	3,6	;RP1=0, select bank1
  4190  0369  0587               	andwf	7,f	;volatile
  4191                           
  4192                           ;gpio.c: 88: break;
  4193  036A  0008               	return
  4194  036B                     l1933:	
  4195                           ;gpio.c: 92: case 3:
  4196                           
  4197                           
  4198                           ;gpio.c: 93: ((var_pinDirn_u8)? ((TRISD) |= (1<<(enm_pinNumber))): ((TRISD) &= ~(1<<(enm
      +                          _pinNumber))));
  4199  036B  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4200  036C  1903               	btfsc	3,2
  4201  036D  2B7E               	goto	l1937
  4202  036E  3001               	movlw	1
  4203  036F  00F1               	movwf	??_GPIO_PinDirection
  4204  0370  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4205  0371  2B74               	goto	u3154
  4206  0372                     u3155:	
  4207  0372  1003               	clrc
  4208  0373  0DF1               	rlf	??_GPIO_PinDirection,f
  4209  0374                     u3154:	
  4210  0374  3EFF               	addlw	-1
  4211  0375  1D03               	skipz
  4212  0376  2B72               	goto	u3155
  4213  0377  0871               	movf	??_GPIO_PinDirection,w
  4214  0378  00F2               	movwf	??_GPIO_PinDirection+1
  4215  0379  0872               	movf	??_GPIO_PinDirection+1,w
  4216  037A  1683               	bsf	3,5	;RP0=1, select bank1
  4217  037B  1303               	bcf	3,6	;RP1=0, select bank1
  4218  037C  0488               	iorwf	8,f	;volatile
  4219  037D  0008               	return
  4220  037E                     l1937:	
  4221  037E  3001               	movlw	1
  4222  037F  00F1               	movwf	??_GPIO_PinDirection
  4223  0380  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4224  0381  2B84               	goto	u3164
  4225  0382                     u3165:	
  4226  0382  1003               	clrc
  4227  0383  0DF1               	rlf	??_GPIO_PinDirection,f
  4228  0384                     u3164:	
  4229  0384  3EFF               	addlw	-1
  4230  0385  1D03               	skipz
  4231  0386  2B82               	goto	u3165
  4232  0387  0871               	movf	??_GPIO_PinDirection,w
  4233  0388  3AFF               	xorlw	255
  4234  0389  00F2               	movwf	??_GPIO_PinDirection+1
  4235  038A  0872               	movf	??_GPIO_PinDirection+1,w
  4236  038B  1683               	bsf	3,5	;RP0=1, select bank1
  4237  038C  1303               	bcf	3,6	;RP1=0, select bank1
  4238  038D  0588               	andwf	8,f	;volatile
  4239                           
  4240                           ;gpio.c: 94: break;
  4241  038E  0008               	return
  4242  038F                     l1939:	
  4243                           ;gpio.c: 97: case 4:
  4244                           
  4245                           
  4246                           ;gpio.c: 98: ((var_pinDirn_u8)? ((TRISE) |= (1<<(enm_pinNumber))): ((TRISE) &= ~(1<<(enm
      +                          _pinNumber))));
  4247  038F  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  4248  0390  1903               	btfsc	3,2
  4249  0391  2BA2               	goto	l1943
  4250  0392  3001               	movlw	1
  4251  0393  00F1               	movwf	??_GPIO_PinDirection
  4252  0394  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4253  0395  2B98               	goto	u3184
  4254  0396                     u3185:	
  4255  0396  1003               	clrc
  4256  0397  0DF1               	rlf	??_GPIO_PinDirection,f
  4257  0398                     u3184:	
  4258  0398  3EFF               	addlw	-1
  4259  0399  1D03               	skipz
  4260  039A  2B96               	goto	u3185
  4261  039B  0871               	movf	??_GPIO_PinDirection,w
  4262  039C  00F2               	movwf	??_GPIO_PinDirection+1
  4263  039D  0872               	movf	??_GPIO_PinDirection+1,w
  4264  039E  1683               	bsf	3,5	;RP0=1, select bank1
  4265  039F  1303               	bcf	3,6	;RP1=0, select bank1
  4266  03A0  0489               	iorwf	9,f	;volatile
  4267  03A1  0008               	return
  4268  03A2                     l1943:	
  4269  03A2  3001               	movlw	1
  4270  03A3  00F1               	movwf	??_GPIO_PinDirection
  4271  03A4  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  4272  03A5  2BA8               	goto	u3194
  4273  03A6                     u3195:	
  4274  03A6  1003               	clrc
  4275  03A7  0DF1               	rlf	??_GPIO_PinDirection,f
  4276  03A8                     u3194:	
  4277  03A8  3EFF               	addlw	-1
  4278  03A9  1D03               	skipz
  4279  03AA  2BA6               	goto	u3195
  4280  03AB  0871               	movf	??_GPIO_PinDirection,w
  4281  03AC  3AFF               	xorlw	255
  4282  03AD  00F2               	movwf	??_GPIO_PinDirection+1
  4283  03AE  0872               	movf	??_GPIO_PinDirection+1,w
  4284  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  4285  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  4286  03B1  0589               	andwf	9,f	;volatile
  4287                           
  4288                           ;gpio.c: 101: }
  4289                           
  4290                           ;gpio.c: 99: break;
  4291  03B2  0008               	return
  4292  03B3                     l1947:	
  4293  03B3  0873               	movf	GPIO_PinDirection@var_portNumber_u8,w
  4294                           
  4295                           ; Switch size 1, requested type "space"
  4296                           ; Number of cases is 5, Range of values is 0 to 4
  4297                           ; switch strategies available:
  4298                           ; Name         Instructions Cycles
  4299                           ; simple_byte           16     9 (average)
  4300                           ; direct_byte           23     8 (fixed)
  4301                           ; jumptable            260     6 (fixed)
  4302                           ;	Chosen strategy is simple_byte
  4303  03B4  3A00               	xorlw	0	; case 0
  4304  03B5  1903               	skipnz
  4305  03B6  2AFF               	goto	l1915
  4306  03B7  3A01               	xorlw	1	; case 1
  4307  03B8  1903               	skipnz
  4308  03B9  2B23               	goto	l1921
  4309  03BA  3A03               	xorlw	3	; case 2
  4310  03BB  1903               	skipnz
  4311  03BC  2B47               	goto	l1927
  4312  03BD  3A01               	xorlw	1	; case 3
  4313  03BE  1903               	skipnz
  4314  03BF  2B6B               	goto	l1933
  4315  03C0  3A07               	xorlw	7	; case 4
  4316  03C1  1903               	skipnz
  4317  03C2  2B8F               	goto	l1939
  4318  03C3  2BC4               	goto	l62
  4319  03C4                     l62:	
  4320  03C4  0008               	return
  4321  03C5                     __end_of_GPIO_PinDirection:	
  4322                           
  4323                           	psect	text18
  4324  0F78                     __ptext18:	
  4325 ;; *************** function _KEYPAD_GetKey *****************
  4326 ;; Defined at:
  4327 ;;		line 256 in file "../00-libfiles/keypad.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;		None
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  i               1   13[COMMON] unsigned char 
  4332 ;;  j               1   12[COMMON] unsigned char 
  4333 ;;  v_KeyPressed    1   11[COMMON] unsigned char 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  1    wreg      unsigned char 
  4336 ;; Registers used:
  4337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4343 ;;      Params:         0       0       0       0       0
  4344 ;;      Locals:         3       0       0       0       0
  4345 ;;      Temps:          3       0       0       0       0
  4346 ;;      Totals:         6       0       0       0       0
  4347 ;;Total ram usage:        6 bytes
  4348 ;; Hardware stack levels used:    1
  4349 ;; Hardware stack levels required when called:    2
  4350 ;; This function calls:
  4351 ;;		_GPIO_PinRead
  4352 ;;		_GPIO_PinWrite
  4353 ;;		_keypad_WaitForKeyPress
  4354 ;;		_keypad_WaitForKeyRelease
  4355 ;; This function is called by:
  4356 ;;		_main
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           
  4361                           ;psect for function _KEYPAD_GetKey
  4362  0F78                     _KEYPAD_GetKey:	
  4363                           
  4364                           ;keypad.c: 258: uint8_t i,j,v_KeyPressed_u8 = 0;
  4365                           
  4366                           ;incstack = 0
  4367                           ; Regs used in _KEYPAD_GetKey: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4368  0F78  01FB               	clrf	KEYPAD_GetKey@v_KeyPressed_u8
  4369                           
  4370                           ;keypad.c: 261: keypad_WaitForKeyRelease();
  4371  0F79  120A  158A  25BD  120A  158A  	fcall	_keypad_WaitForKeyRelease
  4372                           
  4373                           ;keypad.c: 262: keypad_WaitForKeyPress();
  4374  0F7E  120A  158A  255D  120A  158A  	fcall	_keypad_WaitForKeyPress
  4375                           
  4376                           ;keypad.c: 264: for (i=0;i<(4);i++)
  4377  0F83  01FD               	clrf	KEYPAD_GetKey@i
  4378  0F84  3004               	movlw	4
  4379  0F85  027D               	subwf	KEYPAD_GetKey@i,w
  4380  0F86  1803               	btfsc	3,0
  4381  0F87  2F9C               	goto	l2105
  4382  0F88                     l2099:	
  4383                           
  4384                           ;keypad.c: 265: {
  4385                           ;keypad.c: 266: GPIO_PinWrite(A_RowsPins_U8[i],0x01u);
  4386  0F88  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4387  0F89  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  4388  0F8A  087D               	movf	KEYPAD_GetKey@i,w
  4389  0F8B  3E6C               	addlw	(low (_A_RowsPins_U8| 0))& (0+255)
  4390  0F8C  0084               	movwf	4
  4391  0F8D  1383               	bcf	3,7	;select IRP bank0
  4392  0F8E  0800               	movf	0,w
  4393  0F8F  120A  118A  2213  120A  158A  	fcall	_GPIO_PinWrite
  4394  0F94  3001               	movlw	1
  4395  0F95  00F8               	movwf	??_KEYPAD_GetKey
  4396  0F96  0878               	movf	??_KEYPAD_GetKey,w
  4397  0F97  07FD               	addwf	KEYPAD_GetKey@i,f
  4398  0F98  3004               	movlw	4
  4399  0F99  027D               	subwf	KEYPAD_GetKey@i,w
  4400  0F9A  1C03               	skipc
  4401  0F9B  2F88               	goto	l2099
  4402  0F9C                     l2105:	
  4403                           
  4404                           ;keypad.c: 267: }
  4405                           ;keypad.c: 269: for (i=0;(i<(4));i++)
  4406  0F9C  01FD               	clrf	KEYPAD_GetKey@i
  4407  0F9D  3004               	movlw	4
  4408  0F9E  027D               	subwf	KEYPAD_GetKey@i,w
  4409  0F9F  1803               	btfsc	3,0
  4410  0FA0  2FE0               	goto	l2137
  4411  0FA1                     l2111:	
  4412                           
  4413                           ;keypad.c: 270: {
  4414                           ;keypad.c: 271: GPIO_PinWrite(A_RowsPins_U8[i],0x00u);
  4415  0FA1  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4416  0FA2  087D               	movf	KEYPAD_GetKey@i,w
  4417  0FA3  3E6C               	addlw	(low (_A_RowsPins_U8| 0))& (0+255)
  4418  0FA4  0084               	movwf	4
  4419  0FA5  1383               	bcf	3,7	;select IRP bank0
  4420  0FA6  0800               	movf	0,w
  4421  0FA7  120A  118A  2213  120A  158A  	fcall	_GPIO_PinWrite
  4422                           
  4423                           ;keypad.c: 273: for(j=0; (j<(4)); j++)
  4424  0FAC  01FC               	clrf	KEYPAD_GetKey@j
  4425  0FAD  3004               	movlw	4
  4426  0FAE  027C               	subwf	KEYPAD_GetKey@j,w
  4427  0FAF  1803               	btfsc	3,0
  4428  0FB0  2FC9               	goto	l2127
  4429  0FB1                     l2119:	
  4430                           
  4431                           ;keypad.c: 274: {
  4432                           ;keypad.c: 275: if(GPIO_PinRead(A_ColsPins_U8[j]) == 0)
  4433  0FB1  087C               	movf	KEYPAD_GetKey@j,w
  4434  0FB2  3EA0               	addlw	(low (_A_ColsPins_U8| 0))& (0+255)
  4435  0FB3  0084               	movwf	4
  4436  0FB4  1383               	bcf	3,7	;select IRP bank1
  4437  0FB5  0800               	movf	0,w
  4438  0FB6  120A  158A  2689  120A  158A  	fcall	_GPIO_PinRead
  4439  0FBB  3A00               	xorlw	0
  4440  0FBC  1D03               	skipz
  4441  0FBD  2FC1               	goto	l2123
  4442                           
  4443                           ;keypad.c: 276: {
  4444                           ;keypad.c: 277: v_KeyPressed_u8 = 1;
  4445  0FBE  01FB               	clrf	KEYPAD_GetKey@v_KeyPressed_u8
  4446  0FBF  0AFB               	incf	KEYPAD_GetKey@v_KeyPressed_u8,f
  4447                           
  4448                           ;keypad.c: 278: break;
  4449  0FC0  2FC9               	goto	l2127
  4450  0FC1                     l2123:	
  4451  0FC1  3001               	movlw	1
  4452  0FC2  00F8               	movwf	??_KEYPAD_GetKey
  4453  0FC3  0878               	movf	??_KEYPAD_GetKey,w
  4454  0FC4  07FC               	addwf	KEYPAD_GetKey@j,f
  4455  0FC5  3004               	movlw	4
  4456  0FC6  027C               	subwf	KEYPAD_GetKey@j,w
  4457  0FC7  1C03               	skipc
  4458  0FC8  2FB1               	goto	l2119
  4459  0FC9                     l2127:	
  4460                           
  4461                           ;keypad.c: 279: }
  4462                           ;keypad.c: 280: }
  4463                           ;keypad.c: 282: if(v_KeyPressed_u8 ==1)
  4464  0FC9  037B               	decf	KEYPAD_GetKey@v_KeyPressed_u8,w
  4465  0FCA  1903               	btfsc	3,2
  4466  0FCB  2FE0               	goto	l2137
  4467                           
  4468                           ;keypad.c: 285: }
  4469                           ;keypad.c: 287: GPIO_PinWrite(A_RowsPins_U8[i],0x01u);
  4470                           
  4471                           ;keypad.c: 283: {
  4472                           ;keypad.c: 284: break;
  4473  0FCC  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4474  0FCD  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  4475  0FCE  087D               	movf	KEYPAD_GetKey@i,w
  4476  0FCF  3E6C               	addlw	(low (_A_RowsPins_U8| 0))& (0+255)
  4477  0FD0  0084               	movwf	4
  4478  0FD1  1383               	bcf	3,7	;select IRP bank0
  4479  0FD2  0800               	movf	0,w
  4480  0FD3  120A  118A  2213  120A  158A  	fcall	_GPIO_PinWrite
  4481  0FD8  3001               	movlw	1
  4482  0FD9  00F8               	movwf	??_KEYPAD_GetKey
  4483  0FDA  0878               	movf	??_KEYPAD_GetKey,w
  4484  0FDB  07FD               	addwf	KEYPAD_GetKey@i,f
  4485  0FDC  3004               	movlw	4
  4486  0FDD  027D               	subwf	KEYPAD_GetKey@i,w
  4487  0FDE  1C03               	skipc
  4488  0FDF  2FA1               	goto	l2111
  4489  0FE0                     l2137:	
  4490                           
  4491                           ;keypad.c: 288: }
  4492                           ;keypad.c: 290: if(i<(4))
  4493  0FE0  3004               	movlw	4
  4494  0FE1  027D               	subwf	KEYPAD_GetKey@i,w
  4495  0FE2  1803               	skipnc
  4496  0FE3  2FFA               	goto	l2141
  4497                           
  4498                           ;keypad.c: 291: v_KeyPressed_u8 = A_KeyLookUptable_U8[i][j];
  4499  0FE4  087D               	movf	KEYPAD_GetKey@i,w
  4500  0FE5  00F8               	movwf	??_KEYPAD_GetKey
  4501  0FE6  3002               	movlw	2
  4502  0FE7                     u3545:	
  4503  0FE7  1003               	clrc
  4504  0FE8  0DF8               	rlf	??_KEYPAD_GetKey,f
  4505  0FE9  3EFF               	addlw	-1
  4506  0FEA  1D03               	skipz
  4507  0FEB  2FE7               	goto	u3545
  4508  0FEC  3001               	movlw	(low ((_A_KeyLookUptable_U8-__stringbase)| (0+32768)))& (0+255)
  4509  0FED  0778               	addwf	??_KEYPAD_GetKey,w
  4510  0FEE  00F9               	movwf	??_KEYPAD_GetKey+1
  4511  0FEF  087C               	movf	KEYPAD_GetKey@j,w
  4512  0FF0  0779               	addwf	??_KEYPAD_GetKey+1,w
  4513  0FF1  0084               	movwf	4
  4514  0FF2  120A  158A  2000  120A  158A  	fcall	stringdir
  4515  0FF7  00FA               	movwf	??_KEYPAD_GetKey+2
  4516  0FF8  087A               	movf	??_KEYPAD_GetKey+2,w
  4517  0FF9  2FFD               	goto	L5
  4518  0FFA                     l2141:	
  4519                           
  4520                           ;keypad.c: 292: else
  4521                           ;keypad.c: 293: v_KeyPressed_u8 = ('x');
  4522  0FFA  3078               	movlw	120
  4523  0FFB  00F8               	movwf	??_KEYPAD_GetKey
  4524  0FFC  0878               	movf	??_KEYPAD_GetKey,w
  4525  0FFD                     L5:	
  4526  0FFD  00FB               	movwf	KEYPAD_GetKey@v_KeyPressed_u8
  4527                           
  4528                           ;keypad.c: 296: return v_KeyPressed_u8;
  4529  0FFE  087B               	movf	KEYPAD_GetKey@v_KeyPressed_u8,w
  4530  0FFF  0008               	return
  4531  1000                     __end_of_KEYPAD_GetKey:	
  4532                           
  4533                           	psect	text19
  4534  0DBD                     __ptext19:	
  4535 ;; *************** function _keypad_WaitForKeyRelease *****************
  4536 ;; Defined at:
  4537 ;;		line 155 in file "../00-libfiles/keypad.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;		None
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  i               1    7[COMMON] unsigned char 
  4542 ;;  v_keyStatus_    1    6[COMMON] unsigned char 
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      void 
  4545 ;; Registers used:
  4546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4552 ;;      Params:         0       0       0       0       0
  4553 ;;      Locals:         2       0       0       0       0
  4554 ;;      Temps:          1       0       0       0       0
  4555 ;;      Totals:         3       0       0       0       0
  4556 ;;Total ram usage:        3 bytes
  4557 ;; Hardware stack levels used:    1
  4558 ;; Hardware stack levels required when called:    1
  4559 ;; This function calls:
  4560 ;;		_DELAY_us
  4561 ;;		_GPIO_PinRead
  4562 ;;		_GPIO_PinWrite
  4563 ;; This function is called by:
  4564 ;;		_KEYPAD_GetKey
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           
  4569                           ;psect for function _keypad_WaitForKeyRelease
  4570  0DBD                     _keypad_WaitForKeyRelease:	
  4571                           
  4572                           ;keypad.c: 158: uint8_t i,v_keyStatus_u8;
  4573                           ;keypad.c: 160: for (i=0;i<(4);i++)
  4574                           
  4575                           ;incstack = 0
  4576                           ; Regs used in _keypad_WaitForKeyRelease: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4577  0DBD  01F7               	clrf	keypad_WaitForKeyRelease@i
  4578  0DBE  3004               	movlw	4
  4579  0DBF  0277               	subwf	keypad_WaitForKeyRelease@i,w
  4580  0DC0  1803               	btfsc	3,0
  4581  0DC1  2DD5               	goto	l129
  4582  0DC2                     l1955:	
  4583                           
  4584                           ;keypad.c: 161: {
  4585                           ;keypad.c: 162: GPIO_PinWrite(A_RowsPins_U8[i],0x00u);
  4586  0DC2  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4587  0DC3  0877               	movf	keypad_WaitForKeyRelease@i,w
  4588  0DC4  3E6C               	addlw	(low (_A_RowsPins_U8| 0))& (0+255)
  4589  0DC5  0084               	movwf	4
  4590  0DC6  1383               	bcf	3,7	;select IRP bank0
  4591  0DC7  0800               	movf	0,w
  4592  0DC8  120A  118A  2213  120A  158A  	fcall	_GPIO_PinWrite
  4593  0DCD  3001               	movlw	1
  4594  0DCE  00F5               	movwf	??_keypad_WaitForKeyRelease
  4595  0DCF  0875               	movf	??_keypad_WaitForKeyRelease,w
  4596  0DD0  07F7               	addwf	keypad_WaitForKeyRelease@i,f
  4597  0DD1  3004               	movlw	4
  4598  0DD2  0277               	subwf	keypad_WaitForKeyRelease@i,w
  4599  0DD3  1C03               	skipc
  4600  0DD4  2DC2               	goto	l1955
  4601  0DD5                     l129:	
  4602                           ;keypad.c: 166: {
  4603                           ;keypad.c: 167: do
  4604                           
  4605                           ;keypad.c: 163: }
  4606                           ;keypad.c: 165: do
  4607                           
  4608                           
  4609                           ;keypad.c: 168: {
  4610                           ;keypad.c: 169: v_keyStatus_u8 = 1;
  4611  0DD5  01F6               	clrf	keypad_WaitForKeyRelease@v_keyStatus_u8
  4612  0DD6  0AF6               	incf	keypad_WaitForKeyRelease@v_keyStatus_u8,f
  4613                           
  4614                           ;keypad.c: 170: for(i=0; i<(4); i++)
  4615  0DD7  01F7               	clrf	keypad_WaitForKeyRelease@i
  4616  0DD8  3004               	movlw	4
  4617  0DD9  0277               	subwf	keypad_WaitForKeyRelease@i,w
  4618  0DDA  1803               	btfsc	3,0
  4619  0DDB  2DF1               	goto	l1973
  4620  0DDC                     l1967:	
  4621                           
  4622                           ;keypad.c: 171: {
  4623                           ;keypad.c: 172: v_keyStatus_u8 &= GPIO_PinRead(A_ColsPins_U8[i]);
  4624  0DDC  0877               	movf	keypad_WaitForKeyRelease@i,w
  4625  0DDD  3EA0               	addlw	(low (_A_ColsPins_U8| 0))& (0+255)
  4626  0DDE  0084               	movwf	4
  4627  0DDF  1383               	bcf	3,7	;select IRP bank1
  4628  0DE0  0800               	movf	0,w
  4629  0DE1  120A  158A  2689  120A  158A  	fcall	_GPIO_PinRead
  4630  0DE6  00F5               	movwf	??_keypad_WaitForKeyRelease
  4631  0DE7  0875               	movf	??_keypad_WaitForKeyRelease,w
  4632  0DE8  05F6               	andwf	keypad_WaitForKeyRelease@v_keyStatus_u8,f
  4633  0DE9  3001               	movlw	1
  4634  0DEA  00F5               	movwf	??_keypad_WaitForKeyRelease
  4635  0DEB  0875               	movf	??_keypad_WaitForKeyRelease,w
  4636  0DEC  07F7               	addwf	keypad_WaitForKeyRelease@i,f
  4637  0DED  3004               	movlw	4
  4638  0DEE  0277               	subwf	keypad_WaitForKeyRelease@i,w
  4639  0DEF  1C03               	skipc
  4640  0DF0  2DDC               	goto	l1967
  4641  0DF1                     l1973:	
  4642                           
  4643                           ;keypad.c: 173: }
  4644                           ;keypad.c: 174: }while(v_keyStatus_u8 == 0);
  4645  0DF1  0876               	movf	keypad_WaitForKeyRelease@v_keyStatus_u8,w
  4646  0DF2  1903               	btfsc	3,2
  4647  0DF3  2DD5               	goto	l129
  4648                           
  4649                           ;keypad.c: 176: DELAY_us((10));
  4650  0DF4  300A               	movlw	10
  4651  0DF5  00F0               	movwf	DELAY_us@us_count
  4652  0DF6  3000               	movlw	0
  4653  0DF7  00F1               	movwf	DELAY_us@us_count+1
  4654  0DF8  120A  118A  200A  120A  158A  	fcall	_DELAY_us
  4655                           
  4656                           ;keypad.c: 178: v_keyStatus_u8 = 1;
  4657  0DFD  01F6               	clrf	keypad_WaitForKeyRelease@v_keyStatus_u8
  4658  0DFE  0AF6               	incf	keypad_WaitForKeyRelease@v_keyStatus_u8,f
  4659                           
  4660                           ;keypad.c: 179: for(i=0; i<(4); i++)
  4661  0DFF  01F7               	clrf	keypad_WaitForKeyRelease@i
  4662  0E00  3004               	movlw	4
  4663  0E01  0277               	subwf	keypad_WaitForKeyRelease@i,w
  4664  0E02  1803               	btfsc	3,0
  4665  0E03  2E19               	goto	l1991
  4666  0E04                     l1985:	
  4667                           
  4668                           ;keypad.c: 180: {
  4669                           ;keypad.c: 181: v_keyStatus_u8 &= GPIO_PinRead(A_ColsPins_U8[i]);
  4670  0E04  0877               	movf	keypad_WaitForKeyRelease@i,w
  4671  0E05  3EA0               	addlw	(low (_A_ColsPins_U8| 0))& (0+255)
  4672  0E06  0084               	movwf	4
  4673  0E07  1383               	bcf	3,7	;select IRP bank1
  4674  0E08  0800               	movf	0,w
  4675  0E09  120A  158A  2689  120A  158A  	fcall	_GPIO_PinRead
  4676  0E0E  00F5               	movwf	??_keypad_WaitForKeyRelease
  4677  0E0F  0875               	movf	??_keypad_WaitForKeyRelease,w
  4678  0E10  05F6               	andwf	keypad_WaitForKeyRelease@v_keyStatus_u8,f
  4679  0E11  3001               	movlw	1
  4680  0E12  00F5               	movwf	??_keypad_WaitForKeyRelease
  4681  0E13  0875               	movf	??_keypad_WaitForKeyRelease,w
  4682  0E14  07F7               	addwf	keypad_WaitForKeyRelease@i,f
  4683  0E15  3004               	movlw	4
  4684  0E16  0277               	subwf	keypad_WaitForKeyRelease@i,w
  4685  0E17  1C03               	skipc
  4686  0E18  2E04               	goto	l1985
  4687  0E19                     l1991:	
  4688                           
  4689                           ;keypad.c: 182: }
  4690                           ;keypad.c: 183: }while(v_keyStatus_u8 == 0);
  4691  0E19  0876               	movf	keypad_WaitForKeyRelease@v_keyStatus_u8,w
  4692  0E1A  1D03               	btfss	3,2
  4693  0E1B  0008               	return
  4694  0E1C  2DD5               	goto	l129
  4695  0E1D                     __end_of_keypad_WaitForKeyRelease:	
  4696                           
  4697                           	psect	text20
  4698  0D5D                     __ptext20:	
  4699 ;; *************** function _keypad_WaitForKeyPress *****************
  4700 ;; Defined at:
  4701 ;;		line 201 in file "../00-libfiles/keypad.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;		None
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  i               1    7[COMMON] unsigned char 
  4706 ;;  v_keyStatus_    1    6[COMMON] unsigned char 
  4707 ;; Return value:  Size  Location     Type
  4708 ;;                  1    wreg      void 
  4709 ;; Registers used:
  4710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4716 ;;      Params:         0       0       0       0       0
  4717 ;;      Locals:         2       0       0       0       0
  4718 ;;      Temps:          1       0       0       0       0
  4719 ;;      Totals:         3       0       0       0       0
  4720 ;;Total ram usage:        3 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; Hardware stack levels required when called:    1
  4723 ;; This function calls:
  4724 ;;		_DELAY_us
  4725 ;;		_GPIO_PinRead
  4726 ;;		_GPIO_PinWrite
  4727 ;; This function is called by:
  4728 ;;		_KEYPAD_GetKey
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           
  4733                           ;psect for function _keypad_WaitForKeyPress
  4734  0D5D                     _keypad_WaitForKeyPress:	
  4735                           
  4736                           ;keypad.c: 203: uint8_t i,v_keyStatus_u8;
  4737                           ;keypad.c: 205: for (i=0;i<(4);i++)
  4738                           
  4739                           ;incstack = 0
  4740                           ; Regs used in _keypad_WaitForKeyPress: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4741  0D5D  01F7               	clrf	keypad_WaitForKeyPress@i
  4742  0D5E  3004               	movlw	4
  4743  0D5F  0277               	subwf	keypad_WaitForKeyPress@i,w
  4744  0D60  1803               	btfsc	3,0
  4745  0D61  2D75               	goto	l142
  4746  0D62                     l1999:	
  4747                           
  4748                           ;keypad.c: 206: {
  4749                           ;keypad.c: 207: GPIO_PinWrite(A_RowsPins_U8[i],0x00u);
  4750  0D62  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4751  0D63  0877               	movf	keypad_WaitForKeyPress@i,w
  4752  0D64  3E6C               	addlw	(low (_A_RowsPins_U8| 0))& (0+255)
  4753  0D65  0084               	movwf	4
  4754  0D66  1383               	bcf	3,7	;select IRP bank0
  4755  0D67  0800               	movf	0,w
  4756  0D68  120A  118A  2213  120A  158A  	fcall	_GPIO_PinWrite
  4757  0D6D  3001               	movlw	1
  4758  0D6E  00F5               	movwf	??_keypad_WaitForKeyPress
  4759  0D6F  0875               	movf	??_keypad_WaitForKeyPress,w
  4760  0D70  07F7               	addwf	keypad_WaitForKeyPress@i,f
  4761  0D71  3004               	movlw	4
  4762  0D72  0277               	subwf	keypad_WaitForKeyPress@i,w
  4763  0D73  1C03               	skipc
  4764  0D74  2D62               	goto	l1999
  4765  0D75                     l142:	
  4766                           ;keypad.c: 211: {
  4767                           ;keypad.c: 212: do
  4768                           
  4769                           ;keypad.c: 208: }
  4770                           ;keypad.c: 210: do
  4771                           
  4772                           
  4773                           ;keypad.c: 213: {
  4774                           ;keypad.c: 214: v_keyStatus_u8 = 1;
  4775  0D75  01F6               	clrf	keypad_WaitForKeyPress@v_keyStatus_u8
  4776  0D76  0AF6               	incf	keypad_WaitForKeyPress@v_keyStatus_u8,f
  4777                           
  4778                           ;keypad.c: 215: for(i=0; i<(4); i++)
  4779  0D77  01F7               	clrf	keypad_WaitForKeyPress@i
  4780  0D78  3004               	movlw	4
  4781  0D79  0277               	subwf	keypad_WaitForKeyPress@i,w
  4782  0D7A  1803               	btfsc	3,0
  4783  0D7B  2D91               	goto	l2017
  4784  0D7C                     l2011:	
  4785                           
  4786                           ;keypad.c: 216: {
  4787                           ;keypad.c: 217: v_keyStatus_u8 &= GPIO_PinRead(A_ColsPins_U8[i]);
  4788  0D7C  0877               	movf	keypad_WaitForKeyPress@i,w
  4789  0D7D  3EA0               	addlw	(low (_A_ColsPins_U8| 0))& (0+255)
  4790  0D7E  0084               	movwf	4
  4791  0D7F  1383               	bcf	3,7	;select IRP bank1
  4792  0D80  0800               	movf	0,w
  4793  0D81  120A  158A  2689  120A  158A  	fcall	_GPIO_PinRead
  4794  0D86  00F5               	movwf	??_keypad_WaitForKeyPress
  4795  0D87  0875               	movf	??_keypad_WaitForKeyPress,w
  4796  0D88  05F6               	andwf	keypad_WaitForKeyPress@v_keyStatus_u8,f
  4797  0D89  3001               	movlw	1
  4798  0D8A  00F5               	movwf	??_keypad_WaitForKeyPress
  4799  0D8B  0875               	movf	??_keypad_WaitForKeyPress,w
  4800  0D8C  07F7               	addwf	keypad_WaitForKeyPress@i,f
  4801  0D8D  3004               	movlw	4
  4802  0D8E  0277               	subwf	keypad_WaitForKeyPress@i,w
  4803  0D8F  1C03               	skipc
  4804  0D90  2D7C               	goto	l2011
  4805  0D91                     l2017:	
  4806                           
  4807                           ;keypad.c: 218: }
  4808                           ;keypad.c: 219: }while(v_keyStatus_u8 != 0);
  4809  0D91  0876               	movf	keypad_WaitForKeyPress@v_keyStatus_u8,w
  4810  0D92  1D03               	btfss	3,2
  4811  0D93  2D75               	goto	l142
  4812                           
  4813                           ;keypad.c: 222: DELAY_us((10));
  4814  0D94  300A               	movlw	10
  4815  0D95  00F0               	movwf	DELAY_us@us_count
  4816  0D96  3000               	movlw	0
  4817  0D97  00F1               	movwf	DELAY_us@us_count+1
  4818  0D98  120A  118A  200A  120A  158A  	fcall	_DELAY_us
  4819                           
  4820                           ;keypad.c: 224: v_keyStatus_u8 = 1;
  4821  0D9D  01F6               	clrf	keypad_WaitForKeyPress@v_keyStatus_u8
  4822  0D9E  0AF6               	incf	keypad_WaitForKeyPress@v_keyStatus_u8,f
  4823                           
  4824                           ;keypad.c: 225: for(i=0; i<(4); i++)
  4825  0D9F  01F7               	clrf	keypad_WaitForKeyPress@i
  4826  0DA0  3004               	movlw	4
  4827  0DA1  0277               	subwf	keypad_WaitForKeyPress@i,w
  4828  0DA2  1803               	btfsc	3,0
  4829  0DA3  2DB9               	goto	l2035
  4830  0DA4                     l2029:	
  4831                           
  4832                           ;keypad.c: 226: {
  4833                           ;keypad.c: 227: v_keyStatus_u8 &= GPIO_PinRead(A_ColsPins_U8[i]);
  4834  0DA4  0877               	movf	keypad_WaitForKeyPress@i,w
  4835  0DA5  3EA0               	addlw	(low (_A_ColsPins_U8| 0))& (0+255)
  4836  0DA6  0084               	movwf	4
  4837  0DA7  1383               	bcf	3,7	;select IRP bank1
  4838  0DA8  0800               	movf	0,w
  4839  0DA9  120A  158A  2689  120A  158A  	fcall	_GPIO_PinRead
  4840  0DAE  00F5               	movwf	??_keypad_WaitForKeyPress
  4841  0DAF  0875               	movf	??_keypad_WaitForKeyPress,w
  4842  0DB0  05F6               	andwf	keypad_WaitForKeyPress@v_keyStatus_u8,f
  4843  0DB1  3001               	movlw	1
  4844  0DB2  00F5               	movwf	??_keypad_WaitForKeyPress
  4845  0DB3  0875               	movf	??_keypad_WaitForKeyPress,w
  4846  0DB4  07F7               	addwf	keypad_WaitForKeyPress@i,f
  4847  0DB5  3004               	movlw	4
  4848  0DB6  0277               	subwf	keypad_WaitForKeyPress@i,w
  4849  0DB7  1C03               	skipc
  4850  0DB8  2DA4               	goto	l2029
  4851  0DB9                     l2035:	
  4852                           
  4853                           ;keypad.c: 228: }
  4854                           ;keypad.c: 229: }while(v_keyStatus_u8 != 0);
  4855  0DB9  0876               	movf	keypad_WaitForKeyPress@v_keyStatus_u8,w
  4856  0DBA  1903               	btfsc	3,2
  4857  0DBB  0008               	return
  4858  0DBC  2D75               	goto	l142
  4859  0DBD                     __end_of_keypad_WaitForKeyPress:	
  4860                           
  4861                           	psect	text21
  4862  0213                     __ptext21:	
  4863 ;; *************** function _GPIO_PinWrite *****************
  4864 ;; Defined at:
  4865 ;;		line 127 in file "../00-libfiles/gpio.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  enm_pinNumbe    1    wreg     enum E1088
  4868 ;;  var_pinValue    1    0[COMMON] unsigned char 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  4871 ;;  var_portNumb    1    3[COMMON] unsigned char 
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  1    wreg      void 
  4874 ;; Registers used:
  4875 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4881 ;;      Params:         1       0       0       0       0
  4882 ;;      Locals:         2       0       0       0       0
  4883 ;;      Temps:          2       0       0       0       0
  4884 ;;      Totals:         5       0       0       0       0
  4885 ;;Total ram usage:        5 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; This function calls:
  4888 ;;		Nothing
  4889 ;; This function is called by:
  4890 ;;		_keypad_WaitForKeyRelease
  4891 ;;		_keypad_WaitForKeyPress
  4892 ;;		_KEYPAD_GetKey
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           
  4897                           ;psect for function _GPIO_PinWrite
  4898  0213                     _GPIO_PinWrite:	
  4899                           
  4900                           ;incstack = 0
  4901                           ; Regs used in _GPIO_PinWrite: [wreg-fsr0h+status,2+status,0]
  4902                           ;GPIO_PinWrite@enm_pinNumber stored from wreg
  4903  0213  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  4904                           
  4905                           ;gpio.c: 130: uint8_t var_portNumber_u8;
  4906                           ;gpio.c: 133: var_portNumber_u8 = (enm_pinNumber>>3);
  4907  0214  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  4908  0215  00F1               	movwf	??_GPIO_PinWrite
  4909  0216  3003               	movlw	3
  4910  0217                     u2095:	
  4911  0217  1003               	clrc
  4912  0218  0CF1               	rrf	??_GPIO_PinWrite,f
  4913  0219  3EFF               	addlw	-1
  4914  021A  1D03               	skipz
  4915  021B  2A17               	goto	u2095
  4916  021C  0871               	movf	??_GPIO_PinWrite,w
  4917  021D  00F2               	movwf	??_GPIO_PinWrite+1
  4918  021E  0872               	movf	??_GPIO_PinWrite+1,w
  4919  021F  00F3               	movwf	GPIO_PinWrite@var_portNumber_u8
  4920                           
  4921                           ;gpio.c: 134: enm_pinNumber = enm_pinNumber & 0x07;
  4922  0220  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  4923  0221  3907               	andlw	7
  4924  0222  00F1               	movwf	??_GPIO_PinWrite
  4925  0223  0871               	movf	??_GPIO_PinWrite,w
  4926  0224  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  4927                           
  4928                           ;gpio.c: 138: switch(var_portNumber_u8)
  4929  0225  2ADA               	goto	l1655
  4930  0226                     l1623:	
  4931                           ;gpio.c: 139: {
  4932                           ;gpio.c: 141: case 0:
  4933                           
  4934                           
  4935                           ;gpio.c: 142: ((var_pinValue_u8)? ((PORTA) |= (1<<(enm_pinNumber))): ((PORTA) &= ~(1<<(e
      +                          nm_pinNumber))));
  4936  0226  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  4937  0227  1903               	btfsc	3,2
  4938  0228  2A39               	goto	l1627
  4939  0229  3001               	movlw	1
  4940  022A  00F1               	movwf	??_GPIO_PinWrite
  4941  022B  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  4942  022C  2A2F               	goto	u2114
  4943  022D                     u2115:	
  4944  022D  1003               	clrc
  4945  022E  0DF1               	rlf	??_GPIO_PinWrite,f
  4946  022F                     u2114:	
  4947  022F  3EFF               	addlw	-1
  4948  0230  1D03               	skipz
  4949  0231  2A2D               	goto	u2115
  4950  0232  0871               	movf	??_GPIO_PinWrite,w
  4951  0233  00F2               	movwf	??_GPIO_PinWrite+1
  4952  0234  0872               	movf	??_GPIO_PinWrite+1,w
  4953  0235  1283               	bcf	3,5	;RP0=0, select bank0
  4954  0236  1303               	bcf	3,6	;RP1=0, select bank0
  4955  0237  0485               	iorwf	5,f	;volatile
  4956  0238  0008               	return
  4957  0239                     l1627:	
  4958  0239  3001               	movlw	1
  4959  023A  00F1               	movwf	??_GPIO_PinWrite
  4960  023B  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  4961  023C  2A3F               	goto	u2124
  4962  023D                     u2125:	
  4963  023D  1003               	clrc
  4964  023E  0DF1               	rlf	??_GPIO_PinWrite,f
  4965  023F                     u2124:	
  4966  023F  3EFF               	addlw	-1
  4967  0240  1D03               	skipz
  4968  0241  2A3D               	goto	u2125
  4969  0242  0871               	movf	??_GPIO_PinWrite,w
  4970  0243  3AFF               	xorlw	255
  4971  0244  00F2               	movwf	??_GPIO_PinWrite+1
  4972  0245  0872               	movf	??_GPIO_PinWrite+1,w
  4973  0246  1283               	bcf	3,5	;RP0=0, select bank0
  4974  0247  1303               	bcf	3,6	;RP1=0, select bank0
  4975  0248  0585               	andwf	5,f	;volatile
  4976                           
  4977                           ;gpio.c: 143: break;
  4978  0249  0008               	return
  4979  024A                     l1629:	
  4980                           ;gpio.c: 147: case 1:
  4981                           
  4982                           
  4983                           ;gpio.c: 148: ((var_pinValue_u8)? ((PORTB) |= (1<<(enm_pinNumber))): ((PORTB) &= ~(1<<(e
      +                          nm_pinNumber))));
  4984  024A  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  4985  024B  1903               	btfsc	3,2
  4986  024C  2A5D               	goto	l1633
  4987  024D  3001               	movlw	1
  4988  024E  00F1               	movwf	??_GPIO_PinWrite
  4989  024F  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  4990  0250  2A53               	goto	u2144
  4991  0251                     u2145:	
  4992  0251  1003               	clrc
  4993  0252  0DF1               	rlf	??_GPIO_PinWrite,f
  4994  0253                     u2144:	
  4995  0253  3EFF               	addlw	-1
  4996  0254  1D03               	skipz
  4997  0255  2A51               	goto	u2145
  4998  0256  0871               	movf	??_GPIO_PinWrite,w
  4999  0257  00F2               	movwf	??_GPIO_PinWrite+1
  5000  0258  0872               	movf	??_GPIO_PinWrite+1,w
  5001  0259  1283               	bcf	3,5	;RP0=0, select bank0
  5002  025A  1303               	bcf	3,6	;RP1=0, select bank0
  5003  025B  0486               	iorwf	6,f	;volatile
  5004  025C  0008               	return
  5005  025D                     l1633:	
  5006  025D  3001               	movlw	1
  5007  025E  00F1               	movwf	??_GPIO_PinWrite
  5008  025F  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5009  0260  2A63               	goto	u2154
  5010  0261                     u2155:	
  5011  0261  1003               	clrc
  5012  0262  0DF1               	rlf	??_GPIO_PinWrite,f
  5013  0263                     u2154:	
  5014  0263  3EFF               	addlw	-1
  5015  0264  1D03               	skipz
  5016  0265  2A61               	goto	u2155
  5017  0266  0871               	movf	??_GPIO_PinWrite,w
  5018  0267  3AFF               	xorlw	255
  5019  0268  00F2               	movwf	??_GPIO_PinWrite+1
  5020  0269  0872               	movf	??_GPIO_PinWrite+1,w
  5021  026A  1283               	bcf	3,5	;RP0=0, select bank0
  5022  026B  1303               	bcf	3,6	;RP1=0, select bank0
  5023  026C  0586               	andwf	6,f	;volatile
  5024                           
  5025                           ;gpio.c: 149: break;
  5026  026D  0008               	return
  5027  026E                     l1635:	
  5028                           ;gpio.c: 153: case 2:
  5029                           
  5030                           
  5031                           ;gpio.c: 154: ((var_pinValue_u8)? ((PORTC) |= (1<<(enm_pinNumber))): ((PORTC) &= ~(1<<(e
      +                          nm_pinNumber))));
  5032  026E  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  5033  026F  1903               	btfsc	3,2
  5034  0270  2A81               	goto	l1639
  5035  0271  3001               	movlw	1
  5036  0272  00F1               	movwf	??_GPIO_PinWrite
  5037  0273  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5038  0274  2A77               	goto	u2174
  5039  0275                     u2175:	
  5040  0275  1003               	clrc
  5041  0276  0DF1               	rlf	??_GPIO_PinWrite,f
  5042  0277                     u2174:	
  5043  0277  3EFF               	addlw	-1
  5044  0278  1D03               	skipz
  5045  0279  2A75               	goto	u2175
  5046  027A  0871               	movf	??_GPIO_PinWrite,w
  5047  027B  00F2               	movwf	??_GPIO_PinWrite+1
  5048  027C  0872               	movf	??_GPIO_PinWrite+1,w
  5049  027D  1283               	bcf	3,5	;RP0=0, select bank0
  5050  027E  1303               	bcf	3,6	;RP1=0, select bank0
  5051  027F  0487               	iorwf	7,f	;volatile
  5052  0280  0008               	return
  5053  0281                     l1639:	
  5054  0281  3001               	movlw	1
  5055  0282  00F1               	movwf	??_GPIO_PinWrite
  5056  0283  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5057  0284  2A87               	goto	u2184
  5058  0285                     u2185:	
  5059  0285  1003               	clrc
  5060  0286  0DF1               	rlf	??_GPIO_PinWrite,f
  5061  0287                     u2184:	
  5062  0287  3EFF               	addlw	-1
  5063  0288  1D03               	skipz
  5064  0289  2A85               	goto	u2185
  5065  028A  0871               	movf	??_GPIO_PinWrite,w
  5066  028B  3AFF               	xorlw	255
  5067  028C  00F2               	movwf	??_GPIO_PinWrite+1
  5068  028D  0872               	movf	??_GPIO_PinWrite+1,w
  5069  028E  1283               	bcf	3,5	;RP0=0, select bank0
  5070  028F  1303               	bcf	3,6	;RP1=0, select bank0
  5071  0290  0587               	andwf	7,f	;volatile
  5072                           
  5073                           ;gpio.c: 155: break;
  5074  0291  0008               	return
  5075  0292                     l1641:	
  5076                           ;gpio.c: 159: case 3:
  5077                           
  5078                           
  5079                           ;gpio.c: 160: ((var_pinValue_u8)? ((PORTD) |= (1<<(enm_pinNumber))): ((PORTD) &= ~(1<<(e
      +                          nm_pinNumber))));
  5080  0292  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  5081  0293  1903               	btfsc	3,2
  5082  0294  2AA5               	goto	l1645
  5083  0295  3001               	movlw	1
  5084  0296  00F1               	movwf	??_GPIO_PinWrite
  5085  0297  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5086  0298  2A9B               	goto	u2204
  5087  0299                     u2205:	
  5088  0299  1003               	clrc
  5089  029A  0DF1               	rlf	??_GPIO_PinWrite,f
  5090  029B                     u2204:	
  5091  029B  3EFF               	addlw	-1
  5092  029C  1D03               	skipz
  5093  029D  2A99               	goto	u2205
  5094  029E  0871               	movf	??_GPIO_PinWrite,w
  5095  029F  00F2               	movwf	??_GPIO_PinWrite+1
  5096  02A0  0872               	movf	??_GPIO_PinWrite+1,w
  5097  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  5098  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  5099  02A3  0488               	iorwf	8,f	;volatile
  5100  02A4  0008               	return
  5101  02A5                     l1645:	
  5102  02A5  3001               	movlw	1
  5103  02A6  00F1               	movwf	??_GPIO_PinWrite
  5104  02A7  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5105  02A8  2AAB               	goto	u2214
  5106  02A9                     u2215:	
  5107  02A9  1003               	clrc
  5108  02AA  0DF1               	rlf	??_GPIO_PinWrite,f
  5109  02AB                     u2214:	
  5110  02AB  3EFF               	addlw	-1
  5111  02AC  1D03               	skipz
  5112  02AD  2AA9               	goto	u2215
  5113  02AE  0871               	movf	??_GPIO_PinWrite,w
  5114  02AF  3AFF               	xorlw	255
  5115  02B0  00F2               	movwf	??_GPIO_PinWrite+1
  5116  02B1  0872               	movf	??_GPIO_PinWrite+1,w
  5117  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  5118  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  5119  02B4  0588               	andwf	8,f	;volatile
  5120                           
  5121                           ;gpio.c: 161: break;
  5122  02B5  0008               	return
  5123  02B6                     l1647:	
  5124                           ;gpio.c: 165: case 4:
  5125                           
  5126                           
  5127                           ;gpio.c: 166: ((var_pinValue_u8)? ((PORTE) |= (1<<(enm_pinNumber))): ((PORTE) &= ~(1<<(e
      +                          nm_pinNumber))));
  5128  02B6  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  5129  02B7  1903               	btfsc	3,2
  5130  02B8  2AC9               	goto	l1651
  5131  02B9  3001               	movlw	1
  5132  02BA  00F1               	movwf	??_GPIO_PinWrite
  5133  02BB  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5134  02BC  2ABF               	goto	u2234
  5135  02BD                     u2235:	
  5136  02BD  1003               	clrc
  5137  02BE  0DF1               	rlf	??_GPIO_PinWrite,f
  5138  02BF                     u2234:	
  5139  02BF  3EFF               	addlw	-1
  5140  02C0  1D03               	skipz
  5141  02C1  2ABD               	goto	u2235
  5142  02C2  0871               	movf	??_GPIO_PinWrite,w
  5143  02C3  00F2               	movwf	??_GPIO_PinWrite+1
  5144  02C4  0872               	movf	??_GPIO_PinWrite+1,w
  5145  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  5146  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  5147  02C7  0489               	iorwf	9,f	;volatile
  5148  02C8  0008               	return
  5149  02C9                     l1651:	
  5150  02C9  3001               	movlw	1
  5151  02CA  00F1               	movwf	??_GPIO_PinWrite
  5152  02CB  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  5153  02CC  2ACF               	goto	u2244
  5154  02CD                     u2245:	
  5155  02CD  1003               	clrc
  5156  02CE  0DF1               	rlf	??_GPIO_PinWrite,f
  5157  02CF                     u2244:	
  5158  02CF  3EFF               	addlw	-1
  5159  02D0  1D03               	skipz
  5160  02D1  2ACD               	goto	u2245
  5161  02D2  0871               	movf	??_GPIO_PinWrite,w
  5162  02D3  3AFF               	xorlw	255
  5163  02D4  00F2               	movwf	??_GPIO_PinWrite+1
  5164  02D5  0872               	movf	??_GPIO_PinWrite+1,w
  5165  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  5166  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  5167  02D8  0589               	andwf	9,f	;volatile
  5168                           
  5169                           ;gpio.c: 169: }
  5170                           
  5171                           ;gpio.c: 167: break;
  5172  02D9  0008               	return
  5173  02DA                     l1655:	
  5174  02DA  0873               	movf	GPIO_PinWrite@var_portNumber_u8,w
  5175                           
  5176                           ; Switch size 1, requested type "space"
  5177                           ; Number of cases is 5, Range of values is 0 to 4
  5178                           ; switch strategies available:
  5179                           ; Name         Instructions Cycles
  5180                           ; simple_byte           16     9 (average)
  5181                           ; direct_byte           23     8 (fixed)
  5182                           ; jumptable            260     6 (fixed)
  5183                           ;	Chosen strategy is simple_byte
  5184  02DB  3A00               	xorlw	0	; case 0
  5185  02DC  1903               	skipnz
  5186  02DD  2A26               	goto	l1623
  5187  02DE  3A01               	xorlw	1	; case 1
  5188  02DF  1903               	skipnz
  5189  02E0  2A4A               	goto	l1629
  5190  02E1  3A03               	xorlw	3	; case 2
  5191  02E2  1903               	skipnz
  5192  02E3  2A6E               	goto	l1635
  5193  02E4  3A01               	xorlw	1	; case 3
  5194  02E5  1903               	skipnz
  5195  02E6  2A92               	goto	l1641
  5196  02E7  3A07               	xorlw	7	; case 4
  5197  02E8  1903               	skipnz
  5198  02E9  2AB6               	goto	l1647
  5199  02EA  2AEB               	goto	l92
  5200  02EB                     l92:	
  5201  02EB  0008               	return
  5202  02EC                     __end_of_GPIO_PinWrite:	
  5203                           
  5204                           	psect	text22
  5205  0E89                     __ptext22:	
  5206 ;; *************** function _GPIO_PinRead *****************
  5207 ;; Defined at:
  5208 ;;		line 192 in file "../00-libfiles/gpio.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  enm_pinNumbe    1    wreg     enum E1088
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  5213 ;;  returnStatus    1    3[COMMON] unsigned char 
  5214 ;;  var_portNumb    1    2[COMMON] unsigned char 
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  1    wreg      unsigned char 
  5217 ;; Registers used:
  5218 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5224 ;;      Params:         0       0       0       0       0
  5225 ;;      Locals:         3       0       0       0       0
  5226 ;;      Temps:          2       0       0       0       0
  5227 ;;      Totals:         5       0       0       0       0
  5228 ;;Total ram usage:        5 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; This function calls:
  5231 ;;		Nothing
  5232 ;; This function is called by:
  5233 ;;		_keypad_WaitForKeyRelease
  5234 ;;		_keypad_WaitForKeyPress
  5235 ;;		_KEYPAD_GetKey
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           
  5240                           ;psect for function _GPIO_PinRead
  5241  0E89                     _GPIO_PinRead:	
  5242                           
  5243                           ;incstack = 0
  5244                           ; Regs used in _GPIO_PinRead: [wreg-fsr0h+status,2+status,0]
  5245                           ;GPIO_PinRead@enm_pinNumber stored from wreg
  5246  0E89  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  5247                           
  5248                           ;gpio.c: 194: uint8_t var_portNumber_u8;
  5249                           ;gpio.c: 195: uint8_t returnStatus = 0;
  5250  0E8A  01F3               	clrf	GPIO_PinRead@returnStatus
  5251                           
  5252                           ;gpio.c: 197: var_portNumber_u8 = (enm_pinNumber>>3);
  5253  0E8B  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  5254  0E8C  00F0               	movwf	??_GPIO_PinRead
  5255  0E8D  3003               	movlw	3
  5256  0E8E                     u2255:	
  5257  0E8E  1003               	clrc
  5258  0E8F  0CF0               	rrf	??_GPIO_PinRead,f
  5259  0E90  3EFF               	addlw	-1
  5260  0E91  1D03               	skipz
  5261  0E92  2E8E               	goto	u2255
  5262  0E93  0870               	movf	??_GPIO_PinRead,w
  5263  0E94  00F1               	movwf	??_GPIO_PinRead+1
  5264  0E95  0871               	movf	??_GPIO_PinRead+1,w
  5265  0E96  00F2               	movwf	GPIO_PinRead@var_portNumber_u8
  5266                           
  5267                           ;gpio.c: 198: enm_pinNumber = enm_pinNumber & 0x07;
  5268  0E97  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  5269  0E98  3907               	andlw	7
  5270  0E99  00F0               	movwf	??_GPIO_PinRead
  5271  0E9A  0870               	movf	??_GPIO_PinRead,w
  5272  0E9B  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  5273                           
  5274                           ;gpio.c: 201: switch(var_portNumber_u8)
  5275  0E9C  2EEB               	goto	l1675
  5276  0E9D                     l1663:	
  5277                           ;gpio.c: 202: {
  5278                           ;gpio.c: 204: case 0:
  5279                           
  5280                           
  5281                           ;gpio.c: 205: returnStatus = (((PORTA)&((1<<(enm_pinNumber))))!=0u);
  5282  0E9D  3001               	movlw	1
  5283  0E9E  00F0               	movwf	??_GPIO_PinRead
  5284  0E9F  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  5285  0EA0  2EA3               	goto	u2264
  5286  0EA1                     u2265:	
  5287  0EA1  1003               	clrc
  5288  0EA2  0DF0               	rlf	??_GPIO_PinRead,f
  5289  0EA3                     u2264:	
  5290  0EA3  3EFF               	addlw	-1
  5291  0EA4  1D03               	skipz
  5292  0EA5  2EA1               	goto	u2265
  5293  0EA6  0870               	movf	??_GPIO_PinRead,w
  5294  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  5295  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  5296  0EA9  0505               	andwf	5,w	;volatile
  5297  0EAA  2EE2               	goto	L9
  5298  0EAB                     l1665:	
  5299                           ;gpio.c: 209: case 1:
  5300                           
  5301                           ;gpio.c: 206: break;
  5302                           
  5303                           
  5304                           ;gpio.c: 210: returnStatus = (((PORTB)&((1<<(enm_pinNumber))))!=0u);
  5305  0EAB  3001               	movlw	1
  5306  0EAC  00F0               	movwf	??_GPIO_PinRead
  5307  0EAD  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  5308  0EAE  2EB1               	goto	u2294
  5309  0EAF                     u2295:	
  5310  0EAF  1003               	clrc
  5311  0EB0  0DF0               	rlf	??_GPIO_PinRead,f
  5312  0EB1                     u2294:	
  5313  0EB1  3EFF               	addlw	-1
  5314  0EB2  1D03               	skipz
  5315  0EB3  2EAF               	goto	u2295
  5316  0EB4  0870               	movf	??_GPIO_PinRead,w
  5317  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  5318  0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  5319  0EB7  0506               	andwf	6,w	;volatile
  5320  0EB8  2EE2               	goto	L9
  5321  0EB9                     l1667:	
  5322                           ;gpio.c: 214: case 2:
  5323                           
  5324                           ;gpio.c: 211: break;
  5325                           
  5326                           
  5327                           ;gpio.c: 215: returnStatus = (((PORTC)&((1<<(enm_pinNumber))))!=0u);
  5328  0EB9  3001               	movlw	1
  5329  0EBA  00F0               	movwf	??_GPIO_PinRead
  5330  0EBB  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  5331  0EBC  2EBF               	goto	u2324
  5332  0EBD                     u2325:	
  5333  0EBD  1003               	clrc
  5334  0EBE  0DF0               	rlf	??_GPIO_PinRead,f
  5335  0EBF                     u2324:	
  5336  0EBF  3EFF               	addlw	-1
  5337  0EC0  1D03               	skipz
  5338  0EC1  2EBD               	goto	u2325
  5339  0EC2  0870               	movf	??_GPIO_PinRead,w
  5340  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  5341  0EC4  1303               	bcf	3,6	;RP1=0, select bank0
  5342  0EC5  0507               	andwf	7,w	;volatile
  5343  0EC6  2EE2               	goto	L9
  5344  0EC7                     l1669:	
  5345                           ;gpio.c: 220: case 3:
  5346                           
  5347                           ;gpio.c: 216: break;
  5348                           
  5349                           
  5350                           ;gpio.c: 221: returnStatus = (((PORTD)&((1<<(enm_pinNumber))))!=0u);
  5351  0EC7  3001               	movlw	1
  5352  0EC8  00F0               	movwf	??_GPIO_PinRead
  5353  0EC9  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  5354  0ECA  2ECD               	goto	u2354
  5355  0ECB                     u2355:	
  5356  0ECB  1003               	clrc
  5357  0ECC  0DF0               	rlf	??_GPIO_PinRead,f
  5358  0ECD                     u2354:	
  5359  0ECD  3EFF               	addlw	-1
  5360  0ECE  1D03               	skipz
  5361  0ECF  2ECB               	goto	u2355
  5362  0ED0  0870               	movf	??_GPIO_PinRead,w
  5363  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  5364  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  5365  0ED3  0508               	andwf	8,w	;volatile
  5366  0ED4  2EE2               	goto	L9
  5367  0ED5                     l1671:	
  5368                           ;gpio.c: 226: case 4:
  5369                           
  5370                           ;gpio.c: 222: break;
  5371                           
  5372                           
  5373                           ;gpio.c: 227: returnStatus = (((PORTE)&((1<<(enm_pinNumber))))!=0u);
  5374  0ED5  3001               	movlw	1
  5375  0ED6  00F0               	movwf	??_GPIO_PinRead
  5376  0ED7  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  5377  0ED8  2EDB               	goto	u2384
  5378  0ED9                     u2385:	
  5379  0ED9  1003               	clrc
  5380  0EDA  0DF0               	rlf	??_GPIO_PinRead,f
  5381  0EDB                     u2384:	
  5382  0EDB  3EFF               	addlw	-1
  5383  0EDC  1D03               	skipz
  5384  0EDD  2ED9               	goto	u2385
  5385  0EDE  0870               	movf	??_GPIO_PinRead,w
  5386  0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  5387  0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  5388  0EE1  0509               	andwf	9,w	;volatile
  5389  0EE2                     L9:	
  5390  0EE2  1903               	btfsc	3,2
  5391  0EE3  2EE6               	goto	u2390
  5392  0EE4  3001               	movlw	1
  5393  0EE5  2EE7               	goto	u2400
  5394  0EE6                     u2390:	
  5395  0EE6  3000               	movlw	0
  5396  0EE7                     u2400:	
  5397  0EE7  00F1               	movwf	??_GPIO_PinRead+1
  5398  0EE8  0871               	movf	??_GPIO_PinRead+1,w
  5399  0EE9  00F3               	movwf	GPIO_PinRead@returnStatus
  5400                           
  5401                           ;gpio.c: 229: }
  5402                           
  5403                           ;gpio.c: 228: break;
  5404  0EEA  2EFC               	goto	l1677
  5405  0EEB                     l1675:	
  5406  0EEB  0872               	movf	GPIO_PinRead@var_portNumber_u8,w
  5407                           
  5408                           ; Switch size 1, requested type "space"
  5409                           ; Number of cases is 5, Range of values is 0 to 4
  5410                           ; switch strategies available:
  5411                           ; Name         Instructions Cycles
  5412                           ; simple_byte           16     9 (average)
  5413                           ; direct_byte           23     8 (fixed)
  5414                           ; jumptable            260     6 (fixed)
  5415                           ;	Chosen strategy is simple_byte
  5416  0EEC  3A00               	xorlw	0	; case 0
  5417  0EED  1903               	skipnz
  5418  0EEE  2E9D               	goto	l1663
  5419  0EEF  3A01               	xorlw	1	; case 1
  5420  0EF0  1903               	skipnz
  5421  0EF1  2EAB               	goto	l1665
  5422  0EF2  3A03               	xorlw	3	; case 2
  5423  0EF3  1903               	skipnz
  5424  0EF4  2EB9               	goto	l1667
  5425  0EF5  3A01               	xorlw	1	; case 3
  5426  0EF6  1903               	skipnz
  5427  0EF7  2EC7               	goto	l1669
  5428  0EF8  3A07               	xorlw	7	; case 4
  5429  0EF9  1903               	skipnz
  5430  0EFA  2ED5               	goto	l1671
  5431  0EFB  2EFC               	goto	l1677
  5432  0EFC                     l1677:	
  5433                           
  5434                           ;gpio.c: 230: return returnStatus;
  5435  0EFC  0873               	movf	GPIO_PinRead@returnStatus,w
  5436  0EFD  0008               	return
  5437  0EFE                     __end_of_GPIO_PinRead:	
  5438                           
  5439                           	psect	text23
  5440  000A                     __ptext23:	
  5441 ;; *************** function _DELAY_us *****************
  5442 ;; Defined at:
  5443 ;;		line 56 in file "../00-libfiles/delay.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  us_count        2    0[COMMON] unsigned int 
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;		None
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  1    wreg      void 
  5450 ;; Registers used:
  5451 ;;		wreg, status,2, status,0
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5457 ;;      Params:         2       0       0       0       0
  5458 ;;      Locals:         0       0       0       0       0
  5459 ;;      Temps:          0       0       0       0       0
  5460 ;;      Totals:         2       0       0       0       0
  5461 ;;Total ram usage:        2 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; This function calls:
  5464 ;;		Nothing
  5465 ;; This function is called by:
  5466 ;;		_keypad_WaitForKeyRelease
  5467 ;;		_keypad_WaitForKeyPress
  5468 ;;		_DELAY_ms
  5469 ;; This function uses a non-reentrant model
  5470 ;;
  5471                           
  5472                           
  5473                           ;psect for function _DELAY_us
  5474  000A                     _DELAY_us:	
  5475  000A                     l1617:	
  5476                           ;delay.c: 58: while (us_count != 0)
  5477                           
  5478                           ;incstack = 0
  5479                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  5480                           
  5481  000A  0870               	movf	DELAY_us@us_count,w
  5482  000B  0471               	iorwf	DELAY_us@us_count+1,w
  5483  000C  1903               	btfsc	3,2
  5484  000D  0008               	return
  5485                           
  5486                           ;delay.c: 59: {
  5487                           ;delay.c: 60: us_count--;
  5488  000E  3001               	movlw	1
  5489  000F  02F0               	subwf	DELAY_us@us_count,f
  5490  0010  3000               	movlw	0
  5491  0011  1C03               	skipc
  5492  0012  03F1               	decf	DELAY_us@us_count+1,f
  5493  0013  02F1               	subwf	DELAY_us@us_count+1,f
  5494  0014  280A               	goto	l1617
  5495  0015                     __end_of_DELAY_us:	
  5496  007E                     btemp	set	126	;btemp
  5497  007E                     wtemp	set	126
  5498  007E                     wtemp0	set	126
  5499  0080                     wtemp1	set	128
  5500  0082                     wtemp2	set	130
  5501  0084                     wtemp3	set	132
  5502  0086                     wtemp4	set	134
  5503  0088                     wtemp5	set	136
  5504  007F                     wtemp6	set	127
  5505  007E                     ttemp	set	126
  5506  007E                     ttemp0	set	126
  5507  0081                     ttemp1	set	129
  5508  0084                     ttemp2	set	132
  5509  0087                     ttemp3	set	135
  5510  007F                     ttemp4	set	127
  5511  007E                     ltemp	set	126
  5512  007E                     ltemp0	set	126
  5513  0082                     ltemp1	set	130
  5514  0086                     ltemp2	set	134
  5515  0080                     ltemp3	set	128


Data Sizes:
    Strings     10
    Constant    16
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80      0       4
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Printf@str	PTR unsigned char  size(1) Largest target is 0

    UART_Printf@argList	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 

    UART_Printf@ptr	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 

    UART_Printf@argp	PTR void [1] size(1) Largest target is 1
		 -> ?_UART_Printf(BANK0[1]), 

    UART_TxString@ptr_string	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->_KEYPAD_GetKey
    _UART_TxString->_UART_TxChar
    _UART_TxFloatNumber->___ftmul
    _UART_TxFloatNumber->___lltoft
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftneg->___lltoft
    ___ftmul->___ftpack
    ___ftadd->___lltoft
    _UART_TxNumber->___lldiv
    ___bmul->___lldiv
    _UART_SetBaudRate->___lldiv
    _KEYPAD_Init->_GPIO_PinDirection
    _KEYPAD_GetKey->_keypad_WaitForKeyPress
    _KEYPAD_GetKey->_keypad_WaitForKeyRelease
    _keypad_WaitForKeyRelease->_GPIO_PinRead
    _keypad_WaitForKeyRelease->_GPIO_PinWrite
    _keypad_WaitForKeyPress->_GPIO_PinRead
    _keypad_WaitForKeyPress->_GPIO_PinWrite

Critical Paths under _main in BANK0

    _main->_UART_Printf
    _UART_Printf->_UART_TxFloatNumber
    _UART_TxFloatNumber->_UART_TxNumber
    ___fttol->___ftmul
    ___ftadd->___ftneg
    _UART_TxNumber->___bmul
    _UART_Init->_UART_SetBaudRate

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   19279
                                             68 BANK0      8     8      0
                      _KEYPAD_GetKey
                        _KEYPAD_Init
                          _UART_Init
                        _UART_Printf
 ---------------------------------------------------------------------------------
 (1) _UART_Printf                                         25    23      2   13556
                                             43 BANK0     25    23      2
                        _UART_TxChar
                 _UART_TxFloatNumber
                      _UART_TxNumber
                      _UART_TxString
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _UART_TxString                                        2     2      0      94
                                              1 COMMON     2     2      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxFloatNumber                                   8     5      3    9664
                                             35 BANK0      8     5      3
                        _UART_TxChar
                      _UART_TxNumber
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    1790
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     358
                                             10 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                              0 BANK0      3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2100
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2694
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _UART_TxNumber                                       31    26      5    2414
                                              4 BANK0     31    26      5
                        _UART_TxChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4     698
                                             16 BANK0      4     0      4
                   _UART_SetBaudRate
 ---------------------------------------------------------------------------------
 (2) _UART_SetBaudRate                                    16    12      4     623
                                              0 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _KEYPAD_Init                                         10     3      7    1187
                                              5 COMMON     8     1      7
                                              0 BANK0      2     2      0
                  _GPIO_PinDirection
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinDirection                                    5     4      1     504
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _KEYPAD_GetKey                                        6     6      0    3815
                                              8 COMMON     6     6      0
                       _GPIO_PinRead
                      _GPIO_PinWrite
             _keypad_WaitForKeyPress
           _keypad_WaitForKeyRelease
 ---------------------------------------------------------------------------------
 (2) _keypad_WaitForKeyRelease                             3     3      0    1303
                                              5 COMMON     3     3      0
                           _DELAY_us
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (2) _keypad_WaitForKeyPress                               3     3      0    1303
                                              5 COMMON     3     3      0
                           _DELAY_us
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _GPIO_PinWrite                                        5     4      1     663
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (3) _GPIO_PinRead                                         5     5      0     206
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (3) _DELAY_us                                             2     0      2     182
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _KEYPAD_GetKey
     _GPIO_PinRead
     _GPIO_PinWrite
     _keypad_WaitForKeyPress
       _DELAY_us
       _GPIO_PinRead
       _GPIO_PinWrite
     _keypad_WaitForKeyRelease
       _DELAY_us
       _GPIO_PinRead
       _GPIO_PinWrite
   _KEYPAD_Init
     _GPIO_PinDirection
   _UART_Init
     _UART_SetBaudRate
       ___lldiv
   _UART_Printf
     _UART_TxChar
     _UART_TxFloatNumber
       _UART_TxChar
       _UART_TxNumber
         _UART_TxChar
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       ___ftadd
         ___ftneg (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
     _UART_TxNumber
       _UART_TxChar
       ___bmul
         ___lldiv (ARG)
       ___lldiv
     _UART_TxString
       _UART_TxChar
     ___bmul
       ___lldiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      62       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       4       7        5.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      62      12        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Feb 22 23:26:41 2016

       UART_SetBaudRate@var_baudRate_u32 0020                                        pc 0002  
                         ___bmul@product 0022                              __CFG_CP$OFF 0000  
                ?_keypad_WaitForKeyPress 0070                                       l62 03C4  
                                     l92 02EB                                       fsr 0004  
               _keypad_WaitForKeyRelease 0DBD                             ___ftadd@exp1 002F  
                           ___ftadd@exp2 002E                              __CFG_LVP$ON 0000  
                           ___ftadd@sign 002D                                      l201 0BE0  
                                    l142 0D75                                      l129 0DD5  
                                    l553 0E68                                      l554 0E70  
                                    l546 0E53                                      l637 0089  
                                    l577 055F                             __CFG_CPD$OFF 0000  
                                    fsr0 0004                                      indf 0000  
                           __CFG_FOSC$HS 0000   keypad_WaitForKeyRelease@v_keyStatus_u8 0076  
                           ?_KEYPAD_Init 0075                                     l2011 0D7C  
                                   l2111 0FA1                                     l2017 0D91  
                                   l2105 0F9C                                     l2035 0DB9  
                                   l2123 0FC1                                     l2043 0F6B  
                                   l2051 0C06                                     l2029 0DA4  
                                   l2141 0FFA                                     l2213 06BF  
                                   l2205 068B                                     l2127 0FC9  
                                   l2119 0FB1                                     l2071 0CD2  
                                   l2039 0F10                                     l2231 072C  
                                   l2207 06A0                                     l2137 0FE0  
                                   l2241 0752                                     l2225 0705  
                                   l2251 0780                                     l2219 06E6  
                                   l2171 05FA                                     l2307 0C8E  
                                   l2077 0CE7                                     l1605 0D47  
                                   l1623 0226                                     l2263 07B1  
                                   l2239 0741                                     l2183 0633  
                                   l2271 07EB                                     l2175 0622  
                                   l1617 000A                                     l1641 0292  
                                   l1633 025D                                     l1609 0D54  
                                   l1545 0BF6                                     l1561 0E25  
                                   l2257 079D                                     l2249 076D  
                                   l2193 064E                                     l2177 0627  
                                   l2273 05CB                                     l1651 02C9  
                                   l1635 026E                                     l1627 0239  
                                   l2099 0F88                                     l1723 049E  
                                   l1715 0489                                     l1707 047D  
                                   l2195 0664                                     l2267 07B3  
                                   l1645 02A5                                     l1629 024A  
                                   l1549 0BFC                                     l1717 041E  
                                   l1565 0E2C                                     l1741 04E7  
                                   l1813 0170                                     l2269 07E5  
                                   l1671 0ED5                                     l1663 0E9D  
                                   l1647 02B6                                     l1639 0281  
                                   l1655 02DA                                     l1719 048E  
                                   l1575 0E58                                     l1567 0E38  
                                   l1807 015A                                     l1665 0EAB  
                                   l1921 0323                                     l1729 04B3  
                                   l1577 0E62                                     l1569 0E3D  
                                   l1737 04E0                                     l1841 01E7  
                                   l1825 01AF                                     l1905 0C34  
                                   l1667 0EB9                                     l1675 0EEB  
                                   l1931 035A                                     l1915 02FF  
                                   l1595 0D0F                                     l1771 053A  
                                   l1747 04F6                                     l1907 0C46  
                                   l1669 0EC7                                     l1677 0EFC  
                                   l1933 036B                                     l1925 0336  
                                   l1597 0D1F                                     l1693 040C  
                                   l1765 0525                                     l1837 01D7  
                                   l1829 01BF                                     l1943 03A2  
                                   l1927 0347                                     l1919 0312  
                                   l1687 03CE                                     l1695 0410  
                                   l1783 0571                                     l1767 0531  
                                   l1759 0510                                     l1937 037E  
                                   l1777 054F                                     l1769 0536  
                                   l1865 002F                                     l1955 0DC2  
                                   l1939 038F                                     l1947 03B3  
                                   l1699 041B                                     l1787 0583  
                                   l1779 055B                                     l1891 007E  
                                   l1883 0061                                     l1973 0DF1  
                                   l1797 05A6                                     l1893 008C  
                                   l1885 0071                                     l1991 0E19  
                                   l1967 0DDC                                     l1985 0E04  
                                   l1897 009A                                     l1999 0D62  
                                   STR_1 0816              __end_of_A_KeyLookUptable_U8 0816  
                                   u2025 0D13                                     u2114 022F  
                                   u2115 022D                                     u2204 029B  
                                   u2124 023F                                     u2205 0299  
                                   u2125 023D                                     u2045 0D21  
                                   u2214 02AB                                     u2215 02A9  
                                   u2055 0D36                                     u2400 0EE7  
                                   u2144 0253                                     u3104 033C  
                                   u2145 0251                                     u3105 033A  
                                   u2065 0D48                                     u3025 0C39  
                                   u2234 02BF                                     u2154 0263  
                                   u2235 02BD                                     u2155 0261  
                                   u2324 0EBF                                     u2244 02CF  
                                   u3124 0350                                     u2325 0EBD  
                                   u2245 02CD                                     u3125 034E  
                                   u3045 02F0                                     u2174 0277  
                                   u3134 0360                                     u2430 03FD  
                                   u2255 0E8E                                     u2175 0275  
                                   u2095 0217                                     u3135 035E  
                                   u2264 0EA3                                     u2184 0287  
                                   u3064 0308                                     u2440 03FE  
                                   u2424 03E2                                     u2265 0EA1  
                                   u2185 0285                                     u3065 0306  
                                   u2425 03DF                                     u2354 0ECD  
                                   u3154 0374                                     u3074 0318  
                                   u2355 0ECB                                     u3155 0372  
                                   u3075 0316                                     u3164 0384  
                                   u3165 0382                                     u2390 0EE6  
                                   u2294 0EB1                                     u3094 032C  
                                   u2295 0EAF                                     u3095 032A  
                                   u2384 0EDB                                     u3184 0398  
                                   u2385 0ED9                                     u3185 0396  
                                   u2625 0511                                     u3194 03A8  
                                   u3195 03A6                                     u3363 0F0E  
                                   u1915 0E31                                     u2715 0550  
                                   u3373 0F1F                                     u2805 018E  
                                   u3390 0F58                                     u3391 0F59  
                                   u1935 0E4C                                     u2655 0526  
                                   u3392 0F5E                                     u3545 0FE7  
                                   u3393 0F5F                                     u3385 0F32  
                                   u1955 0E5B                                     u2835 01C0  
                                   u2685 053B                                     u2845 01C8  
                                   u2935 0036                                     u1995 0E77  
                                   u2795 017C                                     _RCIF 0065  
                                   u2885 01E8                                     u2965 0062  
                                   u2895 01F0                                     u2995 0080  
                                   _TXIF 0064                             __CFG_WRT$OFF 0000  
                     _UART_TxFloatNumber 00A3                                     _main 0C5B  
                           ___ftpack@arg 0070                             ___ftpack@exp 0073  
                                   btemp 007E                                     ltemp 007E  
                                   start 0000                                     ttemp 007E  
                                   wtemp 007E                         __end_of_DELAY_us 0015  
                    ?_UART_TxFloatNumber 0043                        ___bmul@multiplier 0023  
                           ___ftmul@cntr 0028                            ?_GPIO_PinRead 0070  
                           ___ftmul@sign 0029           __end_of_keypad_WaitForKeyPress 0DBD  
    UART_TxFloatNumber@v_floatNumber_f32 0043                            _KEYPAD_GetKey 0F78  
                           ___fttol@exp1 0037                             ___fttol@lval 0033  
                          _GPIO_PinWrite 0213                                    ?_main 0070  
                        __end_of___ftadd 05C0                            __CFG_WDTE$OFF 0000  
                        __end_of___ftneg 0BF2                          __end_of___lldiv 0D5D  
                        __end_of___ftmul 0213                          __end_of___fttol 00A3  
                                  _RCREG 001A                                    _RCSTA 0018  
                                  _SPBRG 0099                                    _PORTA 0005  
                                  _PORTB 0006                                    _PORTC 0007  
                                  _PORTD 0008                                    _PORTE 0009  
                                  _TRISA 0085                                    _TRISB 0086  
                                  _TRISC 0087                                    _TRISD 0088  
                                  _TRISE 0089                                    _TXREG 0019  
                                  _TXSTA 0098                     ??_UART_TxFloatNumber 0046  
                           ___lltoft@exp 007D                       __size_of_UART_Init 0016  
                          ___ftpack@sign 0074                           __CFG_BOREN$OFF 0000  
                                  pclath 000A                                    ltemp0 007E  
                                  ltemp1 0082                                    ltemp2 0086  
                                  ltemp3 0080                                    ttemp0 007E  
                                  ttemp1 0081                                    ttemp2 0084  
                                  ttemp3 0087                                    ttemp4 007F  
                                  status 0003                                    wtemp0 007E  
                                  wtemp1 0080                                    wtemp2 0082  
                                  wtemp3 0084                                    wtemp4 0086  
                                  wtemp5 0088                                    wtemp6 007F  
                         ??_GPIO_PinRead 0070                          __initialization 07F2  
             GPIO_PinWrite@enm_pinNumber 0074                           ?_KEYPAD_GetKey 0070  
                           __end_of_main 0CA6                           ?_GPIO_PinWrite 0070  
                      _GPIO_PinDirection 02EC                                   ??_main 0064  
                          ___fttol@sign1 0032                       ?_GPIO_PinDirection 0070  
                    ??_GPIO_PinDirection 0071                         __end_of___ftpack 0E89  
                       __end_of___lltoft 0C5B                        ?_UART_SetBaudRate 0020  
                     ??_UART_SetBaudRate 0024                           __CFG_PWRTE$OFF 0000  
                           ?_UART_TxChar 0070                             ?_UART_Printf 004B  
              GPIO_PinRead@enm_pinNumber 0074                        __end_of_UART_Init 0C30  
                                 ___bmul 0BF2                                ??___ftadd 0029  
                              ??___ftneg 007E                                ??___lldiv 0078  
                              ??___ftmul 0020                                ??___fttol 002E  
              __end_of_GPIO_PinDirection 03C5                             KEYPAD_Init@i 0021  
         GPIO_PinDirection@enm_pinNumber 0074  UART_TxNumber@v_numOfDigitsToTransmit_u8 0028  
                  ___ftmul@f3_as_product 0025                                ?_DELAY_us 0070  
                   __size_of_KEYPAD_Init 0059                  __end_of__initialization 07FC  
                             ___ftadd@f1 0023                               ___ftadd@f2 0026  
                  __end_of_UART_TxNumber 04B7                    __end_of_UART_TxString 0C1A  
              UART_Printf@v_floatNum_f32 004F                               ___ftneg@f1 0020  
             ??_keypad_WaitForKeyRelease 0075                          ??_KEYPAD_GetKey 0078  
                    ___bmul@multiplicand 0020                               ___ftmul@f1 0078  
                             ___ftmul@f2 007B                          ??_GPIO_PinWrite 0071  
                             ___fttol@f1 002A                           __pcstackCOMMON 0070  
                             ___lltoft@c 0078                               ??_DELAY_us 0072  
                   __end_of_GPIO_PinRead 0EFE           GPIO_PinWrite@var_portNumber_u8 0073  
                             __pbssBANK0 006C                               __pbssBANK1 00A0  
           GPIO_PinWrite@var_pinValue_u8 0070                               __pmaintext 0C5B  
                                ?___bmul 0020               __size_of_GPIO_PinDirection 00D9  
                              ?___ftpack 0070                                ?___lltoft 0078  
                       DELAY_us@us_count 0070                               __stringtab 0800  
                       KEYPAD_Init@col_0 0078                         KEYPAD_Init@col_1 0079  
                       KEYPAD_Init@col_2 007A                         KEYPAD_Init@col_3 007B  
                       KEYPAD_Init@row_0 0020                         KEYPAD_Init@row_1 0075  
                       KEYPAD_Init@row_2 0076                         KEYPAD_Init@row_3 0077  
                   __size_of_UART_TxChar 0009                          __size_of___bmul 0013  
                   __size_of_UART_Printf 0232                                  ___ftadd 04B7  
                                ___ftneg 0BE8                                  ___lldiv 0CFF  
                                ___ftmul 0142                                  ___fttol 0015  
                             ??___ftpack 0075                               ??___lltoft 007C  
                                __ptext1 05C0                                  __ptext2 0C05  
                                __ptext3 00A3                                  __ptext4 0C30  
                                __ptext5 0015                                  __ptext6 0BE8  
                                __ptext7 0142                                  __ptext8 04B7  
                                __ptext9 0E1D              __size_of_UART_TxFloatNumber 009F  
                         UART_Printf@ptr 0060                           UART_Printf@str 0052  
           KEYPAD_GetKey@v_KeyPressed_u8 007B                                  main@key 006B  
                   end_of_initialization 07FC                           UART_TxNumber@a 0035  
                         UART_TxNumber@i 0042               UART_TxChar@var_uartData_u8 0070  
                          _A_ColsPins_U8 00A0         __end_of_keypad_WaitForKeyRelease 0E1D  
                        ___lldiv@divisor 0070                          ___lldiv@counter 007D  
                              _UART_Init 0C1A                __size_of_UART_SetBaudRate 007A  
                  __size_of_GPIO_PinRead 0075                        __size_of_DELAY_us 000B  
               ??_keypad_WaitForKeyPress 0075          UART_TxNumber@v_numericSystem_u8 0041  
                            ___ftmul@exp 0024       GPIO_PinDirection@var_portNumber_u8 0073  
                           _GPIO_PinRead 0E89                           __end_of___bmul 0C05  
                             ?_UART_Init 0030                      start_initialization 07F2  
                          ??_KEYPAD_Init 007C                  keypad_WaitForKeyPress@i 0077  
          GPIO_PinRead@var_portNumber_u8 0072          GPIO_PinDirection@var_pinDirn_u8 0070  
                  __end_of_KEYPAD_GetKey 1000                                 ??___bmul 0021  
                  __end_of_GPIO_PinWrite 02EC                        _UART_TxNumber$207 003F  
                      __size_of___ftpack 006C     keypad_WaitForKeyPress@v_keyStatus_u8 0076  
      __size_of_keypad_WaitForKeyRelease 0060                   __size_of_UART_TxNumber 00F2  
                      __size_of___lltoft 002B                ?_keypad_WaitForKeyRelease 0070  
                    _A_KeyLookUptable_U8 0806                                ___latbits 0002  
                 __size_of_UART_TxString 0015                            __pcstackBANK0 0020  
                    __end_of_KEYPAD_Init 0CFF          __size_of_keypad_WaitForKeyPress 0060  
              UART_Init@var_baudRate_u32 0030                                 ?___ftadd 0023  
                               ?___ftneg 0020                                 ?___lldiv 0070  
                               ?___ftmul 0078                                 ?___fttol 002A  
                            ??_UART_Init 007E                         _UART_SetBaudRate 0EFE  
                              __pstrings 0800                                 _DELAY_us 000A  
                          UART_Printf@ch 0061                            ??_UART_TxChar 0070  
                          _UART_TxNumber 03C5                            ??_UART_Printf 004D  
                          _UART_TxString 0C05                  UART_TxString@ptr_string 0072  
               GPIO_PinRead@returnStatus 0073                              __stringbase 0805  
                          _A_RowsPins_U8 006C                   _keypad_WaitForKeyPress 0D5D  
             __end_of_UART_TxFloatNumber 0142                              _KEYPAD_Init 0CA6  
              UART_TxNumber@v_number_u32 0024                           ?_UART_TxNumber 0024  
                         ?_UART_TxString 0070                      __end_of_UART_TxChar 0BE8  
                       __size_of___ftadd 0109                         __size_of___ftneg 000A  
                       __size_of___lldiv 005E                         __size_of___ftmul 00D1  
                       __size_of___fttol 008E                      __end_of_UART_Printf 07F2  
                               ___ftpack 0E1D                       __end_of__stringtab 0806  
                               ___lltoft 0C30                           KEYPAD_GetKey@i 007D  
                         KEYPAD_GetKey@j 007C                                 __ptext10 03C5  
                               __ptext11 0BF2                                 __ptext20 0D5D  
                               __ptext12 0BDF                                 __ptext21 0213  
                               __ptext13 0C1A                                 __ptext22 0E89  
                               __ptext14 0EFE                                 __ptext23 000A  
                               __ptext15 0CFF                                 __ptext16 0CA6  
                               __ptext17 02EC                                 __ptext18 0F78  
                               __ptext19 0DBD                            __size_of_main 004B  
                        UART_Printf@argp 0063                 UART_SetBaudRate@RegValue 002C  
              keypad_WaitForKeyRelease@i 0077                          ??_UART_TxNumber 0029  
               __end_of_UART_SetBaudRate 0F78                          ??_UART_TxString 0071  
                       ___lldiv@dividend 0074                                stringcode 0800  
                            _UART_TxChar 0BDF                              _UART_Printf 05C0  
                       ___lldiv@quotient 0079       UART_TxFloatNumber@v_tempNumber_u32 0047  
                               stringdir 0800                                 stringtab 0800  
                 __size_of_KEYPAD_GetKey 0088                   __size_of_GPIO_PinWrite 00D9  
  UART_Printf@v_numOfDigitsToTransmit_u8 0062                       UART_Printf@argList 0053  
                   UART_Printf@v_num_s16 0058                     UART_Printf@v_num_s32 0054  
                   UART_Printf@v_num_u16 005E                     UART_Printf@v_num_u32 005A  
