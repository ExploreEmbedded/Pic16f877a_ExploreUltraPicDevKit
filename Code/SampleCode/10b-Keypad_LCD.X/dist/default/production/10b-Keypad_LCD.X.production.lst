

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Feb 22 23:35:04 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110                           
   111                           	psect	idataBANK1
   112  087C                     __pidataBANK1:	
   113                           
   114                           ;initializer for _ARR_LcdLineNumAddress_U8
   115  087C  3480               	retlw	128
   116  087D  34C0               	retlw	192
   117  087E  3490               	retlw	144
   118  087F  34D0               	retlw	208
   119                           
   120                           	psect	strings
   121  0800                     __pstrings:	
   122  0800                     stringtab:	
   123  0800                     __stringtab:	
   124  0800                     stringcode:	
   125                           ;	String table - string pointers are 1 byte each
   126                           
   127  0800                     stringdir:	
   128  0800  3008               	movlw	high stringdir
   129  0801  008A               	movwf	10
   130  0802  0804               	movf	4,w
   131  0803  0A84               	incf	4,f
   132  0804  0782               	addwf	2,f
   133  0805                     __stringbase:	
   134  0805  3400               	retlw	0
   135  0806                     __end_of__stringtab:	
   136  0806                     _A_KeyLookUptable_U8:	
   137  0806  3430               	retlw	48
   138  0807  3431               	retlw	49
   139  0808  3432               	retlw	50
   140  0809  3433               	retlw	51
   141  080A  3434               	retlw	52
   142  080B  3435               	retlw	53
   143  080C  3436               	retlw	54
   144  080D  3437               	retlw	55
   145  080E  3438               	retlw	56
   146  080F  3439               	retlw	57
   147  0810  3441               	retlw	65
   148  0811  3442               	retlw	66
   149  0812  3443               	retlw	67
   150  0813  3444               	retlw	68
   151  0814  3445               	retlw	69
   152  0815  3446               	retlw	70
   153  0816                     __end_of_A_KeyLookUptable_U8:	
   154  0005                     _PORTA	set	5
   155  0006                     _PORTB	set	6
   156  0007                     _PORTC	set	7
   157  0008                     _PORTD	set	8
   158  0009                     _PORTE	set	9
   159  0085                     _TRISA	set	133
   160  0086                     _TRISB	set	134
   161  0087                     _TRISC	set	135
   162  0088                     _TRISD	set	136
   163  0089                     _TRISE	set	137
   164  0816                     STR_1:	
   165  0816  344B               	retlw	75	;'K'
   166  0817  3465               	retlw	101	;'e'
   167  0818  3479               	retlw	121	;'y'
   168  0819  3420               	retlw	32	;' '
   169  081A  3450               	retlw	80	;'P'
   170  081B  3472               	retlw	114	;'r'
   171  081C  3465               	retlw	101	;'e'
   172  081D  3473               	retlw	115	;'s'
   173  081E  3473               	retlw	115	;'s'
   174  081F  3465               	retlw	101	;'e'
   175  0820  3464               	retlw	100	;'d'
   176  0821  343A               	retlw	58	;':'
   177  0822  3400               	retlw	0
   178                           
   179                           ; #config settings
   180  0000                     
   181                           	psect	cinit
   182  07D9                     start_initialization:	
   183  07D9                     __initialization:	
   184                           
   185                           ; Clear objects allocated to BANK0
   186  07D9  01ED               	clrf	__pbssBANK0& (0+127)
   187  07DA  01EE               	clrf	(__pbssBANK0+1)& (0+127)
   188                           
   189                           ; Clear objects allocated to BANK1
   190  07DB  1383               	bcf	3,7	;select IRP bank0
   191  07DC  30A0               	movlw	low __pbssBANK1
   192  07DD  0084               	movwf	4
   193  07DE  30B6               	movlw	low (__pbssBANK1+22)
   194  07DF  120A  158A  2080  120A  118A  	fcall	clear_ram0
   195                           
   196                           ; Initialize objects allocated to BANK1
   197  07E4  1683               	bsf	3,5	;RP0=1, select bank1
   198  07E5  1303               	bcf	3,6	;RP1=0, select bank1
   199  07E6  120A  158A  207C  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   200  07EB  00B6               	movwf	__pdataBANK1& (0+127)
   201  07EC  120A  158A  207D  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   202  07F1  00B7               	movwf	(__pdataBANK1+1)& (0+127)
   203  07F2  120A  158A  207E  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   204  07F7  00B8               	movwf	(__pdataBANK1+2)& (0+127)
   205  07F8  120A  158A  207F   	fcall	__pidataBANK1+3	;fetch initializer
   206  07FB  00B9               	movwf	(__pdataBANK1+3)& (0+127)
   207  07FC                     end_of_initialization:	
   208                           ;End of C runtime variable initialization code
   209                           
   210  07FC                     __end_of__initialization:	
   211  07FC  0183               	clrf	3
   212  07FD  120A  158A  2D40   	ljmp	_main	;jump to C main() function
   213                           
   214                           	psect	bssBANK0
   215  006D                     __pbssBANK0:	
   216  006D                     _v_LcdTrackCursorPos_U8:	
   217  006D                     	ds	1
   218  006E                     _v_LcdTrackLineNum_U8:	
   219  006E                     	ds	1
   220                           
   221                           	psect	bssBANK1
   222  00A0                     __pbssBANK1:	
   223  00A0                     _LCDConfig:	
   224  00A0                     	ds	14
   225  00AE                     _A_ColsPins_U8:	
   226  00AE                     	ds	4
   227  00B2                     _A_RowsPins_U8:	
   228  00B2                     	ds	4
   229                           
   230                           	psect	dataBANK1
   231  00B6                     __pdataBANK1:	
   232  00B6                     _ARR_LcdLineNumAddress_U8:	
   233  00B6                     	ds	4
   234                           
   235                           	psect	clrtext
   236  0880                     clear_ram0:	
   237                           ;	Called with FSR containing the base address, and
   238                           ;	W with the last address+1
   239                           
   240  0880  0064               	clrwdt	;clear the watchdog before getting into this loop
   241  0881                     clrloop0:	
   242  0881  0180               	clrf	0	;clear RAM location pointed to by FSR
   243  0882  0A84               	incf	4,f	;increment pointer
   244  0883  0604               	xorwf	4,w	;XOR with final address
   245  0884  1903               	btfsc	3,2	;have we reached the end yet?
   246  0885  3400               	retlw	0	;all done for this memory range, return
   247  0886  0604               	xorwf	4,w	;XOR again to restore value
   248  0887  2881               	goto	clrloop0	;do the next byte
   249                           
   250                           	psect	cstackCOMMON
   251  0070                     __pcstackCOMMON:	
   252  0070                     ?_LCD_CmdWrite:	
   253  0070                     ?_lcd_Reset:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ?_LCD_Clear:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_LCD_GoToLine:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ?_lcd_BusyCheck:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ?_lcd_SendLowerNibble:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ?_lcd_SendHigherNibble:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ?_lcd_SendCmdSignals:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ?_lcd_DataWrite:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_lcd_SendDataSignals:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ?_LCD_Printf:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_DELAY_us:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_GPIO_PinDirection:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_GPIO_PinWrite:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_GPIO_PinRead:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ??_GPIO_PinRead:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_keypad_WaitForKeyRelease:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ?_keypad_WaitForKeyPress:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_KEYPAD_GetKey:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_LCD_GoToNextLine:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_LCD_DisplayChar:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_LCD_DisplayString:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_main:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?___ftpack:	
   320                           ; 2 bytes @ 0x0
   321                           
   322  0070                     ?___lldiv:	
   323                           ; 3 bytes @ 0x0
   324                           
   325  0070                     GPIO_PinDirection@var_pinDirn_u8:	
   326                           ; 4 bytes @ 0x0
   327                           
   328  0070                     GPIO_PinWrite@var_pinValue_u8:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     DELAY_us@us_count:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ___ftpack@arg:	
   335                           ; 2 bytes @ 0x0
   336                           
   337  0070                     ___lldiv@divisor:	
   338                           ; 3 bytes @ 0x0
   339                           
   340                           
   341                           ; 4 bytes @ 0x0
   342  0070                     	ds	1
   343  0071                     ??_GPIO_PinDirection:	
   344  0071                     ??_GPIO_PinWrite:	
   345                           ; 1 bytes @ 0x1
   346                           
   347                           
   348                           ; 1 bytes @ 0x1
   349  0071                     	ds	1
   350  0072                     ??_DELAY_us:	
   351  0072                     ?_DELAY_ms:	
   352                           ; 1 bytes @ 0x2
   353                           
   354  0072                     GPIO_PinRead@var_portNumber_u8:	
   355                           ; 1 bytes @ 0x2
   356                           
   357  0072                     DELAY_ms@ms_count:	
   358                           ; 1 bytes @ 0x2
   359                           
   360                           
   361                           ; 2 bytes @ 0x2
   362  0072                     	ds	1
   363  0073                     GPIO_PinDirection@var_portNumber_u8:	
   364  0073                     GPIO_PinWrite@var_portNumber_u8:	
   365                           ; 1 bytes @ 0x3
   366                           
   367  0073                     GPIO_PinRead@returnStatus:	
   368                           ; 1 bytes @ 0x3
   369                           
   370  0073                     ___ftpack@exp:	
   371                           ; 1 bytes @ 0x3
   372                           
   373                           
   374                           ; 1 bytes @ 0x3
   375  0073                     	ds	1
   376  0074                     ??_DELAY_ms:	
   377  0074                     GPIO_PinDirection@enm_pinNumber:	
   378                           ; 1 bytes @ 0x4
   379                           
   380  0074                     GPIO_PinWrite@enm_pinNumber:	
   381                           ; 1 bytes @ 0x4
   382                           
   383  0074                     GPIO_PinRead@enm_pinNumber:	
   384                           ; 1 bytes @ 0x4
   385                           
   386  0074                     ___ftpack@sign:	
   387                           ; 1 bytes @ 0x4
   388                           
   389  0074                     ___lldiv@dividend:	
   390                           ; 1 bytes @ 0x4
   391                           
   392                           
   393                           ; 4 bytes @ 0x4
   394  0074                     	ds	1
   395  0075                     ??_lcd_BusyCheck:	
   396  0075                     ??_lcd_SendLowerNibble:	
   397                           ; 1 bytes @ 0x5
   398                           
   399  0075                     ??_lcd_SendHigherNibble:	
   400                           ; 1 bytes @ 0x5
   401                           
   402  0075                     ??_lcd_SendCmdSignals:	
   403                           ; 1 bytes @ 0x5
   404                           
   405  0075                     ??_lcd_SendDataSignals:	
   406                           ; 1 bytes @ 0x5
   407                           
   408  0075                     ??___ftpack:	
   409                           ; 1 bytes @ 0x5
   410                           
   411  0075                     ?_KEYPAD_Init:	
   412                           ; 1 bytes @ 0x5
   413                           
   414  0075                     ??_keypad_WaitForKeyRelease:	
   415                           ; 1 bytes @ 0x5
   416                           
   417  0075                     ??_keypad_WaitForKeyPress:	
   418                           ; 1 bytes @ 0x5
   419                           
   420  0075                     ??_LCD_SetUp:	
   421                           ; 1 bytes @ 0x5
   422                           
   423  0075                     KEYPAD_Init@row_1:	
   424                           ; 1 bytes @ 0x5
   425                           
   426                           
   427                           ; 1 bytes @ 0x5
   428  0075                     	ds	1
   429  0076                     KEYPAD_Init@row_2:	
   430  0076                     keypad_WaitForKeyRelease@v_keyStatus_u8:	
   431                           ; 1 bytes @ 0x6
   432                           
   433  0076                     keypad_WaitForKeyPress@v_keyStatus_u8:	
   434                           ; 1 bytes @ 0x6
   435                           
   436  0076                     LCD_SetUp@RS:	
   437                           ; 1 bytes @ 0x6
   438                           
   439  0076                     lcd_BusyCheck@busyflag:	
   440                           ; 1 bytes @ 0x6
   441                           
   442  0076                     lcd_SendHigherNibble@dataByte:	
   443                           ; 1 bytes @ 0x6
   444                           
   445  0076                     lcd_SendLowerNibble@dataByte:	
   446                           ; 1 bytes @ 0x6
   447                           
   448                           
   449                           ; 1 bytes @ 0x6
   450  0076                     	ds	1
   451  0077                     ??_LCD_CmdWrite:	
   452  0077                     ??_lcd_Reset:	
   453                           ; 1 bytes @ 0x7
   454                           
   455  0077                     ??_lcd_DataWrite:	
   456                           ; 1 bytes @ 0x7
   457                           
   458  0077                     KEYPAD_Init@row_3:	
   459                           ; 1 bytes @ 0x7
   460                           
   461  0077                     keypad_WaitForKeyRelease@i:	
   462                           ; 1 bytes @ 0x7
   463                           
   464  0077                     keypad_WaitForKeyPress@i:	
   465                           ; 1 bytes @ 0x7
   466                           
   467                           
   468                           ; 1 bytes @ 0x7
   469  0077                     	ds	1
   470  0078                     ??_KEYPAD_GetKey:	
   471  0078                     ??___lldiv:	
   472                           ; 1 bytes @ 0x8
   473                           
   474  0078                     ?___ftmul:	
   475                           ; 1 bytes @ 0x8
   476                           
   477  0078                     ?___lltoft:	
   478                           ; 3 bytes @ 0x8
   479                           
   480  0078                     KEYPAD_Init@col_0:	
   481                           ; 3 bytes @ 0x8
   482                           
   483  0078                     ___ftmul@f1:	
   484                           ; 1 bytes @ 0x8
   485                           
   486  0078                     ___lltoft@c:	
   487                           ; 3 bytes @ 0x8
   488                           
   489                           
   490                           ; 4 bytes @ 0x8
   491  0078                     	ds	1
   492  0079                     KEYPAD_Init@col_1:	
   493  0079                     LCD_CmdWrite@v_lcdCmd_u8:	
   494                           ; 1 bytes @ 0x9
   495                           
   496  0079                     lcd_DataWrite@dataByte:	
   497                           ; 1 bytes @ 0x9
   498                           
   499  0079                     ___lldiv@quotient:	
   500                           ; 1 bytes @ 0x9
   501                           
   502                           
   503                           ; 4 bytes @ 0x9
   504  0079                     	ds	1
   505  007A                     ??_LCD_GoToLine:	
   506  007A                     ??_LCD_GoToNextLine:	
   507                           ; 1 bytes @ 0xA
   508                           
   509  007A                     KEYPAD_Init@col_2:	
   510                           ; 1 bytes @ 0xA
   511                           
   512                           
   513                           ; 1 bytes @ 0xA
   514  007A                     	ds	1
   515  007B                     ??_LCD_DisplayChar:	
   516  007B                     KEYPAD_Init@col_3:	
   517                           ; 1 bytes @ 0xB
   518                           
   519  007B                     KEYPAD_GetKey@v_KeyPressed_u8:	
   520                           ; 1 bytes @ 0xB
   521                           
   522  007B                     LCD_GoToLine@v_lineNumber_u8:	
   523                           ; 1 bytes @ 0xB
   524                           
   525  007B                     ___ftmul@f2:	
   526                           ; 1 bytes @ 0xB
   527                           
   528                           
   529                           ; 3 bytes @ 0xB
   530  007B                     	ds	1
   531  007C                     ??_LCD_Clear:	
   532  007C                     ??_KEYPAD_Init:	
   533                           ; 1 bytes @ 0xC
   534                           
   535  007C                     ?_LCD_Init:	
   536                           ; 1 bytes @ 0xC
   537                           
   538  007C                     ??___lltoft:	
   539                           ; 1 bytes @ 0xC
   540                           
   541  007C                     KEYPAD_GetKey@j:	
   542                           ; 1 bytes @ 0xC
   543                           
   544  007C                     LCD_Init@v_MaxCharsPerLine_u8:	
   545                           ; 1 bytes @ 0xC
   546                           
   547  007C                     LCD_DisplayChar@v_lcdData_u8:	
   548                           ; 1 bytes @ 0xC
   549                           
   550                           
   551                           ; 1 bytes @ 0xC
   552  007C                     	ds	1
   553  007D                     ??_LCD_Init:	
   554  007D                     ??_LCD_DisplayString:	
   555                           ; 1 bytes @ 0xD
   556                           
   557  007D                     KEYPAD_GetKey@i:	
   558                           ; 1 bytes @ 0xD
   559                           
   560  007D                     ___lldiv@counter:	
   561                           ; 1 bytes @ 0xD
   562                           
   563  007D                     ___lltoft@exp:	
   564                           ; 1 bytes @ 0xD
   565                           
   566                           
   567                           ; 1 bytes @ 0xD
   568  007D                     	ds	1
   569  007E                     ??___ftneg:	
   570                           
   571                           	psect	cstackBANK0
   572  0020                     __pcstackBANK0:	
   573                           ; 1 bytes @ 0xE
   574                           
   575  0020                     ?_LCD_SetUp:	
   576  0020                     ?___bmul:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0020                     ??___ftmul:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0020                     ?___ftneg:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0020                     KEYPAD_Init@row_0:	
   586                           ; 3 bytes @ 0x0
   587                           
   588  0020                     LCD_SetUp@RW:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0020                     LCD_Init@v_lcdNoOfLines_u8:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0020                     LCD_DisplayString@ptr_stringPointer_u8:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0020                     ___bmul@multiplicand:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0020                     ___ftneg@f1:	
   601                           ; 1 bytes @ 0x0
   602                           
   603                           
   604                           ; 3 bytes @ 0x0
   605  0020                     	ds	1
   606  0021                     ??___bmul:	
   607  0021                     KEYPAD_Init@i:	
   608                           ; 1 bytes @ 0x1
   609                           
   610  0021                     LCD_SetUp@EN:	
   611                           ; 1 bytes @ 0x1
   612                           
   613                           
   614                           ; 1 bytes @ 0x1
   615  0021                     	ds	1
   616  0022                     LCD_SetUp@D0:	
   617  0022                     ___bmul@product:	
   618                           ; 1 bytes @ 0x2
   619                           
   620                           
   621                           ; 1 bytes @ 0x2
   622  0022                     	ds	1
   623  0023                     ?___ftadd:	
   624  0023                     LCD_SetUp@D1:	
   625                           ; 3 bytes @ 0x3
   626                           
   627  0023                     ___bmul@multiplier:	
   628                           ; 1 bytes @ 0x3
   629                           
   630  0023                     ___ftadd@f1:	
   631                           ; 1 bytes @ 0x3
   632                           
   633                           
   634                           ; 3 bytes @ 0x3
   635  0023                     	ds	1
   636  0024                     ?_LCD_DisplayNumber:	
   637  0024                     LCD_SetUp@D2:	
   638                           ; 1 bytes @ 0x4
   639                           
   640  0024                     ___ftmul@exp:	
   641                           ; 1 bytes @ 0x4
   642                           
   643  0024                     LCD_DisplayNumber@v_number_u32:	
   644                           ; 1 bytes @ 0x4
   645                           
   646                           
   647                           ; 4 bytes @ 0x4
   648  0024                     	ds	1
   649  0025                     LCD_SetUp@D3:	
   650  0025                     ___ftmul@f3_as_product:	
   651                           ; 1 bytes @ 0x5
   652                           
   653                           
   654                           ; 3 bytes @ 0x5
   655  0025                     	ds	1
   656  0026                     LCD_SetUp@D4:	
   657  0026                     ___ftadd@f2:	
   658                           ; 1 bytes @ 0x6
   659                           
   660                           
   661                           ; 3 bytes @ 0x6
   662  0026                     	ds	1
   663  0027                     LCD_SetUp@D5:	
   664                           
   665                           ; 1 bytes @ 0x7
   666  0027                     	ds	1
   667  0028                     LCD_SetUp@D6:	
   668  0028                     LCD_DisplayNumber@v_numOfDigitsToDisplay_u8:	
   669                           ; 1 bytes @ 0x8
   670                           
   671  0028                     ___ftmul@cntr:	
   672                           ; 1 bytes @ 0x8
   673                           
   674                           
   675                           ; 1 bytes @ 0x8
   676  0028                     	ds	1
   677  0029                     ??_LCD_DisplayNumber:	
   678  0029                     ??___ftadd:	
   679                           ; 1 bytes @ 0x9
   680                           
   681  0029                     LCD_SetUp@D7:	
   682                           ; 1 bytes @ 0x9
   683                           
   684  0029                     ___ftmul@sign:	
   685                           ; 1 bytes @ 0x9
   686                           
   687                           
   688                           ; 1 bytes @ 0x9
   689  0029                     	ds	1
   690  002A                     ?___fttol:	
   691  002A                     ___fttol@f1:	
   692                           ; 4 bytes @ 0xA
   693                           
   694                           
   695                           ; 3 bytes @ 0xA
   696  002A                     	ds	3
   697  002D                     ___ftadd@sign:	
   698                           
   699                           ; 1 bytes @ 0xD
   700  002D                     	ds	1
   701  002E                     ??___fttol:	
   702  002E                     ___ftadd@exp2:	
   703                           ; 1 bytes @ 0xE
   704                           
   705                           
   706                           ; 1 bytes @ 0xE
   707  002E                     	ds	1
   708  002F                     ___ftadd@exp1:	
   709                           
   710                           ; 1 bytes @ 0xF
   711  002F                     	ds	3
   712  0032                     ___fttol@sign1:	
   713                           
   714                           ; 1 bytes @ 0x12
   715  0032                     	ds	1
   716  0033                     ___fttol@lval:	
   717                           
   718                           ; 4 bytes @ 0x13
   719  0033                     	ds	2
   720  0035                     LCD_DisplayNumber@a:	
   721                           
   722                           ; 10 bytes @ 0x15
   723  0035                     	ds	2
   724  0037                     ___fttol@exp1:	
   725                           
   726                           ; 1 bytes @ 0x17
   727  0037                     	ds	8
   728  003F                     _LCD_DisplayNumber$336:	
   729                           
   730                           ; 2 bytes @ 0x1F
   731  003F                     	ds	2
   732  0041                     LCD_DisplayNumber@v_numericSystem_u8:	
   733                           
   734                           ; 1 bytes @ 0x21
   735  0041                     	ds	1
   736  0042                     LCD_DisplayNumber@i:	
   737                           
   738                           ; 1 bytes @ 0x22
   739  0042                     	ds	1
   740  0043                     ?_LCD_DisplayFloatNumber:	
   741  0043                     LCD_DisplayFloatNumber@v_floatNum_f32:	
   742                           ; 1 bytes @ 0x23
   743                           
   744                           
   745                           ; 3 bytes @ 0x23
   746  0043                     	ds	3
   747  0046                     ??_LCD_DisplayFloatNumber:	
   748                           
   749                           ; 1 bytes @ 0x26
   750  0046                     	ds	1
   751  0047                     LCD_DisplayFloatNumber@v_temp_u32:	
   752                           
   753                           ; 4 bytes @ 0x27
   754  0047                     	ds	4
   755  004B                     ??_LCD_Printf:	
   756                           
   757                           ; 1 bytes @ 0x2B
   758  004B                     	ds	2
   759  004D                     LCD_Printf@v_floatNum_f32:	
   760                           
   761                           ; 3 bytes @ 0x2D
   762  004D                     	ds	3
   763  0050                     LCD_Printf@str:	
   764                           
   765                           ; 1 bytes @ 0x30
   766  0050                     	ds	1
   767  0051                     LCD_Printf@argList:	
   768                           
   769                           ; 1 bytes @ 0x31
   770  0051                     	ds	1
   771  0052                     LCD_Printf@v_num_s32:	
   772                           
   773                           ; 4 bytes @ 0x32
   774  0052                     	ds	4
   775  0056                     LCD_Printf@v_num_s16:	
   776                           
   777                           ; 2 bytes @ 0x36
   778  0056                     	ds	2
   779  0058                     LCD_Printf@v_num_u32:	
   780                           
   781                           ; 4 bytes @ 0x38
   782  0058                     	ds	4
   783  005C                     LCD_Printf@v_num_u16:	
   784                           
   785                           ; 2 bytes @ 0x3C
   786  005C                     	ds	2
   787  005E                     LCD_Printf@ptr:	
   788                           
   789                           ; 1 bytes @ 0x3E
   790  005E                     	ds	1
   791  005F                     LCD_Printf@ch:	
   792                           
   793                           ; 1 bytes @ 0x3F
   794  005F                     	ds	1
   795  0060                     LCD_Printf@v_numOfDigitsToDisp_u8:	
   796                           
   797                           ; 1 bytes @ 0x40
   798  0060                     	ds	1
   799  0061                     LCD_Printf@argp:	
   800                           
   801                           ; 1 bytes @ 0x41
   802  0061                     	ds	1
   803  0062                     ??_main:	
   804                           
   805                           ; 1 bytes @ 0x42
   806  0062                     	ds	10
   807  006C                     main@key:	
   808                           
   809                           ; 1 bytes @ 0x4C
   810  006C                     	ds	1
   811                           
   812                           	psect	maintext
   813  0D40                     __pmaintext:	
   814 ;;
   815 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   816 ;;
   817 ;; *************** function _main *****************
   818 ;; Defined at:
   819 ;;		line 38 in file "main.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  key             1   76[BANK0 ] unsigned char 
   824 ;; Return value:  Size  Location     Type
   825 ;;                  2  371[None  ] int 
   826 ;; Registers used:
   827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : B00/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   833 ;;      Params:         0       0       0       0       0
   834 ;;      Locals:         0       1       0       0       0
   835 ;;      Temps:          0      10       0       0       0
   836 ;;      Totals:         0      11       0       0       0
   837 ;;Total ram usage:       11 bytes
   838 ;; Hardware stack levels required when called:    9
   839 ;; This function calls:
   840 ;;		_KEYPAD_GetKey
   841 ;;		_KEYPAD_Init
   842 ;;		_LCD_DisplayChar
   843 ;;		_LCD_GoToLine
   844 ;;		_LCD_Init
   845 ;;		_LCD_Printf
   846 ;;		_LCD_SetUp
   847 ;; This function is called by:
   848 ;;		Startup code after reset
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           
   853                           ;psect for function _main
   854  0D40                     _main:	
   855                           
   856                           ;main.c: 40: uint8_t key;
   857                           ;main.c: 43: LCD_SetUp(PB_0,PB_1,PB_2,P_NC,P_NC,P_NC,P_NC,PB_4,PB_5,PB_6,PB_7);
   858                           
   859                           ;incstack = 0
   860 ;; hardware stack exceeded
   861                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   862  0D40  3009               	movlw	9
   863  0D41  1283               	bcf	3,5	;RP0=0, select bank0
   864  0D42  1303               	bcf	3,6	;RP1=0, select bank0
   865  0D43  00E2               	movwf	??_main
   866  0D44  0862               	movf	??_main,w
   867  0D45  00A0               	movwf	LCD_SetUp@RW
   868  0D46  300A               	movlw	10
   869  0D47  00E3               	movwf	??_main+1
   870  0D48  0863               	movf	??_main+1,w
   871  0D49  00A1               	movwf	LCD_SetUp@EN
   872  0D4A  30FF               	movlw	255
   873  0D4B  00E4               	movwf	??_main+2
   874  0D4C  0864               	movf	??_main+2,w
   875  0D4D  00A2               	movwf	LCD_SetUp@D0
   876  0D4E  30FF               	movlw	255
   877  0D4F  00E5               	movwf	??_main+3
   878  0D50  0865               	movf	??_main+3,w
   879  0D51  00A3               	movwf	LCD_SetUp@D1
   880  0D52  30FF               	movlw	255
   881  0D53  00E6               	movwf	??_main+4
   882  0D54  0866               	movf	??_main+4,w
   883  0D55  00A4               	movwf	LCD_SetUp@D2
   884  0D56  30FF               	movlw	255
   885  0D57  00E7               	movwf	??_main+5
   886  0D58  0867               	movf	??_main+5,w
   887  0D59  00A5               	movwf	LCD_SetUp@D3
   888  0D5A  300C               	movlw	12
   889  0D5B  00E8               	movwf	??_main+6
   890  0D5C  0868               	movf	??_main+6,w
   891  0D5D  00A6               	movwf	LCD_SetUp@D4
   892  0D5E  300D               	movlw	13
   893  0D5F  00E9               	movwf	??_main+7
   894  0D60  0869               	movf	??_main+7,w
   895  0D61  00A7               	movwf	LCD_SetUp@D5
   896  0D62  300E               	movlw	14
   897  0D63  00EA               	movwf	??_main+8
   898  0D64  086A               	movf	??_main+8,w
   899  0D65  00A8               	movwf	LCD_SetUp@D6
   900  0D66  300F               	movlw	15
   901  0D67  00EB               	movwf	??_main+9
   902  0D68  086B               	movf	??_main+9,w
   903  0D69  00A9               	movwf	LCD_SetUp@D7
   904  0D6A  3008               	movlw	8
   905  0D6B  120A  118A  2134  120A  158A  	fcall	_LCD_SetUp
   906                           
   907                           ;main.c: 44: LCD_Init(2,16);
   908  0D70  3010               	movlw	16
   909  0D71  1283               	bcf	3,5	;RP0=0, select bank0
   910  0D72  1303               	bcf	3,6	;RP1=0, select bank0
   911  0D73  00E2               	movwf	??_main
   912  0D74  0862               	movf	??_main,w
   913  0D75  00FC               	movwf	LCD_Init@v_MaxCharsPerLine_u8
   914  0D76  3002               	movlw	2
   915  0D77  120A  158A  22F7  120A  158A  	fcall	_LCD_Init
   916                           
   917                           ;main.c: 46: KEYPAD_Init(PD_0,PD_1,PD_2,PD_3,PD_4,PD_5,PD_6,PD_7);
   918  0D7C  3019               	movlw	25
   919  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
   920  0D7E  1303               	bcf	3,6	;RP1=0, select bank0
   921  0D7F  00E2               	movwf	??_main
   922  0D80  0862               	movf	??_main,w
   923  0D81  00F5               	movwf	KEYPAD_Init@row_1
   924  0D82  301A               	movlw	26
   925  0D83  00E3               	movwf	??_main+1
   926  0D84  0863               	movf	??_main+1,w
   927  0D85  00F6               	movwf	KEYPAD_Init@row_2
   928  0D86  301B               	movlw	27
   929  0D87  00E4               	movwf	??_main+2
   930  0D88  0864               	movf	??_main+2,w
   931  0D89  00F7               	movwf	KEYPAD_Init@row_3
   932  0D8A  301C               	movlw	28
   933  0D8B  00E5               	movwf	??_main+3
   934  0D8C  0865               	movf	??_main+3,w
   935  0D8D  00F8               	movwf	KEYPAD_Init@col_0
   936  0D8E  301D               	movlw	29
   937  0D8F  00E6               	movwf	??_main+4
   938  0D90  0866               	movf	??_main+4,w
   939  0D91  00F9               	movwf	KEYPAD_Init@col_1
   940  0D92  301E               	movlw	30
   941  0D93  00E7               	movwf	??_main+5
   942  0D94  0867               	movf	??_main+5,w
   943  0D95  00FA               	movwf	KEYPAD_Init@col_2
   944  0D96  301F               	movlw	31
   945  0D97  00E8               	movwf	??_main+6
   946  0D98  0868               	movf	??_main+6,w
   947  0D99  00FB               	movwf	KEYPAD_Init@col_3
   948  0D9A  3018               	movlw	24
   949  0D9B  120A  158A  2348  120A  158A  	fcall	_KEYPAD_Init
   950                           
   951                           ;main.c: 48: LCD_Printf("Key Pressed:");
   952  0DA0  3011               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   953  0DA1  120A  118A  25B2  120A  158A  	fcall	_LCD_Printf
   954  0DA6                     l372:	
   955                           ;main.c: 49: while (1)
   956                           
   957                           
   958                           ;main.c: 50: {
   959                           ;main.c: 51: key = KEYPAD_GetKey();
   960  0DA6  120A  158A  25BF  120A  158A  	fcall	_KEYPAD_GetKey
   961  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
   962  0DAC  1303               	bcf	3,6	;RP1=0, select bank0
   963  0DAD  00E2               	movwf	??_main
   964  0DAE  0862               	movf	??_main,w
   965  0DAF  00EC               	movwf	main@key
   966                           
   967                           ;main.c: 52: LCD_GoToLine(1);
   968  0DB0  3001               	movlw	1
   969  0DB1  120A  158A  20CF  120A  158A  	fcall	_LCD_GoToLine
   970                           
   971                           ;main.c: 53: LCD_DisplayChar(key);
   972  0DB6  1283               	bcf	3,5	;RP0=0, select bank0
   973  0DB7  1303               	bcf	3,6	;RP1=0, select bank0
   974  0DB8  086C               	movf	main@key,w
   975  0DB9  120A  158A  2117  120A  158A  	fcall	_LCD_DisplayChar
   976  0DBE  2DA6               	goto	l372
   977  0DBF                     __end_of_main:	
   978                           ;main.c: 55: }
   979                           ;main.c: 57: return (0);
   980                           ;	Return value of _main is never used
   981                           
   982                           
   983                           	psect	text1
   984  0134                     __ptext1:	
   985 ;; *************** function _LCD_SetUp *****************
   986 ;; Defined at:
   987 ;;		line 135 in file "../00-libfiles/lcd.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;  RS              1    wreg     enum E33
   990 ;;  RW              1    0[BANK0 ] enum E33
   991 ;;  EN              1    1[BANK0 ] enum E33
   992 ;;  D0              1    2[BANK0 ] enum E33
   993 ;;  D1              1    3[BANK0 ] enum E33
   994 ;;  D2              1    4[BANK0 ] enum E33
   995 ;;  D3              1    5[BANK0 ] enum E33
   996 ;;  D4              1    6[BANK0 ] enum E33
   997 ;;  D5              1    7[BANK0 ] enum E33
   998 ;;  D6              1    8[BANK0 ] enum E33
   999 ;;  D7              1    9[BANK0 ] enum E33
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  RS              1    6[COMMON] enum E33
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1011 ;;      Params:         0      10       0       0       0
  1012 ;;      Locals:         1       0       0       0       0
  1013 ;;      Temps:          1       0       0       0       0
  1014 ;;      Totals:         2      10       0       0       0
  1015 ;;Total ram usage:       12 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; Hardware stack levels required when called:    1
  1018 ;; This function calls:
  1019 ;;		_GPIO_PinDirection
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           
  1026                           ;psect for function _LCD_SetUp
  1027  0134                     _LCD_SetUp:	
  1028                           
  1029                           ;incstack = 0
  1030                           ; Regs used in _LCD_SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1031                           ;LCD_SetUp@RS stored from wreg
  1032  0134  00F6               	movwf	LCD_SetUp@RS
  1033                           
  1034                           ;lcd.c: 148: LCDConfig.RS = RS;
  1035  0135  0876               	movf	LCD_SetUp@RS,w
  1036  0136  00F5               	movwf	??_LCD_SetUp
  1037  0137  0875               	movf	??_LCD_SetUp,w
  1038  0138  1683               	bsf	3,5	;RP0=1, select bank1
  1039  0139  1303               	bcf	3,6	;RP1=0, select bank1
  1040  013A  00A3               	movwf	(_LCDConfig^(0+128)+3)
  1041                           
  1042                           ;lcd.c: 149: LCDConfig.RW = RW;
  1043  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1044  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1045  013D  0820               	movf	LCD_SetUp@RW,w
  1046  013E  00F5               	movwf	??_LCD_SetUp
  1047  013F  0875               	movf	??_LCD_SetUp,w
  1048  0140  1683               	bsf	3,5	;RP0=1, select bank1
  1049  0141  1303               	bcf	3,6	;RP1=0, select bank1
  1050  0142  00A4               	movwf	(_LCDConfig^(0+128)+4)
  1051                           
  1052                           ;lcd.c: 150: LCDConfig.EN = EN;
  1053  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0145  0821               	movf	LCD_SetUp@EN,w
  1056  0146  00F5               	movwf	??_LCD_SetUp
  1057  0147  0875               	movf	??_LCD_SetUp,w
  1058  0148  1683               	bsf	3,5	;RP0=1, select bank1
  1059  0149  1303               	bcf	3,6	;RP1=0, select bank1
  1060  014A  00A5               	movwf	(_LCDConfig^(0+128)+5)
  1061                           
  1062                           ;lcd.c: 152: LCDConfig.D0 = D0;
  1063  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1064  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1065  014D  0822               	movf	LCD_SetUp@D0,w
  1066  014E  00F5               	movwf	??_LCD_SetUp
  1067  014F  0875               	movf	??_LCD_SetUp,w
  1068  0150  1683               	bsf	3,5	;RP0=1, select bank1
  1069  0151  1303               	bcf	3,6	;RP1=0, select bank1
  1070  0152  00A6               	movwf	(_LCDConfig^(0+128)+6)
  1071                           
  1072                           ;lcd.c: 153: LCDConfig.D1 = D1;
  1073  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0155  0823               	movf	LCD_SetUp@D1,w
  1076  0156  00F5               	movwf	??_LCD_SetUp
  1077  0157  0875               	movf	??_LCD_SetUp,w
  1078  0158  1683               	bsf	3,5	;RP0=1, select bank1
  1079  0159  1303               	bcf	3,6	;RP1=0, select bank1
  1080  015A  00A7               	movwf	(_LCDConfig^(0+128)+7)
  1081                           
  1082                           ;lcd.c: 154: LCDConfig.D2 = D2;
  1083  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1084  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1085  015D  0824               	movf	LCD_SetUp@D2,w
  1086  015E  00F5               	movwf	??_LCD_SetUp
  1087  015F  0875               	movf	??_LCD_SetUp,w
  1088  0160  1683               	bsf	3,5	;RP0=1, select bank1
  1089  0161  1303               	bcf	3,6	;RP1=0, select bank1
  1090  0162  00A8               	movwf	(_LCDConfig^(0+128)+8)
  1091                           
  1092                           ;lcd.c: 155: LCDConfig.D3 = D3;
  1093  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1094  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0165  0825               	movf	LCD_SetUp@D3,w
  1096  0166  00F5               	movwf	??_LCD_SetUp
  1097  0167  0875               	movf	??_LCD_SetUp,w
  1098  0168  1683               	bsf	3,5	;RP0=1, select bank1
  1099  0169  1303               	bcf	3,6	;RP1=0, select bank1
  1100  016A  00A9               	movwf	(_LCDConfig^(0+128)+9)
  1101                           
  1102                           ;lcd.c: 156: LCDConfig.D4 = D4;
  1103  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1104  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1105  016D  0826               	movf	LCD_SetUp@D4,w
  1106  016E  00F5               	movwf	??_LCD_SetUp
  1107  016F  0875               	movf	??_LCD_SetUp,w
  1108  0170  1683               	bsf	3,5	;RP0=1, select bank1
  1109  0171  1303               	bcf	3,6	;RP1=0, select bank1
  1110  0172  00AA               	movwf	(_LCDConfig^(0+128)+10)
  1111                           
  1112                           ;lcd.c: 157: LCDConfig.D5 = D5;
  1113  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1114  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1115  0175  0827               	movf	LCD_SetUp@D5,w
  1116  0176  00F5               	movwf	??_LCD_SetUp
  1117  0177  0875               	movf	??_LCD_SetUp,w
  1118  0178  1683               	bsf	3,5	;RP0=1, select bank1
  1119  0179  1303               	bcf	3,6	;RP1=0, select bank1
  1120  017A  00AB               	movwf	(_LCDConfig^(0+128)+11)
  1121                           
  1122                           ;lcd.c: 158: LCDConfig.D6 = D6;
  1123  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1124  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1125  017D  0828               	movf	LCD_SetUp@D6,w
  1126  017E  00F5               	movwf	??_LCD_SetUp
  1127  017F  0875               	movf	??_LCD_SetUp,w
  1128  0180  1683               	bsf	3,5	;RP0=1, select bank1
  1129  0181  1303               	bcf	3,6	;RP1=0, select bank1
  1130  0182  00AC               	movwf	(_LCDConfig^(0+128)+12)
  1131                           
  1132                           ;lcd.c: 159: LCDConfig.D7 = D7;
  1133  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1134  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1135  0185  0829               	movf	LCD_SetUp@D7,w
  1136  0186  00F5               	movwf	??_LCD_SetUp
  1137  0187  0875               	movf	??_LCD_SetUp,w
  1138  0188  1683               	bsf	3,5	;RP0=1, select bank1
  1139  0189  1303               	bcf	3,6	;RP1=0, select bank1
  1140  018A  00AD               	movwf	(_LCDConfig^(0+128)+13)
  1141                           
  1142                           ;lcd.c: 162: if((D0 == P_NC) || (D1 == P_NC) || (D2 == P_NC) || (D3 == P_NC))
  1143  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1144  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1145  018D  0A22               	incf	LCD_SetUp@D0,w
  1146  018E  1903               	btfsc	3,2
  1147  018F  2998               	goto	l2491
  1148  0190  0A23               	incf	LCD_SetUp@D1,w
  1149  0191  1903               	btfsc	3,2
  1150  0192  2998               	goto	l2491
  1151  0193  0A24               	incf	LCD_SetUp@D2,w
  1152  0194  1D03               	btfss	3,2
  1153  0195  0A25               	incf	LCD_SetUp@D3,w
  1154  0196  1D03               	btfss	3,2
  1155  0197  299F               	goto	l2493
  1156  0198                     l2491:	
  1157                           
  1158                           ;lcd.c: 163: {
  1159                           ;lcd.c: 164: LCDConfig.v_LcdMode_U8 = 4;
  1160  0198  3004               	movlw	4
  1161  0199  00F5               	movwf	??_LCD_SetUp
  1162  019A  0875               	movf	??_LCD_SetUp,w
  1163  019B  1683               	bsf	3,5	;RP0=1, select bank1
  1164  019C  1303               	bcf	3,6	;RP1=0, select bank1
  1165  019D  00A2               	movwf	(_LCDConfig^(0+128)+2)
  1166                           
  1167                           ;lcd.c: 165: }
  1168  019E  29C9               	goto	l2503
  1169  019F                     l2493:	
  1170                           
  1171                           ;lcd.c: 166: else
  1172                           ;lcd.c: 167: {
  1173                           ;lcd.c: 168: LCDConfig.v_LcdMode_U8 = 8;
  1174  019F  3008               	movlw	8
  1175  01A0  00F5               	movwf	??_LCD_SetUp
  1176  01A1  0875               	movf	??_LCD_SetUp,w
  1177  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  1178  01A3  1303               	bcf	3,6	;RP1=0, select bank1
  1179  01A4  00A2               	movwf	(_LCDConfig^(0+128)+2)
  1180                           
  1181                           ;lcd.c: 169: GPIO_PinDirection(D0,0x00u);
  1182  01A5  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1183  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1184  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1185  01A8  0822               	movf	LCD_SetUp@D0,w
  1186  01A9  120A  118A  22DE  120A  118A  	fcall	_GPIO_PinDirection
  1187                           
  1188                           ;lcd.c: 170: GPIO_PinDirection(D1,0x00u);
  1189  01AE  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1190  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1191  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1192  01B1  0823               	movf	LCD_SetUp@D1,w
  1193  01B2  120A  118A  22DE  120A  118A  	fcall	_GPIO_PinDirection
  1194                           
  1195                           ;lcd.c: 171: GPIO_PinDirection(D2,0x00u);
  1196  01B7  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1197  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1198  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1199  01BA  0824               	movf	LCD_SetUp@D2,w
  1200  01BB  120A  118A  22DE  120A  118A  	fcall	_GPIO_PinDirection
  1201                           
  1202                           ;lcd.c: 172: GPIO_PinDirection(D3,0x00u);
  1203  01C0  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1204  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1205  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1206  01C3  0825               	movf	LCD_SetUp@D3,w
  1207  01C4  120A  118A  22DE  120A  118A  	fcall	_GPIO_PinDirection
  1208  01C9                     l2503:	
  1209                           
  1210                           ;lcd.c: 173: }
  1211                           ;lcd.c: 176: GPIO_PinDirection(RS,0x00u);
  1212  01C9  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1213  01CA  0876               	movf	LCD_SetUp@RS,w
  1214  01CB  120A  118A  22DE  120A  118A  	fcall	_GPIO_PinDirection
  1215                           
  1216                           ;lcd.c: 177: GPIO_PinDirection(RW,0x00u);
  1217  01D0  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1218  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1219  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  1220  01D3  0820               	movf	LCD_SetUp@RW,w
  1221  01D4  120A  118A  22DE  120A  118A  	fcall	_GPIO_PinDirection
  1222                           
  1223                           ;lcd.c: 178: GPIO_PinDirection(EN,0x00u);
  1224  01D9  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1225  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1226  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1227  01DC  0821               	movf	LCD_SetUp@EN,w
  1228  01DD  120A  118A  22DE  120A  118A  	fcall	_GPIO_PinDirection
  1229                           
  1230                           ;lcd.c: 180: GPIO_PinDirection(D4,0x00u);
  1231  01E2  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1232  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1233  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1234  01E5  0826               	movf	LCD_SetUp@D4,w
  1235  01E6  120A  118A  22DE  120A  118A  	fcall	_GPIO_PinDirection
  1236                           
  1237                           ;lcd.c: 181: GPIO_PinDirection(D5,0x00u);
  1238  01EB  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1239  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1240  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1241  01EE  0827               	movf	LCD_SetUp@D5,w
  1242  01EF  120A  118A  22DE  120A  118A  	fcall	_GPIO_PinDirection
  1243                           
  1244                           ;lcd.c: 182: GPIO_PinDirection(D6,0x00u);
  1245  01F4  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1246  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1247  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1248  01F7  0828               	movf	LCD_SetUp@D6,w
  1249  01F8  120A  118A  22DE  120A  118A  	fcall	_GPIO_PinDirection
  1250                           
  1251                           ;lcd.c: 183: GPIO_PinDirection(D7,0x00u);
  1252  01FD  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  1253  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1254  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0200  0829               	movf	LCD_SetUp@D7,w
  1256  0201  120A  118A  22DE   	fcall	_GPIO_PinDirection
  1257  0204  0008               	return
  1258  0205                     __end_of_LCD_SetUp:	
  1259                           
  1260                           	psect	text2
  1261  05B2                     __ptext2:	
  1262 ;; *************** function _LCD_Printf *****************
  1263 ;; Defined at:
  1264 ;;		line 675 in file "../00-libfiles/lcd.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  argList         1    wreg     PTR const unsigned char 
  1267 ;;		 -> STR_1(13), 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  argList         1   49[BANK0 ] PTR const unsigned char 
  1270 ;;		 -> STR_1(13), 
  1271 ;;  v_num_u32       4   56[BANK0 ] unsigned long 
  1272 ;;  v_num_s32       4   50[BANK0 ] long 
  1273 ;;  v_floatNum_f    3   45[BANK0 ] long 
  1274 ;;  v_num_u16       2   60[BANK0 ] unsigned int 
  1275 ;;  v_num_s16       2   54[BANK0 ] int 
  1276 ;;  argp            1   65[BANK0 ] PTR void [1]
  1277 ;;		 -> ?_LCD_Printf(1), 
  1278 ;;  v_numOfDigit    1   64[BANK0 ] unsigned char 
  1279 ;;  ch              1   63[BANK0 ] unsigned char 
  1280 ;;  ptr             1   62[BANK0 ] PTR const unsigned char 
  1281 ;;		 -> STR_1(13), 
  1282 ;;  str             1   48[BANK0 ] PTR unsigned char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1292 ;;      Params:         0       0       0       0       0
  1293 ;;      Locals:         0      21       0       0       0
  1294 ;;      Temps:          0       2       0       0       0
  1295 ;;      Totals:         0      23       0       0       0
  1296 ;;Total ram usage:       23 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:    8
  1299 ;; This function calls:
  1300 ;;		_LCD_DisplayChar
  1301 ;;		_LCD_DisplayFloatNumber
  1302 ;;		_LCD_DisplayNumber
  1303 ;;		_LCD_DisplayString
  1304 ;;		___bmul
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           
  1311                           ;psect for function _LCD_Printf
  1312  05B2                     _LCD_Printf:	
  1313                           
  1314                           ;incstack = 0
  1315 ;; hardware stack exceeded
  1316                           ; Regs used in _LCD_Printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1317                           ;LCD_Printf@argList stored from wreg
  1318  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  1319  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  1320  05B4  00D1               	movwf	LCD_Printf@argList
  1321                           
  1322                           ;lcd.c: 677: const char *ptr;
  1323                           ;lcd.c: 678: va_list argp;
  1324                           ;lcd.c: 679: sint16_t v_num_s16;
  1325                           ;lcd.c: 680: sint32_t v_num_s32;
  1326                           ;lcd.c: 681: uint16_t v_num_u16;
  1327                           ;lcd.c: 682: uint32_t v_num_u32;
  1328                           ;lcd.c: 683: char *str;
  1329                           ;lcd.c: 684: char ch;
  1330                           ;lcd.c: 685: uint8_t v_numOfDigitsToDisp_u8;
  1331                           ;lcd.c: 687: double v_floatNum_f32;
  1332                           ;lcd.c: 690: *argp = __va_start();
  1333  05B5  3070               	movlw	(low (?_LCD_Printf| 0))& (0+255)
  1334  05B6  00CB               	movwf	??_LCD_Printf
  1335  05B7  084B               	movf	??_LCD_Printf,w
  1336  05B8  00E1               	movwf	LCD_Printf@argp
  1337                           
  1338                           ;lcd.c: 693: for(ptr = argList; *ptr != '\0'; ptr++)
  1339  05B9  0851               	movf	LCD_Printf@argList,w
  1340  05BA  00CB               	movwf	??_LCD_Printf
  1341  05BB  084B               	movf	??_LCD_Printf,w
  1342  05BC  00DE               	movwf	LCD_Printf@ptr
  1343  05BD                     l2653:	
  1344  05BD  085E               	movf	LCD_Printf@ptr,w
  1345  05BE  0084               	movwf	4
  1346  05BF  120A  158A  2000  120A  118A  	fcall	stringdir
  1347  05C4  3A00               	xorlw	0
  1348  05C5  1903               	btfsc	3,2
  1349  05C6  0008               	return
  1350                           
  1351                           ;lcd.c: 694: {
  1352                           ;lcd.c: 696: ch= *ptr;
  1353  05C7  085E               	movf	LCD_Printf@ptr,w
  1354  05C8  0084               	movwf	4
  1355  05C9  120A  158A  2000  120A  118A  	fcall	stringdir
  1356  05CE  00CB               	movwf	??_LCD_Printf
  1357  05CF  084B               	movf	??_LCD_Printf,w
  1358  05D0  00DF               	movwf	LCD_Printf@ch
  1359                           
  1360                           ;lcd.c: 697: if(ch == '%')
  1361  05D1  3025               	movlw	37
  1362  05D2  065F               	xorwf	LCD_Printf@ch,w
  1363  05D3  1D03               	btfss	3,2
  1364  05D4  2FCC               	goto	l2649
  1365                           
  1366                           ;lcd.c: 698: {
  1367                           ;lcd.c: 699: ptr++;
  1368  05D5  3001               	movlw	1
  1369  05D6  00CB               	movwf	??_LCD_Printf
  1370  05D7  084B               	movf	??_LCD_Printf,w
  1371  05D8  07DE               	addwf	LCD_Printf@ptr,f
  1372                           
  1373                           ;lcd.c: 700: ch = *ptr;
  1374  05D9  085E               	movf	LCD_Printf@ptr,w
  1375  05DA  0084               	movwf	4
  1376  05DB  120A  158A  2000  120A  118A  	fcall	stringdir
  1377  05E0  00CB               	movwf	??_LCD_Printf
  1378  05E1  084B               	movf	??_LCD_Printf,w
  1379  05E2  00DF               	movwf	LCD_Printf@ch
  1380                           
  1381                           ;lcd.c: 701: if((ch>=0x30) && (ch<=0x39))
  1382  05E3  3030               	movlw	48
  1383  05E4  025F               	subwf	LCD_Printf@ch,w
  1384  05E5  1C03               	skipc
  1385  05E6  2E14               	goto	l2557
  1386  05E7  303A               	movlw	58
  1387  05E8  025F               	subwf	LCD_Printf@ch,w
  1388  05E9  1803               	skipnc
  1389  05EA  2E14               	goto	l2557
  1390                           
  1391                           ;lcd.c: 702: {
  1392                           ;lcd.c: 703: v_numOfDigitsToDisp_u8 = 0;
  1393  05EB  01E0               	clrf	LCD_Printf@v_numOfDigitsToDisp_u8
  1394  05EC                     l2553:	
  1395                           ;lcd.c: 704: while((ch>=0x30) && (ch<=0x39))
  1396                           
  1397  05EC  3030               	movlw	48
  1398  05ED  025F               	subwf	LCD_Printf@ch,w
  1399  05EE  1C03               	skipc
  1400  05EF  2F9A               	goto	l2647
  1401  05F0  303A               	movlw	58
  1402  05F1  025F               	subwf	LCD_Printf@ch,w
  1403  05F2  1803               	btfsc	3,0
  1404  05F3  2F9A               	goto	l2647
  1405                           
  1406                           ;lcd.c: 705: {
  1407                           ;lcd.c: 706: v_numOfDigitsToDisp_u8 = (v_numOfDigitsToDisp_u8 * 10) + (ch-0x30);
  1408  05F4  300A               	movlw	10
  1409  05F5  00CB               	movwf	??_LCD_Printf
  1410  05F6  084B               	movf	??_LCD_Printf,w
  1411  05F7  00A0               	movwf	___bmul@multiplicand
  1412  05F8  0860               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1413  05F9  120A  158A  20A8  120A  118A  	fcall	___bmul
  1414  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  1415  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0600  075F               	addwf	LCD_Printf@ch,w
  1417  0601  3ED0               	addlw	208
  1418  0602  00CC               	movwf	??_LCD_Printf+1
  1419  0603  084C               	movf	??_LCD_Printf+1,w
  1420  0604  00E0               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  1421                           
  1422                           ;lcd.c: 707: ptr++;
  1423  0605  3001               	movlw	1
  1424  0606  00CB               	movwf	??_LCD_Printf
  1425  0607  084B               	movf	??_LCD_Printf,w
  1426  0608  07DE               	addwf	LCD_Printf@ptr,f
  1427                           
  1428                           ;lcd.c: 708: ch = *ptr;
  1429  0609  085E               	movf	LCD_Printf@ptr,w
  1430  060A  0084               	movwf	4
  1431  060B  120A  158A  2000  120A  118A  	fcall	stringdir
  1432  0610  00CB               	movwf	??_LCD_Printf
  1433  0611  084B               	movf	??_LCD_Printf,w
  1434  0612  00DF               	movwf	LCD_Printf@ch
  1435  0613  2DEC               	goto	l2553
  1436  0614                     l2557:	
  1437                           ;lcd.c: 709: }
  1438                           ;lcd.c: 710: }
  1439                           
  1440                           
  1441                           ;lcd.c: 711: else
  1442                           ;lcd.c: 712: {
  1443                           ;lcd.c: 713: v_numOfDigitsToDisp_u8 = 0xffu;
  1444  0614  30FF               	movlw	255
  1445  0615  00CB               	movwf	??_LCD_Printf
  1446  0616  084B               	movf	??_LCD_Printf,w
  1447  0617  00E0               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  1448                           
  1449                           ;lcd.c: 714: }
  1450                           ;lcd.c: 717: switch(ch)
  1451  0618  2F9A               	goto	l2647
  1452  0619                     l2559:	
  1453                           ;lcd.c: 718: {
  1454                           ;lcd.c: 719: case 'C':
  1455                           
  1456                           
  1457                           ;lcd.c: 720: case 'c':
  1458                           ;lcd.c: 721: ch = (*(int *)__va_arg((*(int **)argp), (int)0));
  1459  0619  0861               	movf	LCD_Printf@argp,w
  1460  061A  0084               	movwf	4
  1461  061B  0800               	movf	0,w
  1462  061C  00CB               	movwf	??_LCD_Printf
  1463  061D  084B               	movf	??_LCD_Printf,w
  1464  061E  00DF               	movwf	LCD_Printf@ch
  1465  061F  3002               	movlw	2
  1466  0620  00CB               	movwf	??_LCD_Printf
  1467  0621  084B               	movf	??_LCD_Printf,w
  1468  0622  07E1               	addwf	LCD_Printf@argp,f
  1469  0623  2FCC               	goto	l2649
  1470  0624                     l2565:	
  1471                           ;lcd.c: 725: case 'd':
  1472                           
  1473                           ;lcd.c: 723: break;
  1474                           
  1475                           ;lcd.c: 722: LCD_DisplayChar(ch);
  1476                           
  1477                           
  1478                           ;lcd.c: 726: v_num_s16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  1479  0624  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0625  1303               	bcf	3,6	;RP1=0, select bank0
  1481  0626  0861               	movf	LCD_Printf@argp,w
  1482  0627  0084               	movwf	4
  1483  0628  0800               	movf	0,w
  1484  0629  00D6               	movwf	LCD_Printf@v_num_s16
  1485  062A  0A84               	incf	4,f
  1486  062B  0800               	movf	0,w
  1487  062C  00D7               	movwf	LCD_Printf@v_num_s16+1
  1488  062D  3002               	movlw	2
  1489  062E  00CB               	movwf	??_LCD_Printf
  1490  062F  084B               	movf	??_LCD_Printf,w
  1491  0630  07E1               	addwf	LCD_Printf@argp,f
  1492                           
  1493                           ;lcd.c: 727: if(v_num_s16<0)
  1494  0631  1FD7               	btfss	LCD_Printf@v_num_s16+1,7
  1495  0632  2E3E               	goto	l2575
  1496                           
  1497                           ;lcd.c: 728: {
  1498                           ;lcd.c: 729: v_num_s16 = -v_num_s16;
  1499  0633  09D6               	comf	LCD_Printf@v_num_s16,f
  1500  0634  09D7               	comf	LCD_Printf@v_num_s16+1,f
  1501  0635  0AD6               	incf	LCD_Printf@v_num_s16,f
  1502  0636  1903               	skipnz
  1503  0637  0AD7               	incf	LCD_Printf@v_num_s16+1,f
  1504                           
  1505                           ;lcd.c: 730: LCD_DisplayChar('-');
  1506  0638  302D               	movlw	45
  1507  0639  120A  158A  2117  120A  118A  	fcall	_LCD_DisplayChar
  1508  063E                     l2575:	
  1509                           
  1510                           ;lcd.c: 731: }
  1511                           ;lcd.c: 732: LCD_DisplayNumber(10u,v_num_s16,v_numOfDigitsToDisp_u8);
  1512  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1513  063F  1303               	bcf	3,6	;RP1=0, select bank0
  1514  0640  0856               	movf	LCD_Printf@v_num_s16,w
  1515  0641  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1516  0642  0857               	movf	LCD_Printf@v_num_s16+1,w
  1517  0643  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1518  0644  3000               	movlw	0
  1519  0645  1BA5               	btfsc	LCD_DisplayNumber@v_number_u32+1,7
  1520  0646  30FF               	movlw	255
  1521  0647  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  1522  0648  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  1523  0649  0860               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1524  064A  00CB               	movwf	??_LCD_Printf
  1525  064B  084B               	movf	??_LCD_Printf,w
  1526  064C  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1527  064D  300A               	movlw	10
  1528  064E  120A  118A  23B7  120A  118A  	fcall	_LCD_DisplayNumber
  1529                           
  1530                           ;lcd.c: 733: break;
  1531  0653  2FD2               	goto	l2651
  1532  0654                     l2577:	
  1533                           ;lcd.c: 735: case 'D':
  1534                           
  1535                           
  1536                           ;lcd.c: 736: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
  1537  0654  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0655  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0656  0861               	movf	LCD_Printf@argp,w
  1540  0657  0084               	movwf	4
  1541  0658  0800               	movf	0,w
  1542  0659  00D2               	movwf	LCD_Printf@v_num_s32
  1543  065A  0A84               	incf	4,f
  1544  065B  0800               	movf	0,w
  1545  065C  00D3               	movwf	LCD_Printf@v_num_s32+1
  1546  065D  0A84               	incf	4,f
  1547  065E  0800               	movf	0,w
  1548  065F  00D4               	movwf	LCD_Printf@v_num_s32+2
  1549  0660  0A84               	incf	4,f
  1550  0661  0800               	movf	0,w
  1551  0662  00D5               	movwf	LCD_Printf@v_num_s32+3
  1552  0663  3004               	movlw	4
  1553  0664  00CB               	movwf	??_LCD_Printf
  1554  0665  084B               	movf	??_LCD_Printf,w
  1555  0666  07E1               	addwf	LCD_Printf@argp,f
  1556                           
  1557                           ;lcd.c: 737: if(v_num_s32<0)
  1558  0667  1FD5               	btfss	LCD_Printf@v_num_s32+3,7
  1559  0668  2E7A               	goto	l311
  1560                           
  1561                           ;lcd.c: 738: {
  1562                           ;lcd.c: 739: v_num_s32 = -v_num_s32;
  1563  0669  09D2               	comf	LCD_Printf@v_num_s32,f
  1564  066A  09D3               	comf	LCD_Printf@v_num_s32+1,f
  1565  066B  09D4               	comf	LCD_Printf@v_num_s32+2,f
  1566  066C  09D5               	comf	LCD_Printf@v_num_s32+3,f
  1567  066D  0AD2               	incf	LCD_Printf@v_num_s32,f
  1568  066E  1903               	skipnz
  1569  066F  0AD3               	incf	LCD_Printf@v_num_s32+1,f
  1570  0670  1903               	skipnz
  1571  0671  0AD4               	incf	LCD_Printf@v_num_s32+2,f
  1572  0672  1903               	skipnz
  1573  0673  0AD5               	incf	LCD_Printf@v_num_s32+3,f
  1574                           
  1575                           ;lcd.c: 740: LCD_DisplayChar('-');
  1576  0674  302D               	movlw	45
  1577  0675  120A  158A  2117  120A  118A  	fcall	_LCD_DisplayChar
  1578  067A                     l311:	
  1579                           
  1580                           ;lcd.c: 741: }
  1581                           ;lcd.c: 742: LCD_DisplayNumber(10u,v_num_s32,v_numOfDigitsToDisp_u8);
  1582  067A  1283               	bcf	3,5	;RP0=0, select bank0
  1583  067B  1303               	bcf	3,6	;RP1=0, select bank0
  1584  067C  0855               	movf	LCD_Printf@v_num_s32+3,w
  1585  067D  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  1586  067E  0854               	movf	LCD_Printf@v_num_s32+2,w
  1587  067F  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  1588  0680  0853               	movf	LCD_Printf@v_num_s32+1,w
  1589  0681  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1590  0682  0852               	movf	LCD_Printf@v_num_s32,w
  1591  0683  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1592  0684  0860               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1593  0685  00CB               	movwf	??_LCD_Printf
  1594  0686  084B               	movf	??_LCD_Printf,w
  1595  0687  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1596  0688  300A               	movlw	10
  1597  0689  120A  118A  23B7  120A  118A  	fcall	_LCD_DisplayNumber
  1598                           
  1599                           ;lcd.c: 743: break;
  1600  068E  2FD2               	goto	l2651
  1601  068F                     l2587:	
  1602                           ;lcd.c: 745: case 'u':
  1603                           
  1604                           
  1605                           ;lcd.c: 746: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  1606  068F  1283               	bcf	3,5	;RP0=0, select bank0
  1607  0690  1303               	bcf	3,6	;RP1=0, select bank0
  1608  0691  0861               	movf	LCD_Printf@argp,w
  1609  0692  0084               	movwf	4
  1610  0693  0800               	movf	0,w
  1611  0694  00DC               	movwf	LCD_Printf@v_num_u16
  1612  0695  0A84               	incf	4,f
  1613  0696  0800               	movf	0,w
  1614  0697  00DD               	movwf	LCD_Printf@v_num_u16+1
  1615  0698  3002               	movlw	2
  1616  0699  00CB               	movwf	??_LCD_Printf
  1617  069A  084B               	movf	??_LCD_Printf,w
  1618  069B  07E1               	addwf	LCD_Printf@argp,f
  1619                           
  1620                           ;lcd.c: 747: LCD_DisplayNumber(10u,v_num_u16,v_numOfDigitsToDisp_u8);
  1621  069C  085C               	movf	LCD_Printf@v_num_u16,w
  1622  069D  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1623  069E  085D               	movf	LCD_Printf@v_num_u16+1,w
  1624  069F  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1625  06A0  01A6               	clrf	LCD_DisplayNumber@v_number_u32+2
  1626  06A1  01A7               	clrf	LCD_DisplayNumber@v_number_u32+3
  1627  06A2  0860               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1628  06A3  00CB               	movwf	??_LCD_Printf
  1629  06A4  084B               	movf	??_LCD_Printf,w
  1630  06A5  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1631  06A6  300A               	movlw	10
  1632  06A7  120A  118A  23B7  120A  118A  	fcall	_LCD_DisplayNumber
  1633                           
  1634                           ;lcd.c: 748: break;
  1635  06AC  2FD2               	goto	l2651
  1636  06AD                     l2593:	
  1637                           ;lcd.c: 750: case 'U':
  1638                           
  1639                           
  1640                           ;lcd.c: 751: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1641  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1642  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1643  06AF  0861               	movf	LCD_Printf@argp,w
  1644  06B0  0084               	movwf	4
  1645  06B1  0800               	movf	0,w
  1646  06B2  00D8               	movwf	LCD_Printf@v_num_u32
  1647  06B3  0A84               	incf	4,f
  1648  06B4  0800               	movf	0,w
  1649  06B5  00D9               	movwf	LCD_Printf@v_num_u32+1
  1650  06B6  0A84               	incf	4,f
  1651  06B7  0800               	movf	0,w
  1652  06B8  00DA               	movwf	LCD_Printf@v_num_u32+2
  1653  06B9  0A84               	incf	4,f
  1654  06BA  0800               	movf	0,w
  1655  06BB  00DB               	movwf	LCD_Printf@v_num_u32+3
  1656  06BC  3004               	movlw	4
  1657  06BD  00CB               	movwf	??_LCD_Printf
  1658  06BE  084B               	movf	??_LCD_Printf,w
  1659  06BF  07E1               	addwf	LCD_Printf@argp,f
  1660                           
  1661                           ;lcd.c: 752: LCD_DisplayNumber(10u,v_num_u32,v_numOfDigitsToDisp_u8);
  1662  06C0  085B               	movf	LCD_Printf@v_num_u32+3,w
  1663  06C1  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  1664  06C2  085A               	movf	LCD_Printf@v_num_u32+2,w
  1665  06C3  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  1666  06C4  0859               	movf	LCD_Printf@v_num_u32+1,w
  1667  06C5  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1668  06C6  0858               	movf	LCD_Printf@v_num_u32,w
  1669  06C7  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1670  06C8  0860               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1671  06C9  00CB               	movwf	??_LCD_Printf
  1672  06CA  084B               	movf	??_LCD_Printf,w
  1673  06CB  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1674  06CC  300A               	movlw	10
  1675  06CD  120A  118A  23B7  120A  118A  	fcall	_LCD_DisplayNumber
  1676                           
  1677                           ;lcd.c: 753: break;
  1678  06D2  2FD2               	goto	l2651
  1679  06D3                     l2599:	
  1680                           ;lcd.c: 755: case 'x':
  1681                           
  1682                           
  1683                           ;lcd.c: 756: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  1684  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1685  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1686  06D5  0861               	movf	LCD_Printf@argp,w
  1687  06D6  0084               	movwf	4
  1688  06D7  0800               	movf	0,w
  1689  06D8  00DC               	movwf	LCD_Printf@v_num_u16
  1690  06D9  0A84               	incf	4,f
  1691  06DA  0800               	movf	0,w
  1692  06DB  00DD               	movwf	LCD_Printf@v_num_u16+1
  1693  06DC  3002               	movlw	2
  1694  06DD  00CB               	movwf	??_LCD_Printf
  1695  06DE  084B               	movf	??_LCD_Printf,w
  1696  06DF  07E1               	addwf	LCD_Printf@argp,f
  1697                           
  1698                           ;lcd.c: 757: LCD_DisplayNumber(16u,v_num_u16,v_numOfDigitsToDisp_u8);
  1699  06E0  085C               	movf	LCD_Printf@v_num_u16,w
  1700  06E1  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1701  06E2  085D               	movf	LCD_Printf@v_num_u16+1,w
  1702  06E3  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1703  06E4  01A6               	clrf	LCD_DisplayNumber@v_number_u32+2
  1704  06E5  01A7               	clrf	LCD_DisplayNumber@v_number_u32+3
  1705  06E6  0860               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1706  06E7  00CB               	movwf	??_LCD_Printf
  1707  06E8  084B               	movf	??_LCD_Printf,w
  1708  06E9  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1709  06EA  3010               	movlw	16
  1710  06EB  120A  118A  23B7  120A  118A  	fcall	_LCD_DisplayNumber
  1711                           
  1712                           ;lcd.c: 758: break;
  1713  06F0  2FD2               	goto	l2651
  1714  06F1                     l2605:	
  1715                           ;lcd.c: 760: case 'X':
  1716                           
  1717                           
  1718                           ;lcd.c: 761: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1719  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1720  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1721  06F3  0861               	movf	LCD_Printf@argp,w
  1722  06F4  0084               	movwf	4
  1723  06F5  0800               	movf	0,w
  1724  06F6  00D8               	movwf	LCD_Printf@v_num_u32
  1725  06F7  0A84               	incf	4,f
  1726  06F8  0800               	movf	0,w
  1727  06F9  00D9               	movwf	LCD_Printf@v_num_u32+1
  1728  06FA  0A84               	incf	4,f
  1729  06FB  0800               	movf	0,w
  1730  06FC  00DA               	movwf	LCD_Printf@v_num_u32+2
  1731  06FD  0A84               	incf	4,f
  1732  06FE  0800               	movf	0,w
  1733  06FF  00DB               	movwf	LCD_Printf@v_num_u32+3
  1734  0700  3004               	movlw	4
  1735  0701  00CB               	movwf	??_LCD_Printf
  1736  0702  084B               	movf	??_LCD_Printf,w
  1737  0703  07E1               	addwf	LCD_Printf@argp,f
  1738                           
  1739                           ;lcd.c: 762: LCD_DisplayNumber(16u,v_num_u32,v_numOfDigitsToDisp_u8);
  1740  0704  085B               	movf	LCD_Printf@v_num_u32+3,w
  1741  0705  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  1742  0706  085A               	movf	LCD_Printf@v_num_u32+2,w
  1743  0707  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  1744  0708  0859               	movf	LCD_Printf@v_num_u32+1,w
  1745  0709  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1746  070A  0858               	movf	LCD_Printf@v_num_u32,w
  1747  070B  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1748  070C  0860               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1749  070D  00CB               	movwf	??_LCD_Printf
  1750  070E  084B               	movf	??_LCD_Printf,w
  1751  070F  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1752  0710  3010               	movlw	16
  1753  0711  120A  118A  23B7  120A  118A  	fcall	_LCD_DisplayNumber
  1754                           
  1755                           ;lcd.c: 763: break;
  1756  0716  2FD2               	goto	l2651
  1757  0717                     l2611:	
  1758                           ;lcd.c: 766: case 'b':
  1759                           
  1760                           
  1761                           ;lcd.c: 767: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  1762  0717  1283               	bcf	3,5	;RP0=0, select bank0
  1763  0718  1303               	bcf	3,6	;RP1=0, select bank0
  1764  0719  0861               	movf	LCD_Printf@argp,w
  1765  071A  0084               	movwf	4
  1766  071B  0800               	movf	0,w
  1767  071C  00DC               	movwf	LCD_Printf@v_num_u16
  1768  071D  0A84               	incf	4,f
  1769  071E  0800               	movf	0,w
  1770  071F  00DD               	movwf	LCD_Printf@v_num_u16+1
  1771  0720  3002               	movlw	2
  1772  0721  00CB               	movwf	??_LCD_Printf
  1773  0722  084B               	movf	??_LCD_Printf,w
  1774  0723  07E1               	addwf	LCD_Printf@argp,f
  1775                           
  1776                           ;lcd.c: 768: if(v_numOfDigitsToDisp_u8 == 0xffu)
  1777  0724  0A60               	incf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1778  0725  1D03               	btfss	3,2
  1779  0726  2F2B               	goto	l2619
  1780                           
  1781                           ;lcd.c: 769: v_numOfDigitsToDisp_u8 = 16;
  1782  0727  3010               	movlw	16
  1783  0728  00CB               	movwf	??_LCD_Printf
  1784  0729  084B               	movf	??_LCD_Printf,w
  1785  072A  00E0               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  1786  072B                     l2619:	
  1787                           
  1788                           ;lcd.c: 770: LCD_DisplayNumber(2u,v_num_u16,v_numOfDigitsToDisp_u8);
  1789  072B  085C               	movf	LCD_Printf@v_num_u16,w
  1790  072C  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1791  072D  085D               	movf	LCD_Printf@v_num_u16+1,w
  1792  072E  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1793  072F  01A6               	clrf	LCD_DisplayNumber@v_number_u32+2
  1794  0730  01A7               	clrf	LCD_DisplayNumber@v_number_u32+3
  1795  0731  0860               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1796  0732  00CB               	movwf	??_LCD_Printf
  1797  0733  084B               	movf	??_LCD_Printf,w
  1798  0734  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1799  0735  3002               	movlw	2
  1800  0736  120A  118A  23B7  120A  118A  	fcall	_LCD_DisplayNumber
  1801                           
  1802                           ;lcd.c: 771: break;
  1803  073B  2FD2               	goto	l2651
  1804  073C                     l2621:	
  1805                           ;lcd.c: 773: case 'B':
  1806                           
  1807                           
  1808                           ;lcd.c: 774: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1809  073C  1283               	bcf	3,5	;RP0=0, select bank0
  1810  073D  1303               	bcf	3,6	;RP1=0, select bank0
  1811  073E  0861               	movf	LCD_Printf@argp,w
  1812  073F  0084               	movwf	4
  1813  0740  0800               	movf	0,w
  1814  0741  00D8               	movwf	LCD_Printf@v_num_u32
  1815  0742  0A84               	incf	4,f
  1816  0743  0800               	movf	0,w
  1817  0744  00D9               	movwf	LCD_Printf@v_num_u32+1
  1818  0745  0A84               	incf	4,f
  1819  0746  0800               	movf	0,w
  1820  0747  00DA               	movwf	LCD_Printf@v_num_u32+2
  1821  0748  0A84               	incf	4,f
  1822  0749  0800               	movf	0,w
  1823  074A  00DB               	movwf	LCD_Printf@v_num_u32+3
  1824  074B  3004               	movlw	4
  1825  074C  00CB               	movwf	??_LCD_Printf
  1826  074D  084B               	movf	??_LCD_Printf,w
  1827  074E  07E1               	addwf	LCD_Printf@argp,f
  1828                           
  1829                           ;lcd.c: 775: if(v_numOfDigitsToDisp_u8 == 0xffu)
  1830  074F  0A60               	incf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1831  0750  1D03               	btfss	3,2
  1832  0751  2F56               	goto	l2629
  1833                           
  1834                           ;lcd.c: 776: v_numOfDigitsToDisp_u8 = 16;
  1835  0752  3010               	movlw	16
  1836  0753  00CB               	movwf	??_LCD_Printf
  1837  0754  084B               	movf	??_LCD_Printf,w
  1838  0755  00E0               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8
  1839  0756                     l2629:	
  1840                           
  1841                           ;lcd.c: 777: LCD_DisplayNumber(2u,v_num_u32,v_numOfDigitsToDisp_u8);
  1842  0756  085B               	movf	LCD_Printf@v_num_u32+3,w
  1843  0757  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  1844  0758  085A               	movf	LCD_Printf@v_num_u32+2,w
  1845  0759  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  1846  075A  0859               	movf	LCD_Printf@v_num_u32+1,w
  1847  075B  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  1848  075C  0858               	movf	LCD_Printf@v_num_u32,w
  1849  075D  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  1850  075E  0860               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w
  1851  075F  00CB               	movwf	??_LCD_Printf
  1852  0760  084B               	movf	??_LCD_Printf,w
  1853  0761  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1854  0762  3002               	movlw	2
  1855  0763  120A  118A  23B7  120A  118A  	fcall	_LCD_DisplayNumber
  1856                           
  1857                           ;lcd.c: 778: break;
  1858  0768  2FD2               	goto	l2651
  1859  0769                     l2631:	
  1860                           ;lcd.c: 781: case 'F':
  1861                           
  1862                           
  1863                           ;lcd.c: 782: case 'f':
  1864                           ;lcd.c: 784: v_floatNum_f32 = (*(double *)__va_arg((*(double **)argp), (double)0));
  1865  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1866  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1867  076B  0861               	movf	LCD_Printf@argp,w
  1868  076C  0084               	movwf	4
  1869  076D  0800               	movf	0,w
  1870  076E  00CD               	movwf	LCD_Printf@v_floatNum_f32
  1871  076F  0A84               	incf	4,f
  1872  0770  0800               	movf	0,w
  1873  0771  00CE               	movwf	LCD_Printf@v_floatNum_f32+1
  1874  0772  0A84               	incf	4,f
  1875  0773  0800               	movf	0,w
  1876  0774  00CF               	movwf	LCD_Printf@v_floatNum_f32+2
  1877  0775  3003               	movlw	3
  1878  0776  00CB               	movwf	??_LCD_Printf
  1879  0777  084B               	movf	??_LCD_Printf,w
  1880  0778  07E1               	addwf	LCD_Printf@argp,f
  1881                           
  1882                           ;lcd.c: 785: LCD_DisplayFloatNumber(v_floatNum_f32);
  1883  0779  084D               	movf	LCD_Printf@v_floatNum_f32,w
  1884  077A  00C3               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32
  1885  077B  084E               	movf	LCD_Printf@v_floatNum_f32+1,w
  1886  077C  00C4               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+1
  1887  077D  084F               	movf	LCD_Printf@v_floatNum_f32+2,w
  1888  077E  00C5               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+2
  1889  077F  120A  158A  2761  120A  118A  	fcall	_LCD_DisplayFloatNumber
  1890                           
  1891                           ;lcd.c: 787: break;
  1892  0784  2FD2               	goto	l2651
  1893  0785                     l2637:	
  1894                           ;lcd.c: 790: case 'S':
  1895                           
  1896                           
  1897                           ;lcd.c: 791: case 's':
  1898                           ;lcd.c: 792: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  1899  0785  1283               	bcf	3,5	;RP0=0, select bank0
  1900  0786  1303               	bcf	3,6	;RP1=0, select bank0
  1901  0787  0861               	movf	LCD_Printf@argp,w
  1902  0788  0084               	movwf	4
  1903  0789  0800               	movf	0,w
  1904  078A  00CB               	movwf	??_LCD_Printf
  1905  078B  084B               	movf	??_LCD_Printf,w
  1906  078C  00D0               	movwf	LCD_Printf@str
  1907  078D  3001               	movlw	1
  1908  078E  00CB               	movwf	??_LCD_Printf
  1909  078F  084B               	movf	??_LCD_Printf,w
  1910  0790  07E1               	addwf	LCD_Printf@argp,f
  1911                           
  1912                           ;lcd.c: 793: LCD_DisplayString(str);
  1913  0791  0850               	movf	LCD_Printf@str,w
  1914  0792  120A  158A  20FE  120A  118A  	fcall	_LCD_DisplayString
  1915                           
  1916                           ;lcd.c: 794: break;
  1917  0797  2FD2               	goto	l2651
  1918  0798                     l2643:	
  1919                           ;lcd.c: 796: case '%':
  1920                           
  1921                           
  1922                           ;lcd.c: 797: LCD_DisplayChar('%');
  1923  0798  3025               	movlw	37
  1924  0799  2FCD               	goto	L1
  1925  079A                     l2647:	
  1926                           ;lcd.c: 799: }
  1927                           
  1928                           ;lcd.c: 798: break;
  1929                           
  1930  079A  1283               	bcf	3,5	;RP0=0, select bank0
  1931  079B  1303               	bcf	3,6	;RP1=0, select bank0
  1932  079C  085F               	movf	LCD_Printf@ch,w
  1933                           
  1934                           ; Switch size 1, requested type "space"
  1935                           ; Number of cases is 15, Range of values is 37 to 120
  1936                           ; switch strategies available:
  1937                           ; Name         Instructions Cycles
  1938                           ; simple_byte           46    24 (average)
  1939                           ; direct_byte          263    11 (fixed)
  1940                           ; jumptable            263     9 (fixed)
  1941                           ;	Chosen strategy is simple_byte
  1942  079D  3A25               	xorlw	37	; case 37
  1943  079E  1903               	skipnz
  1944  079F  2F98               	goto	l2643
  1945  07A0  3A67               	xorlw	103	; case 66
  1946  07A1  1903               	skipnz
  1947  07A2  2F3C               	goto	l2621
  1948  07A3  3A01               	xorlw	1	; case 67
  1949  07A4  1903               	skipnz
  1950  07A5  2E19               	goto	l2559
  1951  07A6  3A07               	xorlw	7	; case 68
  1952  07A7  1903               	skipnz
  1953  07A8  2E54               	goto	l2577
  1954  07A9  3A02               	xorlw	2	; case 70
  1955  07AA  1903               	skipnz
  1956  07AB  2F69               	goto	l2631
  1957  07AC  3A15               	xorlw	21	; case 83
  1958  07AD  1903               	skipnz
  1959  07AE  2F85               	goto	l2637
  1960  07AF  3A06               	xorlw	6	; case 85
  1961  07B0  1903               	skipnz
  1962  07B1  2EAD               	goto	l2593
  1963  07B2  3A0D               	xorlw	13	; case 88
  1964  07B3  1903               	skipnz
  1965  07B4  2EF1               	goto	l2605
  1966  07B5  3A3A               	xorlw	58	; case 98
  1967  07B6  1903               	skipnz
  1968  07B7  2F17               	goto	l2611
  1969  07B8  3A01               	xorlw	1	; case 99
  1970  07B9  1903               	skipnz
  1971  07BA  2E19               	goto	l2559
  1972  07BB  3A07               	xorlw	7	; case 100
  1973  07BC  1903               	skipnz
  1974  07BD  2E24               	goto	l2565
  1975  07BE  3A02               	xorlw	2	; case 102
  1976  07BF  1903               	skipnz
  1977  07C0  2F69               	goto	l2631
  1978  07C1  3A15               	xorlw	21	; case 115
  1979  07C2  1903               	skipnz
  1980  07C3  2F85               	goto	l2637
  1981  07C4  3A06               	xorlw	6	; case 117
  1982  07C5  1903               	skipnz
  1983  07C6  2E8F               	goto	l2587
  1984  07C7  3A0D               	xorlw	13	; case 120
  1985  07C8  1903               	skipnz
  1986  07C9  2ED3               	goto	l2599
  1987  07CA  2FD2               	goto	l2651
  1988                           
  1989                           ;lcd.c: 800: }
  1990  07CB  2FD2               	goto	l2651
  1991  07CC                     l2649:	
  1992                           
  1993                           ;lcd.c: 801: else
  1994                           ;lcd.c: 802: {
  1995                           ;lcd.c: 804: LCD_DisplayChar(ch);
  1996  07CC  085F               	movf	LCD_Printf@ch,w
  1997  07CD                     L1:	
  1998  07CD  120A  158A  2117  120A  118A  	fcall	_LCD_DisplayChar
  1999  07D2                     l2651:	
  2000  07D2  3001               	movlw	1
  2001  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  2002  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  2003  07D5  00CB               	movwf	??_LCD_Printf
  2004  07D6  084B               	movf	??_LCD_Printf,w
  2005  07D7  07DE               	addwf	LCD_Printf@ptr,f
  2006  07D8  2DBD               	goto	l2653
  2007  07D9                     __end_of_LCD_Printf:	
  2008                           
  2009                           	psect	text3
  2010  08FE                     __ptext3:	
  2011 ;; *************** function _LCD_DisplayString *****************
  2012 ;; Defined at:
  2013 ;;		line 427 in file "../00-libfiles/lcd.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  ptr_stringPo    1    wreg     PTR const unsigned char 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  ptr_stringPo    1    0[BANK0 ] PTR const unsigned char 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2027 ;;      Params:         0       0       0       0       0
  2028 ;;      Locals:         0       1       0       0       0
  2029 ;;      Temps:          1       0       0       0       0
  2030 ;;      Totals:         1       1       0       0       0
  2031 ;;Total ram usage:        2 bytes
  2032 ;; Hardware stack levels used:    1
  2033 ;; Hardware stack levels required when called:    6
  2034 ;; This function calls:
  2035 ;;		_LCD_DisplayChar
  2036 ;; This function is called by:
  2037 ;;		_LCD_Printf
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           
  2042                           ;psect for function _LCD_DisplayString
  2043  08FE                     _LCD_DisplayString:	
  2044                           
  2045                           ;incstack = 0
  2046                           ; Regs used in _LCD_DisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2047                           ;LCD_DisplayString@ptr_stringPointer_u8 stored from wreg
  2048  08FE  1283               	bcf	3,5	;RP0=0, select bank0
  2049  08FF  1303               	bcf	3,6	;RP1=0, select bank0
  2050  0900  00A0               	movwf	LCD_DisplayString@ptr_stringPointer_u8
  2051  0901                     l2389:	
  2052                           ;lcd.c: 429: while((*ptr_stringPointer_u8)!=0)
  2053                           
  2054  0901  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  2055  0902  0084               	movwf	4
  2056  0903  1383               	bcf	3,7	;select IRP bank0
  2057  0904  0800               	movf	0,w
  2058  0905  1903               	btfsc	3,2
  2059  0906  0008               	return
  2060                           
  2061                           ;lcd.c: 430: LCD_DisplayChar(*ptr_stringPointer_u8++);
  2062  0907  0820               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  2063  0908  0084               	movwf	4
  2064  0909  1383               	bcf	3,7	;select IRP bank0
  2065  090A  0800               	movf	0,w
  2066  090B  120A  158A  2117  120A  158A  	fcall	_LCD_DisplayChar
  2067  0910  3001               	movlw	1
  2068  0911  00FD               	movwf	??_LCD_DisplayString
  2069  0912  087D               	movf	??_LCD_DisplayString,w
  2070  0913  1283               	bcf	3,5	;RP0=0, select bank0
  2071  0914  1303               	bcf	3,6	;RP1=0, select bank0
  2072  0915  07A0               	addwf	LCD_DisplayString@ptr_stringPointer_u8,f
  2073  0916  2901               	goto	l2389
  2074  0917                     __end_of_LCD_DisplayString:	
  2075                           
  2076                           	psect	text4
  2077  0F61                     __ptext4:	
  2078 ;; *************** function _LCD_DisplayFloatNumber *****************
  2079 ;; Defined at:
  2080 ;;		line 615 in file "../00-libfiles/lcd.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  v_floatNum_f    3   35[BANK0 ] void 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  v_temp_u32      4   39[BANK0 ] unsigned long 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2094 ;;      Params:         0       3       0       0       0
  2095 ;;      Locals:         0       4       0       0       0
  2096 ;;      Temps:          0       1       0       0       0
  2097 ;;      Totals:         0       8       0       0       0
  2098 ;;Total ram usage:        8 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    7
  2101 ;; This function calls:
  2102 ;;		_LCD_DisplayChar
  2103 ;;		_LCD_DisplayNumber
  2104 ;;		___ftadd
  2105 ;;		___ftmul
  2106 ;;		___ftneg
  2107 ;;		___fttol
  2108 ;;		___lltoft
  2109 ;; This function is called by:
  2110 ;;		_LCD_Printf
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           
  2115                           ;psect for function _LCD_DisplayFloatNumber
  2116  0F61                     _LCD_DisplayFloatNumber:	
  2117                           
  2118                           ;lcd.c: 617: uint32_t v_temp_u32;
  2119                           ;lcd.c: 624: v_temp_u32 = (uint32_t) v_floatNum_f32;
  2120                           
  2121                           ;incstack = 0
  2122 ;; hardware stack exceeded
  2123                           ; Regs used in _LCD_DisplayFloatNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2124  0F61  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0F62  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0F63  0843               	movf	LCD_DisplayFloatNumber@v_floatNum_f32,w
  2127  0F64  00AA               	movwf	___fttol@f1
  2128  0F65  0844               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+1,w
  2129  0F66  00AB               	movwf	___fttol@f1+1
  2130  0F67  0845               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+2,w
  2131  0F68  00AC               	movwf	___fttol@f1+2
  2132  0F69  120A  158A  26D3  120A  158A  	fcall	___fttol
  2133  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  2134  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  2135  0F70  082D               	movf	?___fttol+3,w
  2136  0F71  00CA               	movwf	LCD_DisplayFloatNumber@v_temp_u32+3
  2137  0F72  082C               	movf	?___fttol+2,w
  2138  0F73  00C9               	movwf	LCD_DisplayFloatNumber@v_temp_u32+2
  2139  0F74  082B               	movf	?___fttol+1,w
  2140  0F75  00C8               	movwf	LCD_DisplayFloatNumber@v_temp_u32+1
  2141  0F76  082A               	movf	?___fttol,w
  2142  0F77  00C7               	movwf	LCD_DisplayFloatNumber@v_temp_u32
  2143                           
  2144                           ;lcd.c: 625: LCD_DisplayNumber(10u,v_temp_u32,0xffu);
  2145  0F78  084A               	movf	LCD_DisplayFloatNumber@v_temp_u32+3,w
  2146  0F79  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2147  0F7A  0849               	movf	LCD_DisplayFloatNumber@v_temp_u32+2,w
  2148  0F7B  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2149  0F7C  0848               	movf	LCD_DisplayFloatNumber@v_temp_u32+1,w
  2150  0F7D  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2151  0F7E  0847               	movf	LCD_DisplayFloatNumber@v_temp_u32,w
  2152  0F7F  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2153  0F80  30FF               	movlw	255
  2154  0F81  00C6               	movwf	??_LCD_DisplayFloatNumber
  2155  0F82  0846               	movf	??_LCD_DisplayFloatNumber,w
  2156  0F83  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2157  0F84  300A               	movlw	10
  2158  0F85  120A  118A  23B7  120A  158A  	fcall	_LCD_DisplayNumber
  2159                           
  2160                           ;lcd.c: 627: LCD_DisplayChar('.');
  2161  0F8A  302E               	movlw	46
  2162  0F8B  120A  158A  2117  120A  158A  	fcall	_LCD_DisplayChar
  2163                           
  2164                           ;lcd.c: 629: v_floatNum_f32 = v_floatNum_f32 - v_temp_u32;
  2165  0F90  1283               	bcf	3,5	;RP0=0, select bank0
  2166  0F91  1303               	bcf	3,6	;RP1=0, select bank0
  2167  0F92  0843               	movf	LCD_DisplayFloatNumber@v_floatNum_f32,w
  2168  0F93  00A3               	movwf	___ftadd@f1
  2169  0F94  0844               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+1,w
  2170  0F95  00A4               	movwf	___ftadd@f1+1
  2171  0F96  0845               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+2,w
  2172  0F97  00A5               	movwf	___ftadd@f1+2
  2173  0F98  084A               	movf	LCD_DisplayFloatNumber@v_temp_u32+3,w
  2174  0F99  00FB               	movwf	___lltoft@c+3
  2175  0F9A  0849               	movf	LCD_DisplayFloatNumber@v_temp_u32+2,w
  2176  0F9B  00FA               	movwf	___lltoft@c+2
  2177  0F9C  0848               	movf	LCD_DisplayFloatNumber@v_temp_u32+1,w
  2178  0F9D  00F9               	movwf	___lltoft@c+1
  2179  0F9E  0847               	movf	LCD_DisplayFloatNumber@v_temp_u32,w
  2180  0F9F  00F8               	movwf	___lltoft@c
  2181  0FA0  120A  158A  2138  120A  158A  	fcall	___lltoft
  2182  0FA5  0878               	movf	?___lltoft,w
  2183  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  2184  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  2185  0FA8  00A0               	movwf	___ftneg@f1
  2186  0FA9  0879               	movf	?___lltoft+1,w
  2187  0FAA  00A1               	movwf	___ftneg@f1+1
  2188  0FAB  087A               	movf	?___lltoft+2,w
  2189  0FAC  00A2               	movwf	___ftneg@f1+2
  2190  0FAD  120A  158A  2088  120A  158A  	fcall	___ftneg
  2191  0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  2192  0FB3  1303               	bcf	3,6	;RP1=0, select bank0
  2193  0FB4  0820               	movf	?___ftneg,w
  2194  0FB5  00A6               	movwf	___ftadd@f2
  2195  0FB6  0821               	movf	?___ftneg+1,w
  2196  0FB7  00A7               	movwf	___ftadd@f2+1
  2197  0FB8  0822               	movf	?___ftneg+2,w
  2198  0FB9  00A8               	movwf	___ftadd@f2+2
  2199  0FBA  120A  118A  24A9  120A  158A  	fcall	___ftadd
  2200  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  2201  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  2202  0FC1  0823               	movf	?___ftadd,w
  2203  0FC2  00C3               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32
  2204  0FC3  0824               	movf	?___ftadd+1,w
  2205  0FC4  00C4               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+1
  2206  0FC5  0825               	movf	?___ftadd+2,w
  2207  0FC6  00C5               	movwf	LCD_DisplayFloatNumber@v_floatNum_f32+2
  2208                           
  2209                           ;lcd.c: 630: v_temp_u32 = v_floatNum_f32 * 1000000;
  2210  0FC7  0843               	movf	LCD_DisplayFloatNumber@v_floatNum_f32,w
  2211  0FC8  00FB               	movwf	___ftmul@f2
  2212  0FC9  0844               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+1,w
  2213  0FCA  00FC               	movwf	___ftmul@f2+1
  2214  0FCB  0845               	movf	LCD_DisplayFloatNumber@v_floatNum_f32+2,w
  2215  0FCC  00FD               	movwf	___ftmul@f2+2
  2216  0FCD  3024               	movlw	36
  2217  0FCE  00F8               	movwf	___ftmul@f1
  2218  0FCF  3074               	movlw	116
  2219  0FD0  00F9               	movwf	___ftmul@f1+1
  2220  0FD1  3049               	movlw	73
  2221  0FD2  00FA               	movwf	___ftmul@f1+2
  2222  0FD3  120A  118A  2063  120A  158A  	fcall	___ftmul
  2223  0FD8  0878               	movf	?___ftmul,w
  2224  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0FDB  00AA               	movwf	___fttol@f1
  2227  0FDC  0879               	movf	?___ftmul+1,w
  2228  0FDD  00AB               	movwf	___fttol@f1+1
  2229  0FDE  087A               	movf	?___ftmul+2,w
  2230  0FDF  00AC               	movwf	___fttol@f1+2
  2231  0FE0  120A  158A  26D3  120A  158A  	fcall	___fttol
  2232  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  2233  0FE6  1303               	bcf	3,6	;RP1=0, select bank0
  2234  0FE7  082D               	movf	?___fttol+3,w
  2235  0FE8  00CA               	movwf	LCD_DisplayFloatNumber@v_temp_u32+3
  2236  0FE9  082C               	movf	?___fttol+2,w
  2237  0FEA  00C9               	movwf	LCD_DisplayFloatNumber@v_temp_u32+2
  2238  0FEB  082B               	movf	?___fttol+1,w
  2239  0FEC  00C8               	movwf	LCD_DisplayFloatNumber@v_temp_u32+1
  2240  0FED  082A               	movf	?___fttol,w
  2241  0FEE  00C7               	movwf	LCD_DisplayFloatNumber@v_temp_u32
  2242                           
  2243                           ;lcd.c: 631: LCD_DisplayNumber(10u,v_temp_u32,0xffu);
  2244  0FEF  084A               	movf	LCD_DisplayFloatNumber@v_temp_u32+3,w
  2245  0FF0  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  2246  0FF1  0849               	movf	LCD_DisplayFloatNumber@v_temp_u32+2,w
  2247  0FF2  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  2248  0FF3  0848               	movf	LCD_DisplayFloatNumber@v_temp_u32+1,w
  2249  0FF4  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  2250  0FF5  0847               	movf	LCD_DisplayFloatNumber@v_temp_u32,w
  2251  0FF6  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  2252  0FF7  30FF               	movlw	255
  2253  0FF8  00C6               	movwf	??_LCD_DisplayFloatNumber
  2254  0FF9  0846               	movf	??_LCD_DisplayFloatNumber,w
  2255  0FFA  00A8               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  2256  0FFB  300A               	movlw	10
  2257  0FFC  120A  118A  23B7   	fcall	_LCD_DisplayNumber
  2258  0FFF  0008               	return
  2259  1000                     __end_of_LCD_DisplayFloatNumber:	
  2260                           
  2261                           	psect	text5
  2262  0938                     __ptext5:	
  2263 ;; *************** function ___lltoft *****************
  2264 ;; Defined at:
  2265 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lltoft.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  c               4    8[COMMON] unsigned long 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  exp             1   13[COMMON] unsigned char 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  3    8[COMMON] float 
  2272 ;; Registers used:
  2273 ;;		wreg, status,2, status,0, pclath, cstack
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2279 ;;      Params:         4       0       0       0       0
  2280 ;;      Locals:         1       0       0       0       0
  2281 ;;      Temps:          1       0       0       0       0
  2282 ;;      Totals:         6       0       0       0       0
  2283 ;;Total ram usage:        6 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; Hardware stack levels required when called:    1
  2286 ;; This function calls:
  2287 ;;		___ftpack
  2288 ;; This function is called by:
  2289 ;;		_LCD_DisplayFloatNumber
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           
  2294                           ;psect for function ___lltoft
  2295  0938                     ___lltoft:	
  2296                           
  2297                           ;incstack = 0
  2298                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  2299  0938  308E               	movlw	142
  2300  0939  00FC               	movwf	??___lltoft
  2301  093A  087C               	movf	??___lltoft,w
  2302  093B  00FD               	movwf	___lltoft@exp
  2303  093C                     l2269:	
  2304  093C  30FF               	movlw	255
  2305  093D  057B               	andwf	___lltoft@c+3,w
  2306  093E  1903               	btfsc	3,2
  2307  093F  294E               	goto	l2271
  2308  0940  3001               	movlw	1
  2309  0941                     u3765:	
  2310  0941  1003               	clrc
  2311  0942  0CFB               	rrf	___lltoft@c+3,f
  2312  0943  0CFA               	rrf	___lltoft@c+2,f
  2313  0944  0CF9               	rrf	___lltoft@c+1,f
  2314  0945  0CF8               	rrf	___lltoft@c,f
  2315  0946  3EFF               	addlw	-1
  2316  0947  1D03               	skipz
  2317  0948  2941               	goto	u3765
  2318  0949  3001               	movlw	1
  2319  094A  00FC               	movwf	??___lltoft
  2320  094B  087C               	movf	??___lltoft,w
  2321  094C  07FD               	addwf	___lltoft@exp,f
  2322  094D  293C               	goto	l2269
  2323  094E                     l2271:	
  2324  094E  0878               	movf	___lltoft@c,w
  2325  094F  00F0               	movwf	___ftpack@arg
  2326  0950  0879               	movf	___lltoft@c+1,w
  2327  0951  00F1               	movwf	___ftpack@arg+1
  2328  0952  087A               	movf	___lltoft@c+2,w
  2329  0953  00F2               	movwf	___ftpack@arg+2
  2330  0954  087D               	movf	___lltoft@exp,w
  2331  0955  00FC               	movwf	??___lltoft
  2332  0956  087C               	movf	??___lltoft,w
  2333  0957  00F3               	movwf	___ftpack@exp
  2334  0958  01F4               	clrf	___ftpack@sign
  2335  0959  120A  158A  245F   	fcall	___ftpack
  2336  095C  0870               	movf	?___ftpack,w
  2337  095D  00F8               	movwf	?___lltoft
  2338  095E  0871               	movf	?___ftpack+1,w
  2339  095F  00F9               	movwf	?___lltoft+1
  2340  0960  0872               	movf	?___ftpack+2,w
  2341  0961  00FA               	movwf	?___lltoft+2
  2342  0962  0008               	return
  2343  0963                     __end_of___lltoft:	
  2344                           
  2345                           	psect	text6
  2346  0ED3                     __ptext6:	
  2347 ;; *************** function ___fttol *****************
  2348 ;; Defined at:
  2349 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\fttol.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  f1              3   10[BANK0 ] float 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  lval            4   19[BANK0 ] unsigned long 
  2354 ;;  exp1            1   23[BANK0 ] unsigned char 
  2355 ;;  sign1           1   18[BANK0 ] unsigned char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  4   10[BANK0 ] long 
  2358 ;; Registers used:
  2359 ;;		wreg, status,2, status,0
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2365 ;;      Params:         0       4       0       0       0
  2366 ;;      Locals:         0       6       0       0       0
  2367 ;;      Temps:          0       4       0       0       0
  2368 ;;      Totals:         0      14       0       0       0
  2369 ;;Total ram usage:       14 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_LCD_DisplayFloatNumber
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function ___fttol
  2380  0ED3                     ___fttol:	
  2381                           
  2382                           ;incstack = 0
  2383                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2384  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  2385  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  2386  0ED5  082A               	movf	___fttol@f1,w
  2387  0ED6  00AE               	movwf	??___fttol
  2388  0ED7  082B               	movf	___fttol@f1+1,w
  2389  0ED8  00AF               	movwf	??___fttol+1
  2390  0ED9  082C               	movf	___fttol@f1+2,w
  2391  0EDA  00B0               	movwf	??___fttol+2
  2392  0EDB  1003               	clrc
  2393  0EDC  0D2F               	rlf	??___fttol+1,w
  2394  0EDD  0D30               	rlf	??___fttol+2,w
  2395  0EDE  00B1               	movwf	??___fttol+3
  2396  0EDF  0831               	movf	??___fttol+3,w
  2397  0EE0  00B7               	movwf	___fttol@exp1
  2398  0EE1  0837               	movf	___fttol@exp1,w
  2399  0EE2  1D03               	btfss	3,2
  2400  0EE3  2EED               	goto	l2229
  2401  0EE4  3000               	movlw	0
  2402  0EE5  00AD               	movwf	?___fttol+3
  2403  0EE6  3000               	movlw	0
  2404  0EE7  00AC               	movwf	?___fttol+2
  2405  0EE8  3000               	movlw	0
  2406  0EE9  00AB               	movwf	?___fttol+1
  2407  0EEA  3000               	movlw	0
  2408  0EEB  00AA               	movwf	?___fttol
  2409  0EEC  0008               	return
  2410  0EED                     l2229:	
  2411  0EED  082A               	movf	___fttol@f1,w
  2412  0EEE  00AE               	movwf	??___fttol
  2413  0EEF  082B               	movf	___fttol@f1+1,w
  2414  0EF0  00AF               	movwf	??___fttol+1
  2415  0EF1  082C               	movf	___fttol@f1+2,w
  2416  0EF2  00B0               	movwf	??___fttol+2
  2417  0EF3  3017               	movlw	23
  2418  0EF4                     u3675:	
  2419  0EF4  1003               	clrc
  2420  0EF5  0CB0               	rrf	??___fttol+2,f
  2421  0EF6  0CAF               	rrf	??___fttol+1,f
  2422  0EF7  0CAE               	rrf	??___fttol,f
  2423  0EF8  3EFF               	addlw	-1
  2424  0EF9  1D03               	skipz
  2425  0EFA  2EF4               	goto	u3675
  2426  0EFB  082E               	movf	??___fttol,w
  2427  0EFC  00B1               	movwf	??___fttol+3
  2428  0EFD  0831               	movf	??___fttol+3,w
  2429  0EFE  00B2               	movwf	___fttol@sign1
  2430  0EFF  17AB               	bsf	___fttol@f1+1,7
  2431  0F00  30FF               	movlw	255
  2432  0F01  05AA               	andwf	___fttol@f1,f
  2433  0F02  30FF               	movlw	255
  2434  0F03  05AB               	andwf	___fttol@f1+1,f
  2435  0F04  3000               	movlw	0
  2436  0F05  05AC               	andwf	___fttol@f1+2,f
  2437  0F06  082A               	movf	___fttol@f1,w
  2438  0F07  00B3               	movwf	___fttol@lval
  2439  0F08  082B               	movf	___fttol@f1+1,w
  2440  0F09  00B4               	movwf	___fttol@lval+1
  2441  0F0A  082C               	movf	___fttol@f1+2,w
  2442  0F0B  00B5               	movwf	___fttol@lval+2
  2443  0F0C  01B6               	clrf	___fttol@lval+3
  2444  0F0D  308E               	movlw	142
  2445  0F0E  02B7               	subwf	___fttol@exp1,f
  2446  0F0F  1FB7               	btfss	___fttol@exp1,7
  2447  0F10  2F2F               	goto	l2249
  2448  0F11  0837               	movf	___fttol@exp1,w
  2449  0F12  3A80               	xorlw	128
  2450  0F13  3E8F               	addlw	143
  2451  0F14  1803               	skipnc
  2452  0F15  2F1F               	goto	l2247
  2453  0F16  3000               	movlw	0
  2454  0F17  00AD               	movwf	?___fttol+3
  2455  0F18  3000               	movlw	0
  2456  0F19  00AC               	movwf	?___fttol+2
  2457  0F1A  3000               	movlw	0
  2458  0F1B  00AB               	movwf	?___fttol+1
  2459  0F1C  3000               	movlw	0
  2460  0F1D  00AA               	movwf	?___fttol
  2461  0F1E  0008               	return
  2462  0F1F                     l2247:	
  2463  0F1F  3001               	movlw	1
  2464  0F20                     u3705:	
  2465  0F20  1003               	clrc
  2466  0F21  0CB6               	rrf	___fttol@lval+3,f
  2467  0F22  0CB5               	rrf	___fttol@lval+2,f
  2468  0F23  0CB4               	rrf	___fttol@lval+1,f
  2469  0F24  0CB3               	rrf	___fttol@lval,f
  2470  0F25  3EFF               	addlw	-1
  2471  0F26  1D03               	skipz
  2472  0F27  2F20               	goto	u3705
  2473  0F28  3001               	movlw	1
  2474  0F29  00AE               	movwf	??___fttol
  2475  0F2A  082E               	movf	??___fttol,w
  2476  0F2B  07B7               	addwf	___fttol@exp1,f
  2477  0F2C  1903               	btfsc	3,2
  2478  0F2D  2F4A               	goto	l2257
  2479  0F2E  2F1F               	goto	l2247
  2480  0F2F                     l2249:	
  2481  0F2F  3018               	movlw	24
  2482  0F30  0237               	subwf	___fttol@exp1,w
  2483  0F31  1C03               	skipc
  2484  0F32  2F47               	goto	l711
  2485  0F33  3000               	movlw	0
  2486  0F34  00AD               	movwf	?___fttol+3
  2487  0F35  3000               	movlw	0
  2488  0F36  00AC               	movwf	?___fttol+2
  2489  0F37  3000               	movlw	0
  2490  0F38  00AB               	movwf	?___fttol+1
  2491  0F39  3000               	movlw	0
  2492  0F3A  00AA               	movwf	?___fttol
  2493  0F3B  0008               	return
  2494  0F3C                     l2255:	
  2495  0F3C  3001               	movlw	1
  2496  0F3D  00AE               	movwf	??___fttol
  2497  0F3E                     u3735:	
  2498  0F3E  1003               	clrc
  2499  0F3F  0DB3               	rlf	___fttol@lval,f
  2500  0F40  0DB4               	rlf	___fttol@lval+1,f
  2501  0F41  0DB5               	rlf	___fttol@lval+2,f
  2502  0F42  0DB6               	rlf	___fttol@lval+3,f
  2503  0F43  0BAE               	decfsz	??___fttol,f
  2504  0F44  2F3E               	goto	u3735
  2505  0F45  3001               	movlw	1
  2506  0F46  02B7               	subwf	___fttol@exp1,f
  2507  0F47                     l711:	
  2508  0F47  0837               	movf	___fttol@exp1,w
  2509  0F48  1D03               	btfss	3,2
  2510  0F49  2F3C               	goto	l2255
  2511  0F4A                     l2257:	
  2512  0F4A  0832               	movf	___fttol@sign1,w
  2513  0F4B  1903               	btfsc	3,2
  2514  0F4C  2F58               	goto	l2261
  2515  0F4D  09B3               	comf	___fttol@lval,f
  2516  0F4E  09B4               	comf	___fttol@lval+1,f
  2517  0F4F  09B5               	comf	___fttol@lval+2,f
  2518  0F50  09B6               	comf	___fttol@lval+3,f
  2519  0F51  0AB3               	incf	___fttol@lval,f
  2520  0F52  1903               	skipnz
  2521  0F53  0AB4               	incf	___fttol@lval+1,f
  2522  0F54  1903               	skipnz
  2523  0F55  0AB5               	incf	___fttol@lval+2,f
  2524  0F56  1903               	skipnz
  2525  0F57  0AB6               	incf	___fttol@lval+3,f
  2526  0F58                     l2261:	
  2527  0F58  0836               	movf	___fttol@lval+3,w
  2528  0F59  00AD               	movwf	?___fttol+3
  2529  0F5A  0835               	movf	___fttol@lval+2,w
  2530  0F5B  00AC               	movwf	?___fttol+2
  2531  0F5C  0834               	movf	___fttol@lval+1,w
  2532  0F5D  00AB               	movwf	?___fttol+1
  2533  0F5E  0833               	movf	___fttol@lval,w
  2534  0F5F  00AA               	movwf	?___fttol
  2535  0F60  0008               	return
  2536  0F61                     __end_of___fttol:	
  2537                           
  2538                           	psect	text7
  2539  0888                     __ptext7:	
  2540 ;; *************** function ___ftneg *****************
  2541 ;; Defined at:
  2542 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftneg.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  f1              3    0[BANK0 ] float 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;		None
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  3    0[BANK0 ] float 
  2549 ;; Registers used:
  2550 ;;		wreg
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2556 ;;      Params:         0       3       0       0       0
  2557 ;;      Locals:         0       0       0       0       0
  2558 ;;      Temps:          0       0       0       0       0
  2559 ;;      Totals:         0       3       0       0       0
  2560 ;;Total ram usage:        3 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_LCD_DisplayFloatNumber
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function ___ftneg
  2571  0888                     ___ftneg:	
  2572                           
  2573                           ;incstack = 0
  2574                           ; Regs used in ___ftneg: [wreg]
  2575  0888  1283               	bcf	3,5	;RP0=0, select bank0
  2576  0889  1303               	bcf	3,6	;RP1=0, select bank0
  2577  088A  0822               	movf	___ftneg@f1+2,w
  2578  088B  0421               	iorwf	___ftneg@f1+1,w
  2579  088C  0420               	iorwf	___ftneg@f1,w
  2580  088D  1903               	skipnz
  2581  088E  0008               	return
  2582  088F  3080               	movlw	128
  2583  0890  06A2               	xorwf	___ftneg@f1+2,f
  2584  0891  0008               	return
  2585  0892                     __end_of___ftneg:	
  2586                           
  2587                           	psect	text8
  2588  0063                     __ptext8:	
  2589 ;; *************** function ___ftmul *****************
  2590 ;; Defined at:
  2591 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftmul.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  f1              3    8[COMMON] float 
  2594 ;;  f2              3   11[COMMON] float 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  2597 ;;  sign            1    9[BANK0 ] unsigned char 
  2598 ;;  cntr            1    8[BANK0 ] unsigned char 
  2599 ;;  exp             1    4[BANK0 ] unsigned char 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  3    8[COMMON] float 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0, pclath, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2609 ;;      Params:         6       0       0       0       0
  2610 ;;      Locals:         0       6       0       0       0
  2611 ;;      Temps:          0       4       0       0       0
  2612 ;;      Totals:         6      10       0       0       0
  2613 ;;Total ram usage:       16 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    1
  2616 ;; This function calls:
  2617 ;;		___ftpack
  2618 ;; This function is called by:
  2619 ;;		_LCD_DisplayFloatNumber
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           
  2624                           ;psect for function ___ftmul
  2625  0063                     ___ftmul:	
  2626                           
  2627                           ;incstack = 0
  2628                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2629  0063  0878               	movf	___ftmul@f1,w
  2630  0064  1283               	bcf	3,5	;RP0=0, select bank0
  2631  0065  1303               	bcf	3,6	;RP1=0, select bank0
  2632  0066  00A0               	movwf	??___ftmul
  2633  0067  0879               	movf	___ftmul@f1+1,w
  2634  0068  00A1               	movwf	??___ftmul+1
  2635  0069  087A               	movf	___ftmul@f1+2,w
  2636  006A  00A2               	movwf	??___ftmul+2
  2637  006B  1003               	clrc
  2638  006C  0D21               	rlf	??___ftmul+1,w
  2639  006D  0D22               	rlf	??___ftmul+2,w
  2640  006E  00A3               	movwf	??___ftmul+3
  2641  006F  0823               	movf	??___ftmul+3,w
  2642  0070  00A4               	movwf	___ftmul@exp
  2643  0071  0824               	movf	___ftmul@exp,w
  2644  0072  1D03               	btfss	3,2
  2645  0073  287B               	goto	l2171
  2646  0074  3000               	movlw	0
  2647  0075  00F8               	movwf	?___ftmul
  2648  0076  3000               	movlw	0
  2649  0077  00F9               	movwf	?___ftmul+1
  2650  0078  3000               	movlw	0
  2651  0079  00FA               	movwf	?___ftmul+2
  2652  007A  0008               	return
  2653  007B                     l2171:	
  2654  007B  087B               	movf	___ftmul@f2,w
  2655  007C  00A0               	movwf	??___ftmul
  2656  007D  087C               	movf	___ftmul@f2+1,w
  2657  007E  00A1               	movwf	??___ftmul+1
  2658  007F  087D               	movf	___ftmul@f2+2,w
  2659  0080  00A2               	movwf	??___ftmul+2
  2660  0081  1003               	clrc
  2661  0082  0D21               	rlf	??___ftmul+1,w
  2662  0083  0D22               	rlf	??___ftmul+2,w
  2663  0084  00A3               	movwf	??___ftmul+3
  2664  0085  0823               	movf	??___ftmul+3,w
  2665  0086  00A9               	movwf	___ftmul@sign
  2666  0087  0829               	movf	___ftmul@sign,w
  2667  0088  1D03               	btfss	3,2
  2668  0089  2891               	goto	l2177
  2669  008A  3000               	movlw	0
  2670  008B  00F8               	movwf	?___ftmul
  2671  008C  3000               	movlw	0
  2672  008D  00F9               	movwf	?___ftmul+1
  2673  008E  3000               	movlw	0
  2674  008F  00FA               	movwf	?___ftmul+2
  2675  0090  0008               	return
  2676  0091                     l2177:	
  2677  0091  0829               	movf	___ftmul@sign,w
  2678  0092  3E7B               	addlw	123
  2679  0093  00A0               	movwf	??___ftmul
  2680  0094  0820               	movf	??___ftmul,w
  2681  0095  07A4               	addwf	___ftmul@exp,f
  2682  0096  0878               	movf	___ftmul@f1,w
  2683  0097  00A0               	movwf	??___ftmul
  2684  0098  0879               	movf	___ftmul@f1+1,w
  2685  0099  00A1               	movwf	??___ftmul+1
  2686  009A  087A               	movf	___ftmul@f1+2,w
  2687  009B  00A2               	movwf	??___ftmul+2
  2688  009C  3010               	movlw	16
  2689  009D                     u3535:	
  2690  009D  1003               	clrc
  2691  009E  0CA2               	rrf	??___ftmul+2,f
  2692  009F  0CA1               	rrf	??___ftmul+1,f
  2693  00A0  0CA0               	rrf	??___ftmul,f
  2694  00A1  3EFF               	addlw	-1
  2695  00A2  1D03               	skipz
  2696  00A3  289D               	goto	u3535
  2697  00A4  0820               	movf	??___ftmul,w
  2698  00A5  00A3               	movwf	??___ftmul+3
  2699  00A6  0823               	movf	??___ftmul+3,w
  2700  00A7  00A9               	movwf	___ftmul@sign
  2701  00A8  087B               	movf	___ftmul@f2,w
  2702  00A9  00A0               	movwf	??___ftmul
  2703  00AA  087C               	movf	___ftmul@f2+1,w
  2704  00AB  00A1               	movwf	??___ftmul+1
  2705  00AC  087D               	movf	___ftmul@f2+2,w
  2706  00AD  00A2               	movwf	??___ftmul+2
  2707  00AE  3010               	movlw	16
  2708  00AF                     u3545:	
  2709  00AF  1003               	clrc
  2710  00B0  0CA2               	rrf	??___ftmul+2,f
  2711  00B1  0CA1               	rrf	??___ftmul+1,f
  2712  00B2  0CA0               	rrf	??___ftmul,f
  2713  00B3  3EFF               	addlw	-1
  2714  00B4  1D03               	skipz
  2715  00B5  28AF               	goto	u3545
  2716  00B6  0820               	movf	??___ftmul,w
  2717  00B7  00A3               	movwf	??___ftmul+3
  2718  00B8  0823               	movf	??___ftmul+3,w
  2719  00B9  06A9               	xorwf	___ftmul@sign,f
  2720  00BA  3080               	movlw	128
  2721  00BB  00A0               	movwf	??___ftmul
  2722  00BC  0820               	movf	??___ftmul,w
  2723  00BD  05A9               	andwf	___ftmul@sign,f
  2724  00BE  17F9               	bsf	___ftmul@f1+1,7
  2725  00BF  17FC               	bsf	___ftmul@f2+1,7
  2726  00C0  30FF               	movlw	255
  2727  00C1  05FB               	andwf	___ftmul@f2,f
  2728  00C2  30FF               	movlw	255
  2729  00C3  05FC               	andwf	___ftmul@f2+1,f
  2730  00C4  3000               	movlw	0
  2731  00C5  05FD               	andwf	___ftmul@f2+2,f
  2732  00C6  3000               	movlw	0
  2733  00C7  00A5               	movwf	___ftmul@f3_as_product
  2734  00C8  3000               	movlw	0
  2735  00C9  00A6               	movwf	___ftmul@f3_as_product+1
  2736  00CA  3000               	movlw	0
  2737  00CB  00A7               	movwf	___ftmul@f3_as_product+2
  2738  00CC  3007               	movlw	7
  2739  00CD  00A0               	movwf	??___ftmul
  2740  00CE  0820               	movf	??___ftmul,w
  2741  00CF  00A8               	movwf	___ftmul@cntr
  2742  00D0                     l2189:	
  2743  00D0  1C78               	btfss	___ftmul@f1,0
  2744  00D1  28E0               	goto	l2193
  2745  00D2  087B               	movf	___ftmul@f2,w
  2746  00D3  07A5               	addwf	___ftmul@f3_as_product,f
  2747  00D4  087C               	movf	___ftmul@f2+1,w
  2748  00D5  1103               	clrz
  2749  00D6  1803               	skipnc
  2750  00D7  0A7C               	incf	___ftmul@f2+1,w
  2751  00D8  1D03               	btfss	3,2
  2752  00D9  07A6               	addwf	___ftmul@f3_as_product+1,f
  2753  00DA  087D               	movf	___ftmul@f2+2,w
  2754  00DB  1103               	clrz
  2755  00DC  1803               	skipnc
  2756  00DD  0A7D               	incf	___ftmul@f2+2,w
  2757  00DE  1D03               	btfss	3,2
  2758  00DF  07A7               	addwf	___ftmul@f3_as_product+2,f
  2759  00E0                     l2193:	
  2760  00E0  3001               	movlw	1
  2761  00E1                     u3575:	
  2762  00E1  1003               	clrc
  2763  00E2  0CFA               	rrf	___ftmul@f1+2,f
  2764  00E3  0CF9               	rrf	___ftmul@f1+1,f
  2765  00E4  0CF8               	rrf	___ftmul@f1,f
  2766  00E5  3EFF               	addlw	-1
  2767  00E6  1D03               	skipz
  2768  00E7  28E1               	goto	u3575
  2769  00E8  3001               	movlw	1
  2770  00E9                     u3585:	
  2771  00E9  1003               	clrc
  2772  00EA  0DFB               	rlf	___ftmul@f2,f
  2773  00EB  0DFC               	rlf	___ftmul@f2+1,f
  2774  00EC  0DFD               	rlf	___ftmul@f2+2,f
  2775  00ED  3EFF               	addlw	-1
  2776  00EE  1D03               	skipz
  2777  00EF  28E9               	goto	u3585
  2778  00F0  3001               	movlw	1
  2779  00F1  02A8               	subwf	___ftmul@cntr,f
  2780  00F2  1D03               	btfss	3,2
  2781  00F3  28D0               	goto	l2189
  2782  00F4  3009               	movlw	9
  2783  00F5  00A0               	movwf	??___ftmul
  2784  00F6  0820               	movf	??___ftmul,w
  2785  00F7  00A8               	movwf	___ftmul@cntr
  2786  00F8                     l2201:	
  2787  00F8  1C78               	btfss	___ftmul@f1,0
  2788  00F9  2908               	goto	l2205
  2789  00FA  087B               	movf	___ftmul@f2,w
  2790  00FB  07A5               	addwf	___ftmul@f3_as_product,f
  2791  00FC  087C               	movf	___ftmul@f2+1,w
  2792  00FD  1103               	clrz
  2793  00FE  1803               	skipnc
  2794  00FF  0A7C               	incf	___ftmul@f2+1,w
  2795  0100  1D03               	btfss	3,2
  2796  0101  07A6               	addwf	___ftmul@f3_as_product+1,f
  2797  0102  087D               	movf	___ftmul@f2+2,w
  2798  0103  1103               	clrz
  2799  0104  1803               	skipnc
  2800  0105  0A7D               	incf	___ftmul@f2+2,w
  2801  0106  1D03               	btfss	3,2
  2802  0107  07A7               	addwf	___ftmul@f3_as_product+2,f
  2803  0108                     l2205:	
  2804  0108  3001               	movlw	1
  2805  0109                     u3625:	
  2806  0109  1003               	clrc
  2807  010A  0CFA               	rrf	___ftmul@f1+2,f
  2808  010B  0CF9               	rrf	___ftmul@f1+1,f
  2809  010C  0CF8               	rrf	___ftmul@f1,f
  2810  010D  3EFF               	addlw	-1
  2811  010E  1D03               	skipz
  2812  010F  2909               	goto	u3625
  2813  0110  3001               	movlw	1
  2814  0111                     u3635:	
  2815  0111  1003               	clrc
  2816  0112  0CA7               	rrf	___ftmul@f3_as_product+2,f
  2817  0113  0CA6               	rrf	___ftmul@f3_as_product+1,f
  2818  0114  0CA5               	rrf	___ftmul@f3_as_product,f
  2819  0115  3EFF               	addlw	-1
  2820  0116  1D03               	skipz
  2821  0117  2911               	goto	u3635
  2822  0118  3001               	movlw	1
  2823  0119  02A8               	subwf	___ftmul@cntr,f
  2824  011A  1D03               	btfss	3,2
  2825  011B  28F8               	goto	l2201
  2826  011C  0825               	movf	___ftmul@f3_as_product,w
  2827  011D  00F0               	movwf	___ftpack@arg
  2828  011E  0826               	movf	___ftmul@f3_as_product+1,w
  2829  011F  00F1               	movwf	___ftpack@arg+1
  2830  0120  0827               	movf	___ftmul@f3_as_product+2,w
  2831  0121  00F2               	movwf	___ftpack@arg+2
  2832  0122  0824               	movf	___ftmul@exp,w
  2833  0123  00A0               	movwf	??___ftmul
  2834  0124  0820               	movf	??___ftmul,w
  2835  0125  00F3               	movwf	___ftpack@exp
  2836  0126  0829               	movf	___ftmul@sign,w
  2837  0127  00A1               	movwf	??___ftmul+1
  2838  0128  0821               	movf	??___ftmul+1,w
  2839  0129  00F4               	movwf	___ftpack@sign
  2840  012A  120A  158A  245F   	fcall	___ftpack
  2841  012D  0870               	movf	?___ftpack,w
  2842  012E  00F8               	movwf	?___ftmul
  2843  012F  0871               	movf	?___ftpack+1,w
  2844  0130  00F9               	movwf	?___ftmul+1
  2845  0131  0872               	movf	?___ftpack+2,w
  2846  0132  00FA               	movwf	?___ftmul+2
  2847  0133  0008               	return
  2848  0134                     __end_of___ftmul:	
  2849                           
  2850                           	psect	text9
  2851  04A9                     __ptext9:	
  2852 ;; *************** function ___ftadd *****************
  2853 ;; Defined at:
  2854 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftadd.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  f1              3    3[BANK0 ] float 
  2857 ;;  f2              3    6[BANK0 ] float 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  exp1            1   15[BANK0 ] unsigned char 
  2860 ;;  exp2            1   14[BANK0 ] unsigned char 
  2861 ;;  sign            1   13[BANK0 ] unsigned char 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  3    3[BANK0 ] float 
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, status,0, pclath, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2871 ;;      Params:         0       6       0       0       0
  2872 ;;      Locals:         0       3       0       0       0
  2873 ;;      Temps:          0       4       0       0       0
  2874 ;;      Totals:         0      13       0       0       0
  2875 ;;Total ram usage:       13 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:    1
  2878 ;; This function calls:
  2879 ;;		___ftpack
  2880 ;; This function is called by:
  2881 ;;		_LCD_DisplayFloatNumber
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           
  2886                           ;psect for function ___ftadd
  2887  04A9                     ___ftadd:	
  2888                           
  2889                           ;incstack = 0
  2890                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2891  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  2892  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  2893  04AB  0823               	movf	___ftadd@f1,w
  2894  04AC  00A9               	movwf	??___ftadd
  2895  04AD  0824               	movf	___ftadd@f1+1,w
  2896  04AE  00AA               	movwf	??___ftadd+1
  2897  04AF  0825               	movf	___ftadd@f1+2,w
  2898  04B0  00AB               	movwf	??___ftadd+2
  2899  04B1  1003               	clrc
  2900  04B2  0D2A               	rlf	??___ftadd+1,w
  2901  04B3  0D2B               	rlf	??___ftadd+2,w
  2902  04B4  00AC               	movwf	??___ftadd+3
  2903  04B5  082C               	movf	??___ftadd+3,w
  2904  04B6  00AF               	movwf	___ftadd@exp1
  2905  04B7  0826               	movf	___ftadd@f2,w
  2906  04B8  00A9               	movwf	??___ftadd
  2907  04B9  0827               	movf	___ftadd@f2+1,w
  2908  04BA  00AA               	movwf	??___ftadd+1
  2909  04BB  0828               	movf	___ftadd@f2+2,w
  2910  04BC  00AB               	movwf	??___ftadd+2
  2911  04BD  1003               	clrc
  2912  04BE  0D2A               	rlf	??___ftadd+1,w
  2913  04BF  0D2B               	rlf	??___ftadd+2,w
  2914  04C0  00AC               	movwf	??___ftadd+3
  2915  04C1  082C               	movf	??___ftadd+3,w
  2916  04C2  00AE               	movwf	___ftadd@exp2
  2917  04C3  082F               	movf	___ftadd@exp1,w
  2918  04C4  1903               	btfsc	3,2
  2919  04C5  2CD2               	goto	l2101
  2920  04C6  082E               	movf	___ftadd@exp2,w
  2921  04C7  022F               	subwf	___ftadd@exp1,w
  2922  04C8  1803               	skipnc
  2923  04C9  2CD9               	goto	l2105
  2924  04CA  032F               	decf	___ftadd@exp1,w
  2925  04CB  3AFF               	xorlw	255
  2926  04CC  072E               	addwf	___ftadd@exp2,w
  2927  04CD  00A9               	movwf	??___ftadd
  2928  04CE  3019               	movlw	25
  2929  04CF  0229               	subwf	??___ftadd,w
  2930  04D0  1C03               	skipc
  2931  04D1  2CD9               	goto	l2105
  2932  04D2                     l2101:	
  2933  04D2  0826               	movf	___ftadd@f2,w
  2934  04D3  00A3               	movwf	?___ftadd
  2935  04D4  0827               	movf	___ftadd@f2+1,w
  2936  04D5  00A4               	movwf	?___ftadd+1
  2937  04D6  0828               	movf	___ftadd@f2+2,w
  2938  04D7  00A5               	movwf	?___ftadd+2
  2939  04D8  0008               	return
  2940  04D9                     l2105:	
  2941  04D9  082E               	movf	___ftadd@exp2,w
  2942  04DA  1903               	btfsc	3,2
  2943  04DB  0008               	return
  2944  04DC  082F               	movf	___ftadd@exp1,w
  2945  04DD  022E               	subwf	___ftadd@exp2,w
  2946  04DE  1803               	skipnc
  2947  04DF  2CE8               	goto	l2111
  2948  04E0  032E               	decf	___ftadd@exp2,w
  2949  04E1  3AFF               	xorlw	255
  2950  04E2  072F               	addwf	___ftadd@exp1,w
  2951  04E3  00A9               	movwf	??___ftadd
  2952  04E4  3019               	movlw	25
  2953  04E5  0229               	subwf	??___ftadd,w
  2954  04E6  1803               	btfsc	3,0
  2955  04E7  0008               	return
  2956  04E8                     l2111:	
  2957  04E8  3006               	movlw	6
  2958  04E9  00A9               	movwf	??___ftadd
  2959  04EA  0829               	movf	??___ftadd,w
  2960  04EB  00AD               	movwf	___ftadd@sign
  2961  04EC  1BA5               	btfsc	___ftadd@f1+2,7
  2962  04ED  17AD               	bsf	___ftadd@sign,7
  2963  04EE  1BA8               	btfsc	___ftadd@f2+2,7
  2964  04EF  172D               	bsf	___ftadd@sign,6
  2965  04F0  17A4               	bsf	___ftadd@f1+1,7
  2966  04F1  30FF               	movlw	255
  2967  04F2  05A3               	andwf	___ftadd@f1,f
  2968  04F3  30FF               	movlw	255
  2969  04F4  05A4               	andwf	___ftadd@f1+1,f
  2970  04F5  3000               	movlw	0
  2971  04F6  05A5               	andwf	___ftadd@f1+2,f
  2972  04F7  17A7               	bsf	___ftadd@f2+1,7
  2973  04F8  30FF               	movlw	255
  2974  04F9  05A6               	andwf	___ftadd@f2,f
  2975  04FA  30FF               	movlw	255
  2976  04FB  05A7               	andwf	___ftadd@f2+1,f
  2977  04FC  3000               	movlw	0
  2978  04FD  05A8               	andwf	___ftadd@f2+2,f
  2979  04FE  082E               	movf	___ftadd@exp2,w
  2980  04FF  022F               	subwf	___ftadd@exp1,w
  2981  0500  1803               	skipnc
  2982  0501  2D28               	goto	l2133
  2983  0502                     l2123:	
  2984  0502  3001               	movlw	1
  2985  0503                     u3365:	
  2986  0503  1003               	clrc
  2987  0504  0DA6               	rlf	___ftadd@f2,f
  2988  0505  0DA7               	rlf	___ftadd@f2+1,f
  2989  0506  0DA8               	rlf	___ftadd@f2+2,f
  2990  0507  3EFF               	addlw	-1
  2991  0508  1D03               	skipz
  2992  0509  2D03               	goto	u3365
  2993  050A  3001               	movlw	1
  2994  050B  02AE               	subwf	___ftadd@exp2,f
  2995  050C  082E               	movf	___ftadd@exp2,w
  2996  050D  062F               	xorwf	___ftadd@exp1,w
  2997  050E  1903               	skipnz
  2998  050F  2D23               	goto	l2131
  2999  0510  3001               	movlw	1
  3000  0511  02AD               	subwf	___ftadd@sign,f
  3001  0512  082D               	movf	___ftadd@sign,w
  3002  0513  3907               	andlw	7
  3003  0514  1903               	btfsc	3,2
  3004  0515  2D23               	goto	l2131
  3005  0516  2D02               	goto	l2123
  3006  0517                     l2129:	
  3007  0517  3001               	movlw	1
  3008  0518                     u3395:	
  3009  0518  1003               	clrc
  3010  0519  0CA5               	rrf	___ftadd@f1+2,f
  3011  051A  0CA4               	rrf	___ftadd@f1+1,f
  3012  051B  0CA3               	rrf	___ftadd@f1,f
  3013  051C  3EFF               	addlw	-1
  3014  051D  1D03               	skipz
  3015  051E  2D18               	goto	u3395
  3016  051F  3001               	movlw	1
  3017  0520  00A9               	movwf	??___ftadd
  3018  0521  0829               	movf	??___ftadd,w
  3019  0522  07AF               	addwf	___ftadd@exp1,f
  3020  0523                     l2131:	
  3021  0523  082F               	movf	___ftadd@exp1,w
  3022  0524  062E               	xorwf	___ftadd@exp2,w
  3023  0525  1903               	btfsc	3,2
  3024  0526  2D51               	goto	l651
  3025  0527  2D17               	goto	l2129
  3026  0528                     l2133:	
  3027  0528  082F               	movf	___ftadd@exp1,w
  3028  0529  022E               	subwf	___ftadd@exp2,w
  3029  052A  1803               	skipnc
  3030  052B  2D51               	goto	l651
  3031  052C                     l2135:	
  3032  052C  3001               	movlw	1
  3033  052D                     u3425:	
  3034  052D  1003               	clrc
  3035  052E  0DA3               	rlf	___ftadd@f1,f
  3036  052F  0DA4               	rlf	___ftadd@f1+1,f
  3037  0530  0DA5               	rlf	___ftadd@f1+2,f
  3038  0531  3EFF               	addlw	-1
  3039  0532  1D03               	skipz
  3040  0533  2D2D               	goto	u3425
  3041  0534  3001               	movlw	1
  3042  0535  02AF               	subwf	___ftadd@exp1,f
  3043  0536  082E               	movf	___ftadd@exp2,w
  3044  0537  062F               	xorwf	___ftadd@exp1,w
  3045  0538  1903               	skipnz
  3046  0539  2D4D               	goto	l2143
  3047  053A  3001               	movlw	1
  3048  053B  02AD               	subwf	___ftadd@sign,f
  3049  053C  082D               	movf	___ftadd@sign,w
  3050  053D  3907               	andlw	7
  3051  053E  1903               	btfsc	3,2
  3052  053F  2D4D               	goto	l2143
  3053  0540  2D2C               	goto	l2135
  3054  0541                     l2141:	
  3055  0541  3001               	movlw	1
  3056  0542                     u3455:	
  3057  0542  1003               	clrc
  3058  0543  0CA8               	rrf	___ftadd@f2+2,f
  3059  0544  0CA7               	rrf	___ftadd@f2+1,f
  3060  0545  0CA6               	rrf	___ftadd@f2,f
  3061  0546  3EFF               	addlw	-1
  3062  0547  1D03               	skipz
  3063  0548  2D42               	goto	u3455
  3064  0549  3001               	movlw	1
  3065  054A  00A9               	movwf	??___ftadd
  3066  054B  0829               	movf	??___ftadd,w
  3067  054C  07AE               	addwf	___ftadd@exp2,f
  3068  054D                     l2143:	
  3069  054D  082F               	movf	___ftadd@exp1,w
  3070  054E  062E               	xorwf	___ftadd@exp2,w
  3071  054F  1D03               	skipz
  3072  0550  2D41               	goto	l2141
  3073  0551                     l651:	
  3074  0551  1FAD               	btfss	___ftadd@sign,7
  3075  0552  2D63               	goto	l2147
  3076  0553  30FF               	movlw	255
  3077  0554  06A3               	xorwf	___ftadd@f1,f
  3078  0555  30FF               	movlw	255
  3079  0556  06A4               	xorwf	___ftadd@f1+1,f
  3080  0557  30FF               	movlw	255
  3081  0558  06A5               	xorwf	___ftadd@f1+2,f
  3082  0559  3001               	movlw	1
  3083  055A  07A3               	addwf	___ftadd@f1,f
  3084  055B  3000               	movlw	0
  3085  055C  1803               	skipnc
  3086  055D  3001               	movlw	1
  3087  055E  07A4               	addwf	___ftadd@f1+1,f
  3088  055F  3000               	movlw	0
  3089  0560  1803               	skipnc
  3090  0561  3001               	movlw	1
  3091  0562  07A5               	addwf	___ftadd@f1+2,f
  3092  0563                     l2147:	
  3093  0563  1F2D               	btfss	___ftadd@sign,6
  3094  0564  2D75               	goto	l2151
  3095  0565  30FF               	movlw	255
  3096  0566  06A6               	xorwf	___ftadd@f2,f
  3097  0567  30FF               	movlw	255
  3098  0568  06A7               	xorwf	___ftadd@f2+1,f
  3099  0569  30FF               	movlw	255
  3100  056A  06A8               	xorwf	___ftadd@f2+2,f
  3101  056B  3001               	movlw	1
  3102  056C  07A6               	addwf	___ftadd@f2,f
  3103  056D  3000               	movlw	0
  3104  056E  1803               	skipnc
  3105  056F  3001               	movlw	1
  3106  0570  07A7               	addwf	___ftadd@f2+1,f
  3107  0571  3000               	movlw	0
  3108  0572  1803               	skipnc
  3109  0573  3001               	movlw	1
  3110  0574  07A8               	addwf	___ftadd@f2+2,f
  3111  0575                     l2151:	
  3112  0575  01AD               	clrf	___ftadd@sign
  3113  0576  0823               	movf	___ftadd@f1,w
  3114  0577  07A6               	addwf	___ftadd@f2,f
  3115  0578  0824               	movf	___ftadd@f1+1,w
  3116  0579  1103               	clrz
  3117  057A  1803               	skipnc
  3118  057B  0A24               	incf	___ftadd@f1+1,w
  3119  057C  1D03               	btfss	3,2
  3120  057D  07A7               	addwf	___ftadd@f2+1,f
  3121  057E  0825               	movf	___ftadd@f1+2,w
  3122  057F  1103               	clrz
  3123  0580  1803               	skipnc
  3124  0581  0A25               	incf	___ftadd@f1+2,w
  3125  0582  1D03               	btfss	3,2
  3126  0583  07A8               	addwf	___ftadd@f2+2,f
  3127  0584  1FA8               	btfss	___ftadd@f2+2,7
  3128  0585  2D98               	goto	l2161
  3129  0586  30FF               	movlw	255
  3130  0587  06A6               	xorwf	___ftadd@f2,f
  3131  0588  30FF               	movlw	255
  3132  0589  06A7               	xorwf	___ftadd@f2+1,f
  3133  058A  30FF               	movlw	255
  3134  058B  06A8               	xorwf	___ftadd@f2+2,f
  3135  058C  3001               	movlw	1
  3136  058D  07A6               	addwf	___ftadd@f2,f
  3137  058E  3000               	movlw	0
  3138  058F  1803               	skipnc
  3139  0590  3001               	movlw	1
  3140  0591  07A7               	addwf	___ftadd@f2+1,f
  3141  0592  3000               	movlw	0
  3142  0593  1803               	skipnc
  3143  0594  3001               	movlw	1
  3144  0595  07A8               	addwf	___ftadd@f2+2,f
  3145  0596  01AD               	clrf	___ftadd@sign
  3146  0597  0AAD               	incf	___ftadd@sign,f
  3147  0598                     l2161:	
  3148  0598  0826               	movf	___ftadd@f2,w
  3149  0599  00F0               	movwf	___ftpack@arg
  3150  059A  0827               	movf	___ftadd@f2+1,w
  3151  059B  00F1               	movwf	___ftpack@arg+1
  3152  059C  0828               	movf	___ftadd@f2+2,w
  3153  059D  00F2               	movwf	___ftpack@arg+2
  3154  059E  082F               	movf	___ftadd@exp1,w
  3155  059F  00A9               	movwf	??___ftadd
  3156  05A0  0829               	movf	??___ftadd,w
  3157  05A1  00F3               	movwf	___ftpack@exp
  3158  05A2  082D               	movf	___ftadd@sign,w
  3159  05A3  00AA               	movwf	??___ftadd+1
  3160  05A4  082A               	movf	??___ftadd+1,w
  3161  05A5  00F4               	movwf	___ftpack@sign
  3162  05A6  120A  158A  245F   	fcall	___ftpack
  3163  05A9  0870               	movf	?___ftpack,w
  3164  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  3165  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  3166  05AC  00A3               	movwf	?___ftadd
  3167  05AD  0871               	movf	?___ftpack+1,w
  3168  05AE  00A4               	movwf	?___ftadd+1
  3169  05AF  0872               	movf	?___ftpack+2,w
  3170  05B0  00A5               	movwf	?___ftadd+2
  3171  05B1  0008               	return
  3172  05B2                     __end_of___ftadd:	
  3173                           
  3174                           	psect	text10
  3175  0C5F                     __ptext10:	
  3176 ;; *************** function ___ftpack *****************
  3177 ;; Defined at:
  3178 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\float.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  arg             3    0[COMMON] unsigned um
  3181 ;;  exp             1    3[COMMON] unsigned char 
  3182 ;;  sign            1    4[COMMON] unsigned char 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;		None
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  3    0[COMMON] float 
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3194 ;;      Params:         5       0       0       0       0
  3195 ;;      Locals:         0       0       0       0       0
  3196 ;;      Temps:          3       0       0       0       0
  3197 ;;      Totals:         8       0       0       0       0
  3198 ;;Total ram usage:        8 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		___ftadd
  3204 ;;		___ftmul
  3205 ;;		___lltoft
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           
  3210                           ;psect for function ___ftpack
  3211  0C5F                     ___ftpack:	
  3212                           
  3213                           ;incstack = 0
  3214                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3215  0C5F  0873               	movf	___ftpack@exp,w
  3216  0C60  1903               	btfsc	3,2
  3217  0C61  2C67               	goto	l1985
  3218  0C62  0872               	movf	___ftpack@arg+2,w
  3219  0C63  0471               	iorwf	___ftpack@arg+1,w
  3220  0C64  0470               	iorwf	___ftpack@arg,w
  3221  0C65  1D03               	skipz
  3222  0C66  2C7A               	goto	l1991
  3223  0C67                     l1985:	
  3224  0C67  3000               	movlw	0
  3225  0C68  00F0               	movwf	?___ftpack
  3226  0C69  3000               	movlw	0
  3227  0C6A  00F1               	movwf	?___ftpack+1
  3228  0C6B  3000               	movlw	0
  3229  0C6C  00F2               	movwf	?___ftpack+2
  3230  0C6D  0008               	return
  3231  0C6E                     l1989:	
  3232  0C6E  3001               	movlw	1
  3233  0C6F  00F5               	movwf	??___ftpack
  3234  0C70  0875               	movf	??___ftpack,w
  3235  0C71  07F3               	addwf	___ftpack@exp,f
  3236  0C72  3001               	movlw	1
  3237  0C73                     u2975:	
  3238  0C73  1003               	clrc
  3239  0C74  0CF2               	rrf	___ftpack@arg+2,f
  3240  0C75  0CF1               	rrf	___ftpack@arg+1,f
  3241  0C76  0CF0               	rrf	___ftpack@arg,f
  3242  0C77  3EFF               	addlw	-1
  3243  0C78  1D03               	skipz
  3244  0C79  2C73               	goto	u2975
  3245  0C7A                     l1991:	
  3246  0C7A  30FE               	movlw	254
  3247  0C7B  0572               	andwf	___ftpack@arg+2,w
  3248  0C7C  1903               	btfsc	3,2
  3249  0C7D  2C95               	goto	l620
  3250  0C7E  2C6E               	goto	l1989
  3251  0C7F                     l1993:	
  3252  0C7F  3001               	movlw	1
  3253  0C80  00F5               	movwf	??___ftpack
  3254  0C81  0875               	movf	??___ftpack,w
  3255  0C82  07F3               	addwf	___ftpack@exp,f
  3256  0C83  3001               	movlw	1
  3257  0C84  07F0               	addwf	___ftpack@arg,f
  3258  0C85  3000               	movlw	0
  3259  0C86  1803               	skipnc
  3260  0C87  3001               	movlw	1
  3261  0C88  07F1               	addwf	___ftpack@arg+1,f
  3262  0C89  3000               	movlw	0
  3263  0C8A  1803               	skipnc
  3264  0C8B  3001               	movlw	1
  3265  0C8C  07F2               	addwf	___ftpack@arg+2,f
  3266  0C8D  3001               	movlw	1
  3267  0C8E                     u2995:	
  3268  0C8E  1003               	clrc
  3269  0C8F  0CF2               	rrf	___ftpack@arg+2,f
  3270  0C90  0CF1               	rrf	___ftpack@arg+1,f
  3271  0C91  0CF0               	rrf	___ftpack@arg,f
  3272  0C92  3EFF               	addlw	-1
  3273  0C93  1D03               	skipz
  3274  0C94  2C8E               	goto	u2995
  3275  0C95                     l620:	
  3276  0C95  30FF               	movlw	255
  3277  0C96  0572               	andwf	___ftpack@arg+2,w
  3278  0C97  1903               	btfsc	3,2
  3279  0C98  2CA4               	goto	l2001
  3280  0C99  2C7F               	goto	l1993
  3281  0C9A                     l1999:	
  3282  0C9A  3001               	movlw	1
  3283  0C9B  02F3               	subwf	___ftpack@exp,f
  3284  0C9C  3001               	movlw	1
  3285  0C9D                     u3015:	
  3286  0C9D  1003               	clrc
  3287  0C9E  0DF0               	rlf	___ftpack@arg,f
  3288  0C9F  0DF1               	rlf	___ftpack@arg+1,f
  3289  0CA0  0DF2               	rlf	___ftpack@arg+2,f
  3290  0CA1  3EFF               	addlw	-1
  3291  0CA2  1D03               	skipz
  3292  0CA3  2C9D               	goto	u3015
  3293  0CA4                     l2001:	
  3294  0CA4  1BF1               	btfsc	___ftpack@arg+1,7
  3295  0CA5  2CAA               	goto	l627
  3296  0CA6  3002               	movlw	2
  3297  0CA7  0273               	subwf	___ftpack@exp,w
  3298  0CA8  1803               	skipnc
  3299  0CA9  2C9A               	goto	l1999
  3300  0CAA                     l627:	
  3301  0CAA  1873               	btfsc	___ftpack@exp,0
  3302  0CAB  2CB2               	goto	l628
  3303  0CAC  30FF               	movlw	255
  3304  0CAD  05F0               	andwf	___ftpack@arg,f
  3305  0CAE  307F               	movlw	127
  3306  0CAF  05F1               	andwf	___ftpack@arg+1,f
  3307  0CB0  30FF               	movlw	255
  3308  0CB1  05F2               	andwf	___ftpack@arg+2,f
  3309  0CB2                     l628:	
  3310  0CB2  1003               	clrc
  3311  0CB3  0CF3               	rrf	___ftpack@exp,f
  3312  0CB4  0873               	movf	___ftpack@exp,w
  3313  0CB5  00F5               	movwf	??___ftpack
  3314  0CB6  01F6               	clrf	??___ftpack+1
  3315  0CB7  01F7               	clrf	??___ftpack+2
  3316  0CB8  3010               	movlw	16
  3317  0CB9                     u3055:	
  3318  0CB9  1003               	clrc
  3319  0CBA  0DF5               	rlf	??___ftpack,f
  3320  0CBB  0DF6               	rlf	??___ftpack+1,f
  3321  0CBC  0DF7               	rlf	??___ftpack+2,f
  3322  0CBD  3EFF               	addlw	-1
  3323  0CBE  1D03               	skipz
  3324  0CBF  2CB9               	goto	u3055
  3325  0CC0  0875               	movf	??___ftpack,w
  3326  0CC1  04F0               	iorwf	___ftpack@arg,f
  3327  0CC2  0876               	movf	??___ftpack+1,w
  3328  0CC3  04F1               	iorwf	___ftpack@arg+1,f
  3329  0CC4  0877               	movf	??___ftpack+2,w
  3330  0CC5  04F2               	iorwf	___ftpack@arg+2,f
  3331  0CC6  0874               	movf	___ftpack@sign,w
  3332  0CC7  1903               	btfsc	3,2
  3333  0CC8  0008               	return
  3334  0CC9  17F2               	bsf	___ftpack@arg+2,7
  3335  0CCA  0008               	return
  3336  0CCB                     __end_of___ftpack:	
  3337                           
  3338                           	psect	text11
  3339  03B7                     __ptext11:	
  3340 ;; *************** function _LCD_DisplayNumber *****************
  3341 ;; Defined at:
  3342 ;;		line 529 in file "../00-libfiles/lcd.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  v_numericSys    1    wreg     unsigned char 
  3345 ;;  v_number_u32    4    4[BANK0 ] unsigned long 
  3346 ;;  v_numOfDigit    1    8[BANK0 ] unsigned char 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  v_numericSys    1   33[BANK0 ] unsigned char 
  3349 ;;  a              10   21[BANK0 ] unsigned char [10]
  3350 ;;  i               1   34[BANK0 ] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3360 ;;      Params:         0       5       0       0       0
  3361 ;;      Locals:         0      14       0       0       0
  3362 ;;      Temps:          0      12       0       0       0
  3363 ;;      Totals:         0      31       0       0       0
  3364 ;;Total ram usage:       31 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    6
  3367 ;; This function calls:
  3368 ;;		_LCD_DisplayChar
  3369 ;;		___bmul
  3370 ;;		___lldiv
  3371 ;; This function is called by:
  3372 ;;		_LCD_DisplayFloatNumber
  3373 ;;		_LCD_Printf
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           
  3378                           ;psect for function _LCD_DisplayNumber
  3379  03B7                     _LCD_DisplayNumber:	
  3380                           
  3381                           ;incstack = 0
  3382                           ; Regs used in _LCD_DisplayNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3383                           ;LCD_DisplayNumber@v_numericSystem_u8 stored from wreg
  3384  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  3385  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  3386  03B9  00C1               	movwf	LCD_DisplayNumber@v_numericSystem_u8
  3387                           
  3388                           ;lcd.c: 531: uint8_t i=0,a[10];
  3389  03BA  01C2               	clrf	LCD_DisplayNumber@i
  3390                           
  3391                           ;lcd.c: 533: if(2u == v_numericSystem_u8)
  3392  03BB  3002               	movlw	2
  3393  03BC  0641               	xorwf	LCD_DisplayNumber@v_numericSystem_u8,w
  3394  03BD  1903               	btfsc	3,2
  3395  03BE  2BFE               	goto	l2057
  3396  03BF  2C02               	goto	l2059
  3397  03C0                     l2051:	
  3398                           ;lcd.c: 534: {
  3399                           ;lcd.c: 535: while(v_numOfDigitsToDisplay_u8!=0)
  3400                           
  3401                           
  3402                           ;lcd.c: 536: {
  3403                           ;lcd.c: 539: i = (((v_number_u32)&((1<<((v_numOfDigitsToDisplay_u8-1)))))!=0u);
  3404  03C0  0824               	movf	LCD_DisplayNumber@v_number_u32,w
  3405  03C1  00A9               	movwf	??_LCD_DisplayNumber
  3406  03C2  0825               	movf	LCD_DisplayNumber@v_number_u32+1,w
  3407  03C3  00AA               	movwf	??_LCD_DisplayNumber+1
  3408  03C4  0826               	movf	LCD_DisplayNumber@v_number_u32+2,w
  3409  03C5  00AB               	movwf	??_LCD_DisplayNumber+2
  3410  03C6  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  3411  03C7  00AC               	movwf	??_LCD_DisplayNumber+3
  3412  03C8  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  3413  03C9  3EFF               	addlw	-1
  3414  03CA  00AD               	movwf	??_LCD_DisplayNumber+4
  3415  03CB  0AAD               	incf	??_LCD_DisplayNumber+4,f
  3416  03CC  3001               	movlw	1
  3417  03CD  00AE               	movwf	??_LCD_DisplayNumber+5
  3418  03CE  3000               	movlw	0
  3419  03CF  00AF               	movwf	??_LCD_DisplayNumber+6
  3420  03D0  2BD4               	goto	u3164
  3421  03D1                     u3165:	
  3422  03D1  1003               	clrc
  3423  03D2  0DAE               	rlf	??_LCD_DisplayNumber+5,f
  3424  03D3  0DAF               	rlf	??_LCD_DisplayNumber+6,f
  3425  03D4                     u3164:	
  3426  03D4  0BAD               	decfsz	??_LCD_DisplayNumber+4,f
  3427  03D5  2BD1               	goto	u3165
  3428  03D6  082E               	movf	??_LCD_DisplayNumber+5,w
  3429  03D7  00B0               	movwf	??_LCD_DisplayNumber+7
  3430  03D8  082F               	movf	??_LCD_DisplayNumber+6,w
  3431  03D9  00B1               	movwf	??_LCD_DisplayNumber+8
  3432  03DA  3000               	movlw	0
  3433  03DB  1BB1               	btfsc	??_LCD_DisplayNumber+8,7
  3434  03DC  30FF               	movlw	255
  3435  03DD  00B2               	movwf	??_LCD_DisplayNumber+9
  3436  03DE  00B3               	movwf	??_LCD_DisplayNumber+10
  3437  03DF  0830               	movf	??_LCD_DisplayNumber+7,w
  3438  03E0  05A9               	andwf	??_LCD_DisplayNumber,f
  3439  03E1  0831               	movf	??_LCD_DisplayNumber+8,w
  3440  03E2  05AA               	andwf	??_LCD_DisplayNumber+1,f
  3441  03E3  0832               	movf	??_LCD_DisplayNumber+9,w
  3442  03E4  05AB               	andwf	??_LCD_DisplayNumber+2,f
  3443  03E5  0833               	movf	??_LCD_DisplayNumber+10,w
  3444  03E6  05AC               	andwf	??_LCD_DisplayNumber+3,f
  3445  03E7  082C               	movf	??_LCD_DisplayNumber+3,w
  3446  03E8  042B               	iorwf	??_LCD_DisplayNumber+2,w
  3447  03E9  042A               	iorwf	??_LCD_DisplayNumber+1,w
  3448  03EA  0429               	iorwf	??_LCD_DisplayNumber,w
  3449  03EB  1903               	btfsc	3,2
  3450  03EC  2BEF               	goto	u3170
  3451  03ED  3001               	movlw	1
  3452  03EE  2BF0               	goto	u3180
  3453  03EF                     u3170:	
  3454  03EF  3000               	movlw	0
  3455  03F0                     u3180:	
  3456  03F0  00B4               	movwf	??_LCD_DisplayNumber+11
  3457  03F1  0834               	movf	??_LCD_DisplayNumber+11,w
  3458  03F2  00C2               	movwf	LCD_DisplayNumber@i
  3459                           
  3460                           ;lcd.c: 540: LCD_DisplayChar(((i)+0x30));
  3461  03F3  0842               	movf	LCD_DisplayNumber@i,w
  3462  03F4  3E30               	addlw	48
  3463  03F5  120A  158A  2117  120A  118A  	fcall	_LCD_DisplayChar
  3464                           
  3465                           ;lcd.c: 541: v_numOfDigitsToDisplay_u8--;
  3466  03FA  3001               	movlw	1
  3467  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  3468  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  3469  03FD  02A8               	subwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,f
  3470  03FE                     l2057:	
  3471  03FE  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  3472  03FF  1903               	btfsc	3,2
  3473  0400  0008               	return
  3474  0401  2BC0               	goto	l2051
  3475  0402                     l2059:	
  3476                           ;lcd.c: 542: }
  3477                           ;lcd.c: 543: }
  3478                           
  3479                           
  3480                           ;lcd.c: 544: else if(v_number_u32==0)
  3481  0402  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  3482  0403  0426               	iorwf	LCD_DisplayNumber@v_number_u32+2,w
  3483  0404  0425               	iorwf	LCD_DisplayNumber@v_number_u32+1,w
  3484  0405  0424               	iorwf	LCD_DisplayNumber@v_number_u32,w
  3485  0406  1D03               	skipz
  3486  0407  2C0D               	goto	l2063
  3487                           
  3488                           ;lcd.c: 545: {
  3489                           ;lcd.c: 548: LCD_DisplayChar('0');
  3490  0408  3030               	movlw	48
  3491  0409  120A  158A  2117   	fcall	_LCD_DisplayChar
  3492                           
  3493                           ;lcd.c: 549: }
  3494  040C  0008               	return
  3495  040D                     l2063:	
  3496                           
  3497                           ;lcd.c: 550: else
  3498                           ;lcd.c: 551: {
  3499                           ;lcd.c: 552: for(i=0;i<v_numOfDigitsToDisplay_u8;i++)
  3500  040D  1283               	bcf	3,5	;RP0=0, select bank0
  3501  040E  1303               	bcf	3,6	;RP1=0, select bank0
  3502  040F  01C2               	clrf	LCD_DisplayNumber@i
  3503  0410                     l2081:	
  3504  0410  0828               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  3505  0411  0242               	subwf	LCD_DisplayNumber@i,w
  3506  0412  1803               	btfsc	3,0
  3507  0413  2CA5               	goto	l2093
  3508                           
  3509                           ;lcd.c: 553: {
  3510                           ;lcd.c: 556: if(v_number_u32!=0)
  3511  0414  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  3512  0415  0426               	iorwf	LCD_DisplayNumber@v_number_u32+2,w
  3513  0416  0425               	iorwf	LCD_DisplayNumber@v_number_u32+1,w
  3514  0417  0424               	iorwf	LCD_DisplayNumber@v_number_u32,w
  3515  0418  1903               	skipnz
  3516  0419  2C6F               	goto	l2071
  3517                           
  3518                           ;lcd.c: 557: {
  3519                           ;lcd.c: 564: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u3
      +                          2/v_numericSystem_u8)));
  3520  041A  0841               	movf	LCD_DisplayNumber@v_numericSystem_u8,w
  3521  041B  00A9               	movwf	??_LCD_DisplayNumber
  3522  041C  0829               	movf	??_LCD_DisplayNumber,w
  3523  041D  00A0               	movwf	___bmul@multiplicand
  3524  041E  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  3525  041F  00F7               	movwf	___lldiv@dividend+3
  3526  0420  0826               	movf	LCD_DisplayNumber@v_number_u32+2,w
  3527  0421  00F6               	movwf	___lldiv@dividend+2
  3528  0422  0825               	movf	LCD_DisplayNumber@v_number_u32+1,w
  3529  0423  00F5               	movwf	___lldiv@dividend+1
  3530  0424  0824               	movf	LCD_DisplayNumber@v_number_u32,w
  3531  0425  00F4               	movwf	___lldiv@dividend
  3532  0426  0841               	movf	LCD_DisplayNumber@v_numericSystem_u8,w
  3533  0427  00AA               	movwf	??_LCD_DisplayNumber+1
  3534  0428  01AB               	clrf	??_LCD_DisplayNumber+2
  3535  0429  01AC               	clrf	??_LCD_DisplayNumber+3
  3536  042A  01AD               	clrf	??_LCD_DisplayNumber+4
  3537  042B  082D               	movf	??_LCD_DisplayNumber+4,w
  3538  042C  00F3               	movwf	___lldiv@divisor+3
  3539  042D  082C               	movf	??_LCD_DisplayNumber+3,w
  3540  042E  00F2               	movwf	___lldiv@divisor+2
  3541  042F  082B               	movf	??_LCD_DisplayNumber+2,w
  3542  0430  00F1               	movwf	___lldiv@divisor+1
  3543  0431  082A               	movf	??_LCD_DisplayNumber+1,w
  3544  0432  00F0               	movwf	___lldiv@divisor
  3545  0433  120A  158A  23A1  120A  118A  	fcall	___lldiv
  3546  0438  0870               	movf	?___lldiv,w
  3547  0439  120A  158A  20A8  120A  118A  	fcall	___bmul
  3548  043E  3AFF               	xorlw	255
  3549  043F  3E01               	addlw	1
  3550  0440  1283               	bcf	3,5	;RP0=0, select bank0
  3551  0441  1303               	bcf	3,6	;RP1=0, select bank0
  3552  0442  0724               	addwf	LCD_DisplayNumber@v_number_u32,w
  3553  0443  00AE               	movwf	??_LCD_DisplayNumber+5
  3554  0444  0842               	movf	LCD_DisplayNumber@i,w
  3555  0445  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  3556  0446  0084               	movwf	4
  3557  0447  082E               	movf	??_LCD_DisplayNumber+5,w
  3558  0448  1383               	bcf	3,7	;select IRP bank0
  3559  0449  0080               	movwf	0
  3560                           
  3561                           ;lcd.c: 565: v_number_u32=v_number_u32/v_numericSystem_u8;
  3562  044A  0841               	movf	LCD_DisplayNumber@v_numericSystem_u8,w
  3563  044B  00A9               	movwf	??_LCD_DisplayNumber
  3564  044C  01AA               	clrf	??_LCD_DisplayNumber+1
  3565  044D  01AB               	clrf	??_LCD_DisplayNumber+2
  3566  044E  01AC               	clrf	??_LCD_DisplayNumber+3
  3567  044F  082C               	movf	??_LCD_DisplayNumber+3,w
  3568  0450  00F3               	movwf	___lldiv@divisor+3
  3569  0451  082B               	movf	??_LCD_DisplayNumber+2,w
  3570  0452  00F2               	movwf	___lldiv@divisor+2
  3571  0453  082A               	movf	??_LCD_DisplayNumber+1,w
  3572  0454  00F1               	movwf	___lldiv@divisor+1
  3573  0455  0829               	movf	??_LCD_DisplayNumber,w
  3574  0456  00F0               	movwf	___lldiv@divisor
  3575  0457  0827               	movf	LCD_DisplayNumber@v_number_u32+3,w
  3576  0458  00F7               	movwf	___lldiv@dividend+3
  3577  0459  0826               	movf	LCD_DisplayNumber@v_number_u32+2,w
  3578  045A  00F6               	movwf	___lldiv@dividend+2
  3579  045B  0825               	movf	LCD_DisplayNumber@v_number_u32+1,w
  3580  045C  00F5               	movwf	___lldiv@dividend+1
  3581  045D  0824               	movf	LCD_DisplayNumber@v_number_u32,w
  3582  045E  00F4               	movwf	___lldiv@dividend
  3583  045F  120A  158A  23A1  120A  118A  	fcall	___lldiv
  3584  0464  0873               	movf	?___lldiv+3,w
  3585  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3586  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3587  0467  00A7               	movwf	LCD_DisplayNumber@v_number_u32+3
  3588  0468  0872               	movf	?___lldiv+2,w
  3589  0469  00A6               	movwf	LCD_DisplayNumber@v_number_u32+2
  3590  046A  0871               	movf	?___lldiv+1,w
  3591  046B  00A5               	movwf	LCD_DisplayNumber@v_number_u32+1
  3592  046C  0870               	movf	?___lldiv,w
  3593  046D  00A4               	movwf	LCD_DisplayNumber@v_number_u32
  3594                           
  3595                           ;lcd.c: 566: }
  3596  046E  2C7B               	goto	l2079
  3597  046F                     l2071:	
  3598                           
  3599                           ;lcd.c: 567: else if( (v_numOfDigitsToDisplay_u8 == 0xffu) ||
  3600                           ;lcd.c: 568: (v_numOfDigitsToDisplay_u8 > 10u))
  3601  046F  0A28               	incf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  3602  0470  1903               	btfsc	3,2
  3603  0471  2CA5               	goto	l2093
  3604  0472  300B               	movlw	11
  3605  0473  0228               	subwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w
  3606  0474  1803               	btfsc	3,0
  3607  0475  2CA5               	goto	l2093
  3608                           
  3609                           ;lcd.c: 574: else
  3610                           ;lcd.c: 575: {
  3611                           ;lcd.c: 579: a[i]=0;
  3612                           
  3613                           ;lcd.c: 573: }
  3614                           
  3615                           ;lcd.c: 569: {
  3616                           ;lcd.c: 572: break;
  3617  0476  0842               	movf	LCD_DisplayNumber@i,w
  3618  0477  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  3619  0478  0084               	movwf	4
  3620  0479  1383               	bcf	3,7	;select IRP bank0
  3621  047A  0180               	clrf	0
  3622  047B                     l2079:	
  3623  047B  3001               	movlw	1
  3624  047C  00A9               	movwf	??_LCD_DisplayNumber
  3625  047D  0829               	movf	??_LCD_DisplayNumber,w
  3626  047E  07C2               	addwf	LCD_DisplayNumber@i,f
  3627  047F  2C10               	goto	l2081
  3628  0480                     l2083:	
  3629                           ;lcd.c: 580: }
  3630                           ;lcd.c: 581: }
  3631                           ;lcd.c: 583: while(i!=0)
  3632                           
  3633                           
  3634                           ;lcd.c: 584: {
  3635                           ;lcd.c: 586: LCD_DisplayChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  3636  0480  0842               	movf	LCD_DisplayNumber@i,w
  3637  0481  3EFF               	addlw	255
  3638  0482  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  3639  0483  0084               	movwf	4
  3640  0484  300A               	movlw	10
  3641  0485  1383               	bcf	3,7	;select IRP bank0
  3642  0486  0200               	subwf	0,w
  3643  0487  1803               	skipnc
  3644  0488  2C90               	goto	l2087
  3645  0489  0842               	movf	LCD_DisplayNumber@i,w
  3646  048A  3EFF               	addlw	255
  3647  048B  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  3648  048C  0084               	movwf	4
  3649  048D  0800               	movf	0,w
  3650  048E  3E30               	addlw	48
  3651  048F  2C96               	goto	L2
  3652  0490                     l2087:	
  3653  0490  0842               	movf	LCD_DisplayNumber@i,w
  3654  0491  3EFF               	addlw	255
  3655  0492  3E35               	addlw	(low (LCD_DisplayNumber@a| 0))& (0+255)
  3656  0493  0084               	movwf	4
  3657  0494  0800               	movf	0,w
  3658  0495  3E37               	addlw	55
  3659  0496                     L2:	
  3660  0496  00BF               	movwf	_LCD_DisplayNumber$336
  3661  0497  3000               	movlw	0
  3662  0498  1803               	skipnc
  3663  0499  3001               	movlw	1
  3664  049A  00C0               	movwf	_LCD_DisplayNumber$336+1
  3665  049B  083F               	movf	_LCD_DisplayNumber$336,w
  3666  049C  120A  158A  2117  120A  118A  	fcall	_LCD_DisplayChar
  3667                           
  3668                           ;lcd.c: 587: i--;
  3669  04A1  3001               	movlw	1
  3670  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  3671  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  3672  04A4  02C2               	subwf	LCD_DisplayNumber@i,f
  3673  04A5                     l2093:	
  3674  04A5  0842               	movf	LCD_DisplayNumber@i,w
  3675  04A6  1903               	btfsc	3,2
  3676  04A7  0008               	return
  3677  04A8  2C80               	goto	l2083
  3678  04A9                     __end_of_LCD_DisplayNumber:	
  3679                           
  3680                           	psect	text12
  3681  0BA1                     __ptext12:	
  3682 ;; *************** function ___lldiv *****************
  3683 ;; Defined at:
  3684 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  divisor         4    0[COMMON] unsigned long 
  3687 ;;  dividend        4    4[COMMON] unsigned long 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  quotient        4    9[COMMON] unsigned long 
  3690 ;;  counter         1   13[COMMON] unsigned char 
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  4    0[COMMON] unsigned long 
  3693 ;; Registers used:
  3694 ;;		wreg, status,2, status,0
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3700 ;;      Params:         8       0       0       0       0
  3701 ;;      Locals:         5       0       0       0       0
  3702 ;;      Temps:          1       0       0       0       0
  3703 ;;      Totals:        14       0       0       0       0
  3704 ;;Total ram usage:       14 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_LCD_DisplayNumber
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           
  3714                           ;psect for function ___lldiv
  3715  0BA1                     ___lldiv:	
  3716                           
  3717                           ;incstack = 0
  3718                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3719  0BA1  3000               	movlw	0
  3720  0BA2  00FC               	movwf	___lldiv@quotient+3
  3721  0BA3  3000               	movlw	0
  3722  0BA4  00FB               	movwf	___lldiv@quotient+2
  3723  0BA5  3000               	movlw	0
  3724  0BA6  00FA               	movwf	___lldiv@quotient+1
  3725  0BA7  3000               	movlw	0
  3726  0BA8  00F9               	movwf	___lldiv@quotient
  3727  0BA9  0873               	movf	___lldiv@divisor+3,w
  3728  0BAA  0472               	iorwf	___lldiv@divisor+2,w
  3729  0BAB  0471               	iorwf	___lldiv@divisor+1,w
  3730  0BAC  0470               	iorwf	___lldiv@divisor,w
  3731  0BAD  1903               	skipnz
  3732  0BAE  2BF6               	goto	l2033
  3733  0BAF  01FD               	clrf	___lldiv@counter
  3734  0BB0  0AFD               	incf	___lldiv@counter,f
  3735  0BB1                     l2019:	
  3736  0BB1  1BF3               	btfsc	___lldiv@divisor+3,7
  3737  0BB2  2BC1               	goto	l2021
  3738  0BB3  3001               	movlw	1
  3739  0BB4  00F8               	movwf	??___lldiv
  3740  0BB5                     u3085:	
  3741  0BB5  1003               	clrc
  3742  0BB6  0DF0               	rlf	___lldiv@divisor,f
  3743  0BB7  0DF1               	rlf	___lldiv@divisor+1,f
  3744  0BB8  0DF2               	rlf	___lldiv@divisor+2,f
  3745  0BB9  0DF3               	rlf	___lldiv@divisor+3,f
  3746  0BBA  0BF8               	decfsz	??___lldiv,f
  3747  0BBB  2BB5               	goto	u3085
  3748  0BBC  3001               	movlw	1
  3749  0BBD  00F8               	movwf	??___lldiv
  3750  0BBE  0878               	movf	??___lldiv,w
  3751  0BBF  07FD               	addwf	___lldiv@counter,f
  3752  0BC0  2BB1               	goto	l2019
  3753  0BC1                     l2021:	
  3754  0BC1  3001               	movlw	1
  3755  0BC2  00F8               	movwf	??___lldiv
  3756  0BC3                     u3105:	
  3757  0BC3  1003               	clrc
  3758  0BC4  0DF9               	rlf	___lldiv@quotient,f
  3759  0BC5  0DFA               	rlf	___lldiv@quotient+1,f
  3760  0BC6  0DFB               	rlf	___lldiv@quotient+2,f
  3761  0BC7  0DFC               	rlf	___lldiv@quotient+3,f
  3762  0BC8  0BF8               	decfsz	??___lldiv,f
  3763  0BC9  2BC3               	goto	u3105
  3764  0BCA  0873               	movf	___lldiv@divisor+3,w
  3765  0BCB  0277               	subwf	___lldiv@dividend+3,w
  3766  0BCC  1D03               	skipz
  3767  0BCD  2BD8               	goto	u3115
  3768  0BCE  0872               	movf	___lldiv@divisor+2,w
  3769  0BCF  0276               	subwf	___lldiv@dividend+2,w
  3770  0BD0  1D03               	skipz
  3771  0BD1  2BD8               	goto	u3115
  3772  0BD2  0871               	movf	___lldiv@divisor+1,w
  3773  0BD3  0275               	subwf	___lldiv@dividend+1,w
  3774  0BD4  1D03               	skipz
  3775  0BD5  2BD8               	goto	u3115
  3776  0BD6  0870               	movf	___lldiv@divisor,w
  3777  0BD7  0274               	subwf	___lldiv@dividend,w
  3778  0BD8                     u3115:	
  3779  0BD8  1C03               	skipc
  3780  0BD9  2BE9               	goto	l2029
  3781  0BDA  0870               	movf	___lldiv@divisor,w
  3782  0BDB  02F4               	subwf	___lldiv@dividend,f
  3783  0BDC  0871               	movf	___lldiv@divisor+1,w
  3784  0BDD  1C03               	skipc
  3785  0BDE  0F71               	incfsz	___lldiv@divisor+1,w
  3786  0BDF  02F5               	subwf	___lldiv@dividend+1,f
  3787  0BE0  0872               	movf	___lldiv@divisor+2,w
  3788  0BE1  1C03               	skipc
  3789  0BE2  0F72               	incfsz	___lldiv@divisor+2,w
  3790  0BE3  02F6               	subwf	___lldiv@dividend+2,f
  3791  0BE4  0873               	movf	___lldiv@divisor+3,w
  3792  0BE5  1C03               	skipc
  3793  0BE6  0F73               	incfsz	___lldiv@divisor+3,w
  3794  0BE7  02F7               	subwf	___lldiv@dividend+3,f
  3795  0BE8  1479               	bsf	___lldiv@quotient,0
  3796  0BE9                     l2029:	
  3797  0BE9  3001               	movlw	1
  3798  0BEA                     u3125:	
  3799  0BEA  1003               	clrc
  3800  0BEB  0CF3               	rrf	___lldiv@divisor+3,f
  3801  0BEC  0CF2               	rrf	___lldiv@divisor+2,f
  3802  0BED  0CF1               	rrf	___lldiv@divisor+1,f
  3803  0BEE  0CF0               	rrf	___lldiv@divisor,f
  3804  0BEF  3EFF               	addlw	-1
  3805  0BF0  1D03               	skipz
  3806  0BF1  2BEA               	goto	u3125
  3807  0BF2  3001               	movlw	1
  3808  0BF3  02FD               	subwf	___lldiv@counter,f
  3809  0BF4  1D03               	btfss	3,2
  3810  0BF5  2BC1               	goto	l2021
  3811  0BF6                     l2033:	
  3812  0BF6  087C               	movf	___lldiv@quotient+3,w
  3813  0BF7  00F3               	movwf	?___lldiv+3
  3814  0BF8  087B               	movf	___lldiv@quotient+2,w
  3815  0BF9  00F2               	movwf	?___lldiv+2
  3816  0BFA  087A               	movf	___lldiv@quotient+1,w
  3817  0BFB  00F1               	movwf	?___lldiv+1
  3818  0BFC  0879               	movf	___lldiv@quotient,w
  3819  0BFD  00F0               	movwf	?___lldiv
  3820  0BFE  0008               	return
  3821  0BFF                     __end_of___lldiv:	
  3822                           
  3823                           	psect	text13
  3824  08A8                     __ptext13:	
  3825 ;; *************** function ___bmul *****************
  3826 ;; Defined at:
  3827 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\Umul8.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  multiplier      1    wreg     unsigned char 
  3830 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3833 ;;  product         1    2[BANK0 ] unsigned char 
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  1    wreg      unsigned char 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3843 ;;      Params:         0       1       0       0       0
  3844 ;;      Locals:         0       2       0       0       0
  3845 ;;      Temps:          0       1       0       0       0
  3846 ;;      Totals:         0       4       0       0       0
  3847 ;;Total ram usage:        4 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; This function calls:
  3850 ;;		Nothing
  3851 ;; This function is called by:
  3852 ;;		_LCD_DisplayNumber
  3853 ;;		_LCD_Printf
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           
  3858                           ;psect for function ___bmul
  3859  08A8                     ___bmul:	
  3860                           
  3861                           ;incstack = 0
  3862                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3863                           ;___bmul@multiplier stored from wreg
  3864  08A8  1283               	bcf	3,5	;RP0=0, select bank0
  3865  08A9  1303               	bcf	3,6	;RP1=0, select bank0
  3866  08AA  00A3               	movwf	___bmul@multiplier
  3867  08AB  01A2               	clrf	___bmul@product
  3868  08AC                     l1969:	
  3869  08AC  1C23               	btfss	___bmul@multiplier,0
  3870  08AD  28B2               	goto	l1973
  3871  08AE  0820               	movf	___bmul@multiplicand,w
  3872  08AF  00A1               	movwf	??___bmul
  3873  08B0  0821               	movf	??___bmul,w
  3874  08B1  07A2               	addwf	___bmul@product,f
  3875  08B2                     l1973:	
  3876  08B2  1003               	clrc
  3877  08B3  0DA0               	rlf	___bmul@multiplicand,f
  3878  08B4  1003               	clrc
  3879  08B5  0CA3               	rrf	___bmul@multiplier,f
  3880  08B6  0823               	movf	___bmul@multiplier,w
  3881  08B7  1D03               	btfss	3,2
  3882  08B8  28AC               	goto	l1969
  3883  08B9  0822               	movf	___bmul@product,w
  3884  08BA  0008               	return
  3885  08BB                     __end_of___bmul:	
  3886                           
  3887                           	psect	text14
  3888  0917                     __ptext14:	
  3889 ;; *************** function _LCD_DisplayChar *****************
  3890 ;; Defined at:
  3891 ;;		line 392 in file "../00-libfiles/lcd.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  v_lcdData_u8    1    wreg     unsigned char 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  v_lcdData_u8    1   12[COMMON] unsigned char 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  1    wreg      void 
  3898 ;; Registers used:
  3899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3905 ;;      Params:         0       0       0       0       0
  3906 ;;      Locals:         1       0       0       0       0
  3907 ;;      Temps:          1       0       0       0       0
  3908 ;;      Totals:         2       0       0       0       0
  3909 ;;Total ram usage:        2 bytes
  3910 ;; Hardware stack levels used:    1
  3911 ;; Hardware stack levels required when called:    5
  3912 ;; This function calls:
  3913 ;;		_LCD_GoToNextLine
  3914 ;;		_lcd_DataWrite
  3915 ;; This function is called by:
  3916 ;;		_LCD_DisplayString
  3917 ;;		_LCD_DisplayNumber
  3918 ;;		_LCD_DisplayFloatNumber
  3919 ;;		_LCD_Printf
  3920 ;;		_main
  3921 ;;		_LCD_ScrollMessage
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           
  3926                           ;psect for function _LCD_DisplayChar
  3927  0917                     _LCD_DisplayChar:	
  3928                           
  3929                           ;incstack = 0
  3930                           ; Regs used in _LCD_DisplayChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3931                           ;LCD_DisplayChar@v_lcdData_u8 stored from wreg
  3932  0917  00FC               	movwf	LCD_DisplayChar@v_lcdData_u8
  3933                           
  3934                           ;lcd.c: 394: if((v_LcdTrackCursorPos_U8>=LCDConfig.v_MaxSupportedChars_U8) || (v_lcdData
      +                          _u8=='\n'))
  3935  0918  1683               	bsf	3,5	;RP0=1, select bank1
  3936  0919  1303               	bcf	3,6	;RP1=0, select bank1
  3937  091A  0821               	movf	(_LCDConfig^(0+128)+1),w
  3938  091B  1283               	bcf	3,5	;RP0=0, select bank0
  3939  091C  1303               	bcf	3,6	;RP1=0, select bank0
  3940  091D  026D               	subwf	_v_LcdTrackCursorPos_U8,w
  3941  091E  1803               	skipnc
  3942  091F  2924               	goto	l1959
  3943  0920  300A               	movlw	10
  3944  0921  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  3945  0922  1D03               	btfss	3,2
  3946  0923  2929               	goto	l1961
  3947  0924                     l1959:	
  3948                           
  3949                           ;lcd.c: 395: {
  3950                           ;lcd.c: 398: LCD_GoToNextLine();
  3951  0924  120A  158A  20E6  120A  158A  	fcall	_LCD_GoToNextLine
  3952  0929                     l1961:	
  3953                           
  3954                           ;lcd.c: 399: }
  3955                           ;lcd.c: 400: if(v_lcdData_u8!='\n')
  3956  0929  300A               	movlw	10
  3957  092A  067C               	xorwf	LCD_DisplayChar@v_lcdData_u8,w
  3958  092B  1903               	btfsc	3,2
  3959  092C  0008               	return
  3960                           
  3961                           ;lcd.c: 401: {
  3962                           ;lcd.c: 403: lcd_DataWrite(v_lcdData_u8);
  3963  092D  087C               	movf	LCD_DisplayChar@v_lcdData_u8,w
  3964  092E  120A  158A  21F3   	fcall	_lcd_DataWrite
  3965                           
  3966                           ;lcd.c: 404: v_LcdTrackCursorPos_U8++;
  3967  0931  3001               	movlw	1
  3968  0932  00FB               	movwf	??_LCD_DisplayChar
  3969  0933  087B               	movf	??_LCD_DisplayChar,w
  3970  0934  1283               	bcf	3,5	;RP0=0, select bank0
  3971  0935  1303               	bcf	3,6	;RP1=0, select bank0
  3972  0936  07ED               	addwf	_v_LcdTrackCursorPos_U8,f
  3973  0937  0008               	return
  3974  0938                     __end_of_LCD_DisplayChar:	
  3975                           
  3976                           	psect	text15
  3977  09F3                     __ptext15:	
  3978 ;; *************** function _lcd_DataWrite *****************
  3979 ;; Defined at:
  3980 ;;		line 825 in file "../00-libfiles/lcd.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  dataByte        1    wreg     unsigned char 
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;  dataByte        1    9[COMMON] unsigned char 
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  1    wreg      void 
  3987 ;; Registers used:
  3988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3994 ;;      Params:         0       0       0       0       0
  3995 ;;      Locals:         1       0       0       0       0
  3996 ;;      Temps:          2       0       0       0       0
  3997 ;;      Totals:         3       0       0       0       0
  3998 ;;Total ram usage:        3 bytes
  3999 ;; Hardware stack levels used:    1
  4000 ;; Hardware stack levels required when called:    3
  4001 ;; This function calls:
  4002 ;;		_lcd_BusyCheck
  4003 ;;		_lcd_SendDataSignals
  4004 ;;		_lcd_SendHigherNibble
  4005 ;;		_lcd_SendLowerNibble
  4006 ;; This function is called by:
  4007 ;;		_LCD_DisplayChar
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           
  4012                           ;psect for function _lcd_DataWrite
  4013  09F3                     _lcd_DataWrite:	
  4014                           
  4015                           ;incstack = 0
  4016                           ; Regs used in _lcd_DataWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4017                           ;lcd_DataWrite@dataByte stored from wreg
  4018  09F3  00F9               	movwf	lcd_DataWrite@dataByte
  4019                           
  4020                           ;lcd.c: 827: lcd_BusyCheck();
  4021  09F4  120A  158A  2647  120A  158A  	fcall	_lcd_BusyCheck
  4022                           
  4023                           ;lcd.c: 828: if(LCDConfig.v_LcdMode_U8 == 8u)
  4024  09F9  3008               	movlw	8
  4025  09FA  1683               	bsf	3,5	;RP0=1, select bank1
  4026  09FB  1303               	bcf	3,6	;RP1=0, select bank1
  4027  09FC  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  4028  09FD  1D03               	btfss	3,2
  4029  09FE  2A06               	goto	l1947
  4030                           
  4031                           ;lcd.c: 829: {
  4032                           ;lcd.c: 830: lcd_SendLowerNibble(dataByte);
  4033  09FF  0879               	movf	lcd_DataWrite@dataByte,w
  4034  0A00  120A  158A  2268  120A  158A  	fcall	_lcd_SendLowerNibble
  4035                           
  4036                           ;lcd.c: 831: }
  4037  0A05  2A1E               	goto	l1951
  4038  0A06                     l1947:	
  4039                           
  4040                           ;lcd.c: 832: else
  4041                           ;lcd.c: 833: {
  4042                           ;lcd.c: 834: lcd_SendHigherNibble(dataByte);
  4043  0A06  0879               	movf	lcd_DataWrite@dataByte,w
  4044  0A07  120A  158A  2228  120A  158A  	fcall	_lcd_SendHigherNibble
  4045                           
  4046                           ;lcd.c: 835: lcd_SendDataSignals();
  4047  0A0C  120A  158A  2190  120A  158A  	fcall	_lcd_SendDataSignals
  4048                           
  4049                           ;lcd.c: 836: dataByte = dataByte << 4;
  4050  0A11  0879               	movf	lcd_DataWrite@dataByte,w
  4051  0A12  00F7               	movwf	??_lcd_DataWrite
  4052  0A13  3003               	movlw	3
  4053  0A14                     u2895:	
  4054  0A14  1003               	clrc
  4055  0A15  0DF7               	rlf	??_lcd_DataWrite,f
  4056  0A16  3EFF               	addlw	-1
  4057  0A17  1D03               	skipz
  4058  0A18  2A14               	goto	u2895
  4059  0A19  1003               	clrc
  4060  0A1A  0D77               	rlf	??_lcd_DataWrite,w
  4061  0A1B  00F8               	movwf	??_lcd_DataWrite+1
  4062  0A1C  0878               	movf	??_lcd_DataWrite+1,w
  4063  0A1D  00F9               	movwf	lcd_DataWrite@dataByte
  4064  0A1E                     l1951:	
  4065                           
  4066                           ;lcd.c: 837: }
  4067                           ;lcd.c: 839: lcd_SendHigherNibble(dataByte);
  4068  0A1E  0879               	movf	lcd_DataWrite@dataByte,w
  4069  0A1F  120A  158A  2228  120A  158A  	fcall	_lcd_SendHigherNibble
  4070                           
  4071                           ;lcd.c: 840: lcd_SendDataSignals();
  4072  0A24  120A  158A  2190   	fcall	_lcd_SendDataSignals
  4073  0A27  0008               	return
  4074  0A28                     __end_of_lcd_DataWrite:	
  4075                           
  4076                           	psect	text16
  4077  0990                     __ptext16:	
  4078 ;; *************** function _lcd_SendDataSignals *****************
  4079 ;; Defined at:
  4080 ;;		line 1001 in file "../00-libfiles/lcd.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;		None
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4094 ;;      Params:         0       0       0       0       0
  4095 ;;      Locals:         0       0       0       0       0
  4096 ;;      Temps:          0       0       0       0       0
  4097 ;;      Totals:         0       0       0       0       0
  4098 ;;Total ram usage:        0 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    1
  4101 ;; This function calls:
  4102 ;;		_DELAY_us
  4103 ;;		_GPIO_PinWrite
  4104 ;; This function is called by:
  4105 ;;		_lcd_DataWrite
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           
  4110                           ;psect for function _lcd_SendDataSignals
  4111  0990                     _lcd_SendDataSignals:	
  4112                           
  4113                           ;lcd.c: 1003: GPIO_PinWrite(LCDConfig.RS,1);
  4114                           
  4115                           ;incstack = 0
  4116                           ; Regs used in _lcd_SendDataSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4117  0990  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4118  0991  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  4119  0992  1683               	bsf	3,5	;RP0=1, select bank1
  4120  0993  1303               	bcf	3,6	;RP1=0, select bank1
  4121  0994  0823               	movf	(_LCDConfig^(0+128)+3),w
  4122  0995  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  4123                           
  4124                           ;lcd.c: 1004: GPIO_PinWrite(LCDConfig.RW,0);
  4125  099A  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4126  099B  1683               	bsf	3,5	;RP0=1, select bank1
  4127  099C  1303               	bcf	3,6	;RP1=0, select bank1
  4128  099D  0824               	movf	(_LCDConfig^(0+128)+4),w
  4129  099E  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  4130                           
  4131                           ;lcd.c: 1005: GPIO_PinWrite(LCDConfig.EN,1);
  4132  09A3  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4133  09A4  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  4134  09A5  1683               	bsf	3,5	;RP0=1, select bank1
  4135  09A6  1303               	bcf	3,6	;RP1=0, select bank1
  4136  09A7  0825               	movf	(_LCDConfig^(0+128)+5),w
  4137  09A8  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  4138                           
  4139                           ;lcd.c: 1006: DELAY_us(10);
  4140  09AD  300A               	movlw	10
  4141  09AE  00F0               	movwf	DELAY_us@us_count
  4142  09AF  3000               	movlw	0
  4143  09B0  00F1               	movwf	DELAY_us@us_count+1
  4144  09B1  120A  158A  2092  120A  158A  	fcall	_DELAY_us
  4145                           
  4146                           ;lcd.c: 1007: GPIO_PinWrite(LCDConfig.EN,0);
  4147  09B6  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4148  09B7  1683               	bsf	3,5	;RP0=1, select bank1
  4149  09B8  1303               	bcf	3,6	;RP1=0, select bank1
  4150  09B9  0825               	movf	(_LCDConfig^(0+128)+5),w
  4151  09BA  120A  118A  2205   	fcall	_GPIO_PinWrite
  4152  09BD  0008               	return
  4153  09BE                     __end_of_lcd_SendDataSignals:	
  4154                           
  4155                           	psect	text17
  4156  08E6                     __ptext17:	
  4157 ;; *************** function _LCD_GoToNextLine *****************
  4158 ;; Defined at:
  4159 ;;		line 292 in file "../00-libfiles/lcd.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;		None
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;		None
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      void 
  4166 ;; Registers used:
  4167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4173 ;;      Params:         0       0       0       0       0
  4174 ;;      Locals:         0       0       0       0       0
  4175 ;;      Temps:          1       0       0       0       0
  4176 ;;      Totals:         1       0       0       0       0
  4177 ;;Total ram usage:        1 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    4
  4180 ;; This function calls:
  4181 ;;		_LCD_CmdWrite
  4182 ;; This function is called by:
  4183 ;;		_LCD_DisplayChar
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           
  4188                           ;psect for function _LCD_GoToNextLine
  4189  08E6                     _LCD_GoToNextLine:	
  4190                           
  4191                           ;lcd.c: 296: v_LcdTrackLineNum_U8++;
  4192                           
  4193                           ;incstack = 0
  4194                           ; Regs used in _LCD_GoToNextLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4195  08E6  3001               	movlw	1
  4196  08E7  00FA               	movwf	??_LCD_GoToNextLine
  4197  08E8  087A               	movf	??_LCD_GoToNextLine,w
  4198  08E9  1283               	bcf	3,5	;RP0=0, select bank0
  4199  08EA  1303               	bcf	3,6	;RP1=0, select bank0
  4200  08EB  07EE               	addwf	_v_LcdTrackLineNum_U8,f
  4201                           
  4202                           ;lcd.c: 297: v_LcdTrackCursorPos_U8 = 0x00;
  4203  08EC  01ED               	clrf	_v_LcdTrackCursorPos_U8
  4204                           
  4205                           ;lcd.c: 298: if(v_LcdTrackLineNum_U8 >= LCDConfig.v_MaxSupportedLines_U8)
  4206  08ED  1683               	bsf	3,5	;RP0=1, select bank1
  4207  08EE  1303               	bcf	3,6	;RP1=0, select bank1
  4208  08EF  0820               	movf	_LCDConfig^(0+128),w
  4209  08F0  1283               	bcf	3,5	;RP0=0, select bank0
  4210  08F1  1303               	bcf	3,6	;RP1=0, select bank0
  4211  08F2  026E               	subwf	_v_LcdTrackLineNum_U8,w
  4212  08F3  1803               	btfsc	3,0
  4213                           
  4214                           ;lcd.c: 299: v_LcdTrackLineNum_U8 = 0x00;
  4215  08F4  01EE               	clrf	_v_LcdTrackLineNum_U8
  4216                           
  4217                           ;lcd.c: 300: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_LcdTrackLineNum_U8]);
  4218  08F5  086E               	movf	_v_LcdTrackLineNum_U8,w
  4219  08F6  3EB6               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  4220  08F7  0084               	movwf	4
  4221  08F8  1383               	bcf	3,7	;select IRP bank1
  4222  08F9  0800               	movf	0,w
  4223  08FA  120A  158A  21BE   	fcall	_LCD_CmdWrite
  4224  08FD  0008               	return
  4225  08FE                     __end_of_LCD_GoToNextLine:	
  4226                           
  4227                           	psect	text18
  4228  0AF7                     __ptext18:	
  4229 ;; *************** function _LCD_Init *****************
  4230 ;; Defined at:
  4231 ;;		line 198 in file "../00-libfiles/lcd.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  v_lcdNoOfLin    1    wreg     unsigned char 
  4234 ;;  v_MaxCharsPe    1   12[COMMON] unsigned char 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;  v_lcdNoOfLin    1    0[BANK0 ] unsigned char 
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4246 ;;      Params:         1       0       0       0       0
  4247 ;;      Locals:         0       1       0       0       0
  4248 ;;      Temps:          1       0       0       0       0
  4249 ;;      Totals:         2       1       0       0       0
  4250 ;;Total ram usage:        3 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; Hardware stack levels required when called:    6
  4253 ;; This function calls:
  4254 ;;		_DELAY_ms
  4255 ;;		_LCD_Clear
  4256 ;;		_LCD_CmdWrite
  4257 ;;		_lcd_Reset
  4258 ;; This function is called by:
  4259 ;;		_main
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           
  4264                           ;psect for function _LCD_Init
  4265  0AF7                     _LCD_Init:	
  4266                           
  4267                           ;incstack = 0
  4268                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4269                           ;LCD_Init@v_lcdNoOfLines_u8 stored from wreg
  4270  0AF7  1283               	bcf	3,5	;RP0=0, select bank0
  4271  0AF8  1303               	bcf	3,6	;RP1=0, select bank0
  4272  0AF9  00A0               	movwf	LCD_Init@v_lcdNoOfLines_u8
  4273                           
  4274                           ;lcd.c: 202: LCDConfig.v_MaxSupportedChars_U8 = v_MaxCharsPerLine_u8;
  4275  0AFA  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  4276  0AFB  00FD               	movwf	??_LCD_Init
  4277  0AFC  087D               	movf	??_LCD_Init,w
  4278  0AFD  1683               	bsf	3,5	;RP0=1, select bank1
  4279  0AFE  1303               	bcf	3,6	;RP1=0, select bank1
  4280  0AFF  00A1               	movwf	(_LCDConfig^(0+128)+1)
  4281                           
  4282                           ;lcd.c: 203: LCDConfig.v_MaxSupportedLines_U8 = v_lcdNoOfLines_u8;
  4283  0B00  1283               	bcf	3,5	;RP0=0, select bank0
  4284  0B01  1303               	bcf	3,6	;RP1=0, select bank0
  4285  0B02  0820               	movf	LCD_Init@v_lcdNoOfLines_u8,w
  4286  0B03  00FD               	movwf	??_LCD_Init
  4287  0B04  087D               	movf	??_LCD_Init,w
  4288  0B05  1683               	bsf	3,5	;RP0=1, select bank1
  4289  0B06  1303               	bcf	3,6	;RP1=0, select bank1
  4290  0B07  00A0               	movwf	_LCDConfig^(0+128)
  4291                           
  4292                           ;lcd.c: 204: if(v_lcdNoOfLines_u8 > 0x02)
  4293  0B08  3003               	movlw	3
  4294  0B09  1283               	bcf	3,5	;RP0=0, select bank0
  4295  0B0A  1303               	bcf	3,6	;RP1=0, select bank0
  4296  0B0B  0220               	subwf	LCD_Init@v_lcdNoOfLines_u8,w
  4297  0B0C  1C03               	skipc
  4298  0B0D  2B1C               	goto	l2521
  4299                           
  4300                           ;lcd.c: 205: {
  4301                           ;lcd.c: 206: ARR_LcdLineNumAddress_U8[0x02] = 0x90 + (v_MaxCharsPerLine_u8 & 0x0fu);
  4302  0B0E  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  4303  0B0F  390F               	andlw	15
  4304  0B10  3E90               	addlw	144
  4305  0B11  00FD               	movwf	??_LCD_Init
  4306  0B12  087D               	movf	??_LCD_Init,w
  4307  0B13  1683               	bsf	3,5	;RP0=1, select bank1
  4308  0B14  1303               	bcf	3,6	;RP1=0, select bank1
  4309  0B15  00B8               	movwf	(_ARR_LcdLineNumAddress_U8^(0+128)+2)
  4310                           
  4311                           ;lcd.c: 207: ARR_LcdLineNumAddress_U8[0x03] = 0xd0 + (v_MaxCharsPerLine_u8 & 0x0fu);
  4312  0B16  087C               	movf	LCD_Init@v_MaxCharsPerLine_u8,w
  4313  0B17  390F               	andlw	15
  4314  0B18  3ED0               	addlw	208
  4315  0B19  00FD               	movwf	??_LCD_Init
  4316  0B1A  087D               	movf	??_LCD_Init,w
  4317  0B1B  00B9               	movwf	(_ARR_LcdLineNumAddress_U8^(0+128)+3)
  4318  0B1C                     l2521:	
  4319                           
  4320                           ;lcd.c: 208: }
  4321                           ;lcd.c: 210: DELAY_ms(100);
  4322  0B1C  3064               	movlw	100
  4323  0B1D  00F2               	movwf	DELAY_ms@ms_count
  4324  0B1E  3000               	movlw	0
  4325  0B1F  00F3               	movwf	DELAY_ms@ms_count+1
  4326  0B20  120A  158A  20BB  120A  158A  	fcall	_DELAY_ms
  4327                           
  4328                           ;lcd.c: 212: if(LCDConfig.v_LcdMode_U8 == 8u)
  4329  0B25  3008               	movlw	8
  4330  0B26  1683               	bsf	3,5	;RP0=1, select bank1
  4331  0B27  1303               	bcf	3,6	;RP1=0, select bank1
  4332  0B28  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  4333  0B29  1D03               	btfss	3,2
  4334  0B2A  2B2D               	goto	l2527
  4335                           
  4336                           ;lcd.c: 213: {
  4337                           ;lcd.c: 214: LCD_CmdWrite(0x38u);
  4338  0B2B  3038               	movlw	56
  4339  0B2C  2B39               	goto	L3
  4340  0B2D                     l2527:	
  4341                           ;lcd.c: 215: }
  4342                           
  4343                           
  4344                           ;lcd.c: 216: else if(LCDConfig.v_LcdMode_U8 == 4u)
  4345  0B2D  3004               	movlw	4
  4346  0B2E  1683               	bsf	3,5	;RP0=1, select bank1
  4347  0B2F  1303               	bcf	3,6	;RP1=0, select bank1
  4348  0B30  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  4349  0B31  1D03               	btfss	3,2
  4350  0B32  2B3E               	goto	l216
  4351                           
  4352                           ;lcd.c: 217: {
  4353                           ;lcd.c: 218: lcd_Reset();
  4354  0B33  120A  158A  22A8  120A  158A  	fcall	_lcd_Reset
  4355                           
  4356                           ;lcd.c: 219: LCD_CmdWrite(0x28u);
  4357  0B38  3028               	movlw	40
  4358  0B39                     L3:	
  4359  0B39  120A  158A  21BE  120A  158A  	fcall	_LCD_CmdWrite
  4360  0B3E                     l216:	
  4361                           
  4362                           ;lcd.c: 220: }
  4363                           ;lcd.c: 222: LCD_CmdWrite(0x0Eu);
  4364  0B3E  300E               	movlw	14
  4365  0B3F  120A  158A  21BE  120A  158A  	fcall	_LCD_CmdWrite
  4366                           
  4367                           ;lcd.c: 223: LCD_Clear();
  4368  0B44  120A  158A  209D   	fcall	_LCD_Clear
  4369  0B47  0008               	return
  4370  0B48                     __end_of_LCD_Init:	
  4371                           
  4372                           	psect	text19
  4373  0AA8                     __ptext19:	
  4374 ;; *************** function _lcd_Reset *****************
  4375 ;; Defined at:
  4376 ;;		line 912 in file "../00-libfiles/lcd.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;		None
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;		None
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  1    wreg      void 
  4383 ;; Registers used:
  4384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4390 ;;      Params:         0       0       0       0       0
  4391 ;;      Locals:         0       0       0       0       0
  4392 ;;      Temps:          0       0       0       0       0
  4393 ;;      Totals:         0       0       0       0       0
  4394 ;;Total ram usage:        0 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; Hardware stack levels required when called:    2
  4397 ;; This function calls:
  4398 ;;		_DELAY_ms
  4399 ;;		_DELAY_us
  4400 ;;		_lcd_SendCmdSignals
  4401 ;;		_lcd_SendHigherNibble
  4402 ;; This function is called by:
  4403 ;;		_LCD_Init
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           
  4408                           ;psect for function _lcd_Reset
  4409  0AA8                     _lcd_Reset:	
  4410                           
  4411                           ;lcd.c: 915: lcd_SendHigherNibble(0x30);
  4412                           
  4413                           ;incstack = 0
  4414                           ; Regs used in _lcd_Reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4415  0AA8  3030               	movlw	48
  4416  0AA9  120A  158A  2228  120A  158A  	fcall	_lcd_SendHigherNibble
  4417                           
  4418                           ;lcd.c: 916: lcd_SendCmdSignals();
  4419  0AAE  120A  158A  2163  120A  158A  	fcall	_lcd_SendCmdSignals
  4420                           
  4421                           ;lcd.c: 917: DELAY_ms(100);
  4422  0AB3  3064               	movlw	100
  4423  0AB4  00F2               	movwf	DELAY_ms@ms_count
  4424  0AB5  3000               	movlw	0
  4425  0AB6  00F3               	movwf	DELAY_ms@ms_count+1
  4426  0AB7  120A  158A  20BB  120A  158A  	fcall	_DELAY_ms
  4427                           
  4428                           ;lcd.c: 918: lcd_SendHigherNibble(0x30);
  4429  0ABC  3030               	movlw	48
  4430  0ABD  120A  158A  2228  120A  158A  	fcall	_lcd_SendHigherNibble
  4431                           
  4432                           ;lcd.c: 919: lcd_SendCmdSignals();
  4433  0AC2  120A  158A  2163  120A  158A  	fcall	_lcd_SendCmdSignals
  4434                           
  4435                           ;lcd.c: 920: DELAY_us(200);
  4436  0AC7  30C8               	movlw	200
  4437  0AC8  00F0               	movwf	DELAY_us@us_count
  4438  0AC9  3000               	movlw	0
  4439  0ACA  00F1               	movwf	DELAY_us@us_count+1
  4440  0ACB  120A  158A  2092  120A  158A  	fcall	_DELAY_us
  4441                           
  4442                           ;lcd.c: 921: lcd_SendHigherNibble(0x30);
  4443  0AD0  3030               	movlw	48
  4444  0AD1  120A  158A  2228  120A  158A  	fcall	_lcd_SendHigherNibble
  4445                           
  4446                           ;lcd.c: 922: lcd_SendCmdSignals();
  4447  0AD6  120A  158A  2163  120A  158A  	fcall	_lcd_SendCmdSignals
  4448                           
  4449                           ;lcd.c: 923: DELAY_us(200);
  4450  0ADB  30C8               	movlw	200
  4451  0ADC  00F0               	movwf	DELAY_us@us_count
  4452  0ADD  3000               	movlw	0
  4453  0ADE  00F1               	movwf	DELAY_us@us_count+1
  4454  0ADF  120A  158A  2092  120A  158A  	fcall	_DELAY_us
  4455                           
  4456                           ;lcd.c: 924: lcd_SendHigherNibble(0x20);
  4457  0AE4  3020               	movlw	32
  4458  0AE5  120A  158A  2228  120A  158A  	fcall	_lcd_SendHigherNibble
  4459                           
  4460                           ;lcd.c: 925: lcd_SendCmdSignals();
  4461  0AEA  120A  158A  2163  120A  158A  	fcall	_lcd_SendCmdSignals
  4462                           
  4463                           ;lcd.c: 926: DELAY_us(200);
  4464  0AEF  30C8               	movlw	200
  4465  0AF0  00F0               	movwf	DELAY_us@us_count
  4466  0AF1  3000               	movlw	0
  4467  0AF2  00F1               	movwf	DELAY_us@us_count+1
  4468  0AF3  120A  158A  2092   	fcall	_DELAY_us
  4469  0AF6  0008               	return
  4470  0AF7                     __end_of_lcd_Reset:	
  4471                           
  4472                           	psect	text20
  4473  089D                     __ptext20:	
  4474 ;; *************** function _LCD_Clear *****************
  4475 ;; Defined at:
  4476 ;;		line 237 in file "../00-libfiles/lcd.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;		None
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;		None
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4490 ;;      Params:         0       0       0       0       0
  4491 ;;      Locals:         0       0       0       0       0
  4492 ;;      Temps:          0       0       0       0       0
  4493 ;;      Totals:         0       0       0       0       0
  4494 ;;Total ram usage:        0 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; Hardware stack levels required when called:    5
  4497 ;; This function calls:
  4498 ;;		_LCD_CmdWrite
  4499 ;;		_LCD_GoToLine
  4500 ;; This function is called by:
  4501 ;;		_LCD_Init
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           
  4506                           ;psect for function _LCD_Clear
  4507  089D                     _LCD_Clear:	
  4508                           
  4509                           ;lcd.c: 239: LCD_CmdWrite(0x01u);
  4510                           
  4511                           ;incstack = 0
  4512                           ; Regs used in _LCD_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4513  089D  3001               	movlw	1
  4514  089E  120A  158A  21BE  120A  158A  	fcall	_LCD_CmdWrite
  4515                           
  4516                           ;lcd.c: 240: LCD_GoToLine(0x00);
  4517  08A3  3000               	movlw	0
  4518  08A4  120A  158A  20CF   	fcall	_LCD_GoToLine
  4519  08A7  0008               	return
  4520  08A8                     __end_of_LCD_Clear:	
  4521                           
  4522                           	psect	text21
  4523  08CF                     __ptext21:	
  4524 ;; *************** function _LCD_GoToLine *****************
  4525 ;; Defined at:
  4526 ;;		line 265 in file "../00-libfiles/lcd.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  v_lineNumber    1    wreg     unsigned char 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  v_lineNumber    1   11[COMMON] unsigned char 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  1    wreg      void 
  4533 ;; Registers used:
  4534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4540 ;;      Params:         0       0       0       0       0
  4541 ;;      Locals:         1       0       0       0       0
  4542 ;;      Temps:          1       0       0       0       0
  4543 ;;      Totals:         2       0       0       0       0
  4544 ;;Total ram usage:        2 bytes
  4545 ;; Hardware stack levels used:    1
  4546 ;; Hardware stack levels required when called:    4
  4547 ;; This function calls:
  4548 ;;		_LCD_CmdWrite
  4549 ;; This function is called by:
  4550 ;;		_LCD_Clear
  4551 ;;		_main
  4552 ;;		_LCD_ScrollMessage
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           
  4557                           ;psect for function _LCD_GoToLine
  4558  08CF                     _LCD_GoToLine:	
  4559                           
  4560                           ;incstack = 0
  4561                           ; Regs used in _LCD_GoToLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4562                           ;LCD_GoToLine@v_lineNumber_u8 stored from wreg
  4563  08CF  00FB               	movwf	LCD_GoToLine@v_lineNumber_u8
  4564                           
  4565                           ;lcd.c: 267: if(v_lineNumber_u8 < LCDConfig.v_MaxSupportedLines_U8)
  4566  08D0  1683               	bsf	3,5	;RP0=1, select bank1
  4567  08D1  1303               	bcf	3,6	;RP1=0, select bank1
  4568  08D2  0820               	movf	_LCDConfig^(0+128),w
  4569  08D3  027B               	subwf	LCD_GoToLine@v_lineNumber_u8,w
  4570  08D4  1803               	skipnc
  4571  08D5  0008               	return
  4572                           
  4573                           ;lcd.c: 268: {
  4574                           ;lcd.c: 271: v_LcdTrackCursorPos_U8 = 0x00;
  4575  08D6  1283               	bcf	3,5	;RP0=0, select bank0
  4576  08D7  1303               	bcf	3,6	;RP1=0, select bank0
  4577  08D8  01ED               	clrf	_v_LcdTrackCursorPos_U8
  4578                           
  4579                           ;lcd.c: 272: v_LcdTrackLineNum_U8 = v_lineNumber_u8;
  4580  08D9  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  4581  08DA  00FA               	movwf	??_LCD_GoToLine
  4582  08DB  087A               	movf	??_LCD_GoToLine,w
  4583  08DC  00EE               	movwf	_v_LcdTrackLineNum_U8
  4584                           
  4585                           ;lcd.c: 273: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_lineNumber_u8]);
  4586  08DD  087B               	movf	LCD_GoToLine@v_lineNumber_u8,w
  4587  08DE  3EB6               	addlw	(low (_ARR_LcdLineNumAddress_U8| 0))& (0+255)
  4588  08DF  0084               	movwf	4
  4589  08E0  1383               	bcf	3,7	;select IRP bank1
  4590  08E1  0800               	movf	0,w
  4591  08E2  120A  158A  21BE   	fcall	_LCD_CmdWrite
  4592  08E5  0008               	return
  4593  08E6                     __end_of_LCD_GoToLine:	
  4594                           
  4595                           	psect	text22
  4596  09BE                     __ptext22:	
  4597 ;; *************** function _LCD_CmdWrite *****************
  4598 ;; Defined at:
  4599 ;;		line 358 in file "../00-libfiles/lcd.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  v_lcdCmd_u8     1    wreg     unsigned char 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  v_lcdCmd_u8     1    9[COMMON] unsigned char 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  1    wreg      void 
  4606 ;; Registers used:
  4607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4613 ;;      Params:         0       0       0       0       0
  4614 ;;      Locals:         1       0       0       0       0
  4615 ;;      Temps:          2       0       0       0       0
  4616 ;;      Totals:         3       0       0       0       0
  4617 ;;Total ram usage:        3 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; Hardware stack levels required when called:    3
  4620 ;; This function calls:
  4621 ;;		_lcd_BusyCheck
  4622 ;;		_lcd_SendCmdSignals
  4623 ;;		_lcd_SendHigherNibble
  4624 ;;		_lcd_SendLowerNibble
  4625 ;; This function is called by:
  4626 ;;		_LCD_Init
  4627 ;;		_LCD_Clear
  4628 ;;		_LCD_GoToLine
  4629 ;;		_LCD_GoToNextLine
  4630 ;;		_LCD_ScrollMessage
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           
  4635                           ;psect for function _LCD_CmdWrite
  4636  09BE                     _LCD_CmdWrite:	
  4637                           
  4638                           ;incstack = 0
  4639                           ; Regs used in _LCD_CmdWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4640                           ;LCD_CmdWrite@v_lcdCmd_u8 stored from wreg
  4641  09BE  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  4642                           
  4643                           ;lcd.c: 360: lcd_BusyCheck();
  4644  09BF  120A  158A  2647  120A  158A  	fcall	_lcd_BusyCheck
  4645                           
  4646                           ;lcd.c: 361: if(LCDConfig.v_LcdMode_U8 == 8u)
  4647  09C4  3008               	movlw	8
  4648  09C5  1683               	bsf	3,5	;RP0=1, select bank1
  4649  09C6  1303               	bcf	3,6	;RP1=0, select bank1
  4650  09C7  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  4651  09C8  1D03               	btfss	3,2
  4652  09C9  29D1               	goto	l1917
  4653                           
  4654                           ;lcd.c: 362: {
  4655                           ;lcd.c: 363: lcd_SendLowerNibble(v_lcdCmd_u8);
  4656  09CA  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  4657  09CB  120A  158A  2268  120A  158A  	fcall	_lcd_SendLowerNibble
  4658                           
  4659                           ;lcd.c: 364: }
  4660  09D0  29E9               	goto	l1921
  4661  09D1                     l1917:	
  4662                           
  4663                           ;lcd.c: 365: else
  4664                           ;lcd.c: 366: {
  4665                           ;lcd.c: 367: lcd_SendHigherNibble(v_lcdCmd_u8);
  4666  09D1  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  4667  09D2  120A  158A  2228  120A  158A  	fcall	_lcd_SendHigherNibble
  4668                           
  4669                           ;lcd.c: 368: lcd_SendCmdSignals();
  4670  09D7  120A  158A  2163  120A  158A  	fcall	_lcd_SendCmdSignals
  4671                           
  4672                           ;lcd.c: 369: v_lcdCmd_u8 = v_lcdCmd_u8 << 4;
  4673  09DC  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  4674  09DD  00F7               	movwf	??_LCD_CmdWrite
  4675  09DE  3003               	movlw	3
  4676  09DF                     u2865:	
  4677  09DF  1003               	clrc
  4678  09E0  0DF7               	rlf	??_LCD_CmdWrite,f
  4679  09E1  3EFF               	addlw	-1
  4680  09E2  1D03               	skipz
  4681  09E3  29DF               	goto	u2865
  4682  09E4  1003               	clrc
  4683  09E5  0D77               	rlf	??_LCD_CmdWrite,w
  4684  09E6  00F8               	movwf	??_LCD_CmdWrite+1
  4685  09E7  0878               	movf	??_LCD_CmdWrite+1,w
  4686  09E8  00F9               	movwf	LCD_CmdWrite@v_lcdCmd_u8
  4687  09E9                     l1921:	
  4688                           
  4689                           ;lcd.c: 370: }
  4690                           ;lcd.c: 372: lcd_SendHigherNibble(v_lcdCmd_u8);
  4691  09E9  0879               	movf	LCD_CmdWrite@v_lcdCmd_u8,w
  4692  09EA  120A  158A  2228  120A  158A  	fcall	_lcd_SendHigherNibble
  4693                           
  4694                           ;lcd.c: 373: lcd_SendCmdSignals();
  4695  09EF  120A  158A  2163   	fcall	_lcd_SendCmdSignals
  4696  09F2  0008               	return
  4697  09F3                     __end_of_LCD_CmdWrite:	
  4698                           
  4699                           	psect	text23
  4700  0A68                     __ptext23:	
  4701 ;; *************** function _lcd_SendLowerNibble *****************
  4702 ;; Defined at:
  4703 ;;		line 961 in file "../00-libfiles/lcd.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  dataByte        1    wreg     unsigned char 
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  dataByte        1    6[COMMON] unsigned char 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      void 
  4710 ;; Registers used:
  4711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4717 ;;      Params:         0       0       0       0       0
  4718 ;;      Locals:         1       0       0       0       0
  4719 ;;      Temps:          1       0       0       0       0
  4720 ;;      Totals:         2       0       0       0       0
  4721 ;;Total ram usage:        2 bytes
  4722 ;; Hardware stack levels used:    1
  4723 ;; Hardware stack levels required when called:    1
  4724 ;; This function calls:
  4725 ;;		_GPIO_PinWrite
  4726 ;; This function is called by:
  4727 ;;		_LCD_CmdWrite
  4728 ;;		_lcd_DataWrite
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           
  4733                           ;psect for function _lcd_SendLowerNibble
  4734  0A68                     _lcd_SendLowerNibble:	
  4735                           
  4736                           ;incstack = 0
  4737                           ; Regs used in _lcd_SendLowerNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4738                           ;lcd_SendLowerNibble@dataByte stored from wreg
  4739  0A68  00F6               	movwf	lcd_SendLowerNibble@dataByte
  4740                           
  4741                           ;lcd.c: 963: GPIO_PinWrite(LCDConfig.D0,(((dataByte)&((1<<(0))))!=0u));
  4742  0A69  1C76               	btfss	lcd_SendLowerNibble@dataByte,0
  4743  0A6A  2A6D               	goto	u2690
  4744  0A6B  3001               	movlw	1
  4745  0A6C  2A6E               	goto	u2700
  4746  0A6D                     u2690:	
  4747  0A6D  3000               	movlw	0
  4748  0A6E                     u2700:	
  4749  0A6E  00F5               	movwf	??_lcd_SendLowerNibble
  4750  0A6F  0875               	movf	??_lcd_SendLowerNibble,w
  4751  0A70  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  4752  0A71  1683               	bsf	3,5	;RP0=1, select bank1
  4753  0A72  1303               	bcf	3,6	;RP1=0, select bank1
  4754  0A73  0826               	movf	(_LCDConfig^(0+128)+6),w
  4755  0A74  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  4756                           
  4757                           ;lcd.c: 964: GPIO_PinWrite(LCDConfig.D1,(((dataByte)&((1<<(1))))!=0u));
  4758  0A79  1CF6               	btfss	lcd_SendLowerNibble@dataByte,1
  4759  0A7A  2A7D               	goto	u2710
  4760  0A7B  3001               	movlw	1
  4761  0A7C  2A7E               	goto	u2720
  4762  0A7D                     u2710:	
  4763  0A7D  3000               	movlw	0
  4764  0A7E                     u2720:	
  4765  0A7E  00F5               	movwf	??_lcd_SendLowerNibble
  4766  0A7F  0875               	movf	??_lcd_SendLowerNibble,w
  4767  0A80  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  4768  0A81  1683               	bsf	3,5	;RP0=1, select bank1
  4769  0A82  1303               	bcf	3,6	;RP1=0, select bank1
  4770  0A83  0827               	movf	(_LCDConfig^(0+128)+7),w
  4771  0A84  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  4772                           
  4773                           ;lcd.c: 965: GPIO_PinWrite(LCDConfig.D2,(((dataByte)&((1<<(2))))!=0u));
  4774  0A89  1D76               	btfss	lcd_SendLowerNibble@dataByte,2
  4775  0A8A  2A8D               	goto	u2730
  4776  0A8B  3001               	movlw	1
  4777  0A8C  2A8E               	goto	u2740
  4778  0A8D                     u2730:	
  4779  0A8D  3000               	movlw	0
  4780  0A8E                     u2740:	
  4781  0A8E  00F5               	movwf	??_lcd_SendLowerNibble
  4782  0A8F  0875               	movf	??_lcd_SendLowerNibble,w
  4783  0A90  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  4784  0A91  1683               	bsf	3,5	;RP0=1, select bank1
  4785  0A92  1303               	bcf	3,6	;RP1=0, select bank1
  4786  0A93  0828               	movf	(_LCDConfig^(0+128)+8),w
  4787  0A94  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  4788                           
  4789                           ;lcd.c: 966: GPIO_PinWrite(LCDConfig.D3,(((dataByte)&((1<<(3))))!=0u));
  4790  0A99  1DF6               	btfss	lcd_SendLowerNibble@dataByte,3
  4791  0A9A  2A9D               	goto	u2750
  4792  0A9B  3001               	movlw	1
  4793  0A9C  2A9E               	goto	u2760
  4794  0A9D                     u2750:	
  4795  0A9D  3000               	movlw	0
  4796  0A9E                     u2760:	
  4797  0A9E  00F5               	movwf	??_lcd_SendLowerNibble
  4798  0A9F  0875               	movf	??_lcd_SendLowerNibble,w
  4799  0AA0  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  4800  0AA1  1683               	bsf	3,5	;RP0=1, select bank1
  4801  0AA2  1303               	bcf	3,6	;RP1=0, select bank1
  4802  0AA3  0829               	movf	(_LCDConfig^(0+128)+9),w
  4803  0AA4  120A  118A  2205   	fcall	_GPIO_PinWrite
  4804  0AA7  0008               	return
  4805  0AA8                     __end_of_lcd_SendLowerNibble:	
  4806                           
  4807                           	psect	text24
  4808  0A28                     __ptext24:	
  4809 ;; *************** function _lcd_SendHigherNibble *****************
  4810 ;; Defined at:
  4811 ;;		line 942 in file "../00-libfiles/lcd.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;  dataByte        1    wreg     unsigned char 
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;  dataByte        1    6[COMMON] unsigned char 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  1    wreg      void 
  4818 ;; Registers used:
  4819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4825 ;;      Params:         0       0       0       0       0
  4826 ;;      Locals:         1       0       0       0       0
  4827 ;;      Temps:          1       0       0       0       0
  4828 ;;      Totals:         2       0       0       0       0
  4829 ;;Total ram usage:        2 bytes
  4830 ;; Hardware stack levels used:    1
  4831 ;; Hardware stack levels required when called:    1
  4832 ;; This function calls:
  4833 ;;		_GPIO_PinWrite
  4834 ;; This function is called by:
  4835 ;;		_LCD_CmdWrite
  4836 ;;		_lcd_DataWrite
  4837 ;;		_lcd_Reset
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           
  4842                           ;psect for function _lcd_SendHigherNibble
  4843  0A28                     _lcd_SendHigherNibble:	
  4844                           
  4845                           ;incstack = 0
  4846                           ; Regs used in _lcd_SendHigherNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4847                           ;lcd_SendHigherNibble@dataByte stored from wreg
  4848  0A28  00F6               	movwf	lcd_SendHigherNibble@dataByte
  4849                           
  4850                           ;lcd.c: 944: GPIO_PinWrite(LCDConfig.D4,(((dataByte)&((1<<(4))))!=0u));
  4851  0A29  1E76               	btfss	lcd_SendHigherNibble@dataByte,4
  4852  0A2A  2A2D               	goto	u2770
  4853  0A2B  3001               	movlw	1
  4854  0A2C  2A2E               	goto	u2780
  4855  0A2D                     u2770:	
  4856  0A2D  3000               	movlw	0
  4857  0A2E                     u2780:	
  4858  0A2E  00F5               	movwf	??_lcd_SendHigherNibble
  4859  0A2F  0875               	movf	??_lcd_SendHigherNibble,w
  4860  0A30  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  4861  0A31  1683               	bsf	3,5	;RP0=1, select bank1
  4862  0A32  1303               	bcf	3,6	;RP1=0, select bank1
  4863  0A33  082A               	movf	(_LCDConfig^(0+128)+10),w
  4864  0A34  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  4865                           
  4866                           ;lcd.c: 945: GPIO_PinWrite(LCDConfig.D5,(((dataByte)&((1<<(5))))!=0u));
  4867  0A39  1EF6               	btfss	lcd_SendHigherNibble@dataByte,5
  4868  0A3A  2A3D               	goto	u2790
  4869  0A3B  3001               	movlw	1
  4870  0A3C  2A3E               	goto	u2800
  4871  0A3D                     u2790:	
  4872  0A3D  3000               	movlw	0
  4873  0A3E                     u2800:	
  4874  0A3E  00F5               	movwf	??_lcd_SendHigherNibble
  4875  0A3F  0875               	movf	??_lcd_SendHigherNibble,w
  4876  0A40  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  4877  0A41  1683               	bsf	3,5	;RP0=1, select bank1
  4878  0A42  1303               	bcf	3,6	;RP1=0, select bank1
  4879  0A43  082B               	movf	(_LCDConfig^(0+128)+11),w
  4880  0A44  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  4881                           
  4882                           ;lcd.c: 946: GPIO_PinWrite(LCDConfig.D6,(((dataByte)&((1<<(6))))!=0u));
  4883  0A49  1F76               	btfss	lcd_SendHigherNibble@dataByte,6
  4884  0A4A  2A4D               	goto	u2810
  4885  0A4B  3001               	movlw	1
  4886  0A4C  2A4E               	goto	u2820
  4887  0A4D                     u2810:	
  4888  0A4D  3000               	movlw	0
  4889  0A4E                     u2820:	
  4890  0A4E  00F5               	movwf	??_lcd_SendHigherNibble
  4891  0A4F  0875               	movf	??_lcd_SendHigherNibble,w
  4892  0A50  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  4893  0A51  1683               	bsf	3,5	;RP0=1, select bank1
  4894  0A52  1303               	bcf	3,6	;RP1=0, select bank1
  4895  0A53  082C               	movf	(_LCDConfig^(0+128)+12),w
  4896  0A54  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  4897                           
  4898                           ;lcd.c: 947: GPIO_PinWrite(LCDConfig.D7,(((dataByte)&((1<<(7))))!=0u));
  4899  0A59  1FF6               	btfss	lcd_SendHigherNibble@dataByte,7
  4900  0A5A  2A5D               	goto	u2830
  4901  0A5B  3001               	movlw	1
  4902  0A5C  2A5E               	goto	u2840
  4903  0A5D                     u2830:	
  4904  0A5D  3000               	movlw	0
  4905  0A5E                     u2840:	
  4906  0A5E  00F5               	movwf	??_lcd_SendHigherNibble
  4907  0A5F  0875               	movf	??_lcd_SendHigherNibble,w
  4908  0A60  00F0               	movwf	GPIO_PinWrite@var_pinValue_u8
  4909  0A61  1683               	bsf	3,5	;RP0=1, select bank1
  4910  0A62  1303               	bcf	3,6	;RP1=0, select bank1
  4911  0A63  082D               	movf	(_LCDConfig^(0+128)+13),w
  4912  0A64  120A  118A  2205   	fcall	_GPIO_PinWrite
  4913  0A67  0008               	return
  4914  0A68                     __end_of_lcd_SendHigherNibble:	
  4915                           
  4916                           	psect	text25
  4917  0963                     __ptext25:	
  4918 ;; *************** function _lcd_SendCmdSignals *****************
  4919 ;; Defined at:
  4920 ;;		line 980 in file "../00-libfiles/lcd.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;		None
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;		None
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  1    wreg      void 
  4927 ;; Registers used:
  4928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4934 ;;      Params:         0       0       0       0       0
  4935 ;;      Locals:         0       0       0       0       0
  4936 ;;      Temps:          0       0       0       0       0
  4937 ;;      Totals:         0       0       0       0       0
  4938 ;;Total ram usage:        0 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    1
  4941 ;; This function calls:
  4942 ;;		_DELAY_us
  4943 ;;		_GPIO_PinWrite
  4944 ;; This function is called by:
  4945 ;;		_LCD_CmdWrite
  4946 ;;		_lcd_Reset
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           
  4951                           ;psect for function _lcd_SendCmdSignals
  4952  0963                     _lcd_SendCmdSignals:	
  4953                           
  4954                           ;lcd.c: 982: GPIO_PinWrite(LCDConfig.RS,0);
  4955                           
  4956                           ;incstack = 0
  4957                           ; Regs used in _lcd_SendCmdSignals: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4958  0963  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4959  0964  1683               	bsf	3,5	;RP0=1, select bank1
  4960  0965  1303               	bcf	3,6	;RP1=0, select bank1
  4961  0966  0823               	movf	(_LCDConfig^(0+128)+3),w
  4962  0967  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  4963                           
  4964                           ;lcd.c: 983: GPIO_PinWrite(LCDConfig.RW,0);
  4965  096C  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4966  096D  1683               	bsf	3,5	;RP0=1, select bank1
  4967  096E  1303               	bcf	3,6	;RP1=0, select bank1
  4968  096F  0824               	movf	(_LCDConfig^(0+128)+4),w
  4969  0970  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  4970                           
  4971                           ;lcd.c: 984: GPIO_PinWrite(LCDConfig.EN,1);
  4972  0975  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4973  0976  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  4974  0977  1683               	bsf	3,5	;RP0=1, select bank1
  4975  0978  1303               	bcf	3,6	;RP1=0, select bank1
  4976  0979  0825               	movf	(_LCDConfig^(0+128)+5),w
  4977  097A  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  4978                           
  4979                           ;lcd.c: 985: DELAY_us(10);
  4980  097F  300A               	movlw	10
  4981  0980  00F0               	movwf	DELAY_us@us_count
  4982  0981  3000               	movlw	0
  4983  0982  00F1               	movwf	DELAY_us@us_count+1
  4984  0983  120A  158A  2092  120A  158A  	fcall	_DELAY_us
  4985                           
  4986                           ;lcd.c: 986: GPIO_PinWrite(LCDConfig.EN,0);
  4987  0988  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  4988  0989  1683               	bsf	3,5	;RP0=1, select bank1
  4989  098A  1303               	bcf	3,6	;RP1=0, select bank1
  4990  098B  0825               	movf	(_LCDConfig^(0+128)+5),w
  4991  098C  120A  118A  2205   	fcall	_GPIO_PinWrite
  4992  098F  0008               	return
  4993  0990                     __end_of_lcd_SendCmdSignals:	
  4994                           
  4995                           	psect	text26
  4996  0E47                     __ptext26:	
  4997 ;; *************** function _lcd_BusyCheck *****************
  4998 ;; Defined at:
  4999 ;;		line 859 in file "../00-libfiles/lcd.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;		None
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;  busyflag        1    6[COMMON] unsigned char 
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5013 ;;      Params:         0       0       0       0       0
  5014 ;;      Locals:         1       0       0       0       0
  5015 ;;      Temps:          1       0       0       0       0
  5016 ;;      Totals:         2       0       0       0       0
  5017 ;;Total ram usage:        2 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    2
  5020 ;; This function calls:
  5021 ;;		_DELAY_ms
  5022 ;;		_DELAY_us
  5023 ;;		_GPIO_PinDirection
  5024 ;;		_GPIO_PinRead
  5025 ;;		_GPIO_PinWrite
  5026 ;; This function is called by:
  5027 ;;		_LCD_CmdWrite
  5028 ;;		_lcd_DataWrite
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           
  5033                           ;psect for function _lcd_BusyCheck
  5034  0E47                     _lcd_BusyCheck:	
  5035                           
  5036                           ;lcd.c: 861: uint8_t busyflag;
  5037                           ;lcd.c: 863: if(LCDConfig.RW == P_NC)
  5038                           
  5039                           ;incstack = 0
  5040                           ; Regs used in _lcd_BusyCheck: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5041  0E47  1683               	bsf	3,5	;RP0=1, select bank1
  5042  0E48  1303               	bcf	3,6	;RP1=0, select bank1
  5043  0E49  0A24               	incf	(_LCDConfig^(0+128)+4),w
  5044  0E4A  1D03               	btfss	3,2
  5045  0E4B  2ECB               	goto	l1899
  5046                           
  5047                           ;lcd.c: 864: {
  5048                           ;lcd.c: 865: GPIO_PinDirection(LCDConfig.D7,0x01u);
  5049  0E4C  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  5050  0E4D  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  5051  0E4E  082D               	movf	(_LCDConfig^(0+128)+13),w
  5052  0E4F  120A  118A  22DE  120A  158A  	fcall	_GPIO_PinDirection
  5053                           
  5054                           ;lcd.c: 866: GPIO_PinWrite(LCDConfig.RS,0);
  5055  0E54  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5056  0E55  1683               	bsf	3,5	;RP0=1, select bank1
  5057  0E56  1303               	bcf	3,6	;RP1=0, select bank1
  5058  0E57  0823               	movf	(_LCDConfig^(0+128)+3),w
  5059  0E58  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  5060                           
  5061                           ;lcd.c: 867: GPIO_PinWrite(LCDConfig.RW,1);
  5062  0E5D  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5063  0E5E  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  5064  0E5F  1683               	bsf	3,5	;RP0=1, select bank1
  5065  0E60  1303               	bcf	3,6	;RP1=0, select bank1
  5066  0E61  0824               	movf	(_LCDConfig^(0+128)+4),w
  5067  0E62  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  5068  0E67                     l336:	
  5069                           ;lcd.c: 868: do
  5070                           
  5071                           
  5072                           ;lcd.c: 869: {
  5073                           ;lcd.c: 871: GPIO_PinWrite(LCDConfig.EN,0);
  5074  0E67  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5075  0E68  1683               	bsf	3,5	;RP0=1, select bank1
  5076  0E69  1303               	bcf	3,6	;RP1=0, select bank1
  5077  0E6A  0825               	movf	(_LCDConfig^(0+128)+5),w
  5078  0E6B  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  5079                           
  5080                           ;lcd.c: 872: DELAY_us(10);
  5081  0E70  300A               	movlw	10
  5082  0E71  00F0               	movwf	DELAY_us@us_count
  5083  0E72  3000               	movlw	0
  5084  0E73  00F1               	movwf	DELAY_us@us_count+1
  5085  0E74  120A  158A  2092  120A  158A  	fcall	_DELAY_us
  5086                           
  5087                           ;lcd.c: 873: GPIO_PinWrite(LCDConfig.EN,1);
  5088  0E79  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5089  0E7A  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  5090  0E7B  1683               	bsf	3,5	;RP0=1, select bank1
  5091  0E7C  1303               	bcf	3,6	;RP1=0, select bank1
  5092  0E7D  0825               	movf	(_LCDConfig^(0+128)+5),w
  5093  0E7E  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  5094                           
  5095                           ;lcd.c: 874: DELAY_us(10);
  5096  0E83  300A               	movlw	10
  5097  0E84  00F0               	movwf	DELAY_us@us_count
  5098  0E85  3000               	movlw	0
  5099  0E86  00F1               	movwf	DELAY_us@us_count+1
  5100  0E87  120A  158A  2092  120A  158A  	fcall	_DELAY_us
  5101                           
  5102                           ;lcd.c: 875: busyflag = GPIO_PinRead(LCDConfig.D7);
  5103  0E8C  1683               	bsf	3,5	;RP0=1, select bank1
  5104  0E8D  1303               	bcf	3,6	;RP1=0, select bank1
  5105  0E8E  082D               	movf	(_LCDConfig^(0+128)+13),w
  5106  0E8F  120A  158A  24CB  120A  158A  	fcall	_GPIO_PinRead
  5107  0E94  00F5               	movwf	??_lcd_BusyCheck
  5108  0E95  0875               	movf	??_lcd_BusyCheck,w
  5109  0E96  00F6               	movwf	lcd_BusyCheck@busyflag
  5110                           
  5111                           ;lcd.c: 878: if(LCDConfig.v_LcdMode_U8 == 4)
  5112  0E97  3004               	movlw	4
  5113  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  5114  0E99  1303               	bcf	3,6	;RP1=0, select bank1
  5115  0E9A  0622               	xorwf	(_LCDConfig^(0+128)+2),w
  5116  0E9B  1D03               	btfss	3,2
  5117  0E9C  2EC0               	goto	l1895
  5118                           
  5119                           ;lcd.c: 879: {
  5120                           ;lcd.c: 881: GPIO_PinWrite(LCDConfig.EN,0);
  5121  0E9D  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5122  0E9E  0825               	movf	(_LCDConfig^(0+128)+5),w
  5123  0E9F  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  5124                           
  5125                           ;lcd.c: 882: DELAY_us(10);
  5126  0EA4  300A               	movlw	10
  5127  0EA5  00F0               	movwf	DELAY_us@us_count
  5128  0EA6  3000               	movlw	0
  5129  0EA7  00F1               	movwf	DELAY_us@us_count+1
  5130  0EA8  120A  158A  2092  120A  158A  	fcall	_DELAY_us
  5131                           
  5132                           ;lcd.c: 883: GPIO_PinWrite(LCDConfig.EN,1);
  5133  0EAD  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5134  0EAE  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  5135  0EAF  1683               	bsf	3,5	;RP0=1, select bank1
  5136  0EB0  1303               	bcf	3,6	;RP1=0, select bank1
  5137  0EB1  0825               	movf	(_LCDConfig^(0+128)+5),w
  5138  0EB2  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  5139                           
  5140                           ;lcd.c: 884: DELAY_us(10);
  5141  0EB7  300A               	movlw	10
  5142  0EB8  00F0               	movwf	DELAY_us@us_count
  5143  0EB9  3000               	movlw	0
  5144  0EBA  00F1               	movwf	DELAY_us@us_count+1
  5145  0EBB  120A  158A  2092  120A  158A  	fcall	_DELAY_us
  5146  0EC0                     l1895:	
  5147                           
  5148                           ;lcd.c: 885: }
  5149                           ;lcd.c: 886: }while(busyflag!=0);
  5150  0EC0  0876               	movf	lcd_BusyCheck@busyflag,w
  5151  0EC1  1D03               	btfss	3,2
  5152  0EC2  2E67               	goto	l336
  5153                           
  5154                           ;lcd.c: 888: GPIO_PinDirection(LCDConfig.D7,0x00u);
  5155  0EC3  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  5156  0EC4  1683               	bsf	3,5	;RP0=1, select bank1
  5157  0EC5  1303               	bcf	3,6	;RP1=0, select bank1
  5158  0EC6  082D               	movf	(_LCDConfig^(0+128)+13),w
  5159  0EC7  120A  118A  22DE   	fcall	_GPIO_PinDirection
  5160                           
  5161                           ;lcd.c: 889: }
  5162  0ECA  0008               	return
  5163  0ECB                     l1899:	
  5164                           
  5165                           ;lcd.c: 890: else
  5166                           ;lcd.c: 891: {
  5167                           ;lcd.c: 894: DELAY_ms(1);
  5168  0ECB  3001               	movlw	1
  5169  0ECC  00F2               	movwf	DELAY_ms@ms_count
  5170  0ECD  3000               	movlw	0
  5171  0ECE  00F3               	movwf	DELAY_ms@ms_count+1
  5172  0ECF  120A  158A  20BB   	fcall	_DELAY_ms
  5173  0ED2  0008               	return
  5174  0ED3                     __end_of_lcd_BusyCheck:	
  5175                           
  5176                           	psect	text27
  5177  08BB                     __ptext27:	
  5178 ;; *************** function _DELAY_ms *****************
  5179 ;; Defined at:
  5180 ;;		line 75 in file "../00-libfiles/delay.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  ms_count        2    2[COMMON] unsigned int 
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;		None
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      void 
  5187 ;; Registers used:
  5188 ;;		wreg, status,2, status,0, pclath, cstack
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5194 ;;      Params:         2       0       0       0       0
  5195 ;;      Locals:         0       0       0       0       0
  5196 ;;      Temps:          0       0       0       0       0
  5197 ;;      Totals:         2       0       0       0       0
  5198 ;;Total ram usage:        2 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:    1
  5201 ;; This function calls:
  5202 ;;		_DELAY_us
  5203 ;; This function is called by:
  5204 ;;		_LCD_Init
  5205 ;;		_lcd_BusyCheck
  5206 ;;		_lcd_Reset
  5207 ;;		_LCD_ScrollMessage
  5208 ;; This function uses a non-reentrant model
  5209 ;;
  5210                           
  5211                           
  5212                           ;psect for function _DELAY_ms
  5213  08BB                     _DELAY_ms:	
  5214  08BB                     l1775:	
  5215                           ;delay.c: 77: while (ms_count != 0)
  5216                           
  5217                           ;incstack = 0
  5218                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  5219                           
  5220  08BB  0872               	movf	DELAY_ms@ms_count,w
  5221  08BC  0473               	iorwf	DELAY_ms@ms_count+1,w
  5222  08BD  1903               	btfsc	3,2
  5223  08BE  0008               	return
  5224                           
  5225                           ;delay.c: 78: {
  5226                           ;delay.c: 79: DELAY_us(300u);
  5227  08BF  302C               	movlw	44
  5228  08C0  00F0               	movwf	DELAY_us@us_count
  5229  08C1  3001               	movlw	1
  5230  08C2  00F1               	movwf	DELAY_us@us_count+1
  5231  08C3  120A  158A  2092  120A  158A  	fcall	_DELAY_us
  5232                           
  5233                           ;delay.c: 80: ms_count--;
  5234  08C8  3001               	movlw	1
  5235  08C9  02F2               	subwf	DELAY_ms@ms_count,f
  5236  08CA  3000               	movlw	0
  5237  08CB  1C03               	skipc
  5238  08CC  03F3               	decf	DELAY_ms@ms_count+1,f
  5239  08CD  02F3               	subwf	DELAY_ms@ms_count+1,f
  5240  08CE  28BB               	goto	l1775
  5241  08CF                     __end_of_DELAY_ms:	
  5242                           
  5243                           	psect	text28
  5244  0B48                     __ptext28:	
  5245 ;; *************** function _KEYPAD_Init *****************
  5246 ;; Defined at:
  5247 ;;		line 110 in file "../00-libfiles/keypad.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;  row_0           1    wreg     enum E22
  5250 ;;  row_1           1    5[COMMON] enum E22
  5251 ;;  row_2           1    6[COMMON] enum E22
  5252 ;;  row_3           1    7[COMMON] enum E22
  5253 ;;  col_0           1    8[COMMON] enum E22
  5254 ;;  col_1           1    9[COMMON] enum E22
  5255 ;;  col_2           1   10[COMMON] enum E22
  5256 ;;  col_3           1   11[COMMON] enum E22
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;  row_0           1    0[BANK0 ] enum E22
  5259 ;;  i               1    1[BANK0 ] unsigned char 
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  1    wreg      void 
  5262 ;; Registers used:
  5263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5269 ;;      Params:         7       0       0       0       0
  5270 ;;      Locals:         0       2       0       0       0
  5271 ;;      Temps:          1       0       0       0       0
  5272 ;;      Totals:         8       2       0       0       0
  5273 ;;Total ram usage:       10 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; Hardware stack levels required when called:    1
  5276 ;; This function calls:
  5277 ;;		_GPIO_PinDirection
  5278 ;; This function is called by:
  5279 ;;		_main
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283                           
  5284                           ;psect for function _KEYPAD_Init
  5285  0B48                     _KEYPAD_Init:	
  5286                           
  5287                           ;incstack = 0
  5288                           ; Regs used in _KEYPAD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5289                           ;KEYPAD_Init@row_0 stored from wreg
  5290  0B48  1283               	bcf	3,5	;RP0=0, select bank0
  5291  0B49  1303               	bcf	3,6	;RP1=0, select bank0
  5292  0B4A  00A0               	movwf	KEYPAD_Init@row_0
  5293                           
  5294                           ;keypad.c: 120: uint8_t i;
  5295                           ;keypad.c: 122: A_RowsPins_U8[0] = row_0;
  5296  0B4B  0820               	movf	KEYPAD_Init@row_0,w
  5297  0B4C  00FC               	movwf	??_KEYPAD_Init
  5298  0B4D  087C               	movf	??_KEYPAD_Init,w
  5299  0B4E  1683               	bsf	3,5	;RP0=1, select bank1
  5300  0B4F  1303               	bcf	3,6	;RP1=0, select bank1
  5301  0B50  00B2               	movwf	_A_RowsPins_U8^(0+128)
  5302                           
  5303                           ;keypad.c: 123: A_RowsPins_U8[1] = row_1;
  5304  0B51  0875               	movf	KEYPAD_Init@row_1,w
  5305  0B52  00FC               	movwf	??_KEYPAD_Init
  5306  0B53  087C               	movf	??_KEYPAD_Init,w
  5307  0B54  00B3               	movwf	(_A_RowsPins_U8^(0+128)+1)
  5308                           
  5309                           ;keypad.c: 124: A_RowsPins_U8[2] = row_2;
  5310  0B55  0876               	movf	KEYPAD_Init@row_2,w
  5311  0B56  00FC               	movwf	??_KEYPAD_Init
  5312  0B57  087C               	movf	??_KEYPAD_Init,w
  5313  0B58  00B4               	movwf	(_A_RowsPins_U8^(0+128)+2)
  5314                           
  5315                           ;keypad.c: 125: A_RowsPins_U8[3] = row_3;
  5316  0B59  0877               	movf	KEYPAD_Init@row_3,w
  5317  0B5A  00FC               	movwf	??_KEYPAD_Init
  5318  0B5B  087C               	movf	??_KEYPAD_Init,w
  5319  0B5C  00B5               	movwf	(_A_RowsPins_U8^(0+128)+3)
  5320                           
  5321                           ;keypad.c: 127: A_ColsPins_U8[0] = col_0;
  5322  0B5D  0878               	movf	KEYPAD_Init@col_0,w
  5323  0B5E  00FC               	movwf	??_KEYPAD_Init
  5324  0B5F  087C               	movf	??_KEYPAD_Init,w
  5325  0B60  00AE               	movwf	_A_ColsPins_U8^(0+128)
  5326                           
  5327                           ;keypad.c: 128: A_ColsPins_U8[1] = col_1;
  5328  0B61  0879               	movf	KEYPAD_Init@col_1,w
  5329  0B62  00FC               	movwf	??_KEYPAD_Init
  5330  0B63  087C               	movf	??_KEYPAD_Init,w
  5331  0B64  00AF               	movwf	(_A_ColsPins_U8^(0+128)+1)
  5332                           
  5333                           ;keypad.c: 129: A_ColsPins_U8[2] = col_2;
  5334  0B65  087A               	movf	KEYPAD_Init@col_2,w
  5335  0B66  00FC               	movwf	??_KEYPAD_Init
  5336  0B67  087C               	movf	??_KEYPAD_Init,w
  5337  0B68  00B0               	movwf	(_A_ColsPins_U8^(0+128)+2)
  5338                           
  5339                           ;keypad.c: 130: A_ColsPins_U8[3] = col_3;
  5340  0B69  087B               	movf	KEYPAD_Init@col_3,w
  5341  0B6A  00FC               	movwf	??_KEYPAD_Init
  5342  0B6B  087C               	movf	??_KEYPAD_Init,w
  5343  0B6C  00B1               	movwf	(_A_ColsPins_U8^(0+128)+3)
  5344                           
  5345                           ;keypad.c: 132: for(i=0;i<(4);i++)
  5346  0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  5347  0B6E  1303               	bcf	3,6	;RP1=0, select bank0
  5348  0B6F  01A1               	clrf	KEYPAD_Init@i
  5349  0B70  3004               	movlw	4
  5350  0B71  0221               	subwf	KEYPAD_Init@i,w
  5351  0B72  1803               	btfsc	3,0
  5352  0B73  2B89               	goto	l2413
  5353  0B74                     l2407:	
  5354                           
  5355                           ;keypad.c: 133: {
  5356                           ;keypad.c: 134: GPIO_PinDirection(A_RowsPins_U8[i],0x00u);
  5357  0B74  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  5358  0B75  0821               	movf	KEYPAD_Init@i,w
  5359  0B76  3EB2               	addlw	(low (_A_RowsPins_U8| 0))& (0+255)
  5360  0B77  0084               	movwf	4
  5361  0B78  1383               	bcf	3,7	;select IRP bank1
  5362  0B79  0800               	movf	0,w
  5363  0B7A  120A  118A  22DE  120A  158A  	fcall	_GPIO_PinDirection
  5364  0B7F  3001               	movlw	1
  5365  0B80  00FC               	movwf	??_KEYPAD_Init
  5366  0B81  087C               	movf	??_KEYPAD_Init,w
  5367  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  5368  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  5369  0B84  07A1               	addwf	KEYPAD_Init@i,f
  5370  0B85  3004               	movlw	4
  5371  0B86  0221               	subwf	KEYPAD_Init@i,w
  5372  0B87  1C03               	skipc
  5373  0B88  2B74               	goto	l2407
  5374  0B89                     l2413:	
  5375                           
  5376                           ;keypad.c: 135: }
  5377                           ;keypad.c: 137: for(i=0;i<(4);i++)
  5378  0B89  01A1               	clrf	KEYPAD_Init@i
  5379  0B8A                     L4:	
  5380  0B8A  3004               	movlw	4
  5381  0B8B  0221               	subwf	KEYPAD_Init@i,w
  5382  0B8C  1803               	btfsc	3,0
  5383  0B8D  0008               	return
  5384                           
  5385                           ;keypad.c: 138: {
  5386                           ;keypad.c: 139: GPIO_PinDirection(A_ColsPins_U8[i],0x01u);
  5387  0B8E  01F0               	clrf	GPIO_PinDirection@var_pinDirn_u8
  5388  0B8F  0AF0               	incf	GPIO_PinDirection@var_pinDirn_u8,f
  5389  0B90  0821               	movf	KEYPAD_Init@i,w
  5390  0B91  3EAE               	addlw	(low (_A_ColsPins_U8| 0))& (0+255)
  5391  0B92  0084               	movwf	4
  5392  0B93  1383               	bcf	3,7	;select IRP bank1
  5393  0B94  0800               	movf	0,w
  5394  0B95  120A  118A  22DE  120A  158A  	fcall	_GPIO_PinDirection
  5395  0B9A  3001               	movlw	1
  5396  0B9B  00FC               	movwf	??_KEYPAD_Init
  5397  0B9C  087C               	movf	??_KEYPAD_Init,w
  5398  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  5399  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  5400  0B9F  07A1               	addwf	KEYPAD_Init@i,f
  5401  0BA0  2B8A               	goto	L4
  5402  0BA1                     __end_of_KEYPAD_Init:	
  5403                           
  5404                           	psect	text29
  5405  02DE                     __ptext29:	
  5406 ;; *************** function _GPIO_PinDirection *****************
  5407 ;; Defined at:
  5408 ;;		line 60 in file "../00-libfiles/gpio.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;  enm_pinNumbe    1    wreg     enum E1088
  5411 ;;  var_pinDirn_    1    0[COMMON] unsigned char 
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  5414 ;;  var_portNumb    1    3[COMMON] unsigned char 
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  1    wreg      void 
  5417 ;; Registers used:
  5418 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5424 ;;      Params:         1       0       0       0       0
  5425 ;;      Locals:         2       0       0       0       0
  5426 ;;      Temps:          2       0       0       0       0
  5427 ;;      Totals:         5       0       0       0       0
  5428 ;;Total ram usage:        5 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; This function calls:
  5431 ;;		Nothing
  5432 ;; This function is called by:
  5433 ;;		_KEYPAD_Init
  5434 ;;		_LCD_SetUp
  5435 ;;		_lcd_BusyCheck
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           
  5440                           ;psect for function _GPIO_PinDirection
  5441  02DE                     _GPIO_PinDirection:	
  5442                           
  5443                           ;incstack = 0
  5444                           ; Regs used in _GPIO_PinDirection: [wreg-fsr0h+status,2+status,0]
  5445                           ;GPIO_PinDirection@enm_pinNumber stored from wreg
  5446  02DE  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  5447                           
  5448                           ;gpio.c: 63: uint8_t var_portNumber_u8;
  5449                           ;gpio.c: 66: var_portNumber_u8 = (enm_pinNumber>>3);
  5450  02DF  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  5451  02E0  00F1               	movwf	??_GPIO_PinDirection
  5452  02E1  3003               	movlw	3
  5453  02E2                     u2185:	
  5454  02E2  1003               	clrc
  5455  02E3  0CF1               	rrf	??_GPIO_PinDirection,f
  5456  02E4  3EFF               	addlw	-1
  5457  02E5  1D03               	skipz
  5458  02E6  2AE2               	goto	u2185
  5459  02E7  0871               	movf	??_GPIO_PinDirection,w
  5460  02E8  00F2               	movwf	??_GPIO_PinDirection+1
  5461  02E9  0872               	movf	??_GPIO_PinDirection+1,w
  5462  02EA  00F3               	movwf	GPIO_PinDirection@var_portNumber_u8
  5463                           
  5464                           ;gpio.c: 67: enm_pinNumber = enm_pinNumber & 0x07;
  5465  02EB  0874               	movf	GPIO_PinDirection@enm_pinNumber,w
  5466  02EC  3907               	andlw	7
  5467  02ED  00F1               	movwf	??_GPIO_PinDirection
  5468  02EE  0871               	movf	??_GPIO_PinDirection,w
  5469  02EF  00F4               	movwf	GPIO_PinDirection@enm_pinNumber
  5470                           
  5471                           ;gpio.c: 71: switch(var_portNumber_u8)
  5472  02F0  2BA5               	goto	l1813
  5473  02F1                     l1781:	
  5474                           ;gpio.c: 72: {
  5475                           ;gpio.c: 74: case 0:
  5476                           
  5477                           
  5478                           ;gpio.c: 75: ((var_pinDirn_u8)? ((TRISA) |= (1<<(enm_pinNumber))): ((TRISA) &= ~(1<<(enm
      +                          _pinNumber))));
  5479  02F1  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  5480  02F2  1903               	btfsc	3,2
  5481  02F3  2B04               	goto	l1785
  5482  02F4  3001               	movlw	1
  5483  02F5  00F1               	movwf	??_GPIO_PinDirection
  5484  02F6  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5485  02F7  2AFA               	goto	u2204
  5486  02F8                     u2205:	
  5487  02F8  1003               	clrc
  5488  02F9  0DF1               	rlf	??_GPIO_PinDirection,f
  5489  02FA                     u2204:	
  5490  02FA  3EFF               	addlw	-1
  5491  02FB  1D03               	skipz
  5492  02FC  2AF8               	goto	u2205
  5493  02FD  0871               	movf	??_GPIO_PinDirection,w
  5494  02FE  00F2               	movwf	??_GPIO_PinDirection+1
  5495  02FF  0872               	movf	??_GPIO_PinDirection+1,w
  5496  0300  1683               	bsf	3,5	;RP0=1, select bank1
  5497  0301  1303               	bcf	3,6	;RP1=0, select bank1
  5498  0302  0485               	iorwf	5,f	;volatile
  5499  0303  0008               	return
  5500  0304                     l1785:	
  5501  0304  3001               	movlw	1
  5502  0305  00F1               	movwf	??_GPIO_PinDirection
  5503  0306  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5504  0307  2B0A               	goto	u2214
  5505  0308                     u2215:	
  5506  0308  1003               	clrc
  5507  0309  0DF1               	rlf	??_GPIO_PinDirection,f
  5508  030A                     u2214:	
  5509  030A  3EFF               	addlw	-1
  5510  030B  1D03               	skipz
  5511  030C  2B08               	goto	u2215
  5512  030D  0871               	movf	??_GPIO_PinDirection,w
  5513  030E  3AFF               	xorlw	255
  5514  030F  00F2               	movwf	??_GPIO_PinDirection+1
  5515  0310  0872               	movf	??_GPIO_PinDirection+1,w
  5516  0311  1683               	bsf	3,5	;RP0=1, select bank1
  5517  0312  1303               	bcf	3,6	;RP1=0, select bank1
  5518  0313  0585               	andwf	5,f	;volatile
  5519                           
  5520                           ;gpio.c: 76: break;
  5521  0314  0008               	return
  5522  0315                     l1787:	
  5523                           ;gpio.c: 80: case 1:
  5524                           
  5525                           
  5526                           ;gpio.c: 81: ((var_pinDirn_u8)? ((TRISB) |= (1<<(enm_pinNumber))): ((TRISB) &= ~(1<<(enm
      +                          _pinNumber))));
  5527  0315  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  5528  0316  1903               	btfsc	3,2
  5529  0317  2B28               	goto	l1791
  5530  0318  3001               	movlw	1
  5531  0319  00F1               	movwf	??_GPIO_PinDirection
  5532  031A  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5533  031B  2B1E               	goto	u2234
  5534  031C                     u2235:	
  5535  031C  1003               	clrc
  5536  031D  0DF1               	rlf	??_GPIO_PinDirection,f
  5537  031E                     u2234:	
  5538  031E  3EFF               	addlw	-1
  5539  031F  1D03               	skipz
  5540  0320  2B1C               	goto	u2235
  5541  0321  0871               	movf	??_GPIO_PinDirection,w
  5542  0322  00F2               	movwf	??_GPIO_PinDirection+1
  5543  0323  0872               	movf	??_GPIO_PinDirection+1,w
  5544  0324  1683               	bsf	3,5	;RP0=1, select bank1
  5545  0325  1303               	bcf	3,6	;RP1=0, select bank1
  5546  0326  0486               	iorwf	6,f	;volatile
  5547  0327  0008               	return
  5548  0328                     l1791:	
  5549  0328  3001               	movlw	1
  5550  0329  00F1               	movwf	??_GPIO_PinDirection
  5551  032A  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5552  032B  2B2E               	goto	u2244
  5553  032C                     u2245:	
  5554  032C  1003               	clrc
  5555  032D  0DF1               	rlf	??_GPIO_PinDirection,f
  5556  032E                     u2244:	
  5557  032E  3EFF               	addlw	-1
  5558  032F  1D03               	skipz
  5559  0330  2B2C               	goto	u2245
  5560  0331  0871               	movf	??_GPIO_PinDirection,w
  5561  0332  3AFF               	xorlw	255
  5562  0333  00F2               	movwf	??_GPIO_PinDirection+1
  5563  0334  0872               	movf	??_GPIO_PinDirection+1,w
  5564  0335  1683               	bsf	3,5	;RP0=1, select bank1
  5565  0336  1303               	bcf	3,6	;RP1=0, select bank1
  5566  0337  0586               	andwf	6,f	;volatile
  5567                           
  5568                           ;gpio.c: 82: break;
  5569  0338  0008               	return
  5570  0339                     l1793:	
  5571                           ;gpio.c: 86: case 2:
  5572                           
  5573                           
  5574                           ;gpio.c: 87: ((var_pinDirn_u8)? ((TRISC) |= (1<<(enm_pinNumber))): ((TRISC) &= ~(1<<(enm
      +                          _pinNumber))));
  5575  0339  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  5576  033A  1903               	btfsc	3,2
  5577  033B  2B4C               	goto	l1797
  5578  033C  3001               	movlw	1
  5579  033D  00F1               	movwf	??_GPIO_PinDirection
  5580  033E  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5581  033F  2B42               	goto	u2264
  5582  0340                     u2265:	
  5583  0340  1003               	clrc
  5584  0341  0DF1               	rlf	??_GPIO_PinDirection,f
  5585  0342                     u2264:	
  5586  0342  3EFF               	addlw	-1
  5587  0343  1D03               	skipz
  5588  0344  2B40               	goto	u2265
  5589  0345  0871               	movf	??_GPIO_PinDirection,w
  5590  0346  00F2               	movwf	??_GPIO_PinDirection+1
  5591  0347  0872               	movf	??_GPIO_PinDirection+1,w
  5592  0348  1683               	bsf	3,5	;RP0=1, select bank1
  5593  0349  1303               	bcf	3,6	;RP1=0, select bank1
  5594  034A  0487               	iorwf	7,f	;volatile
  5595  034B  0008               	return
  5596  034C                     l1797:	
  5597  034C  3001               	movlw	1
  5598  034D  00F1               	movwf	??_GPIO_PinDirection
  5599  034E  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5600  034F  2B52               	goto	u2274
  5601  0350                     u2275:	
  5602  0350  1003               	clrc
  5603  0351  0DF1               	rlf	??_GPIO_PinDirection,f
  5604  0352                     u2274:	
  5605  0352  3EFF               	addlw	-1
  5606  0353  1D03               	skipz
  5607  0354  2B50               	goto	u2275
  5608  0355  0871               	movf	??_GPIO_PinDirection,w
  5609  0356  3AFF               	xorlw	255
  5610  0357  00F2               	movwf	??_GPIO_PinDirection+1
  5611  0358  0872               	movf	??_GPIO_PinDirection+1,w
  5612  0359  1683               	bsf	3,5	;RP0=1, select bank1
  5613  035A  1303               	bcf	3,6	;RP1=0, select bank1
  5614  035B  0587               	andwf	7,f	;volatile
  5615                           
  5616                           ;gpio.c: 88: break;
  5617  035C  0008               	return
  5618  035D                     l1799:	
  5619                           ;gpio.c: 92: case 3:
  5620                           
  5621                           
  5622                           ;gpio.c: 93: ((var_pinDirn_u8)? ((TRISD) |= (1<<(enm_pinNumber))): ((TRISD) &= ~(1<<(enm
      +                          _pinNumber))));
  5623  035D  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  5624  035E  1903               	btfsc	3,2
  5625  035F  2B70               	goto	l1803
  5626  0360  3001               	movlw	1
  5627  0361  00F1               	movwf	??_GPIO_PinDirection
  5628  0362  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5629  0363  2B66               	goto	u2294
  5630  0364                     u2295:	
  5631  0364  1003               	clrc
  5632  0365  0DF1               	rlf	??_GPIO_PinDirection,f
  5633  0366                     u2294:	
  5634  0366  3EFF               	addlw	-1
  5635  0367  1D03               	skipz
  5636  0368  2B64               	goto	u2295
  5637  0369  0871               	movf	??_GPIO_PinDirection,w
  5638  036A  00F2               	movwf	??_GPIO_PinDirection+1
  5639  036B  0872               	movf	??_GPIO_PinDirection+1,w
  5640  036C  1683               	bsf	3,5	;RP0=1, select bank1
  5641  036D  1303               	bcf	3,6	;RP1=0, select bank1
  5642  036E  0488               	iorwf	8,f	;volatile
  5643  036F  0008               	return
  5644  0370                     l1803:	
  5645  0370  3001               	movlw	1
  5646  0371  00F1               	movwf	??_GPIO_PinDirection
  5647  0372  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5648  0373  2B76               	goto	u2304
  5649  0374                     u2305:	
  5650  0374  1003               	clrc
  5651  0375  0DF1               	rlf	??_GPIO_PinDirection,f
  5652  0376                     u2304:	
  5653  0376  3EFF               	addlw	-1
  5654  0377  1D03               	skipz
  5655  0378  2B74               	goto	u2305
  5656  0379  0871               	movf	??_GPIO_PinDirection,w
  5657  037A  3AFF               	xorlw	255
  5658  037B  00F2               	movwf	??_GPIO_PinDirection+1
  5659  037C  0872               	movf	??_GPIO_PinDirection+1,w
  5660  037D  1683               	bsf	3,5	;RP0=1, select bank1
  5661  037E  1303               	bcf	3,6	;RP1=0, select bank1
  5662  037F  0588               	andwf	8,f	;volatile
  5663                           
  5664                           ;gpio.c: 94: break;
  5665  0380  0008               	return
  5666  0381                     l1805:	
  5667                           ;gpio.c: 97: case 4:
  5668                           
  5669                           
  5670                           ;gpio.c: 98: ((var_pinDirn_u8)? ((TRISE) |= (1<<(enm_pinNumber))): ((TRISE) &= ~(1<<(enm
      +                          _pinNumber))));
  5671  0381  0870               	movf	GPIO_PinDirection@var_pinDirn_u8,w
  5672  0382  1903               	btfsc	3,2
  5673  0383  2B94               	goto	l1809
  5674  0384  3001               	movlw	1
  5675  0385  00F1               	movwf	??_GPIO_PinDirection
  5676  0386  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5677  0387  2B8A               	goto	u2324
  5678  0388                     u2325:	
  5679  0388  1003               	clrc
  5680  0389  0DF1               	rlf	??_GPIO_PinDirection,f
  5681  038A                     u2324:	
  5682  038A  3EFF               	addlw	-1
  5683  038B  1D03               	skipz
  5684  038C  2B88               	goto	u2325
  5685  038D  0871               	movf	??_GPIO_PinDirection,w
  5686  038E  00F2               	movwf	??_GPIO_PinDirection+1
  5687  038F  0872               	movf	??_GPIO_PinDirection+1,w
  5688  0390  1683               	bsf	3,5	;RP0=1, select bank1
  5689  0391  1303               	bcf	3,6	;RP1=0, select bank1
  5690  0392  0489               	iorwf	9,f	;volatile
  5691  0393  0008               	return
  5692  0394                     l1809:	
  5693  0394  3001               	movlw	1
  5694  0395  00F1               	movwf	??_GPIO_PinDirection
  5695  0396  0A74               	incf	GPIO_PinDirection@enm_pinNumber,w
  5696  0397  2B9A               	goto	u2334
  5697  0398                     u2335:	
  5698  0398  1003               	clrc
  5699  0399  0DF1               	rlf	??_GPIO_PinDirection,f
  5700  039A                     u2334:	
  5701  039A  3EFF               	addlw	-1
  5702  039B  1D03               	skipz
  5703  039C  2B98               	goto	u2335
  5704  039D  0871               	movf	??_GPIO_PinDirection,w
  5705  039E  3AFF               	xorlw	255
  5706  039F  00F2               	movwf	??_GPIO_PinDirection+1
  5707  03A0  0872               	movf	??_GPIO_PinDirection+1,w
  5708  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  5709  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  5710  03A3  0589               	andwf	9,f	;volatile
  5711                           
  5712                           ;gpio.c: 101: }
  5713                           
  5714                           ;gpio.c: 99: break;
  5715  03A4  0008               	return
  5716  03A5                     l1813:	
  5717  03A5  0873               	movf	GPIO_PinDirection@var_portNumber_u8,w
  5718                           
  5719                           ; Switch size 1, requested type "space"
  5720                           ; Number of cases is 5, Range of values is 0 to 4
  5721                           ; switch strategies available:
  5722                           ; Name         Instructions Cycles
  5723                           ; simple_byte           16     9 (average)
  5724                           ; direct_byte           23     8 (fixed)
  5725                           ; jumptable            260     6 (fixed)
  5726                           ;	Chosen strategy is simple_byte
  5727  03A6  3A00               	xorlw	0	; case 0
  5728  03A7  1903               	skipnz
  5729  03A8  2AF1               	goto	l1781
  5730  03A9  3A01               	xorlw	1	; case 1
  5731  03AA  1903               	skipnz
  5732  03AB  2B15               	goto	l1787
  5733  03AC  3A03               	xorlw	3	; case 2
  5734  03AD  1903               	skipnz
  5735  03AE  2B39               	goto	l1793
  5736  03AF  3A01               	xorlw	1	; case 3
  5737  03B0  1903               	skipnz
  5738  03B1  2B5D               	goto	l1799
  5739  03B2  3A07               	xorlw	7	; case 4
  5740  03B3  1903               	skipnz
  5741  03B4  2B81               	goto	l1805
  5742  03B5  2BB6               	goto	l62
  5743  03B6                     l62:	
  5744  03B6  0008               	return
  5745  03B7                     __end_of_GPIO_PinDirection:	
  5746                           
  5747                           	psect	text30
  5748  0DBF                     __ptext30:	
  5749 ;; *************** function _KEYPAD_GetKey *****************
  5750 ;; Defined at:
  5751 ;;		line 256 in file "../00-libfiles/keypad.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;		None
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;  i               1   13[COMMON] unsigned char 
  5756 ;;  j               1   12[COMMON] unsigned char 
  5757 ;;  v_KeyPressed    1   11[COMMON] unsigned char 
  5758 ;; Return value:  Size  Location     Type
  5759 ;;                  1    wreg      unsigned char 
  5760 ;; Registers used:
  5761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 0/0
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5767 ;;      Params:         0       0       0       0       0
  5768 ;;      Locals:         3       0       0       0       0
  5769 ;;      Temps:          3       0       0       0       0
  5770 ;;      Totals:         6       0       0       0       0
  5771 ;;Total ram usage:        6 bytes
  5772 ;; Hardware stack levels used:    1
  5773 ;; Hardware stack levels required when called:    2
  5774 ;; This function calls:
  5775 ;;		_GPIO_PinRead
  5776 ;;		_GPIO_PinWrite
  5777 ;;		_keypad_WaitForKeyPress
  5778 ;;		_keypad_WaitForKeyRelease
  5779 ;; This function is called by:
  5780 ;;		_main
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           
  5785                           ;psect for function _KEYPAD_GetKey
  5786  0DBF                     _KEYPAD_GetKey:	
  5787                           
  5788                           ;keypad.c: 258: uint8_t i,j,v_KeyPressed_u8 = 0;
  5789                           
  5790                           ;incstack = 0
  5791                           ; Regs used in _KEYPAD_GetKey: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5792  0DBF  01FB               	clrf	KEYPAD_GetKey@v_KeyPressed_u8
  5793                           
  5794                           ;keypad.c: 261: keypad_WaitForKeyRelease();
  5795  0DC0  120A  118A  2003  120A  158A  	fcall	_keypad_WaitForKeyRelease
  5796                           
  5797                           ;keypad.c: 262: keypad_WaitForKeyPress();
  5798  0DC5  120A  158A  23FF  120A  158A  	fcall	_keypad_WaitForKeyPress
  5799                           
  5800                           ;keypad.c: 264: for (i=0;i<(4);i++)
  5801  0DCA  01FD               	clrf	KEYPAD_GetKey@i
  5802  0DCB  3004               	movlw	4
  5803  0DCC  027D               	subwf	KEYPAD_GetKey@i,w
  5804  0DCD  1803               	btfsc	3,0
  5805  0DCE  2DE3               	goto	l2441
  5806  0DCF                     l2435:	
  5807                           
  5808                           ;keypad.c: 265: {
  5809                           ;keypad.c: 266: GPIO_PinWrite(A_RowsPins_U8[i],0x01u);
  5810  0DCF  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5811  0DD0  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  5812  0DD1  087D               	movf	KEYPAD_GetKey@i,w
  5813  0DD2  3EB2               	addlw	(low (_A_RowsPins_U8| 0))& (0+255)
  5814  0DD3  0084               	movwf	4
  5815  0DD4  1383               	bcf	3,7	;select IRP bank1
  5816  0DD5  0800               	movf	0,w
  5817  0DD6  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  5818  0DDB  3001               	movlw	1
  5819  0DDC  00F8               	movwf	??_KEYPAD_GetKey
  5820  0DDD  0878               	movf	??_KEYPAD_GetKey,w
  5821  0DDE  07FD               	addwf	KEYPAD_GetKey@i,f
  5822  0DDF  3004               	movlw	4
  5823  0DE0  027D               	subwf	KEYPAD_GetKey@i,w
  5824  0DE1  1C03               	skipc
  5825  0DE2  2DCF               	goto	l2435
  5826  0DE3                     l2441:	
  5827                           
  5828                           ;keypad.c: 267: }
  5829                           ;keypad.c: 269: for (i=0;(i<(4));i++)
  5830  0DE3  01FD               	clrf	KEYPAD_GetKey@i
  5831  0DE4  3004               	movlw	4
  5832  0DE5  027D               	subwf	KEYPAD_GetKey@i,w
  5833  0DE6  1803               	btfsc	3,0
  5834  0DE7  2E27               	goto	l2473
  5835  0DE8                     l2447:	
  5836                           
  5837                           ;keypad.c: 270: {
  5838                           ;keypad.c: 271: GPIO_PinWrite(A_RowsPins_U8[i],0x00u);
  5839  0DE8  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5840  0DE9  087D               	movf	KEYPAD_GetKey@i,w
  5841  0DEA  3EB2               	addlw	(low (_A_RowsPins_U8| 0))& (0+255)
  5842  0DEB  0084               	movwf	4
  5843  0DEC  1383               	bcf	3,7	;select IRP bank1
  5844  0DED  0800               	movf	0,w
  5845  0DEE  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  5846                           
  5847                           ;keypad.c: 273: for(j=0; (j<(4)); j++)
  5848  0DF3  01FC               	clrf	KEYPAD_GetKey@j
  5849  0DF4  3004               	movlw	4
  5850  0DF5  027C               	subwf	KEYPAD_GetKey@j,w
  5851  0DF6  1803               	btfsc	3,0
  5852  0DF7  2E10               	goto	l2463
  5853  0DF8                     l2455:	
  5854                           
  5855                           ;keypad.c: 274: {
  5856                           ;keypad.c: 275: if(GPIO_PinRead(A_ColsPins_U8[j]) == 0)
  5857  0DF8  087C               	movf	KEYPAD_GetKey@j,w
  5858  0DF9  3EAE               	addlw	(low (_A_ColsPins_U8| 0))& (0+255)
  5859  0DFA  0084               	movwf	4
  5860  0DFB  1383               	bcf	3,7	;select IRP bank1
  5861  0DFC  0800               	movf	0,w
  5862  0DFD  120A  158A  24CB  120A  158A  	fcall	_GPIO_PinRead
  5863  0E02  3A00               	xorlw	0
  5864  0E03  1D03               	skipz
  5865  0E04  2E08               	goto	l2459
  5866                           
  5867                           ;keypad.c: 276: {
  5868                           ;keypad.c: 277: v_KeyPressed_u8 = 1;
  5869  0E05  01FB               	clrf	KEYPAD_GetKey@v_KeyPressed_u8
  5870  0E06  0AFB               	incf	KEYPAD_GetKey@v_KeyPressed_u8,f
  5871                           
  5872                           ;keypad.c: 278: break;
  5873  0E07  2E10               	goto	l2463
  5874  0E08                     l2459:	
  5875  0E08  3001               	movlw	1
  5876  0E09  00F8               	movwf	??_KEYPAD_GetKey
  5877  0E0A  0878               	movf	??_KEYPAD_GetKey,w
  5878  0E0B  07FC               	addwf	KEYPAD_GetKey@j,f
  5879  0E0C  3004               	movlw	4
  5880  0E0D  027C               	subwf	KEYPAD_GetKey@j,w
  5881  0E0E  1C03               	skipc
  5882  0E0F  2DF8               	goto	l2455
  5883  0E10                     l2463:	
  5884                           
  5885                           ;keypad.c: 279: }
  5886                           ;keypad.c: 280: }
  5887                           ;keypad.c: 282: if(v_KeyPressed_u8 ==1)
  5888  0E10  037B               	decf	KEYPAD_GetKey@v_KeyPressed_u8,w
  5889  0E11  1903               	btfsc	3,2
  5890  0E12  2E27               	goto	l2473
  5891                           
  5892                           ;keypad.c: 285: }
  5893                           ;keypad.c: 287: GPIO_PinWrite(A_RowsPins_U8[i],0x01u);
  5894                           
  5895                           ;keypad.c: 283: {
  5896                           ;keypad.c: 284: break;
  5897  0E13  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  5898  0E14  0AF0               	incf	GPIO_PinWrite@var_pinValue_u8,f
  5899  0E15  087D               	movf	KEYPAD_GetKey@i,w
  5900  0E16  3EB2               	addlw	(low (_A_RowsPins_U8| 0))& (0+255)
  5901  0E17  0084               	movwf	4
  5902  0E18  1383               	bcf	3,7	;select IRP bank1
  5903  0E19  0800               	movf	0,w
  5904  0E1A  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  5905  0E1F  3001               	movlw	1
  5906  0E20  00F8               	movwf	??_KEYPAD_GetKey
  5907  0E21  0878               	movf	??_KEYPAD_GetKey,w
  5908  0E22  07FD               	addwf	KEYPAD_GetKey@i,f
  5909  0E23  3004               	movlw	4
  5910  0E24  027D               	subwf	KEYPAD_GetKey@i,w
  5911  0E25  1C03               	skipc
  5912  0E26  2DE8               	goto	l2447
  5913  0E27                     l2473:	
  5914                           
  5915                           ;keypad.c: 288: }
  5916                           ;keypad.c: 290: if(i<(4))
  5917  0E27  3004               	movlw	4
  5918  0E28  027D               	subwf	KEYPAD_GetKey@i,w
  5919  0E29  1803               	skipnc
  5920  0E2A  2E41               	goto	l2477
  5921                           
  5922                           ;keypad.c: 291: v_KeyPressed_u8 = A_KeyLookUptable_U8[i][j];
  5923  0E2B  087D               	movf	KEYPAD_GetKey@i,w
  5924  0E2C  00F8               	movwf	??_KEYPAD_GetKey
  5925  0E2D  3002               	movlw	2
  5926  0E2E                     u4085:	
  5927  0E2E  1003               	clrc
  5928  0E2F  0DF8               	rlf	??_KEYPAD_GetKey,f
  5929  0E30  3EFF               	addlw	-1
  5930  0E31  1D03               	skipz
  5931  0E32  2E2E               	goto	u4085
  5932  0E33  3001               	movlw	(low ((_A_KeyLookUptable_U8-__stringbase)| (0+32768)))& (0+255)
  5933  0E34  0778               	addwf	??_KEYPAD_GetKey,w
  5934  0E35  00F9               	movwf	??_KEYPAD_GetKey+1
  5935  0E36  087C               	movf	KEYPAD_GetKey@j,w
  5936  0E37  0779               	addwf	??_KEYPAD_GetKey+1,w
  5937  0E38  0084               	movwf	4
  5938  0E39  120A  158A  2000  120A  158A  	fcall	stringdir
  5939  0E3E  00FA               	movwf	??_KEYPAD_GetKey+2
  5940  0E3F  087A               	movf	??_KEYPAD_GetKey+2,w
  5941  0E40  2E44               	goto	L5
  5942  0E41                     l2477:	
  5943                           
  5944                           ;keypad.c: 292: else
  5945                           ;keypad.c: 293: v_KeyPressed_u8 = ('x');
  5946  0E41  3078               	movlw	120
  5947  0E42  00F8               	movwf	??_KEYPAD_GetKey
  5948  0E43  0878               	movf	??_KEYPAD_GetKey,w
  5949  0E44                     L5:	
  5950  0E44  00FB               	movwf	KEYPAD_GetKey@v_KeyPressed_u8
  5951                           
  5952                           ;keypad.c: 296: return v_KeyPressed_u8;
  5953  0E45  087B               	movf	KEYPAD_GetKey@v_KeyPressed_u8,w
  5954  0E46  0008               	return
  5955  0E47                     __end_of_KEYPAD_GetKey:	
  5956                           
  5957                           	psect	text31
  5958  0003                     __ptext31:	
  5959 ;; *************** function _keypad_WaitForKeyRelease *****************
  5960 ;; Defined at:
  5961 ;;		line 155 in file "../00-libfiles/keypad.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;		None
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;  i               1    7[COMMON] unsigned char 
  5966 ;;  v_keyStatus_    1    6[COMMON] unsigned char 
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  1    wreg      void 
  5969 ;; Registers used:
  5970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5976 ;;      Params:         0       0       0       0       0
  5977 ;;      Locals:         2       0       0       0       0
  5978 ;;      Temps:          1       0       0       0       0
  5979 ;;      Totals:         3       0       0       0       0
  5980 ;;Total ram usage:        3 bytes
  5981 ;; Hardware stack levels used:    1
  5982 ;; Hardware stack levels required when called:    1
  5983 ;; This function calls:
  5984 ;;		_DELAY_us
  5985 ;;		_GPIO_PinRead
  5986 ;;		_GPIO_PinWrite
  5987 ;; This function is called by:
  5988 ;;		_KEYPAD_GetKey
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           
  5993                           ;psect for function _keypad_WaitForKeyRelease
  5994  0003                     _keypad_WaitForKeyRelease:	
  5995                           
  5996                           ;keypad.c: 158: uint8_t i,v_keyStatus_u8;
  5997                           ;keypad.c: 160: for (i=0;i<(4);i++)
  5998                           
  5999                           ;incstack = 0
  6000                           ; Regs used in _keypad_WaitForKeyRelease: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6001  0003  01F7               	clrf	keypad_WaitForKeyRelease@i
  6002  0004  3004               	movlw	4
  6003  0005  0277               	subwf	keypad_WaitForKeyRelease@i,w
  6004  0006  1803               	btfsc	3,0
  6005  0007  281B               	goto	l129
  6006  0008                     l2281:	
  6007                           
  6008                           ;keypad.c: 161: {
  6009                           ;keypad.c: 162: GPIO_PinWrite(A_RowsPins_U8[i],0x00u);
  6010  0008  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  6011  0009  0877               	movf	keypad_WaitForKeyRelease@i,w
  6012  000A  3EB2               	addlw	(low (_A_RowsPins_U8| 0))& (0+255)
  6013  000B  0084               	movwf	4
  6014  000C  1383               	bcf	3,7	;select IRP bank1
  6015  000D  0800               	movf	0,w
  6016  000E  120A  118A  2205  120A  118A  	fcall	_GPIO_PinWrite
  6017  0013  3001               	movlw	1
  6018  0014  00F5               	movwf	??_keypad_WaitForKeyRelease
  6019  0015  0875               	movf	??_keypad_WaitForKeyRelease,w
  6020  0016  07F7               	addwf	keypad_WaitForKeyRelease@i,f
  6021  0017  3004               	movlw	4
  6022  0018  0277               	subwf	keypad_WaitForKeyRelease@i,w
  6023  0019  1C03               	skipc
  6024  001A  2808               	goto	l2281
  6025  001B                     l129:	
  6026                           ;keypad.c: 166: {
  6027                           ;keypad.c: 167: do
  6028                           
  6029                           ;keypad.c: 163: }
  6030                           ;keypad.c: 165: do
  6031                           
  6032                           
  6033                           ;keypad.c: 168: {
  6034                           ;keypad.c: 169: v_keyStatus_u8 = 1;
  6035  001B  01F6               	clrf	keypad_WaitForKeyRelease@v_keyStatus_u8
  6036  001C  0AF6               	incf	keypad_WaitForKeyRelease@v_keyStatus_u8,f
  6037                           
  6038                           ;keypad.c: 170: for(i=0; i<(4); i++)
  6039  001D  01F7               	clrf	keypad_WaitForKeyRelease@i
  6040  001E  3004               	movlw	4
  6041  001F  0277               	subwf	keypad_WaitForKeyRelease@i,w
  6042  0020  1803               	btfsc	3,0
  6043  0021  2837               	goto	l2299
  6044  0022                     l2293:	
  6045                           
  6046                           ;keypad.c: 171: {
  6047                           ;keypad.c: 172: v_keyStatus_u8 &= GPIO_PinRead(A_ColsPins_U8[i]);
  6048  0022  0877               	movf	keypad_WaitForKeyRelease@i,w
  6049  0023  3EAE               	addlw	(low (_A_ColsPins_U8| 0))& (0+255)
  6050  0024  0084               	movwf	4
  6051  0025  1383               	bcf	3,7	;select IRP bank1
  6052  0026  0800               	movf	0,w
  6053  0027  120A  158A  24CB  120A  118A  	fcall	_GPIO_PinRead
  6054  002C  00F5               	movwf	??_keypad_WaitForKeyRelease
  6055  002D  0875               	movf	??_keypad_WaitForKeyRelease,w
  6056  002E  05F6               	andwf	keypad_WaitForKeyRelease@v_keyStatus_u8,f
  6057  002F  3001               	movlw	1
  6058  0030  00F5               	movwf	??_keypad_WaitForKeyRelease
  6059  0031  0875               	movf	??_keypad_WaitForKeyRelease,w
  6060  0032  07F7               	addwf	keypad_WaitForKeyRelease@i,f
  6061  0033  3004               	movlw	4
  6062  0034  0277               	subwf	keypad_WaitForKeyRelease@i,w
  6063  0035  1C03               	skipc
  6064  0036  2822               	goto	l2293
  6065  0037                     l2299:	
  6066                           
  6067                           ;keypad.c: 173: }
  6068                           ;keypad.c: 174: }while(v_keyStatus_u8 == 0);
  6069  0037  0876               	movf	keypad_WaitForKeyRelease@v_keyStatus_u8,w
  6070  0038  1903               	btfsc	3,2
  6071  0039  281B               	goto	l129
  6072                           
  6073                           ;keypad.c: 176: DELAY_us((10));
  6074  003A  300A               	movlw	10
  6075  003B  00F0               	movwf	DELAY_us@us_count
  6076  003C  3000               	movlw	0
  6077  003D  00F1               	movwf	DELAY_us@us_count+1
  6078  003E  120A  158A  2092  120A  118A  	fcall	_DELAY_us
  6079                           
  6080                           ;keypad.c: 178: v_keyStatus_u8 = 1;
  6081  0043  01F6               	clrf	keypad_WaitForKeyRelease@v_keyStatus_u8
  6082  0044  0AF6               	incf	keypad_WaitForKeyRelease@v_keyStatus_u8,f
  6083                           
  6084                           ;keypad.c: 179: for(i=0; i<(4); i++)
  6085  0045  01F7               	clrf	keypad_WaitForKeyRelease@i
  6086  0046  3004               	movlw	4
  6087  0047  0277               	subwf	keypad_WaitForKeyRelease@i,w
  6088  0048  1803               	btfsc	3,0
  6089  0049  285F               	goto	l2317
  6090  004A                     l2311:	
  6091                           
  6092                           ;keypad.c: 180: {
  6093                           ;keypad.c: 181: v_keyStatus_u8 &= GPIO_PinRead(A_ColsPins_U8[i]);
  6094  004A  0877               	movf	keypad_WaitForKeyRelease@i,w
  6095  004B  3EAE               	addlw	(low (_A_ColsPins_U8| 0))& (0+255)
  6096  004C  0084               	movwf	4
  6097  004D  1383               	bcf	3,7	;select IRP bank1
  6098  004E  0800               	movf	0,w
  6099  004F  120A  158A  24CB  120A  118A  	fcall	_GPIO_PinRead
  6100  0054  00F5               	movwf	??_keypad_WaitForKeyRelease
  6101  0055  0875               	movf	??_keypad_WaitForKeyRelease,w
  6102  0056  05F6               	andwf	keypad_WaitForKeyRelease@v_keyStatus_u8,f
  6103  0057  3001               	movlw	1
  6104  0058  00F5               	movwf	??_keypad_WaitForKeyRelease
  6105  0059  0875               	movf	??_keypad_WaitForKeyRelease,w
  6106  005A  07F7               	addwf	keypad_WaitForKeyRelease@i,f
  6107  005B  3004               	movlw	4
  6108  005C  0277               	subwf	keypad_WaitForKeyRelease@i,w
  6109  005D  1C03               	skipc
  6110  005E  284A               	goto	l2311
  6111  005F                     l2317:	
  6112                           
  6113                           ;keypad.c: 182: }
  6114                           ;keypad.c: 183: }while(v_keyStatus_u8 == 0);
  6115  005F  0876               	movf	keypad_WaitForKeyRelease@v_keyStatus_u8,w
  6116  0060  1D03               	btfss	3,2
  6117  0061  0008               	return
  6118  0062  281B               	goto	l129
  6119  0063                     __end_of_keypad_WaitForKeyRelease:	
  6120                           
  6121                           	psect	text32
  6122  0BFF                     __ptext32:	
  6123 ;; *************** function _keypad_WaitForKeyPress *****************
  6124 ;; Defined at:
  6125 ;;		line 201 in file "../00-libfiles/keypad.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;		None
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;  i               1    7[COMMON] unsigned char 
  6130 ;;  v_keyStatus_    1    6[COMMON] unsigned char 
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  1    wreg      void 
  6133 ;; Registers used:
  6134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6140 ;;      Params:         0       0       0       0       0
  6141 ;;      Locals:         2       0       0       0       0
  6142 ;;      Temps:          1       0       0       0       0
  6143 ;;      Totals:         3       0       0       0       0
  6144 ;;Total ram usage:        3 bytes
  6145 ;; Hardware stack levels used:    1
  6146 ;; Hardware stack levels required when called:    1
  6147 ;; This function calls:
  6148 ;;		_DELAY_us
  6149 ;;		_GPIO_PinRead
  6150 ;;		_GPIO_PinWrite
  6151 ;; This function is called by:
  6152 ;;		_KEYPAD_GetKey
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           
  6157                           ;psect for function _keypad_WaitForKeyPress
  6158  0BFF                     _keypad_WaitForKeyPress:	
  6159                           
  6160                           ;keypad.c: 203: uint8_t i,v_keyStatus_u8;
  6161                           ;keypad.c: 205: for (i=0;i<(4);i++)
  6162                           
  6163                           ;incstack = 0
  6164                           ; Regs used in _keypad_WaitForKeyPress: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6165  0BFF  01F7               	clrf	keypad_WaitForKeyPress@i
  6166  0C00  3004               	movlw	4
  6167  0C01  0277               	subwf	keypad_WaitForKeyPress@i,w
  6168  0C02  1803               	btfsc	3,0
  6169  0C03  2C17               	goto	l142
  6170  0C04                     l2325:	
  6171                           
  6172                           ;keypad.c: 206: {
  6173                           ;keypad.c: 207: GPIO_PinWrite(A_RowsPins_U8[i],0x00u);
  6174  0C04  01F0               	clrf	GPIO_PinWrite@var_pinValue_u8
  6175  0C05  0877               	movf	keypad_WaitForKeyPress@i,w
  6176  0C06  3EB2               	addlw	(low (_A_RowsPins_U8| 0))& (0+255)
  6177  0C07  0084               	movwf	4
  6178  0C08  1383               	bcf	3,7	;select IRP bank1
  6179  0C09  0800               	movf	0,w
  6180  0C0A  120A  118A  2205  120A  158A  	fcall	_GPIO_PinWrite
  6181  0C0F  3001               	movlw	1
  6182  0C10  00F5               	movwf	??_keypad_WaitForKeyPress
  6183  0C11  0875               	movf	??_keypad_WaitForKeyPress,w
  6184  0C12  07F7               	addwf	keypad_WaitForKeyPress@i,f
  6185  0C13  3004               	movlw	4
  6186  0C14  0277               	subwf	keypad_WaitForKeyPress@i,w
  6187  0C15  1C03               	skipc
  6188  0C16  2C04               	goto	l2325
  6189  0C17                     l142:	
  6190                           ;keypad.c: 211: {
  6191                           ;keypad.c: 212: do
  6192                           
  6193                           ;keypad.c: 208: }
  6194                           ;keypad.c: 210: do
  6195                           
  6196                           
  6197                           ;keypad.c: 213: {
  6198                           ;keypad.c: 214: v_keyStatus_u8 = 1;
  6199  0C17  01F6               	clrf	keypad_WaitForKeyPress@v_keyStatus_u8
  6200  0C18  0AF6               	incf	keypad_WaitForKeyPress@v_keyStatus_u8,f
  6201                           
  6202                           ;keypad.c: 215: for(i=0; i<(4); i++)
  6203  0C19  01F7               	clrf	keypad_WaitForKeyPress@i
  6204  0C1A  3004               	movlw	4
  6205  0C1B  0277               	subwf	keypad_WaitForKeyPress@i,w
  6206  0C1C  1803               	btfsc	3,0
  6207  0C1D  2C33               	goto	l2343
  6208  0C1E                     l2337:	
  6209                           
  6210                           ;keypad.c: 216: {
  6211                           ;keypad.c: 217: v_keyStatus_u8 &= GPIO_PinRead(A_ColsPins_U8[i]);
  6212  0C1E  0877               	movf	keypad_WaitForKeyPress@i,w
  6213  0C1F  3EAE               	addlw	(low (_A_ColsPins_U8| 0))& (0+255)
  6214  0C20  0084               	movwf	4
  6215  0C21  1383               	bcf	3,7	;select IRP bank1
  6216  0C22  0800               	movf	0,w
  6217  0C23  120A  158A  24CB  120A  158A  	fcall	_GPIO_PinRead
  6218  0C28  00F5               	movwf	??_keypad_WaitForKeyPress
  6219  0C29  0875               	movf	??_keypad_WaitForKeyPress,w
  6220  0C2A  05F6               	andwf	keypad_WaitForKeyPress@v_keyStatus_u8,f
  6221  0C2B  3001               	movlw	1
  6222  0C2C  00F5               	movwf	??_keypad_WaitForKeyPress
  6223  0C2D  0875               	movf	??_keypad_WaitForKeyPress,w
  6224  0C2E  07F7               	addwf	keypad_WaitForKeyPress@i,f
  6225  0C2F  3004               	movlw	4
  6226  0C30  0277               	subwf	keypad_WaitForKeyPress@i,w
  6227  0C31  1C03               	skipc
  6228  0C32  2C1E               	goto	l2337
  6229  0C33                     l2343:	
  6230                           
  6231                           ;keypad.c: 218: }
  6232                           ;keypad.c: 219: }while(v_keyStatus_u8 != 0);
  6233  0C33  0876               	movf	keypad_WaitForKeyPress@v_keyStatus_u8,w
  6234  0C34  1D03               	btfss	3,2
  6235  0C35  2C17               	goto	l142
  6236                           
  6237                           ;keypad.c: 222: DELAY_us((10));
  6238  0C36  300A               	movlw	10
  6239  0C37  00F0               	movwf	DELAY_us@us_count
  6240  0C38  3000               	movlw	0
  6241  0C39  00F1               	movwf	DELAY_us@us_count+1
  6242  0C3A  120A  158A  2092  120A  158A  	fcall	_DELAY_us
  6243                           
  6244                           ;keypad.c: 224: v_keyStatus_u8 = 1;
  6245  0C3F  01F6               	clrf	keypad_WaitForKeyPress@v_keyStatus_u8
  6246  0C40  0AF6               	incf	keypad_WaitForKeyPress@v_keyStatus_u8,f
  6247                           
  6248                           ;keypad.c: 225: for(i=0; i<(4); i++)
  6249  0C41  01F7               	clrf	keypad_WaitForKeyPress@i
  6250  0C42  3004               	movlw	4
  6251  0C43  0277               	subwf	keypad_WaitForKeyPress@i,w
  6252  0C44  1803               	btfsc	3,0
  6253  0C45  2C5B               	goto	l2361
  6254  0C46                     l2355:	
  6255                           
  6256                           ;keypad.c: 226: {
  6257                           ;keypad.c: 227: v_keyStatus_u8 &= GPIO_PinRead(A_ColsPins_U8[i]);
  6258  0C46  0877               	movf	keypad_WaitForKeyPress@i,w
  6259  0C47  3EAE               	addlw	(low (_A_ColsPins_U8| 0))& (0+255)
  6260  0C48  0084               	movwf	4
  6261  0C49  1383               	bcf	3,7	;select IRP bank1
  6262  0C4A  0800               	movf	0,w
  6263  0C4B  120A  158A  24CB  120A  158A  	fcall	_GPIO_PinRead
  6264  0C50  00F5               	movwf	??_keypad_WaitForKeyPress
  6265  0C51  0875               	movf	??_keypad_WaitForKeyPress,w
  6266  0C52  05F6               	andwf	keypad_WaitForKeyPress@v_keyStatus_u8,f
  6267  0C53  3001               	movlw	1
  6268  0C54  00F5               	movwf	??_keypad_WaitForKeyPress
  6269  0C55  0875               	movf	??_keypad_WaitForKeyPress,w
  6270  0C56  07F7               	addwf	keypad_WaitForKeyPress@i,f
  6271  0C57  3004               	movlw	4
  6272  0C58  0277               	subwf	keypad_WaitForKeyPress@i,w
  6273  0C59  1C03               	skipc
  6274  0C5A  2C46               	goto	l2355
  6275  0C5B                     l2361:	
  6276                           
  6277                           ;keypad.c: 228: }
  6278                           ;keypad.c: 229: }while(v_keyStatus_u8 != 0);
  6279  0C5B  0876               	movf	keypad_WaitForKeyPress@v_keyStatus_u8,w
  6280  0C5C  1903               	btfsc	3,2
  6281  0C5D  0008               	return
  6282  0C5E  2C17               	goto	l142
  6283  0C5F                     __end_of_keypad_WaitForKeyPress:	
  6284                           
  6285                           	psect	text33
  6286  0205                     __ptext33:	
  6287 ;; *************** function _GPIO_PinWrite *****************
  6288 ;; Defined at:
  6289 ;;		line 127 in file "../00-libfiles/gpio.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  enm_pinNumbe    1    wreg     enum E1088
  6292 ;;  var_pinValue    1    0[COMMON] unsigned char 
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  6295 ;;  var_portNumb    1    3[COMMON] unsigned char 
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  1    wreg      void 
  6298 ;; Registers used:
  6299 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6305 ;;      Params:         1       0       0       0       0
  6306 ;;      Locals:         2       0       0       0       0
  6307 ;;      Temps:          2       0       0       0       0
  6308 ;;      Totals:         5       0       0       0       0
  6309 ;;Total ram usage:        5 bytes
  6310 ;; Hardware stack levels used:    1
  6311 ;; This function calls:
  6312 ;;		Nothing
  6313 ;; This function is called by:
  6314 ;;		_keypad_WaitForKeyRelease
  6315 ;;		_keypad_WaitForKeyPress
  6316 ;;		_KEYPAD_GetKey
  6317 ;;		_lcd_BusyCheck
  6318 ;;		_lcd_SendHigherNibble
  6319 ;;		_lcd_SendLowerNibble
  6320 ;;		_lcd_SendCmdSignals
  6321 ;;		_lcd_SendDataSignals
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           
  6326                           ;psect for function _GPIO_PinWrite
  6327  0205                     _GPIO_PinWrite:	
  6328                           
  6329                           ;incstack = 0
  6330                           ; Regs used in _GPIO_PinWrite: [wreg-fsr0h+status,2+status,0]
  6331                           ;GPIO_PinWrite@enm_pinNumber stored from wreg
  6332  0205  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  6333                           
  6334                           ;gpio.c: 130: uint8_t var_portNumber_u8;
  6335                           ;gpio.c: 133: var_portNumber_u8 = (enm_pinNumber>>3);
  6336  0206  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  6337  0207  00F1               	movwf	??_GPIO_PinWrite
  6338  0208  3003               	movlw	3
  6339  0209                     u2345:	
  6340  0209  1003               	clrc
  6341  020A  0CF1               	rrf	??_GPIO_PinWrite,f
  6342  020B  3EFF               	addlw	-1
  6343  020C  1D03               	skipz
  6344  020D  2A09               	goto	u2345
  6345  020E  0871               	movf	??_GPIO_PinWrite,w
  6346  020F  00F2               	movwf	??_GPIO_PinWrite+1
  6347  0210  0872               	movf	??_GPIO_PinWrite+1,w
  6348  0211  00F3               	movwf	GPIO_PinWrite@var_portNumber_u8
  6349                           
  6350                           ;gpio.c: 134: enm_pinNumber = enm_pinNumber & 0x07;
  6351  0212  0874               	movf	GPIO_PinWrite@enm_pinNumber,w
  6352  0213  3907               	andlw	7
  6353  0214  00F1               	movwf	??_GPIO_PinWrite
  6354  0215  0871               	movf	??_GPIO_PinWrite,w
  6355  0216  00F4               	movwf	GPIO_PinWrite@enm_pinNumber
  6356                           
  6357                           ;gpio.c: 138: switch(var_portNumber_u8)
  6358  0217  2ACC               	goto	l1851
  6359  0218                     l1819:	
  6360                           ;gpio.c: 139: {
  6361                           ;gpio.c: 141: case 0:
  6362                           
  6363                           
  6364                           ;gpio.c: 142: ((var_pinValue_u8)? ((PORTA) |= (1<<(enm_pinNumber))): ((PORTA) &= ~(1<<(e
      +                          nm_pinNumber))));
  6365  0218  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  6366  0219  1903               	btfsc	3,2
  6367  021A  2A2B               	goto	l1823
  6368  021B  3001               	movlw	1
  6369  021C  00F1               	movwf	??_GPIO_PinWrite
  6370  021D  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6371  021E  2A21               	goto	u2364
  6372  021F                     u2365:	
  6373  021F  1003               	clrc
  6374  0220  0DF1               	rlf	??_GPIO_PinWrite,f
  6375  0221                     u2364:	
  6376  0221  3EFF               	addlw	-1
  6377  0222  1D03               	skipz
  6378  0223  2A1F               	goto	u2365
  6379  0224  0871               	movf	??_GPIO_PinWrite,w
  6380  0225  00F2               	movwf	??_GPIO_PinWrite+1
  6381  0226  0872               	movf	??_GPIO_PinWrite+1,w
  6382  0227  1283               	bcf	3,5	;RP0=0, select bank0
  6383  0228  1303               	bcf	3,6	;RP1=0, select bank0
  6384  0229  0485               	iorwf	5,f	;volatile
  6385  022A  0008               	return
  6386  022B                     l1823:	
  6387  022B  3001               	movlw	1
  6388  022C  00F1               	movwf	??_GPIO_PinWrite
  6389  022D  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6390  022E  2A31               	goto	u2374
  6391  022F                     u2375:	
  6392  022F  1003               	clrc
  6393  0230  0DF1               	rlf	??_GPIO_PinWrite,f
  6394  0231                     u2374:	
  6395  0231  3EFF               	addlw	-1
  6396  0232  1D03               	skipz
  6397  0233  2A2F               	goto	u2375
  6398  0234  0871               	movf	??_GPIO_PinWrite,w
  6399  0235  3AFF               	xorlw	255
  6400  0236  00F2               	movwf	??_GPIO_PinWrite+1
  6401  0237  0872               	movf	??_GPIO_PinWrite+1,w
  6402  0238  1283               	bcf	3,5	;RP0=0, select bank0
  6403  0239  1303               	bcf	3,6	;RP1=0, select bank0
  6404  023A  0585               	andwf	5,f	;volatile
  6405                           
  6406                           ;gpio.c: 143: break;
  6407  023B  0008               	return
  6408  023C                     l1825:	
  6409                           ;gpio.c: 147: case 1:
  6410                           
  6411                           
  6412                           ;gpio.c: 148: ((var_pinValue_u8)? ((PORTB) |= (1<<(enm_pinNumber))): ((PORTB) &= ~(1<<(e
      +                          nm_pinNumber))));
  6413  023C  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  6414  023D  1903               	btfsc	3,2
  6415  023E  2A4F               	goto	l1829
  6416  023F  3001               	movlw	1
  6417  0240  00F1               	movwf	??_GPIO_PinWrite
  6418  0241  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6419  0242  2A45               	goto	u2394
  6420  0243                     u2395:	
  6421  0243  1003               	clrc
  6422  0244  0DF1               	rlf	??_GPIO_PinWrite,f
  6423  0245                     u2394:	
  6424  0245  3EFF               	addlw	-1
  6425  0246  1D03               	skipz
  6426  0247  2A43               	goto	u2395
  6427  0248  0871               	movf	??_GPIO_PinWrite,w
  6428  0249  00F2               	movwf	??_GPIO_PinWrite+1
  6429  024A  0872               	movf	??_GPIO_PinWrite+1,w
  6430  024B  1283               	bcf	3,5	;RP0=0, select bank0
  6431  024C  1303               	bcf	3,6	;RP1=0, select bank0
  6432  024D  0486               	iorwf	6,f	;volatile
  6433  024E  0008               	return
  6434  024F                     l1829:	
  6435  024F  3001               	movlw	1
  6436  0250  00F1               	movwf	??_GPIO_PinWrite
  6437  0251  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6438  0252  2A55               	goto	u2404
  6439  0253                     u2405:	
  6440  0253  1003               	clrc
  6441  0254  0DF1               	rlf	??_GPIO_PinWrite,f
  6442  0255                     u2404:	
  6443  0255  3EFF               	addlw	-1
  6444  0256  1D03               	skipz
  6445  0257  2A53               	goto	u2405
  6446  0258  0871               	movf	??_GPIO_PinWrite,w
  6447  0259  3AFF               	xorlw	255
  6448  025A  00F2               	movwf	??_GPIO_PinWrite+1
  6449  025B  0872               	movf	??_GPIO_PinWrite+1,w
  6450  025C  1283               	bcf	3,5	;RP0=0, select bank0
  6451  025D  1303               	bcf	3,6	;RP1=0, select bank0
  6452  025E  0586               	andwf	6,f	;volatile
  6453                           
  6454                           ;gpio.c: 149: break;
  6455  025F  0008               	return
  6456  0260                     l1831:	
  6457                           ;gpio.c: 153: case 2:
  6458                           
  6459                           
  6460                           ;gpio.c: 154: ((var_pinValue_u8)? ((PORTC) |= (1<<(enm_pinNumber))): ((PORTC) &= ~(1<<(e
      +                          nm_pinNumber))));
  6461  0260  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  6462  0261  1903               	btfsc	3,2
  6463  0262  2A73               	goto	l1835
  6464  0263  3001               	movlw	1
  6465  0264  00F1               	movwf	??_GPIO_PinWrite
  6466  0265  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6467  0266  2A69               	goto	u2424
  6468  0267                     u2425:	
  6469  0267  1003               	clrc
  6470  0268  0DF1               	rlf	??_GPIO_PinWrite,f
  6471  0269                     u2424:	
  6472  0269  3EFF               	addlw	-1
  6473  026A  1D03               	skipz
  6474  026B  2A67               	goto	u2425
  6475  026C  0871               	movf	??_GPIO_PinWrite,w
  6476  026D  00F2               	movwf	??_GPIO_PinWrite+1
  6477  026E  0872               	movf	??_GPIO_PinWrite+1,w
  6478  026F  1283               	bcf	3,5	;RP0=0, select bank0
  6479  0270  1303               	bcf	3,6	;RP1=0, select bank0
  6480  0271  0487               	iorwf	7,f	;volatile
  6481  0272  0008               	return
  6482  0273                     l1835:	
  6483  0273  3001               	movlw	1
  6484  0274  00F1               	movwf	??_GPIO_PinWrite
  6485  0275  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6486  0276  2A79               	goto	u2434
  6487  0277                     u2435:	
  6488  0277  1003               	clrc
  6489  0278  0DF1               	rlf	??_GPIO_PinWrite,f
  6490  0279                     u2434:	
  6491  0279  3EFF               	addlw	-1
  6492  027A  1D03               	skipz
  6493  027B  2A77               	goto	u2435
  6494  027C  0871               	movf	??_GPIO_PinWrite,w
  6495  027D  3AFF               	xorlw	255
  6496  027E  00F2               	movwf	??_GPIO_PinWrite+1
  6497  027F  0872               	movf	??_GPIO_PinWrite+1,w
  6498  0280  1283               	bcf	3,5	;RP0=0, select bank0
  6499  0281  1303               	bcf	3,6	;RP1=0, select bank0
  6500  0282  0587               	andwf	7,f	;volatile
  6501                           
  6502                           ;gpio.c: 155: break;
  6503  0283  0008               	return
  6504  0284                     l1837:	
  6505                           ;gpio.c: 159: case 3:
  6506                           
  6507                           
  6508                           ;gpio.c: 160: ((var_pinValue_u8)? ((PORTD) |= (1<<(enm_pinNumber))): ((PORTD) &= ~(1<<(e
      +                          nm_pinNumber))));
  6509  0284  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  6510  0285  1903               	btfsc	3,2
  6511  0286  2A97               	goto	l1841
  6512  0287  3001               	movlw	1
  6513  0288  00F1               	movwf	??_GPIO_PinWrite
  6514  0289  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6515  028A  2A8D               	goto	u2454
  6516  028B                     u2455:	
  6517  028B  1003               	clrc
  6518  028C  0DF1               	rlf	??_GPIO_PinWrite,f
  6519  028D                     u2454:	
  6520  028D  3EFF               	addlw	-1
  6521  028E  1D03               	skipz
  6522  028F  2A8B               	goto	u2455
  6523  0290  0871               	movf	??_GPIO_PinWrite,w
  6524  0291  00F2               	movwf	??_GPIO_PinWrite+1
  6525  0292  0872               	movf	??_GPIO_PinWrite+1,w
  6526  0293  1283               	bcf	3,5	;RP0=0, select bank0
  6527  0294  1303               	bcf	3,6	;RP1=0, select bank0
  6528  0295  0488               	iorwf	8,f	;volatile
  6529  0296  0008               	return
  6530  0297                     l1841:	
  6531  0297  3001               	movlw	1
  6532  0298  00F1               	movwf	??_GPIO_PinWrite
  6533  0299  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6534  029A  2A9D               	goto	u2464
  6535  029B                     u2465:	
  6536  029B  1003               	clrc
  6537  029C  0DF1               	rlf	??_GPIO_PinWrite,f
  6538  029D                     u2464:	
  6539  029D  3EFF               	addlw	-1
  6540  029E  1D03               	skipz
  6541  029F  2A9B               	goto	u2465
  6542  02A0  0871               	movf	??_GPIO_PinWrite,w
  6543  02A1  3AFF               	xorlw	255
  6544  02A2  00F2               	movwf	??_GPIO_PinWrite+1
  6545  02A3  0872               	movf	??_GPIO_PinWrite+1,w
  6546  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  6547  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  6548  02A6  0588               	andwf	8,f	;volatile
  6549                           
  6550                           ;gpio.c: 161: break;
  6551  02A7  0008               	return
  6552  02A8                     l1843:	
  6553                           ;gpio.c: 165: case 4:
  6554                           
  6555                           
  6556                           ;gpio.c: 166: ((var_pinValue_u8)? ((PORTE) |= (1<<(enm_pinNumber))): ((PORTE) &= ~(1<<(e
      +                          nm_pinNumber))));
  6557  02A8  0870               	movf	GPIO_PinWrite@var_pinValue_u8,w
  6558  02A9  1903               	btfsc	3,2
  6559  02AA  2ABB               	goto	l1847
  6560  02AB  3001               	movlw	1
  6561  02AC  00F1               	movwf	??_GPIO_PinWrite
  6562  02AD  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6563  02AE  2AB1               	goto	u2484
  6564  02AF                     u2485:	
  6565  02AF  1003               	clrc
  6566  02B0  0DF1               	rlf	??_GPIO_PinWrite,f
  6567  02B1                     u2484:	
  6568  02B1  3EFF               	addlw	-1
  6569  02B2  1D03               	skipz
  6570  02B3  2AAF               	goto	u2485
  6571  02B4  0871               	movf	??_GPIO_PinWrite,w
  6572  02B5  00F2               	movwf	??_GPIO_PinWrite+1
  6573  02B6  0872               	movf	??_GPIO_PinWrite+1,w
  6574  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  6575  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  6576  02B9  0489               	iorwf	9,f	;volatile
  6577  02BA  0008               	return
  6578  02BB                     l1847:	
  6579  02BB  3001               	movlw	1
  6580  02BC  00F1               	movwf	??_GPIO_PinWrite
  6581  02BD  0A74               	incf	GPIO_PinWrite@enm_pinNumber,w
  6582  02BE  2AC1               	goto	u2494
  6583  02BF                     u2495:	
  6584  02BF  1003               	clrc
  6585  02C0  0DF1               	rlf	??_GPIO_PinWrite,f
  6586  02C1                     u2494:	
  6587  02C1  3EFF               	addlw	-1
  6588  02C2  1D03               	skipz
  6589  02C3  2ABF               	goto	u2495
  6590  02C4  0871               	movf	??_GPIO_PinWrite,w
  6591  02C5  3AFF               	xorlw	255
  6592  02C6  00F2               	movwf	??_GPIO_PinWrite+1
  6593  02C7  0872               	movf	??_GPIO_PinWrite+1,w
  6594  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  6595  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  6596  02CA  0589               	andwf	9,f	;volatile
  6597                           
  6598                           ;gpio.c: 169: }
  6599                           
  6600                           ;gpio.c: 167: break;
  6601  02CB  0008               	return
  6602  02CC                     l1851:	
  6603  02CC  0873               	movf	GPIO_PinWrite@var_portNumber_u8,w
  6604                           
  6605                           ; Switch size 1, requested type "space"
  6606                           ; Number of cases is 5, Range of values is 0 to 4
  6607                           ; switch strategies available:
  6608                           ; Name         Instructions Cycles
  6609                           ; simple_byte           16     9 (average)
  6610                           ; direct_byte           23     8 (fixed)
  6611                           ; jumptable            260     6 (fixed)
  6612                           ;	Chosen strategy is simple_byte
  6613  02CD  3A00               	xorlw	0	; case 0
  6614  02CE  1903               	skipnz
  6615  02CF  2A18               	goto	l1819
  6616  02D0  3A01               	xorlw	1	; case 1
  6617  02D1  1903               	skipnz
  6618  02D2  2A3C               	goto	l1825
  6619  02D3  3A03               	xorlw	3	; case 2
  6620  02D4  1903               	skipnz
  6621  02D5  2A60               	goto	l1831
  6622  02D6  3A01               	xorlw	1	; case 3
  6623  02D7  1903               	skipnz
  6624  02D8  2A84               	goto	l1837
  6625  02D9  3A07               	xorlw	7	; case 4
  6626  02DA  1903               	skipnz
  6627  02DB  2AA8               	goto	l1843
  6628  02DC  2ADD               	goto	l92
  6629  02DD                     l92:	
  6630  02DD  0008               	return
  6631  02DE                     __end_of_GPIO_PinWrite:	
  6632                           
  6633                           	psect	text34
  6634  0CCB                     __ptext34:	
  6635 ;; *************** function _GPIO_PinRead *****************
  6636 ;; Defined at:
  6637 ;;		line 192 in file "../00-libfiles/gpio.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;  enm_pinNumbe    1    wreg     enum E1088
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  enm_pinNumbe    1    4[COMMON] enum E1088
  6642 ;;  returnStatus    1    3[COMMON] unsigned char 
  6643 ;;  var_portNumb    1    2[COMMON] unsigned char 
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  1    wreg      unsigned char 
  6646 ;; Registers used:
  6647 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6653 ;;      Params:         0       0       0       0       0
  6654 ;;      Locals:         3       0       0       0       0
  6655 ;;      Temps:          2       0       0       0       0
  6656 ;;      Totals:         5       0       0       0       0
  6657 ;;Total ram usage:        5 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; This function calls:
  6660 ;;		Nothing
  6661 ;; This function is called by:
  6662 ;;		_keypad_WaitForKeyRelease
  6663 ;;		_keypad_WaitForKeyPress
  6664 ;;		_KEYPAD_GetKey
  6665 ;;		_lcd_BusyCheck
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           
  6670                           ;psect for function _GPIO_PinRead
  6671  0CCB                     _GPIO_PinRead:	
  6672                           
  6673                           ;incstack = 0
  6674                           ; Regs used in _GPIO_PinRead: [wreg-fsr0h+status,2+status,0]
  6675                           ;GPIO_PinRead@enm_pinNumber stored from wreg
  6676  0CCB  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  6677                           
  6678                           ;gpio.c: 194: uint8_t var_portNumber_u8;
  6679                           ;gpio.c: 195: uint8_t returnStatus = 0;
  6680  0CCC  01F3               	clrf	GPIO_PinRead@returnStatus
  6681                           
  6682                           ;gpio.c: 197: var_portNumber_u8 = (enm_pinNumber>>3);
  6683  0CCD  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  6684  0CCE  00F0               	movwf	??_GPIO_PinRead
  6685  0CCF  3003               	movlw	3
  6686  0CD0                     u2505:	
  6687  0CD0  1003               	clrc
  6688  0CD1  0CF0               	rrf	??_GPIO_PinRead,f
  6689  0CD2  3EFF               	addlw	-1
  6690  0CD3  1D03               	skipz
  6691  0CD4  2CD0               	goto	u2505
  6692  0CD5  0870               	movf	??_GPIO_PinRead,w
  6693  0CD6  00F1               	movwf	??_GPIO_PinRead+1
  6694  0CD7  0871               	movf	??_GPIO_PinRead+1,w
  6695  0CD8  00F2               	movwf	GPIO_PinRead@var_portNumber_u8
  6696                           
  6697                           ;gpio.c: 198: enm_pinNumber = enm_pinNumber & 0x07;
  6698  0CD9  0874               	movf	GPIO_PinRead@enm_pinNumber,w
  6699  0CDA  3907               	andlw	7
  6700  0CDB  00F0               	movwf	??_GPIO_PinRead
  6701  0CDC  0870               	movf	??_GPIO_PinRead,w
  6702  0CDD  00F4               	movwf	GPIO_PinRead@enm_pinNumber
  6703                           
  6704                           ;gpio.c: 201: switch(var_portNumber_u8)
  6705  0CDE  2D2D               	goto	l1871
  6706  0CDF                     l1859:	
  6707                           ;gpio.c: 202: {
  6708                           ;gpio.c: 204: case 0:
  6709                           
  6710                           
  6711                           ;gpio.c: 205: returnStatus = (((PORTA)&((1<<(enm_pinNumber))))!=0u);
  6712  0CDF  3001               	movlw	1
  6713  0CE0  00F0               	movwf	??_GPIO_PinRead
  6714  0CE1  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6715  0CE2  2CE5               	goto	u2514
  6716  0CE3                     u2515:	
  6717  0CE3  1003               	clrc
  6718  0CE4  0DF0               	rlf	??_GPIO_PinRead,f
  6719  0CE5                     u2514:	
  6720  0CE5  3EFF               	addlw	-1
  6721  0CE6  1D03               	skipz
  6722  0CE7  2CE3               	goto	u2515
  6723  0CE8  0870               	movf	??_GPIO_PinRead,w
  6724  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  6725  0CEA  1303               	bcf	3,6	;RP1=0, select bank0
  6726  0CEB  0505               	andwf	5,w	;volatile
  6727  0CEC  2D24               	goto	L9
  6728  0CED                     l1861:	
  6729                           ;gpio.c: 209: case 1:
  6730                           
  6731                           ;gpio.c: 206: break;
  6732                           
  6733                           
  6734                           ;gpio.c: 210: returnStatus = (((PORTB)&((1<<(enm_pinNumber))))!=0u);
  6735  0CED  3001               	movlw	1
  6736  0CEE  00F0               	movwf	??_GPIO_PinRead
  6737  0CEF  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6738  0CF0  2CF3               	goto	u2544
  6739  0CF1                     u2545:	
  6740  0CF1  1003               	clrc
  6741  0CF2  0DF0               	rlf	??_GPIO_PinRead,f
  6742  0CF3                     u2544:	
  6743  0CF3  3EFF               	addlw	-1
  6744  0CF4  1D03               	skipz
  6745  0CF5  2CF1               	goto	u2545
  6746  0CF6  0870               	movf	??_GPIO_PinRead,w
  6747  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  6748  0CF8  1303               	bcf	3,6	;RP1=0, select bank0
  6749  0CF9  0506               	andwf	6,w	;volatile
  6750  0CFA  2D24               	goto	L9
  6751  0CFB                     l1863:	
  6752                           ;gpio.c: 214: case 2:
  6753                           
  6754                           ;gpio.c: 211: break;
  6755                           
  6756                           
  6757                           ;gpio.c: 215: returnStatus = (((PORTC)&((1<<(enm_pinNumber))))!=0u);
  6758  0CFB  3001               	movlw	1
  6759  0CFC  00F0               	movwf	??_GPIO_PinRead
  6760  0CFD  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6761  0CFE  2D01               	goto	u2574
  6762  0CFF                     u2575:	
  6763  0CFF  1003               	clrc
  6764  0D00  0DF0               	rlf	??_GPIO_PinRead,f
  6765  0D01                     u2574:	
  6766  0D01  3EFF               	addlw	-1
  6767  0D02  1D03               	skipz
  6768  0D03  2CFF               	goto	u2575
  6769  0D04  0870               	movf	??_GPIO_PinRead,w
  6770  0D05  1283               	bcf	3,5	;RP0=0, select bank0
  6771  0D06  1303               	bcf	3,6	;RP1=0, select bank0
  6772  0D07  0507               	andwf	7,w	;volatile
  6773  0D08  2D24               	goto	L9
  6774  0D09                     l1865:	
  6775                           ;gpio.c: 220: case 3:
  6776                           
  6777                           ;gpio.c: 216: break;
  6778                           
  6779                           
  6780                           ;gpio.c: 221: returnStatus = (((PORTD)&((1<<(enm_pinNumber))))!=0u);
  6781  0D09  3001               	movlw	1
  6782  0D0A  00F0               	movwf	??_GPIO_PinRead
  6783  0D0B  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6784  0D0C  2D0F               	goto	u2604
  6785  0D0D                     u2605:	
  6786  0D0D  1003               	clrc
  6787  0D0E  0DF0               	rlf	??_GPIO_PinRead,f
  6788  0D0F                     u2604:	
  6789  0D0F  3EFF               	addlw	-1
  6790  0D10  1D03               	skipz
  6791  0D11  2D0D               	goto	u2605
  6792  0D12  0870               	movf	??_GPIO_PinRead,w
  6793  0D13  1283               	bcf	3,5	;RP0=0, select bank0
  6794  0D14  1303               	bcf	3,6	;RP1=0, select bank0
  6795  0D15  0508               	andwf	8,w	;volatile
  6796  0D16  2D24               	goto	L9
  6797  0D17                     l1867:	
  6798                           ;gpio.c: 226: case 4:
  6799                           
  6800                           ;gpio.c: 222: break;
  6801                           
  6802                           
  6803                           ;gpio.c: 227: returnStatus = (((PORTE)&((1<<(enm_pinNumber))))!=0u);
  6804  0D17  3001               	movlw	1
  6805  0D18  00F0               	movwf	??_GPIO_PinRead
  6806  0D19  0A74               	incf	GPIO_PinRead@enm_pinNumber,w
  6807  0D1A  2D1D               	goto	u2634
  6808  0D1B                     u2635:	
  6809  0D1B  1003               	clrc
  6810  0D1C  0DF0               	rlf	??_GPIO_PinRead,f
  6811  0D1D                     u2634:	
  6812  0D1D  3EFF               	addlw	-1
  6813  0D1E  1D03               	skipz
  6814  0D1F  2D1B               	goto	u2635
  6815  0D20  0870               	movf	??_GPIO_PinRead,w
  6816  0D21  1283               	bcf	3,5	;RP0=0, select bank0
  6817  0D22  1303               	bcf	3,6	;RP1=0, select bank0
  6818  0D23  0509               	andwf	9,w	;volatile
  6819  0D24                     L9:	
  6820  0D24  1903               	btfsc	3,2
  6821  0D25  2D28               	goto	u2640
  6822  0D26  3001               	movlw	1
  6823  0D27  2D29               	goto	u2650
  6824  0D28                     u2640:	
  6825  0D28  3000               	movlw	0
  6826  0D29                     u2650:	
  6827  0D29  00F1               	movwf	??_GPIO_PinRead+1
  6828  0D2A  0871               	movf	??_GPIO_PinRead+1,w
  6829  0D2B  00F3               	movwf	GPIO_PinRead@returnStatus
  6830                           
  6831                           ;gpio.c: 229: }
  6832                           
  6833                           ;gpio.c: 228: break;
  6834  0D2C  2D3E               	goto	l1873
  6835  0D2D                     l1871:	
  6836  0D2D  0872               	movf	GPIO_PinRead@var_portNumber_u8,w
  6837                           
  6838                           ; Switch size 1, requested type "space"
  6839                           ; Number of cases is 5, Range of values is 0 to 4
  6840                           ; switch strategies available:
  6841                           ; Name         Instructions Cycles
  6842                           ; simple_byte           16     9 (average)
  6843                           ; direct_byte           23     8 (fixed)
  6844                           ; jumptable            260     6 (fixed)
  6845                           ;	Chosen strategy is simple_byte
  6846  0D2E  3A00               	xorlw	0	; case 0
  6847  0D2F  1903               	skipnz
  6848  0D30  2CDF               	goto	l1859
  6849  0D31  3A01               	xorlw	1	; case 1
  6850  0D32  1903               	skipnz
  6851  0D33  2CED               	goto	l1861
  6852  0D34  3A03               	xorlw	3	; case 2
  6853  0D35  1903               	skipnz
  6854  0D36  2CFB               	goto	l1863
  6855  0D37  3A01               	xorlw	1	; case 3
  6856  0D38  1903               	skipnz
  6857  0D39  2D09               	goto	l1865
  6858  0D3A  3A07               	xorlw	7	; case 4
  6859  0D3B  1903               	skipnz
  6860  0D3C  2D17               	goto	l1867
  6861  0D3D  2D3E               	goto	l1873
  6862  0D3E                     l1873:	
  6863                           
  6864                           ;gpio.c: 230: return returnStatus;
  6865  0D3E  0873               	movf	GPIO_PinRead@returnStatus,w
  6866  0D3F  0008               	return
  6867  0D40                     __end_of_GPIO_PinRead:	
  6868                           
  6869                           	psect	text35
  6870  0892                     __ptext35:	
  6871 ;; *************** function _DELAY_us *****************
  6872 ;; Defined at:
  6873 ;;		line 56 in file "../00-libfiles/delay.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;  us_count        2    0[COMMON] unsigned int 
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;		None
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  1    wreg      void 
  6880 ;; Registers used:
  6881 ;;		wreg, status,2, status,0
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6887 ;;      Params:         2       0       0       0       0
  6888 ;;      Locals:         0       0       0       0       0
  6889 ;;      Temps:          0       0       0       0       0
  6890 ;;      Totals:         2       0       0       0       0
  6891 ;;Total ram usage:        2 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; This function calls:
  6894 ;;		Nothing
  6895 ;; This function is called by:
  6896 ;;		_DELAY_ms
  6897 ;;		_keypad_WaitForKeyRelease
  6898 ;;		_keypad_WaitForKeyPress
  6899 ;;		_lcd_BusyCheck
  6900 ;;		_lcd_Reset
  6901 ;;		_lcd_SendCmdSignals
  6902 ;;		_lcd_SendDataSignals
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           
  6907                           ;psect for function _DELAY_us
  6908  0892                     _DELAY_us:	
  6909  0892                     l1767:	
  6910                           ;delay.c: 58: while (us_count != 0)
  6911                           
  6912                           ;incstack = 0
  6913                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  6914                           
  6915  0892  0870               	movf	DELAY_us@us_count,w
  6916  0893  0471               	iorwf	DELAY_us@us_count+1,w
  6917  0894  1903               	btfsc	3,2
  6918  0895  0008               	return
  6919                           
  6920                           ;delay.c: 59: {
  6921                           ;delay.c: 60: us_count--;
  6922  0896  3001               	movlw	1
  6923  0897  02F0               	subwf	DELAY_us@us_count,f
  6924  0898  3000               	movlw	0
  6925  0899  1C03               	skipc
  6926  089A  03F1               	decf	DELAY_us@us_count+1,f
  6927  089B  02F1               	subwf	DELAY_us@us_count+1,f
  6928  089C  2892               	goto	l1767
  6929  089D                     __end_of_DELAY_us:	
  6930  007E                     btemp	set	126	;btemp
  6931  007E                     wtemp	set	126
  6932  007E                     wtemp0	set	126
  6933  0080                     wtemp1	set	128
  6934  0082                     wtemp2	set	130
  6935  0084                     wtemp3	set	132
  6936  0086                     wtemp4	set	134
  6937  0088                     wtemp5	set	136
  6938  007F                     wtemp6	set	127
  6939  007E                     ttemp	set	126
  6940  007E                     ttemp0	set	126
  6941  0081                     ttemp1	set	129
  6942  0084                     ttemp2	set	132
  6943  0087                     ttemp3	set	135
  6944  007F                     ttemp4	set	127
  6945  007E                     ltemp	set	126
  6946  007E                     ltemp0	set	126
  6947  0082                     ltemp1	set	130
  6948  0086                     ltemp2	set	134
  6949  0080                     ltemp3	set	128


Data Sizes:
    Strings     13
    Constant    16
    Data        4
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      79
    BANK1            80      0      26
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Printf@str	PTR unsigned char  size(1) Largest target is 0

    LCD_Printf@argList	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    LCD_Printf@ptr	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    LCD_Printf@argp	PTR void [1] size(1) Largest target is 1
		 -> ?_LCD_Printf(COMMON[1]), 

    LCD_DisplayString@ptr_stringPointer_u8	PTR const unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->_KEYPAD_GetKey
    _main->_LCD_Init
    _LCD_SetUp->_GPIO_PinDirection
    _LCD_Printf->_LCD_DisplayString
    _LCD_DisplayString->_LCD_DisplayChar
    _LCD_DisplayFloatNumber->___ftmul
    _LCD_DisplayFloatNumber->___lltoft
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftneg->___lltoft
    ___ftmul->___ftpack
    ___ftadd->___lltoft
    _LCD_DisplayNumber->___lldiv
    ___bmul->___lldiv
    _LCD_DisplayChar->_LCD_GoToNextLine
    _lcd_DataWrite->_lcd_BusyCheck
    _lcd_DataWrite->_lcd_SendHigherNibble
    _lcd_DataWrite->_lcd_SendLowerNibble
    _lcd_SendDataSignals->_GPIO_PinWrite
    _LCD_GoToNextLine->_LCD_CmdWrite
    _lcd_Reset->_lcd_SendHigherNibble
    _LCD_Clear->_LCD_GoToLine
    _LCD_GoToLine->_LCD_CmdWrite
    _LCD_CmdWrite->_lcd_BusyCheck
    _LCD_CmdWrite->_lcd_SendHigherNibble
    _LCD_CmdWrite->_lcd_SendLowerNibble
    _lcd_SendLowerNibble->_GPIO_PinWrite
    _lcd_SendHigherNibble->_GPIO_PinWrite
    _lcd_SendCmdSignals->_GPIO_PinWrite
    _lcd_BusyCheck->_GPIO_PinDirection
    _lcd_BusyCheck->_GPIO_PinRead
    _lcd_BusyCheck->_GPIO_PinWrite
    _DELAY_ms->_DELAY_us
    _KEYPAD_Init->_GPIO_PinDirection
    _KEYPAD_GetKey->_keypad_WaitForKeyPress
    _KEYPAD_GetKey->_keypad_WaitForKeyRelease
    _keypad_WaitForKeyRelease->_GPIO_PinRead
    _keypad_WaitForKeyRelease->_GPIO_PinWrite
    _keypad_WaitForKeyPress->_GPIO_PinRead
    _keypad_WaitForKeyPress->_GPIO_PinWrite

Critical Paths under _main in BANK0

    _main->_LCD_Printf
    _LCD_Printf->_LCD_DisplayFloatNumber
    _LCD_DisplayFloatNumber->_LCD_DisplayNumber
    ___fttol->___ftmul
    ___ftadd->___ftneg
    _LCD_DisplayNumber->___bmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0  212678
                                             66 BANK0     11    11      0
                      _KEYPAD_GetKey
                        _KEYPAD_Init
                    _LCD_DisplayChar
                       _LCD_GoToLine
                           _LCD_Init
                         _LCD_Printf
                          _LCD_SetUp
 ---------------------------------------------------------------------------------
 (1) _LCD_SetUp                                           12     2     10    2295
                                              5 COMMON     2     2      0
                                              0 BANK0     10     0     10
                  _GPIO_PinDirection
 ---------------------------------------------------------------------------------
 (1) _LCD_Printf                                          23    23      0  125714
                                             43 BANK0     23    23      0
                    _LCD_DisplayChar
             _LCD_DisplayFloatNumber
                  _LCD_DisplayNumber
                  _LCD_DisplayString
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayString                                    2     2      0   22568
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                    _LCD_DisplayChar
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayFloatNumber                               8     5      3   54506
                                             35 BANK0      8     5      3
                    _LCD_DisplayChar
                  _LCD_DisplayNumber
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    1790
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     358
                                             10 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                              0 BANK0      3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2100
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2694
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayNumber                                   31    26      5   24782
                                              4 BANK0     31    26      5
                    _LCD_DisplayChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_DisplayChar                                      2     2      0   22496
                                             11 COMMON     2     2      0
                   _LCD_GoToNextLine
                      _lcd_DataWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_DataWrite                                        3     3      0   11215
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                _lcd_SendDataSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendDataSignals                                  0     0      0    2488
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _LCD_GoToNextLine                                     1     1      0   11215
                                             10 COMMON     1     1      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     2      1   40726
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                           _DELAY_ms
                          _LCD_Clear
                       _LCD_CmdWrite
                          _lcd_Reset
 ---------------------------------------------------------------------------------
 (2) _lcd_Reset                                            0     0      0    5958
                           _DELAY_ms
                           _DELAY_us
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0   22496
                       _LCD_CmdWrite
                       _LCD_GoToLine
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToLine                                         2     2      0   11281
                                             10 COMMON     2     2      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (5) _LCD_CmdWrite                                         3     3      0   11215
                                              7 COMMON     3     3      0
                      _lcd_BusyCheck
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendLowerNibble                                  2     2      0    1917
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (5) _lcd_SendHigherNibble                                 2     2      0    1917
                                              5 COMMON     2     2      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (6) _lcd_SendCmdSignals                                   0     0      0    2488
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (5) _lcd_BusyCheck                                        2     2      0    4804
                                              5 COMMON     2     2      0
                           _DELAY_ms
                           _DELAY_us
                  _GPIO_PinDirection
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (6) _DELAY_ms                                             2     0      2     894
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (1) _KEYPAD_Init                                         10     3      7    1876
                                              5 COMMON     8     1      7
                                              0 BANK0      2     2      0
                  _GPIO_PinDirection
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinDirection                                    5     4      1    1193
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _KEYPAD_GetKey                                        6     6      0    8267
                                              8 COMMON     6     6      0
                       _GPIO_PinRead
                      _GPIO_PinWrite
             _keypad_WaitForKeyPress
           _keypad_WaitForKeyRelease
 ---------------------------------------------------------------------------------
 (2) _keypad_WaitForKeyRelease                             3     3      0    2946
                                              5 COMMON     3     3      0
                           _DELAY_us
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (2) _keypad_WaitForKeyPress                               3     3      0    2946
                                              5 COMMON     3     3      0
                           _DELAY_us
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (6) _GPIO_PinWrite                                        5     4      1    1829
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (6) _GPIO_PinRead                                         5     5      0     206
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (6) _DELAY_us                                             2     0      2     659
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _KEYPAD_GetKey
     _GPIO_PinRead
     _GPIO_PinWrite
     _keypad_WaitForKeyPress
       _DELAY_us
       _GPIO_PinRead
       _GPIO_PinWrite
     _keypad_WaitForKeyRelease
       _DELAY_us
       _GPIO_PinRead
       _GPIO_PinWrite
   _KEYPAD_Init
     _GPIO_PinDirection
   _LCD_DisplayChar
     _LCD_GoToNextLine
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
     _lcd_DataWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendDataSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
   _LCD_GoToLine
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
   _LCD_Init
     _DELAY_ms
       _DELAY_us
     _LCD_Clear
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
       _LCD_GoToLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
     _lcd_Reset
       _DELAY_ms
         _DELAY_us
       _DELAY_us
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
   _LCD_Printf
     _LCD_DisplayChar
       _LCD_GoToNextLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _lcd_DataWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendDataSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
     _LCD_DisplayFloatNumber
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _LCD_DisplayNumber
         _LCD_DisplayChar
           _LCD_GoToNextLine
             _LCD_CmdWrite
               _lcd_BusyCheck
                 _DELAY_ms
                   _DELAY_us
                 _DELAY_us
                 _GPIO_PinDirection
                 _GPIO_PinRead
                 _GPIO_PinWrite
               _lcd_SendCmdSignals
                 _DELAY_us
                 _GPIO_PinWrite
               _lcd_SendHigherNibble
                 _GPIO_PinWrite
               _lcd_SendLowerNibble
                 _GPIO_PinWrite
           _lcd_DataWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendDataSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         ___bmul
           ___lldiv (ARG)
         ___lldiv
       ___ftadd
         ___ftneg (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
     _LCD_DisplayNumber
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       ___bmul
         ___lldiv (ARG)
       ___lldiv
     _LCD_DisplayString
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     ___bmul
       ___lldiv (ARG)
   _LCD_SetUp
     _GPIO_PinDirection

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      1A       7       32.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      77      12        0.0%
ABS                  0      0      77       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Feb 22 23:35:04 2016

                    _LCD_DisplayFloatNumber 0F61                                           pc 0002  
                            ___bmul@product 0022                                 __CFG_CP$OFF 0000  
                             ?_LCD_CmdWrite 0070                     ?_keypad_WaitForKeyPress 0070  
                                        l62 03B6                                          l92 02DD  
                               ?_LCD_Printf 0070                                          fsr 0004  
                             ?_LCD_GoToLine 0070                    _keypad_WaitForKeyRelease 0003  
                              ___ftadd@exp1 002F                                ___ftadd@exp2 002E  
                               __CFG_LVP$ON 0000                                ___ftadd@sign 002D  
                                       l142 0C17                                         l311 067A  
                                       l216 0B3E                                         l129 001B  
                                       l336 0E67                                         l620 0C95  
                                       l372 0DA6                                         l711 0F47  
                                       l627 0CAA                                         l651 0551  
                                       l628 0CB2                                __CFG_CPD$OFF 0000  
                                       fsr0 0004                                         indf 0000  
                              __CFG_FOSC$HS 0000      keypad_WaitForKeyRelease@v_keyStatus_u8 0076  
                              ?_KEYPAD_Init 0075                     __end_of_LCD_DisplayChar 0938  
                                      l2001 0CA4                                        l2021 0BC1  
                                      l2101 04D2                                        l2111 04E8  
                                      l2033 0BF6                                        l2105 04D9  
                                      l2201 00F8                                        l2019 0BB1  
                                      l2051 03C0                                        l2131 0523  
                                      l2123 0502                                        l2029 0BE9  
                                      l2141 0541                                        l2133 0528  
                                      l2205 0108                                        l2311 004A  
                                      l2071 046F                                        l2063 040D  
                                      l2151 0575                                        l2143 054D  
                                      l2135 052C                                        l2081 0410  
                                      l2057 03FE                                        l2161 0598  
                                      l2129 0517                                        l2083 0480  
                                      l2059 0402                                        l2147 0563  
                                      l2171 007B                                        l2325 0C04  
                                      l2317 005F                                        l2413 0B89  
                                      l2093 04A5                                        l2261 0F58  
                                      l2229 0EED                                        l2343 0C33  
                                      l2407 0B74                                        l2087 0490  
                                      l2079 047B                                        l2255 0F3C  
                                      l2247 0F1F                                        l2271 094E  
                                      l2503 01C9                                        l2361 0C5B  
                                      l2337 0C1E                                        l2281 0008  
                                      l2441 0DE3                                        l2521 0B1C  
                                      l2193 00E0                                        l2177 0091  
                                      l2257 0F4A                                        l2249 0F2F  
                                      l2355 0C46                                        l2435 0DCF  
                                      l1803 0370                                        l2611 0717  
                                      l2293 0022                                        l1805 0381  
                                      l1813 03A5                                        l2189 00D0  
                                      l2269 093C                                        l2621 073C  
                                      l2605 06F1                                        l1831 0260  
                                      l1823 022B                                        l2463 0E10  
                                      l2455 0DF8                                        l2447 0DE8  
                                      l2527 0B2D                                        l2631 0769  
                                      l1841 0297                                        l1825 023C  
                                      l2473 0E27                                        l1809 0394  
                                      l1921 09E9                                        l2553 05EC  
                                      l1843 02A8                                        l1835 0273  
                                      l1819 0218                                        l1851 02CC  
                                      l2299 0037                                        l2459 0E08  
                                      l2643 0798                                        l2619 072B  
                                      l2651 07D2                                        l2491 0198  
                                      l1861 0CED                                        l1837 0284  
                                      l1829 024F                                        l2477 0E41  
                                      l1781 02F1                                        l1917 09D1  
                                      l2389 0901                                        l2637 0785  
                                      l2629 0756                                        l2565 0624  
                                      l2557 0614                                        l2653 05BD  
                                      l2493 019F                                        l1767 0892  
                                      l1863 0CFB                                        l1871 0D2D  
                                      l1847 02BB                                        l1791 0328  
                                      l1775 08BB                                        l1951 0A1E  
                                      l2575 063E                                        l2559 0619  
                                      l2647 079A                                        l1865 0D09  
                                      l1873 0D3E                                        l1793 0339  
                                      l1785 0304                                        l1961 0929  
                                      l2593 06AD                                        l2577 0654  
                                      l2649 07CC                                        l1867 0D17  
                                      l1859 0CDF                                        l1787 0315  
                                      l1947 0A06                                        l2587 068F  
                                      l1797 034C                                        l1973 08B2  
                                      l1799 035D                                        l1895 0EC0  
                                      l1959 0924                                        l1991 0C7A  
                                      l2599 06D3                                        l1969 08AC  
                                      l1993 0C7F                                        l1985 0C67  
                                      l1899 0ECB                                        l1989 0C6E  
                                      l1999 0C9A                                        STR_1 0816  
               __end_of_A_KeyLookUptable_U8 0816                                        u2204 02FA  
                                      u2205 02F8                                        u2214 030A  
                                      u2215 0308                                        u3015 0C9D  
                                      u2304 0376                                        u2305 0374  
                                      u3105 0BC3                                        u2234 031E  
                                      u2235 031C                                        u3115 0BD8  
                                      u2404 0255                                        u2324 038A  
                                      u2244 032E                                        u2405 0253  
                                      u2325 0388                                        u2245 032C  
                                      u3125 0BEA                                        u2334 039A  
                                      u2335 0398                                        u3055 0CB9  
                                      u2424 0269                                        u2264 0342  
                                      u2505 0CD0                                        u2425 0267  
                                      u2345 0209                                        u2265 0340  
                                      u2185 02E2                                        u2514 0CE5  
                                      u2434 0279                                        u2274 0352  
                                      u3170 03EF                                        u2515 0CE3  
                                      u2435 0277                                        u2275 0350  
                                      u2604 0D0F                                        u2364 0221  
                                      u2700 0A6E                                        u3180 03F0  
                                      u3164 03D4                                        u2605 0D0D  
                                      u2365 021F                                        u3085 0BB5  
                                      u3165 03D1                                        u2454 028D  
                                      u2374 0231                                        u2294 0366  
                                      u2710 0A7D                                        u2455 028B  
                                      u2375 022F                                        u2295 0364  
                                      u2640 0D28                                        u2544 0CF3  
                                      u2464 029D                                        u2800 0A3E  
                                      u2720 0A7E                                        u2545 0CF1  
                                      u2465 029B                                        u3425 052D  
                                      u2650 0D29                                        u2634 0D1D  
                                      u2394 0245                                        u2810 0A4D  
                                      u2730 0A8D                                        u2635 0D1B  
                                      u2395 0243                                        u2484 02B1  
                                      u2820 0A4E                                        u2740 0A8E  
                                      u2485 02AF                                        u4085 0E2E  
                                      u3365 0503                                        u2574 0D01  
                                      u2494 02C1                                        u2830 0A5D  
                                      u2750 0A9D                                        u2575 0CFF  
                                      u2495 02BF                                        u3455 0542  
                                      u3535 009D                                        u2840 0A5E  
                                      u2760 0A9E                                        u3625 0109  
                                      u3545 00AF                                        u3705 0F20  
                                      u2770 0A2D                                        u2690 0A6D  
                                      u3395 0518                                        u3635 0111  
                                      u2780 0A2E                                        u2790 0A3D  
                                      u3575 00E1                                        u3735 0F3E  
                                      u2865 09DF                                        u3585 00E9  
                                      u3675 0EF4                                        u3765 0941  
                                      u2895 0A14                                        u2975 0C73  
                                      u2995 0C8E                                __CFG_WRT$OFF 0000  
                                      _main 0D40                                ___ftpack@arg 0070  
                        __size_of_LCD_Clear 000B                                ___ftpack@exp 0073  
                                      btemp 007E                                        ltemp 007E  
                        __size_of_LCD_SetUp 00D1                                        start 0000  
                                      ttemp 007E                                        wtemp 007E  
                          __end_of_DELAY_ms 08CF                            __end_of_DELAY_us 089D  
                         ___bmul@multiplier 0023                                ___ftmul@cntr 0028  
                             ?_GPIO_PinRead 0070                                ___ftmul@sign 0029  
            __end_of_keypad_WaitForKeyPress 0C5F                              ??_LCD_CmdWrite 0077  
                             _KEYPAD_GetKey 0DBF                                 LCD_SetUp@D0 0022  
                               LCD_SetUp@D1 0023                                 LCD_SetUp@D2 0024  
                               LCD_SetUp@D3 0025                                 LCD_SetUp@D4 0026  
                               LCD_SetUp@D5 0027                                 LCD_SetUp@D6 0028  
                               LCD_SetUp@D7 0029                                 LCD_SetUp@EN 0021  
                              ___fttol@exp1 0037                                 LCD_SetUp@RS 0076  
                               LCD_SetUp@RW 0020                                ___fttol@lval 0033  
                            ??_LCD_GoToLine 007A                               _GPIO_PinWrite 0205  
                          __end_of_LCD_Init 0B48            LCD_Printf@v_numOfDigitsToDisp_u8 0060  
                   LCD_CmdWrite@v_lcdCmd_u8 0079                                       ?_main 0070  
                           __end_of___ftadd 05B2                               __CFG_WDTE$OFF 0000  
                           __end_of___ftneg 0892                             __end_of___lldiv 0BFF  
                           __end_of___ftmul 0134                             __end_of___fttol 0F61  
                     _LCD_DisplayNumber$336 003F                                       _PORTA 0005  
                                     _PORTB 0006                                       _PORTC 0007  
                                     _PORTD 0008                                       _PORTE 0009  
                                     _TRISA 0085                                       _TRISB 0086  
                                     _TRISC 0087                                       _TRISD 0088  
                                     _TRISE 0089                                ___lltoft@exp 007D  
     LCD_DisplayString@ptr_stringPointer_u8 0020                               ___ftpack@sign 0074  
                            __CFG_BOREN$OFF 0000                                       pclath 000A  
                                     ltemp0 007E                                       ltemp1 0082  
                                     ltemp2 0086                                       ltemp3 0080  
              __end_of_lcd_SendHigherNibble 0A68                         __size_of_LCD_Printf 0227  
                                     ttemp0 007E                                       ttemp1 0081  
                                     ttemp2 0084                                       ttemp3 0087  
                                     ttemp4 007F                                       status 0003  
                                     wtemp0 007E                                       wtemp1 0080  
                                     wtemp2 0082                                       wtemp3 0084  
                                     wtemp4 0086                                       wtemp5 0088  
                                     wtemp6 007F                              ??_GPIO_PinRead 0070  
                           __initialization 07D9                  GPIO_PinWrite@enm_pinNumber 0074  
                            ?_KEYPAD_GetKey 0070                                __end_of_main 0DBF  
                            ?_GPIO_PinWrite 0070                           _GPIO_PinDirection 02DE  
                                    ??_main 0062                               ___fttol@sign1 0032  
               __size_of_lcd_SendCmdSignals 002D                           __end_of_LCD_Clear 08A8  
                        ?_GPIO_PinDirection 0070                           __end_of_LCD_SetUp 0205  
                          ?_LCD_DisplayChar 0070                 LCD_DisplayChar@v_lcdData_u8 007C  
                              LCD_Printf@ch 005F                         ??_GPIO_PinDirection 0071  
                          __end_of___ftpack 0CCB                            __end_of___lltoft 0963  
                     lcd_BusyCheck@busyflag 0076                              __CFG_PWRTE$OFF 0000  
                 GPIO_PinRead@enm_pinNumber 0074                                      ___bmul 08A8  
                                 ??___ftadd 0029                                   ??___ftneg 007E  
                                 ??___lldiv 0078                                   ??___ftmul 0020  
                                 ??___fttol 002E                   __end_of_GPIO_PinDirection 03B7  
                              KEYPAD_Init@i 0021              GPIO_PinDirection@enm_pinNumber 0074  
                          DELAY_ms@ms_count 0072                       ___ftmul@f3_as_product 0025  
                         ?_LCD_GoToNextLine 0070                                   ?_DELAY_ms 0072  
                                 ?_DELAY_us 0070                 __end_of_lcd_SendLowerNibble 0AA8  
                        ??_LCD_GoToNextLine 007A                        __end_of_LCD_CmdWrite 09F3  
                      __size_of_KEYPAD_Init 0059                        __end_of_LCD_GoToLine 08E6  
               lcd_SendLowerNibble@dataByte 0076                     __end_of__initialization 07FC  
                                 ?_LCD_Init 007C                                  ___ftadd@f1 0023  
                                ___ftadd@f2 0026                     ?_LCD_DisplayFloatNumber 0043  
                                ___ftneg@f1 0020                  ??_keypad_WaitForKeyRelease 0075  
                           ??_KEYPAD_GetKey 0078                         ___bmul@multiplicand 0020  
                                ___ftmul@f1 0078                                  ___ftmul@f2 007B  
                           ??_GPIO_PinWrite 0071                                  ___fttol@f1 002A  
                            __pcstackCOMMON 0070                                __pidataBANK1 087C  
                                ___lltoft@c 0078                       __end_of_lcd_DataWrite 0A28  
                              ??_LCD_Printf 004B                        _lcd_SendHigherNibble 0A28  
                       LCD_Printf@v_num_s16 0056                         LCD_Printf@v_num_s32 0052  
                       LCD_Printf@v_num_u16 005C                         LCD_Printf@v_num_u32 0058  
                        __size_of_lcd_Reset 004F                __size_of_lcd_SendDataSignals 002E  
                                ??_DELAY_ms 0074                                  ??_DELAY_us 0072  
                      __end_of_GPIO_PinRead 0D40              GPIO_PinWrite@var_portNumber_u8 0073  
                                __pbssBANK0 006D                                  __pbssBANK1 00A0  
                     __end_of_lcd_BusyCheck 0ED3                lcd_SendHigherNibble@dataByte 0076  
              GPIO_PinWrite@var_pinValue_u8 0070                                  ??_LCD_Init 007D  
            __end_of_LCD_DisplayFloatNumber 1000                          __end_of_LCD_Printf 07D9  
                                __pmaintext 0D40                                     ?___bmul 0020  
                __size_of_GPIO_PinDirection 00D9                               LCD_Printf@ptr 005E  
                             LCD_Printf@str 0050                                   ?___ftpack 0070  
                     ?_lcd_SendHigherNibble 0070                                   ?___lltoft 0078  
                          DELAY_us@us_count 0070                                  __stringtab 0800  
                          KEYPAD_Init@col_0 0078                            KEYPAD_Init@col_1 0079  
                          KEYPAD_Init@col_2 007A                            KEYPAD_Init@col_3 007B  
                         __end_of_lcd_Reset 0AF7                            KEYPAD_Init@row_0 0020  
                          KEYPAD_Init@row_1 0075                            KEYPAD_Init@row_2 0076  
                          KEYPAD_Init@row_3 0077                             __size_of___bmul 0013  
                 LCD_Init@v_lcdNoOfLines_u8 0020                                     ___ftadd 04A9  
                                   ___ftneg 0888                                     ___lldiv 0BA1  
                                   ___ftmul 0063                                     ___fttol 0ED3  
                                ??___ftpack 0075                          LCD_DisplayNumber@a 0035  
                        LCD_DisplayNumber@i 0042                                  ??___lltoft 007C  
                                   __ptext1 0134                                     __ptext2 05B2  
                                   __ptext3 08FE                                     __ptext4 0F61  
                                   __ptext5 0938                                     __ptext6 0ED3  
                                   __ptext7 0888                                     __ptext8 0063  
                                   __ptext9 04A9                       __size_of_LCD_CmdWrite 0035  
                                 _LCDConfig 00A0                       __size_of_LCD_GoToLine 0017  
                                 _LCD_Clear 089D                KEYPAD_GetKey@v_KeyPressed_u8 007B  
                                 _LCD_SetUp 0134                                     main@key 006C  
                                   clrloop0 0881                        end_of_initialization 07FC  
              LCD_Init@v_MaxCharsPerLine_u8 007C                               _A_ColsPins_U8 00AE  
          __end_of_keypad_WaitForKeyRelease 0063                             ___lldiv@divisor 0070  
                           ___lldiv@counter 007D            LCD_DisplayFloatNumber@v_temp_u32 0047  
                    ??_lcd_SendHigherNibble 0075                  __end_of_lcd_SendCmdSignals 0990  
                              _LCD_CmdWrite 09BE                                _LCD_GoToLine 08CF  
                     __size_of_GPIO_PinRead 0075                                  ?_LCD_Clear 0070  
                                ?_LCD_SetUp 0020                           __size_of_DELAY_ms 0014  
                         __size_of_DELAY_us 000B                    ??_keypad_WaitForKeyPress 0075  
                  __size_of_LCD_DisplayChar 0021                           __size_of_LCD_Init 0051  
                 __size_of_LCD_GoToNextLine 0018                         _lcd_SendDataSignals 0990  
                               ___ftmul@exp 0024          GPIO_PinDirection@var_portNumber_u8 0073  
                              _GPIO_PinRead 0CCB                              __end_of___bmul 08BB  
                         LCD_Printf@argList 0051                    _ARR_LcdLineNumAddress_U8 00B6  
                       start_initialization 07D9                        ?_lcd_SendDataSignals 0070  
                    _v_LcdTrackCursorPos_U8 006D                               ??_KEYPAD_Init 007C  
                   keypad_WaitForKeyPress@i 0077               GPIO_PinRead@var_portNumber_u8 0072  
              __size_of_lcd_SendLowerNibble 0040             GPIO_PinDirection@var_pinDirn_u8 0070  
                     __end_of_KEYPAD_GetKey 0E47                                    ??___bmul 0021  
                     __end_of_GPIO_PinWrite 02DE                                 __pdataBANK1 00B6  
      LCD_DisplayFloatNumber@v_floatNum_f32 0043                           __size_of___ftpack 006C  
      keypad_WaitForKeyPress@v_keyStatus_u8 0076           __size_of_keypad_WaitForKeyRelease 0060  
                     ??_lcd_SendDataSignals 0075                        _v_LcdTrackLineNum_U8 006E  
                         __size_of___lltoft 002B                   ?_keypad_WaitForKeyRelease 0070  
                       _A_KeyLookUptable_U8 0806                                   ___latbits 0002  
                     lcd_DataWrite@dataByte 0079                               __pcstackBANK0 0020  
                               ??_LCD_Clear 007C                                 ??_LCD_SetUp 0075  
                    __size_of_lcd_DataWrite 0035                         __end_of_KEYPAD_Init 0BA1  
           __size_of_keypad_WaitForKeyPress 0060                 LCD_GoToLine@v_lineNumber_u8 007B  
                                  ?___ftadd 0023                                    ?___ftneg 0020  
                                  ?___lldiv 0070                                    ?___ftmul 0078  
                                  ?___fttol 002A                                   _lcd_Reset 0AA8  
                         ??_LCD_DisplayChar 007B                                   __pstrings 0800  
                    __size_of_lcd_BusyCheck 008C                           _LCD_DisplayNumber 03B7  
                            LCD_Printf@argp 0061                           _LCD_DisplayString 08FE  
                                  _DELAY_ms 08BB                                    _DELAY_us 0892  
                        ?_LCD_DisplayNumber 0024                          ?_LCD_DisplayString 0070  
                       ??_LCD_DisplayNumber 0029                                    _LCD_Init 0AF7  
                       ??_LCD_DisplayString 007D                                   clear_ram0 0880  
                          _LCD_GoToNextLine 08E6                                  ?_lcd_Reset 0070  
                             _lcd_DataWrite 09F3                    GPIO_PinRead@returnStatus 0073  
                 __end_of_LCD_DisplayNumber 04A9                                 __stringbase 0805  
                             _A_RowsPins_U8 00B2                      _keypad_WaitForKeyPress 0BFF  
                 __end_of_LCD_DisplayString 0917                                 _KEYPAD_Init 0B48  
                        _lcd_SendCmdSignals 0963                    ??_LCD_DisplayFloatNumber 0046  
                             _lcd_BusyCheck 0E47                         ?_lcd_SendCmdSignals 0070  
                            ?_lcd_DataWrite 0070                            __size_of___ftadd 0109  
                          __size_of___ftneg 000A                            __size_of___lldiv 005E  
                          __size_of___ftmul 00D1                            __size_of___fttol 008E  
                                  ___ftpack 0C5F                          __end_of__stringtab 0806  
                      ??_lcd_SendCmdSignals 0075                                    ___lltoft 0938  
             __size_of_lcd_SendHigherNibble 0040                         _lcd_SendLowerNibble 0A68  
                            KEYPAD_GetKey@i 007D                              KEYPAD_GetKey@j 007C  
                                  __ptext10 0C5F                                    __ptext11 03B7  
                                  __ptext20 089D                                    __ptext12 0BA1  
                                  __ptext21 08CF                                    __ptext13 08A8  
                                  __ptext30 0DBF                                    __ptext22 09BE  
                                  __ptext14 0917                                    __ptext31 0003  
                                  __ptext23 0A68                                    __ptext15 09F3  
                                  __ptext32 0BFF                                    __ptext24 0A28  
                                  __ptext16 0990                                    __ptext33 0205  
                                  __ptext25 0963                                    __ptext17 08E6  
                                  __ptext34 0CCB                                    __ptext26 0E47  
                                  __ptext18 0AF7                                    __ptext35 0892  
                                  __ptext27 08BB                                    __ptext19 0AA8  
                                  __ptext28 0B48                                    __ptext29 02DE  
                            ?_lcd_BusyCheck 0070         LCD_DisplayNumber@v_numericSystem_u8 0041  
                             __size_of_main 007F                        ?_lcd_SendLowerNibble 0070  
                               ??_lcd_Reset 0077                                  _LCD_Printf 05B2  
                __size_of_LCD_DisplayNumber 00F2                  __size_of_LCD_DisplayString 0019  
                 keypad_WaitForKeyRelease@i 0077             __size_of_LCD_DisplayFloatNumber 009F  
                     ??_lcd_SendLowerNibble 0075                            ___lldiv@dividend 0074  
                           _LCD_DisplayChar 0917                                   stringcode 0800  
                           ??_lcd_DataWrite 0077                 __end_of_lcd_SendDataSignals 09BE  
                  LCD_Printf@v_floatNum_f32 004D                            ___lldiv@quotient 0079  
                  __end_of_LCD_GoToNextLine 08FE                                    stringdir 0800  
                                  stringtab 0800  LCD_DisplayNumber@v_numOfDigitsToDisplay_u8 0028  
                           ??_lcd_BusyCheck 0075                      __size_of_KEYPAD_GetKey 0088  
                    __size_of_GPIO_PinWrite 00D9               LCD_DisplayNumber@v_number_u32 0024  
